type,issue_url,comment_url,repo_name,id,issue_num,title,user_login,user_id,user_name,user_email,issue_state,created_at,updated_at,body,reactions
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/2,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/2,eclipse.jdt.debug,1189800197,2,Remove leftover from bug 148006 fix,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2022-04-01T13:29:54Z,2022-05-17T18:33:41Z,"Bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=148006 introduced a coding mistake in code below.
https://github.com/eclipse-jdt/eclipse.jdt.debug/blob/0c8c6d9fa30cda3c83741613f6ea4c541c037973/org.eclipse.jdt.debug.ui/ui/org/eclipse/jdt/internal/debug/ui/console/JavaStackTraceConsole.java#L212

It makes no sense to join on the job instance. What was meant, was the outer JavaStackTraceConsole instance.
So we still see errors if console changes the document on which the MatchJob is working.

But fixing that would introduce deadlocks like in bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=451797

So I propose to simply delete this no-op line that was there since ever.

Note: the bug that was meant to be fixed: when the console format runs in parallel to the MatchJob running, it should wait.
But waiting in UI thread mean **freeze**.

See 

- https://github.com/eclipse-platform/eclipse.platform.debug/blob/3b7d7349538485b24b59a1bddff98836af64b96a/org.eclipse.ui.console/src/org/eclipse/ui/internal/console/ConsolePatternMatcher.java#L76
- https://github.com/eclipse-platform/eclipse.platform.debug/blob/3b7d7349538485b24b59a1bddff98836af64b96a/org.eclipse.ui.console/src/org/eclipse/ui/internal/console/ConsolePatternMatcher.java#L176
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/4,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/4,eclipse.jdt.debug,1189833485,4,No build verification on Jenkins,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2022-04-01T13:55:45Z,2022-04-20T16:17:44Z,"See #3. No tests/build verification.

@SarikaSinha : FYI. Are you still working on that, or is this a bug?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/4,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5AuiaW,eclipse.jdt.debug,1085941398,4,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-04-01T14:01:56Z,2022-04-01T14:01:56Z,"OK, that was same issue like with platfrom resources, where jenkins needed ~10 minutes to find the change. Now I see the job is started.

@jonahgraham : could you please help to remember, what and where need to be fixed?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5AuiaW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/4,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Aup0f,eclipse.jdt.debug,1085971743,4,NA,jonahgraham,679236,Jonah Graham,jonah@kichwacoders.com,NA,2022-04-01T14:26:48Z,2022-04-01T14:26:48Z,@iloveeclipse https://gitlab.eclipse.org/eclipsefdn/helpdesk/-/issues/1076#note_647840 - I have now responded to Fred to say yes all repos.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Aup0f/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/6,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/6,eclipse.jdt.debug,1190542420,6,Can't set a breakpoint in lambda using expression,jmini,1222165,Jérémie Bresson,dev@jmini.fr,CLOSED,2022-04-02T07:40:21Z,2022-04-05T15:22:38Z,"Given this java source class:

```java
package example;

import java.util.Arrays;
import java.util.List;
import java.util.Optional;

public class Main {

	public static void main(String[] args) {
		Person p1 = new Person(""John"", ""Smith"");
		Person p2 = new Person(""Bob"", ""Doe"", ""1245"");
		List<Person> list = Arrays.asList(p1, p2);
		list.stream().forEach(p -> p.getId()
				.ifPresent(id -> {
					System.out.println(p.getFirstName() + "" "" + p.getLastName()); //<-- line 15
					System.out.println(id);
				}));
		System.out.println(""DONE""); //<-- line 18
	}

	private static class Person {
		private String firstName;
		private String lastName;
		private Optional<String> id;

		public Person(String firstName, String lastName) {
			super();
			this.firstName = firstName;
			this.lastName = lastName;
			this.id = Optional.empty();
		}
		public Person(String firstName, String lastName, String id) {
			super();
			this.firstName = firstName;
			this.lastName = lastName;
			this.id = Optional.of(id);
		}

		public String getFirstName() {
			return firstName;
		}

		public String getLastName() {
			return lastName;
		}

		public Optional<String> getId() {
			return id;
		}
	}
}
```

With Eclipse 2022-03, when you try to put a breakpoint in line 15, it is set on line 18.

As demonstrated in this animation:

![Eclipse-breakpoints](https://user-images.githubusercontent.com/1222165/161371730-8319d990-51d7-4f8c-afaf-c02886982260.gif)


---
As a comparison with JDT from Eclipse 2021-12, the breakpoint can be set on the same line.

And the debugger stops at the defined place:

<img width=""1059"" alt=""Screenshot with Eclipse 2021-12"" src=""https://user-images.githubusercontent.com/1222165/161371786-5d5a882c-e4ba-4c2d-8ad5-7aa02a0785e4.png"">

---
With 2022-03, if the code is modified to convert the first lambda to a block instead of an expression:


```java
	public static void main(String[] args) {
		Person p1 = new Person(""John"", ""Smith"");
		Person p2 = new Person(""Bob"", ""Doe"", ""1245"");
		List<Person> list = Arrays.asList(p1, p2);
		list.stream().forEach(p -> {
			p.getId()
					.ifPresent(id -> {
						System.out.println(p.getFirstName() + "" "" + p.getLastName()); //<-- line 16
						System.out.println(id);
					});
		});
		System.out.println(""DONE"");
	}
```

Then a breakpoint can be set on line 16, and it is working as expected.

<img width=""1204"" alt=""Screenshot with Eclipse 2022-03, with a block"" src=""https://user-images.githubusercontent.com/1222165/161371984-dacc2d38-a205-4701-aa7f-1dedcc81cec5.png"">

---

This example is adapted from a real example.
With libraries like RxJava we have a lot of code with lambda and even lambda in lambda.

Code-review tools like SonarLint encourage you to turn single-line block to expression: [java:S1602](https://next.sonarqube.com/sonarqube/coding_rules?open=java%3AS1602&rule_key=java%3AS1602)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/6/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/6,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5AziGF,eclipse.jdt.debug,1087250821,6,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-04-04T08:14:12Z,2022-04-04T08:14:12Z,"Probably regression from https://bugs.eclipse.org/bugs/show_bug.cgi?id=486264.
Possible patch:
```
diff --git a/org.eclipse.jdt.debug/model/org/eclipse/jdt/internal/debug/core/breakpoints/ValidBreakpointLocationLocator.java b/org.eclipse.jdt.debug/model/org/eclipse/jdt/internal/debug/core/breakpoints/ValidBreakpointLocationLocator.java
index e758b1e..25ca639 100644
--- a/org.eclipse.jdt.debug/model/org/eclipse/jdt/internal/debug/core/breakpoints/ValidBreakpointLocationLocator.java
+++ b/org.eclipse.jdt.debug/model/org/eclipse/jdt/internal/debug/core/breakpoints/ValidBreakpointLocationLocator.java
@@ -1069,2 +1069,4 @@
 					body.accept(this);
+				} else if (body instanceof MethodInvocation) {
+					body.accept(this);
 				}
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5AziGF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/6,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5A1fTG,eclipse.jdt.debug,1087763654,6,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-04-04T16:25:21Z,2022-04-04T16:25:21Z,"Fixed by #7 
Thanks Andrey!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5A1fTG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/6,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5A5rF_,eclipse.jdt.debug,1088860543,6,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-04-05T15:22:38Z,2022-04-05T15:22:38Z,Verified with I20220405-0600,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5A5rF_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/8,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/8,eclipse.jdt.debug,1192688325,8,Update JDT launching to ASM 9.3,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2022-04-05T06:39:51Z,2022-04-09T19:33:36Z,"ASM 9.3 is released, with support for Java 19.
See https://asm.ow2.io/versions.html#9.3

We should update JDT to use it, once the bundle is in Orbit, see https://bugs.eclipse.org/bugs/show_bug.cgi?id=579574

Related bug for PDE is https://github.com/eclipse-pde/eclipse.pde.ui/issues/11","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/8,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5BNp9A,eclipse.jdt.debug,1094098752,8,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2022-04-09T18:11:16Z,2022-04-09T18:11:16Z,Done with https://github.com/eclipse-platform/eclipse.platform.releng.aggregator/commit/8f79635e7217ecb24dbc209b964711e66a8f322d,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5BNp9A/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/9,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/9,eclipse.jdt.debug,1192736777,9,NPE on clicking link in console to missing resource,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2022-04-05T07:23:45Z,2022-04-05T12:15:16Z,"Open Java Stack Trace Console, paste snippet below and try to click on `DispatchingTest.java`.
Note: org.eclipse.equinox.http.servlet.tests project should not exist in the workspace.

```
org.junit.ComparisonFailure: expected:<foo=ba[z]> but was:<foo=ba[r]>
at org.junit.Assert.assertEquals(Assert.java:117)
at org.junit.Assert.assertEquals(Assert.java:146)
at org.eclipse.equinox.http.servlet.tests.DispatchingTest.test_headers_forward(DispatchingTest.java:1411)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
```

Result: NPE below.

```
java.lang.NullPointerException
	at org.eclipse.jdt.internal.debug.ui.console.JavaStackTraceHyperlink$1.run(JavaStackTraceHyperlink.java:131)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
```

This is a regression from #5 ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/9,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5A34DE,eclipse.jdt.debug,1088389316,9,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-04-05T08:00:37Z,2022-04-05T08:00:37Z,"if (((List<?>) result).isEmpty()) {
	result = null;
}
else if (((List<?>) result).size() == 1) {
	result = ((List<?>) result).get(0);
}
Will this not be sufficient? @iloveeclipse ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5A34DE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/9,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5A35Rw,eclipse.jdt.debug,1088394352,9,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-04-05T08:04:40Z,2022-04-05T08:04:40Z,"> if (((List) result).isEmpty()) { result = null; } else if (((List) result).size() == 1) { result = ((List<?>) result).get(0); } Will this not be sufficient? @iloveeclipse

Yes, but all the casts look not nice :-)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5A35Rw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/9,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5A4y8q,eclipse.jdt.debug,1088630570,9,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-04-05T12:15:16Z,2022-04-05T12:15:16Z,Verified fix with I20220405-0600,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5A4y8q/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/11,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/11,eclipse.jdt.debug,1194833639,11,"Lot of ""Invalid thread access"" errors during console tests",iloveeclipse,964108,Andrey Loskutov,,CLOSED,2022-04-06T16:18:05Z,2022-04-06T17:30:37Z,"Looking on the logs for the console crash in jdt.debug.tests in https://download.eclipse.org/eclipse/downloads/drops4/I20220405-0600/testResults.php I've stumbled over the fact that we have lot of test code that accesses console from non UI thread, resulting in SWT errors like 
```
org.eclipse.swt.SWTException: Invalid thread access
	at org.eclipse.swt.SWT.error(SWT.java:4918)
	at org.eclipse.swt.SWT.error(SWT.java:4833)
	at org.eclipse.swt.SWT.error(SWT.java:4804)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:447)
	at org.eclipse.swt.widgets.Widget.checkWidget(Widget.java:367)
	at org.eclipse.swt.widgets.IME.getCompositionOffset(IME.java:157)
	at org.eclipse.swt.custom.StyledText.handleTextChanged(StyledText.java:6547)
	at org.eclipse.swt.custom.StyledText$5.textChanged(StyledText.java:5912)
	at org.eclipse.ui.internal.console.ConsoleDocumentAdapter.documentChanged(ConsoleDocumentAdapter.java:588)
	at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged2(AbstractDocument.java:748)
	at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged(AbstractDocument.java:717)
	at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged(AbstractDocument.java:701)
	at org.eclipse.jface.text.AbstractDocument.fireDocumentChanged(AbstractDocument.java:775)
	at org.eclipse.jface.text.AbstractDocument.set(AbstractDocument.java:1140)
	at org.eclipse.jface.text.AbstractDocument.set(AbstractDocument.java:1123)
	at org.eclipse.ui.internal.console.ConsoleDocument.set(ConsoleDocument.java:79)
	at org.eclipse.ui.console.TextConsole.clearConsole(TextConsole.java:349)
	at org.eclipse.jdt.debug.tests.console.AbstractJavaStackTraceConsoleTest.removeConsole(AbstractJavaStackTraceConsoleTest.java:118)
	at org.eclipse.jdt.debug.tests.console.AbstractJavaStackTraceConsoleTest.tearDown(AbstractJavaStackTraceConsoleTest.java:79)
```

We should fix that.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/11/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/13,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/13,eclipse.jdt.debug,1194911064,13,No freeze check configured ,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2022-04-06T17:32:22Z,2022-04-20T16:17:25Z,"See #12 checks. There should be one failing.

Once there is solution for https://github.com/eclipse-platform/eclipse.platform.releng/pull/24, we should use it. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/13/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/18,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/18,eclipse.jdt.debug,1199512459,18,Update Jenkins File with timestamp and JUnit reports,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,CLOSED,2022-04-11T07:25:50Z,2022-04-11T10:06:17Z,Test failures are not properly shown ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/18/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/20,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/20,eclipse.jdt.debug,1200346929,20,"Back porting 579099 , 579100 and 579650 to 4.23",SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,CLOSED,2022-04-11T18:05:46Z,2022-04-12T05:59:22Z,Fixing the regression in inserting breakpoints inside Lambda.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/20/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/23,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/23,eclipse.jdt.debug,1204360279,23,No links in process console / Java stack trace console for stack traces with module names,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2022-04-14T10:33:21Z,2022-05-17T18:32:39Z,"Start jvm with argument `-Dfile.encoding=` (no charset defined by mistake).
No links in process console / Java stack trace console for stack traces with module names
```
Error occurred during initialization of VM
java.nio.charset.IllegalCharsetNameException: 
	at java.nio.charset.Charset.checkName(java.base/Charset.java:296)
	at java.nio.charset.Charset.lookup2(java.base/Charset.java:482)
	at java.nio.charset.Charset.lookup(java.base/Charset.java:462)
	at java.nio.charset.Charset.defaultCharset(java.base/Charset.java:608)
	at java.io.OutputStreamWriter.<init>(java.base/OutputStreamWriter.java:110)
	at java.io.PrintStream.<init>(java.base/PrintStream.java:110)
	at java.io.PrintStream.<init>(java.base/PrintStream.java:148)
	at java.lang.System.newPrintStream(java.base/System.java:1898)
	at java.lang.System.initPhase1(java.base/System.java:1974)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/23/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/23,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C-DAW,eclipse.jdt.debug,1123561494,23,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-05-11T10:42:46Z,2022-05-11T10:42:46Z,What is the expectation here? ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C-DAW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/23,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C-Fee,eclipse.jdt.debug,1123571614,23,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-05-11T10:53:45Z,2022-05-11T10:53:45Z,All the classes formatted like `java.base/Charset.java:296` should be underlined. Right now they aren't,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C-Fee/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/23,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C-LSp,eclipse.jdt.debug,1123595433,23,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-05-11T11:18:50Z,2022-05-11T11:18:50Z,"@trancexpress , @jukzi : I wonder if you can look on your recent changes and improve the regex used? Would be faster as if I would do that.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C-LSp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/23,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C-ShO,eclipse.jdt.debug,1123625038,23,NA,trancexpress,24752155,Simeon Andreev,,NA,2022-05-11T11:34:28Z,2022-05-11T11:34:28Z,"> @trancexpress , @jukzi : I wonder if you can look on your recent changes and improve the regex used? Would be faster as if I would do that.

I don't think this relates to the changes for parsing Debug view stack traces? The format above is from Java. I can look into that too, sure.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C-ShO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/23,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C-Y6m,eclipse.jdt.debug,1123651238,23,NA,trancexpress,24752155,Simeon Andreev,,NA,2022-05-11T11:54:57Z,2022-05-11T11:54:57Z,"The pattern seems to not be provided in the ```plugin.xml``` file, instead its constructed here:

```
""main"" #1 prio=6 os_prio=0 cpu=8460.31ms elapsed=132.91s tid=0x00007ffff0018000 nid=0xe39e runnable  [0x00007ffff7fc8000]
   java.lang.Thread.State: RUNNABLE
        at org.eclipse.jdt.internal.debug.ui.console.JavaLikeExtensionsResolver.resolveValue(JavaLikeExtensionsResolver.java:33)
        at org.eclipse.core.internal.variables.DynamicVariable.getValue(DynamicVariable.java:56)
        at org.eclipse.core.internal.variables.StringSubstitutionEngine.resolve(StringSubstitutionEngine.java:271)
        at org.eclipse.core.internal.variables.StringSubstitutionEngine.substitute(StringSubstitutionEngine.java:195)
        at org.eclipse.core.internal.variables.StringSubstitutionEngine.performStringSubstitution(StringSubstitutionEngine.java:91)
        at org.eclipse.core.internal.variables.StringVariableManager.performStringSubstitution(StringVariableManager.java:547)
        at org.eclipse.ui.internal.console.PatternMatchListenerExtension.getPattern(PatternMatchListenerExtension.java:109)
        at org.eclipse.ui.internal.console.PatternMatchListener.getPattern(PatternMatchListener.java:34)
        at org.eclipse.ui.internal.console.ConsolePatternMatcher.addPatternMatchListener(ConsolePatternMatcher.java:220)
        - locked <0x000000014acc0738> (a java.util.ArrayList)
        at org.eclipse.ui.console.TextConsole.addPatternMatchListener(TextConsole.java:454)
        at org.eclipse.ui.internal.console.ConsoleManager.createPatternMatchListeners(ConsoleManager.java:408)
        at org.eclipse.ui.internal.console.ConsoleManager.addConsoles(ConsoleManager.java:209)
        - locked <0x00000001506ea2c0> (a java.util.ArrayList)
        at org.eclipse.jdt.debug.ui.console.JavaStackTraceConsoleFactory.openConsole(JavaStackTraceConsoleFactory.java:76)
        at org.eclipse.jdt.debug.ui.console.JavaStackTraceConsoleFactory.openConsole(JavaStackTraceConsoleFactory.java:58)
        at org.eclipse.jdt.debug.tests.console.AbstractJavaStackTraceConsoleTest.initConsole(AbstractJavaStackTraceConsoleTest.java:91)
        at org.eclipse.jdt.debug.tests.console.AbstractJavaStackTraceConsoleTest.lambda$0(AbstractJavaStackTraceConsoleTest.java:74)
        at org.eclipse.jdt.debug.tests.console.AbstractJavaStackTraceConsoleTest$$Lambda$768/0x00000008409bc440.run(Unknown Source)
        at org.eclipse.jdt.debug.tests.ui.AbstractDebugUiTests.lambda$5(AbstractDebugUiTests.java:203)
        at org.eclipse.jdt.debug.tests.ui.AbstractDebugUiTests$$Lambda$769/0x00000008409f7840.run(Unknown Source)
        at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:183)
        at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
        at org.eclipse.swt.widgets.Display.syncExec(Display.java:5912)
        at org.eclipse.jdt.debug.tests.ui.AbstractDebugUiTests.sync(AbstractDebugUiTests.java:201)
        at org.eclipse.jdt.debug.tests.console.AbstractJavaStackTraceConsoleTest.setUp(AbstractJavaStackTraceConsoleTest.java:74)
        at junit.framework.TestCase.runBare(TestCase.java:140)
        at org.eclipse.jdt.debug.tests.AbstractDebugTest.runBare(AbstractDebugTest.java:2671)
```

In particular ```\(\w*${java_extensions_regex}\S*\)``` (from the ```plugin.xml```) gets translated to ```\(\w*(\.java:|\.bar:|\.foo:)\S*\)``` by this code. I wonder if the slash is the problem here?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C-Y6m/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/23,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C-hz1,eclipse.jdt.debug,1123687669,23,NA,trancexpress,24752155,Simeon Andreev,,NA,2022-05-11T12:23:23Z,2022-05-11T12:23:23Z,"No idea how to correctly link my PR to this issue and how to formulate the commit message. @iloveeclipse ?

https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/46","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C-hz1/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/23,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C-lUu,eclipse.jdt.debug,1123702062,23,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-05-11T12:34:57Z,2022-05-11T12:34:57Z,"> No idea how to correctly link my PR to this issue and how to formulate the commit message. ?

I personally use git history A LOT and I appreciate if the full link to the issue would be added to the commit message, so one can open the github ticket directly from Eclipse without extra steps.

In general, we have a guideline to put the issue number to the commit message like:
```
No links in process console / Java stack trace console for stack traces with module names (Fixes #23)

This commit does some very clever things like ....
- bla
- blup
- etc

See https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/23
```

The last line :point_up: is for me :-)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C-lUu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/23,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C-mU9,eclipse.jdt.debug,1123706173,23,NA,jukzi,51790620,Jörg Kubitz,,NA,2022-05-11T12:39:01Z,2022-05-11T12:39:01Z,"its not only the issue number, but also a magic word thats needs to be added to get the link:
see
https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue
""fixes"" is one of them","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C-mU9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/23,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5DMOA_,eclipse.jdt.debug,1127276607,23,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-05-16T06:35:30Z,2022-05-16T06:35:30Z,Verified with I20220515-1800. Thanks Simeon.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5DMOA_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/24,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/24,eclipse.jdt.debug,1204367502,24,"No way to start a process without ""-Dfile.encoding"" specified",iloveeclipse,964108,Andrey Loskutov,,CLOSED,2022-04-14T10:41:34Z,2023-05-25T12:54:46Z,"I'm trying to debug encoding issues with resources init, and using publicly available tooling (without hacking debugger code) I'm unable to start JVM **without** ""-Dfile.encoding"" specified, because `org.eclipse.jdt.internal.launching.StandardVMRunner.ensureEncoding(ILaunch, String[])` **always** sets **some** value

because `org.eclipse.debug.internal.core.LaunchConfiguration.launch(String, IProgressMonitor, boolean, boolean)` that always set console encoding to some value 

because `org.eclipse.debug.internal.core.LaunchManager.getEncoding(ILaunchConfiguration)` always returns some value.
That is insane...","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/24/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/24,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5DPII4,eclipse.jdt.debug,1128038968,24,NA,jukzi,51790620,Jörg Kubitz,,NA,2022-05-16T19:13:02Z,2022-05-16T19:13:02Z,"Unfortunately that is according to the documented API for both
org.eclipse.debug.core.ILaunchManager.getEncoding(ILaunchConfiguration)
and
org.eclipse.core.resources.ResourcesPlugin.getEncoding()


However i would prefer if the default for launching would be to use NO encoding setting by default.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5DPII4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/24,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5DPIrW,eclipse.jdt.debug,1128041174,24,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-05-16T19:15:12Z,2022-05-16T19:15:12Z,"I haven't checked that deeper, but an explicit option ""don't mess up with encoding"" is surely possible in the launch config UI.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5DPIrW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/24,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5dJm2K,eclipse.jdt.debug,1562799498,24,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-05-25T12:12:19Z,2023-05-25T12:12:19Z,This was fixed with https://github.com/eclipse-platform/eclipse.platform.debug/issues/42. please close.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5dJm2K/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/25,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/25,eclipse.jdt.debug,1204956990,25,Preferences - Step Filtering - Defined step filters cannot be stored,derWallace,718989,Stefan Wallner,,CLOSED,2022-04-14T20:38:58Z,2022-05-17T18:32:08Z,"Eclipse version:  2022-03:  
It seems the step filters selected in the Step Filtering Preference page are not shown anymore correctly.    

+ open fresh Eclipse workspace
+ open Step Filtering preference page
+ activate Use Step Fitlers
+ select unselected step filter
+ click on Apply
+ click on Apply and Close
+ open Preferences for Step Filtering again
+ newly selected step filter still is unselected

see also: https://stackoverflow.com/questions/71688010/cant-edit-definded-step-filters-in-eclipse","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/25/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/25,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5BjBT8,eclipse.jdt.debug,1099699452,25,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-04-14T22:55:37Z,2022-04-14T22:55:37Z,"This was fixed by Bug 576615 - https://bugs.eclipse.org/bugs/show_bug.cgi?id=576615

This fix was made post-4.23 and is in 4.24 M1.  It has also recently been back-ported to the R4_23_maintenance branch.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5BjBT8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/25,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5BjwOL,eclipse.jdt.debug,1099891595,25,NA,derWallace,718989,Stefan Wallner,,NA,2022-04-15T06:31:45Z,2022-04-15T06:31:45Z,@jjohnstn Thank you for your hint. I tested with  4.24 M1 and it works again as you described.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5BjwOL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/26,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/26,eclipse.jdt.debug,1205446974,26,Cannot put breakpoint in lambda in Java Editor,grozadanut,25885195,Groza Danut,,CLOSED,2022-04-15T09:54:28Z,2022-04-20T16:23:59Z,"After I updated to a new version of Eclipse:
Version: 2022-03 (4.23.0)
Build id: 20220310-1457

I can no longer put breakpoints inside multi-line lambdas. Please see the video: https://vimeo.com/699728084/395899231e

The breakpoint is added at the end of the lambda. Prior to the update this was working. Also if I open the file in Text Editor instead of Java Editor it works. I was not able to find any setting for this behaviour in the Preferences.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/26/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/26,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5BolNt,eclipse.jdt.debug,1101157229,26,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-04-18T06:59:07Z,2022-04-18T06:59:07Z,"Duplicate of https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/6

Please try 4.24 M1 build or later.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5BolNt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/27,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/27,eclipse.jdt.debug,1206696192,27,[Bug] Project fails to launch,Monniasza,37037712,,,OPEN,2022-04-16T19:01:55Z,2022-05-11T09:55:53Z,"Eclipse IDE version: 2022.03
Plugins:
- WindowBuilder 1.9.8
- SonarLint 7.3.1

How to reproduce:
1. Download the included project
2. Import the project
3. Run the project from `Generator` class

Expected result:
A window with controls shows up

Actual result:
The error message shown below pops up
```
An internal error occurred during: ""Launching Generator"".
org/eclipse/jdt/debug/core/JDIDebugModel
```

Files:
[Project archive](https://github.com/eclipse-jdt/eclipse.jdt.core/files/8500473/MeaninglessRussianAmigurumis.zip)
[Error log](https://github.com/eclipse-jdt/eclipse.jdt.core/files/8500481/error.log)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/27/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/27,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5BocCm,eclipse.jdt.debug,1101119654,27,NA,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,NA,2022-04-18T05:43:07Z,2022-04-18T05:43:07Z,"@SarikaSinha, can I transfer this to debug?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5BocCm/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/27,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Boc41,eclipse.jdt.debug,1101123125,27,NA,Monniasza,37037712,,,NA,2022-04-18T06:02:16Z,2022-04-18T06:02:16Z,The issue disappears once JRE 11 is installed (without it even showing up in Eclipse). ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Boc41/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/27,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Bovqy,eclipse.jdt.debug,1101200050,27,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-04-18T08:09:49Z,2022-04-18T08:09:49Z,"I launched with Java 8 and 11, in both the cases I got the dialog to Enter ""Number of Parts"" etc.
Am I missing something to reproduce?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Bovqy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/27,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C9tiS,eclipse.jdt.debug,1123473554,27,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-05-11T09:55:53Z,2022-05-11T09:55:53Z,"@Monniasza 
ping!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C9tiS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/28,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/28,eclipse.jdt.debug,1209401172,28,OpenFromClipboardTests still randomly fail,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2022-04-20T09:11:42Z,2023-12-04T13:22:05Z,"I assume something like running other jobs (charset delta, autobuild) etc might confuse Java search.
Let disable autobuild, wait for charset delta job that might be running & see if that helps.

https://download.eclipse.org/eclipse/downloads/drops4/I20220419-1800/testresults/html/org.eclipse.jdt.debug.tests_ep424I-unit-cen64-gtk3-java18_linux.gtk.x86_64_18.html
```
junit.framework.AssertionFailedError: expected:<1> but was:<0>
at junit.framework.Assert.fail(Assert.java:57)
at junit.framework.Assert.failNotEquals(Assert.java:329)
at junit.framework.Assert.assertEquals(Assert.java:78)
at junit.framework.Assert.assertEquals(Assert.java:234)
at junit.framework.Assert.assertEquals(Assert.java:241)
at junit.framework.TestCase.assertEquals(TestCase.java:384)
at org.eclipse.jdt.debug.tests.ui.OpenFromClipboardTests.testStackElement_2(OpenFromClipboardTests.java:587)
```
https://download.eclipse.org/eclipse/downloads/drops4/I20220419-1800/testresults/html/org.eclipse.jdt.debug.tests_ep424I-unit-win32-java11_win32.win32.x86_64_11.html
```
junit.framework.AssertionFailedError: expected:<1> but was:<0>
at junit.framework.Assert.fail(Assert.java:57)
at junit.framework.Assert.failNotEquals(Assert.java:329)
at junit.framework.Assert.assertEquals(Assert.java:78)
at junit.framework.Assert.assertEquals(Assert.java:234)
at junit.framework.Assert.assertEquals(Assert.java:241)
at junit.framework.TestCase.assertEquals(TestCase.java:384)
at org.eclipse.jdt.debug.tests.ui.OpenFromClipboardTests.testMember_1(OpenFromClipboardTests.java:462)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/28/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/28,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5B45fv,eclipse.jdt.debug,1105434607,28,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-04-21T16:18:57Z,2022-04-21T16:18:57Z,"https://download.eclipse.org/eclipse/downloads/drops4/I20220420-1800/testResults.php is OK, few builds before we had fails in every build. But we also had one build with no fails, so let keep it open for a while and monitor.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5B45fv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/28,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5B7kkD,eclipse.jdt.debug,1106135299,28,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-04-22T07:58:53Z,2022-04-22T07:58:53Z,"Failed again: https://download.eclipse.org/eclipse/downloads/drops4/I20220421-1910/testresults/html/org.eclipse.jdt.debug.tests_ep424I-unit-mac64-java17_macosx.cocoa.x86_64_17.html
```
expected:<1> but was:<0>

junit.framework.AssertionFailedError: expected:<1> but was:<0>
at junit.framework.Assert.fail(Assert.java:57)
at junit.framework.Assert.failNotEquals(Assert.java:329)
at junit.framework.Assert.assertEquals(Assert.java:78)
at junit.framework.Assert.assertEquals(Assert.java:234)
at junit.framework.Assert.assertEquals(Assert.java:241)
at junit.framework.TestCase.assertEquals(TestCase.java:384)
at org.eclipse.jdt.debug.tests.ui.OpenFromClipboardTests.testMember_3(OpenFromClipboardTests.java:491)
```

```
junit.framework.AssertionFailedError: expected:<1> but was:<0>
at junit.framework.Assert.fail(Assert.java:57)
at junit.framework.Assert.failNotEquals(Assert.java:329)
at junit.framework.Assert.assertEquals(Assert.java:78)
at junit.framework.Assert.assertEquals(Assert.java:234)
at junit.framework.Assert.assertEquals(Assert.java:241)
at junit.framework.TestCase.assertEquals(TestCase.java:384)
at org.eclipse.jdt.debug.tests.ui.OpenFromClipboardTests.testMethod_6(OpenFromClipboardTests.java:390)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5B7kkD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/28,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5PC0hb,eclipse.jdt.debug,1326139483,28,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-11-24T08:57:16Z,2022-11-24T08:57:16Z,"https://download.eclipse.org/eclipse/downloads/drops4/I20221123-1800/testresults/html/org.eclipse.jdt.debug.tests_ep426I-unit-mac64-java17_macosx.cocoa.x86_64_17.html

https://download.eclipse.org/eclipse/downloads/drops4/I20221123-1800/testresults/html/org.eclipse.jdt.debug.tests_ep426I-unit-cen64-gtk3-java17_linux.gtk.x86_64_17.html","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5PC0hb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/28,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5dN3vW,eclipse.jdt.debug,1563917270,28,NA,subyssurendran666,117082823,Suby S Surendran,suby.surendran@ibm.com,NA,2023-05-26T07:15:38Z,2023-05-26T07:15:38Z,"Failed again 
[https://download.eclipse.org/eclipse/downloads/drops4/I20230525-0350/testresults/html/org.eclipse.jdt.debug.tests_ep428I-unit-cen64-gtk3-java17_linux.gtk.x86_64_17.html](https://download.eclipse.org/eclipse/downloads/drops4/I20230525-0350/testresults/html/org.eclipse.jdt.debug.tests_ep428I-unit-cen64-gtk3-java17_linux.gtk.x86_64_17.html)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5dN3vW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/28,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5dxMCF,eclipse.jdt.debug,1573175429,28,NA,Shee43,122248524,Sheena,,NA,2023-06-02T05:29:16Z,2023-06-02T05:29:16Z,"Failed again 
https://download.eclipse.org/eclipse/downloads/drops4/I20230601-1220/testresults/html/org.eclipse.jdt.debug.tests_ep428I-unit-mac64-java17_macosx.cocoa.x86_64_17.html","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5dxMCF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/28,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ghzLn,eclipse.jdt.debug,1619473127,28,NA,Shee43,122248524,Sheena,,NA,2023-07-04T04:42:26Z,2023-07-04T04:42:26Z,"Failed again
https://download.eclipse.org/eclipse/downloads/drops4/I20230703-0600/testresults/html/org.eclipse.jdt.debug.tests_ep429I-unit-cen64-gtk3-java20_linux.gtk.x86_64_20.html","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ghzLn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/28,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5g2SWv,eclipse.jdt.debug,1624843695,28,NA,fedejeanne,2205684,Federico Jeanne,,NA,2023-07-07T06:52:42Z,2023-07-07T06:52:42Z,`org.eclipse.jdt.debug.tests.ui.OpenFromClipboardTests.testMethod_6` failed again in [this check](https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/277/checks?check_run_id=14828844308) of #277 ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5g2SWv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/28,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5g4GJV,eclipse.jdt.debug,1625317973,28,NA,fedejeanne,2205684,Federico Jeanne,,NA,2023-07-07T12:08:01Z,2023-07-07T12:08:01Z,"I created a PR to help identify the underlying cause of the failures --> #279 .

I do have a question though, perhaps someone has a hint. Does anyone know why the call to `fAccessor.invoke(""getJavaElementMatches"", ... )` in the private method `OpenFromClipboardTests::getJavaElementMatches(String)` needs to run through the `Display` class? I mean why call:
```
Display.getDefault().syncExec(new Runnable() {
			@Override
			public void run() {
				fAccessor.invoke(""getJavaElementMatches"", new Class[] { String.class, List.class }, new Object[] { textData, matches });
			}
		});
```
... when I can simply call:
```
fAccessor.invoke(""getJavaElementMatches"", new Class[] { String.class, List.class }, new Object[] { textData, matches });
```

?

Is it just to make sure that all other UI-blocking tasks like indexing and encoding are done before calling the `Runnable`? If yes, hasn't that already been achieved by calling `OpenFromClipboardTests::waitForEncodingRelatedJobs()` ?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5g4GJV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/28,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tkLHH,eclipse.jdt.debug,1838199239,28,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-12-04T09:57:09Z,2023-12-04T09:57:09Z,"> needs to run through the `Display` class?

most time you will find such information in the commit history:
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/51790620/5aadd90e-d962-48cb-9e01-af0590345b62)

https://bugs.eclipse.org/bugs/show_bug.cgi?id=335284#c2
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tkLHH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/28,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tl1sP,eclipse.jdt.debug,1838635791,28,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-12-04T13:22:04Z,2023-12-04T13:22:04Z,should be fixed with https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/358,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tl1sP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/30,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/30,eclipse.jdt.debug,1209476289,30,Some test script tweaking needed,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2022-04-20T10:15:56Z,2022-04-20T11:03:11Z,"- Show test execution progress on console
- Abort previously started builds on new patch set
- Keep 15 test executions

I will push a patch.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/30/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/32,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/32,eclipse.jdt.debug,1210443337,32,[Test] org.eclipse.debug.tests.breakpoint.SerialExecutorTest:: testJoin failed on cen64,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,CLOSED,2022-04-21T03:19:34Z,2022-05-17T18:31:01Z,"https://download.eclipse.org/eclipse/downloads/drops4/I20220418-1800/testresults/html/org.eclipse.debug.tests_ep424I-unit-cen64-gtk3-java17_linux.gtk.x86_64_17.html
org.eclipse.debug.tests.breakpoint.SerialExecutorTest | testJoin
ailed on run 67 expected:<20> but was:<5>
java.lang.AssertionError: failed on run 67 expected:<20> but was:<5>
at org.junit.Assert.fail(Assert.java:89)
at org.junit.Assert.failNotEquals(Assert.java:835)
at org.junit.Assert.assertEquals(Assert.java:647)
at org.eclipse.debug.tests.breakpoint.SerialExecutorTest.testJoin(SerialExecutorTest.java:158)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:61)
at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
at org.junit.runners.Suite.runChild(Suite.java:128)
at org.junit.runners.Suite.runChild(Suite.java:27)
at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:42)
at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:72)
at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
at org.eclipse.test.EclipseTestRunner.runTests(EclipseTestRunner.java:226)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:202)
at org.eclipse.test.UITestApplication.lambda$0(UITestApplication.java:103)
at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:5056)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4536)
at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
at org.eclipse.test.UITestApplication.run(UITestApplication.java:48)
at org.eclipse.test.UITestApplication.start(UITestApplication.java:118)
at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
at org.eclipse.core.launcher.Main.main(Main.java:44)

Testcase added for [Bug 574652](https://bugs.eclipse.org/bugs/show_bug.cgi?id=574652)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/32/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/32,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5B1_Th,eclipse.jdt.debug,1104671969,32,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-04-21T03:33:33Z,2022-04-21T03:33:33Z,"By mistake created in JDT, could not transfer/move  the issue to platform.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5B1_Th/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/33,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/33,eclipse.jdt.debug,1211069720,33,Can't set breakpoints in lambda blocks,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2022-04-21T13:43:41Z,2022-05-17T18:37:55Z,"Check the code in PR for SWT - in few places (lambda blocks) breakpoints can't be set.

- https://github.com/eclipse-platform/eclipse.platform.swt/pull/67/files#diff-e1f66a7da34acd54aa8a013ae25734c04a1322ae9e6e8d0893fe3145cae23221R196
- https://github.com/eclipse-platform/eclipse.platform.swt/pull/67/files#diff-61b7676193970e75610cab6300a9ab641b47933be53063362129d0c4240595e5R40
- https://github.com/eclipse-platform/eclipse.platform.swt/pull/67/files#diff-61b7676193970e75610cab6300a9ab641b47933be53063362129d0c4240595e5R43
- https://github.com/eclipse-platform/eclipse.platform.swt/pull/67/files#diff-61b7676193970e75610cab6300a9ab641b47933be53063362129d0c4240595e5R45

That means, we aren't done with #6 .

```
import java.text.*;
import java.util.concurrent.*;

import org.eclipse.swt.*;
import org.eclipse.swt.events.*;
import org.eclipse.swt.layout.*;
import org.eclipse.swt.widgets.*;

public class Snippet380 {
	public static void main(String[] args) {
		Display display = new Display();
		Shell shell = new Shell(display);
		shell.setSize(400, 100);
		shell.setLayout(new BorderLayout());
		shell.setText(""Snippet 380 (Executor)"");
		Button button = new Button(shell, SWT.PUSH);
		button.setLayoutData(new BorderData(SWT.BOTTOM));
		Label label = new Label(shell, SWT.NONE);
		label.setLayoutData(new BorderData(SWT.CENTER));
		button.setText(""Caclculate"");
		button.addSelectionListener(SelectionListener.widgetSelectedAdapter(e->{
			button.setEnabled(false);
			button.setText(""Calculating..."");
			CompletableFuture.supplyAsync(()->{
				double value = 0; // no breakpoint in the block below
				for (int i = 0; i < 10; i++) {
					try {
						TimeUnit.SECONDS.sleep(1);
					} catch (InterruptedException e1) {
						break;
					}
					value+=Math.random();
				}
				return value;
			}).thenApply(result->NumberFormat.getInstance().format(result))//
			.thenApply(formatedNumber->String.format(""The result is %s"", formatedNumber))//
			.thenAcceptAsync(label::setText, Display.executor())//
			.whenCompleteAsync((x,y)->button.setEnabled(true), Display.executor());
		}));
		shell.open();
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch()) {
				display.sleep();
			}
		}
		display.dispose();
	}
}
```

```
@Test
public void test_Executor() throws InterruptedException {
	final Display display = new Display();
	try {
		AtomicInteger integer = new AtomicInteger();
		display.execute(() -> {
			assertEquals(display, Display.getCurrent()); // breakpoint OK
			integer.set(1);
		});
		assertEquals(1, integer.get());
		CountDownLatch latch = new CountDownLatch(1);
		new Thread(() -> {
			display.execute(() -> {
				try {
					assertEquals(display, Display.getCurrent()); // breakpoint OK
					integer.set(2);
				} finally {
					latch.countDown();
				}
			});
		}).start();
		while(!latch.await(10, TimeUnit.MILLISECONDS)) {
			while(display.readAndDispatch ()) {
				//dispatch
			}
		}
		assertEquals(2, integer.get());
		CompletableFuture<Void> future = CompletableFuture.supplyAsync(()->{
			assertNull(Display.getCurrent()); //  NO breakpoint !!!
			return ""Hello SWT from background thread"";
		}).thenRunAsync(()->{
			assertEquals(display, Display.getCurrent()); // breakpoint OK
		}, Display.executor());
		while(!future.isDone()) {
			while(display.readAndDispatch ()) {
				//dispatch
			}
		}
		assertFalse(future.isCancelled());
		assertFalse(future.isCompletedExceptionally());
	} finally {
		display.dispose();
	}
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/33/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/33,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5B7Inu,eclipse.jdt.debug,1106020846,33,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-04-22T05:19:32Z,2022-04-22T05:19:32Z,Will look at this.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5B7Inu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/33,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5CR7sT,eclipse.jdt.debug,1111997203,33,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-04-28T09:56:51Z,2022-04-28T09:56:51Z,"Standalone snippet for playing:

```
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;

import java.text.NumberFormat;
import java.util.concurrent.CompletableFuture;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.Executor;
import java.util.concurrent.Executors;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.function.Consumer;

public class Snippet380 {
	public static void main(String[] args) {

		MyButton button = new MyButton();
		button.addSelectionListener(new WidgetSelectedAdapter(e -> {
			button.hashCode();
			button.toString();
			CompletableFuture.supplyAsync(() -> {
				double value = 0; // no breakpoint in the block below
				for (int i = 0; i < 10; i++) {
					try {
						TimeUnit.SECONDS.sleep(1);
					} catch (InterruptedException e1) {
						break;
					}
					value += Math.random();
				}
				return value;
			}).thenApply(result -> NumberFormat.getInstance().format(result))//
					.thenApply(formatedNumber -> String.format(""The result is %s"", formatedNumber))//
					.thenAcceptAsync(button::setText, executor())//
					.whenCompleteAsync((x, y) -> button.setEnabled(true), executor());
		}));
		System.out.println(button.getText());
	}

	public void test_Executor() throws InterruptedException {
		final Executor display = executor();
		try {
			AtomicInteger integer = new AtomicInteger();
			display.execute(() -> {
				assertEquals(display, null); // breakpoint OK
				integer.set(1);
			});
			assertEquals(1, integer.get());
			CountDownLatch latch = new CountDownLatch(1);
			new Thread(() -> {
				display.execute(() -> {
					try {
						assertEquals(display, null); // breakpoint OK
						integer.set(2);
					} finally {
						latch.countDown();
					}
				});
			}).start();

			assertEquals(2, integer.get());
			CompletableFuture<Void> future = CompletableFuture.supplyAsync(()->{
				assertNull(null); //  NO breakpoint !!!
				return ""Hello SWT from background thread"";
			}).thenRunAsync(()->{
				assertEquals(display, null); // breakpoint OK
			}, executor());

			assertFalse(future.isCancelled());
			assertFalse(future.isCompletedExceptionally());
		} finally {
			System.out.println(""Done"");
		}
	}

	private static Executor executor() {
		return Executors.newCachedThreadPool();
	}

	static class MyButton {

		private String text;
		private SelectionAdapter widgetSelectedAdapter;

		public void addSelectionListener(SelectionAdapter widgetSelectedAdapter) {
			this.widgetSelectedAdapter = widgetSelectedAdapter;
		}

		public String getText() {
			return text;
		}

		public Object setEnabled(boolean b) {
			return null;
		}

		void setText(String text) {
			this.text = text;
		}

	}

	static class SelectionAdapter {
		private Object e;

		void selected(Object e) {
			this.e = e;
		}
	}

	static class WidgetSelectedAdapter extends SelectionAdapter {

		private Consumer<Object> c;

		public WidgetSelectedAdapter(Consumer<Object> c) {
			this.c = c;
		}

	}

	class C {
		  void m() {
		    if (true) // toggle breakpoint here
		      return; //<--- breakpoint should NOT be added on this line if toggling above
		  }
		}
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5CR7sT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/33,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5DTift,eclipse.jdt.debug,1129195501,33,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-05-17T18:37:55Z,2022-05-17T18:37:55Z,Verified with Build id: I20220516-1800,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5DTift/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/37,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/37,eclipse.jdt.debug,1218682864,37,[Tests] Add Lambda breakpoints tests,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,OPEN,2022-04-28T12:50:28Z,2023-12-01T12:13:05Z,We need mores tests for lambda breakpoints to make sure that each change does not break any one of the working scenarios.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/37/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/38,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/38,eclipse.jdt.debug,1222788089,38,[19] Project Loom support,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2022-05-02T11:44:50Z,2022-09-19T05:14:04Z,"Continuation from https://bugs.eclipse.org/bugs/show_bug.cgi?id=572000.
Probably need to be considered in context of https://github.com/eclipse-jdt/eclipse.jdt/issues/10

Got an update from Alan Bateman:
> We've made a lot of progress since last year and are planning to
integrate the ""Virtual Threads"" feature into JDK 19. The JEP with all
the details is JEP 425 [1] and is currently ""proposed to target"". All
going well we should be able to integrate into the the JDK main line
within the next few weeks. In the mean-time, we have early access builds
and online docs [2].
> 
> For the debugger there are updates to JDI, JDWP, and JVM TI. My memory
is that Eclipse has its own JDI implementation and you need to track
changes to both JWDP and JDI. If Eclipse is already working with JDK 19
EA builds then I expect it will mostly work with the Loom EA builds too.
There are some differences, e.g. VirtualThread::allThreads will only
enumerate the platform threads by default, ThreadGroupReference::threads
only enumerates platforms because virtual threads are not members of a
thread group, ThreadReference::stop is specified to throw UOE on virtual
threads. All the details are in the javadoc (the JDWP protocol spec [3]
is online too, but the link from the API docs is hard to find sometimes).
> 
> Anyway, this just a heads-up that this feature is coming.
> 
> [1] [https://openjdk.java.net/jeps/425](https://deref-gmx.net/mail/client/hwtBJIXb49g/dereferrer/?redirectUrl=https%3A%2F%2Fopenjdk.java.net%2Fjeps%2F425)
[2] [https://jdk.java.net/loom/](https://deref-gmx.net/mail/client/W2nX0eMX4RA/dereferrer/?redirectUrl=https%3A%2F%2Fjdk.java.net%2Floom%2F)
[3] [https://download.java.net/java/early_access/loom/docs/specs/jdwp/jdwp-protocol.html](https://deref-gmx.net/mail/client/WnpvsIQ6eV8/dereferrer/?redirectUrl=https%3A%2F%2Fdownload.java.net%2Fjava%2Fearly_access%2Floom%2Fdocs%2Fspecs%2Fjdwp%2Fjdwp-protocol.html)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/38/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/38,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ER-vg,eclipse.jdt.debug,1145564128,38,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-06-03T04:04:55Z,2022-06-03T04:04:55Z,"https://bugs.openjdk.java.net/browse/JDK-8277131
The updates to [JDWP](https://download.java.net/java/early_access/loom/docs/specs/jdwp/jdwp-protocol.html) are:

A new command allows debuggers to test if a thread is a virtual thread.

A new modifier on the EventRequest command allows debuggers to restrict thread start and end events to platform threads.

The updates to [JDI](https://download.java.net/java/early_access/loom/docs/api/jdk.jdi/module-summary.html) are:

A new method in [<code class=""prettyprint"" data-shared-secret=""1654227509558-0.058419072462766786"">com.sun.jdi.ThreadReference</code>](https://download.java.net/java/early_access/loom/docs/api/jdk.jdi/com/sun/jdi/ThreadReference.html#isVirtual%28%29) tests if a thread is a virtual thread.

New methods in [<code class=""prettyprint"" data-shared-secret=""1654227509558-0.058419072462766786"">com.sun.jdi.request.ThreadStartRequest</code>](https://download.java.net/java/early_access/loom/docs/api/jdk.jdi/com/sun/jdi/request/ThreadStartRequest.html#addPlatformThreadsOnlyFilter%28%29) and [<code class=""prettyprint"" data-shared-secret=""1654227509558-0.058419072462766786"">com.sun.jdi.request.ThreadDeathRequest</code>](https://download.java.net/java/early_access/loom/docs/api/jdk.jdi/com/sun/jdi/request/ThreadDeathRequest.html#addPlatformThreadsOnlyFilter%28%29) limit the events generated for the request to platform threads.

 jdi interface package was removed via : 
- [Bug 565417](https://bugs.eclipse.org/bugs/show_bug.cgi?id=565417) - package com.sun.jdi is accessible from more than one module

Now the biggest question is how will debug support new APIs from JDI without moving to Java 19 dependency ?
@iloveeclipse any thoughts?
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ER-vg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/38,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ESJtn,eclipse.jdt.debug,1145609063,38,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-06-03T05:51:03Z,2022-06-03T05:51:03Z,"Some thoughts that came to my mind:
- Have JDI interfaces used for build only (not exported & not shipped) ? Similar what we have with https://github.com/eclipse-jdt/eclipse.jdt.core/blob/21b1f9d0bd80d28d7df6e72b1186625a273e2134/org.eclipse.jdt.compiler.tool/.classpath#L5
- Fragment that depends on Java 19+ ?
- Reflection to access 19+ API ?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ESJtn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/38,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5EScaH,eclipse.jdt.debug,1145685639,38,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-06-03T07:43:40Z,2022-06-03T07:43:40Z,"



> Some thoughts that came to my mind:
> 
> * Have JDI interfaces used for build only (not exported & not shipped) ? Similar what we have with https://github.com/eclipse-jdt/eclipse.jdt.core/blob/21b1f9d0bd80d28d7df6e72b1186625a273e2134/org.eclipse.jdt.compiler.tool/.classpath#L5
> * Fragment that depends on Java 19+ ?
> * Reflection to access 19+ API ?   

Will not favour Reflection if we have other option.
Stub lib jar should serve the purpose but will have maintenance overhead.
Will explore fragments.

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5EScaH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/38,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ETJna,eclipse.jdt.debug,1145870810,38,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-06-03T11:30:51Z,2022-06-03T11:30:51Z,"When I see swt binaries fragments, They load based on osgi os, ws and arch filters with Eclipse-PlatformFilter.
I could not find any filter for java versions, can we add filters? 
Or there are other ways to do it?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ETJna/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/38,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5EVj5P,eclipse.jdt.debug,1146502735,38,NA,testforstephen,14052197,Jinbo Wang,,NA,2022-06-04T02:29:21Z,2022-06-04T02:29:21Z,"@iloveeclipse @SarikaSinha I'm the maintainer of VS Code Java Debugger extension, which uses JDT JDI implementation as the sdk to communicate with the debuggee. Recently I'm also looking into how to enable the virtual threads support in JDT and VS Code Java Debugger.

> Now the biggest question is how will debug support new APIs from JDI without moving to Java 19 dependency ?

I don't think this will stop us from adding these new methods to the Eclipse JDI XxxImpls even if we're using JDK 11 JDI interfaces. For example, we could still implement a method `ThreadReferenceImpl#isVirtual()`  and have it talk to the JVM by using the new JDWP command, since JDWP commands do not depend on the JDI.

One drawback is that we have to use XxxImpl to access these new capabilities instead of interfaces.


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5EVj5P/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/38,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Eh0QH,eclipse.jdt.debug,1149715463,38,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-06-08T10:01:05Z,2022-06-08T10:01:05Z,"Currently I see the usage of  com.sun.tools.jdi.ThreadReferenceImpl.isVirtual() at 2 places (apart from example) :
org.eclipse.jdi.internal.ThreadReferenceImpl.popFrames(StackFrame)
org.eclipse.jdi.internal.ThreadReferenceImpl.forceEarlyReturn(Value)

I don't see any change done in ThreadStartRequestImpl and ThreadDeathRequestImpl as of early access build 23 of java 19.

As the changes are minimal, it can be done by doing the changes in Impl file only as suggested by @testforstephen 
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Eh0QH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/38,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5FQFkk,eclipse.jdt.debug,1161845028,38,NA,testforstephen,14052197,Jinbo Wang,,NA,2022-06-21T14:45:00Z,2022-06-21T14:45:00Z,"@SarikaSinha Yes, this seems feasible. Do you know of anyone working on this? If not, I'm willing to start a PR to implement this on JDT JDI.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5FQFkk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/38,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5FRUHd,eclipse.jdt.debug,1162166749,38,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-06-21T18:33:18Z,2022-06-21T18:33:18Z,"> @SarikaSinha Yes, this seems feasible. Do you know of anyone working on this? If not, I'm willing to start a PR to implement this on JDT JDI.

Yes, you can start on this.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5FRUHd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/38,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5FoWmU,eclipse.jdt.debug,1168206228,38,NA,vik-chand,99390647,Vikas Chandra,,NA,2022-06-28T04:28:26Z,2022-06-28T04:28:26Z,I unpinned this issue by mistake ( i thought it was a pop-up and most obvious/natural thing to do is to press x). Pinned it again,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5FoWmU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/38,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5F3JWn,eclipse.jdt.debug,1172084135,38,NA,AlanBateman,24272472,Alan Bateman,Alan.Bateman@oracle.com,NA,2022-07-01T08:28:49Z,2022-07-01T08:28:49Z,"JDK 19 is currently in Rampdown Phase One. P1-3 bugs can be currently be fixed so this would be good time to report any issues that you might have with JVM TI, JDWP or JDI before it gets too late in this release.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5F3JWn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/38,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5F4TNU,eclipse.jdt.debug,1172386644,38,NA,testforstephen,14052197,Jinbo Wang,,NA,2022-07-01T14:06:09Z,2022-07-01T14:06:09Z,"@AlanBateman Thanks for the update. I'm currently working on getting JDT JDI library to support virtual threads. I already have a draft PR https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/76, and will try to finish it in the coming weeks.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5F4TNU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/38,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5KBAfq,eclipse.jdt.debug,1241778154,38,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-09-09T10:11:00Z,2022-09-09T10:11:00Z,"Main support is done, rest of the issues can be tracked via a separate issue.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5KBAfq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/39,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/39,eclipse.jdt.debug,1224215701,39,Remote debugging connection establishment is slow,frandragomanovic,49861454,,,OPEN,2022-05-03T14:57:14Z,2023-11-09T10:49:42Z,"While using remote debugging both in Eclipse and in Intellij we've noticed that connection establishment works much faster with Intellij. 

- Eclipse: ~30sec
- Intellij Idea: less then 1sec

Additionally there is a rather large difference between package count sent to the server in both cases:
- Eclipse: 2849
- Intellij Idea: 20 

Also, we unchecked all of the following options:
- Debug View -> Java -> Show Monitors
- Debug View -> Java -> Show Running Threads
- Debug View -> Java -> Show System Threads
- Debug View -> Java -> Show Qualified Names
- Debug View -> Java -> Show Thread Groups

In the attachment network snapshots (with Wireshark) for both are provided.
[network-snapshots.zip](https://github.com/eclipse-jdt/eclipse.jdt.debug/files/8611244/network-snapshots.zip)

Versions used:
- **Eclipse**: 2021-09 (4.21.0), Build id: 20210910-1417
- **Java**: openjdk 11.0.14 2022-01-18 LTS
OpenJDK Runtime Environment Zulu11.54+23-CA (build 11.0.14+9-LTS)
OpenJDK 64-Bit Server VM Zulu11.54+23-CA (build 11.0.14+9-LTS, mixed mode)

We also tried it out with the latest Eclipse (2022-03) but the behavior is the same. 


Could you please tell us how could we speed this up? Is there some kind of setting which could be adjusted?

Thank you in advance!

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/39/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/39,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Ch_PK,eclipse.jdt.debug,1116206026,39,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-05-03T15:03:53Z,2022-05-03T15:03:53Z,"Have no idea how to read attached network snapshots.

Could you provide steps to reproduce?
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Ch_PK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/39,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Ci5zW,eclipse.jdt.debug,1116445910,39,NA,gsustek,5320033,,,NA,2022-05-03T18:49:29Z,2022-05-03T18:49:29Z,"@iloveeclipse  with https://www.wireshark.org/download.html  
:-)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Ci5zW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/39,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Ci_h1,eclipse.jdt.debug,1116469365,39,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-05-03T19:16:07Z,2022-05-03T19:16:07Z,"> @iloveeclipse with https://www.wireshark.org/download.html :-)

No, really?
What I've meant is: I have zero experience eith wireshark and so have no idea how to read attached snapshots. If you have such experience, please be so kind and explain it. 

Still open: could you provide steps to reproduce? That is more important as reading network dumps.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Ci_h1/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/39,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Ck617,eclipse.jdt.debug,1116974459,39,NA,cheorges,19465298,cheorges,,NA,2022-05-04T06:35:33Z,2022-05-04T06:35:33Z,"You can reproduce this behiavour, if you try to connact over vpn with your local running eclipse  to the application which is running on a server.

1. Start an Java based application on a server
2. Start on your local machine Eclipse
3. Connect you to vpn, so you can reach the server over vpn
4. Create remote debug connection and launch remote debugging (this step takes around ~30sec, with some latency it can grow over 2min)

The same setup but with idea can connect the remote session under 1sec.

Environment is:
Local: MacOS Monterey 12.3.1 (MacBook Pro M1)
Server: RedHat 8.5 x86_64 Linux

About the network dumps. You can look into the TCP stream if you follow these steps: [screenshots.zip](https://github.com/eclipse-jdt/eclipse.jdt.debug/files/8618299/screenshots.zip)

1. Open the network dumps with wireshark
2. Add a filter 
for eclipse dump: tcp.stream eq 1
for idea dump: tcp.stream eq 5
3. Right click on a table entry -> Follow -> TCP Stream
4. You will see the communication between server and client
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Ck617/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/39,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C137f,eclipse.jdt.debug,1121418975,39,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-05-09T18:11:14Z,2022-05-09T18:11:14Z,"I have not looked at the dumps, but just to understand what kind of breakpoints do you have? Any method exit breakpoints which can slow down? How many breakpoints are there approximately? 
By default ""Show method result after step operation"" is switched off for remote launch, but please conform.
Are you observing a regression ?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C137f/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/39,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C4RSZ,eclipse.jdt.debug,1122047129,39,NA,cheorges,19465298,cheorges,,NA,2022-05-10T07:49:09Z,2022-05-10T07:49:09Z,"Hi @SarikaSinha, there are no breakpoints. It takes time for Eclipse to create a debug connection. During debugging the speed is ok, if all monitoring stuff is disabled like described by @frandragomanovic.

**Unchecked all of the following options:**

Debug View -> Java -> Show Monitors
Debug View -> Java -> Show Running Threads
Debug View -> Java -> Show System Threads
Debug View -> Java -> Show Qualified Names
Debug View -> Java -> Show Thread Groups

The main problem is that the connection establishment.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C4RSZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/39,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5HAi8O,eclipse.jdt.debug,1191325454,39,NA,JLeenk,5148370,,,NA,2022-07-21T10:36:33Z,2022-07-21T10:36:33Z,"Hello all)
I also have the same issues with remote debugging like @frandragomanovic described.
And not only connection establishment (it could takes more than minute) and even after that the step by step debugging works extremely slow in comparing with IntelliJ IDEA Community Edition and Apache NetBeans. The delay could take 5 and more seconds.
If you need some more info I can give you it but provide me instructions how I can collect necessary for you info.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5HAi8O/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/39,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5pGXNM,eclipse.jdt.debug,1763275596,39,NA,rksharma1401,14962106,Ravikant Sharma,,NA,2023-10-15T05:12:11Z,2023-10-15T05:12:11Z,"Same issue seems eclipse is too slow to connect no logs or error just the connection takes too much time and even after connecting debug is too slow every steps takes time.
Java debugger command line is connecting instantaneously and works fine but eclipse takes more than 10-20 Sec .

@iloveeclipse any pointer would be helpful in code, exactly where too look for connection issue 
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5pGXNM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/39,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5pqk1d,eclipse.jdt.debug,1772768605,39,NA,rksharma1401,14962106,Ravikant Sharma,,NA,2023-10-20T13:44:47Z,2023-10-20T13:44:47Z,@SarikaSinha can you please help,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5pqk1d/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/39,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5qIz5w,eclipse.jdt.debug,1780694640,39,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2023-10-26T08:56:15Z,2023-10-26T08:56:15Z,"As far as I see, Eclipse uses java.net.ServerSocket to setup the connection and that should not take extra time for Eclipse alone. Can you attach the Screenshots with filtering tcp.stream eq 1 and tcp.stream eq 5 ?
This will give me a quick view to understand if the problem is at which level?
I will also try to add some logs to trace this based on these screenshots.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5qIz5w/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/39,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5qf_os,eclipse.jdt.debug,1786772012,39,NA,rksharma1401,14962106,Ravikant Sharma,,NA,2023-10-31T08:53:41Z,2023-10-31T08:53:41Z," my network admin team doesn't allow me to install wireshark or tcpdump as well , if possible can we try with logs
May be existing screenshots can be used .
Or can you suggest how else can I help 
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5qf_os/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/39,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5rgLoe,eclipse.jdt.debug,1803598366,39,NA,rksharma1401,14962106,Ravikant Sharma,,NA,2023-11-09T10:49:42Z,2023-11-09T10:49:42Z,"@SarikaSinha  did we get any new build with logs , if you can provide , I can share logs ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5rgLoe/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/40,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/40,eclipse.jdt.debug,1227618355,40,Breakpoint cannot be set in anonymous class in chained methods,apupier,1105127,Aurélien Pupier,apupier@redhat.com,CLOSED,2022-05-06T09:18:31Z,2022-05-06T10:07:16Z,"I failed so far to reproduce with a simpler example

![brekpointNotSetInsideAnonumousClass](https://user-images.githubusercontent.com/1105127/167102017-fa0b49fe-be8d-4996-9148-4a126ce6fc10.gif)

To reproduce:
 - import https://github.com/apupier/camel-quarkus-examples/tree/reproducer-for-jdt-debug/timer-log
 - Open https://github.com/apupier/camel-quarkus-examples/blob/0874fe787c0e7284f97dc56b53fcf1050af92af5/timer-log/src/main/java/org/acme/timer/log/TimerRoute.java
 - Try to set breakpoint on l.31 https://github.com/apupier/camel-quarkus-examples/blob/0874fe787c0e7284f97dc56b53fcf1050af92af5/timer-log/src/main/java/org/acme/timer/log/TimerRoute.java#L31
The breakpoint is set on the first line after the anonymous class","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/40/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/40,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5CuRdw,eclipse.jdt.debug,1119426416,40,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-05-06T09:27:26Z,2022-05-06T09:27:26Z,"Can you please try latest SDK 4.24 build? 
See https://download.eclipse.org/eclipse/downloads/drops4/I20220505-1800/
I assume the fix for #33 could helped here.
Also please provide a simple standalone example that doesn't need external dependencies.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5CuRdw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/40,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5CuY5O,eclipse.jdt.debug,1119456846,40,NA,apupier,1105127,Aurélien Pupier,apupier@redhat.com,NA,2022-05-06T10:05:42Z,2022-05-06T10:05:42Z,I confirm that it is fixed with latest Integration build,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5CuY5O/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/40,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5CuZNm,eclipse.jdt.debug,1119458150,40,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-05-06T10:07:16Z,2022-05-06T10:07:16Z,"Thanks, good to know.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5CuZNm/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/41,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/41,eclipse.jdt.debug,1228384164,41,Fail to set breakpoint on Lambda with 22.3,danielfriederich,11235933,,,CLOSED,2022-05-06T21:08:14Z,2022-05-06T21:28:57Z,"In the code below, I'm not able to set a breakpoint on the System.out.println with eclipse 22.3.
Instead the breakpoint resolves to the start of the second lambda.
I do run into this quite a lot, and I don't think I did see this behavior before I did update to 22.3 just recently.



`import org.junit.Test;

public class TestBreakpointInLambda {

	@Test
	public void testLabdaStuff() {
		takesTwoRunnables(()-> {
			System.out.println(""Try to set a breakpoint here! Gets set below :-("");
		},
		()-> { // breakpoint gets on set on this line, not on the System.out.println above.
		});
	}

	public void takesTwoRunnables(Runnable runMe, Runnable runMe2) {
		runMe.run();
		runMe2.run();
	}

	public static void main(String[] args) {
		var t = new TestBreakpointInLambda();
		t.testLabdaStuff();
	}
}
`","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/41/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/41,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5CwgC9,eclipse.jdt.debug,1120010429,41,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-05-06T21:10:59Z,2022-05-06T21:10:59Z,"Can you please try latest SDK 4.24 build?
See https://download.eclipse.org/eclipse/downloads/drops4/I20220505-1800/
I assume the fix for #33 could helped here.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5CwgC9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/41,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5CwgDS,eclipse.jdt.debug,1120010450,41,NA,danielfriederich,11235933,,,NA,2022-05-06T21:11:02Z,2022-05-06T21:11:02Z,thanks for moving. Just realized it was in the wrong project :-),"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5CwgDS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/41,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5CwhzH,eclipse.jdt.debug,1120017607,41,NA,danielfriederich,11235933,,,NA,2022-05-06T21:23:40Z,2022-05-06T21:23:40Z,"With the new eclipse build it works, so I think this is a dup of #33. Thanks for dispatching.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5CwhzH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/44,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/44,eclipse.jdt.debug,1231130563,44,Wrong editor used when opening debug-frame for classfile.,helospark,14263031,Helospark,,OPEN,2022-05-10T13:08:59Z,2022-05-10T14:28:00Z,"## Description

During debugging I have often run into an issue, that the wrong editor is used when opening classfile. This happens while debugging many common libraries, such as spring-web.

Here is an example with the wrong editor while checking a spring-web class:
![image](https://user-images.githubusercontent.com/14263031/167627179-d6288c82-f5b6-4978-b0d4-561310ae8e01.png)

Notice that there is no (proper) syntax highlights and the the icon of the editor is an hollow J.
Also breakpoints are broken (not visible on the left) and there are other oddities when using this editor as well.

This is how it supposed to look like:
![image](https://user-images.githubusercontent.com/14263031/167627618-2968ae16-8e6f-4da0-bc73-220c115bca3f.png)

After some digging I found that the reason for this is that the first case Eclipse opens the source jar's java source code, while the second one opens the class file itself (and the ClassFileEditor attaches the proper source code).
I believe opening a java file from the source jar is never the correct behavior, the classfile editor is able to attach the source.

One workaround I found is to `right click on stacktrace -> edit source lookup -> check Search for duplicate entries on the classpath`
With this option set I get a popup every time where I can select if I want to open the classfile or Java file:
![image](https://user-images.githubusercontent.com/14263031/167628541-891b71b6-d36d-4565-af2b-9caf5ee33b9a.png)

If I select the classfile everything works as expected, unfortunately I have to do this every time I'm stepping on the stacktrace or restarting debug.

This bug is only occur during debugging, hence I opened it in this project.
If I press ctrl+shift+t and search for the class that was not properly opened above (while not have already an incorrectly opened editor) it will open it properly with the classfile editor.

The bug is present in version 2022.03 and also earlier versions as well, but I'm not sure when it was introduced.

## Repro

I have created a basic Spring Boot project that can repro the issue here:
https://github.com/helospark/eclipse-debug-wrong-editor-repro

 - Run Application.java main() file as a normat Java application
 - Put a breakpoint into TestController.test() method
 - Call http://localhost:8080/ in your browser
 - Step back on the Debug view onto ServletInvocableHandlerMethod
 - Notice the issues I mentioned above

I also included another main() method which shows the correct behavior in Test.java, if you step inside readValue method it is working properly.

## Expected

Always open the editor in a way that works (preferably with the classfile)

## Technical notes

`AdvancedSourceLookupDirector.initParticipants()` creates two search participant: `AdvancedSourceLookupParticipant` and `JavaSourceLookupParticipant`, from this the `JavaSourceLookupParticipant` loads the classFile and the advanced loads the java file.

AdvancedSourceLookupParticipant doesn't find the class, because AdvancedSourceLookupParticipant searches in the wrong place here:
https://github.com/eclipse-jdt/eclipse.jdt.debug/blob/0c8c6d9fa30cda3c83741613f6ea4c541c037973/org.eclipse.jdt.launching/launching/org/eclipse/jdt/launching/sourcelookup/advanced/AdvancedSourceLookupParticipant.java#L125-L130

When working (with the ObjectMapper example) the stacktrace already contains at least one entry for my project (and the target folder), so the frameLocation will be the target location which contains the external jar file.

However in case of the Spring, none of the earlier stacktrace frames contain my project, hence `projectLocator.createClasspathEntryContainer` always returns null and the code runs into:
https://github.com/eclipse-jdt/eclipse.jdt.debug/blob/0c8c6d9fa30cda3c83741613f6ea4c541c037973/org.eclipse.jdt.launching/launching/org/eclipse/jdt/launching/sourcelookup/advanced/AdvancedSourceLookupParticipant.java#L143-L148

which finds the source jar instead of the executable jar leading to the incorrect entry and duplicated source file","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/44/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/44,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C50e9,eclipse.jdt.debug,1122453437,44,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-05-10T14:12:40Z,2022-05-10T14:12:40Z,"Have you tried Disabling the ""Use advanced source lookup"" preference in JDT->Debug?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C50e9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/44,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C55Ic,eclipse.jdt.debug,1122472476,44,NA,helospark,14263031,Helospark,,NA,2022-05-10T14:27:59Z,2022-05-10T14:27:59Z,"Thanks @SarikaSinha, I just tried and this is also a good workaround.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C55Ic/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/45,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/45,eclipse.jdt.debug,1232529330,45,[win] can not launch java with long classpath containing non-Ascii letter,jukzi,51790620,Jörg Kubitz,,CLOSED,2022-05-11T12:09:30Z,2022-07-30T12:54:45Z,"Given a workspace in a path with a non-Ascii letter like ""C:\Jörg""
And then try to launch a plain test.Main.main() the command line will be like:
`C:\Program Files\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin\java.exe -classpath C:\Jörg\projectName\test\bin test.Main`  (OK)
but when the classpath gets too long for command line then the class path argument is wrapped in a UTF-8 encoded file like
""argument.txt"":
`-classpath C:\Jörg\projectName\test\bin`  (OK)
and the command line will be
`C:\Program Files\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin\java.exe ""@argument.txt"" test.Main`  (OK)
that will result in ""java.lang.ClassNotFoundException: test.Main""  (NOK)
If i manually convert the argument.txt from UTF8 to ANSI then the command line works. 
The argument file has always to be encoded with the system encoding instead of UTF-8.
see
https://docs.oracle.com/en/java/javase/17/docs/specs/man/java.html#java-command-line-argument-files
""_The argument file must contain only ASCII characters or characters in **system default encoding** that's ASCII friendly, such as UTF-8._""


Side note: in the launch configuration dialog is a button to show command line. But the copied command line does not directly work: 1. it is missing double quotes around the executable path (""Eclipse Adoptium"" contains a white space) 
2. there are line breaks instead of blanks as delimiters.

The error is probably ""StandardCharsets.UTF_8"" in org.eclipse.jdt.internal.launching.ClasspathShortener.createClassPathArgumentFile(String) and org.eclipse.jdt.internal.launching.ClasspathShortener.createModulePathArgumentFile(String).

from Bug 385738 - Shorten the classpath/modulepath if necessary.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/45/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/45,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C-d4M,eclipse.jdt.debug,1123671564,45,NA,jukzi,51790620,Jörg Kubitz,,NA,2022-05-11T12:12:20Z,2022-05-11T12:12:20Z,"also for [18]:
https://docs.oracle.com/en/java/javase/18/docs/specs/man/java.html#java-command-line-argument-files
characters in system default encoding 

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C-d4M/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/45,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C-eN6,eclipse.jdt.debug,1123672954,45,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-05-11T12:12:51Z,2022-05-11T12:12:51Z,"I wonder if that means UTF-8 is fine because it is ASCII friendly???

> The argument file must contain only ASCII characters **or** characters in system default encoding that's ASCII friendly, **such as UTF-8**.""

Beside this, just out of curiosity how consistently https://openjdk.java.net/jeps/400 was implemented - could you please try with **Java 18** that is supposed to use UTF-8 by default? 

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C-eN6/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/45,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C-eyi,eclipse.jdt.debug,1123675298,45,NA,jukzi,51790620,Jörg Kubitz,,NA,2022-05-11T12:14:12Z,2022-05-11T12:14:12Z,"> I wonder if that means UTF-8 is fine because it is ASCII friendly???

they certainly mean, it's ok to use ASCII characters encoded as utf-8. -which is only a subset","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C-eyi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/45,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C-oB3,eclipse.jdt.debug,1123713143,45,NA,jukzi,51790620,Jörg Kubitz,,NA,2022-05-11T12:44:42Z,2022-05-11T12:44:42Z,"I wonder how to get the system encoding?
<18: Charset#defaultCharset() 
 \>=18: ""native.encoding"" system property

see
https://docs.oracle.com/en/java/javase/18/docs/api/java.base/java/nio/charset/Charset.html#defaultCharset()
Is a java developer realy meant to check the running JVM version?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C-oB3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/45,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C-og2,eclipse.jdt.debug,1123715126,45,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-05-11T12:46:32Z,2022-05-11T12:46:32Z,"> Is a java developer realy meant to check the running JVM version?

See https://openjdk.java.net/jeps/400","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C-og2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/45,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C-pn6,eclipse.jdt.debug,1123719674,45,NA,jukzi,51790620,Jörg Kubitz,,NA,2022-05-11T12:50:27Z,2022-05-11T12:50:27Z,"i do not see a clean solution there. Should we use
Charset.forName(""default"") 
-> UnsupportedCharsetException -> Charset.forName(""native.encoding"")
??","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5C-pn6/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/45,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5DcuTJ,eclipse.jdt.debug,1131603145,45,NA,jukzi,51790620,Jörg Kubitz,,NA,2022-05-19T12:04:55Z,2022-05-19T12:04:55Z,"jdk ticket created: https://bugs.openjdk.java.net/browse/JDK-8286998

for jdk<18 ""file.encoding"" (used by Charset#defaultCharset) is not useful to get the System encoding since it is overwritten with -Dfile.encoding=UTF-8.
jdk internally uses ""sun.jnu.encoding"" for real System charset, but that is not documented to be stable.

So far no reliably method to get the system Charset needed to start another JVM.

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5DcuTJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/48,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/48,eclipse.jdt.debug,1234366607,48,[19] Debug Support for Java 19,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,CLOSED,2022-05-12T18:55:32Z,2022-12-16T18:23:05Z,Root bug for Java 19 Debug support,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/48/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/48,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5QyVQ1,eclipse.jdt.debug,1355371573,48,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-12-16T18:23:05Z,2022-12-16T18:23:05Z,https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/49,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5QyVQ1/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/49,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/49,eclipse.jdt.debug,1234371572,49,[19] Add Execution Environment for JavaSE-19,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,CLOSED,2022-05-12T19:00:48Z,2022-05-20T15:57:13Z,There should be an Execution Environment for JavaSE-19 in the Execution Environment Preference page.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/49/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/53,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/53,eclipse.jdt.debug,1253663834,53,[Tests]org.eclipse.jdt.debug.tests.core.ConsoleInputTests fails with Console is null,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,OPEN,2022-05-31T10:29:46Z,2023-12-01T12:13:06Z,"https://download.eclipse.org/eclipse/downloads/drops4/I20220530-1800/testresults/html/org.eclipse.jdt.debug.tests_ep424I-unit-mac64-java17_macosx.cocoa.x86_64_17.html

testDeleteAllEnteredText | Failure | Console is nulljunit.framework.AssertionFailedError: Console is nullat junit.framework.Assert.fail(Assert.java:57)at junit.framework.Assert.assertTrue(Assert.java:22)at junit.framework.Assert.assertNotNull(Assert.java:256)at junit.framework.TestCase.assertNotNull(TestCase.java:399)at org.eclipse.jdt.debug.tests.core.ConsoleInputTests.waitStarted(ConsoleInputTests.java:286)at org.eclipse.jdt.debug.tests.core.ConsoleInputTests.testDeleteAllEnteredText(ConsoleInputTests.java:317)at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.base/java.lang.reflect.Method.invoke(Method.java:568)at junit.framework.TestCase.runTest(TestCase.java:177)at junit.framework.TestCase.runBare(TestCase.java:142)at org.eclipse.jdt.debug.tests.AbstractDebugTest.runBare(AbstractDebugTest.java:2670)at junit.framework.TestResult$1.protect(TestResult.java:122)at junit.framework.TestResult.runProtected(TestResult.java:142)at junit.framework.TestResult.run(TestResult.java:125)at junit.framework.TestCase.run(TestCase.java:130)at junit.framework.TestSuite.runTest(TestSuite.java:241)at junit.framework.TestSuite.run(TestSuite.java:236)at junit.framework.TestSuite.runTest(TestSuite.java:241)at org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:61)at java.base/java.lang.Thread.run(Thread.java:833)
-- | -- | --


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/53/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/55,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/55,eclipse.jdt.debug,1262768319,55,Stale Breakpoints and marker mismatch,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,OPEN,2022-06-07T06:07:22Z,2023-03-01T05:29:28Z," - [Bug 576200](https://bugs.eclipse.org/bugs/show_bug.cgi?id=576200) - Stale Breakpoint Confusion
 - [Bug 354784](https://bugs.eclipse.org/bugs/show_bug.cgi?id=354784) - [breakpoints] DebugException: Breakpoint does not have an associated marker.

This bug is umbrella bug to handle breakpoint mismatch issues.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/55/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/56,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/56,eclipse.jdt.debug,1262787563,56,Version update for 4.25,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,CLOSED,2022-06-07T06:29:46Z,2022-07-07T07:48:09Z,Version update for 4.25,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/56/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/59,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/59,eclipse.jdt.debug,1266011603,59,"""Internal error(s) occurred"" - missing log",Omcsesz,1839739,Sweidan Omár,omcsesz@gmail.com,OPEN,2022-06-09T11:46:57Z,2023-05-25T06:34:13Z,"Hello, People!

I don't know if this is the right forum to post this question, but anyway: when using the Debug perspective, and trying to inspect the value of a variable, I get the following message (see attachment). The problem is that in the meanwhile, there is no error messages on the log. Can you please fix that?

![SeeErrorLogForDetails](https://user-images.githubusercontent.com/1839739/172821557-c0da308c-29ae-4a15-90a5-88021a0fce57.jpg)
 ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/59/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/59,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Em5Hr,eclipse.jdt.debug,1151046123,59,NA,jukzi,51790620,Jörg Kubitz,,NA,2022-06-09T12:14:57Z,2022-06-09T12:14:57Z,Without any hint what's wrong/how to reproduce nobody can help you. You could use tools like [JMC](https://adoptopenjdk.net/jmc.html) to record all exceptions. The error is for sure any Exception.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Em5Hr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/59,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Em9vA,eclipse.jdt.debug,1151065024,59,NA,Omcsesz,1839739,Sweidan Omár,omcsesz@gmail.com,NA,2022-06-09T12:35:13Z,2022-06-09T12:35:13Z,"> @jukzi Without any hint what's wrong/how to reproduce nobody can help you.

The setup is the following:

Eclipse IDE for Enterprise Java and Web Developers (includes Incubating components)
Version: 2022-03 (4.23.0)
Build id: 20220310-1457
OS: Windows 10, v.10.0, x86_64 / win32
Java vendor: Eclipse Adoptium
Java runtime version: 18.0.1+10
Java version: 18.0.1
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Em9vA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/59,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5EnDOQ,eclipse.jdt.debug,1151087504,59,NA,jukzi,51790620,Jörg Kubitz,,NA,2022-06-09T12:57:54Z,2022-06-09T12:57:54Z," 2022-03 is release for JDK 17 only. try a JDK 17! nevertheless please post the exception that happens.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5EnDOQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/59,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5EnWXf,eclipse.jdt.debug,1151165919,59,NA,Omcsesz,1839739,Sweidan Omár,omcsesz@gmail.com,NA,2022-06-09T14:06:25Z,2022-06-09T14:06:25Z,"> 2022-03 is release for JDK 17 only. try a JDK 17! nevertheless please post the exception that happens.

```
java.lang.NullPointerException: null
	at user.jobengine.server.JobEngine.isRunnable(JobEngine.java:575) ~[user.jobengine.osgi.server/:?]
	at user.jobengine.server.JobEngine.submit(JobEngine.java:1026) ~[user.jobengine.osgi.server/:?]
	at user.jobengine.server.JobEngine.submit(JobEngine.java:1080) ~[user.jobengine.osgi.server/:?]
	at user.jobengine.server.scheduler.ScheduledJob.doManualJob(ScheduledJob.java:56) ~[user.jobengine.osgi.server/:?]
	at user.jobengine.zk.model.JobEditorModel2.execute(JobEditorModel2.java:85) ~[user.mediacube.gui/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_331]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[?:1.8.0_331]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[?:1.8.0_331]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[?:1.8.0_331]
	at org.zkoss.bind.impl.ParamCall.call(ParamCall.java:149) ~[zkbind.jar:8.0.3]
	at org.zkoss.bind.impl.BinderImpl.doExecute(BinderImpl.java:2025) ~[zkbind.jar:8.0.3]
	at org.zkoss.bind.impl.BinderImpl.doCommand(BinderImpl.java:1738) ~[zkbind.jar:8.0.3]
	at org.zkoss.bind.impl.BinderImpl.access$1300(BinderImpl.java:129) ~[zkbind.jar:8.0.3]
	at org.zkoss.bind.impl.BinderImpl$CommandEventListener.onEvent0(BinderImpl.java:1585) ~[zkbind.jar:8.0.3]
	at org.zkoss.bind.impl.BinderImpl$CommandEventListener.onEvent(BinderImpl.java:1538) ~[zkbind.jar:8.0.3]
	at org.zkoss.zk.ui.AbstractComponent.onEvent(AbstractComponent.java:3163) ~[zk.jar:8.0.3]
	at org.zkoss.zk.ui.AbstractComponent.service(AbstractComponent.java:3133) ~[zk.jar:8.0.3]
	at org.zkoss.zk.ui.AbstractComponent.service(AbstractComponent.java:3075) ~[zk.jar:8.0.3]
	at org.zkoss.zk.ui.impl.EventProcessor.process(EventProcessor.java:138) ~[zk.jar:8.0.3]
	at org.zkoss.zk.ui.impl.UiEngineImpl.processEvent(UiEngineImpl.java:1853) ~[zk.jar:8.0.3]
	at org.zkoss.zk.ui.impl.UiEngineImpl.process(UiEngineImpl.java:1625) ~[zk.jar:8.0.3]
	at org.zkoss.zk.ui.impl.UiEngineImpl.execUpdate(UiEngineImpl.java:1328) ~[zk.jar:8.0.3]
	at org.zkoss.zk.au.http.DHtmlUpdateServlet.process(DHtmlUpdateServlet.java:606) ~[zk.jar:8.0.3]
	at org.zkoss.zk.au.http.DHtmlUpdateServlet.doGet(DHtmlUpdateServlet.java:482) ~[zk.jar:8.0.3]
	at org.zkoss.zk.au.http.DHtmlUpdateServlet.doPost(DHtmlUpdateServlet.java:490) ~[zk.jar:8.0.3]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707) ~[javax.servlet-api_3.1.0.jar:3.1.0]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) ~[javax.servlet-api_3.1.0.jar:3.1.0]
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:837) ~[org.eclipse.jetty.servlet_9.3.9.v20160517.jar:9.3.9.v20160517]
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:583) ~[org.eclipse.jetty.servlet_9.3.9.v20160517.jar:9.3.9.v20160517]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143) ~[org.eclipse.jetty.server_9.3.9.v20160517.jar:9.3.9.v20160517]
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548) ~[org.eclipse.jetty.security_9.3.9.v20160517.jar:9.3.9.v20160517]
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226) ~[org.eclipse.jetty.server_9.3.9.v20160517.jar:9.3.9.v20160517]
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1174) ~[org.eclipse.jetty.server_9.3.9.v20160517.jar:9.3.9.v20160517]
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511) ~[org.eclipse.jetty.servlet_9.3.9.v20160517.jar:9.3.9.v20160517]
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185) ~[org.eclipse.jetty.server_9.3.9.v20160517.jar:9.3.9.v20160517]
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1106) ~[org.eclipse.jetty.server_9.3.9.v20160517.jar:9.3.9.v20160517]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) ~[org.eclipse.jetty.server_9.3.9.v20160517.jar:9.3.9.v20160517]
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213) ~[org.eclipse.jetty.server_9.3.9.v20160517.jar:9.3.9.v20160517]
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:119) ~[org.eclipse.jetty.server_9.3.9.v20160517.jar:9.3.9.v20160517]
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:134) ~[org.eclipse.jetty.server_9.3.9.v20160517.jar:9.3.9.v20160517]
	at org.eclipse.jetty.server.Server.handle(Server.java:524) ~[org.eclipse.jetty.server_9.3.9.v20160517.jar:9.3.9.v20160517]
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:319) ~[org.eclipse.jetty.server_9.3.9.v20160517.jar:9.3.9.v20160517]
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:253) ~[org.eclipse.jetty.server_9.3.9.v20160517.jar:9.3.9.v20160517]
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:273) ~[org.eclipse.jetty.io_9.3.9.v20160517.jar:9.3.9.v20160517]
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95) ~[org.eclipse.jetty.io_9.3.9.v20160517.jar:9.3.9.v20160517]
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:93) ~[org.eclipse.jetty.io_9.3.9.v20160517.jar:9.3.9.v20160517]
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.executeProduceConsume(ExecuteProduceConsume.java:303) ~[org.eclipse.jetty.util_9.3.9.v20160517.jar:9.3.9.v20160517]
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceConsume(ExecuteProduceConsume.java:148) ~[org.eclipse.jetty.util_9.3.9.v20160517.jar:9.3.9.v20160517]
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:136) ~[org.eclipse.jetty.util_9.3.9.v20160517.jar:9.3.9.v20160517]
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:671) ~[org.eclipse.jetty.util_9.3.9.v20160517.jar:9.3.9.v20160517]
	at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:589) ~[org.eclipse.jetty.util_9.3.9.v20160517.jar:9.3.9.v20160517]
	at java.lang.Thread.run(Unknown Source) ~[?:1.8.0_331]
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5EnWXf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/59,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5EnXPz,eclipse.jdt.debug,1151169523,59,NA,Omcsesz,1839739,Sweidan Omár,omcsesz@gmail.com,NA,2022-06-09T14:09:37Z,2022-06-09T14:09:37Z,"BTW, I installed the JMC latest version, but I'm not able to connect to the port that my software runs on:

![kép](https://user-images.githubusercontent.com/1839739/172867410-79ee9468-7c82-4874-8671-7353cbd7c168.png)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5EnXPz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/59,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5EnfVj,eclipse.jdt.debug,1151202659,59,NA,jukzi,51790620,Jörg Kubitz,,NA,2022-06-09T14:35:43Z,2022-06-09T14:35:43Z,"according to the stacktrace its not an eclipse problem but
	at user.jobengine.server.JobEngine
or
	at org.zkoss.bind.impl.ParamCall","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5EnfVj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/59,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5En_oE,eclipse.jdt.debug,1151334916,59,NA,Omcsesz,1839739,Sweidan Omár,omcsesz@gmail.com,NA,2022-06-09T16:13:39Z,2022-06-09T16:13:39Z,"> according to the stacktrace its not an eclipse problem but at user.jobengine.server.JobEngine or at org.zkoss.bind.impl.ParamCall

@jukzi The Eclipse problem was that the Inspect pop-up window was not containing this information, instead it said ""internal error(s) occurred, see log details."", but there was nothing on the error log.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5En_oE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/59,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5dH6fz,eclipse.jdt.debug,1562355699,59,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-05-25T06:34:13Z,2023-05-25T06:34:13Z,Without having a stacktrace where eclipe.ui / jdt.ui is involved it's hard to guess where the Exception could be catched and logged. Please propose a change. PR's welcome,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5dH6fz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/61,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/61,eclipse.jdt.debug,1267574823,61,Move JDT Debug plugins(remaining 3) to Java 11 BREE,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,CLOSED,2022-06-10T13:46:01Z,2023-07-31T14:35:13Z,"/org.eclipse.jdt.launching.javaagent
/org.eclipse.jdt.launching.macosx
/org.eclipse.jdt.launching.ui.macosx

Should move to Java 11 BREE

https://github.com/eclipse/tycho/issues/1003
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/61/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/61,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5RfSWK,eclipse.jdt.debug,1367156106,61,NA,merks,208716,Ed Merks,,NA,2022-12-29T08:36:42Z,2022-12-29T08:36:42Z,"I assume the following is an unintended consequence of this change:

https://www.eclipse.org/forums/index.php/mv/msg/1112218/1856754/#msg_1856754","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5RfSWK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/61,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5RfUjJ,eclipse.jdt.debug,1367165129,61,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-12-29T08:56:16Z,2022-12-29T08:56:16Z,"Yes, most likely. The solution is to use older Eclipse to debug such old JVM. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5RfUjJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/61,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5i2pwc,eclipse.jdt.debug,1658493980,61,NA,H-Lo,16727070,H.Lo,,NA,2023-07-31T14:35:13Z,2023-07-31T14:35:13Z,Is there a chance to make it work with new Eclipse to avoid having Eclipse instance per project?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5i2pwc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/64,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/64,eclipse.jdt.debug,1271071464,64,"external .class file is not found if project path contains a space"" """,jukzi,51790620,Jörg Kubitz,,CLOSED,2022-06-14T16:39:59Z,2023-07-24T06:42:06Z,"1. lets have workspace that contains a space "" "" (%20 in an URL)
2. create a javaproject with
```
public class Main {
	public static void main(String[] args) {
		 new myLib.MyObject();
	}
}
```
3. add a library which contains a class ""myLib.MyObject""
4. put a breakpoint in the constructor of  myLib.MyObject()
5. debug
=> an Editor for ""MyObject.java"" (org.eclipse.jdt.ui.CompilationUnitEditor) file is shown - which is totally wrong.
it should open an Editor for ""MyObject.class"" (org.eclipse.jdt.ui.ClassFileEditor)

As a consequence the IDE can open both MyObject.java and MyObject.class. It's impossible to add a conditional breakpoint in the org.eclipse.jdt.ui.CompilationUnitEditor editor.

Somewhere the space is converted to ""%20"" and the project can not be found - because it contains a "" "" instead of a ""%20""","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/64/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/64,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5E3rJ9,eclipse.jdt.debug,1155445373,64,NA,jukzi,51790620,Jörg Kubitz,,NA,2022-06-14T16:44:44Z,2022-06-14T16:44:44Z,"I think it happens somewhere here:
```
Thread [Worker-5: Label Job] (Suspended)	
	owns: ClassTypeImpl  (id=167)	
	ClassTypeImpl(MirrorImpl).readString(String, DataInputStream) line: 456	
	ClassTypeImpl(ReferenceTypeImpl).getSourceDebugExtension() line: 1753	
	ClassTypeImpl(ReferenceTypeImpl).isSourceDebugExtensionAvailable() line: 1819	
	ClassTypeImpl(ReferenceTypeImpl).defaultStratum() line: 1694	
	JDIClassType(JDIReferenceType).getDefaultStratum() line: 94	
	JDIModelPresentation.getStackFrameText(IStackFrame) line: 1864	
	JDIModelPresentation.getText(Object) line: 226	
	LazyModelPresentation.getText(Object) line: 188	
	DelegatingModelPresentation.getText(Object) line: 151	
	JavaStackFrameLabelProvider(DebugElementLabelProvider).getLabel(TreePath, IPresentationContext, String) line: 39	
	JavaStackFrameLabelProvider(ElementLabelProvider).getLabel(TreePath, IPresentationContext, String, int) line: 297	
	JavaStackFrameLabelProvider(ElementLabelProvider).retrieveLabel(ILabelUpdate) line: 200	
	JavaStackFrameLabelProvider.retrieveLabel(ILabelUpdate) line: 44	
	ElementLabelProvider$LabelUpdater.run() line: 147	
	ElementLabelProvider$LabelJob.run(IProgressMonitor) line: 74	
	Worker.run() line: 63	

```
![image](https://user-images.githubusercontent.com/51790620/173630833-ea1b0340-8aaa-4c92-bbf9-d46b961a6d4e.png)

i don't understand all that stuff. does the debug interface from the JVM returns %20 and JDT should convert the URI to a filename?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5E3rJ9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/64,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5E3t1V,eclipse.jdt.debug,1155456341,64,NA,jukzi,51790620,Jörg Kubitz,,NA,2022-06-14T16:55:52Z,2022-06-14T16:55:52Z,"i think it should be
`					return new File(url.toURI()).toPath().normalize().toFile();
`
in
org.eclipse.jdt.internal.launching.sourcelookup.advanced.JDIHelpers.getClassesLocation(Object)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5E3t1V/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/65,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/65,eclipse.jdt.debug,1271745158,65, [19] testLimitModulesTest might fail with Java 19,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,CLOSED,2022-06-15T06:42:17Z,2022-07-28T17:41:00Z,Package dependency change might need a change for Debug test.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/65/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/65,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5E6AY6,eclipse.jdt.debug,1156056634,65,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-06-15T06:49:26Z,2022-06-15T06:49:26Z,"Failing for 19:
https://download.eclipse.org/eclipse/downloads/drops4/Y20220613-0600/testresults/html/org.eclipse.jdt.debug.tests_ep425Y-unit-cen64-gtk3-java19_linux.gtk.x86_64_19.html


org.eclipse.jdt.debug.tests.core.ModuleOptionsTests | testLimitModules1 | Failure | Unknown set of default modules java.se,jdk.accessibility,jdk.attach,jdk.compiler,jdk.dynalink,jdk.httpserver,jdk.incubator.concurrent,jdk.incubator.vector,jdk.jartool,jdk.javadoc,jdk.jconsole,jdk.jdi,jdk.jfr,jdk.jshell,jdk.jsobject,jdk.management,jdk.management.jfr,jdk.net,jdk.nio.mapmode,jdk.sctp,jdk.security.auth,jdk.security.jgss,jdk.unsupported,jdk.unsupported.desktop,jdk.xml.domjunit.framework.AssertionFailedError: Unknown set of default modules java.se,jdk.accessibility,jdk.attach,jdk.compiler,jdk.dynalink,jdk.httpserver,jdk.incubator.concurrent,jdk.incubator.vector,jdk.jartool,jdk.javadoc,jdk.jconsole,jdk.jdi,jdk.jfr,jdk.jshell,jdk.jsobject,jdk.management,jdk.management.jfr,jdk.net,jdk.nio.mapmode,jdk.sctp,jdk.security.auth,jdk.security.jgss,jdk.unsupported,jdk.unsupported.desktop,jdk.xml.domat junit.framework.Assert.fail(Assert.java:57)at junit.framework.TestCase.fail(TestCase.java:223)at org.eclipse.jdt.debug.tests.core.ModuleOptionsTests.testLimitModules1(ModuleOptionsTests.java:269)at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)at java.base/java.lang.reflect.Method.invoke(Method.java:578)at junit.framework.TestCase.runTest(TestCase.java:177)at junit.framework.TestCase.runBare(TestCase.java:142)at org.eclipse.jdt.debug.tests.AbstractDebugTest.runBare(AbstractDebugTest.java:2670)at junit.framework.TestResult$1.protect(TestResult.java:122)at junit.framework.TestResult.runProtected(TestResult.java:142)at junit.framework.TestResult.run(TestResult.java:125)at junit.framework.TestCase.run(TestCase.java:130)at junit.framework.TestSuite.runTest(TestSuite.java:241)at junit.framework.TestSuite.run(TestSuite.java:236)at junit.framework.TestSuite.runTest(TestSuite.java:241)at org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:61)at java.base/java.lang.Thread.run(Thread.java:1596)
-- | -- | -- | --



Last change was for Java 16
[Bug 568295](https://bugs.eclipse.org/bugs/show_bug.cgi?id=568295) - [16] testLimitModulesTest might fail with Java 16
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5E6AY6/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/68,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/68,eclipse.jdt.debug,1272265475,68,external JAR with classpath in MANIFEST can't be debugged,jukzi,51790620,Jörg Kubitz,,CLOSED,2022-06-15T13:47:07Z,2024-02-15T07:54:28Z,"When a library JAR contains a ""Class-Path:"" entry then clicking on the the stack trace will open a "".java"" editor instead of "".class"" i.e. jdt.debug does not find the debugged class.
![image](https://user-images.githubusercontent.com/51790620/173842904-6f3a2a8c-2789-4f59-a3ae-93aa4b101afe.png)

I will continue investigation next week to get more details.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/68/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/68,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5FJ-0e,eclipse.jdt.debug,1160244510,68,NA,jukzi,51790620,Jörg Kubitz,,NA,2022-06-20T10:07:46Z,2022-06-20T10:07:46Z,"The issue happens only if all this conditions fullfilled:
1. the .java source is in a separate .jar file attached to the .jar library,
2. the stacktrace contains no other stackelement that relates to the current project,
3. the Manifest contains any Class-Path.

Example: Lets have a library which contains any class like
```
public class HelloWorldWithCP {
	public HelloWorldWithCP(){
		dosomething(); <-- //put breakpoint here
	}
}
```
MANIFEST.MF in the .jar:
```
Manifest-Version: 1.0
Class-Path: .

```

Then have another project that has that library attached and calls it in a worker thread:
```
public class MyMain {
	public static void main(String[] args) throws InterruptedException {
		// start a new Thread that has no relation to this Project in Stacktrace:
		new Thread(with_cp.HelloWorldWithCP::new).start();
		// could be debugged: 
		// new with_cp.HelloWorldWithCP();
		Thread.sleep(1000000000); // do not exit
	}
}

```
Debugging this will not open the "".class"" file but a java file that is not linked to the workspace. 
![image](https://user-images.githubusercontent.com/51790620/174576433-e8568d9a-f33e-42fc-8e21-3131dd27cd75.png)

I created a minimal reproducer project:
[Example_Project.zip](https://github.com/eclipse-jdt/eclipse.jdt.debug/files/8939505/Example_Project.zip)

Could someone fix it, please? I do not understand how an innocent Manifest can harm debugging that much.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5FJ-0e/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/68,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5z9nBr,eclipse.jdt.debug,1945530475,68,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-15T07:54:05Z,2024-02-15T07:54:05Z,not planned,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5z9nBr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/69,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/69,eclipse.jdt.debug,1273130252,69,Compilation Errors in  I20220615-1800,sravanlakkimsetti,77106773,Sravan Kumar Lakkimsetti,,CLOSED,2022-06-16T06:48:50Z,2022-07-07T07:47:18Z,"Build failed with the following errors
```
 [ERROR] Failed to execute goal org.eclipse.tycho:tycho-compiler-plugin:3.0.0-SNAPSHOT:compile (default-compile) on project org.eclipse.jdt.launching: Compilation failure: Compilation failure: 
 [ERROR] /home/jenkins/agent/workspace/I-build-4.25/eclipse.platform.releng.aggregator/eclipse.platform.releng.aggregator/cje-production/gitCache/eclipse.platform.releng.aggregator/eclipse.jdt.debug/org.eclipse.jdt.launching/launching/org/eclipse/jdt/launching/JavaRuntime.java:[3370] 
 [ERROR] 	} else if (javaVersion.startsWith(JavaCore.VERSION_19)
 [ERROR] 	                                           ^^^^^^^^^^
 [ERROR] VERSION_19 cannot be resolved or is not a field
 [ERROR] /home/jenkins/agent/workspace/I-build-4.25/eclipse.platform.releng.aggregator/eclipse.platform.releng.aggregator/cje-production/gitCache/eclipse.platform.releng.aggregator/eclipse.jdt.debug/org.eclipse.jdt.launching/launching/org/eclipse/jdt/launching/JavaRuntime.java:[3371] 
 [ERROR] 	&& (javaVersion.length() == JavaCore.VERSION_19.length() || javaVersion.charAt(JavaCore.VERSION_19.length()) == '.')) {
 [ERROR] 	                                     ^^^^^^^^^^
 [ERROR] VERSION_19 cannot be resolved or is not a field
 [ERROR] /home/jenkins/agent/workspace/I-build-4.25/eclipse.platform.releng.aggregator/eclipse.platform.releng.aggregator/cje-production/gitCache/eclipse.platform.releng.aggregator/eclipse.jdt.debug/org.eclipse.jdt.launching/launching/org/eclipse/jdt/launching/JavaRuntime.java:[3371] 
 [ERROR] 	&& (javaVersion.length() == JavaCore.VERSION_19.length() || javaVersion.charAt(JavaCore.VERSION_19.length()) == '.')) {
 [ERROR] 	                                                                                        ^^^^^^^^^^
 [ERROR] VERSION_19 cannot be resolved or is not a field
 [ERROR] /home/jenkins/agent/workspace/I-build-4.25/eclipse.platform.releng.aggregator/eclipse.platform.releng.aggregator/cje-production/gitCache/eclipse.platform.releng.aggregator/eclipse.jdt.debug/org.eclipse.jdt.launching/launching/org/eclipse/jdt/launching/JavaRuntime.java:[3374] 
 [ERROR] 	compliance = JavaCore.VERSION_19; // use latest by default
 [ERROR] 	                      ^^^^^^^^^^
 [ERROR] VERSION_19 cannot be resolved or is not a field
 [ERROR] /home/jenkins/agent/workspace/I-build-4.25/eclipse.platform.releng.aggregator/eclipse.platform.releng.aggregator/cje-production/gitCache/eclipse.platform.releng.aggregator/eclipse.jdt.debug/org.eclipse.jdt.launching/launching/org/eclipse/jdt/internal/launching/StandardVMType.java:[852] 
 [ERROR] 	if (version.startsWith(JavaCore.VERSION_19)) {
 [ERROR] 	                                ^^^^^^^^^^
 [ERROR] VERSION_19 cannot be resolved or is not a field
 [ERROR] /home/jenkins/agent/workspace/I-build-4.25/eclipse.platform.releng.aggregator/eclipse.platform.releng.aggregator/cje-production/gitCache/eclipse.platform.releng.aggregator/eclipse.jdt.debug/org.eclipse.jdt.launching/launching/org/eclipse/jdt/internal/launching/environments/EnvironmentsManager.java:[201] 
 [ERROR] 	if (desc.indexOf(JavaCore.VERSION_19) != -1) {
 [ERROR] 	                          ^^^^^^^^^^
 [ERROR] VERSION_19 cannot be resolved or is not a field
 [ERROR] /home/jenkins/agent/workspace/I-build-4.25/eclipse.platform.releng.aggregator/eclipse.platform.releng.aggregator/cje-production/gitCache/eclipse.platform.releng.aggregator/eclipse.jdt.debug/org.eclipse.jdt.launching/launching/org/eclipse/jdt/internal/launching/environments/EnvironmentsManager.java:[202] 
 [ERROR] 	return JavaCore.VERSION_19;
 [ERROR] 	                ^^^^^^^^^^
 [ERROR] VERSION_19 cannot be resolved or is not a field
 [ERROR] /home/jenkins/agent/workspace/I-build-4.25/eclipse.platform.releng.aggregator/eclipse.platform.releng.aggregator/cje-production/gitCache/eclipse.platform.releng.aggregator/eclipse.jdt.debug/org.eclipse.jdt.launching/launching/org/eclipse/jdt/internal/launching/EECompilationParticipant.java:[240] 
 [ERROR] 	} else if (version.startsWith(JavaCore.VERSION_19)) {
 [ERROR] 	                                       ^^^^^^^^^^
 [ERROR] VERSION_19 cannot be resolved or is not a field
 [ERROR] /home/jenkins/agent/workspace/I-build-4.25/eclipse.platform.releng.aggregator/eclipse.platform.releng.aggregator/cje-production/gitCache/eclipse.platform.releng.aggregator/eclipse.jdt.debug/org.eclipse.jdt.launching/launching/org/eclipse/jdt/internal/launching/EECompilationParticipant.java:[241] 
 [ERROR] 	return JavaCore.VERSION_19;
 [ERROR] 	                ^^^^^^^^^^
 [ERROR] VERSION_19 cannot be resolved or is not a field
 [ERROR] 9 problems (9 errors)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/69/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/69,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5E-vbw,eclipse.jdt.debug,1157297904,69,NA,sravanlakkimsetti,77106773,Sravan Kumar Lakkimsetti,,NA,2022-06-16T06:49:09Z,2022-06-16T06:49:09Z,Notifications: @SarikaSinha ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5E-vbw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/69,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5E-wDQ,eclipse.jdt.debug,1157300432,69,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-06-16T06:52:48Z,2022-06-16T06:52:48Z,"@sravanlakkimsetti : since github doesn't allows to revert online, and I have no IDE access, could you please revert this commit:

https://github.com/eclipse-jdt/eclipse.jdt.debug/commit/259a3f57b243c56b6351b01e0f70ac020a8af5d6","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5E-wDQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/69,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5E-6jy,eclipse.jdt.debug,1157343474,69,NA,sravanlakkimsetti,77106773,Sravan Kumar Lakkimsetti,,NA,2022-06-16T07:45:18Z,2022-06-16T07:45:18Z,Reverted via #70 ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5E-6jy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/69,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5E_MJt,eclipse.jdt.debug,1157415533,69,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-06-16T09:03:23Z,2022-06-16T09:03:23Z,Thanks Sravan,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5E_MJt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/72,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/72,eclipse.jdt.debug,1276872113,72,Eclipse 2022-06: Unable to create the selected preference page. NoClassDefFound,deamn,4726480,Nicolas De Amicis,,CLOSED,2022-06-20T12:42:59Z,2022-06-30T05:43:07Z,"Hello, I installed on win10 with JustJ 17 Eclipse 2022-06 and it doesn't work (like 2022-03). I have this error when I navigate through Window>Preferences>Java>Installed JREs : 
```
Unable to create the selected preference page.
An error occurred while automatically activating bundle org.eclipse.jdt.debug.ui (400).
```

Here the  log file details:
```
java.lang.ClassNotFoundException: An error occurred while automatically activating bundle org.eclipse.jdt.debug.ui (400).
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:126)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:570)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:335)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:397)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass0(BundleLoader.java:500)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:416)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:168)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.loadClass(EquinoxBundle.java:622)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:196)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:920)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:246)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:63)
	at org.eclipse.ui.internal.WorkbenchPlugin.lambda$0(WorkbenchPlugin.java:287)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.java:285)
	at org.eclipse.ui.internal.dialogs.WorkbenchPreferenceNode.createPage(WorkbenchPreferenceNode.java:52)
	at org.eclipse.jface.preference.PreferenceDialog.createPage(PreferenceDialog.java:1280)
	at org.eclipse.ui.internal.dialogs.FilteredPreferenceDialog.createPage(FilteredPreferenceDialog.java:338)
	at org.eclipse.jface.preference.PreferenceDialog.showPage(PreferenceDialog.java:1166)
	at org.eclipse.ui.internal.dialogs.FilteredPreferenceDialog.showPage(FilteredPreferenceDialog.java:630)
	at org.eclipse.jface.preference.PreferenceDialog$5.lambda$0(PreferenceDialog.java:660)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jface.preference.PreferenceDialog$5.selectionChanged(PreferenceDialog.java:657)
	at org.eclipse.jface.viewers.StructuredViewer$3.run(StructuredViewer.java:821)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.StructuredViewer.firePostSelectionChanged(StructuredViewer.java:818)
	at org.eclipse.jface.viewers.StructuredViewer.handlePostSelect(StructuredViewer.java:1191)
	at org.eclipse.swt.events.SelectionListener$1.widgetSelected(SelectionListener.java:84)
	at org.eclipse.jface.util.OpenStrategy.firePostSelectionEvent(OpenStrategy.java:284)
	at org.eclipse.jface.util.OpenStrategy$1.lambda$1(OpenStrategy.java:438)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4043)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3648)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:66)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4251)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4068)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3645)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
Caused by: org.osgi.framework.BundleException: Error starting module. osgi.identity; osgi.identity=""org.eclipse.jdt.debug.ui""; type=""osgi.bundle""; version:Version=""3.12.700.v20220513-0809""; singleton:=""true"" [id=400]
	at org.eclipse.osgi.container.Module.doStart(Module.java:614)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:513)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	... 67 more
Caused by: java.lang.NoClassDefFoundError: org/eclipse/jdt/debug/core/IJavaHotCodeReplaceListener
	at java.base/java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3373)
	at java.base/java.lang.Class.getConstructor0(Class.java:3578)
	at java.base/java.lang.Class.getConstructor(Class.java:2271)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.loadBundleActivator(BundleContextImpl.java:801)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:753)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1032)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:371)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	... 70 more
Caused by: java.lang.ClassNotFoundException: An error occurred while automatically activating bundle org.eclipse.jdt.debug (399).
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:126)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:570)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:335)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:397)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:41)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass0(BundleLoader.java:496)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:416)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:168)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	... 79 more
Caused by: org.osgi.framework.BundleException: Exception in org.eclipse.jdt.internal.debug.core.JDIDebugPlugin.start() of bundle org.eclipse.jdt.debug.
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:839)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:767)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1032)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:371)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:513)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	... 87 more
Caused by: java.lang.NoClassDefFoundError: org/eclipse/jdt/core/JavaModelException
	at org.eclipse.jdt.internal.debug.core.JDIDebugPlugin.start(JDIDebugPlugin.java:321)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:818)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:1)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:810)
	... 94 more
Caused by: java.lang.ClassNotFoundException: An error occurred while automatically activating bundle org.eclipse.jdt.core (396).
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:126)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:570)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:335)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:397)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:41)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass0(BundleLoader.java:496)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:416)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:168)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	at java.base/java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3373)
	at java.base/java.lang.Class.getConstructor0(Class.java:3578)
	at java.base/java.lang.Class.getConstructor(Class.java:2271)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.loadBundleActivator(BundleContextImpl.java:801)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:753)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1032)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:371)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:513)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:570)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:335)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:397)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass0(BundleLoader.java:500)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:416)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:168)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.loadClass(EquinoxBundle.java:622)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:196)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:920)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:246)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:63)
	at org.eclipse.ui.internal.navigator.filters.CommonFilterDescriptor$1.run(CommonFilterDescriptor.java:141)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.navigator.filters.CommonFilterDescriptor.createFilter(CommonFilterDescriptor.java:121)
	at org.eclipse.ui.internal.navigator.NavigatorFilterService.getViewerFilter(NavigatorFilterService.java:197)
	at org.eclipse.ui.internal.navigator.NavigatorFilterService.getVisibleFilters(NavigatorFilterService.java:166)
	at org.eclipse.ui.navigator.CommonNavigator.createPartControl(CommonNavigator.java:194)
	at org.eclipse.ui.navigator.resources.ProjectExplorer.createPartControl(ProjectExplorer.java:161)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.createPartControl(CompatibilityPart.java:158)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityView.createPartControl(CompatibilityView.java:155)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.create(CompatibilityPart.java:365)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:995)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:960)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalInject(InjectorImpl.java:140)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:403)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:330)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:202)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:91)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:60)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:42)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributedPartRenderer.createWidget(ContributedPartRenderer.java:132)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:995)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run(PartRenderingEngine.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:528)
	at org.eclipse.e4.ui.workbench.renderers.swt.ElementReferenceRenderer.createWidget(ElementReferenceRenderer.java:73)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:995)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.showTab(StackRenderer.java:1209)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:116)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:677)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:116)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:64)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:677)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1083)
	... 20 more
Caused by: org.osgi.framework.BundleException: Exception in org.eclipse.jdt.core.JavaCore.start() of bundle org.eclipse.jdt.core.
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:839)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:767)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1032)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:371)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:513)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	... 133 more
Caused by: java.nio.file.InvalidPathException: Illegal char <>> at index 46: C:\Users\xxx\.m2\repository\log4j\log4j\>1.2.17\log4j->1.2.17.jar
	at java.base/sun.nio.fs.WindowsPathParser.normalize(WindowsPathParser.java:182)
	at java.base/sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:153)
	at java.base/sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:77)
	at java.base/sun.nio.fs.WindowsPath.parse(WindowsPath.java:92)
	at java.base/sun.nio.fs.WindowsFileSystem.getPath(WindowsFileSystem.java:232)
	at java.base/java.io.File.toPath(File.java:2387)
	at org.eclipse.jdt.internal.core.ExternalFoldersManager.isExternalFolderPath(ExternalFoldersManager.java:161)
	at org.eclipse.jdt.internal.core.JavaProject.addToResult(JavaProject.java:3363)
	at org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:3313)
	at org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:3434)
	at org.eclipse.jdt.internal.core.DeltaProcessingState.getRootInfos(DeltaProcessingState.java:332)
	at org.eclipse.jdt.internal.core.DeltaProcessingState.initializeRootsWithPreviousSession(DeltaProcessingState.java:305)
	at org.eclipse.jdt.internal.core.JavaModelManager.startup(JavaModelManager.java:5351)
	at org.eclipse.jdt.core.JavaCore.start(JavaCore.java:6446)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:818)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:1)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:810)
	... 140 more
```

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/72/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/72,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5FLyUb,eclipse.jdt.debug,1160717595,72,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-06-20T18:04:31Z,2022-06-20T18:04:31Z,"Is this a fresh install? Looks that the install is corrupted.
Can you check in a fresh install?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5FLyUb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/72,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5FOTQ-,eclipse.jdt.debug,1161376830,72,NA,deamn,4726480,Nicolas De Amicis,,NA,2022-06-21T07:40:39Z,2022-06-21T07:40:39Z,"What do you mean with ""fresh install""? I retried today like this: dropped folder .p2 from home user dir, launched eclipse-installer (latest), choose Eclipse for JEE dev, choose JustJ 17 and install in a new folder destination. After, I always this error and Eclipse is unusable.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5FOTQ-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/72,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5FOT1O,eclipse.jdt.debug,1161379150,72,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-06-21T07:42:56Z,2022-06-21T07:42:56Z,"Please check this dependency of one of your projects, it seem to be using invalid path characters `>`: `C:\Users\xxx\.m2\repository\log4j\log4j\>1.2.17\log4j->1.2.17.jar`","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5FOT1O/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/72,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5FOfLL,eclipse.jdt.debug,1161425611,72,NA,deamn,4726480,Nicolas De Amicis,,NA,2022-06-21T08:24:41Z,2022-06-21T08:24:41Z,"I saw this error and I also deleted .m2 cache but they isn't any invalid characters... I don't understand this error:

```
C:\Users\xxx\.m2\repository\log4j\log4j\1.2.17>dir
 Volume in drive C is OSDisk
 Volume Serial Number is XXXX-XXXX

 Directory of C:\Users\xxx\.m2\repository\log4j\log4j\1.2.17

20.06.2022  14:34    <DIR>          .
20.06.2022  14:34    <DIR>          ..
20.06.2022  14:34           489 884 log4j-1.2.17.jar
20.06.2022  14:34                40 log4j-1.2.17.jar.sha1
20.06.2022  14:34            21 745 log4j-1.2.17.pom
20.06.2022  14:34                40 log4j-1.2.17.pom.sha1
20.06.2022  14:34               213 _remote.repositories
               5 File(s)        511 922 bytes
               2 Dir(s)  83 933 327 360 bytes free
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5FOfLL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/72,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5FyNBV,eclipse.jdt.debug,1170788437,72,NA,deamn,4726480,Nicolas De Amicis,,NA,2022-06-30T05:43:07Z,2022-06-30T05:43:07Z,I tested under linux and it is ok. Under windows I retried with a new workspace and the problem was solved,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5FyNBV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/73,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/73,eclipse.jdt.debug,1277951635,73,Improve slow launch on big workspace,jukzi,51790620,Jörg Kubitz,,CLOSED,2022-06-21T06:25:13Z,2022-09-16T00:36:54Z,"When a workspace contains a lot of libraries and a lot of projects launching can take some seconds.
![image](https://user-images.githubusercontent.com/51790620/174729492-045f7e3d-f614-413c-a549-ade006545ca2.png)
I sampled the usecase and found that the time is used to search the path in the workspace .
In my case (~500 libraries in ~ 500 projects) 2.3 of 2.6 seconds are spend below RuntimeClasspathEntry.getResource ():
![image](https://user-images.githubusercontent.com/51790620/174725955-5ddec6d9-22ca-4ef4-be18-1f5f173c15a3.png)
The searching happens because it is not known if the ""path"" is a workspace relative path or an absolute path to filesystem.
The problem is that searching for a filesystem path in the workspace costs number of projects times number of libraries, as seen in the call count:
![image](https://user-images.githubusercontent.com/51790620/174728906-d5e9ed51-4cb7-4d0d-ac2f-01136244a6e8.png)
Searching in the workspace for a relative path is much faster and should be tried first. 
That reduces the launch time in my case to almost instantly (0.3 seconds):
![image](https://user-images.githubusercontent.com/51790620/174729918-4944e247-df7d-4ba2-8359-cb2c49d5ce30.png)

That technique was already used in Bug 546723 but did not cover the case of libraries inside the workspace.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/73/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/77,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/77,eclipse.jdt.debug,1281898061,77,ConfigurationEncodingTests.testGetSystemDefaultEncoding failure,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2022-06-23T06:47:21Z,2022-07-07T07:46:06Z,"Since [this change](https://github.com/eclipse-platform/eclipse.platform.ui/pull/125) is merged, `ConfigurationEncodingTests.testGetSystemDefaultEncoding` test fails on all platforms with 
```
The configuration encoding should match the file system encoding expected:<UTF-[8]> but was:<UTF-[16BE]>

junit.framework.ComparisonFailure: The configuration encoding should match the file system encoding expected:<UTF-[8]> but was:<UTF-[16BE]>
at junit.framework.Assert.assertEquals(Assert.java:100)
at junit.framework.TestCase.assertEquals(TestCase.java:253)
at org.eclipse.jdt.debug.tests.launching.ConfigurationEncodingTests.testGetSystemDefaultEncoding(ConfigurationEncodingTests.java:72)
```

See https://download.eclipse.org/eclipse/downloads/drops4/I20220622-1800/testresults/html/org.eclipse.jdt.debug.tests_ep425I-unit-cen64-gtk3-java11_linux.gtk.x86_64_11.html

I plan to provide a fix.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/77/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/78,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/78,eclipse.jdt.debug,1282096508,78,stale branches,jukzi,51790620,Jörg Kubitz,,CLOSED,2022-06-23T09:27:08Z,2022-06-24T07:11:49Z,"hi JDT, would you mind to clean up stale branches. especially such with confusing names like
""for-master"", ""for/master"" 
https://github.com/eclipse-jdt/eclipse.jdt.debug/branches/stale","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/78/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/78,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5FZJef,eclipse.jdt.debug,1164220319,78,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-06-23T10:05:10Z,2022-06-23T10:05:10Z,"@sravanlakkimsetti 
Is it ok to delete? 

From my side, +1 to delete these stale branches.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5FZJef/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/78,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5FZORh,eclipse.jdt.debug,1164239969,78,NA,sravanlakkimsetti,77106773,Sravan Kumar Lakkimsetti,,NA,2022-06-23T10:26:02Z,2022-06-23T10:26:02Z,+1 from my side as well. Be careful and do not delete branches related to beta java work and maintenance branches. Some of them will be reported as stale. but should not be deleted,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5FZORh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/78,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Fc2Rg,eclipse.jdt.debug,1165190240,78,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-06-24T04:44:15Z,2022-06-24T04:44:15Z,"@jukzi 
I don't see branches named: ""for-master"", ""for/master"".
https://github.com/eclipse-jdt/eclipse.jdt.debug/branches/stale


Planning to delete these stale branches :
Jared_Breakpoints
unlabeled-1.1.2
unlabeled-1.9.2
STABLE
jdt_debug_Patch_12/18
debug-milestone-2
debug-milestone-3
debug-milestone-4
Debug-M5
JDK_1_5
J2SE5_Connectors
test_failures
bug82587
integration



","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Fc2Rg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/78,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Fc2vn,eclipse.jdt.debug,1165192167,78,NA,sravanlakkimsetti,77106773,Sravan Kumar Lakkimsetti,,NA,2022-06-24T04:48:27Z,2022-06-24T04:48:27Z,+1 from my side,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Fc2vn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/78,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5FdHYU,eclipse.jdt.debug,1165260308,78,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-06-24T06:51:14Z,2022-06-24T06:51:14Z,Done!,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5FdHYU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/78,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5FdK2j,eclipse.jdt.debug,1165274531,78,NA,jukzi,51790620,Jörg Kubitz,,NA,2022-06-24T07:11:49Z,2022-06-24T07:11:49Z,"> I don't see branches named: ""for-master"", ""for/master"".

looks like @iloveeclipse deleted it yeterday :
```
{
    ""id"": ""22498314308"",
    ""type"": ""DeleteEvent"",
    ""actor"": {
      ""id"": 964108,
      ""login"": ""iloveeclipse"",
      ""display_login"": ""iloveeclipse"",
      ""gravatar_id"": """",
      ""url"": ""https://api.github.com/users/iloveeclipse"",
      ""avatar_url"": ""https://avatars.githubusercontent.com/u/964108?""
    },
    ""repo"": {
      ""id"": 476635884,
      ""name"": ""eclipse-jdt/eclipse.jdt.debug"",
      ""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug""
    },
    ""payload"": {
      ""ref"": ""for-master"",
      ""ref_type"": ""branch"",
      ""pusher_type"": ""user""
    },
    ""public"": true,
    ""created_at"": ""2022-06-23T09:30:46Z"",
    ""org"": {
      ""id"": 102054714,
      ""login"": ""eclipse-jdt"",
      ""gravatar_id"": """",
      ""url"": ""https://api.github.com/orgs/eclipse-jdt"",
      ""avatar_url"": ""https://avatars.githubusercontent.com/u/102054714?""
    }
  }
```
https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/events?page=2

> Done!

thanks","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5FdK2j/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/82,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/82,eclipse.jdt.debug,1301496211,82,Have serial number for breakpoints ( similar to line number in java editor),vik-chand,99390647,Vikas Chandra,,OPEN,2022-07-12T03:48:03Z,2024-09-14T12:52:13Z,"Many times, I debug with 50+breakpoints ( especially while on jdt.core). I know there are
multiple grouping options. 

However, it will be very convenient if there are serial number for breakpoints. It could be disabled by default
if performance issue is a concern.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/82/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/82,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6MILbi,eclipse.jdt.debug,2350954210,82,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-09-14T11:09:02Z,2024-09-14T11:09:02Z,"what is the use of a serial number? i guess you more need something like ""link with source"" so that you can navigate from source to breakpoint
![image](https://github.com/user-attachments/assets/8d867533-b676-4dfd-a59a-a1d4bfec5f12)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6MILbi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/82,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6MIRnG,eclipse.jdt.debug,2350979526,82,NA,SougandhS,177713286,Sougandh S,,NA,2024-09-14T12:49:51Z,2024-09-14T12:49:51Z,"> what is the use of a serial number? i guess you more need something like ""link with source"" so that you can navigate from source to breakpoint ![image](https://private-user-images.githubusercontent.com/51790620/367510565-8d867533-b676-4dfd-a59a-a1d4bfec5f12.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjYzMTgxNTksIm5iZiI6MTcyNjMxNzg1OSwicGF0aCI6Ii81MTc5MDYyMC8zNjc1MTA1NjUtOGQ4Njc1MzMtYjY3Ni00ZGZkLWE1OWEtYTFkNGJmZWM1ZjEyLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA5MTQlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwOTE0VDEyNDQxOVomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTA5NTdmYzExMjNlMzhlMjYxNmQ3MjhmMDY1ODU1YmRmMTk2MWMxNTIxYjE3NjhhZGE1OTZiZDljMzQ4YWRkNDYmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.4CrkX-6WBMrJ2N97FcWbQDthvyJG8c4M03_yt-8pYcs)

""_similar to line number in java editor_"" -> maybe he meant breakpoint no. ?
something like this ?

![image](https://github.com/user-attachments/assets/7d26db43-a1a6-4a23-803b-6f6dbb5163bb)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6MIRnG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/83,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/83,eclipse.jdt.debug,1303104326,83,[API] promote org.eclipse.jdt.internal.debug.core.breakpoints.ValidBreakpointLocationLocator into an API,gayanper,7471994,Gayan Perera,,OPEN,2022-07-13T08:40:30Z,2022-07-13T11:02:22Z,"This classes has usages in vscode java debug plugin to locate elements using the AST tree with given line numbers. providing a better API for this from jdt debug will enable this to be used in such plugins without depending on internals. Also this might be use full for other types of plugins. May be this could be moved to jdt.core since this doesn't have any debug related business logic.

@SarikaSinha WDYT ?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/83/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/83,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Ggy7E,eclipse.jdt.debug,1183002308,83,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-07-13T09:41:03Z,2022-07-13T09:41:03Z,"Initially the class existed in debug.ui
org.eclipse.jdt.internal.debug.ui.actions.ValidBreakpointLocationLocator
Which got later moved to debug.core  but was not removed from ui..

I suspect that this might be used from JSDT also even if this is defined in internal package.
I am fine with making it as an API, but moving might break many plug-ins I feel.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Ggy7E/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/83,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5GhGDA,eclipse.jdt.debug,1183080640,83,NA,gayanper,7471994,Gayan Perera,,NA,2022-07-13T11:02:22Z,2022-07-13T11:02:22Z,"@SarikaSinha yes moving might cause issues unless we mirror the class by extending the API. But I’m also fine moving this to debug.core API to start with and add some more APIs such as to get the AST node or binding for matching location. 

I will try to add a API and send a PR","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5GhGDA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/84,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/84,eclipse.jdt.debug,1306041075,84,"JDT produces nested argfiles, which Java doesn't support",nmishkin,2737499,Nathaniel Mishkin,,CLOSED,2022-07-13T18:47:20Z,2022-07-30T18:50:54Z,"When launching a configuration with ""Use @argfile"" enabled, it appears to be the case that if the Java command line being generated by the JDT is sufficiently long, the generated argfile itself contains a reference to yet another generated argfile. However, AFAICT Java doesn't supported nested argfiles like this.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/84/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/84,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Gqgjh,eclipse.jdt.debug,1185548513,84,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-07-15T13:29:44Z,2022-07-15T13:29:44Z,"Could you please provide steps to reproduce / example of such file?
If I enable ""use argfile when launching"" I see the file with  expected arguments and without other @argfile reference?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Gqgjh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/84,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Gq6O5,eclipse.jdt.debug,1185653689,84,NA,nmishkin,2737499,Nathaniel Mishkin,,NA,2022-07-15T15:26:41Z,2022-07-15T15:26:41Z,"See the attached [tarfile](https://github.com/eclipse-jdt/eclipse.jdt.core/files/9121535/dummy.tar.gz) of a project that exhibits the behavior. But really it's simply a matter of making a run config with a large-enough amount of stuff in the ""VM arguments"" section.

When I launch the configuration I get this in the Console view:

```
Error: Could not find or load main class @.Users.nmishkin.Documents.workspace_Repos_newton5.dummy..temp-Dummy-classpath-arg-1657894011167.txt
Caused by: java.lang.ClassNotFoundException: @/Users/nmishkin/Documents/workspace_Repos_newton5/dummy//temp-Dummy-classpath-arg-1657894011167/txt
```

If instead of launching the configuration I do ""Show command line"" I get a command line like:

```
/Library/Java/JavaVirtualMachines/amazon-corretto-17.jdk/Contents/Home/bin/java @/Users/nmishkin/Documents/workspace_Repos_newton5/dummy/.temp-Dummy-args-1657895344160.txt
```
Here's the argfile named above: [temp-Dummy-args-1657895344160.txt](https://github.com/eclipse-jdt/eclipse.jdt.debug/files/9122049/temp-Dummy-args-1657895344160.txt). It contains this:

```
@/Users/nmishkin/Documents/workspace_Repos_newton5/dummy/.temp-Dummy-classpath-arg-1657895344159.txt
```
Here's the argfile named above: [temp-Dummy-classpath-arg-1657895344159.txt](https://github.com/eclipse-jdt/eclipse.jdt.debug/files/9122055/temp-Dummy-classpath-arg-1657895344159.txt).
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Gq6O5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/84,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5HiHqA,eclipse.jdt.debug,1200126592,84,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-07-30T09:49:30Z,2022-07-30T09:49:30Z,"Thanks for example. This is a regression from https://bugs.eclipse.org/bugs/show_bug.cgi?id=565902.
Here is the [original feature request](https://bugs.java.com/bugdatabase/view_bug.do?bug_id=JDK-8027634) where the argfile support for java was introduced.
The added [Oracle's tool guide](https://docs.oracle.com/javase/9/tools/java.htm#JSWOR-GUID-4856361B-8BFD-4964-AE84-121F5F6CF111) explicitly states: 

> Use of the at sign (@) to recursively interpret files isn’t supported.

That was obviously not considered while [bug 565902](https://bugs.eclipse.org/bugs/show_bug.cgi?id=565902) patching.

I will push a patch in a moment.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5HiHqA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/86,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/86,eclipse.jdt.debug,1310005881,86,"Issue with JAR in debug mode with m2e (""no java context"")",glhez,10855953,,,OPEN,2022-07-19T20:20:59Z,2024-06-18T07:52:26Z,"Hello,

Since latest version of Eclipse (I'd say at least 2021-12), I am under the impression that Eclipse fails at inspecting the context of variable/evaluating/properly displaying the *.class I am stepping into.

This affects expressions **and** conditional breakpoints since the context is being used to compile conditional expressions: the debugger is practically useless without those.

The screenshot below provides 4 examples of problem with the debug mode, from which I fail to understand why it fails while it was not:

| Screenshot                                                                                                                                                       | Description                                                                                       |
| ---------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------- |
| <img width=""856"" alt=""eclipse_no_debug_context_01"" src=""https://user-images.githubusercontent.com/10855953/160722834-90ec629c-ec0f-4d2d-ae7c-cb247a59985c.png"">  | a Tomcat 8.5 Server launch and Spring 5 (no spring boot)                                          |
| <img width=""1186"" alt=""eclipse_no_debug_context_02"" src=""https://user-images.githubusercontent.com/10855953/160722837-72f1057c-b9bc-44db-8ebc-bd9f5c700897.png""> | a JUnit 3 unit test with Spring 3 (sic)                                                           |
| <img width=""959"" alt=""eclipse_no_debug_context_03"" src=""https://user-images.githubusercontent.com/10855953/160722839-2e92d6b1-a68b-4dbc-ac9f-f98a9b9c01ce.png"">  | a JUnit 4 unit test for issue HHH-15142; we can see the breadcumb and local variables being lost  |
| <img width=""958"" alt=""eclipse_no_debug_context_04"" src=""https://user-images.githubusercontent.com/10855953/160722841-292fb1f3-c3d2-42bd-81fc-3ad048f18045.png"">  | same project as eclipse_no_debug_context_03.png; unlike before, the local variables are resolved; |

In all these screenshot, we can see the breadcumb not displaying the enclosing type/file: this is strange because the editor title is properly set, and the window title also references the JAR from which the source file comes (but I don't know if it should read ""junit-4.13.2-sources.jar"" and not ""junit-4.13.2.jar"".

The first two screenshot were taken from a work related project which I can't attach here.

The last two screenshots were taken using the sample project from issue HHH-15142 (https://github.com/schauder/issue-HHH-15142 and https://github.com/spring-projects/spring-data-jpa/issues/2472):

- Clone the GIT repository
- In Eclipse, go to File > Import > Import Maven project
- Browse to where GIT repository was cloned
- Go to type `org.hibernate.query.spi.QueryParameterBindingValidator` and put a breakpoint at line 53 where the ""_Parameter value [%s] did not match expected type [%s (%s)]_"" should be.
- Put a breakpoint to `org.hibernate.query.spi.QueryParameterBindingValidator` line 53
- Go to `JPAUnitTestCase`
- Run it as JUnit 4 test (the default F11 will try to use JUnit Jupiter and find nothing)
- Wait for Eclipse to switch/ask to use Debug perspective
- Navigate the stack trace

The table below shows when it fails: some JAR are from Maven, while other are from Eclipse bundle.

| breadcumb | local variables | source         | Type / Method / Line                                                                                               |
| --------- | --------------- | -------------- | ------------------------------------------------------------------------------------------------------------------ |
| Ok        | Ok              | JAR: Hibernate | `QueryParameterBindingValidator.validate(Type, Object, TemporalType) line: 53`                                     |
| Ok        | Ok              | JAR: Hibernate | `QueryParameterBindingValidator.validate(Type, Object) line: 27`                                                   |
| Ok        | Ok              | JAR: Hibernate | `QueryParameterBindingImpl<T>.validate(T) line: 90`                                                                |
| Ok        | Ok              | JAR: Hibernate | `QueryParameterBindingImpl<T>.setBindValue(T) line: 55`                                                            |
| Ok        | Ok              | JAR: Hibernate | `QueryImpl<R>(AbstractProducedQuery<R>).setParameter(String, Object) line: 501`                                    |
| Ok        | Ok              | JAR: Hibernate | `QueryImpl<R>(AbstractProducedQuery<R>).setParameter(String, Object) line: 122`                                    |
| Ok        | Ok              | JAR: Hibernate | `CriteriaCompiler$1$1.bind(TypedQuery) line: 141`                                                                  |
| Ok        | Ok              | JAR: Hibernate | `CriteriaQueryImpl$1.buildCompiledQuery(SharedSessionContractImplementor, InterpretedParameterMetadata) line: 364` |
| Ok        | Ok              | JAR: Hibernate | `CriteriaCompiler.compile(CompilableCriteria) line: 171`                                                           |
| Ok        | Ok              | JAR: Hibernate | `SessionImpl(AbstractSharedSessionContract).createQuery(CriteriaQuery<T>) line: 774`                               |
| Ok        | Ok              | JAR: Hibernate | `SessionImpl(AbstractSessionImpl).createQuery(CriteriaQuery) line: 23`                                             |
| Ok        | Ok              | Project        | `JPAUnitTestCase.hhh123Test() line: 65`                                                                            |
| Ok        | Ok              | JDK            | `NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]`                   |
| Ok        | Ok              | JDK            | `NativeMethodAccessorImpl.invoke(Object, Object[]) line: 62`                                                       |
| Ok        | Ok              | JDK            | `DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 43`                                                   |
| Ok        | Ok              | JDK            | `Method.invoke(Object, Object...) line: 498`                                                                       |
| Fail      | Fail            | JAR: JUnit     | `FrameworkMethod$1.runReflectiveCall() line: 59`                                                                   |
| Fail      | (none)          | JAR: JUnit     | `FrameworkMethod$1(ReflectiveCallable).run() line: 12`                                                             |
| Fail      | Ok              | JAR: JUnit     | `FrameworkMethod.invokeExplosively(Object, Object...) line: 56`                                                    |
| Fail      | (none)          | JAR: JUnit     | `InvokeMethod.evaluate() line: 17`                                                                                 |
| Fail      | (none)          | JAR: JUnit     | `RunBefores.evaluate() line: 26`                                                                                   |
| Fail      | Ok              | JAR: JUnit     | `RunAfters.evaluate() line: 27`                                                                                    |
| Fail      | Fail            | JAR: JUnit     | `ParentRunner$3.evaluate() line: 306`                                                                              |
| Fail      | Fail            | JAR: JUnit     | `BlockJUnit4ClassRunner$1.evaluate() line: 100`                                                                    |
| Fail      | Ok              | JAR: JUnit     | `JUnit4(ParentRunner<T>).runLeaf(Statement, Description, RunNotifier) line: 366`                                   |
| Fail      | Ok              | JAR: JUnit     | `JUnit4(BlockJUnit4ClassRunner).runChild(FrameworkMethod, RunNotifier) line: 103`                                  |
| Fail      | Ok              | JAR: JUnit     | `JUnit4(BlockJUnit4ClassRunner).runChild(Object, RunNotifier) line: 63`                                            |
| Fail      | Fail            | JAR: JUnit     | `ParentRunner$4.run() line: 331`                                                                                   |
| Fail      | Ok              | JAR: JUnit     | `ParentRunner$1.schedule(Runnable) line: 79`                                                                       |
| Fail      | Ok              | JAR: JUnit     | `JUnit4(ParentRunner<T>).runChildren(RunNotifier) line: 329`                                                       |
| Fail      | Ok              | JAR: JUnit     | `ParentRunner<T>.access$100(ParentRunner, RunNotifier) line: 66`                                                   |
| Fail      | Fail            | JAR: JUnit     | `ParentRunner$2.evaluate() line: 293`                                                                              |
| Fail      | Fail            | JAR: JUnit     | `ParentRunner$3.evaluate() line: 306`                                                                              |
| Fail      | Ok              | JAR: JUnit     | `JUnit4(ParentRunner<T>).run(RunNotifier) line: 413`                                                               |
| No source | No source       | Eclipse Bundle | `JUnit4TestReference.run(TestExecution) line: 93`                                                                  |
| No source | No source       | Eclipse Bundle | `TestExecution.run(ITestReference[]) line: 40`                                                                     |
| No source | No source       | Eclipse Bundle | `RemoteTestRunner.runTests(String[], String, TestExecution) line: 529`                                             |
| No source | No source       | Eclipse Bundle | `RemoteTestRunner.runTests(TestExecution) line: 756`                                                               |
| No source | No source       | Eclipse Bundle | `RemoteTestRunner.run() line: 452`                                                                                 |
| No source | No source       | Eclipse Bundle | `RemoteTestRunner.main(String[]) line: 210`                                                                        |

When I right click on a method in the stacktrace, I do have the ""Source lookup info"" (which to my understanding of `plugin.xml` comes from m2e-core, and especially this class: https://github.com/eclipse-m2e/m2e-core/blob/4e7ba8113e8cff1d84a05918addd8c27a108d591/org.eclipse.m2e.sourcelookup.ui/src/org/eclipse/m2e/sourcelookup/ui/internal/OpenSourceLookupInfoDialogCommandHandler.java )

The information it returns shows there are 3 kind of source containers:

```
Location: E:\apps\data\maven\local\org\hibernate\hibernate-core\5.6.6.Final\hibernate-core-5.6.6.Final.jar
GAV: [org.hibernate:hibernate-core:5.6.6.Final]
Java project: <not-implemented>
Source container: PackageFragmentRootSourceContainer hibernate-core-5.6.6.Final.jar P/test-case-template-hibernate-orm5

Location: E:\git\external\github\issue-HHH-15142\target\test-classes
GAV: []
Java project: <not-implemented>
Source container: JavaProjectSourceContainer test-case-template-hibernate-orm5

Location: E:\apps\data\maven\local\junit\junit\4.13.2\junit-4.13.2.jar
GAV: [junit:junit:4.13.2]
Java project: <not-implemented>
Source container: ExternalArchiveSourceContainer E:\apps\data\maven\local\junit\junit\4.13.2\junit-4.13.2-sources.jar
```

I don't understand the rational that explain why the first one is a `PackageFragmentRootSourceContainer`, which works, and the last fails (`ExternalArchiveSourceContainer`), but I find it strange for it to reference the sources.jar rather than the jar itself. 

The `ExternalArchiveSourceContainer` is used when importing project as Maven and as ""simple"" Java project : 

- I transformed the reproducer project of https://github.com/schauder/issue-HHH-15142 into a ""simple Java project"" (eg: not  a ""Import as Maven project"") : it is present here, but without its JAR dependencies (= 44M)
- Clone the referenced project: `git clone https://github.com/glhez/issue-HHH-15142.git` 
- In a terminal, go the directory and execute maven:
 
```bash
./mvnw dependency:copy-dependencies -Dclassifier=sources -DoutputDirectory=lib/sources
./mvnw dependency:copy-dependencies -DoutputDirectory=lib/binaries
```
- Once done, the project and its launch (JPAUnitTestCase.launch) can be imported in Eclipse using ""Import Java Project"" (not ""Maven Project"").

We can see the same problem, perhaps not at the same location since I can browse Hibernate finely : this happens in the JUNIT 4 part:

<img width=""1253"" alt=""no_context_in_junit4"" src=""https://user-images.githubusercontent.com/10855953/179839612-f97688bd-637d-4140-a10d-7f91da646024.png"">

There are 

1) no debug information in expressions, which is another (frustrating) problem I have with Eclipse, since it should know the project from which a launch comes
2) no information while hovering the junit 4 class

I did not try conditional breakpoint, but I think they would fail because ""There a no java context"".

Versions:

  Java 17 + ~~Eclipse 2022-03~~  Eclipse 2022-06
  M2E - Maven Integration for Eclipse (includes Incubating components)	1.20.1.20220227-1319	org.eclipse.m2e.feature.feature.group	Eclipse.org - m2e
  M2E - POM Editor using LemMinX language server (includes Incubating components)	1.18.4.20220127-1634	org.eclipse.m2e.lemminx.feature.feature.group	Eclipse.org - m2e
  M2E - SLF4J over Logback Logging (optional)	1.17.2.20211002-1029	org.eclipse.m2e.logback.feature.feature.group	Eclipse.org - m2e

The Eclipse installation has been installed using Oomph and Eclipse 2022-06 as its base.

Note: I originally created the bug here https://bugs.eclipse.org/bugs/show_bug.cgi?id=579535 without much updates on it.

[^1]: Eclipse Debug could probably be intelligent here since the JUnit launch references a project.


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/86/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/86,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M52ukE0,eclipse.jdt.debug,1991917876,86,NA,stephendnicholas,842691,Stephen Nicholas,,NA,2024-03-12T15:26:30Z,2024-03-12T15:26:30Z,I've raised a discussion thread which I think could be related: https://github.com/eclipse-jdt/eclipse.jdt.debug/discussions/406,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M52ukE0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/86,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M52xeMt,eclipse.jdt.debug,1992680237,86,NA,glhez,10855953,,,NA,2024-03-12T22:23:14Z,2024-03-12T22:23:14Z,I sincerely hope there will be some discussion around that because that make the debug experience pretty frustrating.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M52xeMt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/86,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6BqolB,eclipse.jdt.debug,2175437121,86,NA,srikanth-sankaran,131454720,Srikanth Sankaran,,NA,2024-06-18T07:52:24Z,2024-06-18T07:52:24Z,@SarikaSinha - Perhaps you have some volunteer cycles you can spare ?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6BqolB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/90,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/90,eclipse.jdt.debug,1316762222,90,"Uncheck ""Use -XStartOnFirstThread ..."" for Java Applications by default on MacOS",RedNova25,30453795,,,CLOSED,2022-07-19T20:59:12Z,2023-03-01T16:54:40Z,"### Summary
I am running Eclipse IDE for Java Developers Version: 2022-06 (4.24.0). My machine is an Intel MacBook Air with macOS Monterey 12.4. I use Java SE JDK 17.0.3.1 and JavaFX SDK 18.0.1.

When I create classes that use JavaFX, I create a run configuration for each class that extends Application. I create a new Run Configuration from ""Java Application"", then I go to the ""Arguments"" tab and uncheck ""Use the -XStartOnFirstThread argument when launching with SWT"". Only then will my JavaFX GUIs display. This is a long-known necessity for using JavaFX with Eclipse that I learned from a Medium article.

I would like if there was a way to have this option unchecked by default. If so, I may not need to create a new run configuration for each subclass of Application.

This is my first time reporting a bug and I already put it in the wrong place earlier. Please let me know if this should be posted in a different eclipse.jdt repository.

### Steps to Reproduce
1. Create a class with the import ""javafx.application.Application"" that extends Application.
2. Create a main method in the class that uses the method ""launch(args)"" to start the application.
3. Click the down arrow next to the Run button.
4. Click on ""Run Configurations...""
5. Double click on ""Java Application"" to create a new run configuration.
6. Go to the ""Arguments"" tab.
7. See that under ""VM Arguments"", ""Use the -XStartOnFirstThread argument when launching with SWT"" is automatically checked.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/90/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/90,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5HKrnQ,eclipse.jdt.debug,1193982416,90,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-07-25T12:24:23Z,2022-07-25T12:24:23Z,Moving to jdt.debug as this is part of launching code handled in debug repository.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5HKrnQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/90,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5HKr-V,eclipse.jdt.debug,1193983893,90,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-07-25T12:26:04Z,2022-07-25T12:26:04Z,"You can use ""Prototypes"" in Run Configuration. And when we create an instance of them you will get the values inherited from the prototyped Run Configuration.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5HKr-V/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/90,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5WdI-Y,eclipse.jdt.debug,1450479512,90,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2023-03-01T16:54:39Z,2023-03-01T16:54:39Z,Closing this as there is a work around. ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5WdI-Y/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/92,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/92,eclipse.jdt.debug,1320316618,92,[19] org.eclipse.jdt.debug.tests.eval.Java9Tests.testBug575039_methodBreakpointOnJavaBaseModuleClass_expectSuccessfulEval() fails with Java 19,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,CLOSED,2022-07-28T02:40:32Z,2022-07-29T03:59:45Z,"@gayanper 
https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/89
The test added fails with Java 19.
Right now I have just made the changes for it to not run till Java 18.
Can you look into that and change the test accordingly?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/92/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/92,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5HYxNZ,eclipse.jdt.debug,1197675353,92,NA,gayanper,7471994,Gayan Perera,,NA,2022-07-28T05:19:48Z,2022-07-28T05:19:48Z,Sure i can have a look,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5HYxNZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/92,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5HdRWE,eclipse.jdt.debug,1198855556,92,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-07-29T03:59:44Z,2022-07-29T03:59:44Z,"Will merge the change to Beta after M2 release.
Thanks Gayan.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5HdRWE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/97,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/97,eclipse.jdt.debug,1328397957,97,Eclipse can't run if classpath is too large and if launch config name is too long,stas-bob,293153,Stanislav Tartakowski,oot.pac@googlemail.com,CLOSED,2022-08-04T10:14:58Z,2023-04-14T06:42:41Z,"I have a junit test with a large classpath. I can run it once and it works. If I re-run the test from the junit view, eclipse creates a LaunchConfig with the name ""Rerun typename.testname"" and .temp file which contains the classpath. The .temp file's name has the full name of the launch config included. The launch failes with

""
Error: could not open `C:\Users\XXX\repos\yyy\yyy-assistant\yyy-bundles\cccc-bundle\.temp-Rerun com.my.type.bundles.xy.gen.XxxxyyyTest.test000_XxxyyyScenario_SetVolumeOKSetVolumeUnspecificUnder80PercentsetVolumeLevel_SetMediaVolumeTo16-classpath-arg-1659449408103.txt'
""
I guess it failes, because in the generated command line

javaw ""@filepath_from_above"" ... the filepath_from_above is too long

Reproducible on windows.

Imo,
org.eclipse.jdt.internal.launching.ClasspathShortener.shortenClasspathUsingClasspathArgumentFile(int)
must shorten the created file name. Is there any reason, why taking the launch config name entirtly? You might prune it to max 10 characters or so.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/97/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/97,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5WtYrq,eclipse.jdt.debug,1454738154,97,NA,Shee43,122248524,Sheena,,NA,2023-03-04T13:21:44Z,2023-03-04T13:21:44Z,Can you please provide the steps to reproduce the issue,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5WtYrq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/97,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5W7FnP,eclipse.jdt.debug,1458330063,97,NA,stas-bob,293153,Stanislav Tartakowski,oot.pac@googlemail.com,NA,2023-03-07T15:04:36Z,2023-03-07T15:04:36Z,"[TestProj.zip](https://github.com/eclipse-jdt/eclipse.jdt.debug/files/10910802/TestProj.zip)
![grafik](https://user-images.githubusercontent.com/293153/223461528-bfc75ef8-5613-416a-9bee-4787f425f8a5.png)

in that maven project, i added 240 dependencies to enforce .temp file creation. I can run TestClass successfully. Then i click on the long test name in JUnit View and click on Rerun. Rerun fails, because the launch config file name is too long 
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5W7FnP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/97,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5XOIgF,eclipse.jdt.debug,1463322629,97,NA,Shee43,122248524,Sheena,,NA,2023-03-10T06:07:45Z,2023-03-10T06:07:45Z,We understand the problem but not able to reproduce this. Can you either create a video or provide exact steps. We are not  seeing the Rerun coming.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5XOIgF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/97,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5XO3fO,eclipse.jdt.debug,1463515086,97,NA,stas-bob,293153,Stanislav Tartakowski,oot.pac@googlemail.com,NA,2023-03-10T09:25:16Z,2023-03-10T09:25:16Z,"I could not reproduce it aswell if placed TestProject under C:\. The path needs to be longer. See video

https://user-images.githubusercontent.com/293153/224277257-8171e346-c608-4b32-bcf8-ed524bf3fa1d.mp4

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5XO3fO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/97,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5XPOr2,eclipse.jdt.debug,1463610102,97,NA,stas-bob,293153,Stanislav Tartakowski,oot.pac@googlemail.com,NA,2023-03-10T10:40:00Z,2023-03-10T10:40:00Z,"The obvious solution is not having a long path for the project. But I dont understand
- why is the first test execution ok but the later is not
- the file name of the .temp is derived from the test name. But if the test name is long, the test execution fails. So could you give the file name some arbitrary short name and somewhat ease the long path problem?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5XPOr2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/97,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5XPPn9,eclipse.jdt.debug,1463613949,97,NA,trancexpress,24752155,Simeon Andreev,,NA,2023-03-10T10:43:12Z,2023-03-10T10:43:12Z,"> But I dont understand
>     * why is the first test execution ok but the later is not

Likely the first launch configuration is created on-the-fly, saved to the file and then executed. The 2nd execution tries to use the stored information in the file?
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5XPPn9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/97,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5XPVkY,eclipse.jdt.debug,1463638296,97,NA,stas-bob,293153,Stanislav Tartakowski,oot.pac@googlemail.com,NA,2023-03-10T11:02:24Z,2023-03-10T11:02:24Z,"I didnt debug it to that extent, but it feels weird. Because as a user, i dont see why the behaviour is diffrent","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5XPVkY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/97,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Z4ldO,eclipse.jdt.debug,1508005710,97,NA,Shee43,122248524,Sheena,,NA,2023-04-14T06:42:41Z,2023-04-14T06:42:41Z,This is verified in latest Integration Build,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Z4ldO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/102,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/102,eclipse.jdt.debug,1334566199,102,"[Debugger] ""Can only iterate over an array or an instance of java.lang.Iterable"" shown sometimes",jubax,10562923,Juergen Baier,baier@semedy.com,CLOSED,2022-08-10T12:40:56Z,2024-02-14T16:14:23Z,"When I click on a Set, e.g. a LinkedHashSet in the ""Variables"" view of the debugger sometimes it shows
```
Detail formatter error:
		Can only iterate over an array or an instance of java.lang.Iterable
```
So far I cannot reproduce this reliably, but it occurs fairly often (multiple times a day).

This happens with version 2022-06 (4.24.0) on macOS.

The interesting thing is that the debugger actually understands that the variable is a  Set. With ""Show logical structure"" the content of the set is correctly shown. Just the details when clicking on the set is wrong.

The error log does not show entries.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/102/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/102,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5z4M5q,eclipse.jdt.debug,1944112746,102,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-14T15:53:06Z,2024-02-14T15:53:06Z,This issues does not contain necessary information to reproduce. please reopen if you can provide steps to reproduce - even if it happens only randomly. You may also contribute a PR to make the error message to contain more relevant information.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5z4M5q/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/102,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5z4VD4,eclipse.jdt.debug,1944146168,102,NA,jubax,10562923,Juergen Baier,baier@semedy.com,NA,2024-02-14T16:10:10Z,2024-02-14T16:10:10Z,"@jukzi, this still happens from time to time, but I cannot reproduce it in a reliable way. Do you have any hints on how to gather useful information for reproducing it? Turn on some logging? Something else?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5z4VD4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/102,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5z4W_M,eclipse.jdt.debug,1944154060,102,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-14T16:14:21Z,2024-02-14T16:14:21Z,"setup a developer workspace (see https://github.com/eclipse-platform/.github/blob/main/CONTRIBUTING.md) and use eclipse while in debug mode. 
Search for the message in the workspace and set a breakpoint where it is used. report stacktrace and the class that it tries to iterate over. Or add that information in the errormessage and submit a PR.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5z4W_M/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/103,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/103,eclipse.jdt.debug,1334640058,103,JDI Testsuite should support Eclipse as Java vendor,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,CLOSED,2022-08-10T13:35:14Z,2022-08-11T11:47:35Z,Running with Eclipse Adoptium fails to launch JDI TestSuite,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/103/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/105,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/105,eclipse.jdt.debug,1336008465,105,"IllegalStateException during: ""Debug child count update""",jukzi,51790620,Jörg Kubitz,,CLOSED,2022-08-11T14:02:41Z,2022-08-12T14:04:19Z,"error logged:
```
An internal error occurred during: ""Debug child count update"".
java.lang.IllegalStateException
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1182)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.tryToResolveLambdaVariableNames(JDIStackFrame.java:419)
	at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getVariables0(JDIStackFrame.java:382)
	at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getVariables(JDIStackFrame.java:307)
	at org.eclipse.debug.internal.ui.model.elements.StackFrameContentProvider.getAllChildren(StackFrameContentProvider.java:50)
	at org.eclipse.jdt.internal.debug.ui.variables.JavaStackFrameContentProvider.getAllChildren(JavaStackFrameContentProvider.java:36)
	at org.eclipse.debug.internal.ui.model.elements.StackFrameContentProvider.getChildCount(StackFrameContentProvider.java:29)
	at org.eclipse.debug.internal.ui.model.elements.ElementContentProvider.retrieveChildCount(ElementContentProvider.java:126)
	at org.eclipse.debug.internal.ui.model.elements.ElementContentProvider$2.run(ElementContentProvider.java:76)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
```
eclipse.buildId=4.23.0.I20220308-0310
java.version=17.0.4
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=de_DE



maybe just silence if type.getTypeRoot().getSource()==null in tryToResolveLambdaVariableNames?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/105/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/105,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ITyT6,eclipse.jdt.debug,1213146362,105,NA,jukzi,51790620,Jörg Kubitz,,NA,2022-08-12T14:04:18Z,2022-08-12T14:04:18Z,Thanks Andrey!,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ITyT6/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/106,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/106,eclipse.jdt.debug,1336024909,106,ObjectCollectedException in Variables View,jukzi,51790620,Jörg Kubitz,,CLOSED,2022-08-11T14:14:51Z,2023-09-04T06:30:41Z,"Sometimes the Variables view turns into useless error message when i try to expand a node of a collection:
![image](https://user-images.githubusercontent.com/51790620/184152559-020f5ca2-54f6-4e9f-9e08-d60e895c6867.png)
no error is logged. no stacktrace available 
maybe related:

https://stackoverflow.com/questions/49004564/eclipse-debugging-inspection-of-variables-causes-com-sun-jdi-objectcollectede
https://bugs.eclipse.org/bugs/show_bug.cgi?id=537399

would be better if the exception would not render the whole view useless - but only the expanded collection.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/106/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/106,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5IPnOr,eclipse.jdt.debug,1212052395,106,NA,jukzi,51790620,Jörg Kubitz,,NA,2022-08-11T14:18:43Z,2022-08-11T14:18:43Z,"Happens with Logical Structure ""Array"" (default) for an ArrayList
![image](https://user-images.githubusercontent.com/51790620/184154494-7a3b9dc4-dbbc-479b-9f3a-930542ad713d.png)
when expanding an element:
![image](https://user-images.githubusercontent.com/51790620/184154794-17b23c33-df43-4356-8124-e181da2f2e8b.png)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5IPnOr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/106,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5IPovu,eclipse.jdt.debug,1212058606,106,NA,jukzi,51790620,Jörg Kubitz,,NA,2022-08-11T14:23:28Z,2022-08-11T14:23:28Z,"The Same Exception can occur in the hover, but handled better:
![image](https://user-images.githubusercontent.com/51790620/184155864-a19a956a-3f09-4394-8877-f71438345c5f.png)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5IPovu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/106,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5lftI_,eclipse.jdt.debug,1702810175,106,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-09-01T14:09:25Z,2023-09-01T14:09:25Z,"Can not reproduce anymore. Currently i see ""deallocated"" printed:
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/51790620/cb639f5b-0030-47c8-990d-71164198b8fc)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5lftI_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/107,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/107,eclipse.jdt.debug,1337135319,107,Use AST.getJLSLatest() instead of deprecated constants,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2022-08-12T12:16:19Z,2022-08-12T15:29:40Z,"In #105 I've stumbled over debugger code that uses `AST.JLS4` etc instead of `AST.getJLSLatest()`.
In various places it uses various levels, including `AST.getJLSLatest()`.

We should unify this and use consistently `AST.getJLSLatest()` in debugger.

I will push a patch.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/107/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/110,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/110,eclipse.jdt.debug,1337156200,110,Add Double click listener to AllInstances and AllReferences popup to navigate to the implementation ,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,CLOSED,2022-08-12T12:38:06Z,2022-10-02T18:23:43Z,"Adding a double click listener to the AllReferencesActionDelegate and AllInstancesActionDelegate,
https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/85/files
https://github.com/eclipse-platform/eclipse.platform.debug/pull/52","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/110/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/110,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ITfna,eclipse.jdt.debug,1213069786,110,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-08-12T12:40:16Z,2022-08-12T12:40:16Z,"@gzsombor 
Thank you!
Please add N&N entry my Monday 15/8.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ITfna/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/110,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5LXGUb,eclipse.jdt.debug,1264346395,110,NA,gzsombor,66230,Zsombor,,NA,2022-10-01T12:09:08Z,2022-10-01T12:09:08Z,"I think, this can be closed","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5LXGUb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/111,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/111,eclipse.jdt.debug,1343075708,111,[Tests] org.eclipse.jdt.debug.tests.ui.DebugHoverTests fails on windows,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,OPEN,2022-08-18T13:06:18Z,2023-12-01T12:13:06Z,"https://download.eclipse.org/eclipse/downloads/drops4/I20220817-1800/testresults/html/org.eclipse.jdt.debug.tests_ep425I-unit-win32-java11_win32.win32.x86_64_11.html


org.eclipse.jdt.debug.tests.ui.DebugHoverTests | testBug573547_insideLambda_onOuterScopeVariable_whileOnPreviousFrame | Failure | After waiting 1000ms the editor selection was not moved to the expected line expected:<39> but was:<40>junit.framework.AssertionFailedError: After waiting 1000ms the editor selection was not moved to the expected line expected:<39> but was:<40>at junit.framework.Assert.fail(Assert.java:57)at junit.framework.Assert.failNotEquals(Assert.java:329)at junit.framework.Assert.assertEquals(Assert.java:78)at junit.framework.Assert.assertEquals(Assert.java:234)at junit.framework.TestCase.assertEquals(TestCase.java:377)at org.eclipse.jdt.debug.tests.ui.DebugHoverTests.selectFrame(DebugHoverTests.java:1483)at org.eclipse.jdt.debug.tests.ui.DebugHoverTests.testBug573547_insideLambda_onOuterScopeVariable_whileOnPreviousFrame(DebugHoverTests.java:1245)at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.base/java.lang.reflect.Method.invoke(Method.java:566)at junit.framework.TestCase.runTest(TestCase.java:177)at junit.framework.TestCase.runBare(TestCase.java:142)at org.eclipse.jdt.debug.tests.AbstractDebugTest.runBare(AbstractDebugTest.java:2678)at junit.framework.TestResult$1.protect(TestResult.java:122)at junit.framework.TestResult.runProtected(TestResult.java:142)at junit.framework.TestResult.run(TestResult.java:125)at junit.framework.TestCase.run(TestCase.java:130)at junit.framework.TestSuite.runTest(TestSuite.java:241)at junit.framework.TestSuite.run(TestSuite.java:236)at junit.framework.TestSuite.runTest(TestSuite.java:241)at org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:61)at java.base/java.lang.Thread.run(Thread.java:829)
-- | -- | -- | --


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/111/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/111,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5dDKSX,eclipse.jdt.debug,1561109655,111,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-05-24T13:04:04Z,2023-05-24T13:04:04Z,"can reproduce locally (on win10) similar exceptions

```
junit.framework.AssertionFailedError: expected:<34> but was:<33>
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.failNotEquals(Assert.java:329)
	at junit.framework.Assert.assertEquals(Assert.java:78)
	at junit.framework.Assert.assertEquals(Assert.java:234)
	at junit.framework.Assert.assertEquals(Assert.java:241)
	at junit.framework.TestCase.assertEquals(TestCase.java:384)
	at org.eclipse.jdt.debug.tests.ui.DebugHoverTests.selectAndReveal(DebugHoverTests.java:1454)
	at org.eclipse.jdt.debug.tests.ui.DebugHoverTests.validateLine(DebugHoverTests.java:1414)
	at org.eclipse.jdt.debug.tests.ui.DebugHoverTests.testResolveInLambda(DebugHoverTests.java:131)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at junit.framework.TestCase.runTest(TestCase.java:177)
	at junit.framework.TestCase.runBare(TestCase.java:142)
	at org.eclipse.jdt.debug.tests.AbstractDebugTest.runBare(AbstractDebugTest.java:2678)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:130)
	at junit.framework.TestSuite.runTest(TestSuite.java:241)
	at junit.framework.TestSuite.run(TestSuite.java:236)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:90)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:93)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:529)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:756)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:452)
	at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:81)
	at org.eclipse.pde.internal.junit.runtime.PlatformUITestHarness.lambda$0(PlatformUITestHarness.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.E4Testable.lambda$1(E4Testable.java:127)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4047)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3663)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.pde.internal.junit.runtime.NonUIThreadTestApplication.runApp(NonUIThreadTestApplication.java:57)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication.runApp(UITestApplication.java:47)
	at org.eclipse.pde.internal.junit.runtime.NonUIThreadTestApplication.start(NonUIThreadTestApplication.java:52)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
```
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/51790620/3b7a0676-bb0d-486b-af56-dfe8cf4c85b7)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5dDKSX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/111,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5dDWb0,eclipse.jdt.debug,1561159412,111,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-05-24T13:30:37Z,2023-05-24T13:30:37Z,"The problem here, is that git is configured to autocrlf. While testfiles like `/org.eclipse.jdt.debug.tests/java8/DebugHoverTest18.java` are checked-in with unix lineendings they are converted by git to CR+LF such that each line is 1 byte longer on windows. The test assumes Regions based on linux line endings. Would be better to assert linenumbers+offset instead of Regions absolute from begin of file.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5dDWb0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/112,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/112,eclipse.jdt.debug,1343078286,112,[Tests] org.eclipse.jdt.debug.tests.ui.DebugViewTests fails on Windows,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,OPEN,2022-08-18T13:08:21Z,2023-12-01T12:13:07Z,"https://download.eclipse.org/eclipse/downloads/drops4/I20220817-1800/testresults/html/org.eclipse.jdt.debug.tests_ep425I-unit-win32-java11_win32.win32.x86_64_11.html


testWrongSelectionBug534319lateStart | Failure | expected no assertions to fail during test expected:<[]> but was:<[junit.framework.AssertionFailedError: Wrong object selected: org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget@24032c9d expected:<class org.eclipse.jdt.internal.debug.core.model.JDIStackFrame> but was:<class org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget>]>junit.framework.AssertionFailedError: expected no assertions to fail during test expected:<[]> but was:<[junit.framework.AssertionFailedError: Wrong object selected: org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget@24032c9d expected:<class org.eclipse.jdt.internal.debug.core.model.JDIStackFrame> but was:<class org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget>]>at junit.framework.Assert.fail(Assert.java:57)at junit.framework.Assert.failNotEquals(Assert.java:329)at junit.framework.Assert.assertEquals(Assert.java:78)at junit.framework.TestCase.assertEquals(TestCase.java:238)at org.eclipse.jdt.debug.tests.ui.AbstractDebugViewTests.doTestWrongSelection(AbstractDebugViewTests.java:133)at org.eclipse.jdt.debug.tests.ui.AbstractDebugViewTests.doTestWrongSelection(AbstractDebugViewTests.java:95)at org.eclipse.jdt.debug.tests.ui.DebugViewTests.doTestWrongSelectionBug534319(DebugViewTests.java:245)at org.eclipse.jdt.debug.tests.ui.DebugViewTests.testWrongSelectionBug534319lateStart(DebugViewTests.java:139)at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.base/java.lang.reflect.Method.invoke(Method.java:566)at junit.framework.TestCase.runTest(TestCase.java:177)at junit.framework.TestCase.runBare(TestCase.java:142)at org.eclipse.jdt.debug.tests.AbstractDebugTest.runBare(AbstractDebugTest.java:2678)at junit.framework.TestResult$1.protect(TestResult.java:122)at junit.framework.TestResult.runProtected(TestResult.java:142)at junit.framework.TestResult.run(TestResult.java:125)at junit.framework.TestCase.run(TestCase.java:130)at junit.framework.TestSuite.runTest(TestSuite.java:241)at junit.framework.TestSuite.run(TestSuite.java:236)at junit.framework.TestSuite.runTest(TestSuite.java:241)at org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:61)at java.base/java.lang.Thread.run(Thread.java:829)
-- | -- | --





testWrongSelectionBug534319startBetwen | Failure | expected no assertions to fail during test expected:<[]> but was:<[junit.framework.AssertionFailedError: Wrong object selected: org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget@20eedd83 expected:<class org.eclipse.jdt.internal.debug.core.model.JDIStackFrame> but was:<class org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget>, junit.framework.AssertionFailedError: Wrong object selected: org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget@74292d81 expected:<class org.eclipse.jdt.internal.debug.core.model.JDIStackFrame> but was:<class org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget>, junit.framework.AssertionFailedError: Wrong object selected: org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget@672f677a expected:<class org.eclipse.jdt.internal.debug.core.model.JDIStackFrame> but was:<class org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget>]>junit.framework.AssertionFailedError: expected no assertions to fail during test expected:<[]> but was:<[junit.framework.AssertionFailedError: Wrong object selected: org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget@20eedd83 expected:<class org.eclipse.jdt.internal.debug.core.model.JDIStackFrame> but was:<class org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget>, junit.framework.AssertionFailedError: Wrong object selected: org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget@74292d81 expected:<class org.eclipse.jdt.internal.debug.core.model.JDIStackFrame> but was:<class org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget>, junit.framework.AssertionFailedError: Wrong object selected: org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget@672f677a expected:<class org.eclipse.jdt.internal.debug.core.model.JDIStackFrame> but was:<class org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget>]>at junit.framework.Assert.fail(Assert.java:57)at junit.framework.Assert.failNotEquals(Assert.java:329)at junit.framework.Assert.assertEquals(Assert.java:78)at junit.framework.TestCase.assertEquals(TestCase.java:238)at org.eclipse.jdt.debug.tests.ui.AbstractDebugViewTests.doTestWrongSelection(AbstractDebugViewTests.java:133)at org.eclipse.jdt.debug.tests.ui.AbstractDebugViewTests.doTestWrongSelection(AbstractDebugViewTests.java:95)at org.eclipse.jdt.debug.tests.ui.DebugViewTests.doTestWrongSelectionBug534319(DebugViewTests.java:245)at org.eclipse.jdt.debug.tests.ui.DebugViewTests.testWrongSelectionBug534319startBetwen(DebugViewTests.java:147)at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.base/java.lang.reflect.Method.invoke(Method.java:566)at junit.framework.TestCase.runTest(TestCase.java:177)at junit.framework.TestCase.runBare(TestCase.java:142)at org.eclipse.jdt.debug.tests.AbstractDebugTest.runBare(AbstractDebugTest.java:2678)at junit.framework.TestResult$1.protect(TestResult.java:122)at junit.framework.TestResult.runProtected(TestResult.java:142)at junit.framework.TestResult.run(TestResult.java:125)at junit.framework.TestCase.run(TestCase.java:130)at junit.framework.TestSuite.runTest(TestSuite.java:241)at junit.framework.TestSuite.run(TestSuite.java:236)at junit.framework.TestSuite.runTest(TestSuite.java:241)at org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:61)at java.base/java.lang.Thread.run(Thread.java:829)
-- | -- | --


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/112/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/112,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5dDIpR,eclipse.jdt.debug,1561102929,112,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-05-24T12:59:42Z,2023-05-24T12:59:42Z,cannot reproduce,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5dDIpR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/115,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/115,eclipse.jdt.debug,1357947450,115,improvement: use method name to find unqualified Stacktraces ,jukzi,51790620,Jörg Kubitz,,CLOSED,2022-08-31T22:22:33Z,2024-12-10T06:45:47Z,"paste this into Java Stack Trace Console in a Platform SDK workspace:
```
Project.writeDescription(int) line: 1402
```
click the link (feature from https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/5)
![image](https://user-images.githubusercontent.com/51790620/187794875-012168a5-fcfd-42d6-bc51-281db853d2a7.png) 

=> Select type dialog opens. because ""Project"" is unqualified and could mean various types:
![image](https://user-images.githubusercontent.com/51790620/187794215-14d3e2e6-bf76-457c-9fa7-e38627d42c7f.png)

However the logic could see that only one of those classes has a ""writeDescription"" method. That logic already exists in the command Navigate/""Open from Clipboard"" and does automatically finds and opens the right class.

...
Some types would also not qualify for the link as they are not even 1402 lines long

cc @trancexpress - interested to work on this?


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/115/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/115,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6MOTvA,eclipse.jdt.debug,2352561088,115,NA,SougandhS,177713286,Sougandh S,,NA,2024-09-16T10:38:37Z,2024-09-16T10:38:37Z,"Hi @mpalat, could you please assign this to me","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6MOTvA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/115,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6NQ3LZ,eclipse.jdt.debug,2370007769,115,NA,SougandhS,177713286,Sougandh S,,NA,2024-09-24T02:52:53Z,2024-09-24T02:52:53Z,"Hi @jukzi 
enhancement has been implemented -> [PR@498](https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/498) 
Shall we close this PR now ?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6NQ3LZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/115,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6QqXdq,eclipse.jdt.debug,2427025258,115,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-10-21T15:32:22Z,2024-10-21T15:32:22Z,"See https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/543 and issues on https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/544 

Looking on the number of issues I've found above, I will now revert https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/498 PR as 
1) the code has multiple regressions
2) The code in  `org.eclipse.jdt.internal.debug.ui.console.JavaStackTraceHyperlink.searchCompleted(Object, String, int, IStatus)` is simply not maintainable.

Revert PR: https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/545

I would recommend to rewrite https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/498.

Reopening this ticket.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6QqXdq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/116,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/116,eclipse.jdt.debug,1358625101,116,[Tests] Cannot connect to VM,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,OPEN,2022-09-01T10:36:37Z,2023-12-01T12:13:07Z,"rg.eclipse.core.runtime.CoreException: Cannot connect to VM
at org.eclipse.jdt.launching.AbstractVMRunner.abort(AbstractVMRunner.java:56)
at org.eclipse.jdt.internal.launching.StandardVMDebugger.run(StandardVMDebugger.java:457)
at org.eclipse.jdt.launching.JavaLaunchDelegate.launch(JavaLaunchDelegate.java:176)
at org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:806)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.launchAndWait(AbstractDebugTest.java:1180)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.launchAndWait(AbstractDebugTest.java:1164)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.launchToBreakpoint(AbstractDebugTest.java:1349)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.launchToBreakpoint(AbstractDebugTest.java:1305)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.launchToBreakpoint(AbstractDebugTest.java:1277)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.launchToBreakpoint(AbstractDebugTest.java:1264)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/116/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/116,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5dDFmv,eclipse.jdt.debug,1561090479,116,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-05-24T12:52:51Z,2023-05-24T12:52:51Z,cannot reproduce. probably rare random fail. may be TransportTimeoutException or port the debugger wants to use is already being used,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5dDFmv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/119,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/119,eclipse.jdt.debug,1371118754,119,jstack stack trace lines with module are not parsed correctly by Java Stack Traces Console,trancexpress,24752155,Simeon Andreev,,CLOSED,2022-09-13T09:11:44Z,2022-09-19T12:36:18Z,"For this stack trace, the lines with `java.base` module have no hyperlinks.

```
	at java.util.StringJoiner.compactElts(java.base@11.0.10/StringJoiner.java:248)
	at java.util.StringJoiner.toString(java.base@11.0.10/StringJoiner.java:173)
	at java.lang.String.join(java.base@11.0.10/String.java:2400)
	at org.eclipse.ui.internal.ide.ChooseWorkspaceDialog.lambda$6(ChooseWorkspaceDialog.java:390)
	at org.eclipse.ui.internal.ide.ChooseWorkspaceDialog$$Lambda$1280/0x0000000841517c40.apply(Unknown Source)
	at java.util.stream.ReferencePipeline$3$1.accept(java.base@11.0.10/ReferencePipeline.java:195)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(java.base@11.0.10/ArrayList.java:1655)
	at java.util.stream.AbstractPipeline.copyInto(java.base@11.0.10/AbstractPipeline.java:484)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(java.base@11.0.10/AbstractPipeline.java:474)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(java.base@11.0.10/ReduceOps.java:913)
	at java.util.stream.AbstractPipeline.evaluate(java.base@11.0.10/AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(java.base@11.0.10/ReferencePipeline.java:578)
	at org.eclipse.ui.internal.ide.ChooseWorkspaceDialog.createUniqueWorkspaceNameMap(ChooseWorkspaceDialog.java:395)
	at org.eclipse.ui.internal.ide.ChooseWorkspaceDialog.createRecentWorkspacesComposite(ChooseWorkspaceDialog.java:329)
	at org.eclipse.ui.internal.ide.ChooseWorkspaceDialog.createDialogArea(ChooseWorkspaceDialog.java:183)
	at org.eclipse.ui.internal.ide.ChooseWorkspaceWithSettingsDialog.createDialogArea(ChooseWorkspaceWithSettingsDialog.java:108)
```

We are not sure since when `jstack` puts the module name and version in the stack trace, but this should be handled.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/119/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/121,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/121,eclipse.jdt.debug,1372948949,121,Try to supply JDK version to disambiguate type to open,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2022-09-14T13:00:11Z,2025-01-27T10:56:09Z,"Follow up from #120.

With the fix #120 the lines are properly highlighted in the console (OK), but on clicking on some JDK type I get a selection dialog (NOK) even if the choice is clear and unique (from human point of view).

![image](https://user-images.githubusercontent.com/964108/190160138-9bbcb09f-a63e-441a-a414-5ca237c4e852.png)

_Originally posted by @iloveeclipse in https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/120#issuecomment-1246727986_

We should try to specify JDK version we want open the type with.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/121/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/122,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/122,eclipse.jdt.debug,1375867582,122,org.eclipse.jdt.debug.tests.connectors.MultipleConnectionsTest.testTwoConnectionsBehaviour() hangs,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2022-09-16T12:16:31Z,2022-09-19T09:45:59Z,"Initially found because Gerrit builds stuck forever, with errors like below. Can reproduce locally.

Also SDK build shows DNF in jdt.debug.tests:
https://download.eclipse.org/eclipse/downloads/drops4/I20220916-0140/testResults.php

`org.eclipse.jdt.debug.tests.connectors.MultipleConnectionsTest.testTwoConnectionsBehaviour()` test hangs on trying connect to the JVM. 
This is a regression from https://github.com/eclipse-platform/eclipse.platform/pull/169

```
13:15:11  !ENTRY org.eclipse.jdt.debug.tests 1 0 2022-09-16 11:15:11.167
13:15:11  !MESSAGE [testSingleConnectionBehaviour] setUp
13:15:11  
13:15:11  !ENTRY org.eclipse.jdt.debug 4 125 2022-09-16 11:15:11.386
13:15:11  !MESSAGE Internal error logged from JDI Debug: 
13:15:11  !STACK 0
13:15:11  com.sun.jdi.VMDisconnectedException: Got IOException from Virtual Machine
13:15:11  	at org.eclipse.jdi.internal.connect.PacketSendManager.sendPacket(PacketSendManager.java:93)
13:15:11  	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:190)
13:15:11  	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:230)
13:15:11  	at org.eclipse.jdi.internal.request.EventRequestImpl.enable(EventRequestImpl.java:261)
13:15:11  	at org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget$ThreadStartHandler.createRequest(JDIDebugTarget.java:2263)
13:15:11  	at org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget$ThreadStartHandler.<init>(JDIDebugTarget.java:2251)
13:15:11  	at org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.initializeRequests(JDIDebugTarget.java:614)
13:15:11  	at org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.initialize(JDIDebugTarget.java:556)
13:15:11  	at org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.<init>(JDIDebugTarget.java:380)
13:15:11  	at org.eclipse.jdt.debug.core.JDIDebugModel.lambda$0(JDIDebugModel.java:238)
13:15:11  	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2380)
13:15:11  	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2405)
13:15:11  	at org.eclipse.jdt.debug.core.JDIDebugModel.newDebugTarget(JDIDebugModel.java:240)
13:15:11  	at org.eclipse.jdt.debug.core.JDIDebugModel.newDebugTarget(JDIDebugModel.java:192)
13:15:11  	at org.eclipse.jdt.internal.launching.SocketListenConnectorProcess$WaitForConnectionJob.run(SocketListenConnectorProcess.java:343)
13:15:11  	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
```

Test hangs here:
```
""main"" #1 prio=6 os_prio=0 cpu=5956.09ms elapsed=480.14s tid=0x00007ffff0018000 nid=0x4842 runnable  [0x00007ffff7fc8000]
   java.lang.Thread.State: RUNNABLE
        at java.net.SocketInputStream.socketRead0(java.base@11.0.10/Native Method)
        at java.net.SocketInputStream.socketRead(java.base@11.0.10/SocketInputStream.java:115)
        at java.net.SocketInputStream.read(java.base@11.0.10/SocketInputStream.java:168)
        at java.net.SocketInputStream.read(java.base@11.0.10/SocketInputStream.java:140)
        at java.net.SocketInputStream.read(java.base@11.0.10/SocketInputStream.java:126)
        at org.eclipse.jdt.debug.tests.connectors.MultipleConnectionsTest.connect(MultipleConnectionsTest.java:156)
        at org.eclipse.jdt.debug.tests.connectors.MultipleConnectionsTest.testTwoConnectionsBehaviour(MultipleConnectionsTest.java:118)
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/122/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/122,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5KjbU_,eclipse.jdt.debug,1250800959,122,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-09-19T09:45:58Z,2022-09-19T09:45:58Z,Fixed in I20220919-0240 via https://github.com/eclipse-platform/eclipse.platform/pull/176,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5KjbU_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/125,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/125,eclipse.jdt.debug,1378472377,125,Default Formater for Exception should print the stack trace,laeubi,1331477,Christoph Läubrich,,CLOSED,2022-09-18T06:47:22Z,2025-02-03T12:28:25Z,"Currently, if I look at a variable in the debugger that is an Exception only the toString method is called.

In most cases the full String representation of the Stacktrace would be more suitable, this is especially useful if the code in question do not print the stack but either handles or supres it","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/125/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/127,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/127,eclipse.jdt.debug,1379006905,127,Revert the workaround done to fix tycho issue,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,CLOSED,2022-09-20T08:16:36Z,2022-10-05T18:32:06Z,"https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/124

Should revert after tycho fixes","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/127/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/130,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/130,eclipse.jdt.debug,1379136531,130,[19] Update Javadoc location for Java 19,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,CLOSED,2022-09-20T09:53:06Z,2022-09-22T08:10:40Z,Update doc location when Java 19 is released,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/130/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/130,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5KocE0,eclipse.jdt.debug,1252114740,130,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-09-20T09:53:18Z,2022-09-20T09:53:18Z,https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/48,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5KocE0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/131,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/131,eclipse.jdt.debug,1379139371,131,Update JDT debug bundle versions after Java 19 code merge to master,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,CLOSED,2022-09-20T09:55:13Z,2022-10-05T18:31:23Z,"Update JDT Core and UI dependency bundles
Update jdt.debug to 3.20 s API update happened.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/131/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/137,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/137,eclipse.jdt.debug,1380787588,137,jdt.debug.tests DNF sporadically since I20220912-1800,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2022-09-21T11:39:38Z,2023-07-01T11:17:50Z,"https://download.eclipse.org/eclipse/downloads/drops4/I20220920-2240/testResults.php
https://download.eclipse.org/eclipse/downloads/drops4/I20220919-1800/testResults.php","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/137/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/137,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5K-z4E,eclipse.jdt.debug,1257979396,137,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-09-26T12:39:24Z,2022-09-26T12:39:24Z,"In https://download.eclipse.org/eclipse/downloads/drops4/I20220925-1800/testResults.php tests DNF on ep426I-unit-macM1-java17 *and* on ep426I-unit-cen64-gtk3-java18.

Scroll down to `DumpStackTracesTimer almost reached timeout` in log files below to see stack traces.

- [org.eclipse.jdt.debug.tests.AutomatedSuite_java18_linux.txt](https://github.com/eclipse-jdt/eclipse.jdt.debug/files/9646010/org.eclipse.jdt.debug.tests.AutomatedSuite_java18_linux.txt)
- [org.eclipse.jdt.debug.tests.AutomatedSuite_macosx_aarch64.txt](https://github.com/eclipse-jdt/eclipse.jdt.debug/files/9646011/org.eclipse.jdt.debug.tests.AutomatedSuite_macosx_aarch64.txt)

The stack shows an immense number of waiting TimerTreads, which could be a problem if there are not enough threads to schedule new jobs.

```
java.lang.Exception: ThreadDump for thread ""Timer-983""
	at java.base@18.0.1.1/java.lang.Object.wait(Native Method)
	at java.base@18.0.1.1/java.lang.Object.wait(Object.java:338)
	at java.base@18.0.1.1/java.util.TimerThread.mainLoop(Timer.java:537)
	at java.base@18.0.1.1/java.util.TimerThread.run(Timer.java:516)
```

On a quick look, we **might** leak `org.eclipse.debug.internal.ui.viewers.update.EventHandlerModelProxy.fTimer` object by not always disposing `EventHandlerModelProxy` subclass instances, but I haven't verified that => https://github.com/eclipse-platform/eclipse.platform/issues/538

In both stack traces we see in the final hang dumps:

```
java.lang.Exception: ThreadDump for thread ""Worker-8: Debug Event Dispatch""
	at java.base@18.0.1.1/java.lang.Object.wait(Native Method)
	at org.eclipse.core.internal.jobs.JobManager.join(JobManager.java:1051)
	at org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider.modelChanged(TreeModelContentProvider.java:523)
	at org.eclipse.debug.internal.ui.viewers.provisional.AbstractModelProxy$1.run(AbstractModelProxy.java:92)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.debug.internal.ui.viewers.provisional.AbstractModelProxy.fireModelChanged(AbstractModelProxy.java:96)
	at org.eclipse.debug.internal.ui.viewers.update.DebugEventHandler.fireDelta(DebugEventHandler.java:169)
	at org.eclipse.debug.internal.ui.viewers.update.DebugTargetEventHandler.fireDelta(DebugTargetEventHandler.java:76)
	at org.eclipse.debug.internal.ui.viewers.update.DebugTargetEventHandler.handleResume(DebugTargetEventHandler.java:59)
	at org.eclipse.debug.internal.ui.viewers.update.EventHandlerModelProxy.dispatchResume(EventHandlerModelProxy.java:222)
	at org.eclipse.debug.internal.ui.viewers.update.EventHandlerModelProxy.handleDebugEvents(EventHandlerModelProxy.java:132)
	at org.eclipse.debug.core.DebugPlugin$EventNotifier.run(DebugPlugin.java:1226)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.debug.core.DebugPlugin$EventNotifier.dispatch(DebugPlugin.java:1260)
	at org.eclipse.debug.core.DebugPlugin$EventDispatchJob.run(DebugPlugin.java:492)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
```

and also before we see lot of such log entries:

```
 Some job is still running or waiting to run: 
'Debug Event Dispatch(20)'/org.eclipse.debug.core.DebugPlugin$EventDispatchJob
thread info: ""Worker-8: Debug Event Dispatch"" prio=5 Id=43 TIMED_WAITING on java.util.Collections$SynchronizedSet@4c3b7811
	at java.base@18.0.1.1/java.lang.Object.wait(Native Method)
	-  waiting on java.util.Collections$SynchronizedSet@4c3b7811
	at org.eclipse.core.internal.jobs.JobManager.join(JobManager.java:1051)
	at org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider.modelChanged(TreeModelContentProvider.java:523)
	at org.eclipse.debug.internal.ui.viewers.provisional.AbstractModelProxy$1.run(AbstractModelProxy.java:92)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.debug.internal.ui.viewers.provisional.AbstractModelProxy.fireModelChanged(AbstractModelProxy.java:96)
	at org.eclipse.debug.internal.ui.viewers.update.DebugEventHandler.fireDelta(DebugEventHandler.java:169)
	at org.eclipse.debug.internal.ui.viewers.update.DebugTargetEventHandler.fireDelta(DebugTargetEventHandler.java:76)
```

```
Some job is still running or waiting to run: 
'Debug Event Dispatch(20)'/org.eclipse.debug.core.DebugPlugin$EventDispatchJob
thread info: ""Worker-0: Debug Event Dispatch"" prio=5 Id=33 TIMED_WAITING on java.util.Collections$SynchronizedSet@21969adc
	at java.base@17/java.lang.Object.wait(Native Method)
	-  waiting on java.util.Collections$SynchronizedSet@21969adc
	at org.eclipse.core.internal.jobs.JobManager.join(JobManager.java:1051)
	at org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider.modelChanged(TreeModelContentProvider.java:523)
	at org.eclipse.debug.internal.ui.viewers.provisional.AbstractModelProxy$1.run(AbstractModelProxy.java:92)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.debug.internal.ui.viewers.provisional.AbstractModelProxy.fireModelChanged(AbstractModelProxy.java:96)
	at org.eclipse.debug.internal.ui.viewers.update.ProcessProxy.fireProcessDelta(ProcessProxy.java:64)
	at org.eclipse.debug.internal.ui.viewers.update.ProcessProxy$1.handleChange(ProcessProxy.java:37)
```


Could be related to [f4d72a08a996c149b0dff89931d9ea85b13134ed](https://github.com/eclipse-platform/eclipse.platform/commit/f4d72a08a996c149b0dff89931d9ea85b13134ed)  (https://github.com/eclipse-platform/eclipse.platform/issues/148).

@jukzi : FYI. This is worrying, if jobs framework has now an issue with `join(family)`","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5K-z4E/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/137,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5K_L49,eclipse.jdt.debug,1258077757,137,NA,jukzi,51790620,Jörg Kubitz,,NA,2022-09-26T13:53:19Z,2022-09-26T13:53:19Z,"join() is not a problem here. it just waits because the work is not done yet.

Many timer threads are created from org.eclipse.debug.internal.ui.viewers.update.EventHandlerModelProxy.fTimer. Maybe those are leaking somewhere? But idle threads don't have the might to block any other thread ... unless they are too many so that OS runs out of threads. Not an issue on WIN, but you reported earlier that linux has trouble with a few thousend threads.
Might be better to lazy init that Timer.

```
	at java.base/java.util.Timer.<init>(Timer.java:147)
	at org.eclipse.debug.internal.ui.viewers.update.EventHandlerModelProxy.<init>(EventHandlerModelProxy.java:40)
	at org.eclipse.debug.internal.ui.viewers.update.ProcessProxy.<init>(ProcessProxy.java:74)
	at org.eclipse.debug.internal.ui.viewers.update.DefaultModelProxyFactory.createModelProxy(DefaultModelProxyFactory.java:53)
	at org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider.installModelProxy(TreeModelContentProvider.java:295)
	at org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider.handleInstall(TreeModelContentProvider.java:1317)
	at org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider.updateNodes(TreeModelContentProvider.java:1294)
	at org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider.updateNodes(TreeModelContentProvider.java:1312)
	at org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider.updateNodes(TreeModelContentProvider.java:1312)
	at org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider.updateModel(TreeModelContentProvider.java:576)
	at org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider.doModelChanged(TreeModelContentProvider.java:543)
	at org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider$DelayedDoModelChangedJob.runInUIThread(TreeModelContentProvider.java:449)
	at org.eclipse.ui.progress.UIJob.lambda$0(UIJob.java:96)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4031)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3636)
	at org.eclipse.jdt.debug.tests.DebugSuite.run(DebugSuite.java:77)

```


Half the time of the jdt.debug tests is spend in org.eclipse.jdt.debug.tests.TestUtil.waitForJobs () - which does NOT use join().
(It would be faster to use join() there - timeout can be done with monitor.cancel)


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5K_L49/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/137,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5K_OB9,eclipse.jdt.debug,1258086525,137,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-09-26T13:59:49Z,2022-09-26T13:59:49Z,"Note, these ""DNF"" are new in 4.26, so neither EventHandlerModelProxy not TestUtil should be related, as they weren't changed in 4.26.

So we have some bad regression in 4.26.

EventHandlerModelProxy workaround is https://github.com/eclipse-platform/eclipse.platform.debug/pull/83.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5K_OB9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/137,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5K_OYf,eclipse.jdt.debug,1258087967,137,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-09-26T14:00:56Z,2022-09-26T14:00:56Z,"> join() is not a problem here. it just waits because the work is not done yet.

Which work? Can you quote related thread from log please?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5K_OYf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/137,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5K_TWF,eclipse.jdt.debug,1258108293,137,NA,jukzi,51790620,Jörg Kubitz,,NA,2022-09-26T14:15:43Z,2022-09-26T14:15:43Z,"I don't see a related stacktace in the logging. Might be the job was not running at the time but only scheduled. there is probably work running in another vm
java.lang.Exception: ThreadDump for thread ""Input Stream Monitor for PID 44244 provide-launch-object""
java.lang.Exception: ThreadDump for thread ""Process monitor for PID 44244 provide-launch-object""

And with that many threads may have stopped relevant progress.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5K_TWF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/137,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5K_YvP,eclipse.jdt.debug,1258130383,137,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-09-26T14:30:58Z,2022-09-26T14:30:58Z,"> Might be the job was not running at the time but only scheduled

```
	at org.eclipse.core.internal.jobs.JobManager.join(JobManager.java:1051)
	at org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider.modelChanged(TreeModelContentProvider.java:523)
```

this corresponds to `Job.getJobManager().join(ElementContentProvider.class, null);`

The jobs that use this family are ""Debug child count update"" and ""Debug has children update"", but we don't see them reported running in `Some job is still running or waiting to run` outputs (there are many). 
There is only `Debug Event Dispatch` job reported.

> And with that many threads may have stopped relevant progress.

What kind of ""relevant progress""?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5K_YvP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/137,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5K_jfx,eclipse.jdt.debug,1258174449,137,NA,jukzi,51790620,Jörg Kubitz,,NA,2022-09-26T15:02:48Z,2022-09-26T15:02:48Z,"That test ran slowly - very slow - from  02:02:48.765 04:02:16.086 i.e 2 hours and had steady progress.
Locally the tests finish in ~30min. i don't think there was any kind of deadlock involved but just a damn slow vm.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5K_jfx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/137,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5K_4iZ,eclipse.jdt.debug,1258260633,137,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-09-26T15:54:07Z,2022-09-26T15:54:07Z,"> That test ran slowly - very slow

Good observation.

I assume they were so slowly because almost every second teardown (via `org.eclipse.jdt.debug.tests.TestUtil.cleanUp(String)`) was affected by hanging ""Debug Event Dispatch"" that was joining on non existing job family and that join was hanging forever because of changes in https://github.com/eclipse-platform/eclipse.platform/commit/f4d72a08a996c149b0dff89931d9ea85b13134ed.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5K_4iZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/137,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5LDG52,eclipse.jdt.debug,1259105910,137,NA,jukzi,51790620,Jörg Kubitz,,NA,2022-09-27T07:36:12Z,2022-09-27T07:36:12Z,"jdt.debug.tests has DNF for quite some time for example
https://download.eclipse.org/eclipse/downloads/drops4/I20220912-1800/testresults/ep426I-unit-mac64-java17_macosx.cocoa.x86_64_17/org.eclipse.jdt.debug.tests.AutomatedSuite.txt
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5LDG52/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/137,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5LDRrz,eclipse.jdt.debug,1259150067,137,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-09-27T08:15:49Z,2022-09-27T08:15:49Z,"> jdt.debug.tests has DNF for quite some time for example
> https://download.eclipse.org/eclipse/downloads/drops4/I20220912-1800/

I haven't reported this fail, my bad. I monitor tests every day, so this one must be overlooked by me.

But this build also includes https://github.com/eclipse-platform/eclipse.platform/commit/f4d72a08a996c149b0dff89931d9ea85b13134ed

So still matches my assumption that we have regression in the `JobManager.join()` **or related** code in 4.26.
Such DNF (in `JobManager.join()` called from `TreeModelContentProvider.modelChanged()` ) never happened in 4.25.

Here stack from DNF today where it again hangs on that code **without** related jobs in the thread dump on which this code is supposed to join: https://download.eclipse.org/eclipse/downloads/drops4/I20220926-1800/testresults/ep426I-unit-mac64-java17_macosx.cocoa.x86_64_17/org.eclipse.jdt.debug.tests.AutomatedSuite.txt

This might be connected to https://github.com/eclipse-platform/eclipse.platform.ui/issues/342 

Could it be, the cancelled jobs ""done"" state may not be ""properly"" communicated to listeners now, so the jobs are **also** not removed from internal `jobs` list  anymore in https://github.com/eclipse-platform/eclipse.platform/blob/f4d72a08a996c149b0dff89931d9ea85b13134ed/runtime/bundles/org.eclipse.core.jobs/src/org/eclipse/core/internal/jobs/JobManager.java#L982





","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5LDRrz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/137,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5LDSw1,eclipse.jdt.debug,1259154485,137,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-09-27T08:19:54Z,2022-09-27T08:19:54Z,"Extracted thread dump from https://download.eclipse.org/eclipse/downloads/drops4/I20220926-1800/testResults.php

[hang_dump_1.txt](https://github.com/eclipse-jdt/eclipse.jdt.debug/files/9653356/hang_dump_1.txt)

There are four thread dumps in the log reported (search for `DumpStackTracesTimer almost reached timeout '7200000'`), but all are **exactly same**.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5LDSw1/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/137,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5LDaOm,eclipse.jdt.debug,1259185062,137,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-09-27T08:46:02Z,2022-09-27T08:46:02Z,"Looking at the commit in question, I see this comment: ""doSchedule will not notify CANCEL_STATUS"" in https://github.com/eclipse-platform/eclipse.platform/blob/f4d72a08a996c149b0dff89931d9ea85b13134ed/runtime/bundles/org.eclipse.core.jobs/src/org/eclipse/core/internal/jobs/JobManager.java#L722

I'm not sure what that mean because I haven't debugged this code, but this sounds exact like like the problem we observe now.

I suspect if the changes in `JobManager.endJob()` affect listener in `JobManager.join()` in a way the internal `jobs` is not properly updated now.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5LDaOm/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/137,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5LDcCV,eclipse.jdt.debug,1259192469,137,NA,jukzi,51790620,Jörg Kubitz,,NA,2022-09-27T08:52:25Z,2022-09-27T08:52:25Z,"That comment was just to remember, that scheduleInternal will not send any notification while holing the lock. Any notification is send in :733 via scheduleNotify outside the lock.
Let's try to create a junit for the cancel case that reproduces the problem(s).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5LDcCV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/137,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5LDqDT,eclipse.jdt.debug,1259249875,137,NA,jukzi,51790620,Jörg Kubitz,,NA,2022-09-27T09:40:45Z,2022-09-27T09:40:45Z,"Wait, tonight's hung was a join on ElementContentProvider i.e. ElementContentProviderJob which is never canceled. Why do you think it has something todo with cancel?

```
java.lang.Exception: ThreadDump for thread ""Test Runner""
	at java.base@17/java.lang.Object.wait(Native Method)
	at org.eclipse.core.internal.jobs.JobManager.join(JobManager.java:1051)
	at org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider.modelChanged(TreeModelContentProvider.java:523)
	at org.eclipse.debug.internal.ui.viewers.provisional.AbstractModelProxy$1.run(AbstractModelProxy.java:92)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.debug.internal.ui.viewers.provisional.AbstractModelProxy.fireModelChanged(AbstractModelProxy.java:96)
	at org.eclipse.debug.internal.ui.viewers.update.LaunchProxy.fireDelta(LaunchProxy.java:167)
	at org.eclipse.debug.internal.ui.viewers.update.LaunchProxy.launchesChanged(LaunchProxy.java:104)
	at org.eclipse.debug.internal.core.LaunchManager$LaunchesNotifier.run(LaunchManager.java:302)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.debug.internal.core.LaunchManager$LaunchesNotifier.notify(LaunchManager.java:262)
	at org.eclipse.debug.internal.core.LaunchManager.fireUpdate(LaunchManager.java:1057)
	at org.eclipse.debug.core.Launch.fireChanged(Launch.java:466)
	at org.eclipse.debug.core.Launch.addProcess(Launch.java:419)
	at org.eclipse.debug.core.model.RuntimeProcess.<init>(RuntimeProcess.java:157)
	at org.eclipse.debug.core.DebugPlugin.newProcess(DebugPlugin.java:830)
	at org.eclipse.jdt.launching.AbstractVMRunner.newProcess(AbstractVMRunner.java:169)
	at org.eclipse.jdt.internal.launching.StandardVMDebugger.run(StandardVMDebugger.java:348)
	at org.eclipse.jdt.launching.JavaLaunchDelegate.launch(JavaLaunchDelegate.java:176)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:806)
	at org.eclipse.jdt.debug.tests.AbstractDebugTest.launchAndWait(AbstractDebugTest.java:1180)
	at org.eclipse.jdt.debug.tests.AbstractDebugTest.launchAndWait(AbstractDebugTest.java:1164)
	at org.eclipse.jdt.debug.tests.AbstractDebugTest.launchAndTerminate(AbstractDebugTest.java:1397)
	at org.eclipse.jdt.debug.tests.AbstractDebugTest.launchAndTerminate(AbstractDebugTest.java:1379)
	at org.eclipse.jdt.debug.tests.AbstractDebugTest.launchAndTerminate(AbstractDebugTest.java:1366)
	at org.eclipse.jdt.debug.tests.breakpoints.MethodBreakpointTests.testDisabledEntryAndExitBreakpoints(MethodBreakpointTests.java:130)
	at java.base@17/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@17/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base@17/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@17/java.lang.reflect.Method.invoke(Method.java:568)
	at junit.framework.TestCase.runTest(TestCase.java:177)
	at junit.framework.TestCase.runBare(TestCase.java:142)
	at org.eclipse.jdt.debug.tests.AbstractDebugTest.runBare(AbstractDebugTest.java:2678)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:130)
	at junit.framework.TestSuite.runTest(TestSuite.java:241)
	at junit.framework.TestSuite.run(TestSuite.java:236)
	at junit.framework.TestSuite.runTest(TestSuite.java:241)
	at org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:61)
	at java.base@17/java.lang.Thread.run(Thread.java:833)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5LDqDT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/137,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5LDs2y,eclipse.jdt.debug,1259261362,137,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-09-27T09:50:49Z,2022-09-27T09:50:49Z,"> Why do you think it has something todo with cancel?

Because of the similar UI issue with cancelled jobs are not removed from Progress view anymore.

The common pattern is: we have job listeners and in the case of join() on a family we will loop forever if the terminated jobs aren't removed from the list. The must not be necessarily cancelled, but all the entries I saw in the Progress were shown as ""cancelled"".

So I draw a conclusion: 
1) I never saw ""hanging cancelled"" jobs in Progress view before 4.26
2) I never saw debug test hanging on `JobManager.join()` before 4.26
3) This would be a very strange coincidence if that would be not related to the recent changes on job scheduling.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5LDs2y/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/137,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5OIdWR,eclipse.jdt.debug,1310840209,137,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-11-10T20:12:20Z,2022-11-10T20:12:20Z,Fixed by one of platform job framework patches.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5OIdWR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/139,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/139,eclipse.jdt.debug,1386066965,139,WIN: failing ConfigurationEncodingTests.testGetSystemDefaultEncoding(),jukzi,51790620,Jörg Kubitz,,OPEN,2022-09-26T13:16:15Z,2023-12-01T12:13:38Z,"The test fails loclly on my windows:

```
junit.framework.ComparisonFailure: The configuration encoding should match the file system encoding expected:<[windows-1252]> but was:<[UTF-8]>
	at junit.framework.Assert.assertEquals(Assert.java:100)
	at junit.framework.TestCase.assertEquals(TestCase.java:253)
	at org.eclipse.jdt.debug.tests.launching.ConfigurationEncodingTests.testGetSystemDefaultEncoding(ConfigurationEncodingTests.java:73)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at junit.framework.TestCase.runTest(TestCase.java:177)
	at junit.framework.TestCase.runBare(TestCase.java:142)
	at org.eclipse.jdt.debug.tests.AbstractDebugTest.runBare(AbstractDebugTest.java:2678)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:130)
	at junit.framework.TestSuite.runTest(TestSuite.java:241)
	at junit.framework.TestSuite.run(TestSuite.java:236)
	at junit.framework.TestSuite.runTest(TestSuite.java:241)
	at org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)

```
@iloveeclipse ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/139/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/142,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/142,eclipse.jdt.debug,1391827353,142,OpenFromClipboardTests::testMember_2 fail intermittently on windows,vik-chand,99390647,Vikas Chandra,,CLOSED,2022-09-30T04:57:07Z,2022-11-24T08:56:40Z,"
org.eclipse.jdt.debug.tests.ui.OpenFromClipboardTests | testMember_2 | Failure | expected:<1> but was:<0>                                                                           junit.framework.AssertionFailedError: expected:<1> but was:<0>                                                  	at junit.framework.Assert.fail(Assert.java:57)                                                  	at junit.framework.Assert.failNotEquals(Assert.java:329)                                                  	at junit.framework.Assert.assertEquals(Assert.java:78)                                                  	at junit.framework.Assert.assertEquals(Assert.java:234)                                                  	at junit.framework.Assert.assertEquals(Assert.java:241)                                                  	at junit.framework.TestCase.assertEquals(TestCase.java:384)                                                  	at org.eclipse.jdt.debug.tests.ui.OpenFromClipboardTests.testMember_2(OpenFromClipboardTests.java:482)                                                  	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)                                                  	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)                                                  	at  java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)                                                  



```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/142/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/142,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5PC0XT,eclipse.jdt.debug,1326138835,142,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-11-24T08:56:40Z,2022-11-24T08:56:40Z,Duplicate of https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/28,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5PC0XT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/143,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/143,eclipse.jdt.debug,1393386545,143,Long UI freezes during debugging,gzsombor,66230,Zsombor,,OPEN,2022-10-01T12:34:04Z,2023-09-02T17:01:32Z,"Debugging remote services could lead to long freezes in the UI.  The UI freeze monitor showed me a couple of traces like these:
```
	at java.base@17.0.4/java.lang.Object.wait(Native Method)
	at org.eclipse.jdi.internal.connect.PacketReceiveManager.waitForPacketAvailable(PacketReceiveManager.java:220)
	at org.eclipse.jdi.internal.connect.PacketReceiveManager.getReply(PacketReceiveManager.java:165)
	at org.eclipse.jdi.internal.connect.PacketReceiveManager.getReply(PacketReceiveManager.java:207)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:195)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:230)
	at org.eclipse.jdi.internal.ArrayReferenceImpl.getValues(ArrayReferenceImpl.java:127)
	at org.eclipse.jdi.internal.ArrayReferenceImpl.getValue(ArrayReferenceImpl.java:76)
	at org.eclipse.jdt.internal.debug.core.model.JDIArrayEntryVariable.retrieveValue(JDIArrayEntryVariable.java:91)
	at org.eclipse.jdt.internal.debug.core.model.JDIVariable.getCurrentValue(JDIVariable.java:74)
	at org.eclipse.jdt.internal.debug.core.model.JDIVariable.getValue(JDIVariable.java:98)
	at org.eclipse.jdt.internal.debug.core.model.JDIArrayEntryVariable.equals(JDIArrayEntryVariable.java:257)
	at org.eclipse.jface.viewers.CustomHashtable.keyEquals(CustomHashtable.java:280)
	at org.eclipse.jface.viewers.CustomHashtable.get(CustomHashtable.java:245)
	at org.eclipse.jface.viewers.StructuredViewer.findItems(StructuredViewer.java:752)
	at org.eclipse.debug.internal.ui.viewers.model.InternalTreeModelViewer.findItem(InternalTreeModelViewer.java:1119)
	at org.eclipse.debug.internal.ui.viewers.model.InternalTreeModelViewer.setElementData(InternalTreeModelViewer.java:1385)
	at org.eclipse.debug.internal.ui.viewers.model.TreeModelLabelProvider.setElementData(TreeModelLabelProvider.java:325)
	at org.eclipse.debug.internal.ui.viewers.model.LabelUpdate.performUpdate(LabelUpdate.java:140)
	at org.eclipse.debug.internal.ui.viewers.model.TreeModelLabelProvider.lambda$0(TreeModelLabelProvider.java:412)
	at org.eclipse.debug.internal.ui.viewers.model.TreeModelLabelProvider$$Lambda$1718/0x0000000801e73268.run(Unknown Source)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
```
and
```
	at org.eclipse.jdi.internal.MirrorImpl.<init>(MirrorImpl.java:84)
	at org.eclipse.jdi.internal.ValueImpl.<init>(ValueImpl.java:49)
	at org.eclipse.jdi.internal.ObjectReferenceImpl.<init>(ObjectReferenceImpl.java:76)
	at org.eclipse.jdi.internal.ObjectReferenceImpl.<init>(ObjectReferenceImpl.java:68)
	at org.eclipse.jdi.internal.ObjectReferenceImpl.readObjectRefWithoutTag(ObjectReferenceImpl.java:638)
	at org.eclipse.jdi.internal.ObjectReferenceImpl.readObjectRefWithTag(ObjectReferenceImpl.java:652)
	at org.eclipse.jdi.internal.ArrayReferenceImpl.readObjectSequence(ArrayReferenceImpl.java:198)
	at org.eclipse.jdi.internal.ArrayReferenceImpl.getValues(ArrayReferenceImpl.java:157)
	at org.eclipse.jdi.internal.ArrayReferenceImpl.getValue(ArrayReferenceImpl.java:76)
	at org.eclipse.jdt.internal.debug.core.model.JDIArrayEntryVariable.retrieveValue(JDIArrayEntryVariable.java:91)
	at org.eclipse.jdt.internal.debug.core.model.JDIVariable.getCurrentValue(JDIVariable.java:74)
	at org.eclipse.jdt.internal.debug.core.model.JDIVariable.getValue(JDIVariable.java:98)
	at org.eclipse.jdt.internal.debug.core.model.JDIArrayEntryVariable.equals(JDIArrayEntryVariable.java:257)
	at org.eclipse.debug.internal.ui.viewers.model.ViewerStateTracker.lambda$8(ViewerStateTracker.java:984)
	at org.eclipse.debug.internal.ui.viewers.model.ViewerStateTracker$$Lambda$1728/0x0000000801eaa458.visit(Unknown Source)
	at org.eclipse.debug.internal.ui.viewers.model.provisional.ModelDelta.doAccept(ModelDelta.java:376)
	at org.eclipse.debug.internal.ui.viewers.model.provisional.ModelDelta.doAccept(ModelDelta.java:378)
	at org.eclipse.debug.internal.ui.viewers.model.provisional.ModelDelta.doAccept(ModelDelta.java:378)
	at org.eclipse.debug.internal.ui.viewers.model.provisional.ModelDelta.doAccept(ModelDelta.java:378)
	at org.eclipse.debug.internal.ui.viewers.model.provisional.ModelDelta.accept(ModelDelta.java:372)
	at org.eclipse.debug.internal.ui.viewers.model.ViewerStateTracker.restorePendingStateOnUpdate(ViewerStateTracker.java:999)
	at org.eclipse.debug.internal.ui.viewers.model.ChildrenUpdate.performUpdate(ChildrenUpdate.java:95)
	at org.eclipse.debug.internal.ui.viewers.model.ChildrenUpdate.performUpdate(ChildrenUpdate.java:112)
	at org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider.performUpdates(TreeModelContentProvider.java:1830)
	at org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider.lambda$2(TreeModelContentProvider.java:1793)
	at org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider$$Lambda$1002/0x00000008015edc18.run(Unknown Source)
	at org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider$DelayedDoModelChangedJob.runInUIThread(TreeModelContentProvider.java:452)
```
and
```
	at org.eclipse.jdi.internal.connect.PacketReceiveManager.waitForPacketAvailable(PacketReceiveManager.java:220)
	at org.eclipse.jdi.internal.connect.PacketReceiveManager.getReply(PacketReceiveManager.java:165)
	at org.eclipse.jdi.internal.connect.PacketReceiveManager.getReply(PacketReceiveManager.java:207)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:195)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:230)
	at org.eclipse.jdi.internal.ArrayReferenceImpl.getValues(ArrayReferenceImpl.java:127)
	at org.eclipse.jdi.internal.ArrayReferenceImpl.getValue(ArrayReferenceImpl.java:76)
	at org.eclipse.jdt.internal.debug.core.model.JDIArrayEntryVariable.retrieveValue(JDIArrayEntryVariable.java:91)
	at org.eclipse.jdt.internal.debug.core.model.JDIVariable.getCurrentValue(JDIVariable.java:74)
	at org.eclipse.jdt.internal.debug.core.model.JDIVariable.getValue(JDIVariable.java:98)
	at org.eclipse.jdt.internal.debug.core.model.JDIArrayEntryVariable.equals(JDIArrayEntryVariable.java:257)
	at org.eclipse.jface.viewers.TreePath.equals(TreePath.java:158)
	at org.eclipse.jface.viewers.TreePath.equals(TreePath.java:106)
	at org.eclipse.debug.internal.ui.viewers.model.ViewerStateTracker$CompareRequestKey.equals(ViewerStateTracker.java:199)
	at java.base@17.0.4/java.util.HashMap.removeNode(HashMap.java:818)
	at java.base@17.0.4/java.util.HashMap.remove(HashMap.java:797)
	at org.eclipse.debug.internal.ui.viewers.model.ViewerStateTracker.compareFinished(ViewerStateTracker.java:1412)
	at org.eclipse.debug.internal.ui.viewers.model.ElementCompareRequest.lambda$0(ElementCompareRequest.java:82)
	at org.eclipse.debug.internal.ui.viewers.model.ElementCompareRequest$$Lambda$2004/0x0000000802040b90.run(Unknown Source)
```
and
```
	at org.eclipse.jdi.internal.connect.PacketReceiveManager.waitForPacketAvailable(PacketReceiveManager.java:220)
	at org.eclipse.jdi.internal.connect.PacketReceiveManager.getReply(PacketReceiveManager.java:165)
	at org.eclipse.jdi.internal.connect.PacketReceiveManager.getReply(PacketReceiveManager.java:207)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:195)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:230)
	at org.eclipse.jdi.internal.StackFrameImpl.getValues(StackFrameImpl.java:140)
	at org.eclipse.jdi.internal.StackFrameImpl.getValue(StackFrameImpl.java:78)
	at org.eclipse.jdt.internal.debug.core.model.JDILocalVariable.retrieveValue(JDILocalVariable.java:64)
	at org.eclipse.jdt.internal.debug.core.model.JDIVariable.getCurrentValue(JDIVariable.java:74)
	at org.eclipse.jdt.internal.debug.core.model.JDIVariable.getValue(JDIVariable.java:98)
	at org.eclipse.jdt.internal.debug.ui.JavaVarActionFilter.testAttribute(JavaVarActionFilter.java:171)
	at org.eclipse.ui.internal.ActionExpression$ObjectStateExpression.preciselyMatches(ActionExpression.java:486)
	at org.eclipse.ui.internal.ActionExpression$ObjectStateExpression.isEnabledFor(ActionExpression.java:455)
	at org.eclipse.ui.internal.ActionExpression$OrExpression.isEnabledFor(ActionExpression.java:531)
	at org.eclipse.ui.internal.ActionExpression$AndExpression.isEnabledFor(ActionExpression.java:126)
	at org.eclipse.ui.internal.ActionExpression$SingleExpression.isEnabledFor(ActionExpression.java:678)
	at org.eclipse.ui.internal.ActionExpression.isEnabledFor(ActionExpression.java:970)
	at org.eclipse.ui.internal.ObjectActionContributor$ObjectContribution.isApplicableTo(ObjectActionContributor.java:337)
	at org.eclipse.ui.internal.ObjectActionContributor.isApplicableTo(ObjectActionContributor.java:226)
	at org.eclipse.ui.internal.ObjectContributorManager.isApplicableTo(ObjectContributorManager.java:302)
	at org.eclipse.ui.internal.ObjectActionContributorManager.contributeObjectActions(ObjectActionContributorManager.java:89)
```
and so on ...

Even though, for remote debugging some sort of a slowness/slugishness is certainly expected, freezing the UI for multiple seconds is a very bad experience.
 The stack traces are showing a very unfortunate situation, that the code actually tries to request things over the wire in the UI thread.
Most of the stack traces are related to JDIArrayEntryVariable.equals(...) method, but there are other codepaths as well. 
What do you think, how can this be solved? Probably moving those evaluations in a separate background thread would be huge, invasive change, but some sort of caching of the requests could improve things - and even make the implementation less error prone, because I'm certain, that CustomHashtable is not well prepared to properly handle constantly changing keys. But the exact details, how and until when things can be cached, would be a challenge.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/143/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/143,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5lj0fM,eclipse.jdt.debug,1703888844,143,NA,basilevs,650857,Vasili Gulevich,,NA,2023-09-02T17:01:31Z,2023-09-02T17:01:31Z,Any workarounds? Closing Variables view does not help.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5lj0fM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/145,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/145,eclipse.jdt.debug,1405902733,145,[20] Debug Support for Java 20,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,CLOSED,2022-10-12T09:44:04Z,2023-06-16T12:07:12Z,"Root bug for Java 20 Debug support

- [ ] https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/144
- [ ] [20] Add Execution Environment for JavaSE-20
- [ ] [20] Update Javadoc location for Java 20
- [ ] [20] Project Loom Second Preview","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/145/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/145,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5fB5-q,eclipse.jdt.debug,1594335146,145,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-06-16T08:43:04Z,2023-06-16T08:43:04Z,@SarikaSinha : is tis done or should it be moved to 4.29 milestone?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5fB5-q/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/145,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5fC0m6,eclipse.jdt.debug,1594575290,145,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2023-06-16T12:07:11Z,2023-06-16T12:07:11Z,"Nothing more to be done, closing the issue.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5fC0m6/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/146,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/146,eclipse.jdt.debug,1414557404,146,Lambda Entry breakpoint cannot be set for the selected expression,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,OPEN,2022-10-19T08:43:57Z,2025-01-08T14:49:22Z,"After the fix of https://bugs.eclipse.org/bugs/show_bug.cgi?id=579100

I could not get it working even after reversal of  the change from :
https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/33

Lambda Entry breakpoint cannot be set for the selected expression, breakpoint is always set for the first lambda expression


@iloveeclipse @gayanper ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/146/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/146,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5MhJtT,eclipse.jdt.debug,1283758931,146,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-10-19T10:11:56Z,2022-10-19T10:11:56Z,"@gayanper 
Can you look into into this?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5MhJtT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/146,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5MhQub,eclipse.jdt.debug,1283787675,146,NA,gayanper,7471994,Gayan Perera,,NA,2022-10-19T10:33:17Z,2022-10-19T10:33:17Z,"> @gayanper
> Can you look into into this?

I can have a look at in the weekend ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5MhQub/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/146,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5MhVbO,eclipse.jdt.debug,1283806926,146,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-10-19T10:48:59Z,2022-10-19T10:48:59Z,"@SarikaSinha : could you please provide steps to reproduce, snippet code used, used Java version etc?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5MhVbO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/146,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5MhgtU,eclipse.jdt.debug,1283853140,146,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-10-19T11:23:50Z,2022-10-19T11:23:50Z,"Arrays.asList(""a"", ""b"", ""c"").stream().filter(s -> s.length() > 0).filter(x -> x.charAt(0) > 1).filter(k -> k.indexOf(0) < 0).filter(p -> !p.isBlank()).forEach(System.out::println);

Trying to select ""x ->"" or ""k ->"" and add Lambda Entry Breakpoint, creates breakpoint for ""s -> s.length() > 0"" Lambda Expression.
I tried with Java 17 and 18.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5MhgtU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/146,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5MusxJ,eclipse.jdt.debug,1287310409,146,NA,gayanper,7471994,Gayan Perera,,NA,2022-10-21T18:33:29Z,2022-10-21T18:33:29Z,"@SarikaSinha if you have time please take this, seems like I might not be able to work on it this weekend.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5MusxJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/146,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5MwKRJ,eclipse.jdt.debug,1287693385,146,NA,gayanper,7471994,Gayan Perera,,NA,2022-10-22T09:26:17Z,2022-10-22T09:26:17Z,"While reproducing, for the given steps it ends up as a line breakpoint for me. But if I just keep the cursor at `filter(|x ->` then it ends up in `s ->`, thats because there is a fallback logic to find the first lambda on the line and create a lambda breakpoint there.

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5MwKRJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/146,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6ZpwFV,eclipse.jdt.debug,2577858901,146,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-08T14:49:21Z,2025-01-08T14:49:21Z,"is this fixed, can be closed?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6ZpwFV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/155,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/155,eclipse.jdt.debug,1472777298,155,ForceReturnAction does debug operations in UI thread,trancexpress,24752155,Simeon Andreev,,CLOSED,2022-12-02T12:17:29Z,2022-12-05T10:50:19Z,"When using the `Force Return` action (context menu from Java editor when in a breakpoint -> `Force Return`),  the actual force return operation is called from the UI thread:

```
""main"" #1 prio=6 os_prio=0 cpu=31100.22ms elapsed=1567.36s tid=0x00007ffff0026ba0 nid=0xcf4d at breakpoint [0x00007ffff7fb7000]
   java.lang.Thread.State: RUNNABLE
        at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.forceReturn(JDIStackFrame.java:1710)
        at org.eclipse.jdt.internal.debug.ui.actions.ForceReturnAction.run(ForceReturnAction.java:100)
        at org.eclipse.jdt.internal.debug.ui.actions.EvaluateAction.run(EvaluateAction.java:597)
        at org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:239)
        at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
        at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
        at org.eclipse.jface.action.ActionContributionItem$$Lambda$450/0x00000008010d5ee0.handleEvent(Unknown Source)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
        at org.eclipse.swt.widgets.Display.sendEvent(Display.java:5810)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1529)
        at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:5020)                                                                                                                                    
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4472)                                                                                                                                      
        at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)                                                                                                       
        at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)                                                                                                                            
        at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)                                                                                                         
        at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)                                                                                                                   
        at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)                                                                                                                                          
        at org.eclipse.ui.internal.Workbench$$Lambda$181/0x0000000800df5778.run(Unknown Source)                                                                                                                    
        at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)                                                                                                                            
        at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)                                                                                                                             
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
        at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
        at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
        at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
        at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
        at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(java.base@17.0.4/Native Method)
        at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(java.base@17.0.4/NativeMethodAccessorImpl.java:77)
        at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(java.base@17.0.4/DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(java.base@17.0.4/Method.java:568)
        at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
        at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
        at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
        at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
```

We should avoid running JDT debug code in the UI thread, as e.g. done in `EvaluateAction.run()`: a modal dialog is shown until the operation finishes and the user can cancel the operation.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/155/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/157,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/157,eclipse.jdt.debug,1472887522,157,Many warnings in JDT Debug repository,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,OPEN,2022-12-02T13:42:47Z,2022-12-02T13:48:11Z,Suddenly I see a huge increase in the number of warnings in the workspace.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/157/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/157,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5PlmOD,eclipse.jdt.debug,1335255939,157,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-12-02T13:48:11Z,2022-12-02T13:48:11Z,"Could be because some JDT core classes were moved to batch compiler bundle, see https://github.com/eclipse-jdt/eclipse.jdt.core/issues/181 and may be I've missed some package exports to declare some jdt bundles as friends.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5PlmOD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/160,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/160,eclipse.jdt.debug,1476511475,160,JDI low level tracing is not thread safe & breaks debugger,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2022-12-05T12:58:08Z,2022-12-09T09:26:03Z,"We experience issues with JVM's started under debugger & to analyze them, I've looked into (ancient not documented) low level JDI debugging in Eclipse.

Good news: if one knows how to enable it, it seem to work.
Bad news: it is hardly usable in general and breaks debugger if application uses multiple threads.

Issues I saw so far:

1) Enabling low level JDI debug is not documented at all
2) The way it is enabled is unusual and doesn't use ""tracing"" Eclipse capabilities
3) Once enabled, it spams log even if application is idling
4) If application uses multiple threads, breakpoints handling (and probably other JDI related actions) causes debugger to fail with error dialogs, unresponsible debuggee process and other various issues.

**Points 1 and 2 - unusual way to enable tracing**
The way how JDI debugging is activated see https://github.com/eclipse-jdt/eclipse.jdt.debug/blob/0c8c6d9fa30cda3c83741613f6ea4c541c037973/org.eclipse.jdt.debug/jdi/org/eclipse/jdi/internal/VirtualMachineManagerImpl.java#L113 is to search **org.eclipse.jdt.debug bundle** classpath for a `jdi.ini` file, where following properties are expected:
```
User.verbose=true
# Default is system.out
Verbose.out=/tmp/jdi_dump.txt
```
I don't understand why that was done in such way, tracing `.options` file was submitted in **same** commit 3c7939022de48bfa72324a4d2451d33cfb56a6d0

For developers today it means, one has to provide a **fragment** to org.eclipse.jdt.debug that includes the preferences file in the source root. That is of course neither selective for a specific test nor can be disabled after the test. Example fragment I've used to play with: 
[jdi_fragment_to_enable_tracing.zip](https://github.com/eclipse-jdt/eclipse.jdt.debug/files/10154293/jdi_fragment_to_enable_tracing.zip)

Anyway, number 1 & 2 could be fixed by using default tracing functionality.

**Point 3 - log spamming**
This is coming from the fact that idling debugger still pings JVM every second in https://github.com/eclipse-jdt/eclipse.jdt.debug/blob/0c8c6d9fa30cda3c83741613f6ea4c541c037973/org.eclipse.jdt.debug/model/org/eclipse/jdt/internal/debug/core/EventDispatcher.java#L298 and gets timeout exception if nothing is there:
```
org.eclipse.jdi.TimeoutException
	at org.eclipse.jdi.internal.connect.PacketReceiveManager.getCommand(PacketReceiveManager.java:145)
	at org.eclipse.jdi.internal.MirrorImpl.getCommandVM(MirrorImpl.java:334)
	at org.eclipse.jdi.internal.event.EventQueueImpl.remove(EventQueueImpl.java:71)
	at org.eclipse.jdt.internal.debug.core.EventDispatcher.run(EventDispatcher.java:298)
	at java.base/java.lang.Thread.run(Thread.java:833)
```
Can be fixed by not tracing TimeoutException.

**Point 4 - debugger errors on MT code**

This is most interesting one. 

Consider this test case:
```
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

public class TestJdiLogging {
	private static ExecutorService pool;

	public static void main(String[] args) throws Exception {
		pool = Executors.newFixedThreadPool(2);
		pool.submit(() -> method());
		pool.submit(() -> method());
		pool.submit(() -> method());
		pool.submit(() -> method());
		pool.submit(() -> method());
		pool.submit(() -> method());
		while(true) {
			Thread.sleep(100);
		}
	}

	private static void method() {
		pool.submit(() -> method()); // Conditional breakpoint ""return false""
	}
}
```
The code simply calls same method from different threads. The method has a (conditional for demonstration) breakpoint that does ""nothing"". I see debugger errors immediately after start if I enable JDI tracing.

The code in https://github.com/eclipse-jdt/eclipse.jdt.debug/blob/0c8c6d9fa30cda3c83741613f6ea4c541c037973/org.eclipse.jdt.debug/jdi/org/eclipse/jdi/internal/VerboseWriter.java#L38 is simply not thread safe. Probably that wasn't an issue at time of Eclipse 3.1, or the code wasn't ever tested, I don't know. But debugging any MT code leads sooner or later to such exceptions that break debugger in many places:
```
!ENTRY org.eclipse.core.jobs 4 2 2022-12-05 13:46:53.194
!MESSAGE An internal error occurred during: ""JDI Expression Evaluation Event Dispatch"".
!STACK 0
java.lang.IndexOutOfBoundsException: Index 248 out of bounds for length 248
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)
	at java.base/java.util.Objects.checkIndex(Objects.java:359)
	at java.base/java.util.ArrayList.get(ArrayList.java:427)
	at org.eclipse.jdi.internal.VerboseWriter.print(VerboseWriter.java:504)
	at org.eclipse.jdi.internal.VerboseWriter.printWidth(VerboseWriter.java:232)
	at org.eclipse.jdi.internal.VerboseWriter.printHexSubstitution(VerboseWriter.java:250)
	at org.eclipse.jdi.internal.VerboseWriter.printHex(VerboseWriter.java:368)
	at org.eclipse.jdi.internal.VerboseWriter.println(VerboseWriter.java:170)
	at org.eclipse.jdi.internal.MirrorImpl.readString(MirrorImpl.java:457)
	at org.eclipse.jdi.internal.MethodImpl.readWithNameSignatureModifiers(MethodImpl.java:744)
	at org.eclipse.jdi.internal.ReferenceTypeImpl.methods(ReferenceTypeImpl.java:1149)
	at org.eclipse.jdi.internal.ReferenceTypeImpl.findMethod(ReferenceTypeImpl.java:987)
	at org.eclipse.jdi.internal.MethodImpl.readWithReferenceTypeWithTag(MethodImpl.java:719)
	at org.eclipse.jdi.internal.LocationImpl.read(LocationImpl.java:181)
	at org.eclipse.jdi.internal.StackFrameImpl.readWithLocation(StackFrameImpl.java:366)
	at org.eclipse.jdi.internal.ThreadReferenceImpl.frames(ThreadReferenceImpl.java:292)
	at org.eclipse.jdi.internal.ThreadReferenceImpl.frames(ThreadReferenceImpl.java:256)
	at org.eclipse.jdt.internal.debug.core.model.JDIThread.getUnderlyingFrames(JDIThread.java:727)
	at org.eclipse.jdt.internal.debug.core.model.JDIThread.computeStackFrames(JDIThread.java:621)
	at org.eclipse.jdt.internal.debug.core.model.JDIThread.computeStackFrames(JDIThread.java:698)
	at org.eclipse.jdt.internal.debug.core.model.JDIThread.getTopStackFrame(JDIThread.java:1343)
	at org.eclipse.jdt.internal.debug.core.breakpoints.ConditionalBreakpointHandler.breakpointHit(ConditionalBreakpointHandler.java:217)
	at org.eclipse.jdt.internal.debug.core.model.JDIThread.handleSuspendForBreakpointInternal(JDIThread.java:1428)
	at org.eclipse.jdt.internal.debug.core.model.JDIThread.handleSuspendForBreakpoint(JDIThread.java:1368)
	at org.eclipse.jdt.internal.debug.core.breakpoints.JavaBreakpoint.suspend(JavaBreakpoint.java:410)
	at org.eclipse.jdt.internal.debug.core.breakpoints.JavaBreakpoint.handleBreakpointEvent(JavaBreakpoint.java:399)
	at org.eclipse.jdt.internal.debug.core.breakpoints.JavaBreakpoint.handleEvent(JavaBreakpoint.java:315)
	at org.eclipse.jdt.internal.debug.core.EventDispatcher.dispatch(EventDispatcher.java:190)
	at org.eclipse.jdt.internal.debug.core.EventDispatcher$1.run(EventDispatcher.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.core.jobs 4 2 2022-12-05 13:46:53.194
!MESSAGE An internal error occurred during: ""JDI Expression Evaluation Event Dispatch"".
!STACK 0
java.lang.IndexOutOfBoundsException: Index 210 out of bounds for length 210
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)
	at java.base/java.util.Objects.checkIndex(Objects.java:359)
	at java.base/java.util.ArrayList.get(ArrayList.java:427)
	at org.eclipse.jdi.internal.VerboseWriter.print(VerboseWriter.java:504)
	at org.eclipse.jdi.internal.VerboseWriter.printHexSubstitution(VerboseWriter.java:249)
	at org.eclipse.jdi.internal.VerboseWriter.printHex(VerboseWriter.java:368)
	at org.eclipse.jdi.internal.VerboseWriter.println(VerboseWriter.java:170)
	at org.eclipse.jdi.internal.MirrorImpl.readString(MirrorImpl.java:457)
	at org.eclipse.jdi.internal.MethodImpl.readWithNameSignatureModifiers(MethodImpl.java:748)
	at org.eclipse.jdi.internal.ReferenceTypeImpl.methods(ReferenceTypeImpl.java:1149)
	at org.eclipse.jdi.internal.ReferenceTypeImpl.findMethod(ReferenceTypeImpl.java:987)
	at org.eclipse.jdi.internal.MethodImpl.readWithReferenceTypeWithTag(MethodImpl.java:719)
	at org.eclipse.jdi.internal.LocationImpl.read(LocationImpl.java:181)
	at org.eclipse.jdi.internal.StackFrameImpl.readWithLocation(StackFrameImpl.java:366)
	at org.eclipse.jdi.internal.ThreadReferenceImpl.frames(ThreadReferenceImpl.java:292)
	at org.eclipse.jdi.internal.ThreadReferenceImpl.frames(ThreadReferenceImpl.java:256)
	at org.eclipse.jdt.internal.debug.core.model.JDIThread.getUnderlyingFrames(JDIThread.java:727)
	at org.eclipse.jdt.internal.debug.core.model.JDIThread.computeStackFrames(JDIThread.java:621)
	at org.eclipse.jdt.internal.debug.core.model.JDIThread.computeStackFrames(JDIThread.java:698)
	at org.eclipse.jdt.internal.debug.core.model.JDIThread.getTopStackFrame(JDIThread.java:1343)
	at org.eclipse.jdt.internal.debug.core.breakpoints.ConditionalBreakpointHandler.breakpointHit(ConditionalBreakpointHandler.java:217)
	at org.eclipse.jdt.internal.debug.core.model.JDIThread.handleSuspendForBreakpointInternal(JDIThread.java:1428)
	at org.eclipse.jdt.internal.debug.core.model.JDIThread.handleSuspendForBreakpoint(JDIThread.java:1368)
	at org.eclipse.jdt.internal.debug.core.breakpoints.JavaBreakpoint.suspend(JavaBreakpoint.java:410)
	at org.eclipse.jdt.internal.debug.core.breakpoints.JavaBreakpoint.handleBreakpointEvent(JavaBreakpoint.java:399)
	at org.eclipse.jdt.internal.debug.core.breakpoints.JavaBreakpoint.handleEvent(JavaBreakpoint.java:315)
	at org.eclipse.jdt.internal.debug.core.EventDispatcher.dispatch(EventDispatcher.java:190)
	at org.eclipse.jdt.internal.debug.core.EventDispatcher$1.run(EventDispatcher.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
```

![image](https://user-images.githubusercontent.com/964108/205641226-f35e0e12-48c4-4946-a5fd-5ac65786d6ee.png)

I plan to provide some fixes to make low level JDI tracing working again.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/160/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/160,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5P9EmN,eclipse.jdt.debug,1341409677,160,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-12-07T18:38:24Z,2022-12-07T18:38:24Z,"Overall the changes looks good, have 2 concerns 
1. Looking at https://www.eclipse.org/lists/jdt-dev/msg01085.html I was wondering can we just add the tracing but not remove the old way as we don't know who all knows and uses it in which form
2. I believe it should be safe to remove org.eclipse.jdi.internal.MirrorImpl.handledJdwpEventSet()?  ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5P9EmN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/160,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5P9O2z,eclipse.jdt.debug,1341451699,160,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-12-07T19:06:54Z,2022-12-07T19:06:54Z,"Before removing jdi.ini I've googled for this file and found exact one link in the forum you're mentioning and another one unanswered question about its use.
I can't imagine this is widely used, useful or was ever published as an official way to trace JDI in Eclipse.

I think it is simply not worth to keep old undocumented and hackish approach given the new one does same in a way **everyone else** does it in Eclipse, and doesn't require any magic or bundle manipulation etc.

I will check org.eclipse.jdi.internal.MirrorImpl.handledJdwpEventSet()
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5P9O2z/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/160,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5QB4z3,eclipse.jdt.debug,1342672119,160,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-12-08T12:41:59Z,2022-12-08T12:41:59Z,"> 2\. I believe it should be safe to remove org.eclipse.jdi.internal.MirrorImpl.handledJdwpEventSet()?

Sorry, I don't see `org.eclipse.jdi.internal.MirrorImpl.handledJdwpEventSet()` - did you mean something else?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5QB4z3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/160,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5QCOZ_,eclipse.jdt.debug,1342760575,160,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-12-08T13:45:02Z,2022-12-08T13:45:02Z,"> > 2. I believe it should be safe to remove org.eclipse.jdi.internal.MirrorImpl.handledJdwpEventSet()?
> 
> Sorry, I don't see `org.eclipse.jdi.internal.MirrorImpl.handledJdwpEventSet()` - did you mean something else?
<img width=""901"" alt=""image"" src=""https://user-images.githubusercontent.com/14090181/206460842-abb6ca4c-76be-4333-b9af-21e6bf1d9c50.png"">


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5QCOZ_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/160,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5QCUhJ,eclipse.jdt.debug,1342785609,160,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-12-08T14:03:29Z,2022-12-08T14:03:29Z,"OK, this is just `handledJdwpEventSet() -> handledJdwpEventSet(Throwable)` signature change, the old method has now one parameter.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5QCUhJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/164,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/164,eclipse.jdt.debug,1500674556,164,[20] Add Execution Environment for JavaSE-20,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,CLOSED,2022-12-16T18:24:31Z,2023-01-27T11:54:29Z,here should be an Execution Environment for JavaSE-20 in the Execution Environment Preference page.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/164/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/164,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Qyk_k,eclipse.jdt.debug,1355436004,164,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-12-16T19:00:39Z,2022-12-16T19:00:39Z,"@jarthana 
Debug can not add Execution Environment for Java 20 as version 20 is not added to JavaCore.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Qyk_k/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/165,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/165,eclipse.jdt.debug,1500676731,165,[20] Update Javadoc location for Java 20,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,CLOSED,2022-12-16T18:26:04Z,2023-06-16T12:12:17Z,Update doc location when Java 20 is released,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/165/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/165,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5fB50M,eclipse.jdt.debug,1594334476,165,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-06-16T08:42:45Z,2023-06-16T08:42:45Z,@SarikaSinha : should it be moved to 4.29 milestone?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5fB50M/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/165,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5fC2Ev,eclipse.jdt.debug,1594581295,165,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2023-06-16T12:12:17Z,2023-06-16T12:12:17Z,Completed via another issue.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5fC2Ev/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/166,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/166,eclipse.jdt.debug,1501908828,166,[20] Project Loom Second Preview,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,CLOSED,2022-12-18T13:48:17Z,2023-06-16T11:30:14Z,"[JEP 436: Virtual Threads (Second Preview)](https://openjdk.org/jeps/436)
[JEP 437: Structured Concurrency (Second Incubator)](https://openjdk.org/jeps/437)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/166/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/166,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Q3yqG,eclipse.jdt.debug,1356802694,166,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-12-18T13:49:55Z,2022-12-18T13:49:55Z,"@testforstephen 
Are you interested in driving this effort?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Q3yqG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/166,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Q5CIl,eclipse.jdt.debug,1357128229,166,NA,testforstephen,14052197,Jinbo Wang,,NA,2022-12-19T05:42:21Z,2022-12-19T05:42:21Z,"yes, I can keep an eye on it and see if there is anything further to do with debugging support.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Q5CIl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/166,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5UptPp,eclipse.jdt.debug,1420219369,166,NA,testforstephen,14052197,Jinbo Wang,,NA,2023-02-07T05:23:53Z,2023-02-07T05:23:53Z,"- [JEP 436: Virtual Threads (Second Preview)](https://openjdk.org/jeps/436)
> History
Virtual threads were proposed as a preview feature by [JEP 425](https://openjdk.org/jeps/425) and delivered in [JDK 19](https://openjdk.org/projects/jdk/19/). This JEP proposes a second preview to allow time for more feedback and to get more experience with this feature.
>
>Minor changes since the first preview:
>
>A small number of API changes described by JEP 425 were made permanent in JDK 19 and thus are not proposed for preview here. These changes were made permanent because they involve functionality that is broadly useful and is not specific to virtual threads. They consist of new methods in Thread ([join(Duration)](https://download.java.net/java/early_access/jdk20/docs/api/java.base/java/lang/Thread.html#join(java.time.Duration)), [sleep(Duration)](https://download.java.net/java/early_access/jdk20/docs/api/java.base/java/lang/Thread.html#sleep(java.time.Duration)), and [threadId()](https://download.java.net/java/early_access/jdk20/docs/api/java.base/java/lang/Thread.html#threadId())), new methods in [Future](https://download.java.net/java/early_access/jdk20/docs/api/java.base/java/util/concurrent/Future.html) (to examine task state and result), and the change to make [ExecutorService](https://docs.oracle.com/en/java/javase/19/docs/api/java.base/java/util/concurrent/ExecutorService.html) extend [AutoCloseable](https://download.java.net/java/early_access/jdk20/docs/api/java.base/java/lang/AutoCloseable.html).
>
>The [degradations to ThreadGroup described in JEP 425](https://openjdk.org/jeps/425#java-lang-ThreadGroup) were made permanent in JDK 19.

See the [comment](https://bugs.openjdk.org/browse/JDK-8295817?focusedCommentId=14532596&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-14532596) for the JEP 436, it is mostly a clone of JEP 425, and the only new section is the History section.

It just has some minor changes in the internal API, no additional debugging changes are needed.
   
- [JEP 437: Structured Concurrency (Second Incubator)](https://openjdk.org/jeps/437)
> History
Structured Concurrency was proposed by [JEP 428](https://openjdk.org/jeps/428) and delivered in [JDK 19](https://openjdk.org/projects/jdk/19/) as an incubating API. This JEP proposes to re-incubate the API, without changes, in JDK 20 to allow time for more feedback and to get more experience with this feature.
>
>The only change in the re-incubated API is that [StructuredTaskScope](https://download.java.net/java/early_access/jdk20/docs/api/jdk.incubator.concurrent/jdk/incubator/concurrent/StructuredTaskScope.html) is updated to support the inheritance of scoped values ([JEP 429](https://openjdk.org/jeps/429)) by threads created in a task scope. This streamlines the sharing of immutable data across threads.

See the [comment](https://bugs.openjdk.org/browse/JDK-8296037?focusedCommentId=14533204&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-14533204) for the JEP 437,  the only change in this JEP from JEP 428 is the addition of the History section. 

No additional debugging changes are needed.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5UptPp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/166,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5fB6GG,eclipse.jdt.debug,1594335622,166,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-06-16T08:43:22Z,2023-06-16T08:43:22Z,@SarikaSinha : is this done or should it be moved to 4.29 milestone?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5fB6GG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/166,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5fCp_A,eclipse.jdt.debug,1594531776,166,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2023-06-16T11:30:14Z,2023-06-16T11:30:14Z,"As there were no changes required, closing the issue.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5fCp_A/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/167,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/167,eclipse.jdt.debug,1507607153,167,Prevent GC of exception in ExceptionEventImpl until event is processed,trancexpress,24752155,Simeon Andreev,,CLOSED,2022-12-22T10:16:51Z,2023-01-19T12:02:43Z,"In our product, we have debugger code like this:

```
    public boolean handleEvent(Event event, JDIDebugTarget target, boolean suspendVote, EventSet eventSet) {
        if (event instanceof ExceptionEvent) {
            ExceptionEvent exceptionEvent = (ExceptionEvent) event;
            ObjectReference ref = exceptionEvent.exception();
            ref.referenceType();
        }
    }
```

During automated tests, we ran into the following exception:

```
Starting com.advantest.itee.contextdebugger.core.testsuite.IntegrationTests tests
Exception in thread ""org.eclipse.jdt.debug: JDI Event Dispatcher"" com.sun.jdi.ObjectCollectedException
	at org.eclipse.jdi.internal.MirrorImpl.defaultReplyErrorHandler(MirrorImpl.java:282)
	at org.eclipse.jdi.internal.ObjectReferenceImpl.referenceType(ObjectReferenceImpl.java:531)
	at ...$5.logEvent(JtmDebugTarget.java:924)
	at ...$5.handleEvent(JtmDebugTarget.java:773)
	at org.eclipse.jdt.internal.debug.core.EventDispatcher.dispatch(EventDispatcher.java:156)
	at org.eclipse.jdt.internal.debug.core.EventDispatcher.run(EventDispatcher.java:305)
	at java.base/java.lang.Thread.run(Thread.java:834)
```

We should ensure that `org.eclipse.jdi.internal.event.ExceptionEventImpl.fException` cannot be collected until registered listeners have finished handling the event.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/167/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/170,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/170,eclipse.jdt.debug,1515159297,170,Breakpoint marker not shown in vertical editor ruler,castortech,85858,,,CLOSED,2022-12-25T13:03:20Z,2023-01-04T12:06:26Z,"Noticing that I have lost the vertical editor ruler breakpoint marker, which seems to have happened after upgrading to 4.26 (22-12).

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/170/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/170,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5RtQXw,eclipse.jdt.debug,1370818032,170,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2023-01-04T11:35:17Z,2023-01-04T11:35:17Z,"Can you attach a sample porject and screenshot, I could not reproduce with  I20230103-1800","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5RtQXw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/170,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5RtS2L,eclipse.jdt.debug,1370828171,170,NA,castortech,85858,,,NA,2023-01-04T11:46:04Z,2023-01-04T11:46:04Z,"Here you go
![image](https://user-images.githubusercontent.com/85858/210548261-12df919e-2d3e-49bc-a758-a6b262694415.png)
[BreakpointMarker.zip](https://github.com/eclipse-jdt/eclipse.jdt.debug/files/10343734/BreakpointMarker.zip)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5RtS2L/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/170,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5RtTvz,eclipse.jdt.debug,1370831859,170,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-04T11:50:14Z,2023-01-04T11:50:14Z,"Can you please switch the theme to default one and/or try with a **new** workspace? I assume either you don't see the right ruler annotation because of the dark theme or because the breakpoint annotation is **disabled** in your workspace preferences.
Here is what I have (and it works fine in alll SDK versions I use and we've shipped in the past):
![image](https://user-images.githubusercontent.com/964108/210548995-743d6207-a699-4470-837a-248adc53abad.png)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5RtTvz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/170,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5RtVbj,eclipse.jdt.debug,1370838755,170,NA,castortech,85858,,,NA,2023-01-04T11:58:09Z,2023-01-04T11:58:09Z,"What I just sent was with a new workspace but my Overview ruler was unchecked. And clearly not sure why it changed but I also seem to have C/C++ installed (2 breakpoint listed) and don't recall ever installing that.

Anyway all is good and thanks and sorry for the false reporting, after using Eclipse for almost 20 years.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5RtVbj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/171,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/171,eclipse.jdt.debug,1517149071,171,"""Source not found"" in debugger because of NPE in MavenSourceContainerResolver",jubax,10562923,Juergen Baier,baier@semedy.com,CLOSED,2023-01-03T09:48:32Z,2023-03-01T17:41:25Z,"I executed my program (with the Tomcat server) and when a debug breakpoint hit then the debugger showed me ""Source not found."" Restarting the debugging session did not help. Restarting Eclipse also didn't help.

I solved the problem by creating a new Tomcat Server (cleaning the existing server did not help).

The error log says:
```
java.lang.NullPointerException: Cannot invoke ""java.util.Collection.isEmpty()"" because ""classesArtifacts"" is null
	at org.eclipse.m2e.sourcelookup.internal.launch.MavenSourceContainerResolver.resolveSourceContainers(MavenSourceContainerResolver.java:40)
	at org.eclipse.jdt.launching.sourcelookup.advanced.AdvancedSourceLookupParticipant.getSourceContainer(AdvancedSourceLookupParticipant.java:144)
	at org.eclipse.jdt.launching.sourcelookup.advanced.AdvancedSourceLookupParticipant.findSourceElements(AdvancedSourceLookupParticipant.java:72)
	at org.eclipse.debug.core.sourcelookup.AbstractSourceLookupDirector$SourceLookupQuery.run(AbstractSourceLookupDirector.java:138)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.debug.core.sourcelookup.AbstractSourceLookupDirector.doSourceLookup(AbstractSourceLookupDirector.java:473)
	at org.eclipse.debug.core.sourcelookup.AbstractSourceLookupDirector.getSourceElement(AbstractSourceLookupDirector.java:714)
	at org.eclipse.debug.internal.ui.sourcelookup.SourceLookupFacility.lookup(SourceLookupFacility.java:303)
	at org.eclipse.debug.internal.ui.sourcelookup.SourceLookupFacility$SourceLookupTask.run(SourceLookupFacility.java:752)
	at org.eclipse.debug.internal.ui.sourcelookup.SourceLookupFacility$SourceLookupJob.run(SourceLookupFacility.java:690)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
```
The corresponding session data:
```
eclipse.buildId=4.26.0.20221201-1200
java.version=17.0.5
java.vendor=Eclipse Adoptium
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_DE
Framework arguments:  -product org.eclipse.epp.package.jee.product -product org.eclipse.epp.package.jee.product -product org.eclipse.epp.package.jee.product -product org.eclipse.epp.package.jee.product -keyring /Users/xxx/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.jee.product -product org.eclipse.epp.package.jee.product -product org.eclipse.epp.package.jee.product -data file:/Users/xxx/dev/workspaces/master/ -product org.eclipse.epp.package.jee.product -keyring /Users/xxx/.eclipse_keyring
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/171/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/171,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Rol0z,eclipse.jdt.debug,1369595187,171,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-03T10:16:06Z,2023-01-03T10:16:06Z,Please report this to m2e.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Rol0z/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/171,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5RopyF,eclipse.jdt.debug,1369611397,171,NA,jubax,10562923,Juergen Baier,baier@semedy.com,NA,2023-01-03T10:33:32Z,2023-01-03T10:33:32Z,"Reported to https://github.com/eclipse-m2e/m2e-core/issues/1170

Thanks","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5RopyF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/171,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Ror4s,eclipse.jdt.debug,1369620012,171,NA,laeubi,1331477,Christoph Läubrich,,NA,2023-01-03T10:43:33Z,2023-01-03T10:43:33Z,"> Please report this to m2e.

I think this is still a bug in JDT... whatever happens here 

-  Restarting the debugging session did not help.
-  Restarting Eclipse also didn't help.

is not really acceptable, and `org.eclipse.jdt.launching.sourcelookup.advanced.AdvancedSourceLookupParticipant` should catch runtime exceptions and probably show a more focused error message.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Ror4s/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/171,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Ro1Rl,eclipse.jdt.debug,1369658469,171,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-03T11:25:14Z,2023-01-03T11:25:14Z,"> is not really acceptable, and `org.eclipse.jdt.launching.sourcelookup.advanced.AdvancedSourceLookupParticipant` should catch runtime exceptions and probably show a more focused error message.

Well, it is conform to the API contract of `org.eclipse.jdt.launching.sourcelookup.advanced.ISourceContainerResolver.resolveSourceContainers(File, IProgressMonitor) throws CoreException` that says as of today:

`Creates and returns a collection of source containers that correspond to the given filesystem classes location. Returns null or an empty collection if requested sources cannot be located.`

The clients that are contributing to the extension point aren't supposed to throw anything **except** `CoreException`.
So it's up to m2e code to try/catch NPE's and provide more specific handling of that NPE or re-throw as  `CoreException`.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Ro1Rl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/171,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Ro27l,eclipse.jdt.debug,1369665253,171,NA,laeubi,1331477,Christoph Läubrich,,NA,2023-01-03T11:33:35Z,2023-01-03T11:33:35Z,"A runtime exception is for sure not expected, but whenever working with extension code it is always good to expect the unexpected :-)

i won't expect it to handle it in any usefull maner other than e.g. writing it to the error log something like:

The source provider `MavenSourceContainerResolver` has thrown an internal error and is ignore, please blame them for the issue so it gets fixed","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Ro27l/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/171,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Ro67y,eclipse.jdt.debug,1369681650,171,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-03T11:52:20Z,2023-01-03T11:52:20Z,"> whenever working with extension code it is always good to expect the unexpected

You knkw, that all of Eclipse is based on extensions. Putting every call to extensions code into try/catch Throwable is not really a solution.

> i won't expect it to handle it in any usefull maner

So if you have no idea, wrap to CoreException and let the platform do whatever it was supposed to do on exception. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Ro67y/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/171,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Wdf14,eclipse.jdt.debug,1450573176,171,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2023-03-01T17:41:25Z,2023-03-01T17:41:25Z,May be related: https://github.com/eclipse-platform/eclipse.platform.debug/issues/117,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Wdf14/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/172,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/172,eclipse.jdt.debug,1522525814,172,Exception in IJDIEventListener breaks debugger,trancexpress,24752155,Simeon Andreev,,CLOSED,2023-01-06T12:41:48Z,2023-01-19T12:03:26Z,"If a `IJDIEventListener` throws an exception, I cannot debug anymore. See below.

E.g., create a command handler example and set the contents to:

```
@SuppressWarnings(""restriction"")
public class SampleHandler extends AbstractHandler {

	@Override
	public Object execute(ExecutionEvent event) throws ExecutionException {
		Job job = new Job(""JDI operation"") {
			@Override
			protected IStatus run(IProgressMonitor monitor) {
				try {
					JDIDebugTarget javaTarget = (JDIDebugTarget) getFirstJavaDebugTarget();
					javaTarget.addJDIEventListener(new IJDIEventListener() {
						@Override
						public boolean handleEvent(Event event, JDIDebugTarget target, boolean suspendVote,
								EventSet eventSet) {
							System.out.println(""handle event..."");
							throw new RuntimeException(""test"");
						}
						@Override
						public void eventSetComplete(Event event, JDIDebugTarget target, boolean suspend,
								EventSet eventSet) {
							// do nothing
						}
					}, javaTarget.createClassPrepareRequest(""test.MyClass""));
				} catch (CoreException e) {
					return e.getStatus();
				}
				return Status.OK_STATUS;
			}
		};
		job.schedule();

		return null;
	}

	private IJavaDebugTarget getFirstJavaDebugTarget() {
		for (IDebugTarget debugTarget : DebugPlugin.getDefault().getLaunchManager().getDebugTargets()) {
			if (debugTarget instanceof IJavaDebugTarget) {
				return (IJavaDebugTarget) debugTarget;
			}
		}
		return null;
	}
}
```

Then debug this snippet, with a breakpoint in the first line of the `main()` method:

```
package test;

public class MyClass {

	public void foo() {
		System.out.println(""MyClass.foo()"");
	}
}
```

```
package test;

public class Main {

	public static void main(String[] args) {
		System.out.println(""Calling MyClass..."");
		new MyClass().foo();
		System.out.println(""Done."");
	}

}
```

Then, use the command to register the handler and step over twice.

Output after the 2nd step over is:

```
handle event...
Exception in thread ""org.eclipse.jdt.debug: JDI Event Dispatcher"" java.lang.RuntimeException: test
	at testjdiaccess.handlers.SampleHandler$1$1.handleEvent(SampleHandler.java:41)
	at org.eclipse.jdt.internal.debug.core.EventDispatcher.dispatch(EventDispatcher.java:157)
	at org.eclipse.jdt.internal.debug.core.EventDispatcher.run(EventDispatcher.java:308)
	at java.base/java.lang.Thread.run(Thread.java:833)
```

The UI gets ""stuck"" in a stepping state. I can't step over, resume, terminate, etc.. E.g. if I terminate, the debug target remains in the `Debug` view, its expanded, still showing the same stepping state. Only the last line showing the status changes, stating that the target terminated.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/172/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/175,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/175,eclipse.jdt.debug,1549951433,175,Provide means to query packages exported by the JRE,HannesWell,44067969,Hannes Wellmann,,CLOSED,2023-01-19T21:12:59Z,2024-05-04T07:38:40Z,"In PDE we have a utility method to obtain the packages packages exported by the JRE of a given `IVMInstall/IExecutionEnvironment`, which is duplicated at multiple locations and also has to access JDT-internals:

https://github.com/eclipse-pde/eclipse.pde/blob/47ef407df3082de87f9e8adc26c517204433ce11/ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/TargetPlatformHelper.java#L407-L454

I wonder if we should add a corresponding method to `IVMInstall` or `IExecutionEnvironment`, depending on where you think it fits better that returns a Set of package names exported by the JRE.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/175/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/175,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5TdjZm,eclipse.jdt.debug,1400256102,175,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-23T12:21:57Z,2023-01-23T12:21:57Z,"Looking on your snippet, I think `IExecutionEnvironment` is more suitable, at least slightly adopted snippet compiles inside that interface.
So if you want proceed, probably you can add `default Set<String> getSystemPackages()` method to it.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5TdjZm/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/175,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hQJ4x,eclipse.jdt.debug,1631624753,175,NA,HannesWell,44067969,Hannes Wellmann,,NA,2023-07-11T23:16:34Z,2023-07-11T23:16:34Z,"> Looking on your snippet, I think `IExecutionEnvironment` is more suitable, at least slightly adopted snippet compiles inside that interface.

In order to be able to query a specific VMInstall for the packages it provides it would be better to add such a method to the `VMInstall` interface. But then API-tools complain that the interface is intended to be implemented by clients and that even a default method is a breaking-change which requires version 4.
If suppressing that error isn't an option a static method could be added to for example `JavaRuntime` that accepts a `VMInstall` and a release and returns the provided packages.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hQJ4x/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/175,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M57xFzJ,eclipse.jdt.debug,2076466377,175,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-25T06:32:26Z,2024-04-25T06:32:26Z,"- `testJavaRuntimeQuerySystemPackages_modularJDK` new test fails **differently** on different OS / Java versions.
- `testJavaRuntimeQuerySystemPackages_nonModularJDK` fails because unable to find Java 8 JVM - I would ""assume"" Java 1.8 as precondition for this test and/or simply only run in Jenkins (where we have the env.variable specified).

@HannesWell: could you please work on that?

Mac Java 17:
https://download.eclipse.org/eclipse/downloads/drops4/I20240424-1800/testresults/html/org.eclipse.jdt.debug.tests_ep432I-unit-macM1-java17_macosx.cocoa.aarch64_17.html

```
begin 0, end -1, length 2

java.lang.StringIndexOutOfBoundsException: begin 0, end -1, length 2
at java.base/java.lang.String.checkBoundsBeginEnd(String.java:4601)
at java.base/java.lang.String.substring(String.java:2704)
at org.eclipse.jdt.debug.tests.core.VMInstallTests.testJavaRuntimeQuerySystemPackages_modularJDK(VMInstallTests.java:249)
```

```
No non-modular VM (<=Java-1.8) found.

junit.framework.AssertionFailedError: No non-modular VM (<=Java-1.8) found.
at junit.framework.Assert.fail(Assert.java:57)
at junit.framework.Assert.assertTrue(Assert.java:22)
at junit.framework.Assert.assertNotNull(Assert.java:256)
at junit.framework.TestCase.assertNotNull(TestCase.java:399)
at org.eclipse.jdt.debug.tests.core.VMInstallTests.searchFirstNonModularVM(VMInstallTests.java:321)
at org.eclipse.jdt.debug.tests.core.VMInstallTests.testJavaRuntimeQuerySystemPackages_nonModularJDK(VMInstallTests.java:264)
```

Linux Java 21 / 22
https://download.eclipse.org/eclipse/downloads/drops4/I20240424-1800/testresults/html/org.eclipse.jdt.debug.tests_ep432I-unit-cen64-gtk3-java21_linux.gtk.x86_64_21.html
```
Range [0, -1) out of bounds for length 2

java.lang.StringIndexOutOfBoundsException: Range [0, -1) out of bounds for length 2
at java.base/jdk.internal.util.Preconditions$1.apply(Preconditions.java:55)
at java.base/jdk.internal.util.Preconditions$1.apply(Preconditions.java:52)
at java.base/jdk.internal.util.Preconditions$4.apply(Preconditions.java:213)
at java.base/jdk.internal.util.Preconditions$4.apply(Preconditions.java:210)
at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:98)
at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckFromToIndex(Preconditions.java:112)
at java.base/jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:349)
at java.base/java.lang.String.checkBoundsBeginEnd(String.java:4861)
at java.base/java.lang.String.substring(String.java:2830)
at org.eclipse.jdt.debug.tests.core.VMInstallTests.testJavaRuntimeQuerySystemPackages_modularJDK(VMInstallTests.java:249)
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M57xFzJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/175,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M57xGeY,eclipse.jdt.debug,2076469144,175,NA,HannesWell,44067969,Hannes Wellmann,,NA,2024-04-25T06:34:44Z,2024-04-25T06:34:44Z,"> @HannesWell: could you please work on that?

Yes, will do it this evening.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M57xGeY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/175,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5715FI,eclipse.jdt.debug,2077725000,175,NA,HannesWell,44067969,Hannes Wellmann,,NA,2024-04-25T16:43:18Z,2024-04-25T16:43:18Z,"> * `testJavaRuntimeQuerySystemPackages_nonModularJDK` fails because unable to find Java 8 JVM - I would ""assume"" Java 1.8 as precondition for this test and/or simply only run in Jenkins (where we have the env.variable specified).

I would be in favor of adding the environment variable to the I-builds tests as well.
The reason is that if we use an assumption to disable the tests if the variable is not set the day JDK-8 is not available anymore on Jenkins and that variable is removed the test is silently skipped (unless somebody searches for the the variables string in the repo). But I think it would be better to fail loud in that case so that the future developers (or future us) gets aware of that an entire code path is untested and take the appropriated actions (or do the informed decision to keep it untested).

I'm currently preparing and testing that. If everything goes as planned it should be a simple change like in https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/438 (just for the I-builds).

> begin 0, end -1, length 2

> ```
> Range [0, -1) out of bounds for length 2
> ```

Looks like not all JDKs report versions like `17.0.10`, but some also just report `17`. I'll fix that in the tests.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5715FI/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/175,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M572QER,eclipse.jdt.debug,2077819153,175,NA,HannesWell,44067969,Hannes Wellmann,,NA,2024-04-25T17:40:31Z,2024-04-25T17:40:31Z,"> I'm currently preparing and testing that. If everything goes as planned it should be a simple change like in #438 (just for the I-builds).

Well it turned out that the Mac and Windows Test job configurations are not as nice Jenkins pipelines as the Linux ones are so it would require more preparatory work to achieve that goal, which I don't have today.
So for now I just went with the skipping approach if no non-modular JDK is found:
- https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/439

If the I-builds are more flexible in this regard one day, this can still be made more strict again.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M572QER/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/175,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M58joDM,eclipse.jdt.debug,2089713868,175,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-05-02T06:31:04Z,2024-05-02T06:31:04Z,"https://download.eclipse.org/eclipse/downloads/drops4/I20240501-1800/testresults/html/org.eclipse.jdt.debug.tests_ep432I-unit-cen64-gtk3-java22_linux.gtk.x86_64_22.html

`testJavaRuntimeQuerySystemPackages_modularJDK` fails on Java 22:
```
testJavaRuntimeQuerySystemPackages_modularJDK	Failure	expected org.eclipse.core.runtime.CoreException to be thrown, but nothing was thrown

java.lang.AssertionError: expected org.eclipse.core.runtime.CoreException to be thrown, but nothing was thrown
at org.eclipse.jdt.debug.tests.core.VMInstallTests.testJavaRuntimeQuerySystemPackages_modularJDK(VMInstallTests.java:252)
```

`testJavaRuntimeQuerySystemPackages_nonModularJDK` fails on all Java 17 - 21 - 22:
```
got: <[null]>, expected: every item is not null

org.junit.AssumptionViolatedException: got: <[null]>, expected: every item is not null
at org.eclipse.jdt.debug.tests.core.VMInstallTests.searchFirstNonModularVM(VMInstallTests.java:330)
at org.eclipse.jdt.debug.tests.core.VMInstallTests.testJavaRuntimeQuerySystemPackages_nonModularJDK(VMInstallTests.java:266)
```

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M58joDM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/175,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M58r-hk,eclipse.jdt.debug,2091903076,175,NA,HannesWell,44067969,Hannes Wellmann,,NA,2024-05-02T23:27:21Z,2024-05-02T23:27:21Z,"Thanks for the heads-up.

> `testJavaRuntimeQuerySystemPackages_modularJDK` fails on Java 22:

I can reproduce that locally when running the tests with a JDK-22.
The reason for the unexpected success is that if `23` is passed as `release`, in
https://github.com/eclipse-jdt/eclipse.jdt.core/blob/68e8c0cdb52504bfafb4b233ac12ae55577fdd45/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/ClasspathLocation.java#L171
`sameRelease` becomes true, because 23 is not yet supported. The reason is that `CompilerOptions.versionToJdkLevel()` defaults to the latest supported version(currently 22), which in turn lets `JavaCore.compareJavaVersions(""22"", ""23"")` return `true`. Eventually this means that the JVM is queried without `release` argument.

This could be fixed, by simply skipping that assert if the queried JVM is of the latest supported version (or even newer).


> 
> `testJavaRuntimeQuerySystemPackages_nonModularJDK` fails on all Java 17 - 21 - 22:
> 
> ```
> org.junit.AssumptionViolatedException: got: <[null]>, expected: every item is not null
> ```

The exception is actually expected, but it looks like the I-build tests don't handle these 'Abort'-Exceptions correctly and don't mark the test as skipped. It is the same when reaching that branch in a local execution in the JDE and when using JUnit-5's `Assumptions.assumeTrue()`. I have to admit I'm surprised that this does not work out of the box.
Can you tell if this is handled in JDT or somewhere in JUnit?
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M58r-hk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/175,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M58r_bP,eclipse.jdt.debug,2091906767,175,NA,HannesWell,44067969,Hannes Wellmann,,NA,2024-05-02T23:32:56Z,2024-05-02T23:32:56Z,"> The exception is actually expected, but it looks like the I-build tests don't handle these 'Abort'-Exceptions correctly and don't mark the test as skipped. It is the same when reaching that branch in a local execution in the JDE and when using JUnit-5's `Assumptions.assumeTrue()`. I have to admit I'm surprised that this does not work out of the box.
> Can you tell if this is handled in JDT or somewhere in JUnit?

OK, it looks like the problem is that the VMInstallTests is still a JUnit-3 test that cannot handle these exceptions.
I'll try to convert it to a JUnit-5 test or is there a reason speaking against such migration?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M58r_bP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/175,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M58uw8A,eclipse.jdt.debug,2092633856,175,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-05-03T09:25:14Z,2024-05-03T09:25:14Z,"> I'll try to convert it to a JUnit-5 test or is there a reason speaking against such migration?

Nothing, except that I would prefer to ""mute"" the tests first, as it would be better to have ""green"" state before starting (possibly longer) transition.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M58uw8A/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/175,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M58xjyZ,eclipse.jdt.debug,2093366425,175,NA,HannesWell,44067969,Hannes Wellmann,,NA,2024-05-03T16:34:45Z,2024-05-03T16:34:45Z,"> > I'll try to convert it to a JUnit-5 test or is there a reason speaking against such migration?
> 
> Nothing, except that I would prefer to ""mute"" the tests first, as it would be better to have ""green"" state before starting (possibly longer) transition.

Understand and Migrating to JUnit-5 is probably more work, but migrating the test to JUnit-4 was straightforward and I pushed it to https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/441.
I have tested the Java-17 and Java-22 VM scenario with and without `NON_MODULAR_JAVA_HOME` available and always without co-located VMs  and in the IDE all worked as expected (i.e. all tests either pass or are properly skipped). So given that the I-build don't use a different mechanism it should now work.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M58xjyZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/175,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M580Ohi,eclipse.jdt.debug,2094065762,175,NA,HannesWell,44067969,Hannes Wellmann,,NA,2024-05-04T07:38:39Z,2024-05-04T07:38:39Z,"> `testJavaRuntimeQuerySystemPackages_modularJDK` fails on Java 22:
> 
> `testJavaRuntimeQuerySystemPackages_nonModularJDK` fails on all Java 17 - 21 - 22:

Finally all cases in `VMInstallTests` also pass in the I-build tests.
Thank you Andrey for your help and everybody else involved in resolving this issue.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M580Ohi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/176,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/176,eclipse.jdt.debug,1550827150,176,NPE if JavaDebugOptionsManager.AskRecurrenceDialog is closed,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2023-01-20T13:12:43Z,2023-01-20T14:17:32Z,"NPE happens if the dialog below is closed by clicking on ""x"" in upper right corner (not with ""Skip"" or ""Repeat""):
![image](https://user-images.githubusercontent.com/964108/213702113-ecfba801-f0ee-4140-b7c8-44d7a1cef073.png)

```
java.lang.NullPointerException: Cannot invoke ""org.eclipse.jdt.debug.core.IJavaExceptionBreakpoint$SuspendOnRecurrenceStrategy.ordinal()"" because ""skip"" is null
    at org.eclipse.jdt.internal.debug.ui.JavaDebugOptionsManager.shouldSkipSubsequentOccurrence(JavaDebugOptionsManager.java:621)
    at org.eclipse.jdt.internal.debug.ui.JavaDebugOptionsManager.breakpointHit(JavaDebugOptionsManager.java:588)
    at org.eclipse.jdt.internal.debug.core.JDIDebugPlugin$HitNotifier.run(JDIDebugPlugin.java:765)
    at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
    at org.eclipse.jdt.internal.debug.core.JDIDebugPlugin$AbstractNotifier.notifyListeners(JDIDebugPlugin.java:581)
    at org.eclipse.jdt.internal.debug.core.JDIDebugPlugin$HitNotifier.notifyHit(JDIDebugPlugin.java:781)
    at org.eclipse.jdt.internal.debug.core.JDIDebugPlugin.fireBreakpointHit(JDIDebugPlugin.java:517)
    at org.eclipse.jdt.internal.debug.core.model.JDIThread.handleSuspendForBreakpointInternal(JDIThread.java:1454)
    at org.eclipse.jdt.internal.debug.core.model.JDIThread.handleSuspendForBreakpoint(JDIThread.java:1368)
    at org.eclipse.jdt.internal.debug.core.breakpoints.JavaBreakpoint.suspend(JavaBreakpoint.java:410)
    at org.eclipse.jdt.internal.debug.core.breakpoints.JavaExceptionBreakpoint.handleBreakpointEventInternal(JavaExceptionBreakpoint.java:446)
    at org.eclipse.jdt.internal.debug.core.breakpoints.JavaExceptionBreakpoint.handleBreakpointEvent(JavaExceptionBreakpoint.java:369)
```

NPE is coming from 868164ebfbf1b371470f438022eef52b50481496 / https://bugs.eclipse.org/bugs/show_bug.cgi?id=284158.

I plan to push a patch.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/176/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/176,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5TWYfN,eclipse.jdt.debug,1398376397,176,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-20T13:22:39Z,2023-01-20T13:22:39Z,"```
Set a breakpoint on NullPointerException and debug this program:

//--
package dbg;

public class Main {
	public static void main(String[] args) {
		new Main().m1();
	}

	private void m1() {
		try {
			m2();
		} finally {
			System.err.println(""cleanup in m1()"");
		}
	}

	private void m2() {
		try {
			m3(null);
		} catch (NullPointerException e) {
			e.printStackTrace();
			throw e;
		}
	}

	private void m3(String s) {
		System.out.println(s.toLowerCase());
	}
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5TWYfN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/178,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/178,eclipse.jdt.debug,1558220119,178,"Enhancement request: Time saver in ""run configurations""",eitan-rosenberg,48506054,Eitan Rosenberg,,CLOSED,2023-01-26T13:03:15Z,2023-04-24T17:41:52Z,"I post in the forum an idea that IMHO will be a time saver.

https://www.eclipse.org/forums/index.php/m/1857190/#msg_1857190

There are images that show the current situation and the improvement.

You will also notice the feedback to the idea.

Please take a look and respond.

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/178/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/178,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ZQVh8,eclipse.jdt.debug,1497454716,178,NA,eitan-rosenberg,48506054,Eitan Rosenberg,,NA,2023-04-05T13:05:51Z,2023-04-05T13:05:51Z,"Hi @noopur2507 ,

Are there any plans to implement this Enhancement?

Regards,
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ZQVh8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/178,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ZTQka,eclipse.jdt.debug,1498220826,178,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-04-05T22:09:05Z,2023-04-05T22:09:05Z,I'll take a look at it.  I like Ed's suggestion of just using the class qualifier.  I think it would be best to make this an optional preference.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ZTQka/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/178,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ZUecG,eclipse.jdt.debug,1498539782,178,NA,eitan-rosenberg,48506054,Eitan Rosenberg,,NA,2023-04-06T06:06:42Z,2023-04-06T06:06:42Z,"Thanks for a quick response.

What is ""a fully qualified class name""  ? (For me, it is the result of Class.getName())
Does it contain the project name ?

The reason I think that the project name should be included is that you might have multiple projects open at the same time.

Imagine a case where you duplicate a project under a different name, and you open the original and the copy at the same time. 

I agree that optional preference is best and if you look at the original discussion Ed Merks even suggested using a template.


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ZUecG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/178,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ZYld3,eclipse.jdt.debug,1499617143,178,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-04-06T20:55:39Z,2023-04-06T20:55:39Z,"Yes, Class.getName().  IMO, the complexity of a template isn't warranted and most users will be happy with simple qualification.  For those that have some extreme corner cases as you mention, renaming the configuration is very easy in those rare occasions.  I am suggesting implementing the simple solution and let users try it out.  Additional preferences can be added in the future if there is enough demand and the new setting can even be made the default if popular enough.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ZYld3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/178,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ZZ6nP,eclipse.jdt.debug,1499965903,178,NA,eitan-rosenberg,48506054,Eitan Rosenberg,,NA,2023-04-07T05:57:36Z,2023-04-07T05:57:36Z,"Ok,

I agree, implementing the simple solution (Class.getName()) is best for now(to speed up things....).
As a workaround, I can always add a super package that will include all the other packages.

Thanks and Godspeed.

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ZZ6nP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/178,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Z3hcT,eclipse.jdt.debug,1507727123,178,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-04-13T23:28:48Z,2023-04-13T23:28:48Z,"I have added a JDT UI PR for the preference part of this.  At the moment, I have the new preferences under Java -> Launching which is a new page.  Right now there is only a Debug category under Java and not a Run/Debug otherwise I would put it there.  The preferences are for Java Applications (local and remote), JUnit tests (includes JUnit test, JUnit plugin test, and the new Generic view Junit test, Generic view JUnit plugin test), and Java Applets.

I will post a debug PR which requires this PR to work for you to try out.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Z3hcT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/178,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Z4NS5,eclipse.jdt.debug,1507906745,178,NA,eitan-rosenberg,48506054,Eitan Rosenberg,,NA,2023-04-14T04:25:10Z,2023-04-14T04:25:10Z,"


> I have added a JDT UI PR for the preference part of this. At the moment, I have the new preferences under Java -> Launching which is a new page. Right now there is only a Debug category under Java and not a Run/Debug otherwise I would put it there. The preferences are for Java Applications (local and remote), JUnit tests (includes JUnit test, JUnit plugin test, and the new Generic view Junit test, Generic view JUnit plugin test), and Java Applets.
> 
> I will post a debug PR which requires this PR to work for you to try out.

Great news !!!
Thanks.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Z4NS5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/178,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5aZfNe,eclipse.jdt.debug,1516630878,178,NA,eitan-rosenberg,48506054,Eitan Rosenberg,,NA,2023-04-20T16:34:59Z,2023-04-20T16:34:59Z,"Hi there !
Is there a way for me to test the new stuff ?

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5aZfNe/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/178,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5aaBBI,eclipse.jdt.debug,1516769352,178,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-04-20T18:30:36Z,2023-04-20T18:30:36Z,I just merged the JDT UI stuff and will shortly merge the JDT Debug portion so it should be available via the I-builds on Friday or at worst Saturday.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5aaBBI/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/178,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5aaBRC,eclipse.jdt.debug,1516770370,178,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-04-20T18:31:28Z,2023-04-20T18:31:28Z,"If you check out eclipse.jdt.debug and apply the debug PR and run a child Eclipse you can do so now.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5aaBRC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/178,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5aaFfN,eclipse.jdt.debug,1516787661,178,NA,eitan-rosenberg,48506054,Eitan Rosenberg,,NA,2023-04-20T18:46:23Z,2023-04-20T18:46:23Z,"Thanks,
I will wait for the I-builds. 
I have to admit that I am a  more of a user of eclipse than a developer.
You have here a 71+ years old retired programmer that use Java as a hobby and 
Brain training.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5aaFfN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/178,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ab10A,eclipse.jdt.debug,1517247744,178,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-04-21T04:41:34Z,2023-04-21T04:41:34Z,"Hi @eitan-rosenberg Patch has been merged.  Should be in the next I-build which you can update from:

https://download.eclipse.org/eclipse/updates/4.28-I-builds

This will update your Eclipse install to 4.28 M1 + patches.  If you are uncomfortable with that, download another 2023-03 Eclipse SDK and update it via the repo above so you can try out the patch without disrupting your current set-up.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ab10A/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/178,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ab2ed,eclipse.jdt.debug,1517250461,178,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-04-21T04:43:42Z,2023-04-21T04:43:42Z,"Jeff, please provide N&N entry. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ab2ed/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/178,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ab2sV,eclipse.jdt.debug,1517251349,178,NA,eitan-rosenberg,48506054,Eitan Rosenberg,,NA,2023-04-21T04:44:42Z,2023-04-21T04:44:42Z,"Good morning. (It is 7:44 in the morning here)
I will try ASAP.
Thanks.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ab2sV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/178,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ab27e,eclipse.jdt.debug,1517252318,178,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-04-21T04:46:28Z,2023-04-21T04:46:28Z,@iloveeclipse Will do.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ab27e/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/178,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ag7DA,eclipse.jdt.debug,1518579904,178,NA,eitan-rosenberg,48506054,Eitan Rosenberg,,NA,2023-04-22T09:39:32Z,2023-04-22T09:39:32Z,"> Hi @eitan-rosenberg Patch has been merged. Should be in the next I-build which you can update from:
> 
> https://download.eclipse.org/eclipse/updates/4.28-I-builds
> 
> This will update your Eclipse install to 4.28 M1 + patches. If you are uncomfortable with that, download another 2023-03 Eclipse SDK and update it via the repo above so you can try out the patch without disrupting your current set-up.

Hi,
Firstly many thanks.
Works like a charm... something to show to my grandchildren...
I was wondering how to incorporate this in my current 2023-03. Is it possible ?
I did manage to add to eclipse-SDK-4.27 my favorite components & plugins, so I am also happy with that.
regards.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ag7DA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/178,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5an4zY,eclipse.jdt.debug,1520405720,178,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-04-24T15:37:19Z,2023-04-24T15:37:19Z,"Hi @eitan-rosenberg Glad you like it.  If you update your current 2023-03 using 4.28-I-builds, yes you can use the new feature but you will get other platform updates and technically will be somewhere between 2023-03 and 2023-06.  That's not a bad thing.  If you are worried about that, you can always download a 4.28 M2 package when it is available (next week I believe) and start using it alongside your 2023-03.  If you run into some major problem, you will still have your 2023-03 to fall back on. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5an4zY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/178,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5aoged,eclipse.jdt.debug,1520568221,178,NA,eitan-rosenberg,48506054,Eitan Rosenberg,,NA,2023-04-24T17:33:12Z,2023-04-24T17:33:12Z,"What I did is to download and ""install"" eclipse-SDK-4.28M1-win32-x86_64.zip and 
add to it : 
- Lombok
- Marketplace Client 
- Eclipse Web Developer Tools.
- M2E Maven Integration for Eclipse

also I add to ""available software site""
- https://download.eclipse.org/eclipse/updates/4.28-I-builds/
- https://download.eclipse.org/technology/m2e/snapshots/latest/

For me, it is enough.
Today I deleted my 2023-03 folder....
Actually, I think that in the future I will use this approach, so I will have what I actually use.
Thanks again.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5aoged/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/179,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/179,eclipse.jdt.debug,1559326782,179,Missing variables when debugging Android apps,nisargjhaveri,6381721,Nisarg Jhaveri,,CLOSED,2023-01-27T07:57:29Z,2023-03-29T16:11:46Z,"While trying to debug some Android apps in VS Code, some variables are missing from the variable list for some methods.

On more investigation, looks like it is because of the assumption that the first slot always contains this. When investigating the debug information from the compiled dex files using dexdump, looks like `this` is not always at 0th register/slot.

https://github.com/eclipse-jdt/eclipse.jdt.debug/blob/8583bcb7cce59262ca893b90d9e6ac49b5f10b0a/org.eclipse.jdt.debug/jdi/org/eclipse/jdi/internal/MethodImpl.java#L564-L566


Also, looks like it is not even required that the slots will start from 0, or that arguments will be at the beginning of the table. The logic here to check if a variable is argument or not is not valid. Also, it might already be invalid as the `argCnt` is supposed to return number of words for argument and not number of slots.

https://github.com/eclipse-jdt/eclipse.jdt.debug/blob/8583bcb7cce59262ca893b90d9e6ac49b5f10b0a/org.eclipse.jdt.debug/jdi/org/eclipse/jdi/internal/MethodImpl.java#L562","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/179/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/179,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5T0Cxa,eclipse.jdt.debug,1406151770,179,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2023-01-27T08:08:14Z,2023-01-27T08:08:14Z,You can provide a patch to fix?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5T0Cxa/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/179,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5T0GZP,eclipse.jdt.debug,1406166607,179,NA,nisargjhaveri,6381721,Nisarg Jhaveri,,NA,2023-01-27T08:21:11Z,2023-01-27T08:21:11Z,"Sure, I can try, though I was having some trouble setting up and validating.

Also, I was trying to look at other implementations of this, and looks like here we're skipping variables named `this` or starting with `this$`. Is that what is expected? Or should we just ignore the one named `this`?

https://github.com/openjdk/jdk/blob/c6b3f2dd1055f332c6230872c17e3a6c6f9dff3b/src/jdk.jdi/share/classes/com/sun/tools/jdi/ConcreteMethodImpl.java#L497-L501

I don't see a solution for the `isArgument` issue, though.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5T0GZP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/179,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5T07bw,eclipse.jdt.debug,1406383856,179,NA,nisargjhaveri,6381721,Nisarg Jhaveri,,NA,2023-01-27T11:42:48Z,2023-01-27T11:42:48Z,"@SarikaSinha, I've created a PR for this. Please have a look if it makes sense?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5T07bw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/183,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/183,eclipse.jdt.debug,1570604466,183,com.sun.jdi.ObjectReference.setValue implementation is not spec complaint,alexmenkov,69548902,Alex Menkov,,OPEN,2023-02-03T23:12:25Z,2023-02-07T22:09:03Z,"Specification of the JDI method ObjectReference.setValue has changed in JDK 20 to require the field be non-final:
https://bugs.openjdk.org/browse/JDK-8280798 - the fix
https://bugs.openjdk.org/browse/JDK-8298799 - release note
Eclipse JDI implementation allows modification of final instance fields, so it becomes not compliant with the updated spec","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/183/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/183,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5UsQic,eclipse.jdt.debug,1420888220,183,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-02-07T14:41:42Z,2023-02-07T14:41:42Z,"@SarikaSinha : I don't remember what our conclusion was on this (not sure we had one): are we going to completely remove the support or just keep it ""as is"" - by default, since f91b69638f6c81157d6929e65fa9477a09f0b083 we show a warning that this is not a good idea to change final field values?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5UsQic/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/183,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5UsSpb,eclipse.jdt.debug,1420896859,183,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-02-07T14:47:22Z,2023-02-07T14:47:22Z,"@alexmenkov : I assume JVM will refuse to perform this operation after https://bugs.openjdk.org/browse/JDK-8280798 ?

if so, we might conditionally disable this ""feature"" in Eclipse (independently on the preference value) if we see debuggee running Java 20+?

@trancexpress : FYI.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5UsSpb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/183,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5UsfKy,eclipse.jdt.debug,1420948146,183,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2023-02-07T15:18:04Z,2023-02-07T15:18:04Z,"We wanted to give the message on edit rather than save.
So now we need to se how can we disable edit/save for final values for Projects with compliance level >= 20.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5UsfKy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/183,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Uusjn,eclipse.jdt.debug,1421527271,183,NA,alexmenkov,69548902,Alex Menkov,,NA,2023-02-07T22:09:02Z,2023-02-07T22:09:02Z,"> I assume JVM will refuse to perform this operation after https://bugs.openjdk.org/browse/JDK-8280798 ?
@iloveeclipse No. There is no changes in JVM, just JDI spec change. So this ""feature"" will work in Eclipse debugger with jdk20+ (if you decide to keep it) 

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Uusjn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/184,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/184,eclipse.jdt.debug,1577388187,184,Clean up duplicated code in JavaRuntime,trancexpress,24752155,Simeon Andreev,,CLOSED,2023-02-09T07:32:56Z,2023-03-13T06:22:33Z,"See `org.eclipse.jdt.launching.JavaRuntime.isModule(IClasspathEntry, IJavaProject)`, the code there can partially be replaced with the new `ClasspathEntry.isModular()`.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/184/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/184,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5XWbBY,eclipse.jdt.debug,1465495640,184,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2023-03-13T04:30:31Z,2023-03-13T04:30:31Z,"@trancexpress @iloveeclipse 
I am seeing this Error:
Description	Resource	Path	Location	Type
The method isModular() in the type ClasspathEntry is not applicable for the arguments (IClasspathEntry)	JavaRuntime.java	/org.eclipse.jdt.launching/launching/org/eclipse/jdt/launching	line 1036	Java Problem

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5XWbBY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/184,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5XWuOx,eclipse.jdt.debug,1465574321,184,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-13T06:16:40Z,2023-03-13T06:16:40Z,"@SarikaSinha : not sure what you mean : do you see it on some private branch, or after merge? Master is error free. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5XWuOx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/184,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5XWvRO,eclipse.jdt.debug,1465578574,184,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2023-03-13T06:22:32Z,2023-03-13T06:22:32Z,"I was facing on master after taking 4.28 but looks like some rebuild issue.
Sorry for the noise.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5XWvRO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/186,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/186,eclipse.jdt.debug,1591278205,186,Auto import the unresolved classes during evaluation,testforstephen,14052197,Jinbo Wang,,OPEN,2023-02-20T07:05:51Z,2023-02-20T07:06:28Z,"**Current**:
When the evaluation snippet contains some types not imported in current Java file, it throws compilation errors ""unresolved type"" during evaluation. To get it work, you have to use the fully qualified name for the missing classes, it is not that convenient on UX perspective.
![image](https://user-images.githubusercontent.com/14052197/220034752-5c8b7882-74cc-43dc-bbf0-e63b7f2e65f8.png)

**Expected**:
Auto import the missing classes when compiling the evaluation snippet.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/186/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/188,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/188,eclipse.jdt.debug,1605441710,188,The source code of some javaFx classes is no longer accessible at debugging in Eclipse,Graou74,54896431,,,CLOSED,2023-03-01T18:13:13Z,2023-03-02T08:24:02Z,"Repeat here of the problem described at: https://github.com/eclipse-platform/eclipse.platform.debug/issues/117

It looks like it would be the 'Preference/Java/Debug/Use advanced source loockup' option that is causing source detection to fail with the source attachment.

Here is the log file retrieved when running in debug:
[ .log](https://github.com/eclipse-jdt/eclipse.jdt.debug/files/10864119/default.log)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/188/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/188,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Wga-8,eclipse.jdt.debug,1451339708,188,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2023-03-02T05:57:01Z,2023-03-02T05:57:01Z,"@mickaelistria 
From the log it looks like the issue needs to handled in m2e. Can we create an issue there?
java.lang.NullPointerException: Cannot invoke ""java.util.Collection.isEmpty()"" because ""classesArtifacts"" is null
	at org.eclipse.m2e.sourcelookup.internal.launch.MavenSourceContainerResolver.resolveSourceContainers(MavenSourceContainerResolver.java:40)
	at org.eclipse.jdt.launching.sourcelookup.advanced.AdvancedSourceLookupParticipant.getSourceContainer(AdvancedSourceLookupParticipant.java:144)
	at org.eclipse.jdt.launching.sourcelookup.advanced.AdvancedSourceLookupParticipant.findSourceElements(AdvancedSourceLookupParticipant.java:72)
	at org.eclipse.debug.core.sourcelookup.AbstractSourceLookupDirector$SourceLookupQuery.run(AbstractSourceLookupDirector.java:138)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.debug.core.sourcelookup.AbstractSourceLookupDirector.doSourceLookup(AbstractSourceLookupDirector.java:473)
	at org.eclipse.debug.core.sourcelookup.AbstractSourceLookupDirector.getSourceElement(AbstractSourceLookupDirector.java:714)
	at org.eclipse.debug.internal.ui.sourcelookup.SourceLookupFacility.lookup(SourceLookupFacility.java:303)
	at org.eclipse.debug.internal.ui.sourcelookup.SourceLookupFacility$SourceLookupTask.run(SourceLookupFacility.java:752)
	at org.eclipse.debug.internal.ui.sourcelookup.SourceLookupFacility$SourceLookupJob.run(SourceLookupFacility.java:690)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Wga-8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/188,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5WgboR,eclipse.jdt.debug,1451342353,188,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-02T05:59:57Z,2023-03-02T05:59:57Z,"Yes, same as https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/171","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5WgboR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/188,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5WgvJ7,eclipse.jdt.debug,1451422331,188,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2023-03-02T07:36:02Z,2023-03-02T07:36:02Z,"Thanks all for the input allowing to identify it's https://github.com/eclipse-m2e/m2e-core/issues/1170 .
@Graou74 you can install m2e snapshots ( https://github.com/eclipse-m2e/m2e-core/blob/master/README.md#-installation ) to get the fix; this should be part of upcoming release in a couple of weeks.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5WgvJ7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/188,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Wg3Km,eclipse.jdt.debug,1451455142,188,NA,Graou74,54896431,,,NA,2023-03-02T08:06:45Z,2023-03-02T08:06:45Z,What amazing responsiveness. Thanks for your help.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Wg3Km/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/188,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Wg8Fh,eclipse.jdt.debug,1451475297,188,NA,Graou74,54896431,,,NA,2023-03-02T08:24:02Z,2023-03-02T08:24:02Z,The fix is installed and working 👍,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Wg8Fh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/190,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/190,eclipse.jdt.debug,1609659687,190,Cannot evaluate property of record type,mfussenegger,38700,Mathias Fußenegger,,OPEN,2023-03-04T07:38:58Z,2023-03-10T13:11:39Z,"When using [java-debug](https://github.com/microsoft/java-debug) to debug the following snippet:

```java
record Foo(String bar) {

    public int len() {
        return bar.length();
    }
}


@Test
public void test_foo() throws Exception {
    Foo f1 = new Foo(""bar"");
    f1.len();
}
```

Evaluating `bar` when stopped on a breakpoint inside the `len` function fails with an error - saying it can't evaluate the expression. The value is visible in the variables view.

Looking through the java-debug code it creates an `ICompiledExpression` using the `ASTEvaluationEngine`

The `compiledExpression` looks like this:

```
compiledExpression: InstructionSequence@230
  fErrors: ArrayList@237 size=0
  fException: null
  fInstructions: ArrayList@238 size=4
    0: PushThis@248 ""push 'this'""
    1: PushFieldVariable@249 ""push field bar""
    2: ReturnInstruction@250 ""return""
    3: NoOp@251 ""no op""
  fSnippet: ""bar""
```


It then calls `engine.evaluateExpression` which returns an evaluateResult like this:

```
evaluateResult: EvaluationResult@270
  fEngine: ASTEvaluationEngine@231
  fErrors: ArrayList@278 size=0
  fException: DebugException@273 ""org.eclipse.debug.core.DebugException: Cannot find the field bar for the object dummy.DummyTest$Foo (id=43)""
    backtrace: Object[6]@280
    cause: DebugException@273 ""org.eclipse.debug.core.DebugException: Cannot find the field bar for the object dummy.DummyTest$Foo (id=43)""
    depth: 3
    detailMessage: ""Cannot find the field bar for the object dummy.DummyTest$Foo (id=43)""
    stackTrace: StackTraceElement[0]@282
    status: Status@283 ""Status ERROR: org.eclipse.jdt.debug code=0 Cannot find the field bar for the object dummy.DummyTest$Foo (id=43)""
    suppressedExceptions: Collections$EmptyList@284 size=0
  fSnippet: ""bar""
  fTerminated: false
  fThread: JdtEvaluationProvider$1@209
  fValue: null
```


In my setup I haven't managed to step into `engine.evaluateExpression` so I don't know where exactly things go wrong, but from what I can tell the code in java-debug appeared alright so I thought this would be the right place to report the issue.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/190/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/190,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5XDNRN,eclipse.jdt.debug,1460458573,190,NA,mfussenegger,38700,Mathias Fußenegger,,NA,2023-03-08T16:28:17Z,2023-03-08T16:28:17Z,"I missed to mention that this only happens for inner records. If the record is in the top level everything works fine.

In java-debug there was a fix for the dependencies, so I can now step into the ASTEvaluationEngine.
What I found is that in `PushFieldVariable.execute` it cannot find the field via when calling:

https://github.com/eclipse-jdt/eclipse.jdt.debug/blob/4af51129167fc5781cfc82a85f0204b85c3145b3/org.eclipse.jdt.debug/eval/org/eclipse/jdt/internal/debug/eval/ast/instructions/PushFieldVariable.java#L69

The `receiver` is a `JDIObjectValue`:

```
receiver: JDIObjectValue@10997
  : JDIObjectValue@10997 ""mypackage.AppTest$Foo (id=45)""
```

In `JDIObjectValue.getField(...)`

https://github.com/eclipse-jdt/eclipse.jdt.debug/blob/4af51129167fc5781cfc82a85f0204b85c3145b3/org.eclipse.jdt.debug/model/org/eclipse/jdt/internal/debug/core/model/JDIObjectValue.java#L263

`fields` looks like this:

```
fields: ArrayList$Itr@11002
  cursor: 1
  expectedModCount: 0
  lastRet: 0
  this$0: ArrayList@11012 size=1
    0: FieldImpl@11003 ""bar""
      fDeclaringType: ClassTypeImpl@11000
      fDescription: ""Field""
      fFieldID: JdwpFieldID@11008
      fName: ""bar""
      fPendingJdwpRequest: false
      fSignature: ""Ljava/lang/String;""
      fTypeName: ""java.lang.String""
```

The field with a name match has a declaring type like this:

```
declaringType : ClassTypeImpl@11000 ""mypackage.AppTest$Foo""
    fName: ""mypackage.AppTest$Foo""
    fSignature: ""Lmypackage/AppTest$Foo;""
    fSourceName: ""AppTest.java""
```

But it doesn't match on the signature, because the `PushFieldVariable` has a different `fDeclaringTypeSignature`:

```
  fInstructions: ArrayList@235 size=4
    0: PushThis@237 ""push 'this'""
      fEnclosingLevel: 0
      fInterpreter: null
    1: PushFieldVariable@238 ""push field bar""
      fDeclaringTypeSignature: ""Lmypackage/Foo;""
      fInterpreter: null
      fName: ""bar""
      fSize: 2
      fSuperClassLevel: 0
```


Any ideas or pointers?

It appears to me as if the `fDeclaringTypeSignature` is incorrect as it misses the parent class `AppTest`.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5XDNRN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/190,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5XN8Db,eclipse.jdt.debug,1463271643,190,NA,subyssurendran666,117082823,Suby S Surendran,suby.surendran@ibm.com,NA,2023-03-10T04:55:26Z,2023-03-10T04:55:26Z,@mfussenegger Could you please attach the sample project file for run it in the eclipse?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5XN8Db/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/190,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5XP47Y,eclipse.jdt.debug,1463783128,190,NA,mfussenegger,38700,Mathias Fußenegger,,NA,2023-03-10T13:09:40Z,2023-03-10T13:09:40Z,"> @mfussenegger Could you please attach the sample project file for run it in the eclipse?

Creating a sample project with:

```
mvn archetype:generate -DarchetypeGroupId=org.apache.maven.archetypes -DarchetypeArtifactId=maven-archetype-quickstart 
```

Changing compiler source and target in the pom.xml

```
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
```


and then adding the following in the `AppTest` class should reproduce it.

```java
record Foo(String bar) {

    public int len() {
        return bar.length();
    }
}


@Test
public void test_foo() throws Exception {
    Foo f1 = new Foo(""bar"");
    f1.len();
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5XP47Y/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/190,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5XP5iZ,eclipse.jdt.debug,1463785625,190,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-10T13:11:38Z,2023-03-10T13:11:38Z,@mfussenegger : would be nice (would save everyone's time who would like to debug that) if you would simply zip and attach the example Eclipse project here.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5XP5iZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/192,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/192,eclipse.jdt.debug,1615359281,192,JDIType.throwDebugException() doesn't properly handle disconnected exception,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2023-03-08T14:20:43Z,2023-03-08T15:11:34Z,"In our automated tests we see sometimes logged errors like:
```
junit.framework.AssertionFailedError: 1 unexpected error(s) or warning(s) found in the log. Messages: [Internal error logged from JDI Debug: ]. First error or warning: Internal error logged from JDI Debug: . 
Stack:com.sun.jdi.VMDisconnectedException: Got IOException from Virtual Machine
	at org.eclipse.jdi.internal.connect.PacketSendManager.sendPacket(PacketSendManager.java:93)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:190)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:230)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:262)
	at org.eclipse.jdi.internal.ClassTypeImpl.superclass(ClassTypeImpl.java:309)
	at org.eclipse.jdt.internal.debug.core.model.JDIClassType.getSuperclass(JDIClassType.java:145)
```
The test doesn't expect that error in the log and fails (but would succeed without error log entry). 
The error itself is unconditionally logged by the framework even if the debug listener works just fine & properly handles the case if the debug target is gone.

The error is logged because in JDIDebugElement.logError() 

https://github.com/eclipse-jdt/eclipse.jdt.debug/blob/0c8c6d9fa30cda3c83741613f6ea4c541c037973/org.eclipse.jdt.debug/model/org/eclipse/jdt/internal/debug/core/model/JDIDebugElement.java#L56

the `getDebugTarget().isAvailable()` says ""yes, I'm still there"" **even if JVM is already disconnected**.

The root cause of it is a subtle difference between `JDIType.throwDebugException()` and `JDIDebugElement.throwDebugException()`:  the **overridden** method in `JDIType` doesn't call `JDIDebugElement.disconnected()`, so after `JDIType.throwDebugException()` is called above with `VMDisconnectedException` in `JDIClassType.getSuperclass()` debug target is still assuming that JVM is connected.

https://github.com/eclipse-jdt/eclipse.jdt.debug/blob/0c8c6d9fa30cda3c83741613f6ea4c541c037973/org.eclipse.jdt.debug/model/org/eclipse/jdt/internal/debug/core/model/JDIType.java#L77

The problem was introduced long time ago:

- The original `JDIDebugElement` code was copy/pasted to `JDIType` and at that time original code did not had yet `disconnected()` call, see [this commit](https://github.com/eclipse-jdt/eclipse.jdt.debug/commit/3fcb97656ef0f864a14d3c15a6385de18e79e006).
- Same year later the original code in `JDIDebugElement` was ""cleaned up"" and `disconnected()` call was added, but only in original code, not in the copied code, see [this commit](https://github.com/eclipse-jdt/eclipse.jdt.debug/commit/05ad6ba384256aa9b0582615de8a5e9e255380a8).
- One year later `JDIType` refactoring happened where `JDIType` extended `JDIDebugElement` [see this commit](https://github.com/eclipse-jdt/eclipse.jdt.debug/commit/5bf8bceedbe99adff3f26563f55acd215ac7578c) but the method was already there and nobody noticed the small difference.

What we learn: copy/paste is root of all evil.

I will provide a patch.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/192/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/198,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/198,eclipse.jdt.debug,1621028856,198,"Add ""Enable All"" to context menu of Breakpoints view",trancexpress,24752155,Simeon Andreev,,CLOSED,2023-03-12T19:43:51Z,2024-09-12T08:47:17Z,"The Breakpoints view has a ""Disable All"" entry in its context menu, which is very convenient when working with a lot of breakpoints. But its missing an ""Enable All"" entry:

![breakpoints_view_context_menu](https://user-images.githubusercontent.com/24752155/224569134-83967a7f-6b69-42d8-85ff-4960974f59cf.png)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/198/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/198,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5XX6bL,eclipse.jdt.debug,1465886411,198,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2023-03-13T10:31:45Z,2023-03-13T10:31:45Z,"Common usage is to enable/disable  ""Skip Breakpoints""  but we can add here also if it helps.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5XX6bL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/198,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5XX7aJ,eclipse.jdt.debug,1465890441,198,NA,trancexpress,24752155,Simeon Andreev,,NA,2023-03-13T10:34:47Z,2023-03-13T10:34:47Z,"> Common usage is to enable/disable ""Skip Breakpoints"" but we can add here also if it helps.

My use case is, have 15-20 breakpoints and most of the time care only about 2-3 breakpoints. From time to time, enable all breakpoints, debug some and then disable most of the breakpoints again.

Disabling is simple due to the disable all menu entry. Enabling is a lot of clicking in comparison.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5XX7aJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/198,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Lztu4,eclipse.jdt.debug,2345589688,198,NA,SougandhS,177713286,Sougandh S,,NA,2024-09-12T08:24:31Z,2024-09-12T08:24:31Z,"Hi @trancexpress .Feature is now added. kindly close the ticket, Thank you
https://github.com/eclipse-platform/eclipse.platform/pull/1533","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Lztu4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/198,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Lz-Bl,eclipse.jdt.debug,2345656421,198,NA,trancexpress,24752155,Simeon Andreev,,NA,2024-09-12T08:47:15Z,2024-09-12T08:47:15Z,Thank you @SougandhS !,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Lz-Bl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/200,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/200,eclipse.jdt.debug,1624825954,200,[20] Bump up versions for JDT Debug,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,CLOSED,2023-03-15T06:12:23Z,2023-03-15T10:51:08Z,JDT Debug plugin versions needs to be bumped up,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/200/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/202,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/202,eclipse.jdt.debug,1629052538,202,VMInstallTests.testLibraryResolver3 fails with ConcurrentModificationException,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2023-03-17T10:15:46Z,2023-07-14T07:03:40Z,"See https://download.eclipse.org/eclipse/downloads/drops4/I20230316-1800/testresults/html/org.eclipse.jdt.debug.tests_ep428I-unit-win32-java17_win32.win32.x86_64_17.html
```
N/Ajava.util.ConcurrentModificationExceptionat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)
at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)
at org.eclipse.jdt.internal.launching.JREContainer$1.removeRuleEntry(JREContainer.java:244)
at org.eclipse.jdt.internal.launching.JREContainer$1.vmRemoved(JREContainer.java:230)
at org.eclipse.jdt.launching.JavaRuntime.fireVMRemoved(JavaRuntime.java:2936)at org.eclipse.jdt.launching.AbstractVMInstallType.disposeVMInstall(AbstractVMInstallType.java:78)
at org.eclipse.jdt.internal.launching.StandardVMType.disposeVMInstall(StandardVMType.java:822)
at org.eclipse.jdt.debug.tests.core.VMInstallTests.testLibraryResolver3(VMInstallTests.java:174) 
```

I haven't looked into code, but that should be easy to fix according to the stack trace.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/202/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/203,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/203,eclipse.jdt.debug,1630807538,203,Compare two strings in debug view,laeubi,1331477,Christoph Läubrich,,CLOSED,2023-03-19T06:43:24Z,2023-07-01T11:16:27Z,"One thing I recently missed was that I have a breakpoint where it stops and I have two strings in the variable view.

It would helpful to select two String variables (of course would also be usefull for List, Map, ... ) and choose from the context menu ""Compare with each other"" and then get a Diff-View","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/203/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/203,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5X8_-l,eclipse.jdt.debug,1475608485,203,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2023-03-20T04:34:23Z,2023-03-20T04:34:23Z,"Variable View is provided by Platform debug, so the basic infrastructure to compare two elements should be provided in Platform, JDT might need to add few things to support complex Data Structure comparisons.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5X8_-l/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/203,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5X9LkC,eclipse.jdt.debug,1475655938,203,NA,laeubi,1331477,Christoph Läubrich,,NA,2023-03-20T05:41:32Z,2023-03-20T05:41:32Z,"Thanks, I now created:
- https://github.com/eclipse-platform/eclipse.platform/issues/531","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5X9LkC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/210,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/210,eclipse.jdt.debug,1638088748,210,Update bundles to Java 17,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2023-03-23T18:32:36Z,2023-03-28T16:14:34Z,"There are many bundles in platform which require now Java 17 and so we have bundles that depend on those but still running with Java 11 settings.

We should change that and bump bundle settings / versions etc.

I plan to provide changes. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/210/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/212,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/212,eclipse.jdt.debug,1638833202,212,SourceLocationTests fail since BETA_JAVA20 merge,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2023-03-24T06:53:23Z,2023-03-24T11:06:36Z,"See https://download.eclipse.org/eclipse/downloads/drops4/I20230323-1800/testresults/html/org.eclipse.jdt.debug.tests_ep428I-unit-cen64-gtk3-java17_linux.gtk.x86_64_17.html

- testNegativeSystemLibrarySourceLocation
- testPositiveSystemLibrarySourceLocation

fail with similar stack traces:

```
Could not find JRE_CONTAINER entry

junit.framework.AssertionFailedError: Could not find JRE_CONTAINER entry
at junit.framework.Assert.fail(Assert.java:57)
at junit.framework.Assert.assertTrue(Assert.java:22)
at junit.framework.Assert.assertNotNull(Assert.java:256)
at junit.framework.TestCase.assertNotNull(TestCase.java:399)
at org.eclipse.jdt.debug.tests.sourcelookup.SourceLocationTests.testNegativeSystemLibrarySourceLocation(SourceLocationTests.java:215)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/212/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/212,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5YWvJT,eclipse.jdt.debug,1482355283,212,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-24T07:12:58Z,2023-03-24T07:12:58Z,"See also https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/213, probably related?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5YWvJT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/212,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5YXLVr,eclipse.jdt.debug,1482470763,212,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-24T09:05:26Z,2023-03-24T09:05:26Z,"> See also #213, probably related?

Nope, this must be a regression from ab8481645dc85775232f1c8cff7dce34e104204f, the fix is trivial, I will push it in a moment.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5YXLVr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/213,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/213,eclipse.jdt.debug,1638851616,213,"""Debug As JUnit test"" is missing",iloveeclipse,964108,Andrey Loskutov,,CLOSED,2023-03-24T07:09:30Z,2023-04-17T16:38:28Z,"Looking at https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/212 I've tried to run SourceLocationTests from IDE but the ""Debug As JUnit test"" entry is simply missing.

Have to bisect where it is coming from, probably either from https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/496. I see it with already with eclipse-SDK-I20230323-0850.

Could be also same root cause as https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/212 .","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/213/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/213,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5YWzAp,eclipse.jdt.debug,1482371113,213,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-24T07:29:44Z,2023-03-24T07:29:44Z,"OK, I see it even before JAVA20 branch merge. Probably regression from https://github.com/eclipse-platform/eclipse.platform.debug/pull/122 ?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5YWzAp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/213,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5YW0jt,eclipse.jdt.debug,1482377453,213,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-24T07:37:39Z,2023-03-24T07:37:39Z,"Using I20230320-1800 no problems: 
![image](https://user-images.githubusercontent.com/964108/227455292-70313086-fadc-47b7-9542-79f5b03c53c6.png)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5YW0jt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/213,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5YXD1s,eclipse.jdt.debug,1482440044,213,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2023-03-24T08:39:57Z,2023-03-24T08:39:57Z,Should be fixed with https://github.com/eclipse-platform/eclipse.platform.debug/pull/125,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5YXD1s/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/213,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5YXN6y,eclipse.jdt.debug,1482481330,213,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-24T09:13:08Z,2023-03-24T09:13:08Z,"> Should be fixed with [eclipse-platform/eclipse.platform.debug#125](https://github.com/eclipse-platform/eclipse.platform.debug/pull/125)

Thanks Mickael.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5YXN6y/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/215,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/215,eclipse.jdt.debug,1639035427,215,"Jenkins build fails, can't find platform bundles",iloveeclipse,964108,Andrey Loskutov,,CLOSED,2023-03-24T09:32:07Z,2023-03-24T11:06:37Z,"I assume that's because of using **Y-builds** from JAVA20 branch?

https://ci.eclipse.org/jdt/job/eclipse.jdt.debug-github/job/PR-214/2/console
```
10:27:52  [INFO] Adding repository http://download.eclipse.org/eclipse/updates/Y-builds
10:27:52  [INFO] Resolving dependencies of MavenProject: org.eclipse.jdt:org.eclipse.jdt.debug:3.20.200-SNAPSHOT @ /home/jenkins/agent/workspace/eclipse.jdt.debug-github_PR-214/org.eclipse.jdt.debug/pom.xml
10:27:52  [INFO] {osgi.os=linux, osgi.ws=gtk, org.eclipse.update.install.features=true, osgi.arch=x86_64}
10:27:52  [ERROR] Cannot resolve project dependencies:
10:27:52  [ERROR]   Software being installed: org.eclipse.jdt.debug 3.20.200.qualifier
10:27:52  [ERROR]   Missing requirement: org.eclipse.jdt.debug 3.20.200.qualifier requires 'osgi.bundle; org.eclipse.core.resources [3.14.0,4.0.0)' but it could not be found
```

I will try to find where it is configured...","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/215/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/216,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/216,eclipse.jdt.debug,1642024176,216,Design/Usage of Conditional Watchpoints,magicwerk,18592562,,,OPEN,2023-03-27T13:07:17Z,2023-03-27T13:07:17Z,"I'm trying to make use of conditional watchpoints for debugging my Java code.
In the snippet below, I created a watchpoint on 
- EvalJavaConditionWatchpoint.str1
- EvalJavaConditionWatchpoint.NestedClass.str2

If I add a conditional expression for str2, auto-completion encourages me to enter something like
- System.out.println(this.str2)
but then fails on running with 
- Conditional breakpoint has compilation error: str2 cannot be resolved or is not a field

If debug the app by having
- System.out.println(this)
for both fields as conditionals, I get

EvalJavaConditionWatchpoint@4cdf35a9
EvalJavaConditionWatchpoint$CallNestedClass@5eb5c224
EvalJavaConditionWatchpoint$CallNestedClass@53e25b76

So it seems the this variable is referencing to the caller instead of the referenced instance where the watchpoint is active.
I suppose this is a bug as also auto-completion proposes a different use of the this variable.
I was also also looking for some documentation about this feature, but was not able to find such - where could I find it?

Thanks,
Thomas

```
public class EvalJavaConditionWatchpoint {

	public static void main(String[] args) {
		new EvalJavaConditionWatchpoint().run();
	}

	void run() {
		str1 = ""abc"";

		new CallNestedClass().run();
		new CallNestedClass().run();
	}

	String str1;

	static class CallNestedClass {
		void run() {
			NestedClass nc = new NestedClass();
			nc.str2 = ""abc"";
		}
	}

	static class NestedClass {
		String str2;
	}
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/216/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/217,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/217,eclipse.jdt.debug,1642361763,217,"org.eclipse.jdt.debug.ui/snippetsupport.jar, if rebuilt, breaks snippet editor",iloveeclipse,964108,Andrey Loskutov,,CLOSED,2023-03-27T15:49:44Z,2023-03-28T14:02:32Z,"As title says, in context of https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/210 I've seen that org.eclipse.jdt.debug.ui/snippetsupport.jar should be rebuilt because related code changed.

So I did.

... And the new jar simply broke JavaSnippetEditor (`Ctrl+3 -> create Java Scrapbook`): the editor can be opened, editing works but no execution / evaluation possible.

I've first assumed my changes were wrong etc, but in fact, recompilation of the `snippetsupport.jar`  (which can be triggering by touching `org.eclipse.jdt.debug.ui/scripts/buildExtraJAR.xml` in the IDE) breaks `JavaSnippetEditor` on master too. 

Actually it doesn't work since 205c5a0c1fcd1d7b72a0af85c79632f7b522d90a, more precisely, [since this change](https://github.com/eclipse-jdt/eclipse.jdt.debug/blame/205c5a0c1fcd1d7b72a0af85c79632f7b522d90a/org.eclipse.jdt.debug.ui/Snippet%20Support/org/eclipse/jdt/internal/debug/ui/snippeteditor/ScrapbookMain1.java#LL4C11-L4C11).

The problem is coming from this line: https://github.com/eclipse-jdt/eclipse.jdt.debug/blob/205c5a0c1fcd1d7b72a0af85c79632f7b522d90a/org.eclipse.jdt.debug.ui/ui/org/eclipse/jdt/internal/debug/ui/snippeteditor/JavaSnippetEditor.java#L1117

where the debugger expects a frame with dedicated line number of the **last line** in the  `ScrapbookMain1.eval()` method...
Well, after updating license info the line changed, condition doesn't match and evaluation doesn't works anymore.

This was undetected because there was no rebuild of the org.eclipse.jdt.debug.ui/snippetsupport.jar **since 8 years**!
Last time this file was generated & pushed to git via 051fce25278ddaccf5c402484bf105ce2a390160.

I plan to provide a patch for this issue.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/217/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/219,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/219,eclipse.jdt.debug,1643121109,219,[21] JEP 444: Virtual Threads,mpalat,4507939,Manoj  N Palat,manoj.palat@in.ibm.com,CLOSED,2023-03-28T03:03:58Z,2023-08-23T07:59:55Z,"Ref: https://github.com/eclipse-jdt/eclipse.jdt.core/issues/915
Investigate whether Virtual Threads needs changes in jdt.debug.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/219/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/219,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ZJfk8,eclipse.jdt.debug,1495660860,219,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2023-04-04T09:40:45Z,2023-04-04T09:40:45Z,"I just tried using Virtual Threads (over Java 19 though) and I think one issue is that virtual threads are treated as system and thus hidden by default. I would expect those to be visible like regular threads.
Here is the code I used

```java
import java.time.Duration;

public class c {

	public static void main(String[] args) throws InterruptedException {
		Thread t = Thread.startVirtualThread(() -> {
			try {
				Thread.sleep(Duration.ofMinutes(1));
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		});
		t.setName(""virtual thread"");
		t.join();
	}
}
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ZJfk8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/219,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ZJiaU,eclipse.jdt.debug,1495672468,219,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-04-04T09:49:24Z,2023-04-04T09:49:24Z,"So we will allow to show few billions threads by default?

See also
- https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/38
- https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/76

@SarikaSinha: what was the state of the discussion, how do we want virtual threads to be displayed?

Any limits we might want? Because SWT will surely explode with anything over 5.000 - 10.000 threads.

@trancexpress : FYI.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ZJiaU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/219,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ZJkMb,eclipse.jdt.debug,1495679771,219,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2023-04-04T09:54:57Z,2023-04-04T09:54:57Z,"I'm not suggesting to show system threads by default, but isn't there a way to distinguish between ""user"" virtual threads and ""system"" ones?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ZJkMb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/219,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ZJktl,eclipse.jdt.debug,1495681893,219,NA,trancexpress,24752155,Simeon Andreev,,NA,2023-04-04T09:56:36Z,2023-04-04T09:56:36Z,"> @trancexpress : FYI.

There is the filter for suspended threads, that doesn't work properly. It shows some of the inconsistent displayed thread state bugs that  we have fixed previously (but without the filter in use). Maybe it would help, if it worked.

Though I guess a breakpoint can halt thousands of threads too, then the view will likely explode as it would without the filter.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ZJktl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/219,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ZKdZv,eclipse.jdt.debug,1495914095,219,NA,testforstephen,14052197,Jinbo Wang,,NA,2023-04-04T12:47:59Z,2023-04-04T12:47:59Z,"By default, the current strategy does not show all the running virtual threads, as they could number in the millions. However, it does display the suspended virtual threads (which are usually limited by the CPU cores) in the threads view. I think this is a reasonable approach.

For thread name, we show it as ""**System Thread [virtual thread]**"". This might cause some confusion, an alternative option could be ""**Virtual Thread [#name or #id]**"".
![image](https://user-images.githubusercontent.com/14052197/229793298-2f7218fa-6592-4542-a3a5-7e2266dda8b3.png)



","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ZKdZv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/219,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ZLvCL,eclipse.jdt.debug,1496248459,219,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-04-04T16:12:16Z,2023-04-04T16:12:16Z,"@testforstephen : I haven't checked where the ""virtual"" threads are defined as ""system"" threads. Is this coming from JDI or is this something we (Eclipse) add on top?

> an alternative option could be ""Virtual Thread [#name or #id]"".

This sounds better. Would you please provide a PR for that?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ZLvCL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/219,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ZUrjU,eclipse.jdt.debug,1498593492,219,NA,testforstephen,14052197,Jinbo Wang,,NA,2023-04-06T07:07:27Z,2023-04-06T07:07:27Z,"> I haven't checked where the ""virtual"" threads are defined as ""system"" threads. Is this coming from JDI or is this something we (Eclipse) add on top?

@iloveeclipse System thread is a concept defined by Eclipse, not from JDI.

> This sounds better. Would you please provide a PR for that?

Ok, I can take a look.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ZUrjU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/219,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ZWBvS,eclipse.jdt.debug,1498946514,219,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2023-04-06T11:56:12Z,2023-04-06T11:56:12Z,"We did not have any concrete decision/discussion on what we want to show. We cannot show all Virtual threads is obvious. Even for a category like suspended or ""Platform"" or some other in future it might be huge. 
We need to have some provision of pagination for the available threads we want to show or system need to be smart to get the whole no of threads and show only if it is less than ""some number""( if pagination is not there).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ZWBvS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/219,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5km19h,eclipse.jdt.debug,1687904097,219,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2023-08-22T10:15:14Z,2023-08-22T10:15:14Z,"@testforstephen 
Are you planning to work on this for Java 21 Release?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5km19h/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/219,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ksg-d,eclipse.jdt.debug,1689391005,219,NA,testforstephen,14052197,Jinbo Wang,,NA,2023-08-23T07:00:48Z,2023-08-23T07:00:48Z,"From the JDI perspective, there is nothing more to do for JEP 444. 

I suggest we open a new issue to discuss the UX issue about how to present the virtual threads in Eclipse Debug view. And should we just hide all virtual threads by default before we get a conclusion on how to show them?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ksg-d/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/219,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ks0UW,eclipse.jdt.debug,1689470230,219,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2023-08-23T07:56:26Z,2023-08-23T07:56:26Z,"> By default, the current strategy does not show all the running virtual threads, as they could number in the millions. However, it does display the suspended virtual threads

Agreed, Created https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/296.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ks0UW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/221,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/221,eclipse.jdt.debug,1643654686,221,VMDisconnectedException in EventDispatcher.enableGCForExceptionEvent(),trancexpress,24752155,Simeon Andreev,,CLOSED,2023-03-28T10:30:07Z,2023-03-28T13:19:27Z,"We encountered this exception during our ARTs:

```
!ENTRY org.eclipse.jdt.debug 4 125 2023-03-23 08:59:50.103
!MESSAGE Failed to enable GC for event: ExceptionEvent: 30
!STACK 0
com.sun.jdi.VMDisconnectedException: Got IOException from Virtual Machine
	at org.eclipse.jdi.internal.connect.PacketSendManager.sendPacket(PacketSendManager.java:93)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:190)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:230)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:246)
	at org.eclipse.jdi.internal.ObjectReferenceImpl.enableCollection(ObjectReferenceImpl.java:117)
	at org.eclipse.jdi.internal.event.ExceptionEventImpl.enableExceptionGC(ExceptionEventImpl.java:92)
	at org.eclipse.jdt.internal.debug.core.EventDispatcher.enableGCForExceptionEvent(EventDispatcher.java:430)
	at org.eclipse.jdt.internal.debug.core.EventDispatcher.dispatch(EventDispatcher.java:162)
	at org.eclipse.jdt.internal.debug.core.EventDispatcher.run(EventDispatcher.java:318)
	at java.base/java.lang.Thread.run(Thread.java:833)
```

This is coming from https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/168, which fixes https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/167.

The added `finally` is not covered by the existing `catch` and so the `VMDisconnectedException` is not handled as expected.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/221/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/224,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/224,eclipse.jdt.debug,1644278539,224,Update org.eclipse.jdt.launching.javaagent to use ASM 9.5,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2023-03-28T16:16:24Z,2023-04-25T11:19:12Z,"See https://github.com/eclipse-platform/eclipse.platform.releng.aggregator/pull/993

We can update org.eclipse.jdt.launching.javaagent to use ASM 9.5.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/224/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/224,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ak8aP,eclipse.jdt.debug,1519634063,224,NA,subyssurendran666,117082823,Suby S Surendran,suby.surendran@ibm.com,NA,2023-04-24T08:39:39Z,2023-04-24T08:39:39Z,PR: https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/243,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ak8aP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/225,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/225,eclipse.jdt.debug,1645129097,225,SyntheticVariableTests randomly failing in mac,Shee43,122248524,Sheena,,OPEN,2023-03-29T06:39:20Z,2023-03-29T06:47:52Z,"This Unit Test was failing in [I20230326-1800](https://download.eclipse.org/eclipse/downloads/drops4/I20230326-1800/) Integration Build  but was not reproducible locally.

<img width=""1728"" alt=""image"" src=""https://user-images.githubusercontent.com/122248524/228442607-c5b6463e-9b1f-465e-91b9-e7abf660d426.png"">

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/225/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/225,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5YsZFy,eclipse.jdt.debug,1488032114,225,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-29T06:47:12Z,2023-03-29T06:47:12Z,"@Shee43 : just a hint: better is to copy/paste **text** with the stack trace that can be pasted into SDK console.
```
Evaluation of 'predicate' should not have exception : null

junit.framework.AssertionFailedError: Evaluation of 'predicate' should not have exception : null
at junit.framework.Assert.fail(Assert.java:57)
at junit.framework.Assert.assertTrue(Assert.java:22)
at junit.framework.Assert.assertNull(Assert.java:277)
at junit.framework.TestCase.assertNull(TestCase.java:418)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.doEval(AbstractDebugTest.java:2793)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.doEval(AbstractDebugTest.java:2756)
at org.eclipse.jdt.debug.tests.eval.SyntheticVariableTests.testEvaluateMethodParameter_DeepInTwoNestedClasses(SyntheticVariableTests.java:90)
```

Note: this test is OK on recent builds, means it is an unstable test.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5YsZFy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/227,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/227,eclipse.jdt.debug,1648313398,227,hotswap crashes JVM (bad stackmap),trancexpress,24752155,Simeon Andreev,,CLOSED,2023-03-29T11:51:21Z,2023-08-14T14:47:27Z,"See: https://bugs.eclipse.org/bugs/show_bug.cgi?id=565537

To reproduce, debug the snippet below with breakpoint at the only `println()` (line 23). Then change the string in the line above from `""ab""` to `""abc""` and save the file.

Crash:  [hs_err_pid148440.log](https://github.com/eclipse-jdt/eclipse.jdt.core/files/11100678/hs_err_pid148440.log)

```
#
# A fatal error has been detected by the Java Runtime Environment:
#
#  Internal Error (/data/git/jdk/jdk17u/src/hotspot/share/oops/generateOopMap.cpp:2165), pid=148440, tid=148458
#  fatal error: Illegal class file encountered. Try running with -Xverify:all in method setText
#
# JRE version: OpenJDK Runtime Environment (17.0.7) (slowdebug build 17.0.7-internal+0-adhoc.sandreev.jdk17u)
# Java VM: OpenJDK 64-Bit Server VM (slowdebug 17.0.7-internal+0-adhoc.sandreev.jdk17u, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)
# Problematic frame:
# V  [libjvm.so+0xa9e82b]  GenerateOopMap::error_work(char const*, __va_list_tag*)+0x125
#
# Core dump will be written. Default location: Core dumps may be processed with ""/usr/lib/systemd/systemd-coredump %P %u %g %s %t %c %h"" (or dumping to /data/workspaces/runtime-Eclipse/TestBug565537/core.148440)
#
# If you would like to submit a bug report, please visit:
#   https://bugreport.java.com/bugreport/crash.jsp
#

---------------  S U M M A R Y ------------

Command Line: -XX:+ShowCodeDetailsInExceptionMessages -agentlib:jdwp=transport=dt_socket,suspend=y,address=localhost:45451 -javaagent:/data/workspaces/contributor_workspace/.metadata/.plugins/org.eclipse.pde.core/Eclipse/org.eclipse.osgi/246/0/.cp/lib/javaagent-shaded.jar -Dfile.encoding=UTF-8 EclipseHotswapCrash

Host: hotride, AMD Ryzen 9 5950X 16-Core Processor, 32 cores, 31G, Arch Linux
Time: Wed Mar 29 15:09:44 2023 EEST elapsed time: 6.348149 seconds (0d 0h 0m 6s)

---------------  T H R E A D  ---------------

Current thread (0x00007f1fd8214bb0):  VMThread ""VM Thread"" [stack: 0x00007f1f9ed1d000,0x00007f1f9ee1d000] [id=148458]

Stack: [0x00007f1f9ed1d000,0x00007f1f9ee1d000],  sp=0x00007f1f9ee1ac30,  free space=1015k
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
V  [libjvm.so+0xa9e82b]  GenerateOopMap::error_work(char const*, __va_list_tag*)+0x125
V  [libjvm.so+0xa9e92c]  GenerateOopMap::report_error(char const*, ...)+0xa6
V  [libjvm.so+0xa9e9a7]  GenerateOopMap::verify_error(char const*, ...)+0x77
V  [libjvm.so+0xa9a8ed]  GenerateOopMap::init_basic_blocks()+0x243
V  [libjvm.so+0xa9a630]  GenerateOopMap::do_interpretation()+0xb8
V  [libjvm.so+0xa9e678]  GenerateOopMap::compute_map(Thread*)+0x4be
V  [libjvm.so+0x103d106]  OopMapForCacheEntry::compute_map(Thread*)+0xfe
V  [libjvm.so+0x103dd39]  OopMapCacheEntry::fill(methodHandle const&, int)+0xdd
V  [libjvm.so+0x103ebed]  OopMapCache::compute_one_oop_map(methodHandle const&, int, InterpreterOopMap*)+0x4d
V  [libjvm.so+0xf99f24]  Method::mask_for(int, InterpreterOopMap*)+0x78
V  [libjvm.so+0x13c296d]  interpretedVFrame::stack_data(bool) const+0x77
V  [libjvm.so+0x13c28d3]  interpretedVFrame::locals() const+0x1d
V  [libjvm.so+0xdd9d2d]  VM_GetOrSetLocal::check_slot_type_no_lvt(javaVFrame*)+0xbf
V  [libjvm.so+0xdd9fa2]  VM_GetOrSetLocal::doit()+0x118
V  [libjvm.so+0x13e4031]  VM_Operation::evaluate()+0xe1
V  [libjvm.so+0x14484c4]  VMThread::evaluate_operation(VM_Operation*)+0x62
V  [libjvm.so+0x1448cb9]  VMThread::inner_execute(VM_Operation*)+0x30f
V  [libjvm.so+0x1449065]  VMThread::loop()+0x117
V  [libjvm.so+0x1448062]  VMThread::run()+0xfc
V  [libjvm.so+0x133b207]  Thread::call_run()+0x195
V  [libjvm.so+0x104fc85]  thread_native_entry(Thread*)+0x199
```

```
import java.util.ArrayList;

public class EclipseHotswapCrash {
	static public void main (String[] args) throws Exception {
		BitmapFont font = new BitmapFont();
		GlyphLayout layout = new GlyphLayout();
		Color color = new Color();
		layout.setText(font, ""ab"", 0, 2, color, 100, 0, true, null);
	}

	static public class GlyphLayout {
		static private final Pool<GlyphRun> glyphRunPool = new Pool(GlyphRun.class);
		static private final Pool<Color> colorPool = new Pool(Color.class);
		static private final ArrayList<Color> colorStack = new ArrayList(4);

		public final ArrayList<GlyphRun> runs = new ArrayList(1);
		public float width, height;

		public void setText (BitmapFont font, CharSequence str, int start, int end, Color color, float targetWidth, int halign,
			boolean wrap, String truncate) {

			if (str.equals(""ab"")) //
				System.out.println(); // Set breakpoint here, modify ""ab"" -> ""abc"", save, hotswap crashes.

			ArrayList<GlyphRun> runs = this.runs;
			glyphRunPool.freeAll(runs);
			runs.clear();

			BitmapFontData fontData = font.data;
			if (start == end) { // Empty string.
				width = 0;
				height = fontData.capHeight;
				return;
			}

			if (truncate != null)
				wrap = true; // Ensures truncate code runs, doesn't actually cause wrapping.
			else if (targetWidth <= fontData.spaceXadvance * 3) //
				wrap = false; // Avoid one line per character, which is very inefficient.

			Color nextColor = color;
			boolean markupEnabled = fontData.markupEnabled;
			if (markupEnabled) {
				for (int i = 1, n = colorStack.size(); i < n; i++)
					colorPool.free(colorStack.get(i));
			}

			float x = 0, y = 0, down = fontData.down;
			Glyph lastGlyph = null;
			int runStart = start;
			outer:
			while (true) {
				// Each run is delimited by newline or left square bracket.
				int runEnd = -1;
				boolean newline = false;
				if (start == end) {
				} else {
					switch (str.charAt(start++)) {
					case '\n':
						break;
					case '[':
						break;
					}
				}

				if (runEnd != -1) {
					runEnded:
					if (runEnd != runStart) { // Eg, when a color tag is at text start or a line is ""\n"".
						// Store the run that has ended.
						GlyphRun run = glyphRunPool.obtain();
						run.color.set(color);
						fontData.getGlyphs(run, str, runStart, runEnd, lastGlyph);
						lastGlyph = run.glyphs.get(run.glyphs.size() - 1);
						run.x = x;
						run.y = y;
						if (newline || runEnd == end) adjustLastGlyph(fontData, run);
						runs.add(run);

						int n = run.xAdvances.size();

						// Wrap or truncate.
						ArrayList<Float> xAdvances = run.xAdvances;
						x += xAdvances.get(0) + xAdvances.get(1); // X offset relative to the drawing position + first xAdvance.
						for (int i = 2; i < n; i++) {
							Glyph glyph = run.glyphs.get(i - 1);

							if (truncate != null) {
								// Truncate.
								truncate(fontData, run, targetWidth, truncate, i, glyphRunPool);
								break outer;
							}

							// Wrap.
							int wrapIndex = fontData.getWrapIndex(run.glyphs, i);
							GlyphRun next;
							if (wrapIndex == 0) { // Move entire run to next line.
								next = run;

								// Remove leading whitespace.
								for (int glyphCount = run.glyphs.size(); wrapIndex < glyphCount; wrapIndex++)
									if (!fontData.isWhitespace((char)run.glyphs.get(wrapIndex).id)) break;
								if (wrapIndex > 0) {
									for (int ii = 0; ii < wrapIndex - 1; ii++)
										run.glyphs.remove(0);
									for (int ii = 0; ii < wrapIndex - 1; ii++)
										run.xAdvances.remove(1);
								}
								xAdvances.set(0, -run.glyphs.get(0).xoffset * fontData.scaleX - fontData.padLeft);
							}
						}
					}
				}
			}
		}

		/** @param truncate May be empty string. */
		private void truncate (BitmapFontData fontData, GlyphRun run, float targetWidth, String truncate, int widthIndex,
			Pool<GlyphRun> glyphRunPool) {
		}

		/** Breaks a run into two runs at the specified wrapIndex.
		 * @return May be null if second run is all whitespace. */
		private GlyphRun wrap (BitmapFontData fontData, GlyphRun first, int wrapIndex, int widthIndex) {
			return first;
		}

		/** Adjusts the xadvance of the last glyph to use its width instead of xadvance. */
		private void adjustLastGlyph (BitmapFontData fontData, GlyphRun run) {
			Glyph last = run.glyphs.get(run.glyphs.size() - 1);
			if (last.fixedWidth) return;
			float width = (last.width + last.xoffset) * fontData.scaleX - fontData.padRight;
			run.xAdvances.set(run.xAdvances.size() - 1, width);
		}

	}

	/** Stores glyphs and positions for a piece of text which is a single color and does not span multiple lines.
	 * @author Nathan Sweet */
	public class GlyphRun {
		public ArrayList<Glyph> glyphs = new ArrayList();
		/** Contains glyphs.size+1 entries: First entry is X offset relative to the drawing position. Subsequent entries are the
		 * X advance relative to previous glyph position. Last entry is the width of the last glyph. */
		public ArrayList<Float> xAdvances = new ArrayList();
		public float x, y, width;
		public final Color color = new Color();
	}

	static public class BitmapFont {
		public BitmapFontData data = new BitmapFontData();
	}

	static public class BitmapFontData {
		public float capHeight;
		public int spaceXadvance;
		public boolean markupEnabled;
		public float down;
		public float scaleX = 1;
		public int padRight;
		public int padLeft;
		public float blankLineScale;

		public void getGlyphs (GlyphRun run, CharSequence str, int runStart, int runEnd, Glyph lastGlyph) {
			run.xAdvances.add(1f);
			for (int i = 0, n = str.length(); i < n; i++) {
				run.xAdvances.add(16f);
				run.glyphs.add(new Glyph(str.charAt(i)));
			}
		}

		public int getWrapIndex (ArrayList<Glyph> glyphs, int i) {
			return i;
		}

		public boolean isWhitespace (char id) {
			return false;
		}
	}

	static public class Color {
		public void set (Color color) {
		}
	}

	public static class Glyph {
		public int id;
		public int srcX;
		public int srcY;
		public int width = 16, height = 16;
		public float u, v, u2, v2;
		public int xoffset, yoffset;
		public int xadvance = 16;
		public byte[][] kerning;
		public boolean fixedWidth;

		public Glyph (int id) {
			this.id = id;
		}
	}

	public static class Pool<T> {
		private Class<T> type;

		public Pool (Class<T> type) {
			this.type = type;
		}

		public void freeAll (ArrayList<T> runs) {
		}

		public void free (T color) {
		}

		public T obtain () {
			try {
				return type.newInstance();
			} catch (Exception ex) {
				throw new RuntimeException(ex);
			}
		}
	}
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/227/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/227,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Y3iJh,eclipse.jdt.debug,1490952801,227,NA,trancexpress,24752155,Simeon Andreev,,NA,2023-03-29T20:59:50Z,2023-03-29T20:59:50Z,"Using the `.class` files, which Eclipse produces, in `jdb` doesn't result in a crash when redefining `EclipseHotswapCrash$GlyphLayout` (after change from `""ab""` to `""abc""`)... This is also the only `.class` file that changes between the crashing and not crashing case. I could be doing something slightly differently though, when compared to what Eclipse does with HCR.

I'm also not finding any notable differences between the `StackMapTable` parts of the class files (also when comparing with `javac`). At least the ones found in the output folder. Will have to check what HCR uses and how the redefine is done.

The code in the JDK which results in the crash:
```
Thread 8 ""VM Thread"" hit Breakpoint 2, GenerateOopMap::init_basic_blocks (this=0x7fb65fc294d0) at /data/git/jdk/jdk17u/src/hotspot/share/oops/generateOopMap.cpp:989
989       if (bbNo !=_bb_count) {
(gdb) p bbNo
$1 = 41
(gdb) p _bb_count
$2 = 42
```

If I comment out line 32, there is no crash:
```
				//height = fontData.capHeight;
```

In the code block above, the values are:
```
Thread 8 ""VM Thread"" hit Breakpoint 1, GenerateOopMap::init_basic_blocks (this=0x7f4335ffe4d0) at /data/git/jdk/jdk17u/src/hotspot/share/oops/generateOopMap.cpp:989
989       if (bbNo !=_bb_count) {
(gdb) p bbNo
$1 = 42
(gdb) p _bb_count
$2 = 42
```

Will have to understand what exactly the JVM code is reading, to know what to check in Eclipse code...","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Y3iJh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/227,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Y3iJo,eclipse.jdt.debug,1490952808,227,NA,trancexpress,24752155,Simeon Andreev,,NA,2023-03-30T18:14:53Z,2023-03-30T18:14:53Z,"I tried the following sequence in `jdb`, it seems to be the closest to what Eclipse does:

```
cd .../bin/ # go to the output folder
/usr/lib/jvm/java-17-openjdk/bin/jdb EclipseHotswapCrash
stop at EclipseHotswapCrash$GlyphLayout:23
run
# change ""ab"" to ""abc"" in the source file, save and let auto-build compile it
pop
redefine EclipseHotswapCrash$GlyphLayout EclipseHotswapCrash$GlyphLayout.class
step into # no crash, in Eclipse the crash occurs when this is done
cont
```

I have experimented with adding output, the redefine is done successfully. Eclipse redefines all the classes (outer and inner), but I tried modifying the code to only redefine the actually changed inner class, the crash still occurs in Eclipse.

The redefine is done with the bytes from the `.class` files in the output folder, see `JavaHotCodeReplaceManager.getTypesToBytes()`.

I'm not sure that the compiler is doing something bad here. If it is, its hard to follow what the Eclipse debugger is doing to run into the crash.

The crash occurs when this code is executed, after the `step into` operation:

```
JdwpReplyPacket replyPacket = requestVM(
					JdwpCommandPacket.SF_THIS_OBJECT, outBytes);
```

```
""Worker-40: Label Job"" eclipse-jdt/eclipse.jdt.core#594 prio=5 os_prio=0 cpu=52.71ms elapsed=129.51s tid=0x00007f3224105590 nid=0x1cb83 runnable  [0x00007f31455fe000]
   java.lang.Thread.State: RUNNABLE
        at org.eclipse.jdi.internal.StackFrameImpl.thisObject(StackFrameImpl.java:253)
        at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getUnderlyingThisObject(JDIStackFrame.java:1015)
        - locked <0x000000064f957ef8> (a org.eclipse.jdt.internal.debug.core.model.JDIThread)
        at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getReceivingTypeName(JDIStackFrame.java:1094)
        at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getStackFrameText(JDIModelPresentation.java:1871)
        at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getText(JDIModelPresentation.java:227)
        at org.eclipse.debug.internal.ui.LazyModelPresentation.getText(LazyModelPresentation.java:188)
        at org.eclipse.debug.internal.ui.DelegatingModelPresentation.getText(DelegatingModelPresentation.java:151)
        at org.eclipse.debug.internal.ui.model.elements.DebugElementLabelProvider.getLabel(DebugElementLabelProvider.java:39)
        at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider.getLabel(ElementLabelProvider.java:297)
        at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider.retrieveLabel(ElementLabelProvider.java:200)
        at org.eclipse.jdt.internal.debug.ui.variables.JavaStackFrameLabelProvider.retrieveLabel(JavaStackFrameLabelProvider.java:44)
        at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider$LabelUpdater.run(ElementLabelProvider.java:147)
        at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider$LabelJob.run(ElementLabelProvider.java:74)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
```

This is when the `Debug` view is trying to read the stack frame names. The stack frame in `getText()` shows `<unknown receiving type>` directly after the crash (since `SF_THIS_OBJECT` crashes the JVM, I assume).

With this change in JDT debug code, there is no crash:

```
diff --git a/org.eclipse.jdt.debug/model/org/eclipse/jdt/internal/debug/core/model/JDIStackFrame.java b/org.eclipse.jdt.debug/model/org/eclipse/jdt/internal/debug/core/model/JDIStackFrame.java
index 07751799b..16d82ebc6 100644
--- a/org.eclipse.jdt.debug/model/org/eclipse/jdt/internal/debug/core/model/JDIStackFrame.java
+++ b/org.eclipse.jdt.debug/model/org/eclipse/jdt/internal/debug/core/model/JDIStackFrame.java
@@ -1088,6 +1088,9 @@ public class JDIStackFrame extends JDIDebugElement implements IJavaStackFrame {
        public String getReceivingTypeName() throws DebugException {
                if (fStackFrame == null || fReceivingTypeName == null) {
                        try {
+                               if (true) {
+                                       return JDIDebugModelMessages.JDIStackFrame__unknown_receiving_type__2;
+                               }
                                if (isObsolete()) {
                                        fReceivingTypeName = JDIDebugModelMessages.JDIStackFrame__unknown_receiving_type__2;
                                } else {
```

The code that Eclipse is invoking is: https://docs.oracle.com/javase/7/docs/jdk/api/jpda/jdi/com/sun/jdi/StackFrame.html#thisObject()

I don't know how to simulate a call like this with `jdb`... I tried running different commands in the `jdb` session that access `this`, but there is no crash.

Same crash occurs if I hold the debugger at `JavaHotCodeReplaceManager.redefineTypesJDK()` and replace `EclipseHotswapCrash$GlyphLayout.class` with the `.class` file produced by `javac` (OpenJDK 17). If I comment out line 33 (i.e. no crash), I don't see a problem with replacing the class with `javac` output.

Do we have a JDK bug here?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Y3iJo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/227,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Y3idh,eclipse.jdt.debug,1490954081,227,NA,trancexpress,24752155,Simeon Andreev,,NA,2023-03-30T21:01:37Z,2023-03-30T21:01:37Z,"Moved to JDT debug, I didn't see anything that indicates a compiler bug - other than so far not being able to reproduce with `jdb`.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Y3idh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/227,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Y3vbp,eclipse.jdt.debug,1491007209,227,NA,trancexpress,24752155,Simeon Andreev,,NA,2023-03-30T21:45:45Z,2023-03-30T21:45:45Z,"I can reproduce this also in IntelliJ, using slightly adjusted snippet. I'll report this to OpenJDK maintainers.

[hs_err_pid7064_intellij.log](https://github.com/eclipse-jdt/eclipse.jdt.debug/files/11116413/hs_err_pid7064_intellij.log)
https://user-images.githubusercontent.com/24752155/229045212-dc7ef012-896f-496a-b910-b228a1d63ff7.mp4

Steps in IntelliJ:

1. Debug the snippet with breakpoint at line 25.
2. On the main thread, at the paused stack frame, right-click -> Reset Frame.
3. Change the string at line 22 from `""ab""` to `""abc""`, save.
4. Build, accept reloading classes.
5. Step into.

[hs_err_pid8664_eclipse.log](https://github.com/eclipse-jdt/eclipse.jdt.debug/files/11116462/hs_err_pid8664_eclipse.log)
https://user-images.githubusercontent.com/24752155/229045270-5f8abb3e-0f3a-4bb0-8d86-03520ee325a0.mp4

Steps with Eclipse:

1. Debug the snippet with breakpoint at line 25.
2. Change the string at line 22 from `""ab""` to `""abc""`, save.

Adjusted snippet:

```
import java.util.ArrayList;

public class EclipseHotswapCrash {
	static public void main (String[] args) throws Exception {
		BitmapFont font = new BitmapFont();
		GlyphLayout layout = new GlyphLayout();
		Color color = new Color();
		layout.setText(font, ""ab"", 0, 2, color, 100, 0, true, null);
	}

	static public class GlyphLayout {
		static private final Pool<GlyphRun> glyphRunPool = new Pool(GlyphRun.class);
		static private final Pool<Color> colorPool = new Pool(Color.class);
		static private final ArrayList<Color> colorStack = new ArrayList(4);

		public final ArrayList<GlyphRun> runs = new ArrayList(1);
		public float width, height;

		public void setText (BitmapFont font, CharSequence str, int start, int end, Color color, float targetWidth, int halign,
			boolean wrap, String truncate) {

			String t = ""ab"";
			System.out.println(t);
			if (str.equals(t)) //
				System.out.println(); // Set breakpoint here, modify ""ab"" -> ""abc"", save, hotswap crashes.
			ArrayList<GlyphRun> runs = this.runs;
			glyphRunPool.freeAll(runs);
			runs.clear();

			BitmapFontData fontData = font.data;
			if (start == end) { // Empty string.
				width = 0;
				height = fontData.capHeight;
				return;
			}

			if (truncate != null)
				wrap = true; // Ensures truncate code runs, doesn't actually cause wrapping.
			else if (targetWidth <= fontData.spaceXadvance * 3) //
				wrap = false; // Avoid one line per character, which is very inefficient.

			Color nextColor = color;
			boolean markupEnabled = fontData.markupEnabled;
			if (markupEnabled) {
				for (int i = 1, n = colorStack.size(); i < n; i++)
					colorPool.free(colorStack.get(i));
			}

			float x = 0, y = 0, down = fontData.down;
			Glyph lastGlyph = null;
			int runStart = start;
			outer:
			while (true) {
				// Each run is delimited by newline or left square bracket.
				int runEnd = -1;
				boolean newline = false;
				if (start == end) {
				} else {
					switch (str.charAt(start++)) {
					case '\n':
						break;
					case '[':
						break;
					}
				}

				if (runEnd != -1) {
					runEnded:
					if (runEnd != runStart) { // Eg, when a color tag is at text start or a line is ""\n"".
						// Store the run that has ended.
						GlyphRun run = glyphRunPool.obtain();
						run.color.set(color);
						fontData.getGlyphs(run, str, runStart, runEnd, lastGlyph);
						lastGlyph = run.glyphs.get(run.glyphs.size() - 1);
						run.x = x;
						run.y = y;
						if (newline || runEnd == end) adjustLastGlyph(fontData, run);
						runs.add(run);

						int n = run.xAdvances.size();

						// Wrap or truncate.
						ArrayList<Float> xAdvances = run.xAdvances;
						x += xAdvances.get(0) + xAdvances.get(1); // X offset relative to the drawing position + first xAdvance.
						for (int i = 2; i < n; i++) {
							Glyph glyph = run.glyphs.get(i - 1);

							if (truncate != null) {
								// Truncate.
								truncate(fontData, run, targetWidth, truncate, i, glyphRunPool);
								break outer;
							}

							// Wrap.
							int wrapIndex = fontData.getWrapIndex(run.glyphs, i);
							GlyphRun next;
							if (wrapIndex == 0) { // Move entire run to next line.
								next = run;

								// Remove leading whitespace.
								for (int glyphCount = run.glyphs.size(); wrapIndex < glyphCount; wrapIndex++)
									if (!fontData.isWhitespace((char)run.glyphs.get(wrapIndex).id)) break;
								if (wrapIndex > 0) {
									for (int ii = 0; ii < wrapIndex - 1; ii++)
										run.glyphs.remove(0);
									for (int ii = 0; ii < wrapIndex - 1; ii++)
										run.xAdvances.remove(1);
								}
								xAdvances.set(0, -run.glyphs.get(0).xoffset * fontData.scaleX - fontData.padLeft);
							}
						}
					}
				}
			}
		}

		/** @param truncate May be empty string. */
		private void truncate (BitmapFontData fontData, GlyphRun run, float targetWidth, String truncate, int widthIndex,
			Pool<GlyphRun> glyphRunPool) {
		}

		/** Breaks a run into two runs at the specified wrapIndex.
		 * @return May be null if second run is all whitespace. */
		private GlyphRun wrap (BitmapFontData fontData, GlyphRun first, int wrapIndex, int widthIndex) {
			return first;
		}

		/** Adjusts the xadvance of the last glyph to use its width instead of xadvance. */
		private void adjustLastGlyph (BitmapFontData fontData, GlyphRun run) {
			Glyph last = run.glyphs.get(run.glyphs.size() - 1);
			if (last.fixedWidth) return;
			float width = (last.width + last.xoffset) * fontData.scaleX - fontData.padRight;
			run.xAdvances.set(run.xAdvances.size() - 1, width);
		}

	}

	/** Stores glyphs and positions for a piece of text which is a single color and does not span multiple lines.
	 * @author Nathan Sweet */
	public class GlyphRun {
		public ArrayList<Glyph> glyphs = new ArrayList();
		/** Contains glyphs.size+1 entries: First entry is X offset relative to the drawing position. Subsequent entries are the
		 * X advance relative to previous glyph position. Last entry is the width of the last glyph. */
		public ArrayList<Float> xAdvances = new ArrayList();
		public float x, y, width;
		public final Color color = new Color();
	}

	static public class BitmapFont {
		public BitmapFontData data = new BitmapFontData();
	}

	static public class BitmapFontData {
		public float capHeight;
		public int spaceXadvance;
		public boolean markupEnabled;
		public float down;
		public float scaleX = 1;
		public int padRight;
		public int padLeft;
		public float blankLineScale;

		public void getGlyphs (GlyphRun run, CharSequence str, int runStart, int runEnd, Glyph lastGlyph) {
			run.xAdvances.add(1f);
			for (int i = 0, n = str.length(); i < n; i++) {
				run.xAdvances.add(16f);
				run.glyphs.add(new Glyph(str.charAt(i)));
			}
		}

		public int getWrapIndex (ArrayList<Glyph> glyphs, int i) {
			return i;
		}

		public boolean isWhitespace (char id) {
			return false;
		}
	}

	static public class Color {
		public void set (Color color) {
		}
	}

	public static class Glyph {
		public int id;
		public int srcX;
		public int srcY;
		public int width = 16, height = 16;
		public float u, v, u2, v2;
		public int xoffset, yoffset;
		public int xadvance = 16;
		public byte[][] kerning;
		public boolean fixedWidth;

		public Glyph (int id) {
			this.id = id;
		}
	}

	public static class Pool<T> {
		private Class<T> type;

		public Pool (Class<T> type) {
			this.type = type;
		}

		public void freeAll (ArrayList<T> runs) {
		}

		public void free (T color) {
		}

		public T obtain () {
			try {
				return type.newInstance();
			} catch (Exception ex) {
				throw new RuntimeException(ex);
			}
		}
	}
}
```

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5Y3vbp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/227,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5bWnfY,eclipse.jdt.debug,1532655576,227,NA,trancexpress,24752155,Simeon Andreev,,NA,2023-05-03T08:42:52Z,2023-05-03T08:42:52Z,"https://bugs.openjdk.org/browse/JDK-8307331 was opened.

Since it was determined that the bug is in the JVM, I'll close this issue. If later on it turns out Eclipse needs to do more, I'll re-open.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5bWnfY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/227,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5bdcmh,eclipse.jdt.debug,1534445985,227,NA,trancexpress,24752155,Simeon Andreev,,NA,2023-05-04T09:55:25Z,2023-05-04T09:55:25Z,A PR was opened: https://github.com/openjdk/jdk/pull/13795,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5bdcmh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/227,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5j_BDL,eclipse.jdt.debug,1677463755,227,NA,trancexpress,24752155,Simeon Andreev,,NA,2023-08-14T14:47:27Z,2023-08-14T14:47:27Z,Fixed with OpenJDK 17.0.8.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5j_BDL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/228,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/228,eclipse.jdt.debug,1648715888,228,Make the code common for generating the argument file name,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,CLOSED,2023-03-31T05:55:22Z,2023-04-09T19:24:06Z,"During Analysis of https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/97
Found that the code is duplicated in /org.eclipse.jdt.launching/launching/org/eclipse/jdt/internal/launching/CommandLineShortener.java
and
/org.eclipse.jdt.launching/launching/org/eclipse/jdt/internal/launching/ClasspathShortener.java

We should have the the file name generation logic at one place.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/228/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/230,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/230,eclipse.jdt.debug,1653623599,230,Detect Java installations from standard folders,mickaelistria,469058,Mickael Istria,mistria@redhat.com,CLOSED,2023-04-04T10:35:30Z,2023-06-15T18:50:15Z,"The use-case is the following:
I have Java 19 installed in standard `/usr/lib/jvm/...` directory and am opening Eclipse IDE hoping to work with Java 19. Then Java 19 doesn't work by default, no compatible runtime is found, classpath entry is unbound.
JDT debug could have some pre-defined standard directories to detect Java installations from; according to the OS, similarly to how it is done for web browsers detection.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/230/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/230,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5evvHr,eclipse.jdt.debug,1589572075,230,NA,rgrunber,1417342,Roland Grunberg,,NA,2023-06-13T15:42:38Z,2023-06-13T15:42:38Z,"In vscode-java we use an npm library jdk-utils mainly to try to detect a compatible (Java 17) JRE if we're on a platform where we don't ship our own. https://github.com/Eskibear/node-jdk-utils/blob/main/src/index.ts#L81 . Are there any locations in that logic that might be beneficial to add here also ?

@testforstephen, @fbricon this should be a no-op improvement on our end right ? When build support for m2e/gradle detect the source/target, it seems to be matched with the default JDK (eg. 17) (where we don't set `java.configuration.runtimes`). Might this change handle setting it correctly ?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5evvHr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/230,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ewL_E,eclipse.jdt.debug,1589690308,230,NA,fbricon,148698,Fred Bricon,,NA,2023-06-13T16:55:01Z,2023-06-13T16:55:01Z,"@rgrunber yes jdt.ls will get it for free. 

vscode-java could also ship https://github.com/sidespin/jre-discovery which is a more complete JRE detection solution (extensible, doesn't require restart)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ewL_E/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/234,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/234,eclipse.jdt.debug,1669550100,234,Unable to debug when using mockito-inline,emsouza,1131916,Eduardo Matos de Souza,eduardomatosouza@gmail.com,OPEN,2023-04-15T19:50:00Z,2023-04-15T19:50:00Z,"Original issue by @imro2 : https://github.com/mockito/mockito/issues/2743

I am unable to debug tests when using mockito-inline or mock-maker-inline. The issue was previously reported in https://github.com/mockito/mockito/issues/2082 and marked closed, but I am still experiencing the problem.

I am using:
Windows 10
Eclipse 2020-06
Eclipse Adomptium JDK 11 Hotspot
mockito-inline 3.12.4 also tested with 4.7.0

Sample gradle project to recreate:

```
package MockitoTest;

public class Library {
    public boolean someLibraryMethod() {
        return true;
    }

    public void someOhterLibraryMethod() throws Exception {
       int[] arr = new int[5];
       for(int i = 0; i < 5 ; i++) {
              arr[i] = i;
              if(i==3) {
                    throw new Exception(""Break it!"");
              }
       }
    }
}
```
```
package MockitoTest;

import org.junit.Test;
import org.mockito.Mockito;
import static org.junit.Assert.*;

public class LibraryTest {
    @Test public void testSomeOtherLibraryMethod() throws Exception{
        Library classUnderTest = Mockito.spy(new Library());
        Mockito.doReturn(false).when(classUnderTest).someLibraryMethod();
        try {
                     classUnderTest.someOhterLibraryMethod();
              } catch (Exception e) {
                     e.printStackTrace();
                     throw e;
              }
        assertFalse(""someLibraryMethod should return 'false'"", classUnderTest.someLibraryMethod());
    }
}
```
```
plugins {
    id 'java-library'
}
repositories {
    jcenter()
}
dependencies {
    api 'org.apache.commons:commons-math3:3.6.1'
    implementation 'com.google.guava:guava:28.2-jre'
    testImplementation 'junit:junit:4.12'
    testImplementation ""org.mockito:mockito-inline:3.12.4""
}
```
I can place breakpoint anywhere in the tested class and it is being ignored. When I step in from the test class, the IDE shows com.sun.jdi.InternalException: Got error code in reply:35 occurred retrieving 'this' from stack frame. I can then do some stepping, but it does not move in the way expected and even loses position. I am not able to inspect any variables.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/234/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/239,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/239,eclipse.jdt.debug,1676081309,239,SyntheticVariableTests.testCompleteMethodParameter_DeepInTwoNestedClasses() fails since I20230419-0150,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2023-04-20T06:28:11Z,2023-04-20T16:32:39Z,"https://download.eclipse.org/eclipse/downloads/drops4/I20230419-0150/testresults/html/org.eclipse.jdt.debug.tests_ep428I-unit-win32-java17_win32.win32.x86_64_17.html

**Error reported to the log:**

```
!ENTRY org.eclipse.jdt.ui 4 0 2023-04-20 08:24:36.272
!MESSAGE Exception when processing proposal for: foo
!STACK 0
java.lang.IllegalArgumentException: ""L;"" at 0
	at org.eclipse.jdt.core.Signature.newIllegalArgumentException(Signature.java:3017)
	at org.eclipse.jdt.core.Signature.appendClassTypeSignature(Signature.java:608)
	at org.eclipse.jdt.core.Signature.appendTypeSignature(Signature.java:931)
	at org.eclipse.jdt.core.Signature.appendTypeSignature(Signature.java:875)
	at org.eclipse.jdt.core.Signature.toCharArray(Signature.java:2753)
	at org.eclipse.jdt.core.Signature.getSignatureSimpleName(Signature.java:1973)
	at org.eclipse.jdt.ui.text.java.CompletionProposalLabelProvider.createLabelWithTypeAndDeclaration(CompletionProposalLabelProvider.java:493)
	at org.eclipse.jdt.ui.text.java.CompletionProposalLabelProvider.createStyledLabel(CompletionProposalLabelProvider.java:628)
	at org.eclipse.jdt.ui.text.java.CompletionProposalCollector.createFieldProposal(CompletionProposalCollector.java:732)
	at org.eclipse.jdt.ui.text.java.CompletionProposalCollector.createJavaCompletionProposal(CompletionProposalCollector.java:452)
	at org.eclipse.jdt.ui.text.java.CompletionProposalCollector.accept(CompletionProposalCollector.java:285)
	at org.eclipse.jdt.internal.codeassist.CompletionEngine.findFields(CompletionEngine.java:7295)
	at org.eclipse.jdt.internal.codeassist.CompletionEngine.findFields(CompletionEngine.java:7432)
	at org.eclipse.jdt.internal.codeassist.CompletionEngine.findVariablesAndMethods(CompletionEngine.java:13391)
	at org.eclipse.jdt.internal.codeassist.CompletionEngine.completionOnSingleNameReference(CompletionEngine.java:4001)
	at org.eclipse.jdt.internal.codeassist.CompletionEngine.complete(CompletionEngine.java:2017)
	at org.eclipse.jdt.internal.codeassist.CompletionEngine.complete(CompletionEngine.java:2608)
	at org.eclipse.jdt.internal.core.SourceType.codeComplete(SourceType.java:142)
	at org.eclipse.jdt.internal.core.SourceType.codeComplete(SourceType.java:101)
	at org.eclipse.jdt.internal.core.SourceType.codeComplete(SourceType.java:87)
	at org.eclipse.jdt.internal.debug.ui.contentassist.JavaDebugContentAssistProcessor.computeCompletionProposals(JavaDebugContentAssistProcessor.java:164)
	at org.eclipse.jdt.debug.tests.eval.SyntheticVariableTests$2.call(SyntheticVariableTests.java:132)
	at org.eclipse.jdt.debug.tests.eval.SyntheticVariableTests$2.call(SyntheticVariableTests.java:1)
	at org.eclipse.jdt.debug.tests.ui.AbstractDebugUiTests.lambda$6(AbstractDebugUiTests.java:228)
```

**Error reported by test**
```
java.lang.IllegalArgumentException: ""L;"" at 0
	at org.eclipse.jdt.core.Signature.newIllegalArgumentException(Signature.java:3017)
	at org.eclipse.jdt.core.Signature.appendClassTypeSignature(Signature.java:608)
	at org.eclipse.jdt.core.Signature.appendTypeSignature(Signature.java:931)
	at org.eclipse.jdt.core.Signature.appendTypeSignature(Signature.java:875)
	at org.eclipse.jdt.core.Signature.toCharArray(Signature.java:2753)
	at org.eclipse.jdt.internal.ui.text.java.LazyJavaTypeCompletionProposal.getQualifiedTypeName(LazyJavaTypeCompletionProposal.java:78)
	at org.eclipse.jdt.internal.ui.text.java.LazyJavaTypeCompletionProposal.computeRelevance(LazyJavaTypeCompletionProposal.java:398)
	at org.eclipse.jdt.internal.ui.text.java.LazyJavaCompletionProposal.getRelevance(LazyJavaCompletionProposal.java:384)
	at org.eclipse.jdt.ui.text.java.CompletionProposalComparator.getRelevance(CompletionProposalComparator.java:85)
	at org.eclipse.jdt.ui.text.java.CompletionProposalComparator.compare(CompletionProposalComparator.java:61)
	at org.eclipse.jdt.ui.text.java.CompletionProposalComparator.compare(CompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.binarySort(TimSort.java:296)
	at java.base/java.util.TimSort.sort(TimSort.java:239)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.jdt.internal.debug.ui.contentassist.JavaDebugContentAssistProcessor.order(JavaDebugContentAssistProcessor.java:202)
	at org.eclipse.jdt.internal.debug.ui.contentassist.JavaDebugContentAssistProcessor.computeCompletionProposals(JavaDebugContentAssistProcessor.java:187)
	at org.eclipse.jdt.debug.tests.eval.SyntheticVariableTests$2.call(SyntheticVariableTests.java:132)
	at org.eclipse.jdt.debug.tests.eval.SyntheticVariableTests$2.call(SyntheticVariableTests.java:1)
	at org.eclipse.jdt.debug.tests.ui.AbstractDebugUiTests.lambda$6(AbstractDebugUiTests.java:228)
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/239/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/239,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5aWRZh,eclipse.jdt.debug,1515787873,239,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-04-20T06:37:18Z,2023-04-20T06:37:18Z,"@jjohnstn : this is a regression or side effect of https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/535.

Reverting https://github.com/eclipse-jdt/eclipse.jdt.ui/commit/96ad55c9cf34bf03e6964ef36282c3430236c1af fixes the test.

Note: for proper execution, debugger tests in the IDE should be executed in NON-UI thread.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5aWRZh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/239,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5aWgjs,eclipse.jdt.debug,1515849964,239,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-04-20T07:26:55Z,2023-04-20T07:26:55Z,"@gayanper : looking at 
- https://bugs.eclipse.org/bugs/show_bug.cgi?id=562795
- https://github.com/eclipse-jdt/eclipse.jdt.debug/blob/9b0b5920248b238b29732eb56ea1b1b0ba42edb9/org.eclipse.jdt.debug.tests/testresources/synthetic/src/SyntheticTest.java#L31
- https://github.com/eclipse-jdt/eclipse.jdt.debug/blob/9b0b5920248b238b29732eb56ea1b1b0ba42edb9/org.eclipse.jdt.debug.tests/tests/org/eclipse/jdt/debug/tests/eval/SyntheticVariableTests.java#L111

I'm not sure what exactly the test should do with proposal on `"" ""` ?
If I import test resources in a project and try to do a ""usual"" completion at same line, I **do** see the `predicate` variable proposed on a new line: 
![image](https://user-images.githubusercontent.com/964108/233291718-34cf5ba6-1f25-492c-9dd0-54ee35ede5f6.png)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5aWgjs/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/239,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5aZZsH,eclipse.jdt.debug,1516608263,239,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-04-20T16:17:34Z,2023-04-20T16:17:34Z,@iloveeclipse I have a fix.  The isFiltered() call I removed in the mentioned PR also calls getDeclaredType() which when added back allows the test to run successfully.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5aZZsH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/240,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/240,eclipse.jdt.debug,1676224985,240,"""Show Commandline"" leaks vmargs file",diti0023,130975899,Diethard Ohrt,,CLOSED,2023-04-20T08:08:02Z,2023-07-01T11:17:33Z,"This is a copy of https://github.com/eclipse-platform/eclipse.platform/issues/537
Summary: Open ""Show Commandline"" for a project's launch configuration with a large class/module path; this results in a file containing the classpath, which is then used as parameter like @/home/.../.temp-Main--module-path-arg-1681976925916.txt. After closing the dialog this file remains.

A solution could be to store these files in another location, not in the workspace. Any other approach will most likely result in interface changes.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/240/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/244,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/244,eclipse.jdt.debug,1690092131,244,"Unable to find location of java.lang.Thread.setName() in debuggee JVM, for type java.lang.Thread",schipplock,49938,Andreas Schipplock,,CLOSED,2023-04-30T21:31:56Z,2023-05-01T21:41:23Z,"Dear JDT developers,
I can't debug my remote java application anymore.

**Here is my debug configuration in eclipse:**

<img width=""174"" alt=""remote1"" src=""https://user-images.githubusercontent.com/49938/235376016-a82b6ab2-511e-49d5-a831-702245ee0fc3.png"">

**I am starting my remote java application with:**

```
-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=0.0.0.0:8000
```

**I can see the typical log entry indicating the vm is picking this up:**

```
Listening for transport dt_socket at address: 8000
```

I tried to remote debug with intellij and vs code, both can connect just fine (but lack other features important to me).

**What happens when I click on ""remote debug"" in eclipse (1st click):**

<img width=""206"" alt=""remote2"" src=""https://user-images.githubusercontent.com/49938/235376230-70746c5c-be06-43b3-876c-7abed6afdd97.png"">

**I will get a workspace log:**

```
eclipse.buildId=4.27.0.20230309-1200
java.version=17.0.7
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=de_DE
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

org.eclipse.jdt.debug
Warning
Sun Apr 30 23:06:36 CEST 2023
Unable to find location of java.lang.Thread.setName() in debuggee JVM, for type java.lang.Thread
```

**What happens when I click ""remote debug"" in eclipse (2nd click):**

<img width=""307"" alt=""remote3"" src=""https://user-images.githubusercontent.com/49938/235376382-91715e2f-8076-408b-af24-2022a0fbb5f8.png"">

**An additional workspace log entry will be created:**

```
eclipse.buildId=4.27.0.20230309-1200
java.version=17.0.7
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=de_DE
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

org.eclipse.jdt.launching
Error
Sun Apr 30 23:09:42 CEST 2023
Failed to connect to remote VM

com.sun.jdi.connect.spi.ClosedConnectionException
	at org.eclipse.jdi.internal.connect.SocketTransportService.readHandshake(SocketTransportService.java:225)
	at org.eclipse.jdi.internal.connect.SocketTransportService$3.run(SocketTransportService.java:185)
	at java.base/java.lang.Thread.run(Thread.java:833)

```

I'm using Eclipse IDE 2023-03 (4.27) for Enterprise Java and Web.
JDT Version: Version: 3.19.0.v20230302-0300, Build id: I20230302-0300.

**My eclipse.ini is unmodified. Eclipse is using the following vm to start:**

```
-vm
plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_17.0.7.v20230425-1502/jre/bin
```

**My list of installed JREs:**

<img width=""504"" alt=""remote4"" src=""https://user-images.githubusercontent.com/49938/235376785-8e063ab1-8de5-4ab4-a5ac-3a62adde2576.png"">

I'm running Windows 11 Pro and using Oracles JDK 11.0.18.
My remote java application is running Ubuntu 22.04, Tomcat 10.1.8 and Temurin JRE 11.0.19_7 (OpenJDK11U-jre_x64_linux_hotspot_11.0.19_7.tar.gz). The remotely deployed web application is compiled using the Oracle JDK 11 on Windows.

I probably missed something obvious, but I can't see it :(.
I'm here to kindly ask for a hint. I'm clueless now :).

Thanks in advance,
Andreas","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/244/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/244,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5bJOXt,eclipse.jdt.debug,1529144813,244,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-04-30T21:37:47Z,2023-04-30T21:37:47Z,Just a guess: try to start your Eclipse **not** with justj **jre** but with a **full** JDK (doesn't matter if from Oracle or Adoptium). ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5bJOXt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/244,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5bNzOt,eclipse.jdt.debug,1530344365,244,NA,schipplock,49938,Andreas Schipplock,,NA,2023-05-01T21:41:23Z,2023-05-01T21:41:23Z,"Hi Andrey,
thank you for taking time helping me.

I removed everything Oracle from my harddrive and installed Temurin 17 JDK, updated to the latest maven (3.9.1) and I'm using the latest maven compiler plugin now (3.11.0). I then replaced Temurin 11 with Temurin 17 in my Tomcat Docker Image and recompiled my project with Java 17.

I am now able to remote debug again :)!

Thank you very much.

Regards,
Andreas","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5bNzOt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/248,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/248,eclipse.jdt.debug,1737622007,248,Potential NPE from ExecutionEnvironment.getCompatibleVMs,mickaelistria,469058,Mickael Istria,mistria@redhat.com,OPEN,2023-06-02T07:33:04Z,2023-11-28T06:10:16Z,"Some tests in m2e CI fail with the following stack
```
org.eclipse.core.runtime.AssertionFailedException: null argument:
	at org.eclipse.core.runtime.Assert.isNotNull(Assert.java:88)
	at org.eclipse.core.runtime.Assert.isNotNull(Assert.java:76)
	at org.eclipse.jdt.internal.launching.CommandLineShortener.<init>(CommandLineShortener.java:81)
	at org.eclipse.jdt.internal.launching.CommandLineShortener.<init>(CommandLineShortener.java:77)
	at org.eclipse.jdt.internal.launching.StandardVMRunner.getCommandLine(StandardVMRunner.java:488)
	at org.eclipse.jdt.internal.launching.StandardVMRunner.run(StandardVMRunner.java:516)
	at org.eclipse.jdt.launching.AbstractVMInstall.evaluateSystemProperties(AbstractVMInstall.java:398)
	at org.eclipse.jdt.internal.launching.environments.ExecutionEnvironmentAnalyzer.isFoundation1_0(ExecutionEnvironmentAnalyzer.java:210)
	at org.eclipse.jdt.internal.launching.environments.ExecutionEnvironmentAnalyzer.analyze(ExecutionEnvironmentAnalyzer.java:124)
	at org.eclipse.jdt.internal.launching.environments.Analyzer.analyze(Analyzer.java:44)
	at org.eclipse.jdt.internal.launching.environments.EnvironmentsManager.analyze(EnvironmentsManager.java:409)
	at org.eclipse.jdt.internal.launching.environments.EnvironmentsManager.initializeCompatibilities(EnvironmentsManager.java:316)
	at org.eclipse.jdt.internal.launching.environments.ExecutionEnvironment.init(ExecutionEnvironment.java:185)
	at org.eclipse.jdt.internal.launching.environments.ExecutionEnvironment.getCompatibleVMs(ExecutionEnvironment.java:209)
	at org.eclipse.m2e.jdt.internal.AbstractJavaProjectConfigurator.getExecutionEnvironment(AbstractJavaProjectConfigurator.java:240)
....
```
The configured VMs are the one available in toolchains.xml (I can't tell whether they're all correct, but yet they were successfully created with this snippet
```java
getVMInstallation(toolchain)
	.filter(f -> standardType.validateInstallLocation(f).isOK())
	.ifPresent(candidate -> {
		if (Arrays.stream(standardType.getVMInstalls()) //
			.map(IVMInstall::getInstallLocation) //
			.filter(Objects::nonNull)
			.noneMatch(install -> isSameCanonicalFile(candidate, install))) {

			VMStandin workingCopy = new VMStandin(standardType, candidate.getAbsolutePath());
			workingCopy.setInstallLocation(candidate);
			String name = candidate.getName();
			int i = 1;
			while (isDuplicateName(name)) {
				name = candidate.getName() + '(' + i++ + ')';
			}
			workingCopy.setName(name);
			workingCopy.convertToRealVM();
		}
	});
```
which seems to be proper usage of the API with the necessary checks for correct behavior.
The expectation here would be that if a VM is successfully created for a given directory with this API, then the errors get handled properly later on and not cause exceptions. Either the VM is not created/validated first, or it's created and it's fine to use.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/248/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/248,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tBxYR,eclipse.jdt.debug,1829180945,248,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2023-11-28T06:10:15Z,2023-11-28T06:10:15Z,"org.eclipse.jdt.internal.launching.CommandLineShortener.getJavaVersion(IVMInstall)
I think we should log some details about vmInstall when it returns null.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tBxYR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/250,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/250,eclipse.jdt.debug,1740158550,250,"Automatically break on Java Applications when entering main, by default",nitind,2684153,Nitin Dahyabhai,thatnitind@gmail.com,OPEN,2023-06-04T05:50:37Z,2023-06-06T18:36:13Z,"I came across https://www.reddit.com/r/eclipse/comments/13zt4ll/debugger_not_working/, and it occurs to me that for new users,
automatically breaking when entering the main method of their designated main class might be a useful behavior to enable by default, as long as it's added after providing a way to turn the behavior off in the Debug preferences.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/250/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/250,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5d6Glj,eclipse.jdt.debug,1575512419,250,NA,trancexpress,24752155,Simeon Andreev,,NA,2023-06-04T10:40:41Z,2023-06-04T10:40:41Z,"For a trivial snippet, sure, a breakpoint at the entry of main makes sense. But if I e.g. debug Eclipse or some test, I don't see what a breakpoint at main will achieve. Most of my workflows don't have the interesting entry point in the main method of the program. So first thing I'd do is turn a preference like this off. Which is also a fine outcome for me - I'm neither for this nor against this.

Even so, IMO a default preference like this requires discussion. Maybe you can link some post that has acquired more user attention? Or list other Java IDEs that break in main by default? Maybe there is a mailing list where this can be brought up, but I'm not sure which one it would be. Anyone on jdt-dev should have seen this issue already.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5d6Glj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/250,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5d-CLs,eclipse.jdt.debug,1576542956,250,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2023-06-05T10:33:44Z,2023-06-05T10:33:44Z,"Default behaviour might be helpful for first time users but for existing users it will come as a surprise and most of them will have to de select it in a new workspace every time. 
Not an easy to understand and differentiate between new/existing users. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5d-CLs/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/250,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5eIbYM,eclipse.jdt.debug,1579267596,250,NA,nitind,2684153,Nitin Dahyabhai,thatnitind@gmail.com,NA,2023-06-06T18:36:13Z,2023-06-06T18:36:13Z,"First time users are the ones I have in mind. Like defaulting to running tasks in the background, it's something trivial
for an experienced user to toggle back, but a complete mystery when onboarding new users.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5eIbYM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/258,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/258,eclipse.jdt.debug,1749262224,258,Random failing MethodEntryRequestTest,jukzi,51790620,Jörg Kubitz,,OPEN,2023-06-09T07:06:36Z,2024-02-19T10:39:55Z,"```
java.lang.Error: Target program was not ready after 10000ms
	at org.eclipse.debug.jdi.tests.AbstractJDITest.waitUntilReady(AbstractJDITest.java:1544)
	at org.eclipse.debug.jdi.tests.AbstractJDITest.triggerAndWait(AbstractJDITest.java:1406)
	at org.eclipse.debug.jdi.tests.AbstractJDITest.triggerAndWait(AbstractJDITest.java:1364)
	at org.eclipse.debug.jdi.tests.MethodEntryRequestTest.testJDIWithClassFilter1(MethodEntryRequestTest.java:108)

```
for example:
https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/223#issuecomment-1486901488
https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/246/checks?check_run_id=14127467091
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/258/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/260,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/260,eclipse.jdt.debug,1752130324,260,Replace use of OPTION_JdtDebugCompileMode with OPTION_IgnoreUnnamedModuleForSplitPackage,trancexpress,24752155,Simeon Andreev,,CLOSED,2023-06-12T07:51:45Z,2024-04-14T10:01:34Z,"See https://github.com/eclipse-jdt/eclipse.jdt.core/issues/445, with https://github.com/eclipse-jdt/eclipse.jdt.core/pull/424 we have a better option to fix https://bugs.eclipse.org/bugs/show_bug.cgi?id=543604. So we should use this option and revert changes in JDT core that cause unexpected side effects.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/260/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/260,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M56aB1Q,eclipse.jdt.debug,2053643600,260,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-04-13T13:14:20Z,2024-04-13T13:14:20Z,"[I learned](https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/309) that `OPTION_IgnoreUnnamedModuleForSplitPackage` is not sufficient for JDT/Debug, because we may be facing a conflict between **two named modules**, which is not covered by the newer option.

I'm improving interpretation of `OPTION_JdtDebugCompileMode` via https://github.com/eclipse-jdt/eclipse.jdt.core/pull/2340 and when that is merged I suggest to revert the change in this issue.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M56aB1Q/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/260,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M56aEIJ,eclipse.jdt.debug,2053653001,260,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-04-13T13:53:19Z,2024-04-13T13:53:19Z," > I'm improving interpretation of OPTION_JdtDebugCompileMode via https://github.com/eclipse-jdt/eclipse.jdt.core/pull/2340 and when that is merged I suggest to revert the change in this issue.

https://github.com/eclipse-jdt/eclipse.jdt.core/pull/2340 has been merged. Ready for revert :)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M56aEIJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/260,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M56bW8P,eclipse.jdt.debug,2053992207,260,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-14T10:01:34Z,2024-04-14T10:01:34Z,"> > I'm improving interpretation of OPTION_JdtDebugCompileMode via [eclipse-jdt/eclipse.jdt.core#2340](https://github.com/eclipse-jdt/eclipse.jdt.core/pull/2340) and when that is merged I suggest to revert the change in this issue.
> 
> [eclipse-jdt/eclipse.jdt.core#2340](https://github.com/eclipse-jdt/eclipse.jdt.core/pull/2340) has been merged. Ready for revert :)

With ""revert"" you mean reverting https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/261 I assume?

I will close this ticket again, as we can't ""revert ticket"" and ""fixing it again"" would be the opposite of what the ticket says.

The right ticket to fix is https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/309","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M56bW8P/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/263,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/263,eclipse.jdt.debug,1754168821,263,Installed JREs -> Search fails when maintained locations do no longer exist,kwin,185025,Konrad Windszus,,OPEN,2023-06-13T06:51:45Z,2023-06-13T06:51:45Z,"When I trigger the ""Search"" from the ""Installed JREs"" preferences page it doesn't work (i.e. won't add newly installed JRE locations) in case the existing list contains orphan locations.
The log exposes something like

```
Could not determine Java version for location /Library/Java/JavaVirtualMachines/temurin-16.jdk/Contents/Home.
```

in that case and no new JREs are added.

I would expect that
1) Newly added JREs are still detected and added to the list
2) Orphan entries are automatically removed from the list","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/263/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/267,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/267,eclipse.jdt.debug,1761157167,267,Launch configurations shows JRT multiple times as source,jukzi,51790620,Jörg Kubitz,,CLOSED,2023-06-14T10:05:40Z,2023-06-17T21:48:48Z,"example:

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/5a6c78e0-786a-429b-baf0-48a276326a90)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/267/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/267,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5fFBVb,eclipse.jdt.debug,1595151707,267,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-06-14T10:06:32Z,2023-06-14T10:06:32Z,@jjohnstn may be related to https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/430,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5fFBVb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/267,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5fFBVm,eclipse.jdt.debug,1595151718,267,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-06-14T21:03:00Z,2023-06-14T21:03:00Z,"@jukzi Probably, I'll take a look.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5fFBVm/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/267,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5fFBVu,eclipse.jdt.debug,1595151726,267,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-06-15T20:43:55Z,2023-06-15T20:43:55Z,"Ok, I have looked at this.  There was a fix in 2017 from Jay so JUnit tests run in Java 9 and higher would find source in JRT modules.   There is special code in JavaSourceLookupUtil.translate() that recognizes a jrt-fs.jar and then calls JavaSourceLookupUtil.getPackageFragmentRootContainers() which checks through all open projects in the workspace getting all roots which reference the jar.  I don't think it would be advisable to change this.  That said, I don't think the label is correct for these modules and have put together a patch to show the module names.  What do you think?

![modulelist](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1216877/08f5aa63-d9d5-4fb2-94fc-f184ff6c6bd2)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5fFBVu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/267,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5fFBV2,eclipse.jdt.debug,1595151734,267,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-06-15T20:49:38Z,2023-06-15T20:49:38Z,looks good.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5fFBV2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/267,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5fFBV-,eclipse.jdt.debug,1595151742,267,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-06-15T20:51:39Z,2023-06-15T20:51:39Z,"> checks through all open projects in the workspace getting all roots which reference the jar

I think it should remove duplicates. i wonder if the duplicate entries could cause a performance problem somewhere.
Your image looks fine.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5fFBV-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/267,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5fFONk,eclipse.jdt.debug,1595204452,267,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-06-16T19:45:18Z,2023-06-16T19:45:18Z,@jukzi Just to confirm there are no duplicates shown in my example and in my testing of various launch configs I have.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5fFONk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/265,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/265,eclipse.jdt.debug,1757860008,265,Detect JVM installs at startup on Mac,mickaelistria,469058,Mickael Istria,mistria@redhat.com,CLOSED,2023-06-15T01:02:04Z,2023-07-24T17:59:32Z,#231 introduces some support or JVM detection; however this might be not fully compatible or not optimized with mac (see https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/231#discussion_r1228697540 ). This ticket is meant to ensure proper integration of the feature with mac.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/265/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/268,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/268,eclipse.jdt.debug,1767266093,268,Detail formatter does not accept arrays or primitives as type,pppardo,51816360,Pepe Pardo,,CLOSED,2023-06-21T10:20:20Z,2025-01-15T11:52:55Z,"You cannot create a formatter for byte arrays or other arrays, such as primitives.

This is an echo of
 https://bugs.eclipse.org/bugs/show_bug.cgi?id=187922","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/268/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/268,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6ZXtQQ,eclipse.jdt.debug,2573128720,268,NA,SougandhS,177713286,Sougandh S,,NA,2025-01-06T13:37:27Z,2025-01-06T13:37:27Z,Will provide enhancement for this 👍 ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6ZXtQQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/548,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/548,eclipse.jdt.debug,2616010836,548,means for m2e to set system properties for some tests,garretwilson,627125,Garret Wilson,,OPEN,2023-06-22T15:37:59Z,2024-10-26T17:13:28Z,"There needs to be a means for m2e to advise the Eclipse IDE testing subsystem of system properties to make available to unit tests when run within the IDE.

Both the [Maven Surefire Plugin](https://maven.apache.org/surefire/maven-surefire-plugin/test-mojo.html#systemPropertyVariables) and the [Maven Failsafe Plugin](https://maven.apache.org/surefire/maven-failsafe-plugin/integration-test-mojo.html#systemPropertyVariables) provide a `<systemPropertyVariables>` as way to configure system properties that will be accessible for unit test and integration tests, respectively. See [Using System Properties](https://maven.apache.org/surefire/maven-surefire-plugin/examples/system-properties.html) for an example.

IntelliJ apparently (see [IDEA-101185](https://youtrack.jetbrains.com/issue/IDEA-101185)) supports `<systemPropertyVariables>` in in-IDE tests.

Unfortunately Eclipse IDE ignore any `<systemPropertyVariables>` properties set in the Maven POM in these plugin configurations. In the discussion in eclipse-m2e/m2e-core#174, I was told that m2e, when in processes a Maven POM, has no way to advise Eclipse of the system properties to be used for in-IDE testing. I was [asked](https://github.com/eclipse-m2e/m2e-core/issues/174#issuecomment-1602842656) to file a ticket here to request this capability. Otherwise, our `<systemPropertyVariables>` properties are ignored in unit/integration tests and according to m2e, they have no way around this.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/548/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/548,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6RakLP,eclipse.jdt.debug,2439660239,548,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-06-22T15:49:48Z,2023-06-22T15:49:48Z,"m2e can provide own launch configuration type (like ""Run as Maven Test"" or something in that direction) and configure there everything based on pom files. Platform itself doesn't know anything about maven.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6RakLP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/548,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6RakLQ,eclipse.jdt.debug,2439660240,548,NA,garretwilson,627125,Garret Wilson,,NA,2023-06-22T15:58:21Z,2023-06-22T15:58:21Z,"> Platform itself doesn't know anything about maven.

Maybe I didn't explain well what is being requested.

I know the Eclipse platform knows nothing about Maven. I am not requesting that the Eclipse platform know anything about Maven. I am requesting that the Eclipse platform provide some means for some other subsystem to pass it system property values to make available when running tests.

Looking at the Eclipse IDE as a whole, when I open Eclipse and run a test _normally_ (without going to some special ""Run as Maven Test"" menu), I expect the classpath to be correctly configured based upon my Maven POM. Does this mean the Eclipse platform knows something about Maven so that it directly retrieves the classpath from the POM? I imagine not; instead, the platform undoubtedly provides some way to configure the classpath, and m2e determines the classpath from Maven and informs the platform of this. (I'm guessing about how it works, but it's not an unreasonable assumption.)

Similarly when I looking at the Eclipse IDE as a whole, when I open Eclipse and run a test _normally_ (without going to some special ""Run as Maven Test"" menu), I expect the system properties that I configured in my Maven POM to be available to the unit/integration tests. (Apparently this works in IntelliJ.) Does this mean I am asking the platform to have knowledge of Maven? No, it means I am requesting that the platform provide _a means for specifying per-project system properties for tests_ (just as it provides a means for specifying the project classpath) so that another module (in this case m2e) can configure those properties accordingly.

m2e tells me they cannot do this because the plaform does not provide them this means. They requested that I file this ticket requesting the platform add that facility.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6RakLQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/548,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6RakLR,eclipse.jdt.debug,2439660241,548,NA,HannesWell,44067969,Hannes Wellmann,,NA,2023-06-22T22:18:37Z,2023-06-22T22:18:37Z,"> m2e can provide own launch configuration type (like ""Run as Maven Test"" or something in that direction) and configure there everything based on pom files. Platform itself doesn't know anything about maven.

That would be possible, but I tend to have sympathy for the suggestion.
In the CI test code in Maven projects will only run with the environment set up by the Maven-pom and is therefore supposed pass with that. And in contrast to for examples PDE's JUnit Plug-in Tests the modifications done by a Maven configuration likely won't have that big impact on the test execution time.
Not needing to think about which kind of Junit Testing/Launch-Config type to choose respectively not needing to tell it your colleagues would make Eclipse in general more convenient to use. Ideally it should be as simple as 'Just execute the tests'.
Adding another JUnit Launch type would just another piece to the Eclipse puzzle.

That being said, it could be implemented without any need to tell platform/JDT anything about Maven by providing some kind of hook that can modify the `LaunchConfigurationWorkingCopy` being created when launching the JUnit tests from the Context menu. The hook could be contributed via an Extension-Point or as an OSGi (Declarative) Service.

It is already possible to be notified about launches being created by registering a `ILaunchConfigurationListener` in the `ILaunchManager` of the Platform, but when notified about a new config the listener only get the immutable LaunchConfig and not a working-copy. But for this there is no need to intercept Launch creation in general, we just need that for JUnit launches.
Maybe the possible ways to influence the created launch config could be limited, for example to only providing extra Program or VM-arguements.
If I read @garretwilson's case in m2e correctly that would at least be sufficient for that case. And since m2e can already influence the jars in the test-runtime atm. Additionally m2e could for example pick a suitable JRE to run the tests, based on the surefire config.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6RakLR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/548,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6RakLS,eclipse.jdt.debug,2439660242,548,NA,HannesWell,44067969,Hannes Wellmann,,NA,2023-08-09T20:50:03Z,2023-08-09T20:50:03Z,"Another use case for this would be in PDE.
In order to be able to run tests in a Plugin-Project as plain `JUnit Test` (without OSGi) PDE adds the Junit-5 launcher jars to the classpath if only the junit-jupiter-api bundle is in the Plugins dependency closure. And although there are non-accassible rules applied to those jars, in some scenarios the jar content seems to be available nevertheless.
A cleaner/less hacky approach would be if PDE could just supply the launcher jars from the Target-Platform when a `JUnit Test` is launched. Using PDE's own `JUnit Plugin Test` launch type is in that case not desired because that would launch an OSGi runtime as well.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6RakLS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/270,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/270,eclipse.jdt.debug,1778151758,270,Records with inner records breaks breakpoint toggling,alienisty,4103676,Alessandro Nistico,,CLOSED,2023-06-28T04:21:49Z,2023-06-29T12:45:37Z,"Given the following record:
```java
public record Test(int a, int b) {

  public void x() {
    return; // <- Toggling a breakpoint here toggles it on TestInner
  }

  public int y() {
    return a + b; // <- Toggling a breakpoint here toggles it on TestInner
  }

  public record TestInner() {
  }

  public int z() {
    return a + b; // <- Toggling a breakpoint here toggles it here as expected
  }
}
```

So it seems that only code above the inner record is affected, while code below the record is not.

Environment: Windows 10
JRE: jdk-17.0.7+7
eclise 4.28","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/270/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/273,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/273,eclipse.jdt.debug,1782485967,273,"Impossible to set a conditional breakpoint in java.io.File(File parent, String child)",RoiSoleil,3462260,Hélios GILLES,helios.gilles@gmail.com,CLOSED,2023-06-30T12:56:20Z,2024-09-24T14:29:08Z,"Impossible to set a conditional breakpoint in java.io.File(File parent, String child)

![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/3462260/cba419b9-6cfd-4289-9d60-a2d24ed062f4)

![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/3462260/202b1c38-3483-4d69-9e82-14a070e00818)

When debugging, i get this message :

![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/3462260/5f0f823c-e7d5-4b79-b8a8-e68043038958)

This is due to 2 answers for ""java.io.File"" in org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForTypeFromModules(ModuleBinding, ModuleBinding[], Function<ModuleBinding, NameEnvironmentAnswer>)

![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/3462260/989b46b8-3591-4913-926f-b8ef4132c573)

So ""java.io.File"" is reported as ambigous","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/273/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/273,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6I-R_U,eclipse.jdt.debug,2298027988,273,NA,SougandhS,177713286,Sougandh S,,NA,2024-08-20T05:58:46Z,2024-08-20T05:58:46Z,@mpalat Could you please assign this ticket to me.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6I-R_U/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/274,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/274,eclipse.jdt.debug,1782637227,274,MethodEntryRequestTest / MethodExitRequestTest fail locally and show wrong test names,iloveeclipse,964108,Andrey Loskutov,,OPEN,2023-06-30T14:32:26Z,2023-06-30T14:32:26Z,"- First of all, MethodEntryRequestTest / MethodExitRequestTest can't be started locally without setup code triggered by AutomatedSuite.
- Wenn finally launched, they show all same test names for different tests - for whatever reason getName() is overridden.
- And if executed, they fails after `testJDIWithClassFilter1` is executed.

This is a nightmare.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/274/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/275,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/275,eclipse.jdt.debug,1784594405,275,Evaluations inside binary method fails when types are part of snippets,gayanper,7471994,Gayan Perera,,OPEN,2023-07-02T11:28:35Z,2023-07-07T17:48:20Z,"Take the following sample project, import it into eclipse and replace the following line
[debug-test.zip](https://github.com/eclipse-jdt/eclipse.jdt.debug/files/11929336/debug-test.zip)

`<systemPath><complete_path>/debug-lib/target/debug-lib-1.0-SNAPSHOT.jar</systemPath>` in the debug-app project to a fully qualified path.

Add a break point in the `Observation` line 16 in the debug-lib project. Then debug the Main class in the debug-app. Once the debug point is hit, perform the following evaluation in the debug shell

`new Observation((Object) subject, (Consumer) action)`

**Actual**

The evaluation fails with a compilation error

**Expectation**

The evaluation should return a new instance of the class.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/275/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/281,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/281,eclipse.jdt.debug,1798718740,281,wrong jvm detected,jukzi,51790620,Jörg Kubitz,,CLOSED,2023-07-11T11:25:54Z,2023-07-13T12:34:19Z,"Whenever i restart eclipse IDE on my Oomphed workspace it adds an JDK 20 as JavaSE-17.
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/51790620/5ccc3240-04f5-493b-a0c5-c2d1d759be0f) 
Even though i have an JDK 17 installed. 
I don't mind if it would just adds other installed JDKs but it It should use the 17 JDK for JavaSE-17 and don't change my configuration!

I don't know if that is an OOmph thing or the new JDK autodetection.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/281/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/281,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hMgPJ,eclipse.jdt.debug,1630667721,281,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-07-11T11:40:07Z,2023-07-11T11:40:07Z,"> I don't know if that is an OOmph thing or the new JDK autodetection.

You can start Eclipse with new workspace and plugin customization file (`eclipse -pluginCustomization /tmp/pluginCustomization.ini`) that contains this line
```
org.eclipse.jdt.launching/detectVMsAtStartup=false
```
If the same problem appears again, it's not the autodetection, but Oomph.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hMgPJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/281,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hYeaf,eclipse.jdt.debug,1633805983,281,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-07-13T08:33:26Z,2023-07-13T08:33:26Z,"@merks this is a problem of OOmph- it autoselects a wrong JDK version by default:
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/51790620/3f0f6c44-72ed-4209-931c-e4d22ba80094)
Workaround: manually select appropriate version:
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/51790620/5f8ba67e-d2ab-41ef-b65a-63adc44e9d1c)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hYeaf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/281,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hYhXQ,eclipse.jdt.debug,1633818064,281,NA,merks,208716,Ed Merks,,NA,2023-07-13T08:41:50Z,2023-07-13T08:41:50Z,"I don't think this was ever ""auto selected"".  The selection is remembered though in Navigate -> Open Setup -> User where you can see things like this:

![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/208716/7eb98e9f-5deb-44d9-80da-56ce3bef40b8)


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hYhXQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/281,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hYihJ,eclipse.jdt.debug,1633822793,281,NA,merks,208716,Ed Merks,,NA,2023-07-13T08:44:55Z,2023-07-13T08:44:55Z,"If you change it, it should be remembered after that.  Also, in performing setup tasks, you can always hit Back and use Show All Variables to see what's set and to be able to change what's set.

![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/208716/6d2e4784-3089-43ae-9435-a2e3fc8de455)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hYihJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/281,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hYpj8,eclipse.jdt.debug,1633851644,281,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-07-13T09:04:30Z,2023-07-13T09:04:30Z,"OK, closing this one as this has nothing with jdt.debug.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hYpj8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/281,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hYuMm,eclipse.jdt.debug,1633870630,281,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-07-13T09:16:01Z,2023-07-13T09:16:01Z,"@merks 
> Navigate -> Open Setup -> User

Here is a Screenshot of the eclipse installation that always switches back to 20:
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/51790620/870278c7-bf60-49ff-b139-3ea28c0ad82b)

what is wrong there?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hYuMm/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/281,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hYzc2,eclipse.jdt.debug,1633892150,281,NA,merks,208716,Ed Merks,,NA,2023-07-13T09:29:25Z,2023-07-13T09:29:25Z,"In that installation if you do Help -> Perform Setup Tasks, press the Back button, and check the Show all variables, what do you see?  If what you see is not what you want, and you change it to what you want, and continue with performing the tasks to completion, does it set it correctly?  If you then repeat the step from the start above, does it show the changed value?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hYzc2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/281,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hY90N,eclipse.jdt.debug,1633934605,281,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-07-13T09:57:05Z,2023-07-13T09:57:05Z,"This is what it did show:
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/51790620/431d1d5a-b126-4284-b000-f9ae899ea10d)
not what i want. - i changed it to:
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/51790620/6c2b5b6e-392f-47e6-9ac9-136555a4a68a)
after that the JDK changed to the JDK i want:
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/51790620/eaf63243-6503-49f5-a762-97de17be73f8)
and the settings are (still) as following:
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/51790620/b2e7fcb3-382d-49e3-96b5-3d3e8db26176)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hY90N/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/281,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hY_kN,eclipse.jdt.debug,1633941773,281,NA,merks,208716,Ed Merks,,NA,2023-07-13T10:01:41Z,2023-07-13T10:01:41Z,"And now if you repeat the steps, the value in the dialog is wrong again?  That value must have been saved somewhere (must be coming from somewhere)....","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hY_kN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/281,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hZBgC,eclipse.jdt.debug,1633949698,281,NA,merks,208716,Ed Merks,,NA,2023-07-13T10:06:58Z,2023-07-13T10:06:58Z,"Note that the one the JRE task sets I expect would look like this:

![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/208716/7dee842c-312a-473b-a09a-62f91146f3b4)

Because the task names it that way:

![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/208716/a4f0467f-9188-4d03-b967-300d4a780ace)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hZBgC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/281,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hZFZx,eclipse.jdt.debug,1633965681,281,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-07-13T10:18:17Z,2023-07-13T10:18:17Z,"Meanwhile i restarted eclipse. While eclipse started the JDK in JDT was set to 20 again (why? can't reproduce). But then OOmph automatically switched it to 17:
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/51790620/5223c5fe-807f-4e33-9e0b-defc6a704d27)
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/51790620/801367e6-b5dc-4d53-91f9-c10d66e1d8e5)

at the moment i can not retry ""Perform Setup Tasks"" because it always fails with.

`No repository found at https://download.eclipse.org/webtools/CI/3.30.0/I-latest/repository.`","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hZFZx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/281,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hZGud,eclipse.jdt.debug,1633971101,281,NA,merks,208716,Ed Merks,,NA,2023-07-13T10:22:28Z,2023-07-13T10:22:28Z,Your picture is showing it being set to the right value and that thing is the default JRE.    What exactly is being set to 20?  The default compliance level?  That might depend on the JRE used to launch the IDE itself?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hZGud/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/281,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hZIA5,eclipse.jdt.debug,1633976377,281,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-07-13T10:26:27Z,2023-07-13T10:26:27Z,"> No repository found at https://download.eclipse.org/webtools/CI/3.30.0/I-latest/repository.

does this need to be updated to 31?
https://github.com/eclipse-platform/eclipse.platform.releng.aggregator/blob/a81631d7f0bccb4770dd3c4253733972fd2afb87/oomph/Platform.setup#L801
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hZIA5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/281,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hZI_z,eclipse.jdt.debug,1633980403,281,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-07-13T10:29:30Z,2023-07-13T10:29:30Z,"This was 20 back then before oomph kicked in:
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/51790620/5c5134d7-1f5d-46c8-82cd-207faad013f6)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hZI_z/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/281,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hZKQY,eclipse.jdt.debug,1633985560,281,NA,merks,208716,Ed Merks,,NA,2023-07-13T10:33:26Z,2023-07-13T10:33:26Z,"Yes, the setup needs updating:

https://github.com/eclipse-platform/eclipse.platform.releng.aggregator/pull/1215","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hZKQY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/281,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hZLqL,eclipse.jdt.debug,1633991307,281,NA,merks,208716,Ed Merks,,NA,2023-07-13T10:37:56Z,2023-07-13T10:37:56Z,"That the variable used to record your chosen/desired JRE for jre.location-17 is global, so if you change it anywhere for any setup, all installations/workspaces will switch to that choice the next time setup tasks are performed.

If you want to change differently for some specific workspace or installation, better copy the variable to Navigate -> Open Setup -> Workspace (or Installation), and change it there to override what's in the user.setup.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hZLqL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/281,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hZ2MP,eclipse.jdt.debug,1634165519,281,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-07-13T12:34:18Z,2023-07-13T12:34:18Z,"I can't reproduce this anymore: I tried with both 17 and 20 as 17+ JRE both  times i ended up with a 17 JDK for  jdt, also after restarting.
Thanks though: i learned something about Oomph today :-)
OOmphing works again.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hZ2MP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/283,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/283,eclipse.jdt.debug,1801627904,283,OutOfMemory in Java Indexing thread when JVM detection is enabled.,rgrunber,1417342,Roland Grunberg,,CLOSED,2023-07-12T19:31:32Z,2024-09-03T12:47:38Z,"First noticed in the quarkus-ls maven builds at https://github.com/redhat-developer/quarkus-ls/actions/runs/5477437137

```
Error: Exception in thread ""Java indexing"" java.lang.OutOfMemoryError: Java heap space
	at jdk.internal.jimage.BasicImageReader.getBufferBytes(BasicImageReader.java:356)
	at jdk.internal.jimage.BasicImageReader.getResource(BasicImageReader.java:412)
	at jdk.internal.jimage.ImageReader$SharedImageReader.getResource(ImageReader.java:569)
	at jdk.internal.jimage.ImageReader.getResource(ImageReader.java:109)
	at jdk.internal.jrtfs.SystemImage$1.getResource(SystemImage.java:69)
	at jdk.internal.jrtfs.JrtFileSystem.getFileContent(JrtFileSystem.java:250)
	at jdk.internal.jrtfs.JrtFileSystem.newByteChannel(JrtFileSystem.java:343)
	at jdk.internal.jrtfs.JrtPath.newByteChannel(JrtPath.java:702)
	at jdk.internal.jrtfs.JrtFileSystemProvider.newByteChannel(JrtFileSystemProvider.java:305)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:380)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:432)
	at java.base/java.nio.file.Files.readAllBytes(Files.java:3288)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.safeReadBytes(JRTUtil.java:323)
	at org.eclipse.jdt.internal.compiler.util.JrtFileSystem.lambda$1(JRTUtil.java:669)
	at org.eclipse.jdt.internal.compiler.util.JrtFileSystem$$Lambda$333/0x0000000801494460.apply(Unknown Source)
	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708)
	at org.eclipse.jdt.internal.compiler.util.JrtFileSystem.getFileBytes(JRTUtil.java:667)
	at org.eclipse.jdt.internal.compiler.util.JrtFileSystem.getClassfileContent(JRTUtil.java:648)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.getClassfileContent(JRTUtil.java:268)
	at org.eclipse.jdt.internal.core.search.indexing.AddJrtToIndex$JrtIndexer.visitFile(AddJrtToIndex.java:140)
	at org.eclipse.jdt.internal.core.search.indexing.AddJrtToIndex$JrtTraverser.visitFile(AddJrtToIndex.java:1)
	at org.eclipse.jdt.internal.compiler.util.JrtFileSystem$2.visitFile(JRTUtil.java:781)
	at org.eclipse.jdt.internal.compiler.util.JrtFileSystem$2.visitFile(JRTUtil.java:1)
	at java.base/java.nio.file.Files.walkFileTree(Files.java:2811)
	at java.base/java.nio.file.Files.walkFileTree(Files.java:2882)
	at org.eclipse.jdt.internal.compiler.util.JrtFileSystem.walkModuleImage(JRTUtil.java:750)
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.walkModuleImage(JRTUtil.java:244)
	at org.eclipse.jdt.internal.core.search.indexing.AddJrtToIndex.execute(AddJrtToIndex.java:267)
	at org.eclipse.jdt.internal.core.search.processing.JobManager.indexerLoop(JobManager.java:514)
	at org.eclipse.jdt.internal.core.search.processing.JobManager$$Lambda$159/0x000000080126a240.run(Unknown Source)
	at java.base/java.lang.Thread.run(Thread.java:833)
```

It's reproducible locally, though in my case I needed to have `java-11-openjdk-headless-11.0.19.0.7-1.fc37.x86_64` package installed. My guess is certain JVMs are not being nicely handled by the JVM detection feature.

```
$ git clone https://github.com/redhat-developer/quarkus-ls.git && cd quarkus-ls && git checkout 3400541
$ cd quarkus.jdt.ext
$ ./mvnw clean verify
```
You can even monitor quarkus.jdt.ext/target/surefire-reports for java.lang.OutOfMemory in the report files.

You'll see various `java.lang.OutOfMemory: Java heap space` exceptions. I tried reproducing this in Eclipse itself but haven't been able to yet. I did notice the behaviour through other clients (ie. vscode-java -> JDT-LS) :

![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/1417342/12d43c34-0c4b-4c03-a655-1f0ab91a4b86)

Known workarounds :
- `-DDetectVMInstallationsJob.disabled=true`
- Any build/commit prior to the JVM detection feature (eg. https://download.eclipse.org/eclipse/downloads/drops4/I20230612-1800/ )

CC @mickaelistria","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/283/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/283,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hVxud,eclipse.jdt.debug,1633098653,283,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-07-12T19:33:32Z,2023-07-12T19:33:32Z,How many VM's were found and how big is the heap?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hVxud/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/283,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hVx_j,eclipse.jdt.debug,1633099747,283,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-07-12T19:34:34Z,2023-07-12T19:34:34Z,Can you create memory dump or just simple memory histogram via jcmd tool?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hVx_j/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/283,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hWCR9,eclipse.jdt.debug,1633166461,283,NA,rgrunber,1417342,Roland Grunberg,,NA,2023-07-12T20:27:04Z,2023-07-12T20:27:04Z,"- I don't see any logging about what JVMs were discovered. Initially I had `java-1.8-openjdk`, `java-11-openjdk`, `java-17-openjdk`, `java-20-openjdk` under `/usr/lib/jvm/` and graalvm-ce-java17-22.0.0.2 under $HOME/.local/ (which I suspect was never found), though I found that I could make the issue disappear completely by just removing java-11-openjdk.

- [XmX512m](https://github.com/redhat-developer/quarkus-ls/blob/340054111fbb91ba1810d1781a2b7412ce749b2f/quarkus.jdt.ext/pom.xml#L19), though I just tried with 4G and the result is the same. VisualVM shows that it doesn't use up the full allocated heap space, but almost as if it runs out well before it can grow the current heap size.

![Screenshot from 2023-07-12 16-12-25](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/1417342/6fe39eaa-be73-4898-976d-0ab939b554fc)

- [jcmd-class-histogram-oom.txt](https://github.com/eclipse-jdt/eclipse.jdt.debug/files/12032611/jcmd-class-histogram-oom.txt)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hWCR9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/283,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hWKBS,eclipse.jdt.debug,1633198162,283,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-07-12T20:50:59Z,2023-07-12T20:50:59Z,"> I could make the issue disappear completely by just removing java-11-openjdk.

Any chance to get this installation as zip or rpm(s) attached? I assume something (broken/cyclic links etc) could lead to adding too much data to index.

Also you could try to start Eclipse and manually add this installation to list of JRE's - would it explode too?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hWKBS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/283,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hWMOt,eclipse.jdt.debug,1633207213,283,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-07-12T20:59:28Z,2023-07-12T20:59:28Z,"Looking on the histogram I wonder if what we see is not related to SDK code but to the VS specific wrapper around JDT.

Looking on instance numners I can imagine there could be maps managed by maven/aether filled with lot of byte and character arrays.

10:         39152        1879296  java.util.HashMap (java.base@17.0.7) 
11:         57528        1840896  org.apache.maven.model.InputLocation
12:         18660        1791360  org.apache.maven.model.Dependency

18:         31279        1000928  jdk.internal.jimage.ImageReader$Resource
19:         24801         992040  org.eclipse.aether.artifact.DefaultArtifact
20:         30752         984064  jdk.internal.jrtfs.JrtPath","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hWMOt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/283,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hWaCs,eclipse.jdt.debug,1633263788,283,NA,rgrunber,1417342,Roland Grunberg,,NA,2023-07-12T21:58:46Z,2023-07-12T21:58:46Z,https://kojipkgs.fedoraproject.org//packages/java-11-openjdk/11.0.19.0.7/1.fc37/x86_64/java-11-openjdk-headless-11.0.19.0.7-1.fc37.x86_64.rpm . I'll try to see if I can reproduce in an Eclipse I-build (likely with m2e). I noticed that the OOM occurred on project import of some Maven project. The only way I've been able to reproduce consistently is by running the quarkus-ls tests.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hWaCs/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/283,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hYtV9,eclipse.jdt.debug,1633867133,283,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2023-07-13T09:13:45Z,2023-07-13T09:13:45Z,"OK, so I think the issue is not in JVM detection itself. The JVM detection does it job and detects the JVM.
However, it detect 1 particular JVM that cause issue. Looking at the code sending the exception, it's an array instantiation so it adds credit to what VisualVM says: there is no excessive memory consumption... until that exact line. The most probable is the the size of the array is clearly too big for the JVM to instantiate it and the instantiation fails before even trying to assign memory. It seems like `JrtFileSystem.getFileBytes` tries to read some *huge* file from this JVM. Can you please check whether there could be a huge file in this JVM installation, or a fishy one that would lead to an error in reading its size?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5hYtV9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/283,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tb4E4,eclipse.jdt.debug,1836024120,283,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-12-01T12:15:41Z,2023-12-01T12:15:41Z,why is this issue in DEBUG? move to CORE?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tb4E4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/283,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tcN4w,eclipse.jdt.debug,1836113456,283,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2023-12-01T13:23:35Z,2023-12-01T13:23:35Z,"@jukzi the detection of VMs is part of org.eclipse.jdt.launching, which is in JDT debug https://github.com/eclipse-jdt/eclipse.jdt.debug/blob/master/org.eclipse.jdt.launching/launching/org/eclipse/jdt/internal/launching/DetectVMInstallationsJob.java","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tcN4w/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/283,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Kg-jk,eclipse.jdt.debug,2323900644,283,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-09-02T06:18:24Z,2024-09-02T06:18:24Z,Is this still an issue? Please either provide information which detected jdk file causes the error or close.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Kg-jk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/289,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/289,eclipse.jdt.debug,1834718208,289,"An internal error occurred during: ""Look up for installed JVMs"".",BeckerWdf,28338612,Matthias Becker,ma.becker@sap.com,CLOSED,2023-08-03T09:56:13Z,2023-08-04T11:21:24Z,"Starting up eclipse-SDK-I20230802-1800-macosx-cocoa-aarch64 causes this:

<img width=""1027"" alt=""Screenshot 2023-08-03 at 11 53 56"" src=""https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/28338612/a0c6642b-77b3-4931-b0c3-84d26065c509"">

The error log shows this:
java.lang.UnsupportedOperationException: remove
	at java.base/java.util.Iterator.remove(Iterator.java:102)
	at java.base/java.util.Collection.removeIf(Collection.java:577)
	at org.eclipse.jdt.internal.launching.DetectVMInstallationsJob.run(DetectVMInstallationsJob.java:66)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

Seems to be related to #265 and #231","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/289/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/289,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5jK-00,eclipse.jdt.debug,1663823156,289,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2023-08-03T11:35:38Z,2023-08-03T11:35:38Z,"@jjohnstn 
Can you look into this?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5jK-00/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/289,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5jMhSI,eclipse.jdt.debug,1664226440,289,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-08-03T15:47:08Z,2023-08-03T15:47:08Z,@SarikaSinha Will do.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5jMhSI/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/290,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/290,eclipse.jdt.debug,1835225876,290,Remove Dependency on com.ibm.icu,robstryker,630383,Rob Stryker,,CLOSED,2023-08-03T14:52:55Z,2023-08-09T18:49:45Z,Complete the work of https://bugs.eclipse.org/bugs/show_bug.cgi?id=561910,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/290/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/290,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5jMMMU,eclipse.jdt.debug,1664140052,290,NA,robstryker,630383,Rob Stryker,,NA,2023-08-03T14:53:40Z,2023-08-03T14:53:40Z,"Specifically, fix this part:
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/630383/a1293e00-dc59-4bea-9d31-9e89e675b579)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5jMMMU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/404,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/404,eclipse.jdt.debug,2173265120,404,Removing an automatic added JVM brings it back after restart,laeubi,1331477,Christoph Läubrich,,OPEN,2023-08-16T06:25:53Z,2024-03-07T08:42:14Z,"I have a ""bad"" JVM that is discovered on the system but removing it has no permanent effect: After a restart, the removed JVM is added back.


FYI @mickaelistria I think it is important to store somewhere if a user has explicit removed a JVM (e.g. by its path) so they do not appear again and again. Currently the only way is disable the feature all together or uninstall/remove the discovered JVM.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/404/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/404,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M52MKlA,eclipse.jdt.debug,1982900544,404,NA,HannesWell,44067969,Hannes Wellmann,,NA,2023-08-18T21:33:54Z,2023-08-18T21:33:54Z,"I also had troubles with the auto-search of VMs because I have jextract in my java/jdk folder and therefore the JVM contained in jextract is also found.
But jextract only contains a reduced JVM (probably build with jlink) and once it happened that the jextract JVM was accidentally selected for compilation and I spend a fair amount of time finding out why many java.* packages could not be found.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M52MKlA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/404,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M52MKlD,eclipse.jdt.debug,1982900547,404,NA,srikanth-sankaran,131454720,Srikanth Sankaran,,NA,2024-03-07T08:15:18Z,2024-03-07T08:15:18Z,Does this actually belong in jdt-core ? @jarthana ??,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M52MKlD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/404,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M52MKlJ,eclipse.jdt.debug,1982900553,404,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-03-07T08:22:49Z,2024-03-07T08:22:49Z,"> Does this actually belong in jdt-core ? 

No, it is jdt-debug, and regression / side effect of https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/230","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M52MKlJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/404,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M52ML8K,eclipse.jdt.debug,1982906122,404,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-03-07T08:24:49Z,2024-03-07T08:24:49Z,@mickaelistria : could you please check if this can be improved?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M52ML8K/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/404,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M52Mapw,eclipse.jdt.debug,1982966384,404,NA,laeubi,1331477,Christoph Läubrich,,NA,2024-03-07T08:42:13Z,2024-03-07T08:42:13Z,"> Does this actually belong in jdt-core ? @jarthana ??

Another example why this would be useful:
- https://github.com/eclipse-jdt/eclipse.jdt.core/discussions/615","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M52Mapw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/295,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/295,eclipse.jdt.debug,1861669026,295,"All evaluations in Debug Shell fail with ""ClassNotFoundException""",davidmichaelkarr,5566419,David M. Karr,,CLOSED,2023-08-22T15:07:05Z,2023-09-05T15:34:12Z,"Using Eclipse 2023-06.

Any expression that I highlight in the Debug Shell and select ""Display"" fails with:

    Evaluation failed. Reason(s):
		An exception occurred: java.lang.ClassNotFoundException

The expression doesn't have to be complicated at all.  I tried simply ""1"". Same result. I looked in the Eclipse log, and there is nothing coinciding with this.

I'm testing this while sitting at a breakpoint while debugging an application.  I've tried this many times, with many expressions, and they all fail in the same way.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/295/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/295,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5kqJb0,eclipse.jdt.debug,1688770292,295,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-08-22T19:04:53Z,2023-08-22T19:04:53Z,"I tried a simple test on my current Eclipse which is 2023-09 M3.  Using the following test:

```
package tests;

public class TestDebug {
	
	
	public void foo() {
		int a = 4 * 6;
		System.out.println(a);
		System.out.println(a + 4);
	}
	
	public static void main(String[] args) {
		TestDebug x = new TestDebug();
		x.foo();
	}

}
```

I had a breakpoint set at the first println in foo().  I then had the following in my Debug Console:

```
System.out.println(a);
Integer.compare(a, 4);
1
```

Highlighting each line separately and doing right-click Display, all 3 lines work.  The println ends up printing to the Console, the compare ends up printing (int)1 in the console as does selecting 1 and doing Display.

Does this simple test work for you?  If yes, can you provide details on your particular test class?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5kqJb0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/295,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5kqbFX,eclipse.jdt.debug,1688842583,295,NA,davidmichaelkarr,5566419,David M. Karr,,NA,2023-08-22T19:59:13Z,2023-08-22T19:59:13Z,I have no particular test class.  I see this for every application I attempt to debug. I will set up this sample as a project and test that.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5kqbFX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/295,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5kqcp_,eclipse.jdt.debug,1688849023,295,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-08-22T20:04:47Z,2023-08-22T20:04:47Z,"Either installation or workspace must be corrupted in some way.
Start with clean install and a new workspace.
Create trivial new Java project and snippet like above.
Make sure you can run and debug it.
Try displaying values like above.
If that doesn't work, check error log. 
There **must** be something.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5kqcp_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/295,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5kq7lH,eclipse.jdt.debug,1688975687,295,NA,davidmichaelkarr,5566419,David M. Karr,,NA,2023-08-22T21:48:34Z,2023-08-22T21:48:34Z,"That test case has no problem.  It happens with my applications, which are all much larger than this sample.  As I said, there is nothing in the error log.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5kq7lH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/295,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ksBbs,eclipse.jdt.debug,1689261804,295,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2023-08-23T04:26:29Z,2023-08-23T04:26:29Z,"Instead of using Debug Shell, Can you try using Expression View or simple **Inspect** after hitting at the breakpoint?
This is just to make sure all the buildpath have been set properly.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ksBbs/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/295,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ksJ8P,eclipse.jdt.debug,1689296655,295,NA,davidmichaelkarr,5566419,David M. Karr,,NA,2023-08-23T05:19:31Z,2023-08-23T05:19:31Z,"Ok, good idea. I also thought it would be useful to set a breakpoint at the first line of the main method.  That got some curious results.  At that point, I entered ""args"" in the Debug Shell, selected it, and executed ""Display"".  That time, instead of just printing ClassNotFoundException in the debug shell, it actually hit a breakpoint at the point where it was throwing the CNFE, which had some useful information.  The following is a picture that shows some useful things:

![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/5566419/265e7f5e-322b-4455-885c-9ed111ec0fe0)

Note that I have ""cn"" selected in the Variables view, and nothing is shown in the bottom box, even though the right side clearly shows it is a string value, showing the name of a Groovy class.

You'll also see that I was hovering over the ""cn"" expression in the code, and that also shows the class name, and no value is shown in the bottom box.  The class name appears to be ""org.codehaus.groovy.runtime.ScriptBytecodeAdapter"". Note that I found no way to copy that string to the clipboard from either the Variables view or the expression view. It never showed the value in the bottom box, and there wasn't any way to select it.

As this hit the breakpoint where it was throwing the CNFE, here is the stacktrace for it:

```
Thread [main] (Suspended (uncaught exception ClassNotFoundException))	
	ClassLoaders$AppClassLoader(BuiltinClassLoader).loadClass(String, boolean) line: 581	
	ClassLoaders$AppClassLoader.loadClass(String, boolean) line: 178	
	ClassLoaders$AppClassLoader(ClassLoader).loadClass(String) line: 521	
	Class<T>.forName0(String, boolean, ClassLoader, Class<?>) line: not available [native method]	
	Class<T>.forName(String) line: 315	
	Application.main(String[]) line: 56	
```

I have no idea whether that class is significant.  I do have the groovy-eclipse plugin installed. Is this a problem with that plugin?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ksJ8P/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/295,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5kuXfH,eclipse.jdt.debug,1689876423,295,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-08-23T12:29:57Z,2023-08-23T12:29:57Z,"Is advanced source lookup enabled or not?
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/964108/a9069250-08f7-4094-a653-df14340a9bec)

Can you attach your debug launch config, or play with that and check if the expected libraries are on debugger source lookup list?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5kuXfH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/295,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5kuuTS,eclipse.jdt.debug,1689969874,295,NA,davidmichaelkarr,5566419,David M. Karr,,NA,2023-08-23T13:30:04Z,2023-08-23T13:30:04Z,"Yes, advanced source lookup is turned on. Should I try turning it off?

Do you mean take screenshots of every tab of the launch config?

This is a maven application. It has all of the maven dependencies. It has the ""Maven Dependencies"" specified in the classpath as expected.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5kuuTS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/295,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ku6EW,eclipse.jdt.debug,1690018070,295,NA,davidmichaelkarr,5566419,David M. Karr,,NA,2023-08-23T13:59:06Z,2023-08-23T13:59:06Z,"However, this did give me a clue to explore.  I recently had to make a change to the configuration of the groovy-eclipse plugin, which often causes problems for me, changing from Groovy 3 to Groovy 4. However, I see that some of our artifacts depend on Groovy 3.  I have no idea why this would cause all debug shell evaluations to fail, but it seems like it might be related. I'm going to try changing the config back to Groovy 3, which will result in me having to reset many project configs and recompile everything.  In a few hours I'll be able to see if this made any difference.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ku6EW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/295,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5kv_Oy,eclipse.jdt.debug,1690301362,295,NA,davidmichaelkarr,5566419,David M. Karr,,NA,2023-08-23T16:49:22Z,2023-08-23T16:49:22Z,"Ok, that led to the solution. I also asked about this problem on the groovy-eclipse github, and they pointed me to this: https://github.com/groovy/groovy-eclipse/wiki/5.0.0-Release-Notes#debug-support . I added that flag setting to the eclipse.ini, and I also backed up from Groovy 4 to Groovy 3.  I think it was probably the former that fixed this, but I guess I will move Groovy back to version 4 to confirm that.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5kv_Oy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/295,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5lvHbi,eclipse.jdt.debug,1706850018,295,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-09-05T15:34:12Z,2023-09-05T15:34:12Z,Closing,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5lvHbi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/296,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/296,eclipse.jdt.debug,1862779034,296,Virtual threads presentation in Debug View,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,OPEN,2023-08-23T07:55:58Z,2024-10-13T15:25:25Z,"https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/219
Follow up from JEP 444: Virtual Threads, Debug view needs a better way to handle and show Virtual Threads.
By default, it only displays the suspended virtual threads in the form of System Thread [Virtual Thread]","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/296/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/296,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6OCmKJ,eclipse.jdt.debug,2383045257,296,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-09-30T12:25:38Z,2024-09-30T12:25:38Z,@SougandhS interested to work on this?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6OCmKJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/296,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6OCneJ,eclipse.jdt.debug,2383050633,296,NA,SougandhS,177713286,Sougandh S,,NA,2024-09-30T12:28:07Z,2024-09-30T12:28:07Z,"> @SougandhS interested to work on this?


Yes, will check on this.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6OCneJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/296,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6OCo06,eclipse.jdt.debug,2383056186,296,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-09-30T12:30:44Z,2024-09-30T12:30:44Z,may relate to https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/345,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6OCo06/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/296,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6OCxRW,eclipse.jdt.debug,2383090774,296,NA,SougandhS,177713286,Sougandh S,,NA,2024-09-30T12:45:58Z,2024-09-30T12:45:58Z,"> may relate to #345


Okay 👍","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6OCxRW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/298,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/298,eclipse.jdt.debug,1870004324,298,[Java 21] TestLimitModules failure with Java 21,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,CLOSED,2023-08-28T15:39:21Z,2023-08-31T04:22:36Z,"https://download.eclipse.org/eclipse/downloads/drops4/Y20230827-1000/testresults/html/org.eclipse.jdt.debug.tests_ep429Y-unit-cen64-gtk3-java21_linux.gtk.x86_64_21.html

org.eclipse.jdt.debug.tests.core.ModuleOptionsTests | testLimitModules1 | Failure | Unknown set of default modules java.se,jdk.accessibility,jdk.attach,jdk.compiler,jdk.dynalink,jdk.httpserver,jdk.incubator.vector,jdk.jartool,jdk.javadoc,jdk.jconsole,jdk.jdi,jdk.jfr,jdk.jshell,jdk.jsobject,jdk.management,jdk.management.jfr,jdk.net,jdk.nio.mapmode,jdk.sctp,jdk.security.auth,jdk.security.jgss,jdk.unsupported,jdk.unsupported.desktop,jdk.xml.domjunit.framework.AssertionFailedError: Unknown set of default modules java.se,jdk.accessibility,jdk.attach,jdk.compiler,jdk.dynalink,jdk.httpserver,jdk.incubator.vector,jdk.jartool,jdk.javadoc,jdk.jconsole,jdk.jdi,jdk.jfr,jdk.jshell,jdk.jsobject,jdk.management,jdk.management.jfr,jdk.net,jdk.nio.mapmode,jdk.sctp,jdk.security.auth,jdk.security.jgss,jdk.unsupported,jdk.unsupported.desktop,jdk.xml.domat junit.framework.Assert.fail(Assert.java:57)at junit.framework.TestCase.fail(TestCase.java:223)at org.eclipse.jdt.debug.tests.core.ModuleOptionsTests.testLimitModules1(ModuleOptionsTests.java:295)at java.base/java.lang.reflect.Method.invoke(Method.java:580)at junit.framework.TestCase.runTest(TestCase.java:177)at junit.framework.TestCase.runBare(TestCase.java:142)at org.eclipse.jdt.debug.tests.AbstractDebugTest.runBare(AbstractDebugTest.java:2678)at junit.framework.TestResult$1.protect(TestResult.java:122)at junit.framework.TestResult.runProtected(TestResult.java:142)at junit.framework.TestResult.run(TestResult.java:125)at junit.framework.TestCase.run(TestCase.java:130)at junit.framework.TestSuite.runTest(TestSuite.java:241)at junit.framework.TestSuite.run(TestSuite.java:236)at junit.framework.TestSuite.runTest(TestSuite.java:241)at org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:61)at java.base/java.lang.Thread.run(Thread.java:1583)
-- | -- | -- | --


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/298/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/298,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5lFauK,eclipse.jdt.debug,1695918986,298,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2023-08-28T15:40:12Z,2023-08-28T15:40:12Z,"https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/65
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5lFauK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/298,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5lWThW,eclipse.jdt.debug,1700345942,298,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2023-08-31T04:22:02Z,2023-08-31T04:22:02Z,@mpalat ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5lWThW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/298,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5lWTmD,eclipse.jdt.debug,1700346243,298,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2023-08-31T04:22:36Z,2023-08-31T04:22:36Z,"https://download.eclipse.org/eclipse/downloads/drops4/Y20230830-1000/testResults.php
Test doesn't fail any more.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5lWTmD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/300,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/300,eclipse.jdt.debug,1871770452,300,[Java 21] LambdaVariableTest - 2 tests failing with Java 21,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,CLOSED,2023-08-29T14:14:08Z,2023-09-04T05:51:16Z,"https://download.eclipse.org/eclipse/downloads/drops4/Y20230827-1000/testresults/html/org.eclipse.jdt.debug.tests_ep429Y-unit-cen64-gtk3-java21_linux.gtk.x86_64_21.html


org.eclipse.jdt.debug.tests.eval.LambdaVariableTest | testEvaluate_Bug575551_onIntermediateFrame_InsideLambda_OutFromMethodInvocationFrame | Failure | The evaluation of '"" + snippet + ""' should not have errors : names cannot be resolved to a variablejunit.framework.AssertionFailedError: The evaluation of '"" + snippet + ""' should not have errors : names cannot be resolved to a variableat junit.framework.Assert.fail(Assert.java:57)at junit.framework.Assert.assertTrue(Assert.java:22)at junit.framework.Assert.assertFalse(Assert.java:39)at junit.framework.TestCase.assertFalse(TestCase.java:208)at org.eclipse.jdt.debug.tests.AbstractDebugTest.doEval(AbstractDebugTest.java:2796)at org.eclipse.jdt.debug.tests.eval.LambdaVariableTest.testEvaluate_Bug575551_onIntermediateFrame_InsideLambda_OutFromMethodInvocationFrame(LambdaVariableTest.java:196)at java.base/java.lang.reflect.Method.invoke(Method.java:580)at junit.framework.TestCase.runTest(TestCase.java:177)at junit.framework.TestCase.runBare(TestCase.java:142)at org.eclipse.jdt.debug.tests.AbstractDebugTest.runBare(AbstractDebugTest.java:2678)at junit.framework.TestResult$1.protect(TestResult.java:122)at junit.framework.TestResult.runProtected(TestResult.java:142)at junit.framework.TestResult.run(TestResult.java:125)at junit.framework.TestCase.run(TestCase.java:130)at junit.framework.TestSuite.runTest(TestSuite.java:241)at junit.framework.TestSuite.run(TestSuite.java:236)at junit.framework.TestSuite.runTest(TestSuite.java:241)at org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:61)at java.base/java.lang.Thread.run(Thread.java:1583)
-- | -- | -- | --




org.eclipse.jdt.debug.tests.eval.LambdaVariableTest | testEvaluate_LambdaCapturedParameter | Failure | The evaluation of '"" + snippet + ""' should not have errors : key cannot be resolved to a variablejunit.framework.AssertionFailedError: The evaluation of '"" + snippet + ""' should not have errors : key cannot be resolved to a variableat junit.framework.Assert.fail(Assert.java:57)at junit.framework.Assert.assertTrue(Assert.java:22)at junit.framework.Assert.assertFalse(Assert.java:39)at junit.framework.TestCase.assertFalse(TestCase.java:208)at org.eclipse.jdt.debug.tests.AbstractDebugTest.doEval(AbstractDebugTest.java:2796)at org.eclipse.jdt.debug.tests.AbstractDebugTest.doEval(AbstractDebugTest.java:2756)at org.eclipse.jdt.debug.tests.eval.LambdaVariableTest.testEvaluate_LambdaCapturedParameter(LambdaVariableTest.java:38)at java.base/java.lang.reflect.Method.invoke(Method.java:580)at junit.framework.TestCase.runTest(TestCase.java:177)at junit.framework.TestCase.runBare(TestCase.java:142)at org.eclipse.jdt.debug.tests.AbstractDebugTest.runBare(AbstractDebugTest.java:2678)at junit.framework.TestResult$1.protect(TestResult.java:122)at junit.framework.TestResult.runProtected(TestResult.java:142)at junit.framework.TestResult.run(TestResult.java:125)at junit.framework.TestCase.run(TestCase.java:130)at junit.framework.TestSuite.runTest(TestSuite.java:241)at junit.framework.TestSuite.run(TestSuite.java:236)at junit.framework.TestSuite.runTest(TestSuite.java:241)at org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:61)at java.base/java.lang.Thread.run(Thread.java:1583)
-- | -- | -- | --


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/300/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/300,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5lLkGS,eclipse.jdt.debug,1697530258,300,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2023-08-29T14:15:10Z,2023-08-29T14:15:10Z,"@gayanper Can you please look into this?
@mpalat ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5lLkGS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/300,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ljbFs,eclipse.jdt.debug,1703784812,300,NA,gayanper,7471994,Gayan Perera,,NA,2023-09-02T09:50:53Z,2023-09-02T09:50:53Z,"The issue is at `org.eclipse.jdt.internal.debug.core.model.LambdaUtils.isLambdaField(IVariable)` where in Java 21 the Lambda class name has changed. 

in Java21 it's `Bug575551$$Lambda.0x000000e8010079d8` and Prior version its `Bug575551$$Lambda$20.0x0000000801005be0`","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ljbFs/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/301,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/301,eclipse.jdt.debug,1876755222,301,[Tests] Random failing testMapLogicalStructure tests failing,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,OPEN,2023-09-01T05:22:40Z,2025-01-07T06:49:22Z,"https://download.eclipse.org/eclipse/downloads/drops4/I20230830-2200/testresults/html/org.eclipse.jdt.debug.tests_ep429I-unit-cen64-gtk3-java20_linux.gtk.x86_64_20.html
com.sun.jdi.ObjectCollectedException occurred retrieving type

org.eclipse.debug.core.DebugException: com.sun.jdi.ObjectCollectedException occurred retrieving type
at org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.throwDebugException(JDIDebugElement.java:263)
at org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.requestFailed(JDIDebugElement.java:202)
at org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.targetRequestFailed(JDIDebugElement.java:182)
at org.eclipse.jdt.internal.debug.core.model.JDIValue.getUnderlyingType(JDIValue.java:459)
at org.eclipse.jdt.internal.debug.core.model.JDIValue.getJavaType(JDIValue.java:441)
at org.eclipse.jdt.debug.tests.variables.TestLogicalStructures.testMapLogicalStructure(TestLogicalStructures.java:109)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at junit.framework.TestCase.runTest(TestCase.java:177)
at junit.framework.TestCase.runBare(TestCase.java:142)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.runBare(AbstractDebugTest.java:2678)
at junit.framework.TestResult$1.protect(TestResult.java:122)
at junit.framework.TestResult.runProtected(TestResult.java:142)
at junit.framework.TestResult.run(TestResult.java:125)
at junit.framework.TestCase.run(TestCase.java:130)
at junit.framework.TestSuite.runTest(TestSuite.java:241)
at junit.framework.TestSuite.run(TestSuite.java:236)
at junit.framework.TestSuite.runTest(TestSuite.java:241)
at org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:61)
at java.base/java.lang.Thread.run(Thread.java:1623)
Caused by: com.sun.jdi.ObjectCollectedException
at org.eclipse.jdi.internal.MirrorImpl.defaultReplyErrorHandler(MirrorImpl.java:295)
at org.eclipse.jdi.internal.ObjectReferenceImpl.referenceType(ObjectReferenceImpl.java:531)
at org.eclipse.jdi.internal.ObjectReferenceImpl.type(ObjectReferenceImpl.java:548)
at org.eclipse.jdt.internal.debug.core.model.JDIValue.getUnderlyingType(JDIValue.java:457)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/301/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/301,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Bpcp2,eclipse.jdt.debug,2175126134,301,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-06-18T06:15:52Z,2024-06-18T06:15:52Z,"Also happened on https://ci.eclipse.org/jdt/job/eclipse.jdt.debug-github/job/PR-450/3/testReport/org.eclipse.jdt.debug.tests.variables/TestLogicalStructuresJava9/testMapLogicalStructure/

randomly failing since forever, see: https://bugs.eclipse.org/bugs/show_bug.cgi?id=569157
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Bpcp2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/301,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Zc9_5,eclipse.jdt.debug,2574508025,301,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-07T06:49:21Z,2025-01-07T06:49:21Z,again in https://download.eclipse.org/eclipse/downloads/drops4/I20250106-1800/testresults/html/org.eclipse.jdt.debug.tests_ep435I-unit-macosx-x86_64-java21_macosx.cocoa.x86_64_21.html,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Zc9_5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/308,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/308,eclipse.jdt.debug,1892344756,308,Delete while typing in conditional breakpoint editor area deletes breakpoint,Madjosz,28844868,,,CLOSED,2023-09-12T11:48:14Z,2024-09-24T14:04:05Z,"Transfer of [Bug 573604](https://bugs.eclipse.org/bugs/show_bug.cgi?id=573604)

# Problem
When editing the condition of a conditional breakpoint in the editor area of the breakpoints view: If I hit `Delete` in an empty editor OR at the end of the input, instead of deleting nothing of your input, the breakpoint itself will be deleted from the list of all breakpoints.

This even gets worse if you hold the `Delete` key because you want to delete a whole bunch of characters before the caret. Once all characters are deleted and you hit the end of your input, it will start to delete all your breakpoints because after your conditional breakpoint gets deleted the next breakpoint on the list gets the focus and will also be deleted. With this it is easily possible to delete all your breakpoints at once by accident.

Can be reproduced on Mac with `Fn + Delete`.

If you activate ""Show key binding when command is invoked"" in Preferences -> General -> Keys, you will see
""Delete - Delete \n Delete the selection"".

I did a little testing on older Eclipse version and this bug is present at least since 4.2.2 (Juno). It is not present in 3.7.2 (Indigo). I did not check the version chaos in between these two versions apart from 4.0 where the Breakpoint view doesn't work at all since it does not show any of my breakpoints.

This bug does not occur in other input fields like the Hit count.

# Expected behaviour
Do not delete breakpoints at all when the focus is in the editor area.

# Screencapture
hitting DELETE 3 times in a row
* [MKV](https://bugs.eclipse.org/bugs/attachment.cgi?id=286459)
* [MP4 (thanks to Sarika Sinha)](https://bugs.eclipse.org/bugs/attachment.cgi?id=286462)

# Tested with
## Eclipse SDK
| Working | Version | Build id |
| --- | --- | --- |
| ✔️ | Version: 3.7.2 | Build id: M20120208-0800 |
| ❌ | Version: 4.2.2 | Build id: M20130204-1200 |
| ❌ | Version: 2023-12 (4.30) | Build id: I20230911-1800 |

## Java
openjdk version ""1.8.0_382""
OpenJDK Runtime Environment (Temurin)(build 1.8.0_382-b05)
OpenJDK 64-Bit Server VM (Temurin)(build 25.382-b05, mixed mode)

openjdk version ""20.0.2"" 2023-07-18
OpenJDK Runtime Environment Temurin-20.0.2+9 (build 20.0.2+9)
OpenJDK 64-Bit Server VM Temurin-20.0.2+9 (build 20.0.2+9, mixed mode, sharing)

## Operating System
Microsoft Windows 10 Pro 10.0.19045","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/308/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/308,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5mYmPQ,eclipse.jdt.debug,1717724112,308,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-09-13T14:16:49Z,2023-09-13T14:16:49Z,Can reproduce on latest master / Linux too. Patch is welcome.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5mYmPQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/308,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6NOYB1,eclipse.jdt.debug,2369355893,308,NA,opcoach,1716878,Olivier Prouvost,olivier.prouvost@opcoach.com,NA,2024-09-23T20:50:00Z,2024-09-23T20:50:00Z,"Can not reproduce it on Mac Sequoia 15.0 with Eclipse 2024-09 and jdt.debug.ui 3.13.500.v20240822. 

I select my breakpoint in the list, it is highlighted in blue, then I focus on the condition field, (the breakpoint selected is now highlighted in gray). Then I selected a text in the condition and hit Fn Delete (on Mac), the text is deleted, but not the breakpoint.  If I select it in the list (when hightlighted in blue), and hit Fn Delete, the breakpoint is deleted, which is the nominal case... 

I tried also to select the breakpoint in the list, then focus on the java editor, and then focus directly in the condition field, and hit Fn Delete, and once again only the selected text is deleted.. 

I would say this bug has been fixed.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6NOYB1/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/308,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6NWJQA,eclipse.jdt.debug,2371392512,308,NA,Madjosz,28844868,,,NA,2024-09-24T14:04:05Z,2024-09-24T14:04:05Z,"Indeed this seems to be fixed in 4.33. I could not track what the actual fix was but it was introduced somwhere between 353005075c1ab3df53959b3deee9299cfbb7d934 (4.32 release, not working) and 9470d2b259dca40d18388f479c0ac7eca8d9fb88 (working). Thanks to whoever fixed it and @opcoach for testing.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6NWJQA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,eclipse.jdt.debug,1901885521,309,2023-09: Error while evaluating 'Array' logical structure for type java.util.Collection with the value 'return toArray();',andy-goryachev-oracle,107069028,Andy Goryachev,,CLOSED,2023-09-18T23:13:41Z,2024-04-15T08:19:26Z,"To reproduce:
- use an existing workspace created with an earlier version
- debug **any** program containing either a list or a map.
- set a breakpoint and try to expand an ArrayList or a HashMap in the Variables view.
- the node expands, but instead of enumerating the content, it says ""Error while evaluating..."" (see the two attached screenshots in the comments)

I can see it on macOS with 2023-09.
Is this a resurrection of https://bugs.eclipse.org/bugs/show_bug.cgi?id=559505 ?

This is bad enough, I am forced to downgrade.

Error log:
```
java.lang.IllegalStateException: The method toArray() is undefined for the type Collection___
	at org.eclipse.jdt.internal.debug.core.logicalstructures.JavaLogicalStructure$EvaluationBlock.log(JavaLogicalStructure.java:200)
	at org.eclipse.jdt.internal.debug.core.logicalstructures.JavaLogicalStructure$EvaluationBlock.evaluate(JavaLogicalStructure.java:149)
	at org.eclipse.jdt.internal.debug.core.logicalstructures.JavaLogicalStructure.getLogicalStructure(JavaLogicalStructure.java:323)
	at org.eclipse.debug.internal.ui.views.variables.LogicalStructureCache$LogicalStructureTypeCache.getLogicalStructure(LogicalStructureCache.java:144)
	at org.eclipse.debug.internal.ui.views.variables.LogicalStructureCache.getLogicalStructure(LogicalStructureCache.java:57)
	at org.eclipse.debug.internal.ui.model.elements.VariableContentProvider.getLogicalValue(VariableContentProvider.java:215)
	at org.eclipse.debug.internal.ui.model.elements.VariableContentProvider.getLogicalValue(VariableContentProvider.java:114)
	at org.eclipse.debug.internal.ui.model.elements.VariableContentProvider.getValueChildren(VariableContentProvider.java:132)
	at org.eclipse.debug.internal.ui.model.elements.VariableContentProvider.getAllChildren(VariableContentProvider.java:77)
	at org.eclipse.jdt.internal.debug.ui.variables.JavaVariableContentProvider.getAllChildren(JavaVariableContentProvider.java:144)
	at org.eclipse.debug.internal.ui.model.elements.VariableContentProvider.getChildCount(VariableContentProvider.java:48)
	at org.eclipse.jdt.internal.debug.ui.variables.JavaVariableContentProvider.getChildCount(JavaVariableContentProvider.java:73)
	at org.eclipse.debug.internal.ui.model.elements.ElementContentProvider.retrieveChildCount(ElementContentProvider.java:126)
	at org.eclipse.debug.internal.ui.model.elements.ElementContentProvider$2.run(ElementContentProvider.java:76)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
```

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5myyO4,eclipse.jdt.debug,1724588984,309,NA,andy-goryachev-oracle,107069028,Andy Goryachev,,NA,2023-09-18T23:14:41Z,2023-09-18T23:14:41Z,"<img width=""385"" alt=""Screenshot 2023-09-18 at 16 13 47"" src=""https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/107069028/a8f61cca-c067-40de-b194-a04ddf5c3adc"">
<img width=""368"" alt=""Screenshot 2023-09-18 at 16 13 58"" src=""https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/107069028/4f300b74-f410-4cc7-b807-1e4446a1ad7b"">
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5myyO4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5myyen,eclipse.jdt.debug,1724589991,309,NA,andy-goryachev-oracle,107069028,Andy Goryachev,,NA,2023-09-18T23:16:03Z,2023-09-18T23:16:03Z,"Session data:

```
eclipse.buildId=4.29.0.20230907-1200
java.version=20.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=aarch64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/REDACTED/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch aarch64 -product org.eclipse.epp.package.java.product -keyring /Users/REDACTED/.eclipse_keyring
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5myyen/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5myyjq,eclipse.jdt.debug,1724590314,309,NA,andy-goryachev-oracle,107069028,Andy Goryachev,,NA,2023-09-18T23:16:30Z,2023-09-18T23:16:30Z,"Stack trace for Map:

```
java.lang.IllegalStateException: The method entrySet() is undefined for the type Map___
	at org.eclipse.jdt.internal.debug.core.logicalstructures.JavaLogicalStructure$EvaluationBlock.log(JavaLogicalStructure.java:200)
	at org.eclipse.jdt.internal.debug.core.logicalstructures.JavaLogicalStructure$EvaluationBlock.evaluate(JavaLogicalStructure.java:149)
	at org.eclipse.jdt.internal.debug.core.logicalstructures.JavaLogicalStructure.getLogicalStructure(JavaLogicalStructure.java:323)
	at org.eclipse.debug.internal.ui.views.variables.LogicalStructureCache$LogicalStructureTypeCache.getLogicalStructure(LogicalStructureCache.java:144)
	at org.eclipse.debug.internal.ui.views.variables.LogicalStructureCache.getLogicalStructure(LogicalStructureCache.java:57)
	at org.eclipse.debug.internal.ui.model.elements.VariableContentProvider.getLogicalValue(VariableContentProvider.java:215)
	at org.eclipse.debug.internal.ui.model.elements.VariableContentProvider.getLogicalValue(VariableContentProvider.java:114)
	at org.eclipse.debug.internal.ui.model.elements.VariableContentProvider.getValueChildren(VariableContentProvider.java:132)
	at org.eclipse.debug.internal.ui.model.elements.VariableContentProvider.getAllChildren(VariableContentProvider.java:77)
	at org.eclipse.jdt.internal.debug.ui.variables.JavaVariableContentProvider.getAllChildren(JavaVariableContentProvider.java:144)
	at org.eclipse.debug.internal.ui.model.elements.VariableContentProvider.getChildCount(VariableContentProvider.java:48)
	at org.eclipse.jdt.internal.debug.ui.variables.JavaVariableContentProvider.getChildCount(JavaVariableContentProvider.java:73)
	at org.eclipse.debug.internal.ui.model.elements.ElementContentProvider.retrieveChildCount(ElementContentProvider.java:126)
	at org.eclipse.debug.internal.ui.model.elements.ElementContentProvider$2.run(ElementContentProvider.java:76)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5myyjq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5m_a-K,eclipse.jdt.debug,1727901578,309,NA,andy-goryachev-oracle,107069028,Andy Goryachev,,NA,2023-09-20T14:58:32Z,2023-09-20T14:58:32Z,Is this the right place to log the issue?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5m_a-K/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5m_bsh,eclipse.jdt.debug,1727904545,309,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-09-20T15:00:09Z,2023-09-20T15:00:09Z,"Yes, it is. Please beso kindand attach small self containing example demonstrating the issue.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5m_bsh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5m_ekf,eclipse.jdt.debug,1727916319,309,NA,andy-goryachev-oracle,107069028,Andy Goryachev,,NA,2023-09-20T15:06:47Z,2023-09-20T15:06:47Z,"Thank you.

I've downgraded my eclipse yesterday, so i cannot provide an SCCE.  Updated the description and how to reproduce.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5m_ekf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5m_y_Q,eclipse.jdt.debug,1727999952,309,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-09-20T15:54:30Z,2023-09-20T15:54:30Z,"This reminds me on https://bugs.eclipse.org/bugs/show_bug.cgi?id=543604 , but that was fixed long time ago.
I can't reproduce on master, running on Java 20.0.2 / Linux.
```
import java.util.HashMap;
import java.util.Map;

public class Test {
	public static void main(String[] args) {
		Map<String, String> map = new HashMap<>();
		map.put(""key1"", ""value1"");
		map.put(""key2"", ""value2"");
		map.put(""key3"", ""value3"");
		System.out.println(map);
	}
}
```
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/964108/8537399b-d37f-45eb-90f3-23ce8194ce44)


So if you want a fix for your issue, please provide exact steps to reproduce.
May be you can try with the fresh new workspace / clean SDK install etc, may be there are some 3rd party plugins breaking JDT, may be something Mac / Mac JDK specific.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5m_y_Q/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5m_4U9,eclipse.jdt.debug,1728021821,309,NA,andy-goryachev-oracle,107069028,Andy Goryachev,,NA,2023-09-20T16:02:21Z,2023-09-20T16:02:21Z,"Interesting, thank you for looking at this!
Would it be possible to check it on macOS on M1 (arm)?
I'll do a clean install later tonight.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5m_4U9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5m_662,eclipse.jdt.debug,1728032438,309,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-09-20T16:05:46Z,2023-09-20T16:05:46Z,"> Would it be possible to check it on macOS

Not for me, I have no access to any Mac machine.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5m_662/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5nAFwi,eclipse.jdt.debug,1728076834,309,NA,andy-goryachev-oracle,107069028,Andy Goryachev,,NA,2023-09-20T16:30:13Z,2023-09-20T16:30:13Z,"Don't see the issue with a clean install and a blank project.  
Next will try to open a copy of my old workspace.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5nAFwi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5nDR1b,eclipse.jdt.debug,1728912731,309,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2023-09-21T06:09:10Z,2023-09-21T06:09:10Z,"Behaviour on Mac:
I was able to reproduce with existing workspace which had just 1 basic java file.
For same install when I switched to new workspace, this error was not there.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5nDR1b/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5nlrLi,eclipse.jdt.debug,1737929442,309,NA,andy-goryachev-oracle,107069028,Andy Goryachev,,NA,2023-09-27T19:02:44Z,2023-09-27T19:02:44Z,"This issue cannot be reproduced when opening (with 2023-09) a clean workspace created with 2023-06.
This indicates that some, possibly much earlier, version leaves the workspace in a state that 2023-09 cannot deal with.

This is still a blocker for migration to 2023-09.  Due to corporate restrictions, I cannot attach a copy of the workspace.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5nlrLi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5nluXX,eclipse.jdt.debug,1737942487,309,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-09-27T19:13:55Z,2023-09-27T19:13:55Z,I guess you can try to regenerate Java index under Preferences / Java. May be some types aren't properly resolved because of broken / not properly updated index?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5nluXX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5nlvMn,eclipse.jdt.debug,1737945895,309,NA,andy-goryachev-oracle,107069028,Andy Goryachev,,NA,2023-09-27T19:16:42Z,2023-09-27T19:16:42Z,"let me try that, but doesn't 'clean all projects' should take care of everything?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5nlvMn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5nlvpM,eclipse.jdt.debug,1737947724,309,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-09-27T19:18:18Z,2023-09-27T19:18:18Z,"No, index is independent from ""clean"". There are also such things like shared JDK / library symbols etc","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5nlvpM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5nlw6B,eclipse.jdt.debug,1737952897,309,NA,andy-goryachev-oracle,107069028,Andy Goryachev,,NA,2023-09-27T19:22:36Z,2023-09-27T19:22:36Z,"[rebuild index] did not help.  
is there a specific file or files in the workspace I need to check?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5nlw6B/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5nly0j,eclipse.jdt.debug,1737960739,309,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-09-27T19:29:28Z,2023-09-27T19:29:28Z,"No. Please note, you need to wait till index is rebuilt before trying.
If this doesn't help, another possibility to play with advanced lookup preference under Java / Debugger.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5nly0j/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5nl1ml,eclipse.jdt.debug,1737972133,309,NA,andy-goryachev-oracle,107069028,Andy Goryachev,,NA,2023-09-27T19:39:19Z,2023-09-27T19:39:19Z,"waited, even reloaded eclipse.

I respectfully disagree: this is a regression, and a serious one.  Pretty much every version since early 2000's could open and work with a workspace created by earlier versions (some even upgraded multiple times) with no issues, at least on my memory.  I know it's a complex system, we are also dealing with ever increasing entropy in the Universe, but still - it's a blocker.

What can I do to escalate?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5nl1ml/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5nl2tZ,eclipse.jdt.debug,1737976665,309,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-09-27T19:43:16Z,2023-09-27T19:43:16Z,"> What can I do to escalate?

Well, if your organization is member of Eclipse IDE working group, you could ask your representative in that group to raise the priority of this issue on the next IDE WG meeting.

Or you can ask your organization to hire some developer to debug & fix this issue.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5nl2tZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5oJrsk,eclipse.jdt.debug,1747368740,309,NA,andy-goryachev-oracle,107069028,Andy Goryachev,,NA,2023-10-04T17:46:46Z,2023-10-04T17:46:46Z,"Unfortunately, my organization is not a member of Eclipse IDE working group.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5oJrsk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5z27ex,eclipse.jdt.debug,1943779249,309,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-14T13:33:15Z,2024-02-14T13:33:15Z,"How to Become a Member:
https://eclipseide.org/membership/","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5z27ex/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M52HMlz,eclipse.jdt.debug,1981598067,309,NA,alerosmile,26764588,Roman Huber,,NA,2024-03-06T19:12:24Z,2024-03-06T19:12:24Z,Same here with 2023-12. I get this if the application is started as modular only. That is if the application is modular itself or inside a workspace dependency if it is modular.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M52HMlz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M52HQ_4,eclipse.jdt.debug,1981616120,309,NA,andy-goryachev-oracle,107069028,Andy Goryachev,,NA,2024-03-06T19:23:52Z,2024-03-06T19:23:52Z,"> How to Become a Member:

not an option for my org, unfortunately.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M52HQ_4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M52HVMh,eclipse.jdt.debug,1981633313,309,NA,andy-goryachev,5430849,Andy Goryachev,,NA,2024-03-06T19:29:09Z,2024-03-06T19:29:09Z,"> That is if the application is modular itself or inside a workspace dependency if it is modular.

Thank you, you might be on something!
This was the case for the original report.  The other project I tried wasn't a modular one.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M52HVMh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55mLyv,eclipse.jdt.debug,2040052911,309,NA,andy-goryachev,5430849,Andy Goryachev,,NA,2024-04-05T15:11:14Z,2024-04-05T15:11:14Z,"@iloveeclipse
please remove [needinfo] label.  the issue is still present in 2024-03 version, and as @alerosmile mentioned it occurs in any modular project.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55mLyv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55mN_A,eclipse.jdt.debug,2040061888,309,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-05T15:14:41Z,2024-04-05T15:14:41Z,"> @iloveeclipse please remove [needinfo] label. the issue is still present in 2024-03 version, and as @alerosmile mentioned it occurs in any modular project.

I don't see exact steps to reproduce yet, sorry. If someone can provide something that I (or anyone else) would be able to reproduce, I would remove ""needinfo"".","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55mN_A/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55mVcz,eclipse.jdt.debug,2040092467,309,NA,andy-goryachev-oracle,107069028,Andy Goryachev,,NA,2024-04-05T15:28:42Z,2024-04-05T15:28:42Z,"okay, here are the steps:
1. macOS 14.4.1 on M1
2. launch eclipse 2024-03
3. create a brand new workspace
4. create a new java project (see a screenshot later in the comments)
5. create a new java class (screenshot, code later in the comments)
6. set a breakpoint on line 10.
7. debug (screenshot)

observe the error:
```
java.lang.IllegalStateException: The method entrySet() is undefined for the type Map___
	at org.eclipse.jdt.internal.debug.core.logicalstructures.JavaLogicalStructure$EvaluationBlock.log(JavaLogicalStructure.java:194)
	at org.eclipse.jdt.internal.debug.core.logicalstructures.JavaLogicalStructure$EvaluationBlock.evaluate(JavaLogicalStructure.java:143)
	at org.eclipse.jdt.internal.debug.core.logicalstructures.JavaLogicalStructure.getLogicalStructure(JavaLogicalStructure.java:317)
	at org.eclipse.debug.internal.ui.views.variables.LogicalStructureCache$LogicalStructureTypeCache.getLogicalStructure(LogicalStructureCache.java:143)
	at org.eclipse.debug.internal.ui.views.variables.LogicalStructureCache.getLogicalStructure(LogicalStructureCache.java:56)
	at org.eclipse.debug.internal.ui.model.elements.VariableContentProvider.getLogicalValue(VariableContentProvider.java:211)
	at org.eclipse.debug.internal.ui.model.elements.VariableContentProvider.getLogicalValue(VariableContentProvider.java:111)
	at org.eclipse.debug.internal.ui.model.elements.VariableContentProvider.getValueChildren(VariableContentProvider.java:128)
	at org.eclipse.debug.internal.ui.model.elements.VariableContentProvider.getAllChildren(VariableContentProvider.java:76)
	at org.eclipse.jdt.internal.debug.ui.variables.JavaVariableContentProvider.getAllChildren(JavaVariableContentProvider.java:143)
	at org.eclipse.debug.internal.ui.model.elements.VariableContentProvider.getChildCount(VariableContentProvider.java:48)
	at org.eclipse.jdt.internal.debug.ui.variables.JavaVariableContentProvider.getChildCount(JavaVariableContentProvider.java:73)
	at org.eclipse.debug.internal.ui.model.elements.ElementContentProvider.retrieveChildCount(ElementContentProvider.java:122)
	at org.eclipse.debug.internal.ui.model.elements.ElementContentProvider$2.run(ElementContentProvider.java:76)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55mVcz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55mVl2,eclipse.jdt.debug,2040093046,309,NA,andy-goryachev-oracle,107069028,Andy Goryachev,,NA,2024-04-05T15:29:05Z,2024-04-05T15:29:05Z,"4. create a java project:

![Screenshot 2024-04-05 at 08 22 50](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/107069028/56f4902d-c217-435b-8f3d-af39159e2315)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55mVl2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55mWRx,eclipse.jdt.debug,2040095857,309,NA,andy-goryachev-oracle,107069028,Andy Goryachev,,NA,2024-04-05T15:30:30Z,2024-04-05T15:30:30Z,"5. create a new java class

![Screenshot 2024-04-05 at 08 23 16](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/107069028/f898dc71-8282-4036-a00b-dc09adcabf64)

```
package testing;

import java.util.HashMap;

public class Test {
	public static void main(String[] a) {
		HashMap<Object,Object> m = new HashMap<>();
		m.put(1, 2);
		m.put(2, 3);
		System.out.println(m);
	}
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55mWRx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55mWgh,eclipse.jdt.debug,2040096801,309,NA,andy-goryachev-oracle,107069028,Andy Goryachev,,NA,2024-04-05T15:31:04Z,2024-04-05T15:31:04Z,"6. set a breakpoint

![Screenshot 2024-04-05 at 08 24 27](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/107069028/161de7e8-9a89-4164-bc58-62638db1322e)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55mWgh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55mXFp,eclipse.jdt.debug,2040099177,309,NA,andy-goryachev-oracle,107069028,Andy Goryachev,,NA,2024-04-05T15:31:34Z,2024-04-05T15:31:34Z,"version: 

![Screenshot 2024-04-05 at 08 24 59](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/107069028/6f038cc6-40ec-40a9-b519-41de50cb7d32)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55mXFp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55mXdR,eclipse.jdt.debug,2040100689,309,NA,andy-goryachev-oracle,107069028,Andy Goryachev,,NA,2024-04-05T15:31:48Z,2024-04-05T15:31:48Z,"error:

![Screenshot 2024-04-05 at 08 25 17](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/107069028/a84fa3b3-51d5-424c-a744-a500a6aab956)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55mXdR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55mYu5,eclipse.jdt.debug,2040105913,309,NA,andy-goryachev-oracle,107069028,Andy Goryachev,,NA,2024-04-05T15:33:36Z,2024-04-05T15:33:36Z,Thank you @alerosmile for providing an important insight that this error occurs in a modular project!,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55mYu5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55mjOt,eclipse.jdt.debug,2040148909,309,NA,andy-goryachev-oracle,107069028,Andy Goryachev,,NA,2024-04-05T15:53:02Z,2024-04-05T15:53:02Z,"Not to stress it, but I would say it's a [bug]: the major functionality (introspecting any collection) is disabled in the debugger.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55mjOt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55mmYK,eclipse.jdt.debug,2040161802,309,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-04-05T15:58:23Z,2024-04-05T15:58:23Z,"Please keep in mind that this is free software - ""free"" like freebase. Use with care and better fix the aftermath yourself.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55mmYK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55u3fH,eclipse.jdt.debug,2042329031,309,NA,alerosmile,26764588,Roman Huber,,NA,2024-04-08T09:52:42Z,2024-04-08T09:52:42Z,"This bug was once fixed:
https://bugs.eclipse.org/bugs/show_bug.cgi?format=multiple&id=543604

In this commit:
https://git.eclipse.org/c/jdt/eclipse.jdt.debug.git/commit/?id=9102ba8a08ec853cd91765082ce10478c2c3c1ba

But it got reintroduced (probably in this commit):
https://github.com/eclipse-jdt/eclipse.jdt.debug/commit/f52ee5758f0fe241abae4e718d4e3cfc2b0a0e6c

I tried @andy-goryachev-oracle's example in 2023-06 and it worked as expected. But it failed in 2023-09.

 ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55u3fH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55ysRi,eclipse.jdt.debug,2043331682,309,NA,andy-goryachev-oracle,107069028,Andy Goryachev,,NA,2024-04-08T17:52:39Z,2024-04-08T17:52:39Z,"I suspect this failure might happen with any Map or Collection:

![Screenshot 2024-04-08 at 10 45 57](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/107069028/71075ba6-bd39-4320-bb9c-24dad278c9b7)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55ysRi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55yuMV,eclipse.jdt.debug,2043339541,309,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-08T17:56:24Z,2024-04-08T17:56:24Z,"> okay, here are the steps:
> 
> 1. macOS 14.4.1 on M1
> 2. launch eclipse 2024-03

**Which** Eclipse package do you use? I assume it is **not** the plain SDK?

Could you please check 4.32 M1 from https://download.eclipse.org/eclipse/downloads/drops4/S-4.32M1-202404061800/ ?
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55yuMV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55y2I5,eclipse.jdt.debug,2043372089,309,NA,andy-goryachev-oracle,107069028,Andy Goryachev,,NA,2024-04-08T18:06:21Z,2024-04-08T18:06:21Z,"from the Installation Details -> Configuration:
(redacted)

```
-
eclipse.buildId=4.31.0.20240307-1200
eclipse.commands=-os
macosx
-ws
cocoa
-arch
aarch64
-showsplash
/Applications/Eclipse.app/Contents/MacOS//../Eclipse/plugins/org.eclipse.epp.package.common_4.31.0.20240307-1200/splash.bmp
-launcher
/Applications/Eclipse.app/Contents/MacOS/eclipse
-name
Eclipse
--launcher.library
/Applications/Eclipse.app/Contents/MacOS//../Eclipse/plugins/org.eclipse.equinox.launcher.cocoa.macosx.aarch64_1.2.900.v20240129-1338/eclipse_11900.so
-startup
/Applications/Eclipse.app/Contents/MacOS//../Eclipse/plugins/org.eclipse.equinox.launcher_1.6.700.v20240213-1244.jar
--launcher.appendVmargs
-product
org.eclipse.epp.package.java.product
-vm
/Applications/Eclipse.app/Contents/MacOS//../Eclipse/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.macosx.aarch64_17.0.10.v20240120-1143/jre/lib/libjli.dylib
eclipse.e4.inject.javax.warning=false
eclipse.home.location=file:/Applications/Eclipse.app/Contents/Eclipse/
eclipse.launcher=/Applications/Eclipse.app/Contents/MacOS/eclipse
eclipse.launcher.name=Eclipse
eclipse.p2.data.area=@config.dir/../p2
eclipse.p2.profile=epp.package.java
eclipse.product=org.eclipse.epp.package.java.product
eclipse.startTime=1712598201961
eclipse.stateSaveDelayInterval=30000
eclipse.vm=/Applications/Eclipse.app/Contents/MacOS//../Eclipse/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.macosx.aarch64_17.0.10.v20240120-1143/jre/lib/libjli.dylib
eclipse.vmargs=-Dorg.eclipse.ecf.provider.filetransfer.excludeContributors=org.eclipse.ecf.provider.filetransfer.httpclientjava
-Dosgi.requiredJavaVersion=17
-Dosgi.instance.area.default=@user.home/eclipse-workspace
-Dosgi.dataAreaRequiresExplicitInit=true
-Dorg.eclipse.swt.graphics.Resource.reportNonDisposed=true
-Declipse.e4.inject.javax.warning=false
-Dsun.java.command=Eclipse
-Xms256m
-Xmx8048m
-XX:+UseG1GC
-XX:+UseStringDeduplication
--add-modules=ALL-SYSTEM
-XstartOnFirstThread
-Dorg.eclipse.swt.internal.carbon.smallFonts
-Xdock:icon=../Resources/Eclipse.icns
-Djava.class.path=/Applications/Eclipse.app/Contents/MacOS//../Eclipse/plugins/org.eclipse.equinox.launcher_1.6.700.v20240213-1244.jar
java.vendor.version=Temurin-17.0.10+7
java.version=17.0.10
java.version.date=2024-01-16
java.vm.compressedOopsMode=Zero based
java.vm.info=mixed mode
java.vm.name=OpenJDK 64-Bit Server VM
java.vm.specification.name=Java Virtual Machine Specification
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=17
java.vm.vendor=Eclipse Adoptium
java.vm.version=17.0.10+7

*** Features:
org.eclipse.buildship (3.1.9.v20240115-1636) ""Buildship, Eclipse Plug-ins for Gradle""
org.eclipse.eclemma.feature (3.1.8.202312121452) ""EclEmma UI""
org.eclipse.egit (6.9.0.202403050737-r) ""Git integration for Eclipse""
org.eclipse.emf.common (2.31.0.v20231210-0956) ""EMF Common""
org.eclipse.emf.ecore (2.37.0.v20240203-0859) ""EMF Ecore""
org.eclipse.epp.mpc (1.10.3.v20240228-1000) ""Marketplace Client""
org.eclipse.epp.package.java.feature (4.31.0.20240307-1200) ""EPP Java Package""
org.eclipse.help (2.3.1700.v20240229-0520) ""Help System Base""
org.eclipse.jdt (3.19.400.v20240229-0520) ""Eclipse Java Development Tools""
org.eclipse.jgit (6.9.0.202403050737-r) ""JGit Core""
org.eclipse.jgit.gpg.bc (6.9.0.202403050737-r) ""JGit GPG support based on bouncycastle""
org.eclipse.jgit.http.apache (6.9.0.202403050737-r) ""JGit Apache httpclient based HTTP support""
org.eclipse.jgit.ssh.apache (6.9.0.202403050737-r) ""JGit SSH support based on Apache MINA sshd""
org.eclipse.justj.epp (17.0.0.v20240120-1430) ""JustJ JRE for IDE Packages""
org.eclipse.m2e.feature (2.6.0.20240220-1109) ""M2E Maven Integration for Eclipse Core""
org.eclipse.m2e.logback.feature (2.6.0.20240217-1525) ""M2E Maven Integration for Eclipse Core""
org.eclipse.mylyn.builds.feature (4.2.0.v20240212-0246) ""Mylyn Builds""
org.eclipse.mylyn.commons.activity.feature (4.2.0.v20240203-1124) ""Mylyn Tasks""
org.eclipse.mylyn.commons.feature (4.2.0.v20240220-1942) ""Mylyn Commons""
org.eclipse.mylyn.commons.identity.feature (4.2.0.v20240203-1124) ""Mylyn Commons""
org.eclipse.mylyn.commons.notifications.feature (4.2.0.v20240203-1124) ""Mylyn Commons""
org.eclipse.mylyn.commons.repositories.feature (4.2.0.v20240203-1124) ""Mylyn Commons""
org.eclipse.mylyn.context.feature (4.2.0.v20240221-0556) ""Mylyn Context""
org.eclipse.mylyn.egit.feature (4.2.0.v20240202-0700) ""Mylyn Tasks Core""
org.eclipse.mylyn.git.feature (4.2.0.v20240208-0919) ""Mylyn Versions""
org.eclipse.mylyn.github.feature (6.4.0.v20240209-1319) ""Mylyn Tasks Core""
org.eclipse.mylyn.ide.feature (4.2.0.v20240220-1733) ""Mylyn Context""
org.eclipse.mylyn.jdt.feature (4.2.0.v20240220-1733) ""Mylyn Context""
org.eclipse.mylyn.jenkins.feature (4.2.0.v20240212-0246) ""Mylyn Builds""
org.eclipse.mylyn.monitor.feature (4.2.0.v20240203-1124) ""Mylyn Commons""
org.eclipse.mylyn.reviews.feature (4.2.0.v20240207-0731) ""Mylyn Reviews""
org.eclipse.mylyn.tasks.feature (4.2.0.v20240305-1805) ""Mylyn Tasks Core""
org.eclipse.mylyn.team.feature (4.2.0.v20240220-1733) ""Mylyn Context""
org.eclipse.mylyn.versions.feature (4.2.0.v20240208-0919) ""Mylyn Versions""
org.eclipse.mylyn.wikitext.feature (4.2.0.v20240302-0923) ""Mylyn WikiText""
org.eclipse.oomph.p2 (1.29.0.v20240120-1356) ""Oomph P2 Management""
org.eclipse.oomph.setup (1.31.0.v20240306-1109) ""Oomph Setup""
org.eclipse.oomph.setup.core (1.30.0.v20240211-0940) ""Oomph Setup Core""
org.eclipse.platform (4.31.0.v20240229-1022) ""Eclipse Platform""
org.eclipse.rcp (4.31.0.v20240229-0520) ""Eclipse RCP""
org.eclipse.tm.terminal.connector.ssh.feature (11.5.0.202312281935) ""Terminal SSH Connector""
org.eclipse.tm.terminal.control.feature (11.5.0.202312281935) ""Terminal Control (Embeddable Widget)""
org.eclipse.tm.terminal.feature (11.5.0.202312062348) ""Terminal View Core""
org.eclipse.tm.terminal.view.feature (11.5.0.202312281935) ""Terminal View""
org.eclipse.userstorage (1.2.0.v20210517-0327) ""Eclipse User Storage""


```


Code is run with a standard Oracle JDK 

`java.vm.version=21.0.2+13-LTS-58`","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55y2I5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55y2eL,eclipse.jdt.debug,2043373451,309,NA,andy-goryachev-oracle,107069028,Andy Goryachev,,NA,2024-04-08T18:06:43Z,2024-04-08T18:06:43Z,"will check 4.32 M1 a bit later today, thank you.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55y2eL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55y4bN,eclipse.jdt.debug,2043381453,309,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-08T18:09:27Z,2024-04-08T18:09:27Z,"Looking on your config, some extra bundle might mess up with classpath, may be m2e or gradle support.
Please try with plain SDK and a new workspace.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55y4bN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55y6xL,eclipse.jdt.debug,2043391051,309,NA,andy-goryachev-oracle,107069028,Andy Goryachev,,NA,2024-04-08T18:16:14Z,2024-04-08T18:16:14Z,"this is a standard eclipse downloaded from the official site.  the only change I've made was to increase `-Xmx8048m` because we are building openjfx.

I am not sure how gradle got there.  I suppose when I installed a new macOS version it might have kept the gradle jars in the Application/Eclipse.app folders?

(the gradle support is absolutely required, but not for the workspace or code in question)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55y6xL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55y8Bl,eclipse.jdt.debug,2043396197,309,NA,andy-goryachev-oracle,107069028,Andy Goryachev,,NA,2024-04-08T18:19:35Z,2024-04-08T18:19:35Z,"here is the complete test case:

[ModularTest.zip](https://github.com/eclipse-jdt/eclipse.jdt.debug/files/14909705/ModularTest.zip)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55y8Bl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55zKba,eclipse.jdt.debug,2043455194,309,NA,andy-goryachev-oracle,107069028,Andy Goryachev,,NA,2024-04-08T18:54:16Z,2024-04-08T18:54:16Z,"tried with eclipse-SDK-4.32M1-macosx-cocoa-aarch64.dmg
copied from .dmb to an empty directory, launched from there, opened the workspace.

same issue.  I think, as @alerosmile has identified, the issue might be caused by a modular project (notice module-info.java in the zip I've sent earlier).

![Screenshot 2024-04-08 at 11 51 26](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/107069028/1c8dffb7-3121-4228-9ada-b49794950e54)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55zKba/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55zLqZ,eclipse.jdt.debug,2043460249,309,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-08T18:57:26Z,2024-04-08T18:57:26Z,"Thanks, I can't promise but I will try to debug this this week.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55zLqZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55zNJ8,eclipse.jdt.debug,2043466364,309,NA,andy-goryachev,5430849,Andy Goryachev,,NA,2024-04-08T19:01:42Z,2024-04-08T19:01:42Z,many thanks indeed!,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55zNJ8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M552Zy5,eclipse.jdt.debug,2044304569,309,NA,alerosmile,26764588,Roman Huber,,NA,2024-04-09T07:19:34Z,2024-04-09T07:19:34Z,@andy-goryachev-oracle: Can you please confirm that this issue doesn't exist with Eclipse 2023-06?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M552Zy5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M556nz2,eclipse.jdt.debug,2045410550,309,NA,andy-goryachev-oracle,107069028,Andy Goryachev,,NA,2024-04-09T15:04:03Z,2024-04-09T15:04:03Z,"Yes, it works with built-in JDK17 *and* JDK21, using Eclipse 4.28.0.20230608-1200 downloaded from 
https://www.eclipse.org/downloads/packages/release/2023-06/r

![Screenshot 2024-04-09 at 08 01 16](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/107069028/29954db4-c32b-41b5-a023-9f848562c690)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M556nz2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M558SII,eclipse.jdt.debug,2045846024,309,NA,alerosmile,26764588,Roman Huber,,NA,2024-04-09T18:35:28Z,2024-04-09T18:35:28Z,"Changing [this line ](https://github.com/eclipse-jdt/eclipse.jdt.debug/blob/7c57761f182f30e385b7c980f1f80390d75eadc2/org.eclipse.jdt.debug/model/org/eclipse/jdt/internal/debug/core/logicalstructures/JavaLogicalStructure.java#L138) to `OPTION_JdtDebugCompileMode` will fix the error.

But as stated in [this commit](https://github.com/eclipse-jdt/eclipse.jdt.debug/commit/f52ee5758f0fe241abae4e718d4e3cfc2b0a0e6c), this option seems to cause side effects I don't have knowledge of.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M558SII/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M56MKjF,eclipse.jdt.debug,2050009285,309,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-11T15:50:42Z,2024-04-11T15:50:42Z,"OK, finally got time to test the reproducer. 
I confirm this is easily reproducible, and **related** to https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/260 change.

What was surprising for me: if testing in a Java perspective (with Variables view *not* activated), the hover over variables shows proper (but not ""logical"") content **without** errors. 
Only after opening Variables view the hover ""remembers"" it should actually show logical structures and starts to misbehave. So we have another bug here, but that's not important one.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M56MKjF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M56MM_K,eclipse.jdt.debug,2050019274,309,NA,alerosmile,26764588,Roman Huber,,NA,2024-04-11T15:56:02Z,2024-04-11T15:56:02Z,"Isn't that intentional? If I change the option in the Variables view, the way the data is displayed on the hover should change as well.
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/26764588/a9a85e7c-bfa2-4339-b3a2-2b91c36ae466)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M56MM_K/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M56MScc,eclipse.jdt.debug,2050041628,309,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-11T16:08:44Z,2024-04-11T16:08:44Z,"Yes, but the hover should be able to understand that preference, if it is set, **without** Variables view being **active**.
But please let us discuss the original issue, my fault to add this observation here.

Looking on the code in debugger I see that the two options used differently (well, they are different :-)). 

https://github.com/eclipse-jdt/eclipse.jdt.core/blob/master/org.eclipse.jdt.core.compiler.batch/src/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java#L219

https://github.com/eclipse-jdt/eclipse.jdt.core/blob/master/org.eclipse.jdt.core.compiler.batch/src/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java#L221

@stephan-herrmann : your brain is needed, as it is all about https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/260 and `OPTION_IgnoreUnnamedModuleForSplitPackage` not being enough to replace `OPTION_JdtDebugCompileMode`.

May I ask you to look into this issue? Example self contained project is in https://github.com/eclipse-jdt/eclipse.jdt.debug/files/14909705/ModularTest.zip","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M56MScc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M56OZ2f,eclipse.jdt.debug,2050596255,309,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-04-11T21:37:13Z,2024-04-11T21:37:13Z,"> @stephan-herrmann : your brain is needed, as it is all about #260 and `OPTION_IgnoreUnnamedModuleForSplitPackage` not being enough to replace `OPTION_JdtDebugCompileMode`.
> 
> May I ask you to look into this issue? Example self contained project is in https://github.com/eclipse-jdt/eclipse.jdt.debug/files/14909705/ModularTest.zip

ack","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M56OZ2f/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M56Z6Ky,eclipse.jdt.debug,2053612210,309,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-04-13T11:00:14Z,2024-04-13T11:00:14Z,"Any chance to debug this in a JUnit test case?

I briefly looked if I could create that test case, but after finding `JDT Debug Evaluation Test Suite.launch` as the most promising point to start from, I couldn't even get that launch configuration to run any tests. A fresh workbench window opens, and all it does is wait for user input.

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M56Z6Ky/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M56Z7ZO,eclipse.jdt.debug,2053617230,309,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-04-13T11:18:40Z,2024-04-13T11:18:40Z,"Initial compile error:
`The package java.util is accessible from more than one module: ModularTest, java.base`

So, contrary to what we discussed in https://github.com/eclipse-jdt/eclipse.jdt.core/issues/445 the requirement by JDT/Debug is not just about allowing an unnamed/named module conflict, but also a conflict between **two named modules** should be ignored, right?

The former would be covered by `OPTION_IgnoreUnnamedModuleForSplitPackage` but the latter would never be acceptable during compilation proper, and hence no user-visible option will sanction this situation.

Is it a hard requirement in JDT/Debug to place the synthetic type `Map___` into package `java.util` and into the current JavaProject? This obviously violates a few Java rules, _unless_ we could tweak the structure in a way that options like `--patch-module` could be used.

I would indeed prefer a solution that could be made legal wrt JPMS.

If that fails, going back to and fixing `OPTION_JdtDebugCompileMode` would be a pragmatic approach.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M56Z7ZO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M56aBox,eclipse.jdt.debug,2053642801,309,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-04-13T13:10:43Z,2024-04-13T13:10:43Z,"> I would indeed prefer a solution that could be made legal wrt JPMS.

I didn't find an easy solution down this path.

> If that fails, going back to and fixing `OPTION_JdtDebugCompileMode` would be a pragmatic approach.

See https://github.com/eclipse-jdt/eclipse.jdt.core/pull/2340","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M56aBox/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M56bdUz,eclipse.jdt.debug,2054018355,309,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-14T11:33:12Z,2024-04-14T11:33:12Z,"@stephan-herrmann : once again, **many** thanks!

Tomorrow I-build on https://download.eclipse.org/eclipse/downloads/ should have the fix for the ticket.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M56bdUz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M56bgP7,eclipse.jdt.debug,2054030331,309,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-04-14T12:17:56Z,2024-04-14T12:17:56Z,"> @stephan-herrmann : once again, many thanks!

You're welcome :smile: 
... and sorry for proposing the use of OPTION_IgnoreUnnamedModuleForSplitPackage in the first place.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M56bgP7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M56jdv0,eclipse.jdt.debug,2056117236,309,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-15T08:19:25Z,2024-04-15T08:19:25Z,"Verified, works fine with I20240414-1800","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M56jdv0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/319,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/319,eclipse.jdt.debug,1929827852,319,Unsupported major.minor version 55.0,pepcim,135966517,,,CLOSED,2023-10-06T10:01:50Z,2023-10-09T11:27:30Z,"Hello,
I just installed Eclipse Version: 2022-03 (4.23.0)  // Build id: 20220310-1457
JAVa compile version(attached image): 1.7.80
When I try to debug I get following message:
Exception in thread ""main"" java.lang.UnsupportedClassVersionError: es/scsp/bo/services/emisores/especificos/SCDHPAJU/HAO_test : Unsupported major.minor version 55.0
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:449)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:71)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:361)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:482)

![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/135966517/13cbc327-ca60-4f8d-a694-dd6b77cd5283)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/319/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/319,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5oW5e5,eclipse.jdt.debug,1750833081,319,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-10-06T14:59:03Z,2023-10-06T14:59:03Z,"Please use JVM 11 to run your program, not Java 7.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5oW5e5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/319,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5oecYZ,eclipse.jdt.debug,1752811033,319,NA,pepcim,135966517,,,NA,2023-10-09T11:14:22Z,2023-10-09T11:14:22Z,"I need both, JAVA7 in order to compile the version I need.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5oecYZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/319,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5oeg79,eclipse.jdt.debug,1752829693,319,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-10-09T11:27:30Z,2023-10-09T11:27:30Z,"Please use JVM 11 to **run** your program, not Java 7.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5oeg79/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/320,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/320,eclipse.jdt.debug,1930143793,320,"System hangs after 2x resuming from ""SUSPEND_VM"" breakpoint",raghucssit,10301131,Raghunandana,,CLOSED,2023-10-06T13:04:07Z,2024-04-18T12:22:33Z,"If we have multiple `Suspend VM` breakpoint and all are executed at the end `Lauch Application` goes infinte and need to be terminated manually.
Please use the below snippet to reproduce the issue:
```
public class SuspendVm {
    public static void main(String[] args) {
    	Runtime.getRuntime().addShutdownHook(new Thread(""Printing Shutdown Hook"") {
    		@Override
    		public void run() {
    			System.out.println(""Shutdown called!"");
    		}
    	});
        System.out.print(""""); // set a ""suspend VM"" breakpoint here, and resume *thread*
        main();
        lastCall();
    }
	public static void main() {
    	System.out.println(""""); // set a ""suspend VM"" breakpoint here, and resume *VM*
    }
    private static void lastCall() {
		System.out.println(""Going to shutdown?""); // set a ""default"" breakpoint here, and resume *thread*
	}
}
```

Problem here is when each `Suspend VM` is hit it's count on JDB increases. In debugger UI selection remains on `Thread` on resume thread is resumed. But we have to initiate a `Resume` for every `Suspend` for `Virtual Machine` just like we do for `Threads`. This implmentation is missing.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/320/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/323,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/323,eclipse.jdt.debug,1941034674,323,DetectVMInstallationsJob open network connection,nitind,2684153,Nitin Dahyabhai,thatnitind@gmail.com,CLOSED,2023-10-13T00:46:41Z,2023-10-24T02:27:07Z,"On Eclipse 2023-09 (4.29), Temurin OpenJDK 17.0.4.1, macOS

In spite of the parser settings applied, the DetectVMInstallationsJob attempts to retrieve the DTD, which means opening a network connection to retrieve http://www.apple.com/DTDs/PropertyList-1.0.dtd for no benefit.

Thread [Worker-18: Look up for installed JVMs] (Suspended (breakpoint at line 1051 in HttpURLConnection))	
	HttpURLConnection.connect() line: 1051	
	HttpURLConnection.getInputStream0() line: 1665	
	HttpURLConnection.getInputStream() line: 1589	
	XMLEntityManager.setupCurrentEntity(boolean, String, XMLInputSource, boolean, boolean) line: 677	
	XMLEntityManager.startEntity(boolean, String, XMLInputSource, boolean, boolean) line: 1397	
	XMLEntityManager.startDTDEntity(XMLInputSource) line: 1363	
	XMLDTDScannerImpl.setInputSource(XMLInputSource) line: 257	
	XMLDocumentScannerImpl$DTDDriver.dispatch(boolean) line: 1152	
	XMLDocumentScannerImpl$DTDDriver.next() line: 1040	
	XMLDocumentScannerImpl$PrologDriver.next() line: 943	
	XMLDocumentScannerImpl.next() line: 605	
	XMLDocumentScannerImpl(XMLDocumentFragmentScannerImpl).scanDocument(boolean) line: 542	
	XIncludeAwareParserConfiguration(XML11Configuration).parse(boolean) line: 889	
	XIncludeAwareParserConfiguration(XML11Configuration).parse(XMLInputSource) line: 825	
	DOMParser(XMLParser).parse(XMLInputSource) line: 141	
	DOMParser.parse(InputSource) line: 247	
	DocumentBuilderImpl.parse(InputSource) line: 342	
	PListParser.parseXML(InputStream) line: 104	
	PListParser.parse(InputStream) line: 67	
	MacInstalledJREs.parseJREInfo(InputStream, IProgressMonitor) line: 160	
	MacInstalledJREs.parseJREInfo(IProcess, IProgressMonitor) line: 143	
	MacInstalledJREs.getInstalledJREs(IProgressMonitor) line: 113	
	DetectVMInstallationsJob.run(IProgressMonitor) line: 67	
	Worker.run() line: 63	
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/323/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/323,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5pI0DB,eclipse.jdt.debug,1763918017,323,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-10-16T07:50:04Z,2023-10-16T07:50:04Z,Would you please extend the junit test org.eclipse.pde.core.tests.internal.PDEXmlProcessorFactoryTest.testDocumentBuilderIgnoringDoctypeMalcious() / createMalciousXml with testdata that shows the error. If createDocumentBuilderIgnoringDOCTYPE still can be missused other usages might also need a fix.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5pI0DB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/323,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5pzNwv,eclipse.jdt.debug,1775033391,323,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-10-23T11:57:33Z,2023-10-23T11:57:33Z,@nitind can you please provide an example xml which opens a network connection?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5pzNwv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/323,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5pzlv-,eclipse.jdt.debug,1775131646,323,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-10-23T12:55:03Z,2023-10-23T12:55:03Z,i found an example here: https://developer.apple.com/forums/thread/6846,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5pzlv-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/323,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5p4bUb,eclipse.jdt.debug,1776399643,323,NA,nitind,2684153,Nitin Dahyabhai,thatnitind@gmail.com,NA,2023-10-24T02:26:41Z,2023-10-24T02:26:41Z,"From an actual system:

```
<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<array>
	<dict>
		<key>JVMArch</key>
		<string>x86_64</string>
		<key>JVMBundleID</key>
		<string>net.java.openjdk.jdk</string>
		<key>JVMEnabled</key>
		<true/>
		<key>JVMHomePath</key>
		<string>/Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home</string>
		<key>JVMName</key>
		<string>OpenJDK 17.0.4.1</string>
		<key>JVMPlatformVersion</key>
		<string>17.0.4.1</string>
		<key>JVMVendor</key>
		<string>Eclipse Adoptium</string>
		<key>JVMVersion</key>
		<string>17.0.4.1</string>
	</dict>
</array>
</plist>
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5p4bUb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/327,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/327,eclipse.jdt.debug,1950202832,327,"Attribute ""Without test code"" is ignored in the launcher",oleosterhagen,76391368,Ole Osterhagen,,CLOSED,2023-10-18T16:42:10Z,2023-12-06T02:48:51Z,"When adding a **project dependency** to an existing project, it is possible to set the _Without test code_ attribute, so that paths marked with _Contains test sources_ are not added to the classpath.

![grafik](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/76391368/eeb122b1-4ccd-48bb-ba4d-1b9da332df59)

This attribute is persisted as `without_test_code` in the `.classpath` file.

```
<classpathentry combineaccessrules=""false"" kind=""src"" path=""/projectA"">
    <attributes>
        <attribute name=""without_test_code"" value=""true""/>
    </attributes>
</classpathentry>

```

The incremental Java compiler already takes this attribute into account, so that marked test classes from the project dependency are not accessible. But when launching a JUnit test the resolved classpath contains the output locations for the unwanted test paths. Here is an example ([example.tar.gz](https://github.com/eclipse-jdt/eclipse.jdt.debug/files/13031193/example.tar.gz)):

```
Classpath of projectA

path=""main"", output=""bin/main""
path=""test"", output=""bin/test"", test=true


Classpath of projectB

path=""test"", output=""bin"", test=true
path=""/projectA"", without_test_code=true
```

When launching a test from `projectB`, classes from `/projectA/test` are accessible via reflection - but they should'nt. (The reflective access is necessary here, because in the Java editor the compiler already cannot see these classes.) It is possible to exclude all test code in the launcher (see tab _Dependencies_) - but this a different thing.

To solve this problem, the two `JavaRuntime.resolveRuntimeClasspathEntry(...)` methods ([one for launch configurations](https://github.com/eclipse-jdt/eclipse.jdt.debug/blob/399fc74f20715285613c0ced93edb5a82a5b0098/org.eclipse.jdt.launching/launching/org/eclipse/jdt/launching/JavaRuntime.java#L1222), [another for projects](https://github.com/eclipse-jdt/eclipse.jdt.debug/blob/399fc74f20715285613c0ced93edb5a82a5b0098/org.eclipse.jdt.launching/launching/org/eclipse/jdt/launching/JavaRuntime.java#L1470)) should evaluate the attribute `without_test_code` when resolving project dependencies.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/327/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/330,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/330,eclipse.jdt.debug,1959109149,330,Source Lookup: java.lang.IllegalArgumentException: URI is not hierarchical,Horcrux7,212693,Volker Berlin,vberlin@inetsoftware.de,CLOSED,2023-10-24T12:02:33Z,2023-11-02T12:38:49Z,"After updating from Eclipse 2023-06 to 2023-09 I was not able to lookup sources from other projects. In the error log you can see the follow stacktrace:

```
!ENTRY org.eclipse.debug.core 4 2 2023-10-24 13:21:49.059
!MESSAGE Problems occurred when invoking code from plug-in: ""org.eclipse.debug.core"".
!STACK 0
java.lang.IllegalArgumentException: URI is not hierarchical
	at java.base/java.io.File.<init>(File.java:420)
	at org.eclipse.jdt.internal.launching.sourcelookup.advanced.JDIHelpers.getClassesLocation(JDIHelpers.java:74)
	at org.eclipse.jdt.launching.sourcelookup.advanced.AdvancedSourceLookupParticipant.getSourceContainer(AdvancedSourceLookupParticipant.java:88)
	at org.eclipse.jdt.launching.sourcelookup.advanced.AdvancedSourceLookupParticipant.findSourceElements(AdvancedSourceLookupParticipant.java:72)
	at org.eclipse.debug.core.sourcelookup.AbstractSourceLookupDirector$SourceLookupQuery.run(AbstractSourceLookupDirector.java:138)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.debug.core.sourcelookup.AbstractSourceLookupDirector.doSourceLookup(AbstractSourceLookupDirector.java:473)
	at org.eclipse.debug.core.sourcelookup.AbstractSourceLookupDirector.getSourceElement_aroundBody0(AbstractSourceLookupDirector.java:714)
	at org.eclipse.debug.core.sourcelookup.AbstractSourceLookupDirector$AjcClosure1.run(AbstractSourceLookupDirector.java:1)
	at org.jetbrains.kotlin.aspects.debug.core.KotlinSourceLookupAspect.ajc$around$org_jetbrains_kotlin_aspects_debug_core_KotlinSourceLookupAspect$1$7ab8b34dproceed(KotlinSourceLookupAspect.aj:16)
	at org.jetbrains.kotlin.aspects.debug.core.KotlinSourceLookupAspect.ajc$around$org_jetbrains_kotlin_aspects_debug_core_KotlinSourceLookupAspect$1$7ab8b34d(KotlinSourceLookupAspect.aj:17)
	at org.eclipse.debug.core.sourcelookup.AbstractSourceLookupDirector.getSourceElement(AbstractSourceLookupDirector.java:714)
	at org.eclipse.debug.internal.ui.sourcelookup.SourceLookupFacility.lookup(SourceLookupFacility.java:303)
	at org.eclipse.debug.internal.ui.sourcelookup.SourceLookupFacility$SourceLookupTask.run(SourceLookupFacility.java:752)
	at org.eclipse.debug.internal.ui.sourcelookup.SourceLookupFacility$SourceLookupJob.run(SourceLookupFacility.java:690)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.debug.core 4 125 2023-10-24 13:21:49.059
!MESSAGE Error logged from Debug Core: 
!STACK 0
java.lang.IllegalArgumentException: URI is not hierarchical
	at java.base/java.io.File.<init>(File.java:420)
	at org.eclipse.jdt.internal.launching.sourcelookup.advanced.JDIHelpers.getClassesLocation(JDIHelpers.java:74)
	at org.eclipse.jdt.launching.sourcelookup.advanced.AdvancedSourceLookupParticipant.getSourceContainer(AdvancedSourceLookupParticipant.java:88)
	at org.eclipse.jdt.launching.sourcelookup.advanced.AdvancedSourceLookupParticipant.findSourceElements(AdvancedSourceLookupParticipant.java:72)
	at org.eclipse.debug.core.sourcelookup.AbstractSourceLookupDirector$SourceLookupQuery.run(AbstractSourceLookupDirector.java:138)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.debug.core.sourcelookup.AbstractSourceLookupDirector.doSourceLookup(AbstractSourceLookupDirector.java:473)
	at org.eclipse.debug.core.sourcelookup.AbstractSourceLookupDirector.getSourceElement_aroundBody0(AbstractSourceLookupDirector.java:714)
	at org.eclipse.debug.core.sourcelookup.AbstractSourceLookupDirector$AjcClosure1.run(AbstractSourceLookupDirector.java:1)
	at org.jetbrains.kotlin.aspects.debug.core.KotlinSourceLookupAspect.ajc$around$org_jetbrains_kotlin_aspects_debug_core_KotlinSourceLookupAspect$1$7ab8b34dproceed(KotlinSourceLookupAspect.aj:16)
	at org.jetbrains.kotlin.aspects.debug.core.KotlinSourceLookupAspect.ajc$around$org_jetbrains_kotlin_aspects_debug_core_KotlinSourceLookupAspect$1$7ab8b34d(KotlinSourceLookupAspect.aj:17)
	at org.eclipse.debug.core.sourcelookup.AbstractSourceLookupDirector.getSourceElement(AbstractSourceLookupDirector.java:714)
	at org.eclipse.debug.internal.ui.sourcelookup.SourceLookupFacility.lookup(SourceLookupFacility.java:303)
	at org.eclipse.debug.internal.ui.sourcelookup.SourceLookupFacility$SourceLookupTask.run(SourceLookupFacility.java:752)
	at org.eclipse.debug.internal.ui.sourcelookup.SourceLookupFacility$SourceLookupJob.run(SourceLookupFacility.java:690)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
```

The classes are loaded via custom classloader. The sources contains only the ""Default"" and other projects.

The problem was reproduced on two system from two developers. One on Windows 10 the other on Windows 11.

I have attched the complet log from Eclipse start until the erorr occur
[eclipse.log](https://github.com/eclipse-jdt/eclipse.jdt.debug/files/13114202/eclipse.log)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/330/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/330,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5p7DHJ,eclipse.jdt.debug,1777086921,330,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-10-24T12:11:48Z,2023-10-24T12:11:48Z,"Must be a regression from 535f18949761fae5f0bc194802ec0c603d3ddb27, @jukzi : FYI.

@Horcrux7: I see there is `org.jetbrains.kotlin.aspects.debug.core.KotlinSourceLookupAspect` in the stack, so you probably have some kotlin project there? Please consider to report this issue also to jetbrains, not sure what exactly they are trying to supply to the source lookup. 
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5p7DHJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/330,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5p7EBb,eclipse.jdt.debug,1777090651,330,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-10-24T12:14:29Z,2023-10-24T12:14:29Z,can you please report (debug?) which URI is used?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5p7EBb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/330,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5p7Iw4,eclipse.jdt.debug,1777110072,330,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-10-24T12:28:13Z,2023-10-24T12:28:13Z,"> can you please report (debug?) which URI is used?

I would propose we log that so we don't need to guess in the future, I will push a PR.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5p7Iw4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/330,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5p7Poe,eclipse.jdt.debug,1777138206,330,NA,Horcrux7,212693,Volker Berlin,vberlin@inetsoftware.de,NA,2023-10-24T12:46:23Z,2023-10-24T12:46:23Z,"> can you please report (debug?) which URI is used?

How can I do this?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5p7Poe/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/330,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5p7S-n,eclipse.jdt.debug,1777151911,330,NA,Horcrux7,212693,Volker Berlin,vberlin@inetsoftware.de,NA,2023-10-24T12:55:05Z,2023-10-24T12:55:05Z,"@iloveeclipse After I uninstall the Kotlin plugin the stack look like follow. Sounds not like a problem of Kotlin.

```
java.lang.IllegalArgumentException: URI is not hierarchical
	at java.base/java.io.File.<init>(File.java:420)
	at org.eclipse.jdt.internal.launching.sourcelookup.advanced.JDIHelpers.getClassesLocation(JDIHelpers.java:74)
	at org.eclipse.jdt.launching.sourcelookup.advanced.AdvancedSourceLookupParticipant.getSourceContainer(AdvancedSourceLookupParticipant.java:88)
	at org.eclipse.jdt.launching.sourcelookup.advanced.AdvancedSourceLookupParticipant.findSourceElements(AdvancedSourceLookupParticipant.java:72)
	at org.eclipse.debug.core.sourcelookup.AbstractSourceLookupDirector$SourceLookupQuery.run(AbstractSourceLookupDirector.java:138)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.debug.core.sourcelookup.AbstractSourceLookupDirector.doSourceLookup(AbstractSourceLookupDirector.java:473)
	at org.eclipse.debug.core.sourcelookup.AbstractSourceLookupDirector.getSourceElement(AbstractSourceLookupDirector.java:714)
	at org.eclipse.jdt.internal.debug.core.JavaDebugUtils.doSourceLookup(JavaDebugUtils.java:399)
	at org.eclipse.jdt.internal.debug.core.JavaDebugUtils.resolveSourceElement(JavaDebugUtils.java:393)
	at org.eclipse.jdt.internal.debug.core.JavaDebugUtils.resolveSourceElement(JavaDebugUtils.java:360)
	at org.eclipse.jdt.internal.debug.core.JavaDebugUtils.resolveJavaProject(JavaDebugUtils.java:415)
	at org.eclipse.jdt.internal.debug.ui.JavaWatchExpressionDelegate$EvaluationRunnable.run(JavaWatchExpressionDelegate.java:117)
	at org.eclipse.jdt.internal.debug.core.model.JDIThread$ThreadJob.run(JDIThread.java:3481)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5p7S-n/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/330,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5p7URH,eclipse.jdt.debug,1777157191,330,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-10-24T12:58:21Z,2023-10-24T12:58:21Z,"> How can I do this?

hopefully you get an I-Build next days which logs more info","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5p7URH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/330,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5p7XTz,eclipse.jdt.debug,1777169651,330,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-10-24T13:06:05Z,2023-10-24T13:06:05Z,"> After I uninstall the Kotlin plugin the stack look like follow. Sounds not like a problem of Kotlin.

Thanks. We will have **tomorrow** a nightly build that would add logging **which** URL makes trouble here.
It would be nice if you could try with it. The build will be available tomorrow at https://download.eclipse.org/eclipse/downloads/","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5p7XTz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/330,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5p7YHt,eclipse.jdt.debug,1777172973,330,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-10-24T13:08:13Z,2023-10-24T13:08:13Z,Just wondering if any of the related projects is located on some Windows NFS share? I vaguely remember we had troubles with Windows NFS URLs in the past.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5p7YHt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/330,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5p7Z9B,eclipse.jdt.debug,1777180481,330,NA,Horcrux7,212693,Volker Berlin,vberlin@inetsoftware.de,NA,2023-10-24T13:12:59Z,2023-10-24T13:12:59Z,"> Just wondering if any of the related projects is located on some Windows NFS share? I vaguely remember we had troubles with Windows NFS URLs in the past.

No, I think this are only projects in the workspace. Also parallel folders. I will look tomorrow with the new build.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5p7Z9B/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/330,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5qAu-g,eclipse.jdt.debug,1778577312,330,NA,Horcrux7,212693,Volker Berlin,vberlin@inetsoftware.de,NA,2023-10-25T06:09:01Z,2023-10-25T06:09:01Z,"After an Update to https://download.eclipse.org/eclipse/updates/4.30-I-builds/I20231024-1800/ it is working now. In the log i can see:

```
!ENTRY org.eclipse.jdt.launching 4 0 2023-10-25 07:53:41.757
!MESSAGE Unable to resolve class location from: 'file:C:/workspace_trunk/Security/bin/main/'
!STACK 0
java.lang.IllegalArgumentException: URI is not hierarchical
	at java.base/java.io.File.<init>(File.java:420)
	at org.eclipse.jdt.internal.launching.sourcelookup.advanced.JDIHelpers.getClassesLocation(JDIHelpers.java:78)
	at org.eclipse.jdt.launching.sourcelookup.advanced.AdvancedSourceLookupParticipant.getSourceContainer(AdvancedSourceLookupParticipant.java:88)
	at org.eclipse.jdt.launching.sourcelookup.advanced.AdvancedSourceLookupParticipant.findSourceElements(AdvancedSourceLookupParticipant.java:72)
	at org.eclipse.debug.core.sourcelookup.AbstractSourceLookupDirector$SourceLookupQuery.run(AbstractSourceLookupDirector.java:138)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.debug.core.sourcelookup.AbstractSourceLookupDirector.doSourceLookup(AbstractSourceLookupDirector.java:473)
	at org.eclipse.debug.core.sourcelookup.AbstractSourceLookupDirector.getSourceElement(AbstractSourceLookupDirector.java:714)
	at org.eclipse.debug.internal.ui.sourcelookup.SourceLookupFacility.lookup(SourceLookupFacility.java:303)
	at org.eclipse.debug.internal.ui.sourcelookup.SourceLookupFacility$SourceLookupTask.run(SourceLookupFacility.java:752)
	at org.eclipse.debug.internal.ui.sourcelookup.SourceLookupFacility$SourceLookupJob.run(SourceLookupFacility.java:690)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
```
Where `C:/workspace_trunk` is my workspace directory and `Security` is the project in which I have set the breakpoint. `bin/main`is the correct output directory set from Gradle for the src folder. I hope this help.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5qAu-g/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/330,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5qBKqN,eclipse.jdt.debug,1778690701,330,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-10-25T07:39:38Z,2023-10-25T07:39:38Z,"An accepted URI would be
`file:/C:/workspace_trunk/Security/bin/main/`
instead of
`file:C:/workspace_trunk/Security/bin/main/`
i.e. slash behind ""file:"" is missing.

i'll find a solution.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5qBKqN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/330,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5qBy9o,eclipse.jdt.debug,1778855784,330,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-10-25T09:20:17Z,2023-10-25T09:20:17Z,"which JDK is used for runnning Eclipse, and which for launching the debugee?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5qBy9o/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/330,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5qB9-l,eclipse.jdt.debug,1778900901,330,NA,Horcrux7,212693,Volker Berlin,vberlin@inetsoftware.de,NA,2023-10-25T09:47:43Z,2023-10-25T09:47:43Z,"> which JDK is used for runnning Eclipse, and which for launching the debugee?

Eclipse is running with the bundled Java VM. From the eclipse.ini

```
-vm
C:\eclipse\eclipse\\plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_17.0.8.v20230831-1047/jre/bin\server\jvm.dll
eclipse.vm=C:\eclipse\eclipse\\plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_17.0.8.v20230831-1047/jre/bin\server\jvm.dll
```

The launcher run with a Java 11 VM:

```
openjdk version ""11.0.11"" 2021-04-20
OpenJDK Runtime Environment AdoptOpenJDK-11.0.11+9 (build 11.0.11+9)
OpenJDK 64-Bit Server VM AdoptOpenJDK-11.0.11+9 (build 11.0.11+9, mixed mode)
```

If I use Java 17 then it is the same:
```
openjdk version ""17.0.2"" 2022-01-18
OpenJDK Runtime Environment Temurin-17.0.2+8 (build 17.0.2+8)
OpenJDK 64-Bit Server VM Temurin-17.0.2+8 (build 17.0.2+8, mixed mode, sharing)
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5qB9-l/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/330,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5qCGA-,eclipse.jdt.debug,1778933822,330,NA,Horcrux7,212693,Volker Berlin,vberlin@inetsoftware.de,NA,2023-10-25T10:07:50Z,2023-10-25T10:07:50Z,The bad path without the slash before the drive letter come form our custom classloader. This is a URLClassLoader and the URLs that we pass does not have the slash. If I add this then the exception in the log does not occur. I will fix this in our code.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5qCGA-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/334,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/334,eclipse.jdt.debug,1964679569,334,Test failure in org.eclipse.jdt.debug.tests.launching.InstanceMainMethodsTests,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,CLOSED,2023-10-27T03:03:33Z,2023-12-01T20:14:11Z,"https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/326

https://download.eclipse.org/eclipse/downloads/drops4/I20231026-1800/testresults/html/org.eclipse.jdt.debug.tests_ep430I-unit-macM1-java17_macosx.cocoa.aarch64_17.html","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/334/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/334,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5qPHfr,eclipse.jdt.debug,1782347755,334,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2023-10-27T06:04:54Z,2023-10-27T06:04:54Z,How is Mac configured to not fail on https://github.com/eclipse-jdt/eclipse.jdt.core/blob/master/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/Java21ElementTests.java ? ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5qPHfr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/334,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5qPIQR,eclipse.jdt.debug,1782350865,334,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-10-27T06:08:27Z,2023-10-27T06:08:27Z,"@akurtakov : please simply add a check for the Java version.
We need something like `org.eclipse.jdt.debug.testplugin.JavaProjectHelper.isJava19_Compatible()` for java 21","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5qPIQR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/334,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5qRdMb,eclipse.jdt.debug,1782960923,334,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-10-27T13:54:35Z,2023-10-27T13:54:35Z,"Alex, there is another problem **on Java 21**:

https://download.eclipse.org/eclipse/downloads/drops4/I20231027-0140/testresults/html/org.eclipse.jdt.debug.tests_ep430I-unit-cen64-gtk3-java21_linux.gtk.x86_64_21.html

```
Could not find launch configuration for Main2

junit.framework.AssertionFailedError: Could not find launch configuration for Main2
at junit.framework.Assert.fail(Assert.java:57)
at junit.framework.Assert.assertTrue(Assert.java:22)
at junit.framework.TestCase.assertTrue(TestCase.java:192)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.getLaunchConfiguration(AbstractDebugTest.java:1654)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.getLaunchConfiguration(AbstractDebugTest.java:1641)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.launchAndTerminate(AbstractDebugTest.java:1408)
at org.eclipse.jdt.debug.tests.launching.InstanceMainMethodsTests.testDefaultMainWithoutArgs(InstanceMainMethodsTests.java:53)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at junit.framework.TestCase.runTest(TestCase.java:177)
at junit.framework.TestCase.runBare(TestCase.java:142)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.runBare(AbstractDebugTest.java:2722)
at junit.framework.TestResult$1.protect(TestResult.java:122)
at junit.framework.TestResult.runProtected(TestResult.java:142)
at junit.framework.TestResult.run(TestResult.java:125)
at junit.framework.TestCase.run(TestCase.java:130)
at junit.framework.TestSuite.runTest(TestSuite.java:241)
at junit.framework.TestSuite.run(TestSuite.java:236)
at junit.framework.TestSuite.runTest(TestSuite.java:241)
at org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:61)
at java.base/java.lang.Thread.run(Thread.java:1583)
```

and 

```
Failed to create the 'Two_One' test project. 'jp' is 'null' Stack tace: java.lang.NullPointerException: Cannot invoke ""java.io.File.listFiles()"" because ""dir"" is null at org.eclipse.jdt.debug.testplugin.JavaProjectHelper.addJavaFiles(JavaProjectHelper.java:624) at org.eclipse.jdt.debug.testplugin.JavaProjectHelper.importFilesFromDirectory(JavaProjectHelper.java:582) at org.eclipse.jdt.debug.tests.AbstractDebugTest.createProject(AbstractDebugTest.java:981) at org.eclipse.jdt.debug.tests.AbstractDebugTest.assert21Project(AbstractDebugTest.java:592) at org.eclipse.jdt.debug.tests.AbstractDebugTest.get21Project(AbstractDebugTest.java:910) at org.eclipse.jdt.debug.tests.launching.InstanceMainMethodsTests.getProjectContext(InstanceMainMethodsTests.java:29) at org.eclipse.jdt.debug.tests.AbstractDebugTest.getLaunchConfiguration(AbstractDebugTest.java:1641) at org.eclipse.jdt.debug.tests.AbstractDebugTest.launchAndTerminate(AbstractDebugTest.java:1408) at org.eclipse.jdt.debug.tests.launching.InstanceMainMethodsTests.testStaticMainWithoutArgs(InstanceMainMethodsTests.java:37) at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) at java.base/java.lang.reflect.Method.invoke(Method.java:580) at junit.framework.TestCase.runTest(TestCase.java:177) at junit.framework.TestCase.runBare(TestCase.java:142) at org.eclipse.jdt.debug.tests.AbstractDebugTest.runBare(AbstractDebugTest.java:2722) at junit.framework.TestResult$1.protect(TestResult.java:122) at junit.framework.TestResult.runProtected(TestResult.java:142) at junit.framework.TestResult.run(TestResult.java:125) at junit.framework.TestCase.run(TestCase.java:130) at junit.framework.TestSuite.runTest(TestSuite.java:241) at junit.framework.TestSuite.run(TestSuite.java:236) at junit.framework.TestSuite.runTest(TestSuite.java:241) at org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:61) at java.base/java.lang.Thread.run(Thread.java:1583)

junit.framework.AssertionFailedError: Failed to create the 'Two_One' test project.
'jp' is 'null'
Stack tace:
java.lang.NullPointerException: Cannot invoke ""java.io.File.listFiles()"" because ""dir"" is null
at org.eclipse.jdt.debug.testplugin.JavaProjectHelper.addJavaFiles(JavaProjectHelper.java:624)
at org.eclipse.jdt.debug.testplugin.JavaProjectHelper.importFilesFromDirectory(JavaProjectHelper.java:582)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.createProject(AbstractDebugTest.java:981)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.assert21Project(AbstractDebugTest.java:592)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.get21Project(AbstractDebugTest.java:910)
at org.eclipse.jdt.debug.tests.launching.InstanceMainMethodsTests.getProjectContext(InstanceMainMethodsTests.java:29)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.getLaunchConfiguration(AbstractDebugTest.java:1641)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.launchAndTerminate(AbstractDebugTest.java:1408)
at org.eclipse.jdt.debug.tests.launching.InstanceMainMethodsTests.testStaticMainWithoutArgs(InstanceMainMethodsTests.java:37)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at junit.framework.TestCase.runTest(TestCase.java:177)
at junit.framework.TestCase.runBare(TestCase.java:142)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.runBare(AbstractDebugTest.java:2722)
at junit.framework.TestResult$1.protect(TestResult.java:122)
at junit.framework.TestResult.runProtected(TestResult.java:142)
at junit.framework.TestResult.run(TestResult.java:125)
at junit.framework.TestCase.run(TestCase.java:130)
at junit.framework.TestSuite.runTest(TestSuite.java:241)
at junit.framework.TestSuite.run(TestSuite.java:236)
at junit.framework.TestSuite.runTest(TestSuite.java:241)
at org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:61)
at java.base/java.lang.Thread.run(Thread.java:1583)

at junit.framework.Assert.fail(Assert.java:57)
at junit.framework.TestCase.fail(TestCase.java:223)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.handleProjectCreationException(AbstractDebugTest.java:762)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.assert21Project(AbstractDebugTest.java:610)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.get21Project(AbstractDebugTest.java:910)
at org.eclipse.jdt.debug.tests.launching.InstanceMainMethodsTests.getProjectContext(InstanceMainMethodsTests.java:29)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.getLaunchConfiguration(AbstractDebugTest.java:1641)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.launchAndTerminate(AbstractDebugTest.java:1408)
at org.eclipse.jdt.debug.tests.launching.InstanceMainMethodsTests.testStaticMainWithoutArgs(InstanceMainMethodsTests.java:37)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at junit.framework.TestCase.runTest(TestCase.java:177)
at junit.framework.TestCase.runBare(TestCase.java:142)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.runBare(AbstractDebugTest.java:2722)
at junit.framework.TestResult$1.protect(TestResult.java:122)
at junit.framework.TestResult.runProtected(TestResult.java:142)
at junit.framework.TestResult.run(TestResult.java:125)
at junit.framework.TestCase.run(TestCase.java:130)
at junit.framework.TestSuite.runTest(TestSuite.java:241)
at junit.framework.TestSuite.run(TestSuite.java:236)
at junit.framework.TestSuite.runTest(TestSuite.java:241)
at org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:61)
at java.base/java.lang.Thread.run(Thread.java:1583)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5qRdMb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/334,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5qRd_w,eclipse.jdt.debug,1782964208,334,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-10-27T13:56:53Z,2023-10-27T13:56:53Z,@akurtakov:  `org.eclipse.jdt.debug.tests/build.properties` should include new `java21` folder. Sorry haven't immediately seen that.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5qRd_w/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/334,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5qRf8d,eclipse.jdt.debug,1782972189,334,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2023-10-27T14:02:17Z,2023-10-27T14:02:17Z,Here it is https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/336,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5qRf8d/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/334,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5q321z,eclipse.jdt.debug,1793027443,334,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2023-11-03T20:04:18Z,2023-11-03T20:04:18Z,This one is fixed thus can be closed.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5q321z/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/337,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/337,eclipse.jdt.debug,1966683516,337,Have a way to (estimate) the size of an object?,laeubi,1331477,Christoph Läubrich,,OPEN,2023-10-28T17:48:18Z,2023-12-04T13:49:02Z,"What I'm currently missing when analyze memory problem is that I can see in a heapdump how much size an object has allocated, but later on in the debugger when analyze the problem one is a bit ""blind"".

It would be great if it would be possible to select a variable in the debug view and ask for the (direct and retained) size e.g. of a Map/List/....","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/337/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/337,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tl2w3,eclipse.jdt.debug,1838640183,337,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-12-04T13:24:53Z,2023-12-04T13:24:53Z,"size in matter of number of elements (OK), or size in matter of bytes (depends on JVM, may not change if a field is removed or added due to memory alignment)?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tl2w3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/337,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tl3kH,eclipse.jdt.debug,1838643463,337,NA,laeubi,1331477,Christoph Läubrich,,NA,2023-12-04T13:26:57Z,2023-12-04T13:26:57Z,"> size in matter of bytes

e.g JProfile and also other tools can show such information without taking a heap dump so the JVM seem to expose such data somehow to special agents and I supose a debugger is such special thing.

> (depends on JVM, may not change if a field is removed or added due to memory alignment)?

Usually my JVM does not change while I'm in a debugger session","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tl3kH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/337,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tl5Zc,eclipse.jdt.debug,1838650972,337,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-12-04T13:31:41Z,2023-12-04T13:31:41Z,"> Usually my JVM does not change while I'm in a debugger session

yea, but such numbers are typically guesses or at least not generally valid and may be misleading.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tl5Zc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/337,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tl8QV,eclipse.jdt.debug,1838662677,337,NA,laeubi,1331477,Christoph Läubrich,,NA,2023-12-04T13:38:44Z,2023-12-04T13:38:44Z,"> > Usually my JVM does not change while I'm in a debugger session
> 
> yea, but such numbers are typically guesses or at least not generally valid and may be misleading.

I don't need exact numbers, but it is important to ""see"" if my object is about 1 MB 10 MB or 100MB and if I change something it is maybe half that size (estimate).

I also don't need to compare numbers across different JVMs or different computers.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tl8QV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/337,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tl-1B,eclipse.jdt.debug,1838673217,337,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-12-04T13:45:03Z,2023-12-04T13:45:03Z,I believe I've seen recently code in JDT tests that did estimation of object size. Sorry can't remember where it was.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tl-1B/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/337,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tmAG2,eclipse.jdt.debug,1838678454,337,NA,laeubi,1331477,Christoph Läubrich,,NA,2023-12-04T13:48:08Z,2023-12-04T13:48:08Z,"@iloveeclipse @jukzi 

please have a look at https://docs.oracle.com/en/java/javase/17/docs/api/java.instrument/java/lang/instrument/Instrumentation.html

> This class provides services needed to instrument Java programming language code. Instrumentation is the addition of byte-codes to methods for the purpose of gathering data to be utilized by tools. Since the changes are purely additive, these tools do not modify application state or behavior. **Examples of such benign tools include** monitoring agents, **profilers**, coverage analyzers, and event loggers. 

It has a method [getObjectSize(...)](https://docs.oracle.com/en/java/javase/17/docs/api/java.instrument/java/lang/instrument/Instrumentation.html#getObjectSize(java.lang.Object))

> Returns an implementation-specific approximation of the amount of storage consumed by the specified object. The result may include some or all of the object's overhead, and thus is useful for comparison within an implementation but not between implementations. The estimate may change during a single invocation of the JVM.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tmAG2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/338,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/338,eclipse.jdt.debug,1967576456,338,Bad command name,Bananeweizen,406876,Michael Keppler,,CLOSED,2023-10-30T06:04:27Z,2023-10-30T07:28:56Z,"Actions can have an accelerator, commands must not have it.

![grafik](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/406876/a8a6b319-2da5-4d45-b2a1-10afb3537798)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/338/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/345,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/345,eclipse.jdt.debug,1984205499,345,"Debug ""step"" and  ""resume"" operations are grayed out with breakpoints in virtual threads",minduch,28196566,Christopher Mindus,,CLOSED,2023-11-08T18:39:31Z,2025-01-02T13:24:05Z,"Eclipse 2023-12 M2, Java Temurin 21.0.1.
Microsoft Windows [Version 10.0.23580.1000]

Launching debug of a Java Application project (uses Virtual Threads in case it matters) hits a breakpoint during its startup (after running a couple of seconds) the breakpoint `System.out.println(""HERE!"");` is encountered. Code is compiled for Java 17.

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/28196566/07b6e03b-ad0a-47a6-bf46-5e9c946b8326)

The debug operations ""step"" (into/over/return) and ""resume"" are grayed out and cannot be performed. Also note the tree view having two empty lines. It doesn't matter which thread I select in the Debug view, the operations in question are always disabled:

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/28196566/6be3f01e-c2fe-4c7a-b05c-0e4670084c5c)

This problem can be reproduced all the time.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/345/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/345,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5rb2gZ,eclipse.jdt.debug,1802463257,345,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-11-08T18:49:31Z,2023-11-08T18:49:31Z,"1) Is this a regression, and if yes, which version works?
2) Any chance to provide steps to reproduce / example project?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5rb2gZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/345,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5rcNXl,eclipse.jdt.debug,1802556901,345,NA,minduch,28196566,Christopher Mindus,,NA,2023-11-08T19:55:16Z,2023-11-08T19:55:16Z,"Worse in 2023-09 GA (+ Java 21 support added):

![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/28196566/e85797b9-1f73-4a46-b91b-fddc7f00a011)

However, with Java Temurin - Eclipse Adoptium 17.0.9+9 - it works fine in both IDE's. So it must be Java 17/21 related, here 2023-09 GA:

![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/28196566/5f45e807-f347-442f-af21-b9ed5fd192fc)

and also works in 2023-12 M2:

![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/28196566/f021435a-ac95-47f5-9744-755e8d8791f5)

Must I try to find a sample project, I don't have many of those?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5rcNXl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/345,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5rcPUq,eclipse.jdt.debug,1802564906,345,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-11-08T20:01:06Z,2023-11-08T20:01:06Z,"I'm lost. Ist this virtual threads related, how it can work on Java 17 which does not have virtual threads? Is this not related to virtual threads, what is the key difference in what you are doing & the rest of the world with working debugger?

Please try to isolate the root cause of your problem. IDE update, Java update, specific code you have or whatever else. 

Once you have that, try to provide steps to reproduce for us so we can fix the problem, whatever it is.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5rcPUq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/345,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5rcpAL,eclipse.jdt.debug,1802670091,345,NA,minduch,28196566,Christopher Mindus,,NA,2023-11-08T21:03:21Z,2023-11-08T21:03:21Z,"I think it's Java 21-related, or to be more sure, post-Java 17 specific. Virtual Threads were implemented from Java 19 and better, and we have preview support for it, but it's disabled. So the code being used targets Java 21 (only for the Virtual Threads part).

It's not IDE. It's Java 21. Using Java 20 (OpenJDK 64-Bit Server VM Temurin-20.0.2+9 (build 20.0.2+9, mixed mode, sharing)) and ""--enable-preview"" (VirtualThreads are used), the break-point enables the debug operations (step/resume), but has a problem in the Debug view (one thread missing that is sitting on the same breakpoint too, but in another thread):

![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/28196566/738bb380-5f82-47cb-9ff7-20b2617979a1)

When stepping and debugging code, the Debug view thread that is ""missing"":

![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/28196566/26f9b5af-4279-48f4-be96-6965ea4b7ae9)

Turning off ""--enable-preview"" in Java 20 makes it work:

![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/28196566/e4dd141c-b381-4c22-a706-5672a7aa2efb)

We have a command line option to disable Virtual Threads, so this problem seems to become clear now.
The Debug view with Virtual Threads has a problem when it hits breakpoints in one or more threads. This is using Java 21 without ""--enable-preview"" and our VirtualThreads turned OFF:

![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/28196566/50003036-064c-41ea-9578-e5d111c93405)

The interesting thing is that we only have one breakpoint at a time when VirtualThreads are off. So I guess somebody with more experience in this area should look at the problem (as it involves two ""probably"" Virtual Threads being break-point'ed, but I'm not sure).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5rcpAL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/345,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5rcqIu,eclipse.jdt.debug,1802674734,345,NA,minduch,28196566,Christopher Mindus,,NA,2023-11-08T21:07:19Z,2023-11-08T21:07:19Z,"@iloveeclipse Yep, I thinks this is an accurate description from the tests I have performed.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5rcqIu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/345,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5rctC-,eclipse.jdt.debug,1802686654,345,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-11-08T21:10:45Z,2023-11-08T21:10:45Z,"OK, could you please try to isolate some simple example that would allow us to reproduce the issue?
Or, if the application is available, provide steps to reproduce?

If this is caused by virtual threads, I assume one precondition is a breakpoint in code executed by a virtual thread. Most likely you have multiple virtual threads running in one ""real"" thread and hitting same breakpoint one after each other, and debugger confused by that (because it would be same real thread)?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5rctC-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/345,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5rcvGO,eclipse.jdt.debug,1802695054,345,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-11-08T21:17:55Z,2023-11-08T21:17:55Z,"I wonder if you can change the breakpoint to print current thread name, what you would see on console?
Also assuming there are multiple hits on same breakpoint, could you set hit count to one, just to see if debugger would ""work"" again? Unfortunately I have not much time to play with that, but I guess you could try to compose  simple example with virtual threads hitting same breakpoint again and again. If you could do that & it will reproduce the issue, it would help a lot.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5rcvGO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/345,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5rc4Bc,eclipse.jdt.debug,1802731612,345,NA,minduch,28196566,Christopher Mindus,,NA,2023-11-08T21:47:14Z,2023-11-08T21:47:14Z,"Well, that was not much help. If I use System.err, it will probably sync the threads somehow so then I don't get the problem at all. I however changed the code a bit instead of `System.err.println(""HERE!"");` to
```java
      ByteArrayOutputStream out=new ByteArrayOutputStream();
      try(PrintStream ps=new PrintStream(out))
        {
        new Exception(""StackTrace"").printStackTrace(ps);
        }
      System.err.println(""HERE: ""+new String(out.toByteArray()));
```
And set the break-point on the `System.err` line, and now THAT thread is OK in Debug view (display + enabled step/resume operations), and the other thread is NOT:
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/28196566/77097150-0860-4e95-ba57-5255b7550af8)
Above, I highlighted the other thread not shown in the Debug view, so the step/resume operations are disabled.

I'm not becoming less confused releasing all threads and looking at the printed stack traces, they all come from the same thread as it looks like, and there is no point in sharing this info here - it's just a plain stacktrace from the two `System.err` calls, all originating from `lThread[#48,stderr]/runnable@ForkJoinPool-1-worker-2  HERE: java.lang.Exception: StackTrace`, the name `lThread` indicates it's a Virtual Thread I think.

--> Forget the paragraph above, the `lThread` that is shown is the our `stderr` reader virtual thread, this is the thread actually being executed: `HERE: thread = Thread[#60,iiziServer,10,main] - thread group = java.lang.ThreadGroup[name=main,maxpri=10]` when I changed the code to
```java
      {
      System.err.println(""HERE: thread = ""+Thread.currentThread()+"" - thread group = ""+Thread.currentThread().getThreadGroup());
      }
```
and that is a Platform Thread.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5rc4Bc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/345,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M51eOI3,eclipse.jdt.debug,1970856503,345,NA,fdummert,3638091,,,NA,2024-02-29T10:38:31Z,2024-02-29T10:38:31Z,"We're having a multi-threaded app based on virtual threads. We're currently using Eclipse 20231201-2043 with jdt debug 3.21.200.v20231103-0755. The described behavior happens indeed when there are two suspended virtual threads. For me, it displays fine for a moment, but then after a moment one suspended thread disappears from the debug view, leaving blank lines:
![Screenshot_20240229_102320](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/3638091/17ab3d37-b176-4ca4-884b-d2e0f208e61c)
But the most annoying issue is, even with only one virtual thread on a breakpoint, that after <10s, with or without any action like stepping, expanding variables, ... the debug view collapses, variable view gets closed, stepping is disabled, and we have again to open the suspended thread, see screencast:
https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/3638091/b6426f63-cff2-446a-b429-8d136a9f7201
Sometimes the suspended virtual thread is even not shown at all:
![Screenshot_20240229_102342](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/3638091/86db36cc-7012-4f1e-ba17-e37afe90cbac)
That makes debugging virtual threads really painful. I'm not sure if this is easily reproducible with a toy app, but this is happening in many different apps we have, all based on virtual threads. Maybe for a reproducer you need to setup a simple web server app based on virtual threads (for example Jetty with workers based on virtual threads) and try to debug incoming requests to your test app.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M51eOI3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/345,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M59OFRw,eclipse.jdt.debug,2100843632,345,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-05-08T15:27:25Z,2024-05-08T15:27:25Z,"@fdummert, @minduch : if you would provide a simple self containing example project it would increase a chance for this bug to be addressed at some time.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M59OFRw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/345,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5-xfX7,eclipse.jdt.debug,2126902779,345,NA,fdummert,3638091,,,NA,2024-05-23T11:43:49Z,2024-05-23T11:43:49Z,"Hi @iloveeclipse, please use https://github.com/fdummert/EclipseVThreads.git as an example project that demonstrates the faulty behaviors. All three debugging blockers can be seen there: collapse of the debug view, vanishing of the suspended thread in the debug view, display of an empty line instead of the suspended thread in the debug view. A few details on how to debug are described in the readme file.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5-xfX7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/345,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6KkUl4,eclipse.jdt.debug,2324777336,345,NA,christian-elsen,46999974,,,NA,2024-09-02T13:34:20Z,2024-09-02T13:34:20Z,The problem still exists. Is there any further info required for to continue on this task? At time of writing the issue is still labeled with 'needinfo'.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6KkUl4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/345,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6QYKNc,eclipse.jdt.debug,2422252380,345,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-10-18T11:28:34Z,2024-10-18T11:28:34Z,"Can anyone interested in Virtual threads please test https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/535 ?
@christian-elsen @minduch @fdummert ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6QYKNc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/345,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Qp48T,eclipse.jdt.debug,2426900243,345,NA,fdummert,3638091,,,NA,2024-10-21T14:45:54Z,2024-10-21T14:45:54Z,@jukzi: We did a couple of tests with #535 and with this PR virtual thread debugging appears to be working fine!,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Qp48T/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/345,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6ZCzWB,eclipse.jdt.debug,2567648641,345,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-02T11:43:13Z,2025-01-02T11:43:13Z,Is this still an issue or fix so that it can it be closed?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6ZCzWB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/345,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6ZC0kp,eclipse.jdt.debug,2567653673,345,NA,fdummert,3638091,,,NA,2025-01-02T11:47:19Z,2025-01-02T11:47:19Z,"@jukzi: as per my [comment](https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/345#issuecomment-2426900243) above, it is working flawlessly for us","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6ZC0kp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/345,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6ZDRLl,eclipse.jdt.debug,2567770853,345,NA,minduch,28196566,Christopher Mindus,,NA,2025-01-02T13:24:04Z,2025-01-02T13:24:04Z,"I haven’t seen this problem for a while. For me, you can close it. We can always create another ticket in case it comes back.

Message ID: ***@***.***>
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6ZDRLl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/347,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/347,eclipse.jdt.debug,1989349746,347,"Please provide a ""Ignore in this session"" option if hot-code replace fails",laeubi,1331477,Christoph Läubrich,,CLOSED,2023-11-12T10:54:01Z,2025-01-16T12:10:30Z,"Currently when hot-code replace fails I get a dialog like this:

![grafik](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/1331477/a8e18bcf-b9b5-4c26-963b-710aa24734f4)

the only option seem to **always** ignore the problem, but it would be useful to only ignore it in this debug session.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/347/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/347,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5rvOxD,eclipse.jdt.debug,1807543363,347,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2023-11-13T06:28:48Z,2023-11-13T06:28:48Z,"For most of the preferences, ""Ignore for this session"" might be valid.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5rvOxD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/351,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/351,eclipse.jdt.debug,2013820734,351,debug tree is slow with lots of thread creation,grandinj,796121,Noel Grandin,,CLOSED,2023-11-28T07:27:15Z,2025-01-09T14:25:03Z,"I have a couple of apps that are rather thread-heavy, as in 10s of threads and threads being created/removed every second or so.

The tree in the debug view gets reallllly slow, and even when the programs terminate, I can see that Eclipse is still busy updating the tree view in the debugger for several minutes after.

Is this a known issue? Any workarounds?

Sample stack trace of where Eclipse is getting stuck:

""main"" #1 [10932] prio=6 os_prio=0 cpu=1671875.00ms elapsed=3480.47s tid=0x00000289dea3efc0 nid=10932 runnable [0x000000d218efd000]
java.lang.Thread.State: RUNNABLE
at org.eclipse.swt.internal.win32.OS.CallWindowProc(Native Method)
at org.eclipse.swt.widgets.Tree.callWindowProc(Tree.java:1576)
at org.eclipse.swt.widgets.Control.windowProc(Control.java:4845)
at org.eclipse.swt.widgets.Tree.windowProc(Tree.java:6142)
at org.eclipse.swt.widgets.Display.windowProc(Display.java:5040)
at org.eclipse.swt.internal.win32.OS.SendMessage(Native Method)
at org.eclipse.swt.widgets.Tree.findItem(Tree.java:2909)
at org.eclipse.swt.widgets.TreeItem.getItem(TreeItem.java:720)
at org.eclipse.jface.viewers.TreeViewer.replace(TreeViewer.java:469)
at org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider.handleAdd(TreeModelContentProvider.java:1358)
at org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider.updateNodes(TreeModelContentProvider.java:1276)
at org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider.updateNodes(TreeModelContentProvider.java:1312)
at org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider.updateNodes(TreeModelContentProvider.java:1312)
at org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider.updateNodes(TreeModelContentProvider.java:1312)
at org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider.updateModel(TreeModelContentProvider.java:576)
at org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider.doModelChanged(TreeModelContentProvider.java:543)
at org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider$DelayedDoModelChangedJob.runInUIThread(TreeModelContentProvider.java:449)
at org.eclipse.ui.progress.UIJob.lambda$0(UIJob.java:148)
at org.eclipse.ui.progress.UIJob$$Lambda/0x0000028981aa2438.run(Unknown Source)
at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
- locked <0x0000000774d00830> (a org.eclipse.swt.widgets.RunnableLock)
at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4047)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3663)
at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:645)
at org.eclipse.ui.internal.Workbench$$Lambda/0x00000289811ffa88.run(Unknown Source)
at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:552)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/351/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/351,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tKVkC,eclipse.jdt.debug,1831426306,351,NA,grandinj,796121,Noel Grandin,,NA,2023-11-29T08:23:18Z,2023-11-29T08:23:18Z,"This appears to be the same thing as this issue: https://bugs.eclipse.org/bugs/show_bug.cgi?id=552328

However, adding the system properties mentioned there:

    -Dorg.eclipse.jdt.internal.debug.core.model.ThreadNameChangeListener.disable=true
    -Dorg.eclipse.jdt.debug.ui/org.eclipse.jdt.debug.ui.javaDebug.ListenOnThreadNameChanges=false 

does not help my situation. Taking a heap dump of the running process, I see I have 164 megabytes worth of TreeModelContentProvider$DelayedDoModelChangedJob.

Sampling some more stack traces, I see lots of:
     at org.eclipse.swt.internal.win32.OS.SendMessage(Native Method)
        at org.eclipse.swt.widgets.Tree.getSelection(Tree.java:3503)
        at org.eclipse.swt.widgets.Tree.getSelection(Tree.java:3523)
        at org.eclipse.swt.widgets.Tree.getSelection(Tree.java:3523)
        at org.eclipse.swt.widgets.Tree.getSelection(Tree.java:3573)
        at org.eclipse.jface.viewers.TreeViewer.getSelection(TreeViewer.java:232)
        at org.eclipse.jface.viewers.AbstractTreeViewer.getSelection(AbstractTreeViewer.java:3109)
        at org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:1414)
        at org.eclipse.jface.viewers.TreeViewer.preservingSelection(TreeViewer.java:366)
        at org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:1364)
        at org.eclipse.jface.viewers.TreeViewer.remove(TreeViewer.java:822)

which leads me to think that someone implemented some kind of ""preserve the selection when updating the tree"" in JFace, which is leading to a dramatic slowdown in processing tree updates.

Looking at this, it seems to me that
(a) TreeViewer really really needs some kind of bulk-update mechanism to reduce the number of times it needs to call getSelection()
(b) either the job queue needs some kind of coalescing mechanism, so that new entries are merged with existing entries, or the thing that adds items to the job queue needs to be taught to generate updates in bulk, rather than in single items.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tKVkC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/351,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tLsBK,eclipse.jdt.debug,1831780426,351,NA,grandinj,796121,Noel Grandin,,NA,2023-11-29T12:13:22Z,2023-11-29T12:13:22Z,This bug is most likely caused by https://github.com/eclipse-platform/eclipse.platform/commit/485d05449115e746767fb9516931c39249d5ecec,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tLsBK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/351,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tLtCe,eclipse.jdt.debug,1831784606,351,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-11-29T12:16:10Z,2023-11-29T12:16:10Z,"> This bug is most likely caused by [eclipse-platform/eclipse.platform@485d054](https://github.com/eclipse-platform/eclipse.platform/commit/485d05449115e746767fb9516931c39249d5ecec)

Why do you think so? Without that change UI will be not slow but simply frozen.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tLtCe/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/351,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tLt0g,eclipse.jdt.debug,1831787808,351,NA,grandinj,796121,Noel Grandin,,NA,2023-11-29T12:18:16Z,2023-11-29T12:18:16Z,"> 
> Why do you think so? Without that change UI will be not slow but simply frozen.

Previously the tree would have processed very large batches at a time, only calling the very slow getSelection() once per batch.

Now the batches are much much smaller, meaning the tree calls getSelection() very often, and getSelection() is very slow.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tLt0g/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/351,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tLuZN,eclipse.jdt.debug,1831790157,351,NA,grandinj,796121,Noel Grandin,,NA,2023-11-29T12:19:49Z,2023-11-29T12:19:49Z,"Please note that I mean no disrespect, and I may well be wrong here - I am a long-time Java developer and Eclipse user, but I am making educated guesses based on what I see in the Eclipse code.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tLuZN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/351,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tLv9p,eclipse.jdt.debug,1831796585,351,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-11-29T12:24:08Z,2023-11-29T12:24:08Z,"> meaning the tree calls getSelection() very often

Can you provide **full** stack trace that shows this method called from the debugger code? The issue description only shows some incomplete stack trace.

Also if you could provide an example project that shows the issue, it would be much easier to discuss about possible root cause & solution.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tLv9p/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/351,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tLxsi,eclipse.jdt.debug,1831803682,351,NA,grandinj,796121,Noel Grandin,,NA,2023-11-29T12:28:39Z,2023-11-29T12:28:39Z,"The full stack trace looks like the below. 
I unfortunately cannot share this project, it is a proprietary application I am developing.


""main"" #1 [3984] prio=6 os_prio=0 cpu=116000.00ms elapsed=386.28s tid=0x000001cfd6621be0 nid=3984 runnable  [0x00000076d64fd000]
   java.lang.Thread.State: RUNNABLE
        at org.eclipse.swt.internal.win32.OS.SendMessage(Native Method)
        at org.eclipse.swt.widgets.Tree.getSelection(Tree.java:3503)
        at org.eclipse.swt.widgets.Tree.getSelection(Tree.java:3523)
        at org.eclipse.swt.widgets.Tree.getSelection(Tree.java:3523)
        at org.eclipse.swt.widgets.Tree.getSelection(Tree.java:3573)
        at org.eclipse.jface.viewers.TreeViewer.getSelection(TreeViewer.java:232)
        at org.eclipse.jface.viewers.AbstractTreeViewer.getSelection(AbstractTreeViewer.java:3109)
        at org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:1414)
        at org.eclipse.jface.viewers.TreeViewer.preservingSelection(TreeViewer.java:366)
        at org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:1364)
        at org.eclipse.jface.viewers.TreeViewer.remove(TreeViewer.java:822)
        at org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider.handleRemove(TreeModelContentProvider.java:1560)
        at org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider.updateNodes(TreeModelContentProvider.java:1279)
        at org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider.updateNodes(TreeModelContentProvider.java:1312)
        at org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider.updateNodes(TreeModelContentProvider.java:1312)
        at org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider.updateNodes(TreeModelContentProvider.java:1312)
        at org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider.updateModel(TreeModelContentProvider.java:575)
        at org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider.doModelChanged(TreeModelContentProvider.java:543)
        at org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider$DelayedDoModelChangedJob.runInUIThread(TreeModelContentProvider.java:449)
        at org.eclipse.ui.progress.UIJob.lambda$0(UIJob.java:148)
        at org.eclipse.ui.progress.UIJob$$Lambda/0x000001cf81979b88.run(Unknown Source)
        at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
        at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
        - locked <0x00000006ff176db8> (a org.eclipse.swt.widgets.RunnableLock)
        at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4047)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3663)
        at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
        at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
        at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
        at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
        at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:645)
        at org.eclipse.ui.internal.Workbench$$Lambda/0x000001cf8121f338.run(Unknown Source)
        at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
        at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:552)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
        at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
        at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
        at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
        at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
        at java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(java.base@21.0.1/DirectMethodHandle$Holder)
        at java.lang.invoke.LambdaForm$MH/0x000001cf81007800.invoke(java.base@21.0.1/LambdaForm$MH)
        at java.lang.invoke.LambdaForm$MH/0x000001cf81007c00.invokeExact_MT(java.base@21.0.1/LambdaForm$MH)
        at jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl(java.base@21.0.1/DirectMethodHandleAccessor.java:155)
        at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(java.base@21.0.1/DirectMethodHandleAccessor.java:103)
        at java.lang.reflect.Method.invoke(java.base@21.0.1/Method.java:580)
        at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
        at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
        at org.eclipse.equinox.launcher.Main.run(Main.java:1459)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tLxsi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/351,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tLywT,eclipse.jdt.debug,1831808019,351,NA,grandinj,796121,Noel Grandin,,NA,2023-11-29T12:31:35Z,2023-11-29T12:31:35Z,"Attaching leak report from the heap dump I took while Eclipse was chewing away on the queue of jobs (after I had already quite the applications I was debugging)
[leak-report.pdf](https://github.com/eclipse-jdt/eclipse.jdt.debug/files/13500503/leak-report.pdf)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tLywT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/351,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tL0oD,eclipse.jdt.debug,1831815683,351,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-11-29T12:36:04Z,2023-11-29T12:36:04Z,"> I unfortunately cannot share this project, it is a proprietary application I am developing.

We have limited resources. If the problem is important to you, maybe you can try to provide an example project ""inspired"" by your application, that can demonstrate the issue.

I see that the stack doesn't match current master. Which Eclipse version do you use? 
Can you please try with 4.30 RC2? See https://download.eclipse.org/eclipse/downloads/","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tL0oD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/351,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tL-1B,eclipse.jdt.debug,1831857473,351,NA,grandinj,796121,Noel Grandin,,NA,2023-11-29T13:03:03Z,2023-11-29T13:03:03Z,"So I tried to create a replica project to demonstrate the problem.
But a simple application that just spawns lots of threads does not trigger the problem (obviously, or you would likely have noticed it yourself).

So it must be something weird about my application that is triggering the debug code (either in the VM or in Eclipse) to generate large numbers of events. Unfortunately this is a very old and large application with lots of moving parts, so tricky to isolate the problem area.

But I have used the eclipse heap dump to examine one of the events (see screenshot below). Does this mean anything to you?

For example I see that the event is called ""JDI thread evaluations"" ?

![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/796121/a2058251-a368-4019-9df1-587174c167ad)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tL-1B/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/351,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tRCPg,eclipse.jdt.debug,1833182176,351,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-11-30T06:28:10Z,2023-11-30T06:28:10Z,"> Does this mean anything to you?

Not really.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tRCPg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/351,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tRCf5,eclipse.jdt.debug,1833183225,351,NA,grandinj,796121,Noel Grandin,,NA,2023-11-30T06:29:17Z,2023-11-30T06:29:17Z,"So I have a simple reproducer project, which confirms a thought I had last night, that something in my codebase is creating a very large number of short-lived threads.

[SlowDebugTreeProject.zip](https://github.com/eclipse-jdt/eclipse.jdt.debug/files/13509247/SlowDebugTreeProject.zip)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tRCf5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/351,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tRDDl,eclipse.jdt.debug,1833185509,351,NA,grandinj,796121,Noel Grandin,,NA,2023-11-30T06:31:42Z,2023-11-30T06:31:42Z,"Run the reproducer for 10 or 20 seconds (with the JDT debug view open), then close the sample window. The debug tree will keep processing for 30 seconds or more after the application is closed.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tRDDl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/351,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tRhlh,eclipse.jdt.debug,1833310561,351,NA,grandinj,796121,Noel Grandin,,NA,2023-11-30T08:29:30Z,2023-11-30T08:29:30Z,"Hmmm, my bug looks exactly like this one: https://bugs.eclipse.org/bugs/show_bug.cgi?id=573810

And similar to that one, it looks like all the high-velocity threads in my debugger view are GC threads, they don't seem to be coming from my application (I checked this by comparing that I see in eclipse to what I see when running the jstack command)

But I have ""Show System Threads"" turned off, so it seems to me that the problem is that Eclipse is not filtering out the GC threads properly. 
Or maybe the VM is not reporting the fact that they are system threads?
This is running with jdk-11.0.20.8-hotspot on a Windows10 machine.
Altthough I can reproduce the problem with jdk-17.0.5.8-hotspot and jdk-21-01
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tRhlh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/351,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5z3Coy,eclipse.jdt.debug,1943808562,351,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-14T13:50:29Z,2024-02-14T13:50:29Z,"Removed needinfo, as the reproducer project is given in https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/351#issuecomment-1833183225
i can reproduce it is slow - but at least it does not freeze.
Pull Request with an improvement would be very welcome. If you won't work on it yourself it is unlikely to be further improved and we would close the issue as ""not planned""","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5z3Coy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/351,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5z3G3N,eclipse.jdt.debug,1943825869,351,NA,grandinj,796121,Noel Grandin,,NA,2024-02-14T14:00:40Z,2024-02-14T14:00:40Z,">  Pull Request with an improvement would be very welcome. 

Any code pointers as to where the events originate? From my initial debugging it looks like the filtering needs to be pushed to the source, we cannot rely on improving the processing of events, we need to prevent the source from generating the events.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5z3G3N/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/351,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5z3I1P,eclipse.jdt.debug,1943833935,351,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-14T14:05:08Z,2024-02-14T14:05:08Z,"I do not remember, but you could put a breakpoint in the Constructor of the Event classes created,  probably somewhere here:
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/51790620/2aa6e772-44a2-4685-8c54-c23c1b4f50cf)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5z3I1P/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/351,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6ZzS90,eclipse.jdt.debug,2580361076,351,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-09T14:25:03Z,2025-01-09T14:25:03Z,closing as not planned,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6ZzS90/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/353,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/353,eclipse.jdt.debug,2020949622,353,Distinct JDI test names ,jukzi,51790620,Jörg Kubitz,,CLOSED,2023-12-01T14:07:10Z,2023-12-04T13:22:30Z,"Which method fail?
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/51790620/aadb1ad8-9c17-4ea3-9573-8828c4165f66)

![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/51790620/0d7cd028-ab27-4cb5-8908-9d97c1978a13)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/353/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/353,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tchMh,eclipse.jdt.debug,1836192545,353,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-12-01T14:17:51Z,2023-12-01T14:17:51Z,"
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/51790620/30dfacd9-306e-4e1b-b63c-b527d28320ef)
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/51790620/c6d54a69-2046-49a5-a30b-596df85d5320)
that looks better","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5tchMh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/356,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/356,eclipse.jdt.debug,2023500008,356,IllegalStateException: Workspace is already closed or not ready yet,kwin,185025,Konrad Windszus,,CLOSED,2023-12-04T10:20:04Z,2024-07-30T14:49:33Z,"The key issue is that ResourcesPlugin.getWorkspace() is called during bundle start of the jdt.internal.launching.LaunchingPlugin 

https://github.com/eclipse-jdt/eclipse.jdt.debug/blob/1515a46e6ab94ec2947e9cfd346bec785b1520ef/org.eclipse.jdt.launching/launching/org/eclipse/jdt/internal/launching/LaunchingPlugin.java#L561

I see exceptions like these

```
java.lang.ClassNotFoundException: An error occurred while automatically activating bundle org.eclipse.jdt.launching (457).
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:126)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:570)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:335)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:397)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:41)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass0(BundleLoader.java:479)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:416)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:168)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)
	at java.base/java.lang.Class.getDeclaredMethods0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3578)
	at java.base/java.lang.Class.getDeclaredMethod(Class.java:2846)
	at org.apache.felix.scr.impl.inject.methods.BaseMethod.getMethod(BaseMethod.java:347)
	at org.apache.felix.scr.impl.inject.methods.ActivateMethod.doFindMethod(ActivateMethod.java:70)
	at org.apache.felix.scr.impl.inject.methods.BaseMethod.findMethod(BaseMethod.java:173)
	at org.apache.felix.scr.impl.inject.methods.BaseMethod.access$400(BaseMethod.java:41)
	at org.apache.felix.scr.impl.inject.methods.BaseMethod$NotResolved.resolve(BaseMethod.java:624)
	at org.apache.felix.scr.impl.inject.methods.BaseMethod$NotResolved.methodExists(BaseMethod.java:648)
	at org.apache.felix.scr.impl.inject.methods.BaseMethod.methodExists(BaseMethod.java:550)
	at org.apache.felix.scr.impl.inject.methods.ActivateMethod.invoke(ActivateMethod.java:315)
	at org.apache.felix.scr.impl.inject.methods.ActivateMethod.invoke(ActivateMethod.java:307)
	at org.apache.felix.scr.impl.manager.SingleComponentManager.createImplementationObject(SingleComponentManager.java:354)
	at org.apache.felix.scr.impl.manager.SingleComponentManager.createComponent(SingleComponentManager.java:115)
	at org.apache.felix.scr.impl.manager.SingleComponentManager.getService(SingleComponentManager.java:1002)
	at org.apache.felix.scr.impl.manager.SingleComponentManager.getServiceInternal(SingleComponentManager.java:975)
	at org.apache.felix.scr.impl.manager.SingleComponentManager.getService(SingleComponentManager.java:920)
	at org.eclipse.osgi.internal.serviceregistry.ServiceFactoryUse$1.run(ServiceFactoryUse.java:218)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:319)
	at org.eclipse.osgi.internal.serviceregistry.ServiceFactoryUse.factoryGetService(ServiceFactoryUse.java:215)
	at org.eclipse.osgi.internal.serviceregistry.ServiceFactoryUse.getService(ServiceFactoryUse.java:114)
	at org.eclipse.osgi.internal.serviceregistry.ServiceConsumer$2.getService(ServiceConsumer.java:48)
	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistrationImpl.getService(ServiceRegistrationImpl.java:568)
	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.getService(ServiceRegistry.java:542)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.getService(BundleContextImpl.java:660)
	at org.osgi.util.tracker.ServiceTracker.addingService(ServiceTracker.java:419)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:947)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:1)
	at org.osgi.util.tracker.AbstractTracked.trackAdding(AbstractTracked.java:258)
	at org.osgi.util.tracker.AbstractTracked.track(AbstractTracked.java:231)
	at org.osgi.util.tracker.ServiceTracker$Tracked.serviceChanged(ServiceTracker.java:907)
	at org.eclipse.osgi.internal.serviceregistry.FilteredServiceListener.serviceChanged(FilteredServiceListener.java:123)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.dispatchEvent(BundleContextImpl.java:961)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.publishServiceEventPrivileged(ServiceRegistry.java:945)
	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.publishServiceEvent(ServiceRegistry.java:882)
	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistrationImpl.register(ServiceRegistrationImpl.java:144)
	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.registerService(ServiceRegistry.java:270)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.registerService(BundleContextImpl.java:500)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager$3.register(AbstractComponentManager.java:929)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager$3.register(AbstractComponentManager.java:915)
	at org.apache.felix.scr.impl.manager.RegistrationManager.changeRegistration(RegistrationManager.java:133)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.registerService(AbstractComponentManager.java:984)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.activateInternal(AbstractComponentManager.java:752)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.enableInternal(AbstractComponentManager.java:674)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.enable(AbstractComponentManager.java:437)
	at org.apache.felix.scr.impl.manager.ConfigurableComponentHolder.enableComponents(ConfigurableComponentHolder.java:671)
	at org.apache.felix.scr.impl.BundleComponentActivator.initialEnable(BundleComponentActivator.java:310)
	at org.apache.felix.scr.impl.Activator.loadComponents(Activator.java:593)
	at org.apache.felix.scr.impl.Activator.access$200(Activator.java:74)
	at org.apache.felix.scr.impl.Activator$ScrExtension.start(Activator.java:460)
	at org.apache.felix.scr.impl.AbstractExtender.createExtension(AbstractExtender.java:196)
	at org.apache.felix.scr.impl.AbstractExtender.modifiedBundle(AbstractExtender.java:169)
	at org.apache.felix.scr.impl.AbstractExtender.addingBundle(AbstractExtender.java:139)
	at org.apache.felix.scr.impl.AbstractExtender.addingBundle(AbstractExtender.java:49)
	at org.osgi.util.tracker.BundleTracker$Tracked.customizerAdding(BundleTracker.java:477)
	at org.osgi.util.tracker.BundleTracker$Tracked.customizerAdding(BundleTracker.java:1)
	at org.osgi.util.tracker.AbstractTracked.trackAdding(AbstractTracked.java:258)
	at org.osgi.util.tracker.AbstractTracked.track(AbstractTracked.java:231)
	at org.osgi.util.tracker.BundleTracker$Tracked.bundleChanged(BundleTracker.java:452)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.dispatchEvent(BundleContextImpl.java:949)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.osgi.internal.framework.EquinoxEventPublisher.publishBundleEventPrivileged(EquinoxEventPublisher.java:229)
	at org.eclipse.osgi.internal.framework.EquinoxEventPublisher.publishBundleEvent(EquinoxEventPublisher.java:138)
	at org.eclipse.osgi.internal.framework.EquinoxEventPublisher.publishBundleEvent(EquinoxEventPublisher.java:130)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor.publishModuleEvent(EquinoxContainerAdaptor.java:217)
	at org.eclipse.osgi.container.Module.publishEvent(Module.java:499)
	at org.eclipse.osgi.container.Module.start(Module.java:486)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)
Caused by: org.osgi.framework.BundleException: Exception in org.eclipse.jdt.internal.launching.LaunchingPlugin.start() of bundle org.eclipse.jdt.launching.
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:839)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:767)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1032)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:371)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:513)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	... 87 more
Caused by: java.lang.IllegalStateException: Workspace is already closed or not ready yet. Consider tracking the org.eclipse.core.resources.IWorkspace service (using your favorite technique, e.g. Declarative Services, ServiceTracker, Blueprint, ...) instead of calling the static method here to prevent such issues!
	at org.eclipse.core.resources.ResourcesPlugin.getWorkspace(ResourcesPlugin.java:502)
	at org.eclipse.jdt.internal.launching.LaunchingPlugin.start(LaunchingPlugin.java:561)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:818)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:1)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:810)
	... 94 more
```

This happens with org.eclipse.jdt.launching	3.21.0.v20231103-0759.

Due to the fact that this is a race condition (and depends on the bundle loading order) I could not reproduce it with OOTB Eclipse, but once I install https://sling.apache.org/documentation/development/ide-tooling.html from https://nightlies.apache.org/sling/eclipse/


A similar issue was reported (and fixed) for platform: https://github.com/eclipse-platform/eclipse.platform/issues/748","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/356/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/356,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5wlTtk,eclipse.jdt.debug,1888828260,356,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2024-01-12T10:24:41Z,2024-01-12T10:24:41Z,@kwin Are you planning to provide a fix for this in debug also?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5wlTtk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/356,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5wl1SB,eclipse.jdt.debug,1888965761,356,NA,kwin,185025,Konrad Windszus,,NA,2024-01-12T11:51:09Z,2024-01-12T11:51:09Z,@SarikaSinha I did already in the linked PR: https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/360,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5wl1SB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/356,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6GWsrt,eclipse.jdt.debug,2254097133,356,NA,kwin,185025,Konrad Windszus,,NA,2024-07-27T09:52:03Z,2024-07-27T09:52:03Z,@SarikaSinha Can you have a look at the attached PR?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6GWsrt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/364,eclipse.jdt.debug,2031586187,364,Bug 576897 - support RUNTIME search keyword for Installed JREs preference page,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2023-12-07T21:49:50Z,2023-12-07T23:11:14Z,Using RUNTIME as a search keyword in the Preferences dialog does not show the Installed JREs page,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/364/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/375,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/375,eclipse.jdt.debug,2089748011,375,[22] Add Execution Environment for JavaSE-22,noopur2507,8749449,Noopur Gupta,,CLOSED,2024-01-19T06:45:42Z,2024-01-22T07:30:33Z,Add Execution Environment for JavaSE-22.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/375/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/377,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/377,eclipse.jdt.debug,2089812106,377,[22] Run Gerrit builds for JDT Debug BETA_JAVA22 branch with latest Y-build,noopur2507,8749449,Noopur Gupta,,CLOSED,2024-01-19T07:22:22Z,2024-01-22T07:16:55Z,Run Gerrit builds for JDT Debug BETA_JAVA22 branch with latest Y-build.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/377/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/385,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/385,eclipse.jdt.debug,2120557185,385,ClassNotFoundException: SequencedMap,jukzi,51790620,Jörg Kubitz,,OPEN,2024-02-06T11:29:33Z,2024-03-07T08:46:24Z,"When having both JDK 17 and JDK 21 configured in the IDE (and jdk 21 as default JRE) and launching a test case for a BREEE 17 project (Run As..), then it it fails
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/51790620/8b32dddf-005a-4ce9-b9db-2f067f60910e)
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/51790620/83a064b0-3afc-4786-9257-d6f060f97713)
```
WARNING: Using incubator modules: jdk.incubator.foreign, jdk.incubator.vector
java.lang.NoClassDefFoundError: java/util/SequencedMap
	at org.apache.felix.resolver.Candidates.<init>(Candidates.java:96)
	at org.apache.felix.resolver.ResolverImpl.getInitialCandidates(ResolverImpl.java:541)
	at org.apache.felix.resolver.ResolverImpl.doResolve(ResolverImpl.java:431)
	at org.apache.felix.resolver.ResolverImpl.resolve(ResolverImpl.java:420)
	at org.apache.felix.resolver.ResolverImpl.resolve(ResolverImpl.java:374)
	at org.eclipse.osgi.container.ModuleResolver$ResolveProcess.resolveRevisions(ModuleResolver.java:1084)
	at org.eclipse.osgi.container.ModuleResolver$ResolveProcess.resolveRevisionsInBatch(ModuleResolver.java:1035)
	at org.eclipse.osgi.container.ModuleResolver$ResolveProcess.resolve(ModuleResolver.java:951)
	at org.eclipse.osgi.container.ModuleResolver.resolveDelta(ModuleResolver.java:181)
	at org.eclipse.osgi.container.ModuleContainer.resolveAndApply(ModuleContainer.java:714)
	at org.eclipse.osgi.container.ModuleContainer.resolve(ModuleContainer.java:660)
	at org.eclipse.osgi.container.ModuleContainer.resolve(ModuleContainer.java:648)
	at org.eclipse.osgi.storage.Storage.checkSystemBundle(Storage.java:431)
	at org.eclipse.osgi.storage.Storage.createStorage(Storage.java:189)
	at org.eclipse.osgi.internal.framework.EquinoxContainer.<init>(EquinoxContainer.java:108)
	at org.eclipse.osgi.launch.Equinox.<init>(Equinox.java:53)
	at org.eclipse.osgi.launch.Equinox.<init>(Equinox.java:46)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.startup(EclipseStarter.java:342)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:267)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1432)
Caused by: java.lang.ClassNotFoundException: java.util.SequencedMap
	at java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)
	... 27 more
An error has occurred. See the log file
null.
```
I understand it is compiled against JDK 21, but executed with JDK 17 by default
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/51790620/8bdd4f3a-f25b-4cc4-b885-16dc89c13415)


workaround: open the Launch configuration ""Main"" tab -> JDK 21 is automaically(!) selected:
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/51790620/b410a245-b3b2-4b0c-bf7d-08d154d7aa10)

There after ""run"" launches with 21 and test runs fine.

To my understanding the launchconfiguration should use JDK 21 even without using the configuration dialog
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/385/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/385,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5zqBQA,eclipse.jdt.debug,1940395008,385,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2024-02-13T04:11:07Z,2024-02-13T04:11:07Z,"@jukzi 
Have you tried setting this in ""Execution Environments"" in the Java Preferences where the compatible JREs are listed?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5zqBQA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/385,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5zrePR,eclipse.jdt.debug,1940775889,385,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-13T08:45:18Z,2024-02-13T08:45:18Z,"When i set JavaSE-17 Execution Environment to JDK21, the error is gone. But that feels only like a workaround.
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/51790620/00c7676b-4cca-4e7e-824b-1c87c2a2ebc4)
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/51790620/ca6587e4-5077-480e-88dc-8369a390dba1)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5zrePR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/385,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5zrlzR,eclipse.jdt.debug,1940806865,385,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2024-02-13T08:56:54Z,2024-02-13T08:56:54Z,That was the only purpose of allowing to set up the preferred JRE.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5zrlzR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/385,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M52Mdp-,eclipse.jdt.debug,1982978686,385,NA,laeubi,1331477,Christoph Läubrich,,NA,2024-03-07T08:46:23Z,2024-03-07T08:46:23Z,"> I understand it is compiled against JDK 21, but executed with JDK 17 by default

Given your screenshot I think this is a bug. If the JDK to compile is higher than the JDK selected by the project it must use the `--target` option an not use any later constructs, this Bug is probably suffering from the same behavior:

- https://github.com/eclipse-jdt/eclipse.jdt.core/issues/1842","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M52Mdp-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/390,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/390,eclipse.jdt.debug,2131808963,390,Running console sometimes does not show start infos,jukzi,51790620,Jörg Kubitz,,CLOSED,2024-02-13T08:53:53Z,2024-03-05T10:01:32Z,"sometimes when started the first time: does not show JRE nor start time :-(
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/51790620/3798d08a-acb3-4b5a-a997-9c059c7e9503)
terminated: shows JRE :-)
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/51790620/a1cef89e-4f4e-4ece-af1c-d991ef242ab4)
started another time: shows JRE :-)
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/51790620/0eac6e36-f1ad-4dd5-bdd1-f0e52c4e0a8c)

I could not see a deterministic pattern when it happens.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/390/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/390,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ztZJL,eclipse.jdt.debug,1941279307,390,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2024-02-13T11:25:24Z,2024-02-13T11:25:24Z,It looks like timing issue. New process is created for adding the label.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5ztZJL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/390,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M50XZFH,eclipse.jdt.debug,1952289095,390,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-19T11:52:02Z,2024-02-19T11:52:02Z,label is computed in `org.eclipse.debug.internal.ui.views.console.ProcessConsole.computeName()`,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M50XZFH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/390,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M50YQKE,eclipse.jdt.debug,1952514692,390,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-19T14:01:22Z,2024-02-19T14:01:22Z,"a LaunchManager.CHANGED event is created just before the remaining attributes are set in org.eclipse.jdt.internal.launching.StandardVMRunner.run(VMRunnerConfiguration, ILaunch, IProgressMonitor):549
Those attributes are signalled by DebugEvent.CHANGE, but those events are only received after addDebugEventListener

```
Thread [Worker-18: Launching A] (Suspended (breakpoint at line 201 in org.eclipse.debug.internal.ui.views.console.ProcessConsoleManager))	
	org.eclipse.debug.internal.ui.views.console.ProcessConsoleManager.launchChanged(org.eclipse.debug.core.ILaunch) line: 201	
	org.eclipse.debug.internal.core.LaunchManager$LaunchNotifier.run() line: 427	
	org.eclipse.core.runtime.SafeRunner.run(org.eclipse.core.runtime.ISafeRunnable) line: 47	
	org.eclipse.debug.internal.core.LaunchManager$LaunchNotifier.notify(org.eclipse.debug.core.ILaunch, int) line: 410	
	org.eclipse.debug.internal.core.LaunchManager.fireUpdate(org.eclipse.debug.core.ILaunch, int) line: 920	
	org.eclipse.debug.core.Launch.fireChanged() line: 467	
	org.eclipse.debug.core.Launch.addProcess(org.eclipse.debug.core.model.IProcess) line: 421	
	org.eclipse.debug.core.model.RuntimeProcess.<init>(org.eclipse.debug.core.ILaunch, java.lang.Process, java.lang.String, java.util.Map<java.lang.String,java.lang.String>) line: 166	
	org.eclipse.debug.core.DebugPlugin.newProcess(org.eclipse.debug.core.ILaunch, java.lang.Process, java.lang.String, java.util.Map<java.lang.String,java.lang.String>) line: 869	
	org.eclipse.jdt.internal.launching.StandardVMRunner(org.eclipse.jdt.launching.AbstractVMRunner).newProcess(org.eclipse.debug.core.ILaunch, java.lang.Process, java.lang.String, java.util.Map<java.lang.String,java.lang.String>) line: 169	
	org.eclipse.jdt.internal.launching.StandardVMRunner.run(org.eclipse.jdt.launching.VMRunnerConfiguration, org.eclipse.debug.core.ILaunch, org.eclipse.core.runtime.IProgressMonitor) line: 549	
	org.eclipse.jdt.launching.sourcelookup.advanced.AdvancedJavaLaunchDelegate(org.eclipse.jdt.launching.JavaLaunchDelegate).launch(org.eclipse.debug.core.ILaunchConfiguration, java.lang.String, org.eclipse.debug.core.ILaunch, org.eclipse.core.runtime.IProgressMonitor) line: 176	
	org.eclipse.debug.internal.core.LaunchConfiguration.launch(java.lang.String, org.eclipse.core.runtime.IProgressMonitor, boolean, boolean) line: 805	
	org.eclipse.debug.internal.core.LaunchConfiguration.launch(java.lang.String, org.eclipse.core.runtime.IProgressMonitor, boolean) line: 716	
	org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(org.eclipse.debug.core.ILaunchConfiguration, java.lang.String, org.eclipse.core.runtime.IProgressMonitor) line: 1038	
	org.eclipse.debug.internal.ui.DebugUIPlugin$1.run(org.eclipse.core.runtime.IProgressMonitor) line: 1241	
	org.eclipse.core.internal.jobs.Worker.run() line: 63	

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M50YQKE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/393,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/393,eclipse.jdt.debug,2138109436,393,Confusing/redundant Exception Breakpoint options,ewillink,841933,Ed Willink,,OPEN,2024-02-16T08:28:04Z,2024-02-16T10:43:41Z,"When setting a Java Exception Breakpoint the Add Java Exception Breakpoint dialog offers me both Java 5 and Java 8 entries for UnsupportedOperationException when I'm running Java 17 but with 5, 8 and 11 also installed. Why are both 5 and 8 offered but not 17?

Surely there is no useful difference between the exception catching (pace a compiled binary level sensitivity bug that is hopefully now fixed)?

If there is a difference, please make the difference clear so that users can understand the hazards of an unwise choice. Today I make an almost arbitrary choice.

If not, please offer just the one useful choice (presumably labelled as the running Java 17.)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/393/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/393,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M50HX-T,eclipse.jdt.debug,1948090259,393,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-16T10:07:31Z,2024-02-16T10:07:31Z,"don't know if that is possible:
1. it does matter in which library the breakpoint is added
2. technically it is possible to use multiple JDK libraries at once

in any case it should show you 17 too. i can not reproduce that this is missng:
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/51790620/1bbfd8bb-7b83-4a4a-9f49-5bc7a934ac5f)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M50HX-T/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/393,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M50HgKG,eclipse.jdt.debug,1948123782,393,NA,ewillink,841933,Ed Willink,,NA,2024-02-16T10:29:00Z,2024-02-16T10:29:00Z,"It's solid for me on: Eclipse SDK

Version: 2023-12 (4.30)
Build id: I20231201-0110

![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/841933/e6817532-5a2e-40b5-ae6e-0f83722315a5)

![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/841933/8a1cb896-f856-4ae4-992b-f571c4f46dc8)

(No idea what the 'bin' JVMs are for / came from.)

While multiple JDK libraries may be technically possible for you, it is surely extremely confusing for ordinary users who want to set a breakpoint on ALL UnsupportedOperationException. If that is not being supported the users need a multi-select JVM sub-dialog.

However I recall a bug a year or two ago where diverse JVM offerings were provided in perhaps the Type Hierarchy and it was agreed that this was unhelpful and wrong. As far as the user is concerned there is a unified JVM (perhaps merged from all active candidates). How many users are sufficiently sure about the binary level of a particular throw context to correctly specify a particular JVM?
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M50HgKG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/393,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M50HhY7,eclipse.jdt.debug,1948128827,393,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-02-16T10:32:31Z,2024-02-16T10:32:31Z,"The JRE's shown are these *used* in projects. If no project uses Java 17, creating a breakpoint in 17 would not work, as there is nothing in Java model for not used 17.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M50HhY7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/393,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M50HjkP,eclipse.jdt.debug,1948137743,393,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-16T10:38:46Z,2024-02-16T10:38:46Z,"> While multiple JDK libraries may be technically possible for you,

The breakpoint view is not only for a single VM started but for all VMs, each Vm / each project in workspace can naturally have different JDKs","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M50HjkP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/393,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M50HkAT,eclipse.jdt.debug,1948139539,393,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-16T10:40:08Z,2024-02-16T10:40:08Z,"> (No idea what the 'bin' JVMs are for / came from.)

please create a dedicated bug if the autodetected JVMs get wrong names. 
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/51790620/95c1e205-7458-45b6-b308-bc9f7b2f81a7)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M50HkAT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/393,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M50HlOv,eclipse.jdt.debug,1948144559,393,NA,ewillink,841933,Ed Willink,,NA,2024-02-16T10:43:41Z,2024-02-16T10:43:41Z,"Ok, so that explains 'no Java 17'. But

'If that is not being supported the users need a multi-select JVM sub-dialog.'

Excessive. The primary selection should offer what the user wants - breakpoint on thrown java.lang.UnsupportedOperationException. If it is really appropriate to distinguish Java levels then add a multi-check selector to the breakpoint properties so that a Java 5 or 8 but not 17 thrown java.lang.UnsupportedOperationException can be configured.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M50HlOv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/405,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/405,eclipse.jdt.debug,2178323276,405,Spurious auto-detected JVMs,ewillink,841933,Ed Willink,,OPEN,2024-02-16T10:48:12Z,2024-03-11T06:23:59Z,"As requested on https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/393#issuecomment-1948139539 the auto-detected installed JREs have gratuitous entries.

![305383257-8a1cb896-f856-4ae4-992b-f571c4f46dc8](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/841933/c133df98-d6ba-4164-a240-50f5f6de6733)

It looks like redundant poorly named JRE entries are created for JDKs.

Eclipse SDK

Version: 2023-12 (4.30)
Build id: I20231201-0110
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/405/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/405,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M52egj9,eclipse.jdt.debug,1987709181,405,NA,rgrunber,1417342,Roland Grunberg,,NA,2024-03-07T15:25:06Z,2024-03-07T15:25:06Z,"![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1417342/5ffe2f62-456d-422c-ab9d-8132c3cf0286)

I see this as well, although there was an instance where I needed to rediscover JVMs under `/usr/lib/jvm/` and after the search it ended up looking like :

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1417342/57c9f038-f9f5-4b77-b8b5-040b240f5dda)

Many of these are symlinks so at least on Linux/MacOS, it's definitely possible to reduce all entries to their canonical path to avoid duplicates.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M52egj9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/395,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/395,eclipse.jdt.debug,2138970812,395,tests: silent IllegalStateException,jukzi,51790620,Jörg Kubitz,,OPEN,2024-02-16T16:37:58Z,2024-02-19T11:06:24Z,"tests log exception but no test failed:
```
[2024-02-16T15:37:44.291Z] !ENTRY org.eclipse.jdt.debug.tests 1 0 2024-02-16 15:37:44.265
[2024-02-16T15:37:44.291Z] !MESSAGE [testListenersOnRuntimeError] setUp
[2024-02-16T15:37:44.545Z] 
[2024-02-16T15:37:44.545Z] !ENTRY org.eclipse.jface 4 4 2024-02-16 15:37:44.457
[2024-02-16T15:37:44.545Z] !MESSAGE Conditional Breakpoint Error : Conditional breakpoint encountered runtime exception.
[2024-02-16T15:37:44.545Z] 
[2024-02-16T15:37:44.545Z] Reason:
[2024-02-16T15:37:44.545Z] java.lang.StringIndexOutOfBoundsException
[2024-02-16T15:37:44.545Z] !STACK 0
[2024-02-16T15:37:44.545Z] java.lang.IllegalStateException: Error dialog is supposed to be shown now
[2024-02-16T15:37:44.545Z] 	at org.eclipse.jface.dialogs.ErrorDialog.open(ErrorDialog.java:339)
[2024-02-16T15:37:44.545Z] 	at org.eclipse.jdt.internal.debug.ui.JavaDebugOptionsManager$1.run(JavaDebugOptionsManager.java:787)
[2024-02-16T15:37:44.545Z] 	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
[2024-02-16T15:37:44.545Z] 	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
[2024-02-16T15:37:44.545Z] 	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:5040)
[2024-02-16T15:37:44.545Z] 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4520)
[2024-02-16T15:37:44.545Z] 	at org.eclipse.jdt.debug.tests.DebugSuite.run(DebugSuite.java:77)
[2024-02-16T15:37:44.545Z] 	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:90)
[2024-02-16T15:37:44.545Z] 	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:316)
[2024-02-16T15:37:44.545Z] 	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:240)
[2024-02-16T15:37:44.545Z] 	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:214)
[2024-02-16T15:37:44.545Z] 	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:155)
[2024-02-16T15:37:44.545Z] 	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
[2024-02-16T15:37:44.545Z] 	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
[2024-02-16T15:37:44.545Z] 	at org.apache.maven.surefire.api.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:137)
[2024-02-16T15:37:44.545Z] 	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:148)
[2024-02-16T15:37:44.545Z] 	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:88)
[2024-02-16T15:37:44.545Z] 	at org.eclipse.tycho.surefire.osgibooter.OsgiSurefireBooter.run(OsgiSurefireBooter.java:140)
[2024-02-16T15:37:44.545Z] 	at org.eclipse.tycho.surefire.osgibooter.AbstractUITestApplication$1.run(AbstractUITestApplication.java:42)
[2024-02-16T15:37:44.545Z] 	at org.eclipse.e4.ui.internal.workbench.swt.E4Testable.lambda$1(E4Testable.java:127)
[2024-02-16T15:37:44.545Z] 	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
[2024-02-16T15:37:44.545Z] 	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
[2024-02-16T15:37:44.545Z] 	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:5040)
[2024-02-16T15:37:44.545Z] 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4520)
[2024-02-16T15:37:44.545Z] 	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1151)
[2024-02-16T15:37:44.545Z] 	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
[2024-02-16T15:37:44.545Z] 	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
[2024-02-16T15:37:44.545Z] 	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:152)
[2024-02-16T15:37:44.545Z] 	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:639)
[2024-02-16T15:37:44.545Z] 	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
[2024-02-16T15:37:44.545Z] 	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:546)
[2024-02-16T15:37:44.545Z] 	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
[2024-02-16T15:37:44.545Z] 	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
[2024-02-16T15:37:44.545Z] 	at org.eclipse.tycho.surefire.osgibooter.UITestApplication.runApplication(UITestApplication.java:34)
[2024-02-16T15:37:44.545Z] 	at org.eclipse.tycho.surefire.osgibooter.AbstractUITestApplication.run(AbstractUITestApplication.java:129)
[2024-02-16T15:37:44.545Z] 	at org.eclipse.tycho.surefire.osgibooter.UITestApplication.start(UITestApplication.java:44)
[2024-02-16T15:37:44.545Z] 	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
[2024-02-16T15:37:44.545Z] 	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
[2024-02-16T15:37:44.545Z] 	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
[2024-02-16T15:37:44.545Z] 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
[2024-02-16T15:37:44.545Z] 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
[2024-02-16T15:37:44.545Z] 	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
[2024-02-16T15:37:44.545Z] 	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
[2024-02-16T15:37:44.545Z] 	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
[2024-02-16T15:37:44.545Z] 	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
[2024-02-16T15:37:44.545Z] 	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)
[2024-02-16T15:37:44.545Z] 	at org.eclipse.equinox.launcher.Main.main(Main.java:1432)
[2024-02-16T15:37:44.545Z] !SUBENTRY 1 org.eclipse.jdt.debug.ui 4 4 2024-02-16 15:37:44.458
[2024-02-16T15:37:44.545Z] !MESSAGE java.lang.StringIndexOutOfBoundsException
[2024-02-16T15:37:45.109Z] 
[2024-02-16T15:37:45.109Z] !ENTRY org.eclipse.jdt.debug.tests 1 0 2024-02-16 15:37:45.050
[2024-02-16T15:37:45.109Z] !MESSAGE [testListenersOnRuntimeError] tearDown

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/395/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/395,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M50XHCp,eclipse.jdt.debug,1952215209,395,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-19T11:06:23Z,2024-02-19T11:06:23Z,that IllegalStateException was introduced with https://bugs.eclipse.org/bugs/show_bug.cgi?id=567712,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M50XHCp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/396,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/396,eclipse.jdt.debug,2146329009,396,Debug tooltip contains wrong variable reference for inherited methods,bobcristian996,66821678,bobcristian,,OPEN,2024-02-21T10:04:52Z,2024-02-21T10:04:52Z,"Hello!
 
When I hover over a variable, the variable's reference is different from the one shown in the **Variables view**. The correct reference is shown by the **Variables view**. This happens when the calling method is inherited.

### Expected Behavior
The **debug tooltip** should contain the same information as the **Variables view**.

### Steps to Reproduce
1. Download the attached mock Java project ([com_amiq_jdt_bug.zip](https://github.com/eclipse-jdt/eclipse.jdt.debug/files/14357713/com_amiq_jdt_bug.zip))
2. Add a breakpoint at line 30 (i.e. `element.iterateElements()`) in the Element.java file
3. Run the example in debug mode
4. The issue appears when the debugger stops in a calling method inherited by a subclass (the second and third breakpoint stops)

### Context (Environment)
**Tested eclipse SDK versions**: E4.19, E4.22, E4.24, E4.28, E4.30 (latest)
**Eclipse JDK**: GraalVM 17.0.3+7-jvmci-22.1-b06
**Project execution environments**: GraalVM 17.0.3+7-jvmci-22.1-b06, OpenJDK 1.8.0_322
**OS**: Ubuntu 22.04
**Arch**: x86_64
**GTK**: 3.24.33
**VM Args**: -Xmx 4G

### Detailed Description
This project consists of 3 classes and an interface:
- **IElement** - The base interface
- **Element** - The parent class
- **SamePkgElement** - A child class from the same package
- **OtherPkgElement** - A child class from another package

The **Element** class contains a public field of type **IElement** called _element_, and implements the `iterateElements()` method which goes recursively down in the hierarchy and prints something in the console.

The `Main.main()` function contains a chain of 4 **IElement** objects which in a top-bottom hierarchy view look like this:
1. **Element**
2. **SamePkgElement**
3. **OtherPkgElement**
4. **Element**

When adding a breakpoint in the `Element.iterateElements()` method, the second time (i.e. from the **SamePkgElement**) and the third time (i.e. from the **OtherPkgElement**) the debugger stops at this breakpoint, and when hovering over the element field, its reference shown in the **tooltip** differs from the one in the **Variables view**. You can see that in the snapshots below:

![image (2)](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/66821678/3af59a77-8909-4dd0-b19e-04c6179363fb)


![image (1)](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/66821678/6d3781b4-78e0-47c5-b487-4f2978bc54bc)

The first time and the last time the debugger hits that breakpoint, the value is correct. The problem seems to be only when the calling method is inherited.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/396/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/397,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/397,eclipse.jdt.debug,2150565963,397,could not found some folder or class file in 3.35.0 than 3.32.0,Reedon1,34885318,,,CLOSED,2024-02-23T07:56:20Z,2024-02-23T08:32:39Z,"Many classes in org. eclipse. jdt. core are missing in version 3.35.0, such as. Org. eclipse. jdt. internal. compiler. ast; Org. eclipse. jdt. internal. compiler. problem, but there are still packages available in version 3.32.0. Where did these packages go after the version upgrade?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/397/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/397,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M504KJU,eclipse.jdt.debug,1960878676,397,NA,Reedon1,34885318,,,NA,2024-02-23T07:59:34Z,2024-02-23T07:59:34Z,"it has a vulnerable  in org.eclipse.jdt.core for 3.32.0 version , i want to use some class file. example that under this folder, org.eclipse.jdt.internal.compiler.ast, org.eclipse.jdt.internal.compiler.problem, but i could not found this folder when i use 3.35.0 version. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M504KJU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/397,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M504M_z,eclipse.jdt.debug,1960890355,397,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2024-02-23T08:10:16Z,2024-02-23T08:10:16Z,"By the versions you give I would assume you're using Maven artifacts. If that's the case you should be looking https://mvnrepository.com/artifact/org.eclipse.jdt/ecj/3.36.0 which is even a proper dependency of https://mvnrepository.com/artifact/org.eclipse.jdt/ecj/3.36.0 . In the past o.e.jdt.core had all of ecj bundled in via a convoluted build system, now it's simpler dependency as it should have always been.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M504M_z/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/397,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M504TbD,eclipse.jdt.debug,1960916675,397,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-02-23T08:32:39Z,2024-02-23T08:32:39Z,"Not a bug, please ask questions in the future at https://github.com/eclipse-jdt/eclipse.jdt.debug/discussions.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M504TbD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/398,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/398,eclipse.jdt.debug,2153538552,398,Regression: Expressions broken for Remote Java Application in recent Eclipse versions,CalculonPrime,57440041,,,OPEN,2024-02-25T03:29:01Z,2024-06-18T18:27:08Z,"**Overview**

We have a command-line build process for our framework not using Eclipse that generates several JARs that get deployed via Embedded Tomcat. In earlier Eclipse versions (circa 2017), I was able to create an Eclipse project, remove the ""src"" directory and replace it with a link to our app's source (outside the Eclipse project), and then attach to the running external Java app using a Remote Java Application launcher in Eclipse.

I also added the JARs generated by our build to the project, and all the 3rd party JARs used by the app.

With all of this in place, I could set breakpoints, step line-by-line, and most importantly, evaluate expressions in the expression pane.

However, with the most recent versions of Eclipse (2023-09 and 2023-12 tested), expressions don't work. This is horrific! Having to rebuild with logging or print commands makes things much more difficult. Expressions added show no output, and I believe this is connected to what happens when I press ctrl+shift+I after selecting a variable in the code near the breakpoint, which reports,
```

java.lang.reflect.InvocationTargetException: Unable to evaluate the selected expression:

To perform an evaluation, an expression must be compiled in the context of a Java project's build path. The current execution context is not associated with a Java project in the workspace.
	at org.eclipse.jdt.internal.debug.ui.actions.EvaluateAction$1.run(EvaluateAction.java:270)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)
```
The Java project for the new Eclipses was built in the same way, with the src directory in the project linked to the external Java source. All the suggested solutions for this problem I found on the web say to make sure that you're linking to the same source and libraries in the project, but as mentioned the app wasn't built with an Eclipse project in this case, as it's an external app. So this is not possible as a solution.

**Reproduction**

The most basic example of ""remote debugging"" (debugging an attached Java process outside the Eclipse project) will reproduce it.

I've attached two files:
[javaTestApp.tar.gz](https://github.com/eclipse-jdt/eclipse.jdt.core/files/14155660/javaTestApp.tar.gz)
[JavaHostProject.tar.gz](https://github.com/eclipse-jdt/eclipse.jdt.core/files/14155662/JavaHostProject.tar.gz)

The first, javaTestApp, is a standalone Java app.  It contains a build.sh and run.sh to build and run the app - just javac and java commands.  The app takes a number and prints its square, in a loop.  Hit return without typing anything to exit.  The other tar file is the Eclipse project JavaHostProject, which links to the external javaTestApp java app.

To reproduce:
- Expand both of these tar files in your /tmp directory (Linux assumed).
- Build javaTestApp from the command line using build.sh, and run it with run.sh.  You can type numbers into the app to see that it works.  Just leave it running.  We're going to attach to it in Eclipse.
- Open Eclipse, and import the project directory /tmp/JavaHostProject.  The src directory in the project is a link to the src directory in the javaTestApp (which assumes you expanded it in /tmp).  You can double click on Input.java in the project to open that source file in Eclipse.
- Attach to the running javaTestApp via Run >> Debug Configurations >> Remote Java Application.  The run.sh script for the external app opens debug port 8000 which is the default for Remote Java Application
- Set a breakpoint somewhere inside the loop of Input.java.  I will assume you set it at the line containing the System.out.println() call that prints the variable ""square"".
- Type another integer into the javaTestApp you left running.  This will cause Eclipse to hit the breakpoint.  Try hovering over the variable ""square"" in the source code.  This will show the correct value.
- Now go to the expressions window and type `square + "" ok""`.  In working versions of Eclipse you'll see the correct output.  In non-working versions, there will be no output.
- Go back to the source file and select ""square"" with the mouse and press ctrl+shift+I.  A dialog will pop up with the correct value in it in working versions of eclipse.  In non working versions, you see the error message I originally reported:

```
To perform an evaluation, an expression must be compiled in the context of a Java project's build path. The current execution context is not associated with a Java project in the workspace`
```

Note that in non-working versions of Eclipse, when you hit the breakpoint, you'll be prompted to re-enter the source link to the external java app javaTestApp/src, even though it's already in the project.  This doesn't happen in working versions of Eclipse, so that issue may be related to expressions not working.  Re-entering the path doesn't fix expressions, but Eclipse requires it.

Working version:  Oxygen.2 Release (4.7.2)
Broken versions: Eclipse 2023-09 and 2023-12


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/398/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/398,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M51CTxv,eclipse.jdt.debug,1963539567,398,NA,srikanth-sankaran,131454720,Srikanth Sankaran,,NA,2024-02-26T07:44:03Z,2024-02-26T07:44:03Z,"@iloveeclipse @jarthana , @mpalat  : Looks like there is no current owner for jdt.debug - what is the recommendation for this ?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M51CTxv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/398,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M51CXpq,eclipse.jdt.debug,1963555434,398,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-02-26T08:22:35Z,2024-02-26T08:22:35Z,"> what is the recommendation for this

I've moved to jdt.debug. 

We use remote debugging too in our application for years (and that with 4.21 / 4.25 / 4.30) and so far I haven't heard any complaints about broken breakpoint evaluation in this area. 

So I assume whatever is broken here is ""special"" to the way the classpath and sourcepaths are set in the launch configuration, so someone who is interested on the fix should double check that all the dependencies required to resolve breakpoint related code are ""visible"" through the ""Source lookup path"" configuration tab.

Also one could play with ""Java -> Debug -> Use advanced source lookup"" that might be needed to be disabled or enabled depending on the use case.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M51CXpq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/398,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M52ukHm,eclipse.jdt.debug,1991918054,398,NA,stephendnicholas,842691,Stephen Nicholas,,NA,2024-03-12T15:26:35Z,2024-03-12T15:26:35Z,I've raised a discussion thread which I think could be related: https://github.com/eclipse-jdt/eclipse.jdt.debug/discussions/406,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M52ukHm/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/398,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M529Cys,eclipse.jdt.debug,1995713708,398,NA,glhez,10855953,,,NA,2024-03-13T20:35:31Z,2024-03-13T20:35:31Z,"> > what is the recommendation for this
> 
> I've moved to jdt.debug.
> 
> We use remote debugging too in our application for years (and that with 4.21 / 4.25 / 4.30) and so far I haven't heard any complaints about broken breakpoint evaluation in this area.
> 
> So I assume whatever is broken here is ""special"" to the way the classpath and sourcepaths are set in the launch configuration, so someone who is interested on the fix should double check that all the dependencies required to resolve breakpoint related code are ""visible"" through the ""Source lookup path"" configuration tab.
> 
> Also one could play with ""Java -> Debug -> Use advanced source lookup"" that might be needed to be disabled or enabled depending on the use case.

I'm pretty sure this still happens nowadays at least in JUnit 4/5 tests and Tomcat 8.5/9 Server : in fact, it is easy to track when it will fails, Eclipse will open the class in a ""special"" editor without no breadcrumb, no class name - only the current method. 
In such case, the debug won't have any context and any expression/conditional breakpoint that rely on compiling will fail. 
I also think that navigation between classes is affected too because the editor is kind of broken.

You can also see a simple example and some case where it failed in this issued I created : https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/86 

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M529Cys/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/398,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Bmub0,eclipse.jdt.debug,2174412532,398,NA,CalculonPrime,57440041,,,NA,2024-06-17T20:58:32Z,2024-06-17T20:58:32Z,"This bug is serious enough that we're stuck using an older version of Eclipse without the issue so we can debug effectively, so I'm a bit surprised to see that it hasn't even been assigned to anyone or scheduled to be fixed in a particular release.

Eventually, we'll hit other issues using the older version, such as lack of support for newer JDKs, or perhaps incompatibilities with the OS.  I like Eclipse so I filed this bug hoping it would be fixed before that happens, but if not we may shift to IntelliJ.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Bmub0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/398,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Bqowv,eclipse.jdt.debug,2175437871,398,NA,srikanth-sankaran,131454720,Srikanth Sankaran,,NA,2024-06-18T07:52:47Z,2024-06-18T07:52:47Z,@SarikaSinha - Perhaps you have some volunteer cycles you can spare ?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Bqowv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/398,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6BvgD8,eclipse.jdt.debug,2176712956,398,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2024-06-18T18:26:42Z,2024-06-18T18:26:42Z,"@CalculonPrime Have you tested this in an Eclipse version of 2020, 2021, 2022 ?
Does it work and breaks only in 2023? 
If you can test and let us know till when did it work, it will help us to find the change which has caused this.
We did not have any major change in Expression evaluation directly so knowing this will help us.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6BvgD8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/399,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/399,eclipse.jdt.debug,2153693475,399,how to use IgnoreUnnamedModuleForSplitPackage,huige007,71688690,,,CLOSED,2024-02-26T09:34:23Z,2024-02-26T10:22:44Z,"As described in title, how can i enable feature IgnoreUnnamedModuleForSplitPackage. Because I got following error msg in vscode-java(redhat.java)
The package java.util.concurrent is accessible from more than one module: <unnamed>, java.base

after I set the java.jdt.ls.java.home to jdk8, above error msg disappeared","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/399/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/402,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/402,eclipse.jdt.debug,2155706790,402,[22] Provide run options for implicit classes,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,OPEN,2024-02-27T05:39:02Z,2024-02-28T16:11:10Z,"With the JEP 463, users are allowed have an implicitly declared type with a candidate main method. The UI should allow to run directly and/or create run configurations for such programs.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/402/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/402,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M51YXxT,eclipse.jdt.debug,1969323091,402,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2024-02-28T16:11:09Z,2024-02-28T16:11:09Z,"https://openjdk.org/jeps/445
We have not yet implemented a feature in preview state for Debug.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M51YXxT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/407,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/407,eclipse.jdt.debug,2186781464,407,NoSuchMethodError: org.eclipse.jdt.internal.core.BinaryType.getElementInfo(),bobfields,2707087,Bob Fields,,CLOSED,2024-03-14T16:25:40Z,2024-03-15T14:53:59Z,"Updated Eclipse JDT Core from 3.19.300.v20231201-0110 to 3.19.400.v20240229-0520.     Enhanced Class Decompiler (Core) is version 3.4.0 for both installations. When debugging and opening source I get:
```
NoSuchMethodError: 'java.lang.Object org.eclipse.jdt.internal.core.BinaryType.getElementInfo()'
at org.sf.feeling.decompiler.editor.DecompilerSourceMapper.findSource(DecompilerSourceMapper.java:61)
```
It looks like that method was removed in the latest update ? It worked before the update. Looks like Eclipse debugger core needs a fix ?
Eclipse running on Windows 10 with all current plugins. 
java version ""17.0.8"" 2023-07-18 LTS
Java(TM) SE Runtime Environment (build 17.0.8+9-LTS-211)
Java HotSpot(TM) 64-Bit Server VM (build 17.0.8+9-LTS-211, mixed mode, sharing)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/407/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/407,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M53FZuN,eclipse.jdt.debug,1997904781,407,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-03-14T16:52:16Z,2024-03-14T16:52:16Z,"> It looks like that method was removed in the latest update ? 

It is **overridden** now in BinaryType (signature changed), see 4556ac22b87bd69828fed9fbcf8ce24c24fad2ec

> It worked before the update. Looks like Eclipse debugger core needs a fix ?

Please open a bug for ""Enhanced Class Decompiler"". JDT project **internal** code is not API and can be changed with any release.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M53FZuN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/407,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M53MyDn,eclipse.jdt.debug,1999839463,407,NA,bobfields,2707087,Bob Fields,,NA,2024-03-15T14:53:58Z,2024-03-15T14:53:58Z,"FYI the link to the bug issue in ECD, reported by many many users...
https://github.com/ecd-plugin/ecd/issues/103","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M53MyDn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/413,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/413,eclipse.jdt.debug,2200428687,413,Lot's of `com.sun.jdi.ObjectCollectedException` in Eclipse log,guw,191472,Gunnar Wagenknecht,,OPEN,2024-03-21T15:00:31Z,2024-03-21T15:00:31Z,"A user is seeing lots of the following excepgtions in the log.

It's unclear whether this is a problem or not. Can it be fixed? It something wrong that we need to fix?
Maybe the log message needs some additional enhancements?


```
!ENTRY org.eclipse.jdt.debug 4 125 2024-03-19 17:29:35.150
!MESSAGE Internal error logged from JDI Debug: 
!STACK 0
com.sun.jdi.ObjectCollectedException
	at org.eclipse.jdi.internal.MirrorImpl.defaultReplyErrorHandler(MirrorImpl.java:295)
	at org.eclipse.jdi.internal.ObjectReferenceImpl.disableCollection(ObjectReferenceImpl.java:104)
	at org.eclipse.jdt.internal.debug.core.model.JDIObjectValue.disableCollection(JDIObjectValue.java:622)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.disableCollection(Interpreter.java:121)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.push(Interpreter.java:106)
	at org.eclipse.jdt.internal.debug.eval.ast.instructions.Instruction.push(Instruction.java:104)
	at org.eclipse.jdt.internal.debug.eval.ast.instructions.PushThis.execute(PushThis.java:56)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.execute(Interpreter.java:69)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine$EvalRunnable$1EvaluationRunnable.run(ASTEvaluationEngine.java:843)
	at org.eclipse.jdt.internal.debug.core.model.JDIThread.runEvaluation(JDIThread.java:821)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine$EvalRunnable.run(ASTEvaluationEngine.java:896)
	at org.eclipse.jdt.internal.debug.core.model.JDIThread$ThreadJob.run(JDIThread.java:3481)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/413/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/416,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/416,eclipse.jdt.debug,2204449077,416,[Tests][Java 21] 3 JDT Debug tests are failing consistently with Java 21,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,CLOSED,2024-03-24T16:47:31Z,2024-04-14T15:59:15Z,"https://download.eclipse.org/eclipse/downloads/drops4/I20240323-1800/testResults.php

org.eclipse.jdt.debug.tests.launching.InstanceMainMethodsTests | testDefaultMainWithoutArgs | Failure | Process finished with error code expected:<0> but was:<1>junit.framework.AssertionFailedError: Process finished with error code expected:<0> but was:<1>at junit.framework.Assert.fail(Assert.java:57)at junit.framework.Assert.failNotEquals(Assert.java:329)at junit.framework.Assert.assertEquals(Assert.java:78)at junit.framework.Assert.assertEquals(Assert.java:234)at junit.framework.TestCase.assertEquals(TestCase.java:377)at org.eclipse.jdt.debug.tests.launching.InstanceMainMethodsTests.testDefaultMainWithoutArgs(InstanceMainMethodsTests.java:61)at java.base/java.lang.reflect.Method.invoke(Method.java:580)at junit.framework.TestCase.runTest(TestCase.java:177)at junit.framework.TestCase.runBare(TestCase.java:142)at org.eclipse.jdt.debug.tests.AbstractDebugTest.runBare(AbstractDebugTest.java:2726)at junit.framework.TestResult$1.protect(TestResult.java:122)at junit.framework.TestResult.runProtected(TestResult.java:142)at junit.framework.TestResult.run(TestResult.java:125)at junit.framework.TestCase.run(TestCase.java:130)at junit.framework.TestSuite.runTest(TestSuite.java:241)at junit.framework.TestSuite.run(TestSuite.java:236)at junit.framework.TestSuite.runTest(TestSuite.java:241)at org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:61)at java.base/java.lang.Thread.run(Thread.java:1583) | 1.729
-- | -- | -- | -- | --
org.eclipse.jdt.debug.tests.launching.InstanceMainMethodsTests | testStaticMainWithoutArgs | Failure | Process finished with error code expected:<0> but was:<1>junit.framework.AssertionFailedError: Process finished with error code expected:<0> but was:<1>at junit.framework.Assert.fail(Assert.java:57)at junit.framework.Assert.failNotEquals(Assert.java:329)at junit.framework.Assert.assertEquals(Assert.java:78)at junit.framework.Assert.assertEquals(Assert.java:234)at junit.framework.TestCase.assertEquals(TestCase.java:377)at org.eclipse.jdt.debug.tests.launching.InstanceMainMethodsTests.testStaticMainWithoutArgs(InstanceMainMethodsTests.java:45)at java.base/java.lang.reflect.Method.invoke(Method.java:580)at junit.framework.TestCase.runTest(TestCase.java:177)at junit.framework.TestCase.runBare(TestCase.java:142)at org.eclipse.jdt.debug.tests.AbstractDebugTest.runBare(AbstractDebugTest.java:2726)at junit.framework.TestResult$1.protect(TestResult.java:122)at junit.framework.TestResult.runProtected(TestResult.java:142)at junit.framework.TestResult.run(TestResult.java:125)at junit.framework.TestCase.run(TestCase.java:130)at junit.framework.TestSuite.runTest(TestSuite.java:241)at junit.framework.TestSuite.run(TestSuite.java:236)at junit.framework.TestSuite.runTest(TestSuite.java:241)at org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:61)at java.base/java.lang.Thread.run(Thread.java:1583)

org.eclipse.jdt.debug.tests.variables.DetailFormatterTests | testInfixDetails1 | Failure | The returned value from (true && true \|\| !(false&&true) \|\| !(true==true\|\|true!=true&&true)) should be truejunit.framework.AssertionFailedError: The returned value from (true && true \|\| !(false&&true) \|\| !(true==true\|\|true!=true&&true)) should be trueat junit.framework.Assert.fail(Assert.java:57)at junit.framework.Assert.assertTrue(Assert.java:22)at junit.framework.TestCase.assertTrue(TestCase.java:192)at org.eclipse.jdt.debug.tests.variables.DetailFormatterTests.testInfixDetails1(DetailFormatterTests.java:246)at java.base/java.lang.reflect.Method.invoke(Method.java:580)at junit.framework.TestCase.runTest(TestCase.java:177)at junit.framework.TestCase.runBare(TestCase.java:142)at org.eclipse.jdt.debug.tests.AbstractDebugTest.runBare(AbstractDebugTest.java:2726)at junit.framework.TestResult$1.protect(TestResult.java:122)at junit.framework.TestResult.runProtected(TestResult.java:142)at junit.framework.TestResult.run(TestResult.java:125)at junit.framework.TestCase.run(TestCase.java:130)at junit.framework.TestSuite.runTest(TestSuite.java:241)at junit.framework.TestSuite.run(TestSuite.java:236)at junit.framework.TestSuite.runTest(TestSuite.java:241)at org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:61)at java.base/java.lang.Thread.run(Thread.java:1583)
-- | -- | -- | --


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/416/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/416,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M54NvGo,eclipse.jdt.debug,2016866728,416,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2024-03-24T16:48:38Z,2024-03-24T16:48:38Z,cc @mpalat @jarthana ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M54NvGo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/416,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M56byxn,eclipse.jdt.debug,2054106215,416,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-14T15:59:15Z,2024-04-14T15:59:15Z,Seem to be fixed in the meantime,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M56byxn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/418,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/418,eclipse.jdt.debug,2216893939,418,Update org.eclipse.jdt.launching.javaagent to use ASM 9.7,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2024-03-31T10:39:23Z,2024-04-30T05:24:15Z,"We've missed ASM update to 9.6, and there is already 9.7 available, so we should update to that.
See https://github.com/eclipse-platform/eclipse.platform.releng.aggregator/issues/1951 and previous task https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/224.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/418/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/418,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55qMEf,eclipse.jdt.debug,2041102623,418,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2024-04-06T14:19:38Z,2024-04-06T14:19:38Z,"This is causing StratumTest failure in I-builds (https://download.eclipse.org/eclipse/downloads/drops4/I20240406-0130/testresults/html/org.eclipse.jdt.debug.tests_ep432I-unit-cen64-gtk3-java22_linux.gtk.x86_64_22.html) . After looking into the details it's that jdt stratum (aka javaagent) is not available on Java 22.
I'll provide PR.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M55qMEf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/418,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M58PYFx,eclipse.jdt.debug,2084405617,418,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2024-04-30T05:24:14Z,2024-04-30T05:24:14Z,This one is done.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M58PYFx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/419,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/419,eclipse.jdt.debug,2222122279,419,[23] Add Execution Environment for JavaSE-23,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,CLOSED,2024-04-03T07:27:15Z,2024-09-05T04:59:57Z,,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/419/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/419,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6K6iAz,eclipse.jdt.debug,2330599475,419,NA,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,NA,2024-09-05T04:59:56Z,2024-09-05T04:59:56Z,This is done. Closing.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6K6iAz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/423,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/423,eclipse.jdt.debug,2233490567,423,Text blocks with backslash characters confuses debugger (jumps to wrong line),jubax,10562923,Juergen Baier,baier@semedy.com,CLOSED,2024-04-09T13:50:27Z,2024-04-15T19:25:35Z,"The debugger gets confused when you have text blocks with backslash characters.

I noticed that (maybe since 2024-03, but I'm not sure) the debugger sometimes seems to be in the wrong line. While trying to get a reproducible test I noticed that once you have a text block with a backslash character you cannot add a breakpoint afterwards.

```
public class EclipseBreakpoint {

    @Test
    public void test1() throws Exception {
	assertEquals(""""""
		p(1).\
		q(2).\
		r(3)."""""", """");
        assertEquals(1, 1); // <==== Cannot put a breakpoint in this line
    }

}
```
But it works this way:
```
public class EclipseBreakpoint {

    @Test
    public void test1() throws Exception {
	assertEquals(""""""
		p(1).
		q(2).
		r(3)."""""", """");
        assertEquals(1, 1); // <==== Here I can put a breakpoint in the line
    }

}
```
I'm not sure this is the same as my original problem, but this is certainly a bug. Not sure if this is related to the debugger, the UI or the compiler.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/423/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/423,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M555_fJ,eclipse.jdt.debug,2045245385,423,NA,jubax,10562923,Juergen Baier,baier@semedy.com,NA,2024-04-09T13:58:32Z,2024-04-09T13:58:32Z,The classes where the debugger jumped to the wrong line contained such text blocks with backslashes at the end of the lines. After I removed those backslashes the debugger worked fine again.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M555_fJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/423,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M56TkRk,eclipse.jdt.debug,2051949668,423,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-04-12T15:09:11Z,2024-04-12T15:09:11Z,"I have tracked the problem with setting the breakpoint to the line end table which isn't properly set up when the continuation characters are used (missing the line end registration so line numbers are incorrectly calculated for validating the breakpoint).  That said, there is still some other work to do as after fixing that, the breakpoint line shows it is stopped, but it actually executes some additional lines (probably a similar line end issue elsewhere).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M56TkRk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/423,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M56VowN,eclipse.jdt.debug,2052492301,423,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-04-12T20:34:44Z,2024-04-12T20:34:44Z,Found the problem.  I needed to run the exportplugin.xml file to regenerate some jar files.  It works now.  I will post the jdt.core patch today.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M56VowN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/423,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M56pTNY,eclipse.jdt.debug,2057646936,423,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-04-15T19:25:34Z,2024-04-15T19:25:34Z,"Fixed by: https://github.com/eclipse-jdt/eclipse.jdt.core/pull/2339

Verified with I20240414 I-build.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M56pTNY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/424,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/424,eclipse.jdt.debug,2233609481,424,Equinox deletes some JRE1.1 profile,snjeza,388609,Snjeza,,CLOSED,2024-04-09T14:40:55Z,2024-04-11T02:26:36Z,"The related issues
- https://github.com/eclipse-equinox/equinox/issues/571
- https://github.com/eclipse-m2e/m2e-core/issues/1735

https://github.com/eclipse-equinox/equinox/issues/571 deletes some JRE1.1 profiles - https://github.com/laeubi/equinox/commit/94661454f2a68450be35490b0f5eda7ba08ea833
These profiles should be deleted from https://github.com/eclipse-jdt/eclipse.jdt.debug/blob/master/org.eclipse.jdt.launching/plugin.xml#L268

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/424/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/424,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M556erR,eclipse.jdt.debug,2045373137,424,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-09T14:49:19Z,2024-04-09T14:49:19Z,@snjeza : do you want to provide a patch?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M556erR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/424,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M556iVJ,eclipse.jdt.debug,2045388105,424,NA,snjeza,388609,Snjeza,,NA,2024-04-09T14:54:55Z,2024-04-09T14:54:55Z,@iloveeclipse I will try,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M556iVJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/433,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/433,eclipse.jdt.debug,2249381893,433,Remove Execution environments for unsupported Java versions?,HannesWell,44067969,Hannes Wellmann,,OPEN,2024-04-17T22:37:11Z,2024-04-18T11:01:16Z,"The recent discussion on the mailing list (or in https://github.com/eclipse-jdt/eclipse.jdt.core/discussions/820) about dropping support for ancient java version (it was discussed to drop everything below 1.6) as well the attempt to remove the `JRE-1.1` profile from Equinox (https://github.com/eclipse-equinox/equinox/pull/572 and https://github.com/eclipse-equinox/equinox/pull/596) made we wonder if in JDT Debug Execution environments corresponding to unsupported Java versions should be removed as well as it was attempted for https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/425?

If JDT can't compile byte code down to a version is there then any point in being able to launch which such an EE (given the executing JRE is really of that version and not just a later one)?
The only scenario I can think of where this could still work is one launches an EE of an unsupported java version using only existing, or otherwise compiled jars. But one could still do that by selecting the corresponding ancient JRE for a launch.
At the same time the list of EE grows by two each year and it would maybe be good to prune it from time to time?

In PDE this would require a few adjustments to avoid issues like https://github.com/eclipse-pde/eclipse.pde/issues/1231 because currently PDE supplies the EE defined by JDT as OSGi EE in its state to resolve the bundles in the target-platform. Because existing bundles that requires such ancient EEs exist and should continue to resolve as jars in the TP (they are even used in the SDK) PDE effectivly should maintain a list of such ancient EEs. Along with the EE  only the most important system-properties would then be hard-coded in PDE. In that case it would probably be sufficient to assume the same system-packages as the lowest supported java-version for compiled bundles in the TP.
So PDE's would not to be a blocker for that, we would just need to know it, ideally in advance to make the transition smooth.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/433/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/440,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/440,eclipse.jdt.debug,2274750718,440,NullPointerException in remote debug launch configurations,nbauma109,9403560,,,CLOSED,2024-05-01T12:17:39Z,2024-06-25T14:53:07Z,"I received this error as I tried to create a new remote debug launch configuration.

I'm using this build:

Eclipse IDE for RCP and RAP Developers (includes Incubating components)

Version: 2024-03 (4.31.0)
Build id: 20240307-1437


```
java.lang.NullPointerException: Cannot invoke ""org.eclipse.jdt.launching.IVMConnector.getName()"" because the return value of ""org.eclipse.jdt.launching.JavaRuntime.getVMConnector(String)"" is null
	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaConnectTab.updateConnectionFromConfig(JavaConnectTab.java:228)
	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaConnectTab.initializeFrom(JavaConnectTab.java:204)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTabGroup.initializeFrom(AbstractLaunchConfigurationTabGroup.java:93)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupWrapper.initializeFrom(LaunchConfigurationTabGroupWrapper.java:182)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.displayInstanceTabs(LaunchConfigurationTabGroupViewer.java:869)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.lambda$4(LaunchConfigurationTabGroupViewer.java:733)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.inputChanged(LaunchConfigurationTabGroupViewer.java:748)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.setInput0(LaunchConfigurationTabGroupViewer.java:684)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.setInput(LaunchConfigurationTabGroupViewer.java:664)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.handleLaunchConfigurationSelectionChanged(LaunchConfigurationsDialog.java:1043)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.lambda$1(LaunchConfigurationsDialog.java:607)
	at org.eclipse.jface.viewers.StructuredViewer$3.run(StructuredViewer.java:820)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.StructuredViewer.firePostSelectionChanged(StructuredViewer.java:817)
	at org.eclipse.jface.viewers.ColumnViewer.firePostSelectionChanged(ColumnViewer.java:1065)
	at org.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:1665)
	at org.eclipse.jface.viewers.TreeViewer.setSelection(TreeViewer.java:1091)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationViewer.preservingSelection(LaunchConfigurationViewer.java:118)
	at org.eclipse.jface.viewers.AbstractTreeViewer.remove(AbstractTreeViewer.java:2283)
	at org.eclipse.jface.viewers.AbstractTreeViewer.remove(AbstractTreeViewer.java:2329)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationViewer.remove(LaunchConfigurationViewer.java:156)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationView.handleConfigurationAdded(LaunchConfigurationView.java:327)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationView.lambda$0(LaunchConfigurationView.java:305)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4047)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3663)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:1230)
	at org.eclipse.debug.ui.DebugUITools.lambda$1(DebugUITools.java:630)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:636)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:574)
	at org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:85)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:581)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:415)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4274)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4072)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3660)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1151)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:152)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:639)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:546)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/440/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/440,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M58jvTz,eclipse.jdt.debug,2089743603,440,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-05-02T06:53:18Z,2024-05-02T06:53:18Z,"`org.eclipse.jdt.internal.launching.LaunchingPlugin.initializeVMConnectors()` should have reported an error before and fail to init extension.

@nbauma109 : there should be an error reported **before** in the log, please attach full Eclipse error log.

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M58jvTz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/440,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M59mqxP,eclipse.jdt.debug,2107288655,440,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-05-13T11:08:02Z,2024-05-13T11:08:02Z,"JavaRuntime.getVMConnector() is documented to be able to return null. 
`Returns:VM connector or null if none`
That should be catched. Nevertheless @nbauma109 we need steps how to reproduce as it normally works.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M59mqxP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/440,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M59mvcj,eclipse.jdt.debug,2107307811,440,NA,nbauma109,9403560,,,NA,2024-05-13T11:17:48Z,2024-05-13T11:17:48Z,"I can't recollect the steps right now. I only found those predefined debug configurations ""Remote attaching"" and ""Remote Listening"" but I can't recall where they came from. It might be due to that as I have the exception as soon as I click on them.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M59mvcj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/440,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6CfDhD,eclipse.jdt.debug,2189178947,440,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-06-25T14:53:07Z,2024-06-25T14:53:07Z,Closing due to missing information,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6CfDhD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/442,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/442,eclipse.jdt.debug,2296946364,442,Random failing OpenFromClipboardTests.testMethod_11,jukzi,51790620,Jörg Kubitz,,OPEN,2024-05-15T06:08:59Z,2024-05-15T06:09:04Z,"on mac:
https://download.eclipse.org/eclipse/downloads/drops4/I20240514-1800/testresults/html/org.eclipse.jdt.debug.tests_ep432I-unit-mac64-java17_macosx.cocoa.x86_64_17.html


```
java.lang.AssertionError: expected:<1> but was:<0>
at org.junit.Assert.fail(Assert.java:89)
at org.junit.Assert.failNotEquals(Assert.java:835)
at org.junit.Assert.assertEquals(Assert.java:647)
at org.junit.Assert.assertEquals(Assert.java:633)
at org.eclipse.jdt.debug.tests.ui.OpenFromClipboardTests.testMethod_11(OpenFromClipboardTests.java:456)
```

similar fails had been on win and linux: https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/28
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/442/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/444,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/444,eclipse.jdt.debug,2320221762,444,DELETE key in Breakpoint conditions view deletes breakpoint,jukzi,51790620,Jörg Kubitz,,CLOSED,2024-05-27T11:16:35Z,2024-06-20T14:10:01Z,"Editing breakpoint condition's source text: When using the forward ""Delete"" key (not backspace!) sometimes deletes the whole breakpoint instead of only editing the condition's text","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/444/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/444,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5_r62_,eclipse.jdt.debug,2142219711,444,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-05-31T13:53:06Z,2024-05-31T13:53:06Z,"always reproducible: add breakpoint, check ""Condition"", type some text, press DEL","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5_r62_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/444,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5_wSqb,eclipse.jdt.debug,2143365787,444,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2024-06-01T08:47:03Z,2024-06-01T08:47:03Z,"Yes, this is an old bug.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M5_wSqb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/451,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/451,eclipse.jdt.debug,2360250538,451,Drop support for older Java versions in debugger,iloveeclipse,964108,Andrey Loskutov,,OPEN,2024-06-18T16:22:47Z,2025-02-11T09:27:27Z,"Same as https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1465 but for JDT Debug component.

We should follow-up the jdt.core issue https://github.com/eclipse-jdt/eclipse.jdt.core/issues/2536 with support in the JDT Debug as well. This issue is to discuss and track the corresponding debugger changes. To start with, we should remove the older versions of JEs and compliance levels from the UI.

The other issue that is kind of related but might be worth taking up is the ordering of the compliance levels. As we focus more on support for more recent Java versions, it doesn't make sense to stick to the older-versions-first approach on the UI drop down list. Perhaps, we should revert the order to reflect the trend in usage.


Example for the old EE's is properties of the JRE container on a project:

![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/964108/9cbc6c5d-49d0-43e4-bfc6-7f62ab80eac3)

also a ""new Java project"" and similar wizards:
![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/964108/04c9e91e-6d78-4f1a-81aa-fec937236ef3)

What is not clear for me if this page should also filter possible EE's (why should it if they can't be used for projects, but of course there are bundles around that have old EE's specified):

![image](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/964108/36be1ea9-b826-4f57-808e-08a4177dcbf7)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/451/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/451,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6BwyTc,eclipse.jdt.debug,2177049820,451,NA,HannesWell,44067969,Hannes Wellmann,,NA,2024-06-18T21:32:40Z,2024-06-18T21:32:40Z,"> What is not clear for me if this page should also filter possible EE's (why should it if they can't be used for projects, but of course there are bundles around that have old EE's specified):

This is similar to https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/433, isn't it? I'm supporting clean-ups of EEs, but if these EEs are really removed PDE has to be adapted in advance to avoid problems like in the attempt to remove the `JRE-1.1` EE last release cycle.

> The other issue that is kind of related but might be worth taking up is the ordering of the compliance levels. As we focus more on support for more recent Java versions, it doesn't make sense to stick to the older-versions-first approach on the UI drop down list. Perhaps, we should revert the order to reflect the trend in usage.

I agree with your assessment, but I think this is an orthogonal change, but a good one in my opinion.


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6BwyTc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/451,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Bw57c,eclipse.jdt.debug,2177081052,451,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-06-18T21:38:59Z,2024-06-18T21:38:59Z,"> This is similar to #433, isn't it?

I'm thinking about possibility to just ""hide"" old EEs from every UI, and at least not allow to create anything with old environment. So internally it still may be understood / referenced. The problem I see is that we can't support Java 6 environment with Java 6 compilation settings, because compiler would reject Java 6 target. This is however irrelevant for PDE/p2 where compiler settings are not needed because the bundles are ""given"" and compiled already.

So something like ""read-only"" support for old EE's...","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Bw57c/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/451,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6B1_MQ,eclipse.jdt.debug,2178413328,451,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-06-19T11:10:49Z,2024-06-19T11:10:49Z,"@HannesWell : something like https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/452 + https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1469, based on https://github.com/eclipse-jdt/eclipse.jdt.core/pull/2606 idea.

With this PDE could still use ""old"" API with all possible Java / EE versions, while JDT UI only sees ""new"" Java versions.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6B1_MQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/451,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6B5cwz,eclipse.jdt.debug,2179320883,451,NA,HannesWell,44067969,Hannes Wellmann,,NA,2024-06-19T18:58:06Z,2024-06-19T18:58:06Z,"> With this PDE could still use ""old"" API with all possible Java / EE versions, while JDT UI only sees ""new"" Java versions.

If you thing the new API is necessary in the wider scope, I'm fine and will see if it's reasonable to adjust PDE to the new methods or not. With #433 and my previous comment I mainly wanted to express that I'm willing to help and adapt PDE if the existing methods change their behavior. Just for PDE I don't think new API has to be introduced and callers of existing methods can be adapted to the new situation, even if EEs are really removed and not just hidden.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6B5cwz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/462,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/462,eclipse.jdt.debug,2441500048,462,"Java Application Run Configuration ""Show Command Line"" button text display exceed its button border",caldy2000,133640130,,,OPEN,2024-07-27T05:26:28Z,2024-08-01T05:18:44Z,"# Operation environment
- win11 pro workstation
- eclipse 2024-06
- openjdk 9
- my locale

    zh_CN

- my preference
  - dialog font
    
    font name: `source code pro`

    font size: 11
  - display resolution

    `1920x1080`, intel display default settings.
# Case
A Java class which has main method, check its run configuration plane, the button `Show Command Line` locates at bottom right corner,its button text display exceed the button border, but the exceed part is unvisible.

screen shot as follows:
![image](https://github.com/user-attachments/assets/191f9e4d-9828-4636-8e88-221ce3c373df)


# Try

1. restore dialog font to default(Use System Font)

    by doing this,this button display correctly.

2. set font size greater than 9(default size)

    Use system font, and when size greater than 9, it is going to exceed the button border like what i described before.


I dont know if it works well on your operation environment.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/462/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/463,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/463,eclipse.jdt.debug,2448002152,463,CME in LaunchingPlugin.writeInstallInfo,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2024-08-05T08:58:43Z,2024-08-05T13:41:22Z,"Saw during test execution of `org.eclipse.jdt.core.tests.model.JavaProjectTests` in the IDE
```
!ENTRY org.eclipse.core.resources 4 2 2024-08-05 10:37:54.854
!MESSAGE Problems occurred when invoking code from plug-in: ""org.eclipse.core.resources"".
!STACK 0
java.util.ConcurrentModificationException
	at java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)
	at java.base/java.util.HashMap$EntryIterator.next(HashMap.java:1630)
	at java.base/java.util.HashMap$EntryIterator.next(HashMap.java:1628)
	at org.eclipse.jdt.internal.launching.LaunchingPlugin.writeInstallInfo(LaunchingPlugin.java:1129)
	at org.eclipse.jdt.internal.launching.LaunchingPlugin$1$1.saving(LaunchingPlugin.java:595)
	at org.eclipse.core.internal.resources.SaveManager.executeLifecycle(SaveManager.java:453)
	at org.eclipse.core.internal.resources.SaveManager$1.run(SaveManager.java:269)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.core.internal.resources.SaveManager.broadcastLifecycle(SaveManager.java:272)
	at org.eclipse.core.internal.resources.SaveManager.save(SaveManager.java:1226)
	at org.eclipse.core.internal.resources.SaveManager.save(SaveManager.java:1205)
	at org.eclipse.core.internal.resources.Project.close(Project.java:236)
	at org.eclipse.jdt.core.tests.model.JavaProjectTests.lastlyTestDeletePackageWithAutobuild(JavaProjectTests.java:812)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at junit.framework.TestCase.runTest(TestCase.java:177)
	at org.eclipse.jdt.core.tests.junit.extension.TestCase.runTest(TestCase.java:972)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/463/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/466,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/466,eclipse.jdt.debug,2448573016,466,org.eclipse.debug.jdi.tests.MirrorTest fails on Linux if executed alone,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2024-08-05T13:31:25Z,2024-08-05T14:32:44Z,"There must be some shared data reused by this test if it runs as a part of a testsuite, so it fails only if executed alone.
The test fails on Linux because it uses `javaw` command to start JVM, which is not available on Linux.
The fix is trivial, I will push it in a moment.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/466/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/472,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/472,eclipse.jdt.debug,2475124374,472,NumberFormatException in OpenFromClipboard,jukzi,51790620,Jörg Kubitz,,CLOSED,2024-08-20T09:11:12Z,2024-09-05T11:38:47Z,"copy (copied from YourKit)
```
org.eclipse.jdt.internal.compiler.parser.ScannerHelper.isJavaIdentifierPart(long, char) ScannerHelper.java 2642 0 2641 27182456
```
and use OpenFromClipboard =>

```
org.eclipse.core.commands.ExecutionException: Error executing 'org.eclipse.jdt.debug.ui.command.OpenFromClipboard': java.lang.NumberFormatException: For input string: ""org.eclipse.jdt.internal.compiler.parser.ScannerHelper.isJavaIdentifierPart(long, char) ScannerHelper.java 2642 0 2641 27182456""
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:179)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:204)
	at org.eclipse.e4.ui.workbench.renderers.swt.HandledContributionItem.executeItem(HandledContributionItem.java:444)
	at org.eclipse.e4.ui.workbench.renderers.swt.AbstractContributionItem.handleWidgetSelection(AbstractContributionItem.java:442)
	at org.eclipse.e4.ui.workbench.renderers.swt.AbstractContributionItem.lambda$2(AbstractContributionItem.java:464)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:91)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4326)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1174)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4124)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3712)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1151)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:639)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:546)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:668)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:605)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1481)
Caused by: org.eclipse.e4.core.di.InjectionException: java.lang.NumberFormatException: For input string: ""org.eclipse.jdt.internal.compiler.parser.ScannerHelper.isJavaIdentifierPart(long, char) ScannerHelper.java 2642 0 2641 27182456""
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:66)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:299)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:233)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:174)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:165)
	... 30 more
Caused by: java.lang.NumberFormatException: For input string: ""org.eclipse.jdt.internal.compiler.parser.ScannerHelper.isJavaIdentifierPart(long, char) ScannerHelper.java 2642 0 2641 27182456""
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:662)
	at java.base/java.lang.Integer.parseInt(Integer.java:778)
	at org.eclipse.jdt.internal.debug.ui.actions.OpenFromClipboardAction.getJavaElementMatches(OpenFromClipboardAction.java:365)
	at org.eclipse.jdt.internal.debug.ui.actions.OpenFromClipboardAction.run(OpenFromClipboardAction.java:208)
	at org.eclipse.ui.internal.handlers.ActionDelegateHandlerProxy.execute(ActionDelegateHandlerProxy.java:285)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:98)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:56)
	... 34 more
```

Even if the Operation can not parse the text it should not fail with Exception","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/472/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/475,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/475,eclipse.jdt.debug,2485524270,475,Remote debuging works drammaticaly slowly.,technician21,22976736,,,CLOSED,2024-08-25T23:34:56Z,2024-12-09T07:10:47Z,"Remote debug starts in over minute.
The random breakpoints invoked for example in 3.5-7 and more minutes.
In this case debugger practically not working.
In comparison with intellij-community which starts in seconds, breakpoint triggered in up to 4-5 seconds on the same environment.
On remote application (Tomcat app server) decreased number of threads. In eclipse options e.g. show monitors, show threads is switched off. 

environment:
1. Eclipse for java EE and WTP:
Version: 2023-06 (4.28.0)
Build id: 20230608-1333

2. Built-in JDK: openjdk 17.0.7 2023-04-18
GNU/Linux Ubuntu 22.04

What additional information can i gather and provide to debug this issue.
Thanks","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/475/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/475,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Jpk3W,eclipse.jdt.debug,2309377494,475,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-08-26T05:53:37Z,2024-08-26T05:53:37Z,See https://github.com/eclipse-platform/.github/blob/main/CONTRIBUTING.md how to setup a workspace where you can debug the ide on your own. Create and post a minimal reproducer.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Jpk3W/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/475,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6WgPxt,eclipse.jdt.debug,2525035629,475,NA,rksharma1401,14962106,Ravikant Sharma,,NA,2024-12-07T08:51:49Z,2024-12-07T08:51:49Z,"@jukzi @technician21 

May be this info can help

https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/39","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6WgPxt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/475,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6WoLIU,eclipse.jdt.debug,2527113748,475,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-12-09T07:10:47Z,2024-12-09T07:10:47Z,"no, i am closing this due to missing information. If the information is in 39 it would be a duplicate only anyway.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6WoLIU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/478,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/478,eclipse.jdt.debug,2491781470,478,[23] Merge master into BETA_JAVA23 branch after RC1,noopur2507,8749449,Noopur Gupta,,CLOSED,2024-08-28T11:09:31Z,2024-08-28T11:10:40Z,Merge master into BETA_JAVA23 branch after RC1.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/478/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/478,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6J_Gu8,eclipse.jdt.debug,2315021244,478,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-08-28T11:10:40Z,2024-08-28T11:10:40Z,Done with https://github.com/eclipse-jdt/eclipse.jdt.debug/commit/125facd4b40d5ccdfce08e4a26ce4f284c8b8423.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6J_Gu8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/479,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/479,eclipse.jdt.debug,2493540446,479,Random failing TypeNameBreakpointTests.testWildCardClassPrepareBreakpoint,SougandhS,177713286,Sougandh S,,CLOSED,2024-08-29T06:13:56Z,2024-10-09T15:27:48Z,"Unit test failed -
Stack - 
org.eclipse.jdt.debug.tests.breakpoints.TypeNameBreakpointTests()

expected:<HitCountLooper> but was:<null>

junit.framework.ComparisonFailure: expected:<HitCountLooper> but was:<null>
at junit.framework.Assert.assertEquals(Assert.java:100)
at junit.framework.Assert.assertEquals(Assert.java:107)
at junit.framework.TestCase.assertEquals(TestCase.java:260)
at org.eclipse.jdt.debug.tests.breakpoints.TypeNameBreakpointTests.testWildCardClassPrepareBreakpoint(TypeNameBreakpointTests.java:503)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at junit.framework.TestCase.runTest(TestCase.java:177)
at junit.framework.TestCase.runBare(TestCase.java:142)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.runBare(AbstractDebugTest.java:2768)
at junit.framework.TestResult$1.protect(TestResult.java:122)
at junit.framework.TestResult.runProtected(TestResult.java:142)
at junit.framework.TestResult.run(TestResult.java:125)
at junit.framework.TestCase.run(TestCase.java:130)
at junit.framework.TestSuite.runTest(TestSuite.java:241)
at junit.framework.TestSuite.run(TestSuite.java:236)
at junit.framework.TestSuite.runTest(TestSuite.java:241)
at org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:61)
at java.base/java.lang.Thread.run(Thread.java:1583)

<img width=""1723"" alt=""image"" src=""https://github.com/user-attachments/assets/4e044149-1a5b-4533-af80-6572afe6e1cf"">","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/479/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/479,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6KGEt9,eclipse.jdt.debug,2316847997,479,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-08-29T06:55:46Z,2024-08-29T06:55:46Z,"only random failing
https://download.eclipse.org/eclipse/downloads/drops4/I20240828-1820/testresults/html/org.eclipse.jdt.debug.tests_ep433I-unit-cen64-gtk3-java21_linux.gtk.x86_64_21.html","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6KGEt9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/483,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/483,eclipse.jdt.debug,2504429273,483,[23] Debug tests are failing with JVM 23,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,CLOSED,2024-09-04T06:33:18Z,2024-09-26T04:56:27Z,"Many tests in jdt.debug test suite are failing when run with JVM 23 on the BETA_JAVA23 branch, for e.g., org.eclipse.debug.jdi.tests.AccessibleTest.testJDIIsPublic().
The error trace is:

```
java.lang.Error: Could not contact the VM
	at org.eclipse.debug.jdi.tests.AbstractJDITest.connectToVM(AbstractJDITest.java:928)
	at org.eclipse.debug.jdi.tests.AbstractJDITest.launchTargetAndConnectToVM(AbstractJDITest.java:662)
	at org.eclipse.debug.jdi.tests.AbstractJDITest.launchTargetAndStartProgram(AbstractJDITest.java:1117)
	at org.eclipse.debug.jdi.tests.AbstractJDITest.setUp(AbstractJDITest.java:1126)
```
	

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/483/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/483,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6KyFra,eclipse.jdt.debug,2328386266,483,NA,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,NA,2024-09-04T09:38:01Z,2024-09-04T09:38:01Z,I will take this up via https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/482 itself,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6KyFra/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/483,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6NnOav,eclipse.jdt.debug,2375870127,483,NA,mpalat,4507939,Manoj  N Palat,manoj.palat@in.ibm.com,NA,2024-09-26T04:55:17Z,2024-09-26T04:55:17Z,@jarthana I believe this is done? ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6NnOav/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/483,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6NnOqv,eclipse.jdt.debug,2375871151,483,NA,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,NA,2024-09-26T04:56:26Z,2024-09-26T04:56:26Z,"Yes, closing now.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6NnOqv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/484,eclipse.jdt.debug,2506774808,484,Tests from org.eclipse.jdt.debug.jdi.tests are not run in daily builds,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,CLOSED,2024-09-05T05:02:50Z,2024-09-19T07:56:31Z,"There are bunch of tests under the suite org.eclipse.debug.jdi.tests.AutomatedSuite. These tests are run as part of the PR, but not really run as part of the daily I builds. They should be run every day too.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/484/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6LFaGh,eclipse.jdt.debug,2333450657,484,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-09-06T07:45:26Z,2024-09-06T07:45:26Z,"it is unclear to me what is the intended difference of
org.eclipse.debug.jdi.tests.AutomatedSuite vs
org.eclipse.debug.jdi.tests.TestAll
they look very similar.

the referenced VirtualThreadTest.testJDIPlatformThreadsOnlyFilter() fails locally to me:
```
junit.framework.AssertionFailedError: 6
	at junit.framework.TestCase.assertNull(TestCase.java:418)
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6LFaGh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6LdmT-,eclipse.jdt.debug,2339792126,484,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2024-09-10T06:37:55Z,2024-09-10T06:37:55Z,"If you look at https://download.eclipse.org/eclipse/downloads/drops4/I20240909-1800/testResults.php there are 
Missing Files
org.eclipse.jdt.debug.jdi.tests_ep434I-unit-mac64-java17_macosx.cocoa.x86_64_17.xml
org.eclipse.jdt.debug.jdi.tests_ep434I-unit-macM1-java17_macosx.cocoa.aarch64_17.xml
org.eclipse.jdt.debug.jdi.tests_ep434I-unit-win32-java17_win32.win32.x86_64_17.xml
org.eclipse.jdt.debug.jdi.tests_ep434I-unit-cen64-gtk3-java17_linux.gtk.x86_64_17.xml
org.eclipse.jdt.debug.jdi.tests_ep434I-unit-cen64-gtk3-java21_linux.gtk.x86_64_21.xml
org.eclipse.jdt.debug.jdi.tests_ep434I-unit-cen64-gtk3-java22_linux.gtk.x86_64_22.xml
aka smth was missed in the enablement.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6LdmT-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Ld3UH,eclipse.jdt.debug,2339861767,484,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-09-10T07:18:45Z,2024-09-10T07:18:45Z,"there is now a org.eclipse.jdt.debug.**jdi**.tests.log https://download.eclipse.org/eclipse/downloads/drops4/I20240909-1800/testresults/ep434I-unit-cen64-gtk3-java22_linux.gtk.x86_64_22/directorLogs/director-org.eclipse.jdt.debug.jdi.tests.log

like
https://download.eclipse.org/eclipse/downloads/drops4/I20240909-1800/testresults/ep434I-unit-cen64-gtk3-java22_linux.gtk.x86_64_22/directorLogs/director-org.eclipse.jdt.debug.tests.log
so at least the commit did something. but i don't know what is missing.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Ld3UH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Ld4RA,eclipse.jdt.debug,2339865664,484,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-09-10T07:20:50Z,2024-09-10T07:20:50Z,"files like 
https://download.eclipse.org/eclipse/downloads/drops4/I20240909-1800/testresults/ep434I-unit-macM1-java17_macosx.cocoa.aarch64_17/org.eclipse.jdt.debug.tests.AutomatedSuite.log
https://download.eclipse.org/eclipse/downloads/drops4/I20240909-1800/testresults/ep434I-unit-macM1-java17_macosx.cocoa.aarch64_17/org.eclipse.jdt.debug.tests.AutomatedSuite.txt
are missing for jdi","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Ld4RA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6LkYnV,eclipse.jdt.debug,2341571029,484,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-09-10T17:37:55Z,2024-09-10T17:37:55Z,"I haven't checked for more details why, but it looks like added tests are hanging the build, see jobs waiting way to long now: https://ci.eclipse.org/releng/job/AutomatedTests/","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6LkYnV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Ll_Tj,eclipse.jdt.debug,2341991651,484,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-09-10T20:53:35Z,2024-09-10T20:53:35Z,"JDI tests hang:

https://download.eclipse.org/eclipse/downloads/drops4/I20240910-0650/logs.php#console

See for example 

https://download.eclipse.org/eclipse/downloads/drops4/I20240910-0650/testresults/ep434I-unit-cen64-gtk3-java17_linux.gtk.x86_64_17/org.eclipse.debug.jdi.tests.AutomatedSuite.txt

```
The program doesn't seem to have started after 30000ms
DumpStackTracesTimer almost reached timeout '7200000'.
```

Main thread:
```
java.lang.Exception: ThreadDump for thread ""main""
	at java.base@17.0.2/java.lang.Object.wait(Native Method)
	at org.eclipse.debug.jdi.tests.EventWaiter.waitEvent(EventWaiter.java:177)
	at org.eclipse.debug.jdi.tests.AbstractJDITest.waitForEvent(AbstractJDITest.java:1522)
	at org.eclipse.debug.jdi.tests.AbstractJDITest.startProgram(AbstractJDITest.java:1301)
	at org.eclipse.debug.jdi.tests.AbstractJDITest.launchTargetAndStartProgram(AbstractJDITest.java:1118)
	at org.eclipse.debug.jdi.tests.AbstractJDITest.setUp(AbstractJDITest.java:1126)
	at junit.framework.TestCase.runBare(TestCase.java:140)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Ll_Tj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6L2KCU,eclipse.jdt.debug,2346229908,484,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-09-12T13:04:02Z,2024-09-12T13:04:02Z,"https://download.eclipse.org/eclipse/downloads/drops4/I20240912-0340/testresults/ep434I-unit-macM1-java17_macosx.cocoa.aarch64_17/org.eclipse.debug.jdi.tests.AutomatedSuite.txt

```
!MESSAGE starting DumpStackTracesTimer with timeout=7080000 at 2024-09-12 06:05:26 -0400
launched with pid=2239: /usr/local/openjdk-17/Contents/Home/bin/java -classpath /Users/genie.releng/workspace/AutomatedTests/ep434I-unit-macM1-java17/workarea/I20240912-0340/eclipse-testing/test-eclipse/Eclipse.app/Contents/Eclipse/./bin -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=9900,suspend=y,server=y org.eclipse.debug.jdi.tests.program.MainClass
Listening for transport dt_socket at address: 9900
Connected to localhost:9900 after 45ms
VMStartEvent: 0
ClassPrepareEvent: 3

...
```

https://download.eclipse.org/eclipse/downloads/drops4/I20240912-0340/testresults/html/org.eclipse.jdt.debug.jdi.tests_ep434I-unit-macM1-java17_macosx.cocoa.aarch64_17.html
```
java.lang.RuntimeException: ClassPrepareEvent for org.eclipse.debug.jdi.tests.program.MainClass missing after 10000ms
at org.eclipse.debug.jdi.tests.AbstractJDITest.startProgram(AbstractJDITest.java:1311)
at org.eclipse.debug.jdi.tests.AbstractJDITest.launchTargetAndStartProgram(AbstractJDITest.java:1125)
at org.eclipse.debug.jdi.tests.AbstractJDITest.setUp(AbstractJDITest.java:1133)
at junit.framework.TestCase.runBare(TestCase.java:140)at junit.framework.TestResult$1.protect(TestResult.java:122)
at junit.framework.TestResult.runProtected(TestResult.java:142)
at junit.framework.TestResult.run(TestResult.java:125)at junit.framework.TestCase.run(TestCase.java:130
)at junit.framework.TestSuite.runTest(TestSuite.java:241)at junit.framework.TestSuite.run(TestSuite.java:236)
at junit.framework.TestSuite.runTest(TestSuite.java:241)at junit.framework.TestSuite.run(TestSuite.java:236)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6L2KCU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6MPIa0,eclipse.jdt.debug,2352776884,484,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-09-16T12:27:34Z,2024-09-16T12:27:34Z,"The current exception reveals the .class files can not be loaded  - probably because they are in a jar and not in the bin folder during i-build.

```
launched with pid=5012: C:\PROGRA~1\ECLIPS~1\jdk-17.0.5.8-hotspot\bin\javaw.exe -classpath C:\Users\genie.releng\workspace\AutomatedTests\ep434I-unit-win32-java17\workarea\I20240915-1800\eclipse-testing\test-eclipse\eclipse\.\bin -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=9900,suspend=y,server=y org.eclipse.debug.jdi.tests.program.MainClass
Listening for transport dt_socket at address: 9900
Connected to localhost:9900 after 144ms
classPrepare:ClassPrepareEvent: 3 referenceType=java.lang.reflect.Array java.lang.reflect.Array
classPrepare:ClassPrepareEvent: 3 referenceType=sun.launcher.LauncherHelper sun.launcher.LauncherHelper
classPrepare:ClassPrepareEvent: 3 referenceType=java.nio.charset.CharsetDecoder java.nio.charset.CharsetDecoder
classPrepare:ClassPrepareEvent: 3 referenceType=sun.nio.cs.ArrayDecoder sun.nio.cs.ArrayDecoder
classPrepare:ClassPrepareEvent: 3 referenceType=sun.nio.cs.SingleByte$Decoder sun.nio.cs.SingleByte$Decoder
classPrepare:ClassPrepareEvent: 3 referenceType=java.lang.StringCoding java.lang.StringCoding
classPrepare:ClassPrepareEvent: 3 referenceType=sun.net.util.URLUtil sun.net.util.URLUtil
classPrepare:ClassPrepareEvent: 3 referenceType=java.util.Locale java.util.Locale
classPrepare:ClassPrepareEvent: 3 referenceType=sun.util.locale.BaseLocale sun.util.locale.BaseLocale
classPrepare:ClassPrepareEvent: 3 referenceType=sun.util.locale.LocaleUtils sun.util.locale.LocaleUtils
classPrepare:ClassPrepareEvent: 3 referenceType=java.security.PrivilegedExceptionAction java.security.PrivilegedExceptionAction
classPrepare:ClassPrepareEvent: 3 referenceType=jdk.internal.loader.URLClassPath$3 jdk.internal.loader.URLClassPath$3
classPrepare:ClassPrepareEvent: 3 referenceType=jdk.internal.loader.URLClassPath$Loader jdk.internal.loader.URLClassPath$Loader
classPrepare:ClassPrepareEvent: 3 referenceType=jdk.internal.loader.URLClassPath$JarLoader jdk.internal.loader.URLClassPath$JarLoader
classPrepare:ClassPrepareEvent: 3 referenceType=java.util.zip.ZipConstants java.util.zip.ZipConstants
classPrepare:ClassPrepareEvent: 3 referenceType=java.util.zip.ZipFile java.util.zip.ZipFile
classPrepare:ClassPrepareEvent: 3 referenceType=jdk.internal.access.JavaUtilZipFileAccess jdk.internal.access.JavaUtilZipFileAccess
classPrepare:ClassPrepareEvent: 3 referenceType=java.util.zip.ZipFile$1 java.util.zip.ZipFile$1
classPrepare:ClassPrepareEvent: 3 referenceType=sun.net.www.protocol.jar.Handler sun.net.www.protocol.jar.Handler
classPrepare:ClassPrepareEvent: 3 referenceType=jdk.internal.loader.URLClassPath$JarLoader$1 jdk.internal.loader.URLClassPath$JarLoader$1
classPrepare:ClassPrepareEvent: 3 referenceType=jdk.internal.loader.FileURLMapper jdk.internal.loader.FileURLMapper
classPrepare:ClassPrepareEvent: 3 referenceType=java.io.IOException java.io.IOException
classPrepare:ClassPrepareEvent: 3 referenceType=java.io.FileNotFoundException java.io.FileNotFoundException
...
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6MPIa0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Mrqgd,eclipse.jdt.debug,2360256541,484,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-09-19T07:56:31Z,2024-09-19T07:56:31Z,@jarthana the tests are running now. but please note that some of them fail: https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/503,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Mrqgd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/489,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/489,eclipse.jdt.debug,2518863849,489,"Hot code replace error box ""Details button"" bug",SougandhS,177713286,Sougandh S,,OPEN,2024-09-11T07:46:37Z,2024-10-30T10:12:10Z,"
I tried the error cases for Hot code replace functionality. On every fail the pop up shows additional ""Details >>"" button, On clicking the button it shows the same message as provided in the parent box (""Reason"" line)

<img width=""747"" alt=""image"" src=""https://github.com/user-attachments/assets/d576c837-a0e0-4873-9ea3-58876dff8403""> 


Please advice whether we should keep this button or not ?
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/489/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/489,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Lz5xm,eclipse.jdt.debug,2345639014,489,NA,SougandhS,177713286,Sougandh S,,NA,2024-09-12T08:38:50Z,2024-09-12T08:38:50Z,@jukzi @iloveeclipse any suggestions ?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Lz5xm/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/489,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6L0KbK,eclipse.jdt.debug,2345707210,489,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-09-12T09:10:45Z,2024-09-12T09:10:45Z,maybe in other situations it displays more information? i don't know.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6L0KbK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/489,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6L0QQS,eclipse.jdt.debug,2345731090,489,NA,SougandhS,177713286,Sougandh S,,NA,2024-09-12T09:21:27Z,2024-09-12T09:21:27Z,"I think its same

 
<img width=""511"" alt=""image"" src=""https://github.com/user-attachments/assets/756ab0eb-eb1d-43c9-99aa-99594b52f41b"">



<img width=""517"" alt=""image"" src=""https://github.com/user-attachments/assets/dd86d647-4230-4bf9-9fba-c6dc538e4ceb"">



<img width=""527"" alt=""image"" src=""https://github.com/user-attachments/assets/addf5606-cff2-4fa9-896f-f5ae3b878aa4"">

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6L0QQS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/489,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6MJfvy,eclipse.jdt.debug,2351299570,489,NA,SougandhS,177713286,Sougandh S,,NA,2024-09-15T02:25:20Z,2024-09-15T02:25:20Z,"For obsolete methods error box we dont have that details button

<img width=""530"" alt=""image"" src=""https://github.com/user-attachments/assets/cf1a92a3-dce3-4829-9a50-75bd181eba04"">
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6MJfvy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/489,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6MJgPx,eclipse.jdt.debug,2351301617,489,NA,SougandhS,177713286,Sougandh S,,NA,2024-09-15T02:30:44Z,2024-09-15T02:30:44Z,"While HCR fails the detailMessage generated is used for both reason and details button

<img width=""527"" alt=""image"" src=""https://github.com/user-attachments/assets/1f506cfc-0714-4ce0-a3dd-38c6cda72d15"">

and StackTrace is also not available for the exceptions 

<img width=""692"" alt=""image"" src=""https://github.com/user-attachments/assets/d7a3d704-4d4c-4621-a551-8ee18e8aee3a"">

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6MJgPx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/489,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6PEmwp,eclipse.jdt.debug,2400349225,489,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-10-08T16:39:05Z,2024-10-08T16:39:05Z,"I could only guess that original IBM JVM (J9) may provide more info, but I haven't looked at the code if there is additional handling of the ""details"" content and if that is coming from another source as the visible part of the message. 

If that is feed with the same data, then the ""details"" part is obviously wasting space, if not, it should be kept.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6PEmwp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/489,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6PKsVp,eclipse.jdt.debug,2401944937,489,NA,SougandhS,177713286,Sougandh S,,NA,2024-10-09T10:32:50Z,2024-10-09T10:32:50Z,"> I could only guess that original IBM JVM (J9) may provide more info, but I haven't looked at the code if there is additional handling of the ""details"" content and if that is coming from another source as the visible part of the message.
> 
> If that is feed with the same data, then the ""details"" part is obviously wasting space, if not, it should be kept.



Went through it again and found for some selected JDWP error codes throw UnsupportedOperationException with a fixed string message, and this same message is used in ""details"" section

<img width=""409"" alt=""image"" src=""https://github.com/user-attachments/assets/193914e3-f49a-42fa-85f0-763fe50d2081"">

<img width=""491"" alt=""image"" src=""https://github.com/user-attachments/assets/05c55af3-cdfb-477b-b69f-74ed54744fbd"">



<img width=""429"" alt=""image"" src=""https://github.com/user-attachments/assets/f709cd68-592c-42ed-9885-732b39ce5a26"">
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6PKsVp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/489,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6QXx26,eclipse.jdt.debug,2422152634,489,NA,SougandhS,177713286,Sougandh S,,NA,2024-10-18T10:34:16Z,2024-10-18T10:34:16Z,"Checked with other few scenarios having other than unsupported exception, Only showing exception classes

<img width=""630"" alt=""image"" src=""https://github.com/user-attachments/assets/fc0da928-eebc-4dda-a876-c3f24bb8300c"">


____
<img width=""619"" alt=""image"" src=""https://github.com/user-attachments/assets/23962a3a-b2b3-4a60-9cb1-933614c9a74f"">


____
<img width=""646"" alt=""image"" src=""https://github.com/user-attachments/assets/bfb6df86-8a8b-4e42-b351-297777b21e75"">



","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6QXx26/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/489,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Qn0cl,eclipse.jdt.debug,2426357541,489,NA,SougandhS,177713286,Sougandh S,,NA,2024-10-21T11:07:50Z,2024-10-21T11:07:50Z,"Hi @iloveeclipse, @jukzi  shall we include the exception class details in ""_Details_"" for unsupported [ADD,DELETE etc] ones similar to the other exceptions ?
we can then avoid same text showing in both.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Qn0cl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/489,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Rqox1,eclipse.jdt.debug,2443873397,489,NA,SougandhS,177713286,Sougandh S,,NA,2024-10-29T10:48:41Z,2024-10-29T10:48:41Z,"> Hi @iloveeclipse, @jukzi shall we include the exception class details in ""_Details_"" for unsupported [ADD,DELETE etc] ones similar to the other exceptions ? we can then avoid same text showing in both.

How about including corresponding error code + unsupported exception class name ?
As error codes are common for all JVMs","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Rqox1/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/489,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Rqq0i,eclipse.jdt.debug,2443881762,489,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-10-29T10:52:31Z,2024-10-29T10:52:31Z,I am not interested in the topic of hot code replace failures. But if you show after/before screenshots of changes that might make sense then i might take a look.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Rqq0i/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/489,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Rq7QQ,eclipse.jdt.debug,2443949072,489,NA,SougandhS,177713286,Sougandh S,,NA,2024-10-29T11:25:48Z,2024-10-29T11:25:48Z,"> I am not interested in the topic of hot code replace failures. But if you show after/before screenshots of changes that might make sense then i might take a look.

before it used to show this 
[Details section shows same as shown in reason]
<img width=""580"" alt=""image"" src=""https://github.com/user-attachments/assets/8156c870-c8b3-4473-941f-4f51d23667e2"">

my proposal - 
<img width=""730"" alt=""image"" src=""https://github.com/user-attachments/assets/e7ae2b6e-1645-4031-8595-86f9eab9a878"">
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Rq7QQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/489,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6RrCz4,eclipse.jdt.debug,2443980024,489,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-10-29T11:42:10Z,2024-10-29T11:42:10Z,looks good.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6RrCz4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/489,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6R0bmh,eclipse.jdt.debug,2446440865,489,NA,SougandhS,177713286,Sougandh S,,NA,2024-10-30T10:12:08Z,2024-10-30T10:12:08Z,"> looks good.

Thanks ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6R0bmh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/494,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/494,eclipse.jdt.debug,2527671788,494,[23] Remove beta disclaimers in JDT Debug,noopur2507,8749449,Noopur Gupta,,CLOSED,2024-09-16T07:08:24Z,2024-09-18T05:02:23Z,"Remove beta disclaimers in JDT Debug.

Also, update the Javadoc URI. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/494/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/499,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/499,eclipse.jdt.debug,2532705315,499,[23] Remove reference to Y-builds in pom.xml for JDT Debug,noopur2507,8749449,Noopur Gupta,,CLOSED,2024-09-18T04:58:27Z,2024-09-18T05:48:08Z,Remove reference to Y-builds in pom.xml for JDT Debug.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/499/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/503,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/503,eclipse.jdt.debug,2535578108,503,"[jdi] 21,23 VirtualThreadTest fails in I-Builds",jukzi,51790620,Jörg Kubitz,,CLOSED,2024-09-19T07:55:29Z,2024-10-07T10:57:19Z,"https://download.eclipse.org/eclipse/downloads/drops4/I20240918-0950/testresults/html/org.eclipse.jdt.debug.jdi.tests_ep434I-unit-cen64-gtk3-java22_linux.gtk.x86_64_22.html
https://download.eclipse.org/eclipse/downloads/drops4/I20240918-0950/testresults/html/org.eclipse.jdt.debug.jdi.tests_ep434I-unit-cen64-gtk3-java21_linux.gtk.x86_64_21.html

```
java.lang.IllegalArgumentException: Compilation failed:

at org.eclipse.debug.jdi.tests.VirtualThreadTest.compileFiles(VirtualThreadTest.java:122)
at org.eclipse.debug.jdi.tests.VirtualThreadTest.compileTestProgram(VirtualThreadTest.java:106)
at org.eclipse.debug.jdi.tests.VirtualThreadTest.setUp(VirtualThreadTest.java:85)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/503/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/504,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/504,eclipse.jdt.debug,2535615060,504,LongClassPathTests issues,jukzi,51790620,Jörg Kubitz,,CLOSED,2024-09-19T08:13:04Z,2024-10-01T08:34:44Z,"I-Builds longest logfile 
https://download.eclipse.org/eclipse/downloads/drops4/I20240918-2220/testresults/ep434I-unit-cen64-gtk3-java17_linux.gtk.x86_64_17/org.eclipse.jdt.debug.tests.AutomatedSuite.txt

contains 4326 times

`Java Model Exception: Error in Java Model (code 969): testVeryLongClasspathWithArgumentFile does not exist`

May be some missing cleanup?
locally the tests passes but takes long time:
![image](https://github.com/user-attachments/assets/4a0e5d1d-64f4-4e80-8c2e-62d8c2217d5b)

logging
```
!MESSAGE [Creating project: test ä VeryLongClasspathWithClasspathOnlyJar] Some job is still running or waiting to run: 
'Java indexing... 2 files to index (C:\java\jdk-17.0.7.7-hotspot^\lib\jrt-fs.jar)(289)'/org.eclipse.jdt.internal.core.search.processing.JobManager$1ProgressJob
thread info: ""Worker-5: Java indexing... "" prio=5 Id=57 TIMED_WAITING on org.eclipse.jdt.internal.core.search.indexing.IndexManager@1b6441c9
	at java.base@17.0.7/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.jdt.internal.core.search.indexing.IndexManager@1b6441c9
	at org.eclipse.jdt.internal.core.search.processing.JobManager$1ProgressJob.run(JobManager.java:472)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

, 
UI thread info: ""main"" prio=6 Id=1 RUNNABLE
	at java.management@17.0.7/sun.management.ThreadImpl.dumpThreads0(Native Method)
	at java.management@17.0.7/sun.management.ThreadImpl.getThreadInfo(ThreadImpl.java:485)
	at org.eclipse.jdt.debug.tests.TestUtil.dumpRunningOrWaitingJobs(TestUtil.java:214)
	at org.eclipse.jdt.debug.tests.TestUtil.dumpRunningOrWaitingJobs(TestUtil.java:188)
	at org.eclipse.jdt.debug.tests.TestUtil.waitForJobs(TestUtil.java:169)
	at org.eclipse.jdt.debug.tests.TestUtil.waitForJobs(TestUtil.java:117)
	at org.eclipse.jdt.debug.tests.AbstractDebugTest.createJavaProjectClone(AbstractDebugTest.java:1102)
	at org.eclipse.jdt.debug.tests.launching.LongClassPathTests.testVeryLongClasspathWithClasspathOnlyJar(LongClassPathTests.java:105)
	...

```

@HannesWell may that relate to the long filename changes you have recently done?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/504/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/504,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Mzmtf,eclipse.jdt.debug,2362338143,504,NA,HannesWell,44067969,Hannes Wellmann,,NA,2024-09-19T22:55:03Z,2024-09-19T22:55:03Z,"> @HannesWell may that relate to the long filename changes you have recently done?

You are referring to https://github.com/eclipse-platform/eclipse.platform/pull/1477, aren't you?
I would be surprised if that has an effect here since it should only be relevant on Windows and was submitted over a month ago.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Mzmtf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/504,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6NxY21,eclipse.jdt.debug,2378534325,504,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-09-27T06:55:07Z,2024-09-27T06:55:07Z,@SougandhS can you work on this?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6NxY21/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/504,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Nxqmq,eclipse.jdt.debug,2378607018,504,NA,SougandhS,177713286,Sougandh S,,NA,2024-09-27T07:34:32Z,2024-09-27T07:34:32Z,"> @SougandhS can you work on this?
Will try to fix this 
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Nxqmq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/504,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6OKkrC,eclipse.jdt.debug,2385136322,504,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-10-01T08:34:44Z,2024-10-01T08:34:44Z,"works, thanks @SougandhS ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6OKkrC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/506,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/506,eclipse.jdt.debug,2539062814,506,[Tests][Java 23] 3 JDT Debug tests are failing consistently with Java 23,SougandhS,177713286,Sougandh S,,CLOSED,2024-09-20T15:09:38Z,2024-09-23T12:27:52Z,"<img width=""861"" alt=""image"" src=""https://github.com/user-attachments/assets/9f758a4a-7d56-4050-a0ba-248ea23dd844"">

**org.eclipse.jdt.debug.tests.launching.InstanceMainMethodsTests.testStaticMainWithoutArgs
Process** 
-> StackTrace ->
junit.framework.AssertionFailedError: Process finished with error code expected:<0> but was:<1>
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.failNotEquals(Assert.java:329)
	at junit.framework.Assert.assertEquals(Assert.java:78)
	at junit.framework.Assert.assertEquals(Assert.java:234)
	at junit.framework.TestCase.assertEquals(TestCase.java:377)
	at org.eclipse.jdt.debug.tests.launching.InstanceMainMethodsTests.testStaticMainWithoutArgs(InstanceMainMethodsTests.java:45)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at junit.framework.TestCase.runTest(TestCase.java:177)
	at junit.framework.TestCase.runBare(TestCase.java:142)
	at org.eclipse.jdt.debug.tests.AbstractDebugTest.runBare(AbstractDebugTest.java:2773)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:130)
	at junit.framework.TestSuite.runTest(TestSuite.java:241)
	at junit.framework.TestSuite.run(TestSuite.java:236)
	at junit.framework.TestSuite.runTest(TestSuite.java:241)
	at org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)


**org.eclipse.jdt.debug.tests.launching.InstanceMainMethodsTests.testDefaultMainWithoutArgs**

-> StackTrace ->
junit.framework.AssertionFailedError: Process finished with error code expected:<0> but was:<1>
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.failNotEquals(Assert.java:329)
	at junit.framework.Assert.assertEquals(Assert.java:78)
	at junit.framework.Assert.assertEquals(Assert.java:234)
	at junit.framework.TestCase.assertEquals(TestCase.java:377)
	at org.eclipse.jdt.debug.tests.launching.InstanceMainMethodsTests.testDefaultMainWithoutArgs(InstanceMainMethodsTests.java:61)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at junit.framework.TestCase.runTest(TestCase.java:177)
	at junit.framework.TestCase.runBare(TestCase.java:142)
	at org.eclipse.jdt.debug.tests.AbstractDebugTest.runBare(AbstractDebugTest.java:2773)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:130)
	at junit.framework.TestSuite.runTest(TestSuite.java:241)
	at junit.framework.TestSuite.run(TestSuite.java:236)
	at junit.framework.TestSuite.runTest(TestSuite.java:241)
	at org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
	
**org.eclipse.jdt.debug.tests.core.StratumTests.testAvailableStrata**

-> StackTrace ->

junit.framework.AssertionFailedError: Wrong number of available strata expected:<1> but was:<2>
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.failNotEquals(Assert.java:329)
	at junit.framework.Assert.assertEquals(Assert.java:78)
	at junit.framework.Assert.assertEquals(Assert.java:234)
	at junit.framework.TestCase.assertEquals(TestCase.java:377)
	at org.eclipse.jdt.debug.tests.core.StratumTests.testAvailableStrata(StratumTests.java:57)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at junit.framework.TestCase.runTest(TestCase.java:177)
	at junit.framework.TestCase.runBare(TestCase.java:142)
	at org.eclipse.jdt.debug.tests.AbstractDebugTest.runBare(AbstractDebugTest.java:2773)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:130)
	at junit.framework.TestSuite.runTest(TestSuite.java:241)
	at junit.framework.TestSuite.run(TestSuite.java:236)
	at junit.framework.TestSuite.runTest(TestSuite.java:241)
	at org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/506/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/506,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6NJd90,eclipse.jdt.debug,2368069492,506,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-09-23T12:27:51Z,2024-09-23T12:27:51Z,"The **mentioned** `InstanceMainMethodsTests` tests aren't failing, closing","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6NJd90/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/508,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/508,eclipse.jdt.debug,2543027388,508,many JDI tests fail in IBuilds on Windows,jukzi,51790620,Jörg Kubitz,,CLOSED,2024-09-23T15:36:43Z,2024-09-27T06:45:49Z,"![image](https://github.com/user-attachments/assets/1c66817c-79ec-4b21-94eb-535cca32a822)
```
launched with pid=14976: C:\PROGRA~1\ECLIPS~1\jdk-17.0.5.8-hotspot\bin\javaw.exe -classpath C:\Users\genie.releng\workspace\AutomatedTests\ep434I-unit-win32-java17\workarea\I20240923-0040\eclipse-testing\test-eclipse\eclipse\plugins\org.eclipse.jdt.debug.jdi.tests_1.1.100.v20240918-0908 -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=10048,suspend=y,server=y org.eclipse.debug.jdi.tests.program.MainClass
Listening for transport dt_socket at address: 10048
Connected to localhost:10048 after 87ms
launched with pid=12112: C:\PROGRA~1\ECLIPS~1\jdk-17.0.5.8-hotspot\bin\javaw.exe -classpath C:\Users\genie.releng\workspace\AutomatedTests\ep434I-unit-win32-java17\workarea\I20240923-0040\eclipse-testing\test-eclipse\eclipse\plugins\org.eclipse.jdt.debug.jdi.tests_1.1.100.v20240918-0908 -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=10050,suspend=y,server=y org.eclipse.debug.jdi.tests.program.MainClass
ERROR: transport error 202: bind failed: Permission denied
ERROR: JDWP Transport dt_socket failed to initialize, TRANSPORT_INIT(510)
JDWP exit error AGENT_ERROR_TRANSPORT_INIT(197): No transports initialized [s\src\jdk.jdwp.agent\share\native\libjdwp\debugInit.c:734]
Could not contact the VM at localhost:10050 after 5073ms

```
https://download.eclipse.org/eclipse/downloads/drops4/I20240923-0040/testresults/ep434I-unit-win32-java17_win32.win32.x86_64_17/org.eclipse.debug.jdi.tests.AutomatedSuite.txt

The port org.eclipse.debug.jdi.tests.AbstractJDITest.fBackEndPort seems to be increased from test to test with +2 until it reaches a forbidden portnumber.

Instead some valid port has to be used.

```
ServerSocket s = new ServerSocket(0);
int port = s.getLocalPort();    // returns the port the system selected
```
https://stackoverflow.com/a/2231491

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/508/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/508,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6NL7Sj,eclipse.jdt.debug,2368713891,508,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-09-23T15:56:14Z,2024-09-23T15:56:14Z,There are also **many different** Windows only test fails in other test suites. I guess we should ask for Windows machine restart via https://gitlab.eclipse.org/eclipsefdn/helpdesk/-/issues/4410,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6NL7Sj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/508,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6NUHzW,eclipse.jdt.debug,2370862294,508,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-09-24T10:17:59Z,2024-09-24T10:17:59Z,"@SougandhS are the failing tests something you could work on? Would be highly appreciated to get the i-Build clean
https://download.eclipse.org/eclipse/downloads/drops4/I20240923-1800/testResults.php","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6NUHzW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/508,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6NUSxr,eclipse.jdt.debug,2370907243,508,NA,SougandhS,177713286,Sougandh S,,NA,2024-09-24T10:42:15Z,2024-09-24T10:42:15Z,Will try to fix these all.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6NUSxr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/508,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6NxGF-,eclipse.jdt.debug,2378457470,508,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-09-27T05:57:40Z,2024-09-27T05:57:40Z,https://download.eclipse.org/eclipse/downloads/drops4/I20240926-1800/testResults.php shows no more errors for jdi on win. good job,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6NxGF-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/515,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/515,eclipse.jdt.debug,2549545825,515,[24] Umbrella Bug for BETA_JAVA24 issues in JDT.Debug,mpalat,4507939,Manoj  N Palat,manoj.palat@in.ibm.com,OPEN,2024-09-26T05:23:26Z,2025-02-06T23:03:59Z,Ref the [JDT Core issue](https://github.com/eclipse-jdt/eclipse.jdt.core/issues/2899),"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/515/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/515,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6R8Nc0,eclipse.jdt.debug,2448480052,515,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-10-30T21:48:21Z,2024-10-30T21:48:21Z,"I found two test failures in org.eclipse.jdt.core.tests.model.ModuleBuilderTests being caused by lack of support for JavaSE-24 in jdt.launching, -> filed https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/551 --> **solved** :heavy_check_mark: ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6R8Nc0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/515,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6aY_SG,eclipse.jdt.debug,2590241926,515,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2025-01-14T15:27:20Z,2025-01-14T15:27:20Z,* https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/594,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6aY_SG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/515,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6db0kG,eclipse.jdt.debug,2641316102,515,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2025-02-06T23:03:58Z,2025-02-06T23:03:58Z,"> I found two test failures in org.eclipse.jdt.core.tests.model.ModuleBuilderTests being caused by lack of support for JavaSE-24 in jdt.launching, -> filed [#551](https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/551) --> **solved** ✔️

Seems I missed at least one location:
* https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/616

So what is the minimal set of locations to change for new Java versions?

Here's what I see in current BETA_JAVA24 (plus above PR):
* EnvironmentsManager.getExecutionEnvironmentCompliance()
* ExecutionEnvironmentAnalyzer
   * new constant `JavaSE_xy`
   * static initializer should add it to `mappings`
   * `analyze()` should match it
* plugin.xml add new `<environment>`
   * plugin.properties add `environment.description.yz` to match the above
* Jenkinsfile: update `tools > jdk` and `-Ptest-on-javase-xy`
   * define that profile in pom.xml of org.eclipse.jdt.debug.tests

:warning: Looking at a previous similar commit #420 we still seem to miss a few :
* EECompilationParticipant
* StandardVMType
* JavaRuntime

Anyone familiar with those? Are there no tests needing those to be updated?
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6db0kG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/518,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/518,eclipse.jdt.debug,2555694194,518,Setting a breakpoint inside a lamda that contains an object fails,laeubi,1331477,Christoph Läubrich,,CLOSED,2024-09-27T07:40:52Z,2024-12-16T14:48:49Z,"Assume the following code

```
package example;

import java.util.Optional;
import java.util.function.Consumer;

import org.eclipse.core.databinding.observable.sideeffect.ISideEffectFactory;
import org.eclipse.jface.action.Action;
import org.eclipse.jface.databinding.swt.WidgetSideEffects;
import org.eclipse.swt.widgets.Composite;

public class NoBreakPoint {

	private Context context = new Context();

	public NoBreakPoint(Composite parent) {
		ISideEffectFactory factory = WidgetSideEffects.createFactory(parent);
		factory.create(context::getSample, sample -> new Consumer<Optional<String>>() {

			Optional<String> lastSample = Optional.empty();

			@Override
			public void accept(Optional<String> currentSample) {

				lastSample.ifPresent(System.out::println);
				currentSample.ifPresent(System.out::println);
				lastSample = currentSample;
			}
		});
	}

	private static final class Context {
		public Optional<String> getSample() {
			return Optional.of(""An example""); //$NON-NLS-1$
		}
	}

	public void dummy1() {
		new Action() {

			@Override
			public void run() {
				super.run();
			}
		};
	}

}
```

- Now try to set a breakpoint in line 24 (`lastSample.ifPresent(System.out::println);`), it seems noting happens, but the Breakpoint view shows a breakpoint without a line number (in my real world code I get sett a breakpoint far away from the line i double clicked).
- Now double click on that one in the breakpoint view --> nothing happens.
- Now do the same on line 42 (`super.run();`)
- Everything works

Here is a video:

https://github.com/user-attachments/assets/112aeb33-e76d-419d-82de-975e2776e9c4

```
Eclipse SDK

Version: 2024-12 (4.34)
Build id: I20240921-1800
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/518/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/518,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6N_e2F,eclipse.jdt.debug,2382228869,518,NA,nettozahler,106603198,,,NA,2024-09-29T21:37:57Z,2024-09-29T21:37:57Z,"Question: what is the best way to set up a proper example project having `org.eclipse.core.*`, `org.eclipse.jface.*`and `org.eclipse.swt.*` as dependencies so the above code compiles? Add some Eclipse projects to the classpath?

Anyhow - I did some mocking to make it compile and could reproduce it. I get the following error in the log:

```
org.eclipse.jface.text.BadLocationException: -1
	at org.eclipse.jface.text.TreeLineTracker.getLineInformation(TreeLineTracker.java:1153)
	at org.eclipse.jface.text.AbstractLineTracker.getLineInformation(AbstractLineTracker.java:228)
	at org.eclipse.jface.text.AbstractDocument.getLineInformation(AbstractDocument.java:873)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.getLineInformation(SynchronizableDocument.java:290)
	at org.eclipse.jdt.internal.debug.ui.actions.ToggleBreakpointAdapter.doLineBreakpointToggle(ToggleBreakpointAdapter.java:529)
	at org.eclipse.jdt.internal.debug.ui.actions.ToggleBreakpointAdapter$1.run(ToggleBreakpointAdapter.java:213)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6N_e2F/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/518,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6N_e2H,eclipse.jdt.debug,2382228871,518,NA,laeubi,1331477,Christoph Läubrich,,NA,2024-09-30T05:28:35Z,2024-09-30T05:28:35Z,"I extracted it from a real use-case, but usually a recent Eclipse as target platform should be enough, probably only the structure needs to be preserved, for example `Action` --> `Runnable`, `Composite` -> `Object` and so on...","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6N_e2H/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/518,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6OCWes,eclipse.jdt.debug,2382981036,518,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-09-30T11:55:33Z,2024-09-30T11:55:33Z,@nettozahler do you plan to work on this?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6OCWes/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/518,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6OFAFc,eclipse.jdt.debug,2383675740,518,NA,nettozahler,106603198,,,NA,2024-09-30T16:36:08Z,2024-09-30T16:36:08Z,"Well, I will do some debugging on this issue with reduced priority for me and see how far I can get. Maybe my Eclipse knowledge in `jdt.debug` is insufficient to find a solution in limited time. So I would not complain if anybody else is faster in finding a bufix :-)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6OFAFc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/527,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/527,eclipse.jdt.debug,2574868622,527,ArrayIndexOutOfBoundsException in EventReader,jukzi,51790620,Jörg Kubitz,,CLOSED,2024-10-09T06:13:40Z,2024-10-09T13:06:22Z,"```
     [java] java.lang.ArrayIndexOutOfBoundsException: 0 >= 0
     [java] 	at java.base/java.util.Vector.elementAt(Vector.java:466)
     [java] 	at org.eclipse.debug.jdi.tests.EventReader.readerLoop(EventReader.java:126)
     [java] 	at org.eclipse.debug.jdi.tests.AbstractReader$1.run(AbstractReader.java:43)
     [java] 	at java.base/java.lang.Thread.run(Thread.java:833)
```

logged in 
https://ci.eclipse.org/releng/job/AutomatedTests/job/ep434I-unit-win32-java17/53/execution/node/3/ws/workarea/I20241008-1810/eclipse-testing/results/consolelogs/ep434I-unit-win32-java17_win32.win32.x86_64_17_consolelog.txt","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/527/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/527,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6PKVWM,eclipse.jdt.debug,2401850764,527,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-10-09T09:46:43Z,2024-10-09T09:46:43Z,While iterating over the Vector removeEventListener() could have been called concurrently. The iteration should be synchronized as well.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6PKVWM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/528,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/528,eclipse.jdt.debug,2574894923,528,Random failed MethodReturnValuesTests.testGetBooleanMethodReturnValue,jukzi,51790620,Jörg Kubitz,,OPEN,2024-10-09T06:30:45Z,2024-10-09T06:30:45Z,"```
junit.framework.AssertionFailedError: return value must be true expected:<true> but was:<(void)>
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.failNotEquals(Assert.java:329)
	at junit.framework.Assert.assertEquals(Assert.java:78)
	at junit.framework.TestCase.assertEquals(TestCase.java:238)
	at org.eclipse.debug.jdi.tests.MethodReturnValuesTests.testGetBooleanMethodReturnValue(MethodReturnValuesTests.java:233)
```
https://ci.eclipse.org/releng/job/AutomatedTests/job/ep434I-unit-win32-java17/53/testReport/junit/org.eclipse.debug.jdi.tests/MethodReturnValuesTests/testGetBooleanMethodReturnValue/","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/528/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/529,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/529,eclipse.jdt.debug,2574903138,529,Random failed JavaStackTraceAmbiguityTest.testLinkNavigationTrueForSingleParameter,jukzi,51790620,Jörg Kubitz,,OPEN,2024-10-09T06:33:47Z,2024-10-09T06:33:47Z,"""StackTest\src\a\Sample.java"" could not be deleted


```
org.eclipse.core.internal.resources.ResourceException: Problems encountered while deleting resources.
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:816)
	at org.eclipse.core.internal.resources.Project.delete(Project.java:365)
	at org.eclipse.jdt.debug.tests.console.JavaStackTraceAmbiguityTest.testLinkNavigationTrueForSingleParameter(JavaStackTraceAmbiguityTest.java:83)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at junit.framework.TestCase.runTest(TestCase.java:177)
	at junit.framework.TestCase.runBare(TestCase.java:142)
	at org.eclipse.jdt.debug.tests.AbstractDebugTest.runBare(AbstractDebugTest.java:2773)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:130)
	at junit.framework.TestSuite.runTest(TestSuite.java:241)
	at junit.framework.TestSuite.run(TestSuite.java:236)
	at junit.framework.TestSuite.runTest(TestSuite.java:241)
	at org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Contains: Could not delete '/StackTest/src'.
org.eclipse.core.internal.resources.ResourceException: Problems encountered while deleting resources.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.delete(FileSystemResourceManager.java:416)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:363)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteProject(ResourceTree.java:398)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteProject(ResourceTree.java:855)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1834)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:803)
	at org.eclipse.core.internal.resources.Project.delete(Project.java:365)
	at org.eclipse.jdt.debug.tests.console.JavaStackTraceAmbiguityTest.testLinkNavigationTrueForSingleParameter(JavaStackTraceAmbiguityTest.java:83)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at junit.framework.TestCase.runTest(TestCase.java:177)
	at junit.framework.TestCase.runBare(TestCase.java:142)
	at org.eclipse.jdt.debug.tests.AbstractDebugTest.runBare(AbstractDebugTest.java:2773)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:130)
	at junit.framework.TestSuite.runTest(TestSuite.java:241)
	at junit.framework.TestSuite.run(TestSuite.java:236)
	at junit.framework.TestSuite.runTest(TestSuite.java:241)
	at org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Contains: Problems encountered while deleting files.
Contains: Problems encountered while deleting files.
Contains: Could not delete: C:\Users\genie.releng\workspace\AutomatedTests\ep434I-unit-win32-java17\workarea\I20241008-1810\eclipse-testing\test-eclipse\eclipse\jdt_folder\StackTest\src\a\Sample.java.
java.nio.file.FileSystemException: C:\Users\genie.releng\workspace\AutomatedTests\ep434I-unit-win32-java17\workarea\I20241008-1810\eclipse-testing\test-eclipse\eclipse\jdt_folder\StackTest\src\a\Sample.java: The process cannot access the file because it is being used by another process
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:275)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1191)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:308)
	at org.eclipse.core.internal.filesystem.local.LocalFile.lambda$2(LocalFile.java:325)
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedCallable.exec(ForkJoinTask.java:1428)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinTask.awaitDone(ForkJoinTask.java:436)
	at java.base/java.util.concurrent.ForkJoinTask.get(ForkJoinTask.java:979)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:335)
	at org.eclipse.core.internal.filesystem.local.LocalFile.lambda$2(LocalFile.java:325)
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedCallable.exec(ForkJoinTask.java:1428)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
Contains: OK
Contains: OK
Contains: OK
Contains: OK
Contains: Could not delete 'C:\Users\genie.releng\workspace\AutomatedTests\ep434I-unit-win32-java17\workarea\I20241008-1810\eclipse-testing\test-eclipse\eclipse\jdt_folder\StackTest'.

```
https://ci.eclipse.org/releng/job/AutomatedTests/job/ep434I-unit-win32-java17/53/testReport/junit/org.eclipse.jdt.debug.tests.console/JavaStackTraceAmbiguityTest/testLinkNavigationTrueForSingleParameter/","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/529/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/534,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/534,eclipse.jdt.debug,2580872723,534,"Exception while trying to open ""Installed JREs"" in Preferences",MohananRahul,121536011,Rahul Mohanan,,CLOSED,2024-10-11T09:14:45Z,2025-01-09T10:25:54Z,"Exception while trying to open ""Installed JREs"" in Preferences , when trying to use jre.

1. Open eclipse.ini file and add
-vm
jre17/bin/javaw.exe // jre-17 path
2. Start Eclipse
3. Open Preference dialog
4. Click Java
5. clicked on Installed JREs or Debug.

![image](https://github.com/user-attachments/assets/e07c58a1-bb51-4c8c-b0b6-f13d2ea59978)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/534/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/534,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Phwhk,eclipse.jdt.debug,2407991396,534,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-10-11T19:15:07Z,2024-10-11T19:15:07Z,"JDT requires JDK, not JRE.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Phwhk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/534,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Q58PJ,eclipse.jdt.debug,2431108041,534,NA,SougandhS,177713286,Sougandh S,,NA,2024-10-23T07:11:34Z,2024-10-23T07:11:34Z,"I did an investigation and found few classes were found missing while activating bundles in jdt debug
java.lang.ClassNotFoundException: com.sun.jdi.VMDisconnectedException cannot be found by org.eclipse.jdt.debug_3.21.600.qualifier

<img width=""1319"" alt=""image"" src=""https://github.com/user-attachments/assets/53e6c320-ef6b-4be6-905c-e66fb02079ee"">

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Q58PJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/534,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6RITVC,eclipse.jdt.debug,2434872642,534,NA,SougandhS,177713286,Sougandh S,,NA,2024-10-24T10:16:43Z,2024-10-24T10:16:43Z,"Hi @iloveeclipse @jukzi 
I did a JDK availability check prior executing the exception case and now the JRE Selection window opened without any issues. 
<img width=""480"" alt=""image"" src=""https://github.com/user-attachments/assets/7a3d4828-1777-468b-80ad-5faee6561824"">
<img width=""507"" alt=""image"" src=""https://github.com/user-attachments/assets/59bcca0e-7c43-47b3-b58f-00f1d0fff27d"">

Might be useful for JRE depended eclipse projects ?
<img width=""704"" alt=""image"" src=""https://github.com/user-attachments/assets/ad96af78-a4c1-4c9d-a5c9-cd3c4703b702"">

Shall I raise a PR for this ?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6RITVC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/534,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6RJyeU,eclipse.jdt.debug,2435262356,534,NA,gireeshpunathil,6447530,Gireesh Punathil,gpunathi@in.ibm.com,NA,2024-10-24T13:12:26Z,2024-10-24T13:12:26Z,"> JDT requires JDK, not JRE.

@iloveeclipse - is this by design, or by chance? are there any docs that state this?

my view is: if it is a dependency of a handful of classes that have alternatives (like the one @SougandhS  identified), we could `fix` it and make JDT JDK-independent. on the other hand if JDT critically depends on JDK through very many dependencies, we could leave it as is and document this as a design.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6RJyeU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/534,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6RNIhv,eclipse.jdt.debug,2436139119,534,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-10-24T19:03:06Z,2024-10-24T19:03:06Z,"> is this by design

Yes.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6RNIhv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/534,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6RPYAR,eclipse.jdt.debug,2436726801,534,NA,gireeshpunathil,6447530,Gireesh Punathil,gpunathi@in.ibm.com,NA,2024-10-25T03:20:27Z,2024-10-25T03:20:27Z,"i did an extensive search in the docs but could not find clear evidence of why JDK is required. chatgpt gave this response, but i have to work with it a little to weed out some other wrong answers it gave initially, so its authenticity is questionable:

`JDT depends on JDK through debugging APIs such as jdb, packaging tools such as jar, refactoring and profiling tools.`","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6RPYAR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/534,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6RPsUv,eclipse.jdt.debug,2436810031,534,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-10-25T04:36:53Z,2024-10-25T04:36:53Z,"> i did an extensive search in the docs

Check bugzilla please. It's not a new question and Chatgpt is right, obviously it knows bugzilla ticket.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6RPsUv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/534,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6RQUgl,eclipse.jdt.debug,2436974629,534,NA,gireeshpunathil,6447530,Gireesh Punathil,gpunathi@in.ibm.com,NA,2024-10-25T06:23:25Z,2024-10-25T06:23:25Z,"i found this, which states JDT needs just a JRE.

https://www.eclipse.org/forums/index.php?t=msg&th=1109328&goto=1847514&#msg_1847514

i also found this, which states If you intend to use Eclipse for Java development, then you should install a JDK

https://wiki.eclipse.org/Eclipse/Installation/#:~:text=If%20you%20intend%20to%20use,upgrading%20usually%20won't%20hurt.

and i get confused. probably these are old doc and wasn't revised over time?

either way, the question still lingers: why JDT needs JDK? what are the critical dependencies?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6RQUgl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/534,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6RQZmu,eclipse.jdt.debug,2436995502,534,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2024-10-25T06:35:54Z,2024-10-25T06:35:54Z,"The Debugger part like JDI, JDWP is part of JDK so JDT Debug will not be able to work without JDK.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6RQZmu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/536,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/536,eclipse.jdt.debug,2585559313,536,JDT.Debug Components - Track I Build test results,mpalat,4507939,Manoj  N Palat,manoj.palat@in.ibm.com,OPEN,2024-10-14T10:25:19Z,2024-10-24T06:21:43Z,"
refer: https://www.eclipse.org/lists/jdt-dev/msg02441.html

Check the I build failures - https://download.eclipse.org/eclipse/downloads/index.html

The following components will be tracked:
jdt.debug.jdi.tests
jdt.debug.tests


Once the I build failures are checked, please mention the I build version and if there are issues, please create appropriate issues and mention the issue numbers
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/536/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/536,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6PsOpi,eclipse.jdt.debug,2410736226,536,NA,mpalat,4507939,Manoj  N Palat,manoj.palat@in.ibm.com,NA,2024-10-14T10:25:40Z,2024-10-14T10:25:40Z,@SougandhS Could you please also take a look at the failures?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6PsOpi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/536,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6PsStE,eclipse.jdt.debug,2410752836,536,NA,SougandhS,177713286,Sougandh S,,NA,2024-10-14T10:28:59Z,2024-10-14T10:28:59Z,Sure @mpalat ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6PsStE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/536,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6PsZFk,eclipse.jdt.debug,2410778980,536,NA,mpalat,4507939,Manoj  N Palat,manoj.palat@in.ibm.com,NA,2024-10-14T10:34:16Z,2024-10-14T10:34:16Z,"@jukzi I took the liberty of adding you here - please feel free to decide.  Thanks
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6PsZFk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/536,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6P2z2X,eclipse.jdt.debug,2413510039,536,NA,SougandhS,177713286,Sougandh S,,NA,2024-10-15T10:30:05Z,2024-10-15T10:30:05Z,"I20241014-0530 IBuild test failure - 
Track - https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/537

-- Update [Closed]","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6P2z2X/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/536,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6QA43y,eclipse.jdt.debug,2416152050,536,NA,SougandhS,177713286,Sougandh S,,NA,2024-10-16T08:56:44Z,2024-10-16T08:56:44Z,"I20241015-1820 , I20241016-0020, I20241016-2000 IBuilds test failure [Regression] - 

Track - https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/539","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6QA43y/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/536,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Q4wF_,eclipse.jdt.debug,2430796159,536,NA,SougandhS,177713286,Sougandh S,,NA,2024-10-23T03:41:33Z,2024-10-23T03:41:33Z,"I20241021-0550 - Regression as reported by previous builds #539 
I20241022-0020 - Regression as reported by previous builds #539 
I20241022-0640 - Regression as reported by previous builds #539 
I20241023-1800 - Regression as reported by previous builds #539 ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Q4wF_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/537,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/537,eclipse.jdt.debug,2587394852,537,3 Test failures for I20241014-0530 build on Windows,SougandhS,177713286,Sougandh S,,CLOSED,2024-10-15T01:22:11Z,2024-10-16T08:59:41Z,"Unit test results -> https://download.eclipse.org/eclipse/downloads/drops4/I20241014-0530/testresults/html/org.eclipse.jdt.debug.tests_ep434I-unit-win32-java17_win32.win32.x86_64_17.html

1 . org.eclipse.jdt.debug.tests.breakpoints.WatchpointTests.testFinalWatchpoint

ERROR
Program did not suspend, launch terminated.
org.eclipse.jdt.debug.tests.AbstractDebugTest$TestAgainException: Program did not suspend, launch terminated.at org.eclipse.jdt.debug.tests.AbstractDebugTest.launchAndWait(AbstractDebugTest.java:1310)at org.eclipse.jdt.debug.tests.AbstractDebugTest.launchAndWait(AbstractDebugTest.java:1260)at org.eclipse.jdt.debug.tests.AbstractDebugTest.launchToBreakpoint(AbstractDebugTest.java:1450)at org.eclipse.jdt.debug.tests.AbstractDebugTest.launchToBreakpoint(AbstractDebugTest.java:1405)at org.eclipse.jdt.debug.tests.AbstractDebugTest.launchToBreakpoint(AbstractDebugTest.java:1377)at org.eclipse.jdt.debug.tests.AbstractDebugTest.launchToBreakpoint(AbstractDebugTest.java:1364)at org.eclipse.jdt.debug.tests.breakpoints.WatchpointTests.testFinalWatchpoint(WatchpointTests.java:305)at java.base/java.lang.reflect.Method.invoke(Method.java:568)at junit.framework.TestCase.runTest(TestCase.java:177)at junit.framework.TestCase.runBare(TestCase.java:142)at org.eclipse.jdt.debug.tests.AbstractDebugTest.runBare(AbstractDebugTest.java:2786)at junit.framework.TestResult$1.protect(TestResult.java:122)at junit.framework.TestResult.runProtected(TestResult.java:142)at junit.framework.TestResult.run(TestResult.java:125)at junit.framework.TestCase.run(TestCase.java:130)at junit.framework.TestSuite.runTest(TestSuite.java:241)at junit.framework.TestSuite.run(TestSuite.java:236)at junit.framework.TestSuite.runTest(TestSuite.java:241)at org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:61)at java.base/java.lang.Thread.run(Thread.java:833)

2. org.eclipse.jdt.debug.tests.breakpoints.TriggerPointBreakpointsTests.testTriggerPointBreakpoint

ERROR
Program did not suspend, launch terminated.
org.eclipse.jdt.debug.tests.AbstractDebugTest$TestAgainException: Program did not suspend, launch terminated.
at org.eclipse.jdt.debug.tests.AbstractDebugTest.launchAndWait(AbstractDebugTest.java:1310)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.launchAndWait(AbstractDebugTest.java:1260)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.launchToLineBreakpoint(AbstractDebugTest.java:1548)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.launchToLineBreakpoint(AbstractDebugTest.java:1531)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.launchToLineBreakpoint(AbstractDebugTest.java:1515)
at org.eclipse.jdt.debug.tests.breakpoints.TriggerPointBreakpointsTests.testTriggerPointBreakpoint(TriggerPointBreakpointsTests.java:46)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at junit.framework.TestCase.runTest(TestCase.java:177)
at junit.framework.TestCase.runBare(TestCase.java:142)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.runBare(AbstractDebugTest.java:2786)
at junit.framework.TestResult$1.protect(TestResult.java:122)
at junit.framework.TestResult.runProtected(TestResult.java:142)
at junit.framework.TestResult.run(TestResult.java:125)
at junit.framework.TestCase.run(TestCase.java:130)
at junit.framework.TestSuite.runTest(TestSuite.java:241)
at junit.framework.TestSuite.run(TestSuite.java:236)
at junit.framework.TestSuite.runTest(TestSuite.java:241)
at org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:61)
at java.base/java.lang.Thread.run(Thread.java:833)


3. org.eclipse.jdt.debug.tests.ui.DebugHoverTests. testBug573547_insideLambda_onOuterScopeVariable_whileOnPreviousFrame

Failure
After waiting 10000ms the editor selection was not moved to the expected line expected:<39> but was:<40>

junit.framework.AssertionFailedError: After waiting 10000ms the editor selection was not moved to the expected line expected:<39> but was:<40>
at junit.framework.Assert.fail(Assert.java:57)
at junit.framework.Assert.failNotEquals(Assert.java:329)
at junit.framework.Assert.assertEquals(Assert.java:78)
at junit.framework.Assert.assertEquals(Assert.java:234)
at junit.framework.TestCase.assertEquals(TestCase.java:377)
at org.eclipse.jdt.debug.tests.ui.DebugHoverTests.selectFrame(DebugHoverTests.java:1484)
at org.eclipse.jdt.debug.tests.ui.DebugHoverTests.testBug573547_insideLambda_onOuterScopeVariable_whileOnPreviousFrame(DebugHoverTests.java:1246)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at junit.framework.TestCase.runTest(TestCase.java:177)
at junit.framework.TestCase.runBare(TestCase.java:142)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.runBare(AbstractDebugTest.java:2773)
at junit.framework.TestResult$1.protect(TestResult.java:122)
at junit.framework.TestResult.runProtected(TestResult.java:142)
at junit.framework.TestResult.run(TestResult.java:125)
at junit.framework.TestCase.run(TestCase.java:130)
at junit.framework.TestSuite.runTest(TestSuite.java:241)
at junit.framework.TestSuite.run(TestSuite.java:236)
at junit.framework.TestSuite.runTest(TestSuite.java:241)
at org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:61)
at java.base/java.lang.Thread.run(Thread.java:833)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/537/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/537,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6QAxlL,eclipse.jdt.debug,2416122187,537,NA,SougandhS,177713286,Sougandh S,,NA,2024-10-16T08:44:07Z,2024-10-16T08:44:07Z,"Test 1 & 2 passed on IBuild [[I20241015-1820](https://download.eclipse.org/eclipse/downloads/drops4/I20241015-1820/testResults.php)] 
Test 3 - Regression 
Will close this issue and raise for Regression","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6QAxlL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/537,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6QA4vY,eclipse.jdt.debug,2416151512,537,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2024-10-16T08:56:29Z,2024-10-16T08:56:29Z,Was there anything done to fix the test? If not it's quite likely that this is unstable test that will fail soon again.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6QA4vY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/537,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6QA58u,eclipse.jdt.debug,2416156462,537,NA,SougandhS,177713286,Sougandh S,,NA,2024-10-16T08:58:44Z,2024-10-16T08:58:44Z,"No fix were done for 1 & 2, but those are also new.
1 fix was done for 3rd one (Regression) but still its coming up.
for the regression new issue has raised -> https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/539","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6QA58u/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/539,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/539,eclipse.jdt.debug,2591153772,539,Test org.eclipse.jdt.debug.tests.ui.DebugHoverTests Regression,SougandhS,177713286,Sougandh S,,CLOSED,2024-10-16T08:56:29Z,2024-11-05T04:56:11Z,"IBuild - [I20241015-1820](https://download.eclipse.org/eclipse/downloads/drops4/I20241015-1820/)
IBuild - [I20241016-0020](https://download.eclipse.org/eclipse/downloads/drops4/I20241016-0020/)
IBuild - [I20241016-2000](https://download.eclipse.org/eclipse/downloads/drops4/I20241016-2000/)
https://download.eclipse.org/eclipse/downloads/drops4/I20241015-1820/testResults.php


<img width=""1728"" alt=""image"" src=""https://github.com/user-attachments/assets/bfa48746-bb2a-4910-9910-12966d76ff07"">

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/539/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/539,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6SZymo,eclipse.jdt.debug,2456234408,539,NA,SougandhS,177713286,Sougandh S,,NA,2024-11-05T04:56:11Z,2024-11-05T04:56:11Z,Closing this since latest ibuilds aren't failing this anymore. ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6SZymo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/540,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/540,eclipse.jdt.debug,2596979867,540,Update org.eclipse.jdt.launching.javaagent to use ASM 9.7.1,SougandhS,177713286,Sougandh S,,CLOSED,2024-10-18T09:29:49Z,2024-10-28T07:36:43Z,"New version of ASM available - 9.7.1
https://asm.ow2.io/
<img width=""664"" alt=""image"" src=""https://github.com/user-attachments/assets/164a0fcb-5649-451e-8236-e8eccabd00ec"">

-- Will upgrade it","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/540/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/540,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Rewt-,eclipse.jdt.debug,2440760190,540,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-10-28T07:36:43Z,2024-10-28T07:36:43Z,thanks @SougandhS ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Rewt-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/543,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/543,eclipse.jdt.debug,2602060237,543,Java console throws error on opening type,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2024-10-21T10:17:09Z,2024-10-21T16:00:36Z,"Open Java console, paste the stack below into and try to click on the `RejectedExecutionException`: error popup will be shown

![image](https://github.com/user-attachments/assets/196dca75-5457-4a66-8019-a378b378141c)

```
java.util.concurrent.ExecutionException: java.util.concurrent.RejectedExecutionException: java.util.concurrent.RejectedExecutionException: Thread limit exceeded replacing blocked worker
	at java.base/java.util.concurrent.ForkJoinTask.reportExecutionException(ForkJoinTask.java:605)
	at java.base/java.util.concurrent.ForkJoinTask.get(ForkJoinTask.java:981)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:335)
	at org.eclipse.core.internal.filesystem.local.LocalFile.delete(LocalFile.java:201)
	at org.eclipse.core.internal.localstore.DeleteVisitor.delete(DeleteVisitor.java:66)
	at org.eclipse.core.internal.localstore.DeleteVisitor.visit(DeleteVisitor.java:156)
	at org.eclipse.core.internal.localstore.UnifiedTree.accept(UnifiedTree.java:126)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.delete(FileSystemResourceManager.java:413)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:363)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteProject(ResourceTree.java:398)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteProject(ResourceTree.java:855)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1834)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:803)
	at org.eclipse.core.internal.resources.Project.delete(Project.java:365)
	at org.eclipse.ui.tests.dialogs.ResourceSelectionFilteringDialogTest.doTearDown(ResourceSelectionFilteringDialogTest.java:74)
```

Error reported is:

```
java.lang.NullPointerException: Cannot invoke ""String.indexOf(int)"" because ""originalHyperLink2"" is null
	at org.eclipse.jdt.internal.debug.ui.console.JavaStackTraceHyperlink$3.runInUIThread(JavaStackTraceHyperlink.java:211)
	at org.eclipse.ui.progress.UIJob.lambda$0(UIJob.java:148)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:5040)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4520)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/543/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/543,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6QnaSy,eclipse.jdt.debug,2426250418,543,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-10-21T10:19:40Z,2024-10-21T10:19:40Z,"Regression from https://github.com/eclipse-jdt/eclipse.jdt.debug/commit/32fa010c75eaf33a585f5614c1557370e09efecf  /https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/498

@SougandhS, @jukzi : please check.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6QnaSy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/543,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6QnhzJ,eclipse.jdt.debug,2426281161,543,NA,SougandhS,177713286,Sougandh S,,NA,2024-10-21T10:34:32Z,2024-10-21T10:34:32Z,Seems like the generated link is not proper. will handle this now.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6QnhzJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/543,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6QoBem,eclipse.jdt.debug,2426410918,543,NA,SougandhS,177713286,Sougandh S,,NA,2024-10-21T11:30:19Z,2024-10-21T11:30:19Z,Fix is done - https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/544,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6QoBem/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/543,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6QqZMb,eclipse.jdt.debug,2427032347,543,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-10-21T15:35:07Z,2024-10-21T15:35:07Z,"> Fix is done - #544

Unfortunately neither fix not original change are OK. 
I would prefer to revert original PR completely: https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/545","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6QqZMb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/543,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6QqiGM,eclipse.jdt.debug,2427068812,543,NA,SougandhS,177713286,Sougandh S,,NA,2024-10-21T15:49:49Z,2024-10-21T15:49:49Z,"> > Fix is done - #544
> 
> Unfortunately neither fix not original change are OK. I would prefer to revert original PR completely: #545

Okay @iloveeclipse ,will try this PR again with more improvements. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6QqiGM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/546,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/546,eclipse.jdt.debug,2604511630,546,Trigger Point Occasionally Disables Automatically,subyssurendran666,117082823,Suby S Surendran,suby.surendran@ibm.com,CLOSED,2024-10-22T07:20:29Z,2024-12-06T05:50:44Z,"<img width=""727"" alt=""Screenshot 2024-10-22 at 12 39 18 PM"" src=""https://github.com/user-attachments/assets/46912003-42d8-48ac-a50f-6fff35719020"">

**Reproducible Steps:**

1. Set two breakpoints in your code.
2. Enable the Trigger Point checkbox for the first breakpoint.
3. Start debugging the application.
4. Once the first breakpoint is hit, click Resume (F8 on Mac) to continue execution and perform more debugging.
5. After completing debugging, Terminate the session using (CMD + F2).
6. Notice that the Trigger Point of the first breakpoint is automatically disabled after terminating the debugging session.

@SougandhS could you please check this issue. Thanks in advance.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/546/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/546,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Qv1Cx,eclipse.jdt.debug,2428457137,546,NA,SougandhS,177713286,Sougandh S,,NA,2024-10-22T07:21:40Z,2024-10-22T07:21:40Z,Will check this @subyssurendran666 ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Qv1Cx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/546,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6RyfEI,eclipse.jdt.debug,2445930760,546,NA,SougandhS,177713286,Sougandh S,,NA,2024-10-30T05:51:45Z,2024-10-30T05:51:45Z,I tried all the possible ways to reproduce the issue but couldn't replicate it. Could you pls provide specific scenario. ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6RyfEI/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/546,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6R1A44,eclipse.jdt.debug,2446593592,546,NA,subyssurendran666,117082823,Suby S Surendran,suby.surendran@ibm.com,NA,2024-10-30T11:00:04Z,2024-10-30T11:00:04Z,"> I tried all the possible ways to reproduce the issue but couldn't replicate it. Could you pls provide specific scenario.

The problem occurs very occasionally. Actually, today I face it again. I will try to find out the specific circumstances under which this occurred and get back to you.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6R1A44/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/546,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6R88wu,eclipse.jdt.debug,2448673838,546,NA,SougandhS,177713286,Sougandh S,,NA,2024-10-30T23:36:13Z,2024-10-30T23:36:13Z,"> > I tried all the possible ways to reproduce the issue but couldn't replicate it. Could you pls provide specific scenario.
> 
> The problem occurs very occasionally. Actually, today I face it again. I will try to find out the specific circumstances under which this occurred and get back to you.

thanks ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6R88wu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/546,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6SHQNo,eclipse.jdt.debug,2451374952,546,NA,subyssurendran666,117082823,Suby S Surendran,suby.surendran@ibm.com,NA,2024-11-01T06:29:21Z,2024-11-01T06:29:21Z,"Today the problem arose again. But I can't capture the screen recording or know the exact situation.

I have a suggestion. (Although it might seem a bit naive): From my understanding The problem appears to occur because the trigger point was disabled during debugging. which is currently in use (Please see screenshot). Can Trigger points be set to be  enabled when debugging ?

 
<img width=""379"" alt=""Screenshot 2024-11-01 at 10 58 57 AM"" src=""https://github.com/user-attachments/assets/bfb1e534-9523-4e79-af70-552bac9b9be7"">


@jukzi could you please share your thoughts ?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6SHQNo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/546,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6SHgSw,eclipse.jdt.debug,2451440816,546,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-11-01T07:38:33Z,2024-11-01T07:38:33Z,I can not remember to have had such problem. But i also only use only one Trigger point at a time. I don't even know what has to be expected when using too triggerpoint - which one should trigger the other?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6SHgSw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/546,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6SI3Yy,eclipse.jdt.debug,2451797554,546,NA,subyssurendran666,117082823,Suby S Surendran,suby.surendran@ibm.com,NA,2024-11-01T12:30:08Z,2024-11-01T12:30:08Z,"I'm so sorry, my reply might confused you. Here, I set only one trigger point along with multiple breakpoints. 

**Current flow**
==========
When debugging starts, the IDE automatically unchecks the trigger point's checkbox in the breakpoint view when it is triggered. Similarly, the IDE automatically checks the trigger point once debugging ends.

**Bug**
===
As mentioned above, the IDE automatically unchecks the trigger point. However, after debugging, the IDE does not automatically recheck the trigger point.

**Suggestion**
=======
As per the issue I reported, why should we allow the IDE to uncheck the trigger point when it is triggered in the breakpoints view?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6SI3Yy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/546,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6SI7HW,eclipse.jdt.debug,2451812822,546,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2024-11-01T12:43:02Z,2024-11-01T12:43:02Z,"This is the basic characteristic of trigger point, it gets disable as that was its purpose. If you will have multiple trigger points, any one of them will hit and that will disable all the trigger points.
If that remains enabled, then none of the breakpoints will become active. 
By definition, trigger point is the breakpoint which will trigger the debugging sessions.
Closing the issue as ""Works as designed"".","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6SI7HW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/546,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6VXD4z,eclipse.jdt.debug,2505850419,546,NA,subyssurendran666,117082823,Suby S Surendran,suby.surendran@ibm.com,NA,2024-11-28T11:05:05Z,2024-11-28T11:05:05Z,"Please use the following steps to reproduce the issue(Video reproducer link also attached).
Video reproducer: [https://drive.google.com/file/d/1_VBMwvXB_IzBhI5NFIzDVx2kKSZdlx2g/view?usp=sharing](https://drive.google.com/file/d/1_VBMwvXB_IzBhI5NFIzDVx2kKSZdlx2g/view?usp=sharing)

Steps to reproduce:
------------------
1. Make multiple breakpoints(ensure one is a trigger point)
2. Proceed with the debug mode. Then made some changes in the source code and save, so the debug process will restart.
3. Then terminate the process.

NB: This issue occurs consistently, not occasionally

@jukzi @SarikaSinha @SougandhS could you please try with the above steps.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6VXD4z/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/549,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/549,eclipse.jdt.debug,2620230610,549,Option for Disable all conditions in breakpoints ,SougandhS,177713286,Sougandh S,,OPEN,2024-10-29T06:03:50Z,2025-01-23T23:27:21Z,"As there is already an option for Remove all Trigger property in breakpoints, 

Current -
<img width=""354"" alt=""image"" src=""https://github.com/user-attachments/assets/5e6f0ef8-9532-48fa-bce7-1efe663c8dc0"">

Proposed - 
<img width=""351"" alt=""image"" src=""https://github.com/user-attachments/assets/3dcd223a-da04-4883-b97f-8b5c50cb7083"">

Disabling all conditions in all breakpoints option will be useful for developers.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/549/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/549,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6RodW4,eclipse.jdt.debug,2443302328,549,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-10-29T06:14:12Z,2024-10-29T06:14:12Z,"> Removing all conditional breakpoints option will be useful for developers.

I don't think so. This only overloads the menu.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6RodW4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/549,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6RodqX,eclipse.jdt.debug,2443303575,549,NA,SougandhS,177713286,Sougandh S,,NA,2024-10-29T06:15:19Z,2024-10-29T06:15:19Z,"> > Removing all conditional breakpoints option will be useful for developers.
> 
> I don't think so. This only overloads the menu.

Created a PR for that. can u check that ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6RodqX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/549,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Rog0M,eclipse.jdt.debug,2443316492,549,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-10-29T06:25:55Z,2024-10-29T06:25:55Z,"> Created a PR for that. can u check that

Checked, same result, see my comment there.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Rog0M/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/549,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Ro2Jf,eclipse.jdt.debug,2443403871,549,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-10-29T07:16:24Z,2024-10-29T07:16:24Z,@SougandhS : please also update this ticket description & attached screenshot.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Ro2Jf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/549,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6RpWgt,eclipse.jdt.debug,2443536429,549,NA,SougandhS,177713286,Sougandh S,,NA,2024-10-29T08:19:15Z,2024-10-29T08:19:15Z,@iloveeclipse updated it now.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6RpWgt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/549,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bl0z9,eclipse.jdt.debug,2610384125,549,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-23T16:43:02Z,2025-01-23T16:43:02Z,"I just used the ""Disable all""  breakpoints. thanks. But what i wanted to do was ""Disable all other Breakpoints"", so i had to enable it afterwards again. @SougandhS how about such?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bl0z9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/549,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bpAtW,eclipse.jdt.debug,2611219286,549,NA,SougandhS,177713286,Sougandh S,,NA,2025-01-23T23:27:20Z,2025-01-23T23:27:20Z,"> I just used the ""Disable all"" breakpoints. thanks. But what i wanted to do was ""Disable all other Breakpoints"", so i had to enable it afterwards again. [@SougandhS](https://github.com/SougandhS) how about such?

will be a very useful feature 👍 ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bpAtW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/551,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/551,eclipse.jdt.debug,2625415503,551,[24] Add Execution Environment for JavaSE-24,stephan-herrmann,24587985,Stephan Herrmann,,CLOSED,2024-10-30T21:45:33Z,2024-11-02T13:31:32Z,"Similar to #419

At the same time the branch BETA_JAVA24 needs to be created.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/551/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/551,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6SNau9,eclipse.jdt.debug,2452990909,551,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-11-02T13:29:46Z,2024-11-02T13:29:46Z,Branch with updates from #552 has been pushed upstream.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6SNau9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/551,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6SNa3R,eclipse.jdt.debug,2452991441,551,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-11-02T13:31:30Z,2024-11-02T13:31:30Z,* Next in line is https://github.com/eclipse-platform/eclipse.platform.releng.aggregator/issues/2505,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6SNa3R/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/553,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/553,eclipse.jdt.debug,2631517249,553,[24] Monitor failures in tests of Y-Builds,stephan-herrmann,24587985,Stephan Herrmann,,OPEN,2024-11-03T22:24:09Z,2025-02-05T00:17:11Z,"Meanwhile we have meaningful test results in these builds
* https://ci.eclipse.org/releng/job/YPBuilds/job/ep434Y-unit-cen64-gtk3-java24
* https://ci.eclipse.org/jdt/job/eclipse.jdt.debug-github/job/BETA_JAVA24

 I suggest we monitor these builds to catch any problems early
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/553/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/553,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6SPvc_,eclipse.jdt.debug,2453600063,553,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-11-03T22:27:27Z,2024-11-03T22:27:27Z,"As of today I see these failures:
* Y-Build
  * [org.eclipse.jdt.debug.tests.core](https://ci.eclipse.org/releng/job/YPBuilds/job/ep434Y-unit-cen64-gtk3-java24/7/testReport/org.eclipse.jdt.debug.tests.core/) 7 failures
  * [org.eclipse.jdt.debug.tests.launching](https://ci.eclipse.org/releng/job/YPBuilds/job/ep434Y-unit-cen64-gtk3-java24/7/testReport/org.eclipse.jdt.debug.tests.launching/) 2 failures
  * [org.eclipse.jdt.debug.tests.variables](https://ci.eclipse.org/releng/job/YPBuilds/job/ep434Y-unit-cen64-gtk3-java24/7/testReport/org.eclipse.jdt.debug.tests.variables/) 1 failure
* jdt.debug BETA_JAVA24
  * zero failures -- still running on **Java 21**","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6SPvc_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/553,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Swa4C,eclipse.jdt.debug,2462166530,553,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-11-07T12:53:30Z,2024-11-07T12:53:30Z,"Results in https://ci.eclipse.org/releng/job/YPBuilds/job/ep434Y-unit-cen64-gtk3-java24/10/testReport/ :
* org.eclipse.jdt.debug.tests.core: 6 failures (-1)
* org.eclipse.jdt.debug.tests.launching: 2 failures
* org.eclipse.jdt.debug.tests.variables: 0 failures  (-1)
* org.eclipse.jdt.debug.tests.ui: 1 failure (+1)

New feailure is in VirtualThreadsDebugViewTests.testVirtualThreadDebugView:
```
expected no launches after test expected:<[]> but was:<[org.eclipse.debug.core.Launch@4e2cfa12]>
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Swa4C/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/553,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6VXKJO,eclipse.jdt.debug,2505876046,553,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-11-28T11:17:54Z,2024-11-28T11:17:54Z,"Build failed: https://ci.eclipse.org/jdt/job/eclipse.jdt.debug-github/job/BETA_JAVA24/3

Error is:
```
[2024-11-27T06:01:43.632Z] [ERROR] Failed to execute goal org.eclipse.tycho.extras:tycho-p2-extras-plugin:4.0.10:compare-version-with-baselines (compare-attached-artifacts-with-release) on project org.eclipse.jdt.debug.tests: Only qualifier changed for (org.eclipse.jdt.debug.tests/3.12.550.v20241127-0537). Expected to have bigger x.y.z than what is available in baseline (3.12.550.v20241114-1350) -> [Help 1]
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6VXKJO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/553,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6ZgJJH,eclipse.jdt.debug,2575340103,553,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2025-01-07T13:49:02Z,2025-01-07T13:49:02Z,"After temporary breakage of tests, we have fresh results again: no changes wrt. the Nov 7 results.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6ZgJJH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/553,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6ZgrZt,eclipse.jdt.debug,2575480429,553,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2025-01-07T14:46:58Z,2025-01-07T14:46:58Z,"Detailed test report for jdt.debug: https://download.eclipse.org/eclipse/downloads/drops4/Y20250106-1000/testresults/html/org.eclipse.jdt.debug.tests_ep435Y-unit-linux-x86_64-java24_linux.gtk.x86_64_24.html

Console log is here: https://download.eclipse.org/eclipse/downloads/drops4/Y20250106-1000/testresults/ep435Y-unit-linux-x86_64-java24_linux.gtk.x86_64_24/org.eclipse.jdt.debug.tests.AutomatedSuite.txt

Log file contains this:
```
JRE Eclipse Adoptium/24-beta is not supported, advanced source lookup disabled.
 Eclipse debugger will use less precise source lookup implementation for this debug session, but everything else will continue to work otherwise.
Upgrading Eclipse to the latest version will likely make this warning go away.one
```

Does anyone know, where this Java version needs to be made known?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6ZgrZt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/553,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6aF1cz,eclipse.jdt.debug,2585220915,553,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2025-01-11T11:47:43Z,2025-01-11T11:47:43Z,"> Detailed test report for jdt.debug: https://download.eclipse.org/eclipse/downloads/drops4/Y20250106-1000/testresults/html/org.eclipse.jdt.debug.tests_ep435Y-unit-linux-x86_64-java24_linux.gtk.x86_64_24.html
> 
> Console log is here: https://download.eclipse.org/eclipse/downloads/drops4/Y20250106-1000/testresults/ep435Y-unit-linux-x86_64-java24_linux.gtk.x86_64_24/org.eclipse.jdt.debug.tests.AutomatedSuite.txt
> 
> Log file contains this:
> 
> ```
> JRE Eclipse Adoptium/24-beta is not supported, advanced source lookup disabled.
>  Eclipse debugger will use less precise source lookup implementation for this debug session, but everything else will continue to work otherwise.
> Upgrading Eclipse to the latest version will likely make this warning go away.
> ```
> 
> Does anyone know, where this Java version needs to be made known?

This is not specific to Adoptium. After switch to openjdk we see
```
JRE Oracle Corporation/24-ea is not supported, advanced source lookup disabled.
 Eclipse debugger will use less precise source lookup implementation for this debug session, but everything else will continue to work otherwise.
Upgrading Eclipse to the latest version will likely make this warning go away.
```

Other than that no changes as of https://ci.eclipse.org/releng/job/YPBuilds/job/ep435Y-unit-linux-x86_64-java24/26/testReport/","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6aF1cz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/553,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6aF2bv,eclipse.jdt.debug,2585224943,553,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2025-01-11T11:54:12Z,2025-01-11T11:54:12Z,"This comes from https://github.com/eclipse-jdt/eclipse.jdt.debug/blob/1639f4b88635c52d13ef289bf7b4e5b6caebddd6/org.eclipse.jdt.launching.javaagent/src/main/java/org/eclipse/jdt/launching/internal/javaagent/Premain.java#L35 which does check java.lang.instrument.ClassFileTransformer.MAX_CLASS_MAJOR but there is https://github.com/eclipse-jdt/eclipse.jdt.debug/blob/1639f4b88635c52d13ef289bf7b4e5b6caebddd6/org.eclipse.jdt.launching.javaagent/src/main/java/org/eclipse/jdt/launching/internal/weaving/ClassfileTransformer.java#L28 which is at Java24 level (thanks to newer ASM than JVM). 
@stephan-herrmann Do you think using the later one instead of the former will allow having support for Java 24 now?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6aF2bv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/553,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6aF5ow,eclipse.jdt.debug,2585238064,553,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2025-01-11T12:15:56Z,2025-01-11T12:15:56Z,"> @stephan-herrmann Do you think using the later one instead of the former will allow having support for Java 24 now?

I'm not quite sure what exactly you are suggesting, as one constant is just an alias for the other.

It should accept Java24 since #542.

To check: was org.eclipse.jdt.launching/lib/javaagent-shaded.jar correctly re-built? I can see it checked in with #542 but haven't looked inside.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6aF5ow/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/553,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6aaxBm,eclipse.jdt.debug,2590707814,553,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2025-01-14T17:47:49Z,2025-01-14T17:47:49Z,After merge from master https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/594 the next BETA_JAVA24 build was green: https://ci.eclipse.org/jdt/job/eclipse.jdt.debug-github/job/BETA_JAVA24/4,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6aaxBm/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/553,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bCFaM,eclipse.jdt.debug,2601014924,553,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2025-01-19T20:43:32Z,2025-01-19T20:43:32Z,"I'd like to move this forward, but unfortunately I'm unable to investigate any of these issues:

* LineTrackerTests (5 failures in Y-builds):
   * Locally I get ""Never received 'stopped' notification"" for all its tests
* For all other failures from Y-builds, local builds pass on my machine
    * InstanceMainMethodsTests (2 failures in Y-builds)
    * VirtualThreadsDebugViewTests (1 failure in Y-builds)
    * StratumTests (1 failure in Y-builds)

Does LineTrackerTests require to be run with a specific setup / launch configuration to succeed?

I also tried `JDT Debug Test Suite.launch`
* First I had to update the launch config to use JDK 24
* Then I got
   * 1 error in SyntheticVariableTests
   * 1 failure in ConditionalBreakpointsWithFileClass
   * none of the failures shown with Y-builds

Should we be satisfied with success from https://ci.eclipse.org/jdt/job/eclipse.jdt.debug-github/job/BETA_JAVA24 or is there anything I can to to let also  [https://ci.eclipse.org/releng/job/YPBuilds/job/ep435Y-unit-linux-x86_64-java24](https://ci.eclipse.org/releng/job/YPBuilds/job/ep435Y-unit-linux-x86_64-java24/) pass?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bCFaM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/553,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bCLZa,eclipse.jdt.debug,2601039450,553,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2025-01-19T22:05:51Z,2025-01-19T22:05:51Z,"Aha, by updating the jenkinsfile I ""succeeded"" to reproduce the exact same failures also in a PR build: https://ci.eclipse.org/jdt/job/eclipse.jdt.debug-github/job/PR-598/3/

And now we see problem from above also here:
```
[2025-01-19T21:03:23.420Z] JRE Oracle Corporation/24-ea is not supported, advanced source lookup disabled.
[2025-01-19T21:03:23.421Z]  Eclipse debugger will use less precise source lookup implementation for this debug session, but everything else will continue to work otherwise.
[2025-01-19T21:03:23.421Z] Upgrading Eclipse to the latest version will likely make this warning go away.
```

It seems I need to figure out how the agent for advanced source lookup is integrated in particular when invoking tests in the IDE.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bCLZa/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/553,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bCN-m,eclipse.jdt.debug,2601050022,553,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2025-01-19T22:39:01Z,2025-01-19T22:39:01Z,"> To check: was org.eclipse.jdt.launching/lib/javaagent-shaded.jar correctly re-built? I can see it checked in with [#542](https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/542) but haven't looked inside.

Got it: that jar was incorrectly built. It still has the constant `ClassfileTransformer.MAX_CLASS_MAJOR` as 67, whereas with current dependencies it should be 68.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bCN-m/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/553,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bCOrh,eclipse.jdt.debug,2601052897,553,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2025-01-19T22:48:02Z,2025-01-19T22:48:02Z,"> Does LineTrackerTests require to be run with a specific setup / launch configuration to succeed?

It seems when locally running jdt.debug tests one should always add this to vmargs:
```
-javaagent:${workspace_loc:org.eclipse.jdt.launching}/lib/javaagent-shaded.jar
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bCOrh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/553,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bCTHw,eclipse.jdt.debug,2601071088,553,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2025-01-19T23:40:20Z,2025-01-19T23:40:20Z,"#598 succeeded to fix the javaagent, but still shows three failures, none of which I can reproduce locally: https://ci.eclipse.org/jdt/job/eclipse.jdt.debug-github/job/PR-598/4/testReport/","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bCTHw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/553,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bT6a2,eclipse.jdt.debug,2605688502,553,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2025-01-21T20:37:13Z,2025-01-21T20:37:13Z,"Also in [Y-build tests](https://ci.eclipse.org/releng/job/YPBuilds/job/ep435Y-unit-linux-x86_64-java24/31/#showFailuresLink) we're down to these three failures:
* InstanceMainMethodsTests.testStaticMainWithoutArgs
* InstanceMainMethodsTests.testDefaultMainWithoutArgs
* VirtualThreadsDebugViewTests.testVirtualThreadDebugView

Still I cannot reproduce any of those failures locally.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bT6a2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/553,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6buq3K,eclipse.jdt.debug,2612702666,553,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2025-01-24T14:45:23Z,2025-01-24T14:45:23Z,"> [jukzi](https://github.com/jukzi) closed this as [completed](https://github.com/eclipse-jdt/eclipse.jdt.debug/issues?q=is%3Aissue%20state%3Aclosed%20archived%3Afalse%20reason%3Acompleted) in 0239014 7 hours ago

I do hope that recent fixes reduced the failures, but we're not done:
* latest build https://ci.eclipse.org/releng/job/YPBuilds/job/ep435Y-unit-linux-x86_64-java24/33/#showFailuresLink still shows the same 3 errors
* even when we're down to zero failures, it's still good to continue monitoring the builds :)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6buq3K/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/553,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bu9rE,eclipse.jdt.debug,2612779716,553,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-24T15:19:20Z,2025-01-24T15:19:20Z,"> * still shows the same 3 errors

damn

> * even when we're down to zero failures, it's still good to continue monitoring the builds :)

agreed, sorry for closing","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bu9rE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/553,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bvYNI,eclipse.jdt.debug,2612888392,553,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2025-01-24T16:09:30Z,2025-01-24T16:09:30Z,"> > * still shows the same 3 errors
> 
> damn

The latest fix still waits for a successful Y-build. Latest build failed at the very end at
```
16:15:56  [ERROR] Cannot resolve dependencies of project eclipse.platform.releng.tychoeclipsebuilder:equinox-sdk:eclipse-repository:4.35.0-SNAPSHOT
16:15:56  [ERROR]  with context {osgi.os=linux, osgi.ws=gtk, org.eclipse.update.install.features=true, org.eclipse.jdt.buildtime=true, osgi.arch=x86_64, org.eclipse.update.install.sources=true}
16:15:56  [ERROR]   Software being installed: org.eclipse.equinox.sdk.product 4.35.0.qualifier
16:15:56  [ERROR]   Missing requirement: org.eclipse.equinox.sdk.feature.group 3.23.1600.v20250123-0710 requires 'org.eclipse.equinox.p2.iu; org.eclipse.jdt.core.compiler.batch [3.41.0.v20250122-1644,3.41.0.v20250122-1644]' but it could not be found
16:15:56  [ERROR]   Cannot satisfy dependency: org.eclipse.equinox.sdk.product 4.35.0.qualifier depends on: org.eclipse.equinox.p2.iu; org.eclipse.equinox.sdk.feature.group 0.0.0: See log for details
```
I've seen this error many times now. How I read the error:
* the equinox.sdk.feature hardcodes a dependency on jdt.compiler.batch in the exact version seen during the I-build.
* during Y-build a different version is present.
* but then, how come the Y-build ever succeeds?
   * perhaps the exact version isn't even necessary, the Y-build could perhaps accept a newer version?
   * I'll try to provide a compiler fix in the branch to verify the theory ...

I suspect that replacement from baseline also has a finger in the pie, but I don't fully understand that part anyway, so that's just a guess.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bvYNI/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/553,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bvac6,eclipse.jdt.debug,2612897594,553,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2025-01-24T16:13:52Z,2025-01-24T16:13:52Z,"```
[2025-01-24T15:14:27.240Z] [INFO] --- tycho-p2-plugin:4.0.11-SNAPSHOT:p2-metadata-default (default-p2-metadata-default) @ org.eclipse.equinox.sdk ---
[2025-01-24T15:14:27.496Z] [INFO] Artifact comparison detailed log directory /home/jenkins/agent/workspace/YPBuilds/Y-build-4.35/cje-production/gitCache/eclipse.platform.releng.aggregator/equinox/features/org.eclipse.equinox.sdk/target/artifactcomparison
[2025-01-24T15:14:27.496Z] [WARNING] MavenProject: org.eclipse.equinox:org.eclipse.equinox.sdk:3.23.1600-SNAPSHOT @ /home/jenkins/agent/workspace/YPBuilds/Y-build-4.35/cje-production/gitCache/eclipse.platform.releng.aggregator/equinox/features/org.eclipse.equinox.sdk/.polyglot.feature.xml: baseline and build artifacts have same version but different contents
[2025-01-24T15:14:27.496Z]    no-classifier: different
[2025-01-24T15:14:27.496Z]       feature.xml: different
[2025-01-24T15:14:27.496Z] 
[2025-01-24T15:14:27.496Z] [INFO] MavenProject: org.eclipse.equinox:org.eclipse.equinox.sdk:3.23.1600-SNAPSHOT @ /home/jenkins/agent/workspace/YPBuilds/Y-build-4.35/cje-production/gitCache/eclipse.platform.releng.aggregator/equinox/features/org.eclipse.equinox.sdk/.polyglot.feature.xml
[2025-01-24T15:14:27.496Z]     The main artifact has been replaced with the baseline version.
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bvac6/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/553,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bz33P,eclipse.jdt.debug,2614066639,553,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2025-01-25T18:59:34Z,2025-01-25T18:59:34Z,As of https://ci.eclipse.org/releng/job/YPBuilds/job/ep435Y-unit-linux-x86_64-java24/34/testReport/ all of JDT is clean! :tada:,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bz33P/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/553,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6dE4Vz,eclipse.jdt.debug,2635302259,553,NA,SougandhS,177713286,Sougandh S,,NA,2025-02-04T23:37:30Z,2025-02-04T23:37:30Z,"New Regression - org.eclipse.jdt.debug.tests.ui.VirtualThreadsDebugViewTests 

I was able to run the tests successfully with java 24 locally

<img width=""878"" alt=""Image"" src=""https://github.com/user-attachments/assets/dc75617b-a9cf-4eab-950c-d0b719ad2fba"" />

However I noticed there was some extra time taken to create 23 project. that maybe the reason for failure [Null return]","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6dE4Vz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/553,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6dFWF3,eclipse.jdt.debug,2635424119,553,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2025-02-05T00:17:11Z,2025-02-05T00:17:11Z,"> New Regression - org.eclipse.jdt.debug.tests.ui.VirtualThreadsDebugViewTests
> [...]
> However I noticed there was some extra time taken to create 23 project. that maybe the reason for failure [Null return]

Hopefully all issues here are fixed by https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/613","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6dFWF3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/557,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/557,eclipse.jdt.debug,2641205551,557,[test] ConditionalBreakpointsWithFileClass fails on linux since I20241106-1800,jukzi,51790620,Jörg Kubitz,,CLOSED,2024-11-07T14:32:33Z,2024-11-08T13:02:47Z,"on all JDKs:
```
Didn't suspend at the expected line expected:<20> but was:<364>

junit.framework.AssertionFailedError: Didn't suspend at the expected line expected:<20> but was:<364>
at junit.framework.Assert.fail(Assert.java:57)
at junit.framework.Assert.failNotEquals(Assert.java:329)
at junit.framework.Assert.assertEquals(Assert.java:78)
at junit.framework.Assert.assertEquals(Assert.java:234)
at junit.framework.TestCase.assertEquals(TestCase.java:377)
at org.eclipse.jdt.debug.tests.breakpoints.ConditionalBreakpointsWithFileClass.testFileConditionalBreakpointforFalse(ConditionalBreakpointsWithFileClass.java:44)
```
https://download.eclipse.org/eclipse/downloads/drops4/I20241106-1800/testResults.php","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/557/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/557,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6SxSLu,eclipse.jdt.debug,2462393070,557,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-11-07T14:34:56Z,2024-11-07T14:34:56Z,"last commit in jdt.debug is 10 days ago, so i do not know what changed.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6SxSLu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/557,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6SxS08,eclipse.jdt.debug,2462395708,557,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-11-07T14:36:02Z,2024-11-07T14:36:02Z,"@SougandhS do you have Linux, so that you can reproduce locally? it does not fail on windows.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6SxS08/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/557,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Sxciq,eclipse.jdt.debug,2462435498,557,NA,SougandhS,177713286,Sougandh S,,NA,2024-11-07T14:52:16Z,2024-11-07T14:52:16Z,"> @SougandhS do you have Linux, so that you can reproduce locally? it does not fail on windows.

Will configure one and check this. 👍","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Sxciq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/557,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6S2pIe,eclipse.jdt.debug,2463797790,557,NA,SougandhS,177713286,Sougandh S,,NA,2024-11-08T05:30:32Z,2024-11-08T05:30:32Z,"Hi @jukzi , I have tested the same on linux local, it is failing. 
I just went through the console logs of tests, turns out every conditional evaluation is throwing error compilation error in linux
https://download.eclipse.org/eclipse/downloads/drops4/I20241106-1800/testresults/ep434I-unit-linux-x86_64-java17_linux.gtk.x86_64_17/org.eclipse.jdt.debug.tests.AutomatedSuite.txt
<img width=""869"" alt=""image"" src=""https://github.com/user-attachments/assets/718dc3fd-e71d-4b60-8789-57243053b509"">

The Compilation Unit generated for evaluation are from Jdt core
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6S2pIe/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/557,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6S3F5s,eclipse.jdt.debug,2463915628,557,NA,SougandhS,177713286,Sougandh S,,NA,2024-11-08T07:02:01Z,2024-11-08T07:02:01Z,Latest Ibuild it is not showing. and the console logs are also clean..,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6S3F5s/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/557,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6S3GB8,eclipse.jdt.debug,2463916156,557,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-11-08T07:02:30Z,2024-11-08T07:02:30Z,"Can you find out, why it does not compile anymore? For example a recent commit in jdt.core or ui. Then file a bug against that project, link it. May also make sense to Improve the test to fail with the rootcause.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6S3GB8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/557,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6S3HlK,eclipse.jdt.debug,2463922506,557,NA,SougandhS,177713286,Sougandh S,,NA,2024-11-08T07:07:46Z,2024-11-08T07:07:46Z,"> Can you find out, why it does not compile anymore? For example a recent commit in jdt.core or ui. Then file a bug against that project, link it. May also make sense to Improve the test to fail with the rootcause.

Did went through the latest commits in JDT core but couldn't find any related ones. but now it is fixed automatically. - bit confused here, still investigating about it..","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6S3HlK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/557,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6S3PbD,eclipse.jdt.debug,2463954627,557,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-11-08T07:32:08Z,2024-11-08T07:32:08Z,Maybe SWT?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6S3PbD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/557,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6S4QKL,eclipse.jdt.debug,2464219787,557,NA,SougandhS,177713286,Sougandh S,,NA,2024-11-08T09:25:37Z,2024-11-08T09:25:37Z,"> Maybe SWT?

its only because of the generated Compilation unit is different in linux. and that is solely based on the output from ASTengine from jdt core. Im not sure changes in SWT affects this.
Left - Mac 
Right - Linux 
<img width=""756"" alt=""image"" src=""https://github.com/user-attachments/assets/5dbd7169-17ba-4250-8b21-f7ab48e22fc5"">
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6S4QKL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/559,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/559,eclipse.jdt.debug,2651006996,559,[Test] testHyperLink throws NPE on MacOS in I20241111-1800 & I20241110-1800,SougandhS,177713286,Sougandh S,,CLOSED,2024-11-12T04:39:33Z,2024-11-14T13:50:26Z,"org.eclipse.jdt.debug.tests.core.LineTrackerTests.testHyperLink throws Null pointer exception
<img width=""640"" alt=""image"" src=""https://github.com/user-attachments/assets/bb8ef303-fc18-4153-aabe-273636908263"">

Cannot invoke ""org.eclipse.debug.ui.console.IConsole.getDocument()"" because ""org.eclipse.jdt.debug.testplugin.ConsoleLineTracker.fConsole"" is null

java.lang.NullPointerException: Cannot invoke ""org.eclipse.debug.ui.console.IConsole.getDocument()"" because ""org.eclipse.jdt.debug.testplugin.ConsoleLineTracker.fConsole"" is null
at org.eclipse.jdt.debug.testplugin.ConsoleLineTracker.getDocument(ConsoleLineTracker.java:67)
at org.eclipse.jdt.debug.tests.core.LineTrackerTests.testHyperLink(LineTrackerTests.java:184)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at junit.framework.TestCase.runTest(TestCase.java:177)
at junit.framework.TestCase.runBare(TestCase.java:142)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.runBare(AbstractDebugTest.java:2774)
at junit.framework.TestResult$1.protect(TestResult.java:122)
at junit.framework.TestResult.runProtected(TestResult.java:142)
at junit.framework.TestResult.run(TestResult.java:125)
at junit.framework.TestCase.run(TestCase.java:130)
at junit.framework.TestSuite.runTest(TestSuite.java:241)
at junit.framework.TestSuite.run(TestSuite.java:236)
at junit.framework.TestSuite.runTest(TestSuite.java:241)
at org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:61)
at java.base/java.lang.Thread.run(Thread.java:833)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/559/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/561,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/561,eclipse.jdt.debug,2651488845,561,ConcurrentModificationException in JDIDebugTarget.cleanup,jukzi,51790620,Jörg Kubitz,,OPEN,2024-11-12T08:51:37Z,2024-11-12T08:52:44Z,"```
     [java] Exception in thread ""org.eclipse.jdt.debug: JDI Event Dispatcher"" java.util.ConcurrentModificationException
     [java] 	at java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1606)
     [java] 	at java.base/java.util.HashMap$ValueIterator.next(HashMap.java:1634)
     [java] 	at org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.cleanup(JDIDebugTarget.java:1816)
     [java] 	at org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.terminated(JDIDebugTarget.java:1777)
     [java] 	at org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.handleVMDisconnect(JDIDebugTarget.java:1058)
     [java] 	at org.eclipse.jdt.internal.debug.core.EventDispatcher.dispatch(EventDispatcher.java:174)
     [java] 	at org.eclipse.jdt.internal.debug.core.EventDispatcher.run(EventDispatcher.java:320)
     [java] 	at java.base/java.lang.Thread.run(Thread.java:1575)
```
https://download.eclipse.org/eclipse/downloads/drops4/I20241111-1800/testresults/consolelogs/ep434I-unit-linux-x86_64-java23_linux.gtk.x86_64_23_consolelog.txt","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/561/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/563,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/563,eclipse.jdt.debug,2662139748,563,"SWT ""Invalid thread access"" during debug",jukzi,51790620,Jörg Kubitz,,CLOSED,2024-11-15T14:29:37Z,2024-11-18T11:39:45Z,"```
eclipse.buildId=4.34.0.I20241113-1800
java.version=21.0.2
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=de_DE
Command-line arguments:  -os win32 -ws win32 -arch x86_64

org.eclipse.jdt.debug
Error
Fri Nov 15 15:23:47 CET 2024
Exception occurred while notifying listener: JavaLineBreakpoint on [marker=Marker [on: /hibernate/maven/hibernate-jpamodelgen-6.6.2.Final.jar, id: 2161169, type: org.eclipse.jdt.debug.javaLineBreakpointMarker, attributes: [charEnd: 4625, charStart: 4578, lineNumber: 104, message: Line breakpoint:ProcessorSessionFactory [line: 104] - ProcessorSessionFactory(ProcessingEnvironment, Map<String, String>, Map<String, Set<String>>), org.eclipse.debug.core.enabled: true, org.eclipse.debug.core.id: org.eclipse.jdt.debug, org.eclipse.jdt.debug.core.installCount: 1, org.eclipse.jdt.debug.core.suspendPolicy: 2, org.eclipse.jdt.debug.core.typeName: org.hibernate.processor.validation.ProcessorSessionFactory, org.eclipse.jdt.debug.ui.JAVA_ELEMENT_HANDLE_ID: =hibernate/maven\/hibernate-jpamodelgen-6.6.2.Final.jar=/module=/true=/<org.hibernate.processor.validation(ProcessorSessionFactory.class[ProcessorSessionFactory, org.eclipse.jdt.internal.core.JavaModelManager.handleId: =hibernate/maven\/hibernate-jpamodelgen-6.6.2.Final.jar=/module=/true=/<org.hibernate.processor.validation(ProcessorSessionFactory.class], created: 15.11.24, 15:22]], with event: ClassPrepareEvent: 25 referenceType=org.hibernate.processor.validation.ProcessorSessionFactory$ByteBuddy$gHcoemPf

org.eclipse.swt.SWTException: Invalid thread access
	at org.eclipse.swt.SWT.error(SWT.java:4922)
	at org.eclipse.swt.SWT.error(SWT.java:4837)
	at org.eclipse.swt.SWT.error(SWT.java:4808)
	at org.eclipse.swt.widgets.Display.error(Display.java:1324)
	at org.eclipse.swt.widgets.Display.checkDevice(Display.java:875)
	at org.eclipse.swt.widgets.Display.getShells(Display.java:2318)
	at org.eclipse.ui.internal.progress.ProgressManagerUtil.getModalShellExcluding(ProgressManagerUtil.java:410)
	at org.eclipse.ui.internal.progress.ProgressManagerUtil.getDefaultParent(ProgressManagerUtil.java:464)
	at org.eclipse.jdt.internal.debug.ui.NoLineNumberAttributesStatusHandler.handleStatus(NoLineNumberAttributesStatusHandler.java:36)
	at org.eclipse.jdt.internal.debug.core.breakpoints.JavaLineBreakpoint.determineLocations(JavaLineBreakpoint.java:403)
	at org.eclipse.jdt.internal.debug.core.breakpoints.JavaLineBreakpoint.newRequests(JavaLineBreakpoint.java:292)
	at org.eclipse.jdt.internal.debug.core.breakpoints.JavaBreakpoint.createRequest(JavaBreakpoint.java:517)
	at org.eclipse.jdt.internal.debug.core.breakpoints.JavaBreakpoint.handleClassPrepareEvent(JavaBreakpoint.java:382)
	at org.eclipse.jdt.internal.debug.core.breakpoints.JavaBreakpoint.handleEvent(JavaBreakpoint.java:304)
	at org.eclipse.jdt.internal.debug.core.EventDispatcher.dispatch(EventDispatcher.java:159)
	at org.eclipse.jdt.internal.debug.core.EventDispatcher.run(EventDispatcher.java:320)
	at java.base/java.lang.Thread.run(Thread.java:1583)
```

@iloveeclipse may that relate to 353005075c1ab3df53959b3deee9299cfbb7d934 in the stacktrace?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/563/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/563,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6TyWIa,eclipse.jdt.debug,2479448602,563,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-11-15T17:03:48Z,2024-11-15T17:03:48Z,"Yes, it does. Any steps to reproduce?
Fix: https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/564","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6TyWIa/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/563,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6T8xXk,eclipse.jdt.debug,2482181604,563,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-11-18T07:48:06Z,2024-11-18T07:48:06Z,"> Any steps to reproduce?

Put a breakpoint in an instrumented class. I don't know a minimal reproducer, but i will test your PR in exactly my situation.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6T8xXk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/563,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6T9NDp,eclipse.jdt.debug,2482295017,563,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-11-18T08:44:35Z,2024-11-18T08:44:35Z,"Minimal reproducer: add breakpoint in any Hello-world and disable line number information:
![image](https://github.com/user-attachments/assets/932558f9-6bd3-4d68-a380-ddde6821fcab)
then launch hello world in debug mode.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6T9NDp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/566,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/566,eclipse.jdt.debug,2695456424,566,Auto detect/Search... JRE does not find jdk-23 from ORACLE ,jukzi,51790620,Jörg Kubitz,,CLOSED,2024-11-26T17:05:45Z,2025-01-10T07:40:38Z,"workaround: manual adding it
![image](https://github.com/user-attachments/assets/0a9c9f3e-06bf-495a-86ab-babab967e9fb)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/566/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/566,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Zzru8,eclipse.jdt.debug,2580462524,566,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-09T14:49:36Z,2025-01-09T14:49:36Z,"Can be reproduced with oracle jdk https://www.oracle.com/de/java/technologies/downloads/#jdk23-windows installed at default `C:\Program Files\Java\jdk-23\`
![image](https://github.com/user-attachments/assets/b1895526-d7b7-4099-80c8-376aa5f26568)

but temurin jdk works: https://github.com/adoptium/temurin23-binaries/releases/download/jdk-23.0.1%2B11/OpenJDK23U-jdk_x64_windows_hotspot_23.0.1_11.msi at default `C:\Program Files\Eclipse Adoptium\jdk-23.0.1.11-hotspot\`
![image](https://github.com/user-attachments/assets/60ac9b36-ea62-42e5-b0e3-590bf56788e7)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Zzru8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/566,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6ZzxQg,eclipse.jdt.debug,2580485152,566,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2025-01-09T14:55:39Z,2025-01-09T14:55:39Z,"JRE != JDK.
We need JDK.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6ZzxQg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/566,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6ZzyNV,eclipse.jdt.debug,2580489045,566,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2025-01-09T14:57:12Z,2025-01-09T14:57:12Z,"Sorry, was mislead by the names. If Oracle **SDK** was SDK, not JRE, then it is a bug.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6ZzyNV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/566,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Z0GXS,eclipse.jdt.debug,2580571602,566,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-09T15:30:44Z,2025-01-09T15:30:44Z,was already reported in https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/369#issuecomment-1944035536,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Z0GXS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/568,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/568,eclipse.jdt.debug,2697156134,568,Merge master to BETA_JAVA24 branch for JDT Debug,noopur2507,8749449,Noopur Gupta,,CLOSED,2024-11-27T05:36:14Z,2024-11-27T05:37:34Z,Merge master branch to BETA_JAVA24 branch for JDT Debug.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/568/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/568,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6VLxHt,eclipse.jdt.debug,2502889965,568,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-11-27T05:37:24Z,2024-11-27T05:37:24Z,https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/567 - Done.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6VLxHt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/570,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/570,eclipse.jdt.debug,2711141400,570,Filtering breakpoints page throwing error,SougandhS,177713286,Sougandh S,,CLOSED,2024-12-02T09:07:56Z,2024-12-02T15:22:40Z,"Navigate to breakpoint properties of any breakpoints other than exception breakpoints
Then click on ""Filtering"" submenu in the properties page

<img width=""873"" alt=""image"" src=""https://github.com/user-attachments/assets/2c41737e-394a-4e85-a2dc-c5b20348f7c2"">
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/570/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/570,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6VrBst,eclipse.jdt.debug,2511084333,570,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-12-02T10:03:16Z,2024-12-02T10:03:16Z,"Regression from 1e0e94b4dba875598495f1d73633023245699db7 / https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/379, JavaBreakpointAdvancedPage class used in extension point was made abstract.

Stack from debugger:
```
Thread [main] (Suspended (breakpoint at line 52 in InstantiationException))	
	owns: RunnableLock  (id=513)	
	InstantiationException.<init>() line: 52	
	InstantiationExceptionConstructorAccessorImpl.newInstance(Object[]) line: 48	
	Constructor<T>.newInstanceWithCaller(Object[], boolean, Class<?>) line: 502	
	Constructor<T>.newInstance(Object...) line: 486	
	EquinoxRegistryStrategy(RegistryStrategyOSGI).createExecutableExtension(RegistryContributor, String, String) line: 233	
	ExtensionRegistry.createExecutableExtension(RegistryContributor, String, String) line: 987	
	ConfigurationElement.createExecutableExtension(String) line: 275	
	ConfigurationElementHandle.createExecutableExtension(String) line: 65	
	WorkbenchPlugin.createExtension(IConfigurationElement, String) line: 279	
	RegistryPageContributor.createPage(Object) line: 117	
	PropertyPageNode.createPage() line: 57	
	PropertyDialog(PreferenceDialog).createPage(IPreferenceNode) line: 1280	
	PropertyDialog(FilteredPreferenceDialog).createPage(IPreferenceNode) line: 326	
	PropertyDialog(PreferenceDialog).showPage(IPreferenceNode) line: 1166	
	PropertyDialog(FilteredPreferenceDialog).showPage(IPreferenceNode) line: 618	
	PreferenceDialog$5.lambda$0(IPreferenceNode) line: 660	
	0x00007f6e20d62768.run() line: not available	
	BusyIndicator.showWhile(Display, Runnable) line: 67	
	PreferenceDialog$5.selectionChanged(SelectionChangedEvent) line: 657	
	StructuredViewer$3.run() line: 820	
	SafeRunner.run(ISafeRunnable) line: 47	
	0x00007f6e201d2c40.run(ISafeRunnable) line: not available	
	SafeRunnable.run(ISafeRunnable) line: 174	
	FilteredTree$NotifyingTreeViewer(StructuredViewer).firePostSelectionChanged(SelectionChangedEvent) line: 817	
	FilteredTree$NotifyingTreeViewer(ColumnViewer).firePostSelectionChanged(SelectionChangedEvent) line: 1065	
	FilteredTree$NotifyingTreeViewer(StructuredViewer).handlePostSelect(SelectionEvent) line: 1185	
	0x00007f6e20634480.accept(Object) line: not available	
	SelectionListener$1.widgetSelected(SelectionEvent) line: 84	
	OpenStrategy.firePostSelectionEvent(SelectionEvent) line: 283	
	OpenStrategy$1.lambda$1(Event) line: 437	
	0x00007f6e20c65c20.run() line: not available	
	RunnableLock.run(Display) line: 40	
	UISynchronizer(Synchronizer).runAsyncMessages(boolean) line: 132	
	Display.runAsyncMessages(boolean) line: 5042	
	Display.readAndDispatch() line: 4522	
	PropertyDialog(Window).runEventLoop(Shell) line: 823	
	PropertyDialog(Window).open() line: 799	
	JavaBreakpointPropertiesAction.run(IAction) line: 49	
	ObjectPluginAction(PluginAction).runWithEvent(Event) line: 239	
	PluginActionContributionItem(ActionContributionItem).handleWidgetSelection(Event, boolean) line: 581	
	PluginActionContributionItem(ActionContributionItem).lambda$4(Event) line: 415	
	0x00007f6e2055a1f8.handleEvent(Event) line: not available	
	EventTable.sendEvent(Event) line: 91	
	Display.sendEvent(EventTable, Event) line: 5857	
	MenuItem(Widget).sendEvent(Event) line: 1619	
	Display.runDeferredEvents() line: 5067	
	Display.readAndDispatch() line: 4519	
```

@jukzi : please check.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6VrBst/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/570,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Vr1ux,eclipse.jdt.debug,2511297457,570,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-12-02T11:37:12Z,2024-12-02T11:37:12Z,"```
org.eclipse.core.runtime.CoreException: Plug-in ""org.eclipse.jdt.debug.ui"" was unable to instantiate class ""org.eclipse.jdt.internal.debug.ui.propertypages.JavaBreakpointAdvancedPage"".
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.throwException(RegistryStrategyOSGI.java:244)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:237)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:987)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:275)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:65)
	at org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.java:279)
	at org.eclipse.ui.internal.dialogs.RegistryPageContributor.createPage(RegistryPageContributor.java:117)
	at org.eclipse.ui.internal.dialogs.PropertyPageNode.createPage(PropertyPageNode.java:57)
	at org.eclipse.jface.preference.PreferenceDialog.createPage(PreferenceDialog.java:1280)
	at org.eclipse.ui.internal.dialogs.FilteredPreferenceDialog.createPage(FilteredPreferenceDialog.java:326)
	at org.eclipse.jface.preference.PreferenceDialog.showPage(PreferenceDialog.java:1166)
	at org.eclipse.ui.internal.dialogs.FilteredPreferenceDialog.showPage(FilteredPreferenceDialog.java:618)
	at org.eclipse.jface.preference.PreferenceDialog$5.lambda$0(PreferenceDialog.java:660)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.jface.preference.PreferenceDialog$5.selectionChanged(PreferenceDialog.java:657)
	at org.eclipse.jface.viewers.StructuredViewer$3.run(StructuredViewer.java:820)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.StructuredViewer.firePostSelectionChanged(StructuredViewer.java:817)
	at org.eclipse.jface.viewers.ColumnViewer.firePostSelectionChanged(ColumnViewer.java:1065)
	at org.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:1665)
	at org.eclipse.jface.viewers.TreeViewer.setSelection(TreeViewer.java:1091)
	at org.eclipse.jface.preference.PreferenceDialog.selectSavedItem(PreferenceDialog.java:990)
	at org.eclipse.ui.internal.dialogs.FilteredPreferenceDialog.selectSavedItem(FilteredPreferenceDialog.java:668)
	at org.eclipse.jface.preference.PreferenceDialog.lambda$0(PreferenceDialog.java:348)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.jface.preference.PreferenceDialog.createContents(PreferenceDialog.java:345)
	at org.eclipse.jface.window.Window.create(Window.java:431)
	at org.eclipse.jface.dialogs.Dialog.create(Dialog.java:1092)
	at org.eclipse.ui.internal.dialogs.PropertyDialog.createDialogOn(PropertyDialog.java:84)
	at org.eclipse.ui.dialogs.PreferencesUtil.createPropertyDialogOn(PreferencesUtil.java:216)
	at org.eclipse.ui.dialogs.PreferencesUtil.createPropertyDialogOn(PreferencesUtil.java:144)
	at org.eclipse.jdt.internal.debug.ui.actions.JavaBreakpointPropertiesAction.run(JavaBreakpointPropertiesAction.java:44)
	at org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:239)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:581)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:415)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:91)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4404)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1173)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4202)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3790)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1151)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:663)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:570)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:178)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:668)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:605)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1481)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1454)
Caused by: java.lang.InstantiationException
	at java.base/jdk.internal.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:235)
	... 59 more
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6Vr1ux/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/570,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6VsTuA,eclipse.jdt.debug,2511420288,570,NA,SougandhS,177713286,Sougandh S,,NA,2024-12-02T12:33:34Z,2024-12-02T12:33:34Z,"Issue fixed with https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/571

<img width=""762"" alt=""image"" src=""https://github.com/user-attachments/assets/5510e2ee-82a5-4c9f-ae0b-753af528cf80"">
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6VsTuA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/570,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6VsWd-,eclipse.jdt.debug,2511431550,570,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-12-02T12:38:15Z,2024-12-02T12:38:15Z,"@SougandhS : please do not close tickets with **pending** PR's, as there is no guarantee that PR's will be merged (for various reasons). Once PR is merged, linked issue will be **automatically** closed assuming the commit message followed guidelines.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6VsWd-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/570,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6VsYro,eclipse.jdt.debug,2511440616,570,NA,SougandhS,177713286,Sougandh S,,NA,2024-12-02T12:42:29Z,2024-12-02T12:42:29Z,"Sorry @iloveeclipse, Thanks for the clarification. 👍 ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6VsYro/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/584,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/584,eclipse.jdt.debug,2774869768,584,"""OpenFromClipboardTests does not exist""",jukzi,51790620,Jörg Kubitz,,OPEN,2025-01-08T09:46:12Z,2025-01-08T09:46:13Z,"https://download.eclipse.org/eclipse/downloads/drops4/I20250107-1800/testresults/ep435I-unit-linux-x86_64-java21_linux.gtk.x86_64_21/org.eclipse.jdt.debug.tests.AutomatedSuite.txt

contains entries that i do not understand:

```
!ENTRY org.eclipse.jdt.debug.tests 1 0 2025-01-08 01:01:06.064
!MESSAGE [testMultipleInfixEval10] setUp

!ENTRY org.eclipse.jdt.launching 4 4 2025-01-08 01:01:06.741
!MESSAGE Advanced source lookup task failed
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2025-01-08 01:01:06.741
!MESSAGE OpenFromClipboardTests does not exist
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2025-01-08 01:01:06.741
!MESSAGE OpenFromClipboardTests does not exist
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2025-01-08 01:01:06.741
!MESSAGE OpenFromClipboardTests does not exist
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2025-01-08 01:01:06.741
!MESSAGE OpenFromClipboardTests does not exist
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2025-01-08 01:01:06.741
!MESSAGE OpenFromClipboardTests does not exist

!ENTRY org.eclipse.jdt.debug.tests 1 0 2025-01-08 01:01:06.844
!MESSAGE [testMultipleInfixEval10] tearDown
```

However OpenFromClipboardTests  seems to be executed.
https://download.eclipse.org/eclipse/downloads/drops4/I20250107-1800/testresults/xml/org.eclipse.jdt.debug.tests_ep435I-unit-macosx-aarch64-java21_macosx.cocoa.aarch64_21.xml

![image](https://github.com/user-attachments/assets/f185cb27-1d8a-4dbd-9a39-a20ea7ffc3b4)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/584/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/590,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/590,eclipse.jdt.debug,2783577791,590,Random failing JavaDebugStackTraceConsoleTest,jukzi,51790620,Jörg Kubitz,,OPEN,2025-01-13T10:30:47Z,2025-02-11T04:26:52Z,"https://download.eclipse.org/eclipse/downloads/drops4/I20250111-1800/testresults/html/org.eclipse.jdt.debug.tests_ep435I-unit-win32-x86_64-java21_win32.win32.x86_64_21.html
```
org.eclipse.core.internal.resources.ResourceException: Problems encountered while deleting resources.
at org.eclipse.core.internal.resources.Resource.delete(Resource.java:816)
at org.eclipse.core.internal.resources.Project.delete(Project.java:365)
at org.eclipse.jdt.debug.tests.console.JavaDebugStackTraceConsoleTest.testLinkNavigation(JavaDebugStackTraceConsoleTest.java:72)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at junit.framework.TestCase.runTest(TestCase.java:177)
at junit.framework.TestCase.runBare(TestCase.java:142)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.runBare(AbstractDebugTest.java:2774)
at junit.framework.TestResult$1.protect(TestResult.java:122)
at junit.framework.TestResult.runProtected(TestResult.java:142)
at junit.framework.TestResult.run(TestResult.java:125)
at junit.framework.TestCase.run(TestCase.java:130)
at junit.framework.TestSuite.runTest(TestSuite.java:241)
at junit.framework.TestSuite.run(TestSuite.java:236)
at junit.framework.TestSuite.runTest(TestSuite.java:241)
at org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:61)
at java.base/java.lang.Thread.run(Thread.java:1583)
Contains: Could not delete '/JavaDebugStackTraceConsoleTest/src'.
org.eclipse.core.internal.resources.ResourceException: Problems encountered while deleting resources.
at org.eclipse.core.internal.localstore.FileSystemResourceManager.delete(FileSystemResourceManager.java:416)
at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:363)
at org.eclipse.core.internal.resources.ResourceTree.internalDeleteProject(ResourceTree.java:398)
at org.eclipse.core.internal.resources.ResourceTree.standardDeleteProject(ResourceTree.java:855)
at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1834)
at org.eclipse.core.internal.resources.Resource.delete(Resource.java:803)
at org.eclipse.core.internal.resources.Project.delete(Project.java:365)
at org.eclipse.jdt.debug.tests.console.JavaDebugStackTraceConsoleTest.testLinkNavigation(JavaDebugStackTraceConsoleTest.java:72)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at junit.framework.TestCase.runTest(TestCase.java:177)
at junit.framework.TestCase.runBare(TestCase.java:142)
at org.eclipse.jdt.debug.tests.AbstractDebugTest.runBare(AbstractDebugTest.java:2774)
at junit.framework.TestResult$1.protect(TestResult.java:122)
at junit.framework.TestResult.runProtected(TestResult.java:142)
at junit.framework.TestResult.run(TestResult.java:125)
at junit.framework.TestCase.run(TestCase.java:130)
at junit.framework.TestSuite.runTest(TestSuite.java:241)
at junit.framework.TestSuite.run(TestSuite.java:236)
at junit.framework.TestSuite.runTest(TestSuite.java:241)
at org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:61)
at java.base/java.lang.Thread.run(Thread.java:1583)
Contains: Problems encountered while deleting files.
Contains: Could not delete: C:\Users\genie.releng\workspace\AutomatedTests\ep435I-unit-win32-x86_64-java21\workarea\I20250111-1800\eclipse-testing\test-eclipse\eclipse\jdt_folder\JavaDebugStackTraceConsoleTest\src\SomeClass.java.
java.nio.file.FileSystemException: C:\Users\genie.releng\workspace\AutomatedTests\ep435I-unit-win32-x86_64-java21\workarea\I20250111-1800\eclipse-testing\test-eclipse\eclipse\jdt_folder\JavaDebugStackTraceConsoleTest\src\SomeClass.java: The process cannot access the file because it is being used by another process
at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:273)
at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:109)
at java.base/java.nio.file.Files.deleteIfExists(Files.java:1191)
at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:309)
at org.eclipse.core.internal.filesystem.local.LocalFile.lambda$3(LocalFile.java:326)
at java.base/java.util.concurrent.ForkJoinTask$AdaptedCallable.exec(ForkJoinTask.java:1456)
at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Contains: Could not delete 'C:\Users\genie.releng\workspace\AutomatedTests\ep435I-unit-win32-x86_64-java21\workarea\I20250111-1800\eclipse-testing\test-eclipse\eclipse\jdt_folder\JavaDebugStackTraceConsoleTest'.
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/590/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/590,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6d8FQa,eclipse.jdt.debug,2649773082,590,NA,SougandhS,177713286,Sougandh S,,NA,2025-02-11T04:26:51Z,2025-02-11T04:26:51Z,"Occured again on **I20250208-1800** build
https://download.eclipse.org/eclipse/downloads/drops4/I20250208-1800/testresults/html/org.eclipse.jdt.debug.tests_ep435I-unit-win32-x86_64-java21_win32.win32.x86_64_21.html

```
Contains: Could not delete: C:\Users\genie.releng\workspace\AutomatedTests\ep435I-unit-win32-x86_64-java21\workarea\I20250208-1800\eclipse-testing\test-eclipse\eclipse\jdt_folder\StackTest\src\a\Sample.java.
java.nio.file.FileSystemException: C:\Users\genie.releng\workspace\AutomatedTests\ep435I-unit-win32-x86_64-java21\workarea\I20250208-1800\eclipse-testing\test-eclipse\eclipse\jdt_folder\StackTest\src\a\Sample.java: 
The process cannot access the file because it is being used by another process
```

Related to some concurrency issue on windows..
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6d8FQa/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/592,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/592,eclipse.jdt.debug,2786381649,592,Primitive array's signature is not shown in variables view,SougandhS,177713286,Sougandh S,,CLOSED,2025-01-14T06:39:32Z,2025-01-21T06:09:16Z,"Compared to other arrays primitive arrays type is not shown in variable view's value column <br>
**Current** - 
<img width=""716"" alt=""image"" src=""https://github.com/user-attachments/assets/fe0e9b27-7bbf-441e-9902-fae452082435"" />
<br>
**Proposed** -
<img width=""404"" alt=""image"" src=""https://github.com/user-attachments/assets/97fb0e82-3299-4d44-96ca-f9718e2a997c"" />

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/592/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/592,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6aVAvd,eclipse.jdt.debug,2589199325,592,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-14T07:24:06Z,2025-01-14T07:24:06Z,"And for lambdas it seems to be a nonreadable hash:
![image](https://github.com/user-attachments/assets/6f310b6d-dfde-4369-bba0-965cdaf47d79)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6aVAvd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/592,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6aXV-s,eclipse.jdt.debug,2589810604,592,NA,SougandhS,177713286,Sougandh S,,NA,2025-01-14T12:39:52Z,2025-01-14T12:39:52Z,Will check both 👍 ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6aXV-s/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/596,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/596,eclipse.jdt.debug,2792421405,596,Close HotCodeReplace dialog automatically when process ends,laeubi,1331477,Christoph Läubrich,,OPEN,2025-01-16T11:09:35Z,2025-01-16T11:46:37Z,"I noticed that when hot code replace failed, then a dialog is shown

![grafik](https://github.com/eclipse-jdt/eclipse.jdt.debug/assets/1331477/a8e18bcf-b9b5-4c26-963b-710aa24734f4)

when the dialog is open, but the process exits (e.g. you close the application or it ends for other reasons), the dialog still stay open. It would be good to register a listener when the dialog opens and close it when the process terminates.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/596/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/602,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/602,eclipse.jdt.debug,2805671947,602,Short-lived virtual threads are 1000x slower to create when run in Debug,theagentd,1215113,,,OPEN,2025-01-23T01:13:38Z,2025-01-24T23:45:12Z,"We are looking at replacing our overly complex multithreading task system with virtual threads in our game engine. Unfortunately, this issue makes short-lived virtual threads more or less useless for us as a replacement for pooled executors, as we cannot achieve realtime speeds in Debug using them.

## Steps to reproduce

```Java
import java.util.concurrent.ThreadFactory;
import java.util.concurrent.atomic.AtomicInteger;

public class VirtualThreadTest {
	public static void main(String[] args) {
		
		while(true) {
			test();
		}
	}
	
	private static void test() {
		
		AtomicInteger integer = new AtomicInteger();
		
		ThreadFactory factory = Thread.ofVirtual().factory();
		//ThreadFactory factory = Thread.ofPlatform().factory();
		
		int levels = 23;
		
		runThread(levels, factory, integer);
		
		long startTime = System.nanoTime();

		int limit = (2 << levels) - 1;
		
		int count;
		
		do {
			
			try {
				Thread.sleep(100);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}

			count = integer.get();
			
			long timeTaken = System.nanoTime() - startTime;
			System.out.println(count + "" ("" + 1_000_000_000f * count / timeTaken + "" threads per second)"");
		}while(count < limit);
	}

	private static void runThread(int level, ThreadFactory factory, AtomicInteger integer) {
		integer.getAndAdd(1);
		if(level > 0) {
			factory.newThread(() -> runThread(level-1, factory, integer)).start();
			factory.newThread(() -> runThread(level-1, factory, integer)).start();
		}
	}
}
```

## Results

- In Run mode: 1.2249853E7 threads per second
- In Debug mode: 14427.094 threads per second
- Note that the exact numbers here depends on the CPU being used; the point is that the Debug speed should be as close to the Run speed as possible.

## VIsualVM sampling
Here a VisualVM screenshot of Eclipse while the test program above was running:

![Image](https://github.com/user-attachments/assets/850cddc8-bdf8-48b9-986a-3507e76f9c87)
 
It would seem that Eclipse is bottlenecking the application by not being able to process all the threads being created fast enough. This theory seems plausible, as in Run mode I get 100% CPU load from the test program, while in Debug I only get 20% CPU load from the program and 100% load on one CPU core from Eclipse.


## Additional info

- Eclipse IDE Version : Version: 2025-03 (4.35) Build id: I20250117-1800 (completely fresh install in a new workspace)
- OS: Windows 10 64-bit
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/602/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/602,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bfKxU,eclipse.jdt.debug,2608639060,602,NA,theagentd,1215113,,,NA,2025-01-23T01:17:13Z,2025-01-23T01:17:13Z,The mentioned unresponsive Debug view seems to be somewhat related to #296.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bfKxU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/602,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bgFFD,eclipse.jdt.debug,2608877891,602,NA,laeubi,1331477,Christoph Läubrich,,NA,2025-01-23T05:17:46Z,2025-01-23T05:17:46Z,"I just wanted to mention that I have noticed such slowdown not only for virtual thread. The same can happen if one steps over (but seem not happen with run to line) some methods, most noteable things that call many loops (e.g. parsing an xml file).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bgFFD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/602,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bgPSs,eclipse.jdt.debug,2608919724,602,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2025-01-23T05:51:58Z,2025-01-23T05:51:58Z,Step over 50x slowdown is known JDK bug. Which JDK version is used?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bgPSs/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/602,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bgQAu,eclipse.jdt.debug,2608922670,602,NA,laeubi,1331477,Christoph Läubrich,,NA,2025-01-23T05:54:32Z,2025-01-23T05:54:32Z,"> Step over 50x slowdown is known JDK bug. Which JDK version is used?

JDK 17 (not sure about exact version), so if it is a JDK problem than maybe not related to this one.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bgQAu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/602,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bgQZq,eclipse.jdt.debug,2608924266,602,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2025-01-23T05:55:56Z,2025-01-23T05:55:56Z,"Just curious, have you tried any other IDE with debugger?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bgQZq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/602,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bgTce,eclipse.jdt.debug,2608936734,602,NA,laeubi,1331477,Christoph Läubrich,,NA,2025-01-23T06:05:25Z,2025-01-23T06:05:25Z,"> Just curious, have you tried any other IDE with debugger?

I only use Eclipse (for Java).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bgTce/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/602,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bgYMv,eclipse.jdt.debug,2608956207,602,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2025-01-23T06:21:06Z,2025-01-23T06:21:06Z,"@laeubi : see https://bugs.openjdk.org/browse/JDK-8229012 for step over issue. Very nasty one, and no workaround available.

@theagentd : please check any other debugger if you will see a similar slowdown.
Also you can try to add `-Dorg.eclipse.jdt.internal.debug.core.model.ThreadNameChangeListener.disable=true` argument to Eclipse, which might improve things (no guarantee).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bgYMv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/602,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6borIu,eclipse.jdt.debug,2611130926,602,NA,theagentd,1215113,,,NA,2025-01-23T22:18:00Z,2025-01-23T22:18:00Z,"@iloveeclipse :

I have tried IntelliJ, which is around 5x faster than Eclipse in Debug. This is still 200x slower than Eclipse Run (or when running the test program directly from a command line without an IDE).

I also tried adding that VM argument, both to my program and to eclipse.ini startup VM arguments, but it unfortunately did not make any difference.

From the VisualVM profiling I did on Eclipse while running the test program, it seems like it's simply falling behind processing the virtual thread metadata the application is sending, which bottlenecks the test programs.

I want to point out that this is **always** happening when running in Debug. It is not related to breakpoints or stepping; simply running the program in Debug is enough to trigger the slowness, so the issue related to stepping is unrelated.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6borIu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/602,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6botE3,eclipse.jdt.debug,2611138871,602,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2025-01-23T22:23:49Z,2025-01-23T22:23:49Z,"If you still want improve something, you could try to find hotspots and debug / optimize the code around. If you have luck, maybe you could improve things a bit, but in general debug mode will be always slower.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6botE3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/602,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bpHma,eclipse.jdt.debug,2611247514,602,NA,theagentd,1215113,,,NA,2025-01-23T23:51:45Z,2025-01-23T23:51:45Z,"@iloveeclipse :

Thanks. Unfortunately I've never worked with the Eclipse source code before and have no idea how to set up an environment for making changes to Eclipse. I will see if I have some time in the future to try to get that set up so that I can do some more detailed testing on it.

I did some more detailed profiling with VisualVM and then investigated the codebase a bit. VisualVM is telling me that the ""Packet Receive Manager"" thread is spending 97% of its CPU time in java.net.Socket@SocketInputStream.read(), of which almost all eventually ends up in a native read0() function.

It looks like the offending InputStream is received from a Socket in SocketTransportService.java here: 

https://github.com/eclipse-jdt/eclipse.jdt.debug/blob/8767c15575277b51857744230e9e3108ea07be86/org.eclipse.jdt.debug/jdi/org/eclipse/jdi/internal/connect/SocketTransportService.java#L99-L106

It occurs to me that this is doing unbuffered socket reads. This was probably fine before virtual threads as there were very few packages being sent, but this could be the main culprit here. Perhaps simply wrapping this InputStream in a BufferedInputStream is enough to lead to signficant performance improvement for virtual threads!

I also noticed an odd synchronized-block on line 79 here:

https://github.com/eclipse-jdt/eclipse.jdt.debug/blob/8767c15575277b51857744230e9e3108ea07be86/org.eclipse.jdt.debug/jdi/org/eclipse/jdi/internal/connect/SocketConnection.java#L72-L99

It's trivial to see that this local variable DataInputStream cannot possibly be used by any other threads, so removing this synchronized block shouldn't cause any issues and avoid an unecessary lock being acquired for each packet received.

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bpHma/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/602,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bs_uR,eclipse.jdt.debug,2612263825,602,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2025-01-24T11:08:35Z,2025-01-24T11:08:35Z,"I've tried both proposals and removed almost all synchronization from SocketConnection, I don't see noticeable performance change for given test. What I also see is that times gets slower with the running time of the test. So I would guess performance is lost in the VM / JDWP layer.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6bs_uR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/602,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6byHKv,eclipse.jdt.debug,2613605039,602,NA,theagentd,1215113,,,NA,2025-01-24T23:44:57Z,2025-01-24T23:44:57Z,"That's unfortunate, but also very interesting. I wonder if the bottleneck has shifted somewhere else. It would be interesting to rerun VisualVM again.

I will look into setting up a dev build myself so that I can experiment with it more. Maybe I'll have time this weekend, but probably not. :/

EDIT: Also, thanks a lot for testing it! :)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6byHKv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/605,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/605,eclipse.jdt.debug,2809211387,605,Hyperlink to qualified class Name from stacktrace does not work  -with space before (),laeubi,1331477,Christoph Läubrich,,CLOSED,2025-01-24T10:51:21Z,2025-01-27T11:56:43Z,"Just assume we have the following stack-trace:

```
org.eclipse.ui.PartInitException: No active workbench page
    at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor (EditorUtility.java:388)
    at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInSpecificEditor (EditorUtility.java:191)
    at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor (EditorUtility.java:169)
    at org.eclipse.jdt.ui.JavaUI.openInEditor (JavaUI.java:787)
...
    at java.lang.Thread.run (Thread.java:1583)
```

now click on the first item with the Eclipse Platform SDK code in your workspace and you will get a dialog:


![Image](https://github.com/user-attachments/assets/d61dbe52-1d80-4904-86fa-b0a779a52d76)

instead of directly jump to `org.eclipse.jdt.internal.ui.javaeditor.EditorUtility` even though it is the only valid match.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/605/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/605,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6btKIW,eclipse.jdt.debug,2612306454,605,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-24T11:32:48Z,2025-01-24T11:32:48Z,"@SougandhS  reproducable, also when selecting `org.eclipse.jdt.internal.ui.javaeditor.EditorUtility` it jumps to line 190 instead of  line191","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6btKIW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/605,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6btMZb,eclipse.jdt.debug,2612315739,605,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-24T11:38:12Z,2025-01-24T11:38:12Z,"@laeubi where do you get that stacktrace from? it should not contain "" "" before the link. This works:
```
    at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:388)
    at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInSpecificEditor(EditorUtility.java:191)
    at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:169)
    at org.eclipse.jdt.ui.JavaUI.openInEditor(JavaUI.java:787)

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6btMZb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/605,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6btQ-2,eclipse.jdt.debug,2612334518,605,NA,SougandhS,177713286,Sougandh S,,NA,2025-01-24T11:46:16Z,2025-01-24T11:46:16Z,"@laeubi 
at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor<**_BlankSpace_**>(EditorUtility.java:388)

these are invalid link types","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6btQ-2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/605,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6btSUY,eclipse.jdt.debug,2612339992,605,NA,laeubi,1331477,Christoph Läubrich,,NA,2025-01-24T11:49:36Z,2025-01-24T11:49:36Z,"> these are invalid link types

I get those from the JVMs `e.printStacktrace()` so I'm not sure I can influence anything here...","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6btSUY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/605,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6btTpy,eclipse.jdt.debug,2612345458,605,NA,SougandhS,177713286,Sougandh S,,NA,2025-01-24T11:52:34Z,2025-01-24T11:52:34Z,"> org.eclipse.jdt.internal.ui.javaeditor.EditorUtility

Not able to reproduce this on my workspace","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6btTpy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/605,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6btUx1,eclipse.jdt.debug,2612350069,605,NA,SougandhS,177713286,Sougandh S,,NA,2025-01-24T11:55:05Z,2025-01-24T11:55:05Z,"> I get those from the JVMs `e.printStacktrace()` so I'm not sure I can influence anything here...

will provide handling for invalid links 👍 ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6btUx1/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/605,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6btU3i,eclipse.jdt.debug,2612350434,605,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-24T11:55:15Z,2025-01-24T11:55:15Z,"printStacktrace forwards to StackTraceElement.toString(), which does `.append(methodName).append('(');` on my jdk. @laeubi which JDK?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6btU3i/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/605,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6btWV-,eclipse.jdt.debug,2612356478,605,NA,laeubi,1331477,Christoph Läubrich,,NA,2025-01-24T11:58:24Z,2025-01-24T11:58:24Z,"```
java --version
java 21.0.5 2024-10-15 LTS
Java(TM) SE Runtime Environment (build 21.0.5+9-LTS-239)
Java HotSpot(TM) 64-Bit Server VM (build 21.0.5+9-LTS-239, mixed mode, sharing)
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6btWV-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/605,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6btYyR,eclipse.jdt.debug,2612366481,605,NA,laeubi,1331477,Christoph Läubrich,,NA,2025-01-24T12:03:56Z,2025-01-24T12:03:56Z,"> printStacktrace forwards to StackTraceElement.toString(), which

By the way the javadoc of the method says:

> API Note:
> The format of this string depends on the implementation
> ...
> The toString method may return two different values on two StackTraceElement instances that are equal, for example one created via the constructor, and one obtained from java.lang.Throwable or java.lang.StackWalker.StackFrame, where an implementation may choose to omit some element in the returned string.

So it seems good to support slightly different formats (at least regarding white-space) ... as I user I can't spot any difference here.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6btYyR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/605,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6b3lig,eclipse.jdt.debug,2615040160,605,NA,SougandhS,177713286,Sougandh S,,NA,2025-01-27T07:46:25Z,2025-01-27T07:46:25Z,"> [@SougandhS](https://github.com/SougandhS) reproducable, also when selecting `org.eclipse.jdt.internal.ui.javaeditor.EditorUtility` it jumps to line 190 instead of line191

Line number mismatch is occurred randomly. (Some times for me)
At `org.eclipse.jdt.internal.debug.ui.console.JavaStackTraceHyperlink(JavaStackTraceHyperlink.java:119)` -> line number is decremented by 1","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6b3lig/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/606,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/606,eclipse.jdt.debug,2809843821,606,"Improve handling of ""Debugger failed to attach: timeout during handshake""",iloveeclipse,964108,Andrey Loskutov,,CLOSED,2025-01-24T16:27:00Z,2025-01-24T17:40:35Z,"In our build farm with VM's running on hypervisor workstations we sporadically see test failures caused by debugger unable to attach to the remote process. If that happens, we see `Debugger failed to attach: timeout during handshake` error reported to the system error of the Eclipse and this error flying without more context.
```
com.sun.jdi.connect.spi.ClosedConnectionException
	at org.eclipse.jdi.internal.connect.SocketTransportService.readHandshake(SocketTransportService.java:225)
	at org.eclipse.jdi.internal.connect.SocketTransportService$3.run(SocketTransportService.java:185)
	at java.base/java.lang.Thread.run(Thread.java:1583)
```
It turned out, it is easily reproducible by introducing an artificial timeout of 2 seconds between opening debug socket and reading from it.
To reproduce, 

1) put a breakpoint at 
https://github.com/eclipse-jdt/eclipse.jdt.debug/blob/d56217e1fbea9f4d27461db88aa13e9fcbdafc8f/org.eclipse.jdt.debug/jdi/org/eclipse/jdi/internal/connect/SocketTransportService.java#L148
2) in the debuggee Eclipse connect to any remote debug process
3) After breakpoint hit wait > 2 seconds and resume
4) Kaboom. Debugger can't attach and error above is printed to system error.

I've checked and it seems that the JDWP code for that in the JVM always uses hard coded 2 seconds handshake timeout. 2 seconds is nothing on a virtualized hardware with multiple VM's running in parallel, or if there is a high load on the CPU.

One could mitigate that (assuming the load spikes are not permanent) by trying to repeat handshake with remote.
I will push a PR that does that and also improves error reporting by providing full stack traces.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/606/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/610,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/610,eclipse.jdt.debug,2820153924,610,"Internal Error, Invalid stack frame (IllegalStateException) while debugging",jukzi,51790620,Jörg Kubitz,,OPEN,2025-01-30T08:01:29Z,2025-01-30T08:01:29Z,"Sometimes during debugging the Error log pops up with Exceptions like this. It is completely unclear to the user what went wrong, why and how to solve.

![Image](https://github.com/user-attachments/assets/487e42e4-3bf4-4acf-8295-bce5ba7fba7e)

It would be good if that message could be improved to make clear if its a programming issue within JDT or not (i hope so). At best a Hover  would fail much more silently if something is just out of sync (for example only warning with appropriate message)

```
eclipse.buildId=4.35.0.I20250129-0030
java.version=22.0.2
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=de_DE
Command-line arguments:  -os win32 -ws win32 -arch x86_64

This is a continuation of log file C:\Users\jkubitz\platform-2025-01-02\ws\.metadata\.bak_0.log
Created Time: 2025-01-29 07:51:01.381

org.eclipse.jdt.debug.ui
Error
Wed Jan 29 13:02:35 CET 2025
Internal Error

org.eclipse.debug.core.DebugException: Invalid stack frame
	at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getUnderlyingStackFrame(JDIStackFrame.java:1373)
	at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getUnderlyingThisObject(JDIStackFrame.java:1008)
	at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getVariables0(JDIStackFrame.java:366)
	at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getVariables(JDIStackFrame.java:304)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.containsVariable(JavaDebugHover.java:620)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.lambda$2(JavaDebugHover.java:639)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.findFirstFrameForVariable(JavaDebugHover.java:604)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getHoverInfo2(JavaDebugHover.java:469)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
Caused by: java.lang.IllegalStateException
	at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getUnderlyingStackFrame(JDIStackFrame.java:1376)
	... 11 more

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/610/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/614,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/614,eclipse.jdt.debug,2832383679,614,Implement Trigger Points that do not suspend anything,jukzi,51790620,Jörg Kubitz,,OPEN,2025-02-05T09:26:07Z,2025-02-05T09:26:07Z,"Currently trigger Breakpoints suspend either the thread or VM, but i typically only use them as barrier to start other breakpoints, so it would be nice if it could automatically resume after enabling the other breakpoints.

![Image](https://github.com/user-attachments/assets/d8b1d72d-537b-423f-ab88-431acccf7acb)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/614/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/615,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/615,eclipse.jdt.debug,2835759225,615,How to debug eclipse.jdt.debug itself?,lab313ru,7189309,Vladimir Kononovich,,CLOSED,2025-02-06T14:53:23Z,2025-02-07T08:36:07Z,"Subj. I'm trying to debug the plugin, but I cannot figure out how to do that.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/615/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/615,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6dXLxD,eclipse.jdt.debug,2640100419,615,NA,trancexpress,24752155,Simeon Andreev,,NA,2025-02-06T15:12:07Z,2025-02-06T15:12:07Z,"Assuming you have your Eclipse workspace set up (see e.g.: https://github.com/eclipse-jdt/eclipse.jdt.core/wiki/FAQ-JDT-Core-Committer ), you create an Eclipse Application launch configuration from the run/debug main toolbar button. I.e. you debug the entire Eclipse application; in the debuggee Eclipse application you can create a test project, launch a Java application, open the Debug view and so on.

You can also debug JDT tests, if you are interested in specific behavior.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6dXLxD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/617,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/617,eclipse.jdt.debug,2844492980,617,Navigation to the stack line from java Stack Trace Console is off by one line,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2025-02-11T07:29:54Z,2025-02-11T09:25:24Z,"Probably related to the latest changes on Java Stack Trace Console navigation.

To reproduce, same types from different libraries should be referenced in the workspace projects, like `Foo` from a jar in one project and `Foo` in the source folder of another. Or just two projects with same class inside like
```
public class Foo {
	public Foo() {
		// TODO Auto-generated constructor stub
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
	}
}
```

Console should have stack like:
```
at Foo.doSomething(Foo.java:4)
```

Clicking on `Foo.java:4` opens a dialog to select ""which Foo"" to open.
Selecting **any** `Foo` jumps to a line 3 with the line number one below expected.
I assume `org.eclipse.jdt.internal.debug.ui.console.JavaStackTraceHyperlink.processAmbiguousResults(List<Object>, String, int, String)` should increase line number by one as it is done in all other places, however first we should understand whether this is a recent regression and where, maybe it requires more fixes.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/617/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/617,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6d9AtM,eclipse.jdt.debug,2650016588,617,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2025-02-11T07:30:41Z,2025-02-11T07:30:41Z,@SougandhS : could you please check?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6d9AtM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/617,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6d9CmH,eclipse.jdt.debug,2650024327,617,NA,SougandhS,177713286,Sougandh S,,NA,2025-02-11T07:35:47Z,2025-02-11T07:35:47Z,WIll check this 👍 ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6d9CmH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/617,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6d9Fv3,eclipse.jdt.debug,2650037239,617,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2025-02-11T07:44:44Z,2025-02-11T07:44:44Z,"Looks like regression from ddf0a0a872b391c9f5d140645844b6d46044a687.
Fix:
```
diff --git a/org.eclipse.jdt.debug.ui/ui/org/eclipse/jdt/internal/debug/ui/console/JavaStackTraceHyperlink.java b/org.eclipse.jdt.debug.ui/ui/org/eclipse/jdt/internal/debug/ui/console/JavaStackTraceHyperlink.java
index a2ed124..2776502 100644
--- a/org.eclipse.jdt.debug.ui/ui/org/eclipse/jdt/internal/debug/ui/console/JavaStackTraceHyperlink.java
+++ b/org.eclipse.jdt.debug.ui/ui/org/eclipse/jdt/internal/debug/ui/console/JavaStackTraceHyperlink.java
@@ -226,3 +226,3 @@
 					try {
-						return processAmbiguousResults(matches, typeName, lineNumber, link);
+						return processAmbiguousResults(matches, typeName, line, link);
 					} catch(Exception e) {

```
 @SougandhS : could you please add a test for that before M3?
If yes, please take over, if not, I can push the patch to fix for M3.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6d9Fv3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/617,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6d9Gse,eclipse.jdt.debug,2650041118,617,NA,SougandhS,177713286,Sougandh S,,NA,2025-02-11T07:47:22Z,2025-02-11T07:47:22Z,Will take over this 👍 ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.debug/issues/comments/IC_kwDOHGji7M6d9Gse/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
