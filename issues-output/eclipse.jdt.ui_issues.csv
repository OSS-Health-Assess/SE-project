type,issue_url,comment_url,repo_name,id,issue_num,title,user_login,user_id,user_name,user_email,issue_state,created_at,updated_at,body,reactions
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2,eclipse.jdt.ui,1198190318,2,Enable LeakTestSuite in org.eclipse.jdt.ui.tests pom.xml file again,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,OPEN,2022-04-09T04:46:50Z,2024-02-19T00:48:10Z,"LeakTestSuite in org.eclipse.jdt.ui.tests pom.xml file has been disabled as these tests are failing in the jenkins github job

https://ci.eclipse.org/jdt/job/eclipse.jdt.ui-github/job/PR-1/10/

This issue is to track the enabling of LeakTestSuite in org.eclipse.jdt.ui.tests pom.xml file once a fix is provided so these tests pass in the job https://ci.eclipse.org/jdt/job/eclipse.jdt.ui-github","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5BMFXf,eclipse.jdt.ui,1093686751,2,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-04-09T04:48:58Z,2022-04-09T04:48:58Z,@mickaelistria Can you please provide your inputs in this regard?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5BMFXf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5BPNJV,eclipse.jdt.ui,1094505045,2,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-04-11T03:25:39Z,2022-04-11T03:25:39Z,This bug has been created as a follow up to https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1#issuecomment-1093684675,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5BPNJV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5BP6z5,eclipse.jdt.ui,1094692089,2,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2022-04-11T08:17:17Z,2022-04-11T08:17:17Z,"Sorry, I don't know (or remember) anything about this test suite. Did it just start to fail after migration to GitHub? Which particular test?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5BP6z5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5BQQDG,eclipse.jdt.ui,1094779078,2,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-04-11T09:11:43Z,2022-04-11T09:11:43Z,All Leak tests part of this test suite fail : 23 of them,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5BQQDG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5BQQSd,eclipse.jdt.ui,1094780061,2,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-04-11T09:12:12Z,2022-04-11T09:12:12Z,"yes, they started failing after move to github.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5BQQSd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5BkL67,eclipse.jdt.ui,1100005051,2,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2022-04-15T09:49:40Z,2022-04-15T09:49:40Z,This should now be fixed in latest Tycho snapshots. Please retry.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5BkL67/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50Ucsh,eclipse.jdt.ui,1951517473,2,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-02-19T00:48:09Z,2024-02-19T00:48:09Z,"I can successfully run these tests within the IDE (by manually supplying a bunch of arguments to the uitestapplication), but it looks like JDK 17 is the last that allows these tests to run:

When I run those tests on 18+, each test fails with:
```
java.lang.IllegalArgumentException: Can not get final java.lang.Class field java.lang.Class.componentType on java.lang.Class
        at java.base/jdk.internal.reflect.MethodHandleFieldAccessorImpl.newGetIllegalArgumentException(MethodHandleFieldAccessorImpl.java:86)
        at java.base/jdk.internal.reflect.MethodHandleObjectFieldAccessorImpl.get(MethodHandleObjectFieldAccessorImpl.java:61)
        at java.base/java.lang.reflect.Field.get(Field.java:428)
        at org.eclipse.jdt.ui.leaktest.reftracker.ReferenceTracker.followFieldReference(ReferenceTracker.java:80)
        at org.eclipse.jdt.ui.leaktest.reftracker.ReferenceTracker.visit(ReferenceTracker.java:144)
        at org.eclipse.jdt.ui.leaktest.reftracker.ReferenceTracker.start(ReferenceTracker.java:168)
        at org.eclipse.jdt.ui.leaktest.LeakTestCase.collect(LeakTestCase.java:58)
        at org.eclipse.jdt.ui.leaktest.LeakTestCase.assertInstanceCount(LeakTestCase.java:123)
        at org.eclipse.jdt.ui.tests.leaks.JavaLeakTest.internalTestEditorOpen(JavaLeakTest.java:378)
        at org.eclipse.jdt.ui.tests.leaks.JavaLeakTest.internalTestEditorClose(JavaLeakTest.java:312)
        at org.eclipse.jdt.ui.tests.leaks.JavaLeakTest.internalTestEditorClose(JavaLeakTest.java:308)
        at org.eclipse.jdt.ui.tests.leaks.JavaLeakTest.testTextEditorClose(JavaLeakTest.java:91)
        at java.base/java.lang.reflect.Method.invoke(Method.java:578)
```

Contrary to my first guess it is not a permission issue: hidden in that IllegalArgumentException is `java.lang.ClassCastException: Cannot cast [I to java.lang.Class`

Weird enough I see the debugger showing field `componentType` as an empty *array*, so perhaps it has a value of type  `[I` indeed, despite the declaration as `Class<?>`??

I first saw this for class `org.osgi.service.log.FormatterLogger`, but look, after executing this:
```
org.osgi.service.log.FormatterLogger.class.getComponentType()
```
the former int-array is gone, now the field is `null`, and can be accessed via reflection OK.  But the same then happens for other classes. Spooky, huh? Is that some internal VM magic, that abuses the field in violation of its declaration?

I could think of a bug in the debugger, but then it's the same cause that lets the tests fail in real life.

Well, seeing that `org.eclipse.jdt.ui.leaktest.reftracker.ReferenceTracker.followFieldReference(ReferencedObject, Object, Field)` already excludes fields from packages `jdk` and `sun`, perhaps it should also exclude fields of `java.lang.Class`.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50Ucsh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/5,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/5,eclipse.jdt.ui,1199017760,5,Enable LeakTestSuite in org.eclipse.jdt.ui.tests pom.xml again,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2022-04-10T12:42:47Z,2022-04-20T16:10:33Z,"This change comments out LeakTestSuite in org.eclipse.jdt.ui.tests pom.xml , as these test are failing in the jenkins github job.

_Originally posted by @ktatavarthi in https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1#issuecomment-1093684675_","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/5,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5BPMun,eclipse.jdt.ui,1094503335,5,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-04-11T03:21:53Z,2022-04-11T03:21:53Z,This is a duplicate of #2 ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5BPMun/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/8,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/8,eclipse.jdt.ui,1200300392,8,Backport Bug 579285 - Fix typos seen in Holger video to 4.23,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,CLOSED,2022-04-11T17:31:07Z,2022-04-12T08:56:25Z,Back port the typos to 4.23,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/10,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/10,eclipse.jdt.ui,1202342419,10,Backport Bug 576615 - fix to use the defaults when they are requested,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2022-04-12T20:15:41Z,2022-04-29T18:53:15Z,"A fix in 4.23 to commonize the filter table logic has a bug that always shows the defaults and doesn't display newly added values.
A fix was made in 4.24 M1 and a number of users are reporting this problem after testing 4.23.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/10/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/10,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Bi-oC,eclipse.jdt.ui,1099688450,10,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-04-14T22:36:50Z,2022-04-14T22:36:50Z,"@jarthana, @ktatavarthi  I noticed that this fix is not yet in the 4.23 updates repo.  Does it require a bump of the jdt.ui plug-in to be built?  I noticed Sarika did that for her backport patch but wasn't sure if another bump was required.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Bi-oC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/10,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5BjCGL,eclipse.jdt.ui,1099702667,10,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-04-14T23:00:56Z,2022-04-14T23:00:56Z,"Hmm, I just noticed that Sarika's backport patch is also not yet in the 4.23 updates repo either.  Is this something that needs a request or has it possibly not yet been set up in Jenkins/github set-up?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5BjCGL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/12,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/12,eclipse.jdt.ui,1202808441,12,Bug 577317 - [17] Provide quick fixes to add permitted class/interface for sealed class/interface,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,CLOSED,2022-04-13T06:11:57Z,2022-05-17T12:40:27Z,"Adding the description from https://bugs.eclipse.org/bugs/show_bug.cgi?id=577317#c0 by @SarikaSinha 

I create a ""sealed"" class C1 without any permits.
This shows compilation error ""Sealed class or interface lacks the permits clause and no class or interface from the same compilation unit declares test1 as its direct superclass or superinterface""
But I don't see any corresponding quick fix, it will be good to see 2 quickfixes. One to create class in the same compilation unit and other one to create a child class in the same package.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/12/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/12,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DMbop,eclipse.jdt.ui,1127332393,12,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-05-16T07:38:48Z,2022-05-16T07:38:48Z,"Added What's New entry for this fix by the below PR

- https://github.com/eclipse-platform/www.eclipse.org-eclipse-news/pull/23
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DMbop/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/12,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DSGs7,eclipse.jdt.ui,1128819515,12,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-05-17T12:40:27Z,2022-05-17T12:40:27Z,Verified in the build I20220516-1800,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DSGs7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/21,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/21,eclipse.jdt.ui,1209309219,21,Moving text blocks destroys the contents indentation,frankbenoit,8962790,Frank Benoit,,CLOSED,2022-04-20T08:00:46Z,2022-05-18T18:31:16Z,"With Eclipse <= 4.23.0

Then there is a text block and the whole line/textblock/method/whatever is marked and moved (Alt-Arrow Up/Down), then all text content is loosing the indentation.

````
testSnippet(""""""
      something {
          else ;
      };
      """""");
````
after move:
````
testSnippet(""""""
      something {
      else ;
      };
      """""");
````

When copy/pasting, the indentation is kept.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/21/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/21,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DYAMC,eclipse.jdt.ui,1130365698,21,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-05-18T18:25:38Z,2022-05-18T18:25:38Z,Verified for 4.24 M3 using I20220517 build,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DYAMC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/25,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/25,eclipse.jdt.ui,1213413073,25,Follow up from #12 (Bug 577317) to make reconciler work for Syntax coloring,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,CLOSED,2022-04-23T18:38:24Z,2022-07-22T05:59:23Z,"https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/13#issuecomment-1097973354

If I use quick fix to add class in same package, the ""permits"" is not coloured properly. After going back to the file and adding a ""enter"" applies the colouring.

Debug learnings: Adding breakpoint in Reconciler leads to proper syntax colouring. Looks like the order of  invocation of JavaCompositeReconcilingStrategy is impacting this.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/25/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/25,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DSG5G,eclipse.jdt.ui,1128820294,25,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-05-17T12:41:19Z,2022-05-17T12:41:19Z,Verified in the build I20220516-1800,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DSG5G/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/30,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/30,eclipse.jdt.ui,1221513610,30,CTRL+i on Text block should not perform indentation changes,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2022-04-29T20:54:21Z,2022-05-18T18:30:31Z,"Selecting the following text block in the Java editor:

		String x = """"""
				This is a text block
				   with an indent
				"""""";

and using CTRL+i causes the line ""with an indent"" to be moved in line with the previous line which is wrong as indentation in a text block is intentional.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/30/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/30,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DX_4Z,eclipse.jdt.ui,1130364441,30,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-05-18T18:24:08Z,2022-05-18T18:24:08Z,Verified for 4.24 M3 using I20220517 build.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DX_4Z/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/31,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/31,eclipse.jdt.ui,1222533995,31,eclipse.jdt.ui changes for JEP 427,mpalat,4507939,Manoj  N Palat,manoj.palat@in.ibm.com,CLOSED,2022-05-02T06:28:40Z,2023-03-01T03:43:19Z,,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/31/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/31,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WS0tZ,eclipse.jdt.ui,1447775065,31,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-02-28T08:35:11Z,2023-02-28T08:35:11Z,Can this be closed? [BETA_JAVA19](https://github.com/eclipse-jdt/eclipse.jdt.ui/milestone/13) is not valid milestone anymore.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WS0tZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/32,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/32,eclipse.jdt.ui,1223082869,32,Eclipse 2022-03 Window -> Preferences -> Java -> Appearance : Compress all package name segments not compressing packages,jonmichaelpeedin,48923241,,,CLOSED,2022-05-02T16:23:44Z,2022-05-02T21:10:24Z,"This was previously posted in the eclipse-platform (https://github.com/eclipse-platform/.github/issues/5) and was requested to be posted to eclipse-jdt/eclipse.jdt.ui  as an issue. 

Upon recently upgrading to 2022-03 I have noticed that the ""Compress all package name segments, except the final segment"" is not compressing the packages in my project. I have attempted to use the compression pattern '.', '0', and '1' with no success.

I also attempted to use the ""Abbreviate package names"" and that was not doing anything to the package names that I specified either.

I have manage to figure out the following since the original post to the eclipse-platform issues: 
I deleted the .project file for my project and it displayed properly, however when I converted it back to a faceted project the issue comes back. Please see attached screenshots

![E2022-03_CompressPackageIssue_1](https://user-images.githubusercontent.com/48923241/166269910-dd32493e-c8e3-456a-8893-af1d553d0035.PNG)
![E2022-03_CompressPackageIssue_2](https://user-images.githubusercontent.com/48923241/166269918-88fe9f92-5341-49fc-8230-4e3d4ba1a019.PNG)
![E2022-03_CompressPackageIssue_3](https://user-images.githubusercontent.com/48923241/166269930-7a10a868-0def-4c94-84a5-a4e14474238f.PNG)
![E2022-03_CompressPackageIssue_4](https://user-images.githubusercontent.com/48923241/166269936-2e2fa671-b9a8-403a-a816-f4fa9469c304.PNG)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/32/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/32,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5CdzHT,eclipse.jdt.ui,1115107795,32,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-05-02T16:41:26Z,2022-05-02T16:41:26Z,"@mickaelistria : thanks, this is surely https://bugs.eclipse.org/bugs/show_bug.cgi?id=579170.

@jonmichaelpeedin : AFAIK there is no ""final"" release yet containing the webtools fix, only M1 build : 

https://www.eclipse.org/downloads/packages/release/2022-06/m1

So please update webtools from that and if this doesn't fix your issue, comment on original bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=579170.

JDT has nothing to do with ""faceted projects""","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5CdzHT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/32,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5CezkS,eclipse.jdt.ui,1115371794,32,NA,jonmichaelpeedin,48923241,,,NA,2022-05-02T21:10:24Z,2022-05-02T21:10:24Z,"Updating the WebTools to 2022-06 solved the issue, thank you. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5CezkS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/34,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/34,eclipse.jdt.ui,1226490017,34,Cannot run JDT cleanups for multiple projects in project explorer,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,CLOSED,2022-05-05T10:28:36Z,2022-06-08T19:15:25Z,"To run source cleanups for multiple projects I have to use the package explorer. Project explorer does only allow this for a select source folder. 

Project explorer:

![image](https://user-images.githubusercontent.com/139910/166905492-c4e46aed-d814-4bdd-a5f8-ca3efb5af6c8.png)


Package Explorer:

![image](https://user-images.githubusercontent.com/139910/166905599-4634ba2a-aa11-4b24-a139-eb76bbb47360.png)

Would be really nice to be able to use project explorer for this also, as it is the default view for all perspectives except the JDT one and I only use project explorer because it has features package explorer does not have like hierarchiy view and an easy to reach filter button.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/34/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/34,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5CqW1o,eclipse.jdt.ui,1118399848,34,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2022-05-05T10:29:06Z,2022-05-05T10:29:06Z,@tsmaeder can you have a look?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5CqW1o/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/34,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5CqXSj,eclipse.jdt.ui,1118401699,34,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2022-05-05T10:31:28Z,2022-05-05T10:31:28Z,Originally reported via https://bugs.eclipse.org/bugs/show_bug.cgi?id=548265,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5CqXSj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/34,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DAjLT,eclipse.jdt.ui,1124217555,34,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-05-11T19:40:29Z,2022-05-11T19:40:29Z,@vogella Could you take a look at the PR I submitted to see if I have missed something?  The fix is simple and I am able to run cleanups/format on projects and multiple projects in the Project Explorer.  No tests as of yet.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DAjLT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/34,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DbUPT,eclipse.jdt.ui,1131234259,34,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2022-05-19T05:46:12Z,2022-05-19T05:46:12Z,"@jjohnstn the change is already a big enhancement, would be nice if it could also work if some of the projects are also not Java projects but as it is it is already a huge improvement for me. Btw. I also commented on the PR, not sure if you got a notifcation for that.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DbUPT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/34,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Devfm,eclipse.jdt.ui,1132132326,34,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-05-19T19:47:14Z,2022-05-19T19:47:14Z,"I'm glad it works for you.  I somehow missed your comment on the PR which is too bad (too many github notifications coming in).  I'll merge it for 4.25 M1 as 4.24 M3 deadline has already passed.   Regarding Java vs non-Java, what behaviour are you expecting?  Do you expect CleanUpActions to ignore all non-Java projects so the action only works on applicable Java projects or something else entirely?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Devfm/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/34,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Ehpz_,eclipse.jdt.ui,1149672703,34,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2022-06-08T09:20:00Z,2022-06-08T09:20:00Z,"Could the existing PR already be merged? Would already be a huge improvement.

>Do you expect CleanUpActions to ignore all non-Java projects so the action only works on applicable Java projects or something else entirely?

Similar to current behavior of Package Explorer, non-Java project should be ignored / skipped. 
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Ehpz_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/36,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/36,eclipse.jdt.ui,1226548448,36,Remove overridden assignment with combine statement results in two ;,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,CLOSED,2022-05-05T11:27:52Z,2022-05-18T18:37:58Z,"``
	ImageDescriptor desc = info.getFeatureImage();
		Image featureImage = null;

		Button button = new Button(parent, SWT.FLAT | SWT.PUSH);
		button.setData(info);
		featureImage = desc.createImage();
```
ends up as 
```
		ImageDescriptor desc = info.getFeatureImage();
		Button button = new Button(parent, SWT.FLAT | SWT.PUSH);
		button.setData(info);
		Image featureImage = desc.createImage();;
		images.add(featureImage);
```

I push the PR andl link to it here so that you can see that.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/36/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/36,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5CqhqC,eclipse.jdt.ui,1118444162,36,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2022-05-05T11:29:52Z,2022-05-05T11:29:52Z,@tsmaeder please see https://github.com/eclipse-platform/eclipse.platform.ui/pull/57,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5CqhqC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/36,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5CqiYr,eclipse.jdt.ui,1118447147,36,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2022-05-05T11:33:52Z,2022-05-05T11:33:52Z,If you run the updated clean-up on platform ui repo you all lots of these ;; changes.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5CqiYr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/36,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Cspjg,eclipse.jdt.ui,1119000800,36,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-05-05T20:08:51Z,2022-05-05T20:08:51Z,"Hi Lars.  I found the problem.  In our testing, we have the default cleanup option to remove redundant semi-colons.  Anyway, the assignment was being replaced by a declaration statement which ends up with the double semi-colons.  I have a fix that I will post immediately.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Cspjg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/36,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5CuRbL,eclipse.jdt.ui,1119426251,36,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2022-05-06T09:27:14Z,2022-05-06T09:27:14Z,"Thanks, looks good. Found another issue and opened https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/38 ticket for this.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5CuRbL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/38,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/38,eclipse.jdt.ui,1227626928,38,Issues with remove overridden assignment with combine statement results,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,CLOSED,2022-05-06T09:26:57Z,2022-07-25T19:55:10Z,"Comments can be lost with new Remove overridden assignment with combine statement.

Input:

	IParameter parameter = null;
				// get the parameter from the command
				parameter = command.getParameter(key);
Output


	IParameter parameter = command.getParameter(key);

Desired
				// get the parameter from the command
                              IParameter parameter = command.getParameter(key);


To test use cleanup on org.eclipse.core.commands.ParameterizedCommand from platform.ui
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/38/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/38,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5CuSox,eclipse.jdt.ui,1119431217,38,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2022-05-06T09:33:07Z,2022-05-06T09:33:07Z,"Also TableWrapLayout.java results in a syntax error after the cleanup.

Input:
	int totalHeight = 0;
	int innerHeight = 0;
        // more 		
       totalHeight = topMargin + innerHeight + bottomMargin;

Output: 

		int totalHeight = topMargin + innerHeight + bottomMargin;

Looks like innerHeight is not check if it is already declared if the expression is moved.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5CuSox/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/38,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DSCY6,eclipse.jdt.ui,1128801850,38,NA,tsmaeder,13163770,Thomas Mäder,,NA,2022-05-17T12:22:28Z,2022-05-17T12:22:28Z,"So looking at this example: 
```
int totalHeight = 0;
int innerHeight = 0;
int topMargin= 0;
int bottomMargin = 0;
totalHeight = topMargin + innerHeight + bottomMargin;
```

I believe the only way moving the initialization can lead to problem is if we reference a name that has not been declared at the location of the variable init statement for `totaHeight`. We know it's not a method, because that would already be caught because of potential side effects. So the remaining values to be declared can be
* a local variable
* a field in locally declared class. If the class was declared elsewhere, it would also be in scope at the first variable declaration.

In either case, the name used in the init expression must be declared between the end of the overridden initializer and the beginning of the overriding assignment.  We already handle a case where we can't move the initialization up, this would just be checking that all names used in the init expression are not declared in that range.

Makes sense @vogella ?

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DSCY6/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/38,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DSzaD,eclipse.jdt.ui,1129002627,38,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2022-05-17T15:19:22Z,2022-05-17T15:19:22Z,Sounds fine to me @tsmaeder ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DSzaD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/38,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DWV_p,eclipse.jdt.ui,1129930729,38,NA,tsmaeder,13163770,Thomas Mäder,,NA,2022-05-18T12:13:17Z,2022-05-18T12:13:17Z,"> Comments can be lost with new Remove overridden assignment with combine statement.

I'm not sure about that: how about this:
```
int totalHeight= 33;
...
// the component is now initialized
int total height = 55;
...
```
What I mean is: moving the comment is sometimes the right thing to do, sometimes it's not. How can we tell?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DWV_p/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/38,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DbUs1,eclipse.jdt.ui,1131236149,38,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2022-05-19T05:48:35Z,2022-05-19T05:48:35Z,"I suggest to never delete a command and either leave it there is was or move it also, whatever this easier to implement. Or only fix the compiler issue and accept that some comments needs manual fixes, which is also fine for me in case the implementation of handling comments is realatively complex. Perfect is IMHO the enemy of good.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DbUs1/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/39,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/39,eclipse.jdt.ui,1228620153,39,"Incorrect ""Extract Variable"" refactoring, resulting in NullPointerException",chixiaye,54989108,XIAYE CHI,,CLOSED,2022-05-07T12:47:36Z,2022-11-29T01:03:40Z,"# Incorrect ""Extract Variable"" refactoring, resulting in NullPointerException

## Description
""Extract Variable"" refactoring is a useful feature of JDT. However, in some cases, it may not work correctly. Here we report a bug in this feature and attach a feasible patch for the bug.

We take the following sample code to illustrate the bug:  
```java
1   /* CS1: Original Code Snippet */
2   public String metaPhone(final String txt){
3       boolean hard = false;
4       if(txt == null || txt.length() == 0){
5           return """";
6       }
7       if(txt.length() == 1){
8           return txt.toUpperCase(java.util.Local.ENGLISH);
9       }
10      //Do other things
11      // ...
12   }
``` 

If we select expression `txt.length()` (line `4` in `CS1`), conduct refactoring ""extract local variable"",and name the new variable as `length` , we will get the following code snippet:
```java
1   /* CS2: Code Snippet after refactoring */
2   public String metaPhone(final String txt){
3       boolean hard = false;
4       int length = txt.length();
5       if(txt == null || length == 0){
6           return """";
7       }
8       if(length == 1){
9           return txt.toUpperCase(java.util.Local.ENGLISH);
10       }
11      //Do other things
12      // ...
13   }
``` 

The refactoring is incorrect and dangerous. If the method is called via `metaphone(null)`, the refactored version of the method would result in NullPointerException whereas the original version would not.

## Solution
The most simple and intuitive solution is to WARN the developers if the refactored version would result in NullPointerException.

- First, once developers select an expression and invoke ""extract variable"" refactoring, we create a list of subexpressions of the selected expression. For example, if we extract expression like `a.b.f().c`, the list should contain `a`, `a.b`, and `a.b.f()`. The list is noted as `ExpList`.

- Second, we analyze the code snippet between the newly introduced local variable declaration (line `4` in `CS2`) and the first usage of the variable (line `5` in `CS2`). If the code snippet contains InfixExpression node like `x==null`, and `x` is on `ExpList`, we warn the developer with clear information about the potential problem. 
 
<img width=""1114"" alt=""pic"" src=""https://user-images.githubusercontent.com/54989108/167254733-0d0e60d9-07a2-4212-b6f6-aa62ea11ce58.png"">


Similar error may occur when developers select `txt.length()` on other places (i.e., line `7` in `CS1`) to conduct ""extract variable"" refactoring. The refactoring will get the same result as `CS2`.

To this end, we apply a greedy strategy to extract as many as expressions without introducing NullPointerException. 

- First, we validate whether the selected expression (`EXP`)itself could be extracted safely. If not, we warn the developers. 
- Second, we search backward from `EXP` for expressions identical to `EXP`, and validate whether they could be extracted together safely. Resulting in a sequence of instances of the expression, noted as `InsExp1`.
- Third, we search forward from `EXP` for expressions identical to `EXP`, and validate whether they could be extracted together. Resulting in a sequence of instances of the expression, noted as `InsExp2`.
- Finally, we declare and initialize a local variable `var` and replace all instances in `InsExp2`, `EXP`, and `InsExp2`.
- The refactoring is accomplished.

**The relevant code has been completed and the corresponding PR will be submitted later.**
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/39/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/39,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FGJ8S,eclipse.jdt.ui,1159241490,39,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-06-17T21:33:31Z,2022-06-17T21:33:31Z,"I believe the correct answer is that the declaration should never be backed up before the null check.  In the example given, it should be placed just before its usage in the second if statement.  A cleanup/refactoring should never change the behaviour of the code if possible.  In this case, if we can identify there is a potential issue, we can create valid code instead of warning the user.  I will take a look at your PR to see if it can be used for this.  I think it may need to be more generic (e.g. look for all assignments and checks of the field/method's expression pieces), but I haven't looked at it closer.  It also will need a test case.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FGJ8S/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/39,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FGYPr,eclipse.jdt.ui,1159300075,39,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-06-17T23:24:58Z,2022-06-17T23:24:58Z,"I see with your change that you do this correctly if the user picks the second txt.length() call to refactor.  It only changes the 2nd call and subsequent calls and puts the declaration before the 2nd if statement.  However, when the first txt.length() statement is chosen, you issue the warning and then only the first txt.length() gets changed if the user continues.  I would like the code to recognize the issue and then skip to the next use and do exactly what you do for the 2nd call.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FGYPr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/39,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KSoRQ,eclipse.jdt.ui,1246397520,39,NA,chixiaye,54989108,XIAYE CHI,,NA,2022-09-14T08:07:18Z,2022-09-14T08:07:18Z,"Thanks a lot for your reply! For the past few months, we've been working on improving extracting local variable refactoring, and the completed code will be submitted as a patch later. 

As you suggested, if the first `txt.length()` is chosen, the result of conducting refactoring would be the same as the second `txt.length()`. We only warn if only one expression is extracted and such refactoring would result in NullPointerException. Besides, we have added relevant test cases to verify the check. The modification of the relevant code has been committed to PR.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KSoRQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/39,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KV2O_,eclipse.jdt.ui,1247241151,39,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-09-14T20:00:22Z,2022-09-14T20:00:22Z,I will take a look.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KV2O_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/39,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KgG-X,eclipse.jdt.ui,1249931159,39,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-09-16T23:19:33Z,2022-09-16T23:19:33Z,"I tried out the latest code.  Works much better, thanks.  For the first call, it leaves it alone and puts the local variable after the first if without any warnings; same behavior when the 2nd txt.length() call is selected.  I'll take a look at why it is not building with latest rebase and do the official code review.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KgG-X/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/39,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5PHf-2,eclipse.jdt.ui,1327366070,39,NA,liuhuigmail,10864327,HUI LIU,liuhui08@bit.edu.cn,NA,2022-11-25T11:35:07Z,2022-11-25T11:35:07Z,"
@jjohnstn  Thank you for reviewing the pull request. We have reported another similar bug (https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/331) concering the Extract Local Varialbe refactoring, and have submitted the corresponding patch (https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/333). We notice that the bug report has not yet been handled althougt it has been submitted for quite a long time (17 days). Would you please kindly help to review the bug report and its corresponding pull resust?  Thank you. 
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5PHf-2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/39,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5PQYUB,eclipse.jdt.ui,1329693953,39,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-11-28T20:05:03Z,2022-11-28T20:05:03Z,"@liuhuigmail Hi, we are just wrapping up the final details of the 2022-12 release so I will take a look this week.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5PQYUB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/39,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5PRU0A,eclipse.jdt.ui,1329941760,39,NA,liuhuigmail,10864327,HUI LIU,liuhui08@bit.edu.cn,NA,2022-11-29T01:03:40Z,2022-11-29T01:03:40Z,@jjohnstn Thank you.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5PRU0A/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/40,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/40,eclipse.jdt.ui,1228639348,40,FR extract to lamda-function,enexusde,6880636,Peter Rader,github@e-nexus.de,OPEN,2022-05-07T14:13:48Z,2022-05-19T13:43:34Z,"Having a class like this:


```
@Transactional
@RestController(""check/health"")
public class ServerHealthIcons {
	/**
	 * The entitymanager to use, never <code>null</code>.
	 */
	@PersistenceContext
	private final EntityManager entityManager = null;

	@GetMapping(""bad/{shcid}.png"")
	public void bad(@PathVariable long shcid, HttpServletRequest request, HttpServletResponse response)
			throws IOException {
		ServerHealthCheck shc = entityManager.find(ServerHealthCheck.class, shcid);
		byte[] iconPng = shc.getBadIconPng();
		response.setContentLength(iconPng.length);
		response.setContentType(""image/png"");
		ServletOutputStream out = response.getOutputStream();
		out.write(iconPng);
		out.close();
	}

	@GetMapping(""warn/{shcid}.png"")
	public void warn(@PathVariable long shcid, HttpServletRequest request, HttpServletResponse response)
			throws IOException {
		ServerHealthCheck shc = entityManager.find(ServerHealthCheck.class, shcid);
		byte[] iconPng = shc.getBadIconPng();
		response.setContentLength(iconPng.length);
		response.setContentType(""image/png"");
		ServletOutputStream out = response.getOutputStream();
		out.write(iconPng);
		out.close();
	}

	@GetMapping(""good/{shcid}.png"")
	public void good(@PathVariable long shcid, HttpServletRequest request, HttpServletResponse response)
			throws IOException {
		ServerHealthCheck shc = entityManager.find(ServerHealthCheck.class, shcid);
		byte[] iconPng = shc.getGoodIconPng();
		response.setContentLength(iconPng.length);
		response.setContentType(""image/png"");
		ServletOutputStream out = response.getOutputStream();
		out.write(iconPng);
		out.close();
	}
}
```
We have about 3 times the mostly exact same method body.

The only difference is the initialization of the iconPng-variable. So we have to extract the iconPng initialization first.

This is the Menu:
![grafik](https://user-images.githubusercontent.com/6880636/167257772-e8f42cc4-a293-4d53-9988-7c83c62599b3.png)

Unfortunately we can only extract as 
1. Local variable
2. Method

What I miss here is the possibility to extract the variable to a lamda-function.

The extraction should only be available for one input and one output (two input for BiFunction if you like, consumer, supplier respectievly).

This should the extraction create: 

This Line:

`byte[] iconPng = shc.getBadIconPng();`

Should be extracted to this line:

```
		Function<ServerHealthCheck, byte[]> supply = ServerHealthCheck::getBadIconPng;
		byte[] iconPng = supply.apply(shc);
```

As soon as the FR is implemented, it will be an ease to transform the code above to this:

```
@Transactional
@RestController(""check/health"")
public class ServerHealthIcons {
	/**
	 * The entitymanager to use, never <code>null</code>.
	 */
	@PersistenceContext
	private final EntityManager entityManager = null;

	@GetMapping(""bad/{shcid}.png"")
	public void bad(@PathVariable long shcid, HttpServletRequest request, HttpServletResponse response)
			throws IOException {
		extracted(shcid, response, ServerHealthCheck::getBadIconPng);
	}

	@GetMapping(""warn/{shcid}.png"")
	public void warn(@PathVariable long shcid, HttpServletRequest request, HttpServletResponse response)
			throws IOException {
		extracted(shcid, response, ServerHealthCheck::getWarningIconPng);
	}

	@GetMapping(""good/{shcid}.png"")
	public void good(@PathVariable long shcid, HttpServletRequest request, HttpServletResponse response)
			throws IOException {
		extracted(shcid, response, ServerHealthCheck::getGoodIconPng);
	}

	private void extracted(long shcid, HttpServletResponse response, Function<ServerHealthCheck, byte[]> supply)
			throws IOException {
		ServerHealthCheck shc = entityManager.find(ServerHealthCheck.class, shcid);
		byte[] iconPng = supply.apply(shc);
		response.setContentLength(iconPng.length);
		response.setContentType(""image/png"");
		ServletOutputStream out = response.getOutputStream();
		out.write(iconPng);
		out.close();
	}
}

```

Thanks. 

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/40/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/42,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/42,eclipse.jdt.ui,1229940608,42,Unexpected runtime error while computing a text hover,lwrage,750311,Lutz Wrage,,CLOSED,2022-05-09T16:02:40Z,2022-05-19T05:49:25Z,"I have one Java file (unfortunately I can't share the file) that breaks a lot of Java editor functionality (hover, refactoring, content assist, go to definition). Everything seems to be caused by class cast exceptions. Here's one stack trace that happens when computing text hover fails:
```
java.lang.ClassCastException: class org.eclipse.jdt.internal.compiler.ast.LocalDeclaration cannot be cast to class org.eclipse.jdt.internal.compiler.ast.MethodDeclaration (org.eclipse.jdt.internal.compiler.ast.LocalDeclaration and org.eclipse.jdt.internal.compiler.ast.MethodDeclaration are in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @6d127783)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodDeclaration(Parser.java:5255)
	at org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeMethodDeclaration(AssistParser.java:747)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7153)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13038)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13293)
	at org.eclipse.jdt.internal.codeassist.select.SelectionParser.parse(SelectionParser.java:1666)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.dietParse(Parser.java:11636)
	at org.eclipse.jdt.internal.codeassist.select.SelectionParser.dietParse(SelectionParser.java:1490)
	at org.eclipse.jdt.internal.codeassist.SelectionEngine.select(SelectionEngine.java:994)
	at org.eclipse.jdt.internal.core.Openable.codeSelect(Openable.java:167)
	at org.eclipse.jdt.internal.core.CompilationUnit.codeSelect(CompilationUnit.java:389)
	at org.eclipse.jdt.internal.core.CompilationUnit.codeSelect(CompilationUnit.java:382)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractJavaEditorTextHover.getJavaElementsAt(AbstractJavaEditorTextHover.java:121)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:662)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
``` 
Session data:
eclipse.buildId=4.23.0.I20220308-0310
java.version=17.0.3
java.vendor=Private Build
BootLoader constants: OS=linux, ARCH=x86_64, WS=gtk, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -perspective org.eclipse.jdt.ui.JavaPerspective
Command-line arguments:  -os linux -ws gtk -arch x86_64 -product org.eclipse.epp.package.java.product -perspective org.eclipse.jdt.ui.JavaPerspective
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/42/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/42,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5C1uf8,eclipse.jdt.ui,1121380348,42,NA,lwrage,750311,Lutz Wrage,,NA,2022-05-09T17:30:54Z,2022-05-09T17:30:54Z,"A better example: 

Create a fresh Java project with the following file in src:
``` Java
import java.util.List;

public class Test {

	static class X {
	};

	class Y extends X {
	};

	public static void test() {
		var l = List.of(1, 2, 3);
		l.stream().map(i -> {
			var x1 = new X();

			if (x1 instanceof Y y) {
			}
			return i;
		});
	}
}
``` 
Hover on any name in the lambda block (line 14 - 18) results in ""Unexpected runtime error..."" in the error log with the following stack trace:
```
java.lang.ClassCastException: class org.eclipse.jdt.internal.compiler.ast.LocalDeclaration cannot be cast to class org.eclipse.jdt.internal.compiler.ast.LambdaExpression (org.eclipse.jdt.internal.compiler.ast.LocalDeclaration and org.eclipse.jdt.internal.compiler.ast.LambdaExpression are in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @176a2a8)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeLambdaExpression(Parser.java:9104)
	at org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeLambdaExpression(SelectionParser.java:878)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7911)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13038)
	at org.eclipse.jdt.internal.codeassist.impl.AssistParser.parseBlockStatements(AssistParser.java:2064)
	at org.eclipse.jdt.internal.codeassist.impl.AssistParser.parseBlockStatements(AssistParser.java:1904)
	at org.eclipse.jdt.internal.codeassist.impl.Engine.parseBlockStatements(Engine.java:349)
	at org.eclipse.jdt.internal.codeassist.impl.Engine.parseBlockStatements(Engine.java:312)
	at org.eclipse.jdt.internal.codeassist.SelectionEngine.select(SelectionEngine.java:1081)
	at org.eclipse.jdt.internal.core.Openable.codeSelect(Openable.java:167)
	at org.eclipse.jdt.internal.core.CompilationUnit.codeSelect(CompilationUnit.java:389)
	at org.eclipse.jdt.internal.core.CompilationUnit.codeSelect(CompilationUnit.java:382)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractJavaEditorTextHover.getJavaElementsAt(AbstractJavaEditorTextHover.java:121)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:662)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
```

The issue goes away if I comment out the if statement with the pattern matching instanceof.

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5C1uf8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/42,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5C3636,eclipse.jdt.ui,1121955322,42,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-05-10T05:43:25Z,2022-05-10T05:43:25Z,Fixed as a result of fix for https://bugs.eclipse.org/bugs/show_bug.cgi?id=577508,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5C3636/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/42,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DbVEW,eclipse.jdt.ui,1131237654,42,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-05-19T05:49:24Z,2022-05-19T05:49:24Z,Verified in the build I20220516-1800,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DbVEW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/45,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/45,eclipse.jdt.ui,1231292860,45,NPE in ChainCompletionProposalComputer using CompletionProposalCollector ,flatombe,1379525,Florent Latombe,florent.latombe@obeo.fr,CLOSED,2022-05-10T14:56:22Z,2022-05-18T18:30:51Z,"In `org.eclipse.jdt.internal.ui.text.java.ChainCompletionProposalComputer.initializeRequiredContext(ContentAssistInvocationContext)`, when the `ICompilationUnit` returned by our `JavaContentAssistInvocationContext` is `null`, then the following NPE happens:
```
java.lang.NullPointerException
at org.eclipse.jdt.ui.text.java.CompletionProposalCollector.<init>(CompletionProposalCollector.java:150)
at org.eclipse.jdt.internal.ui.text.java.ChainCompletionProposalComputer.initializeRequiredContext(ChainCompletionProposalComputer.java:86)
```

This seems similar to the old https://bugs.eclipse.org/bugs/show_bug.cgi?id=95862 which was fixed with an [early null check](https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/567c1546ee76fbbd4a50ee6b0de8e046a19356fe/org.eclipse.jdt.ui/ui/org/eclipse/jdt/internal/ui/text/java/JavaCompletionProposalComputer.java#L224-L227).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/45/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/45,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DX857,eclipse.jdt.ui,1130352251,45,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-05-18T18:19:20Z,2022-05-18T18:19:20Z,Verified for 4.24 M3 using I20220517 build and examining source.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DX857/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/47,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/47,eclipse.jdt.ui,1231602364,47,Extend the replace system properties cleanup to include Long and Integer support,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2022-05-10T19:33:08Z,2022-06-03T17:54:03Z,"For the Replace system property with constants cleanup found on the Java Feature cleanups page, change the existing sub-option ""Boolean type property"" to be ""Boxed type property"" and include support for Long and Integer. For example:

Integer.parseInt(System.getProperty(""Option"")); //$NON-NLS-1$

changes to:

Integer.getInteger(""Option""); //$NON-NLS-1$","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/47/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/47,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ESPY-,eclipse.jdt.ui,1145632318,47,NA,carstenartur,3164220,Carsten Hammer,,NA,2022-06-03T06:31:23Z,2022-06-03T06:31:23Z,Should this one be closed?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ESPY-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/47,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EUe56,eclipse.jdt.ui,1146220154,47,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-06-03T17:53:59Z,2022-06-03T17:53:59Z,"Yes, closed","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EUe56/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/51,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/51,eclipse.jdt.ui,1235332771,51,Unhandled event loop exception during Refactor Rename,MahatmaFatalError,776825,Mahatma_Fatal_Error,,CLOSED,2022-05-13T14:39:55Z,2022-05-13T16:08:29Z,"Out of a sudden, Refactor > Rename... of a java class name, field name, method etc. does not work anymore but produces the following `Unhandled event loop exception` message in the error log.
```
java.lang.VerifyError: Bad type on operand stack
Exception Details:
  Location:
    org/eclipse/jdt/internal/corext/dom/LinkedNodeFinder.findByNode(Lorg/eclipse/jdt/core/dom/ASTNode;Lorg/eclipse/jdt/core/dom/Name;)[Lorg/eclipse/jdt/core/dom/Name; @11: invokestatic
  Reason:
    Type '[Lorg/eclipse/jdt/core/dom/Name;' (current frame, stack[0]) is not assignable to '[Lorg/eclipse/jdt/core/dom/SimpleName;'
  Current Frame:
    bci: @11
    flags: { }
    locals: { 'org/eclipse/jdt/core/dom/ASTNode', 'org/eclipse/jdt/core/dom/Name', '[Lorg/eclipse/jdt/core/dom/Name;' }
    stack: { '[Lorg/eclipse/jdt/core/dom/Name;' }
  Bytecode:
    0000000: 2a2b b801 044d 2cc6 000b 2cb8 016b b801
    0000010: 6bb0 2bb6 0106 b600 f63e 1d10 1e9f 000f
    0000020: 1d10 0a9f 0009 1d10 12a0 0035 bb00 d059
    0000030: b700 d23a 04bb 0109 592b 1904 b701 0b3a
    0000040: 052a 1905 b600 d819 0419 04b6 00dc bd01
    0000050: 07b6 00df c001 0eb8 016b b801 6bb0 04bd
    0000060: 0107 5903 2b53 b801 6bb8 016b b0       
  Stackmap Table:
    append_frame(@18,Object[#270])
    append_frame(@44,Integer)
    same_frame(@94)

	at org.eclipse.jdt.internal.ui.refactoring.reorg.RenameLinkedMode.start(RenameLinkedMode.java:238)
	at org.eclipse.jdt.internal.ui.refactoring.actions.RenameJavaElementAction.run(RenameJavaElementAction.java:250)
	at org.eclipse.jdt.internal.ui.refactoring.actions.RenameJavaElementAction.doRun(RenameJavaElementAction.java:190)
	at org.eclipse.jdt.internal.ui.refactoring.actions.RenameJavaElementAction.run(RenameJavaElementAction.java:162)
	at org.eclipse.jdt.ui.actions.RenameAction.run(RenameAction.java:121)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:278)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:252)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor56.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1170)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4574)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1524)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1547)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1532)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1561)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1557)
	at org.eclipse.swt.widgets.Canvas.sendKeyEvent(Canvas.java:522)
	at org.eclipse.swt.widgets.Composite.keyDown(Composite.java:614)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:6260)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:236)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2162)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2487)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:6380)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5628)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5767)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:117)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3938)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
```
eclipse.buildId=4.14.1.202204250734
java.version=11.0.9.1
java.vendor=SAP SE
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_DE
Framework arguments:  -product org.springframework.boot.ide.branding.sts4","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/51/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/51,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DIKPS,eclipse.jdt.ui,1126212562,51,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-05-13T16:02:11Z,2022-05-13T16:02:11Z,"Hello, your build id doesn't look right.  Perhaps you manually entered this and put 14 instead of 24?  Otherwise, you have a 2022 build of 4.14 which is quite old.  The actual current code in question should not cause the problem you are seeing.  Around line 238, the current code has:

			if (! (selectedNode instanceof Name)) {
				return; // TODO: show dialog
			} else if (this.fJavaElement != null &&
					this.fJavaElement.getElementType() ==  IJavaElement.JAVA_MODULE) {
				nameNode = (Name) selectedNode;
				ASTNode parent = nameNode.getParent();
				while(parent instanceof Name) {
					nameNode = (Name) parent;
					parent = nameNode.getParent();
				}
				fOriginalName= nameNode.getFullyQualifiedName();
				pos= nameNode.getStartPosition();
			} else if (! (selectedNode instanceof SimpleName)) {
				return; // TODO: show dialog
			} else {
				nameNode = (SimpleName)selectedNode;
				fOriginalName = ((SimpleName)nameNode).getIdentifier();
				pos = nameNode.getStartPosition();
			}
SimpleName extends Name and nameNode is of type Name.  If the selectedNode (type ASTNode) is not a Name, we return.  If we are dealing with a module, we only use selectedNode as a Name.  Otherwise, if selectedNode is not a SimpleName, we return.  Finally selectedNode must be a SimpleName and we are free to cast it to SimpleName and assign it to it's superclass: Name.

If you are using I-builds, try updating to latest I-build from download.eclipse.org.  You could also try a different JVM if that doesn't solve the issue to see if the problem lies there.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DIKPS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/51,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DIMMr,eclipse.jdt.ui,1126220587,51,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-05-13T16:08:29Z,2022-05-13T16:08:29Z,AFAIK I's lombok that incompatible with Eclipse 4.23. See https://bugs.eclipse.org/bugs/show_bug.cgi?id=579168 and https://github.com/projectlombok/lombok/issues/3134,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DIMMr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/53,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/53,eclipse.jdt.ui,1236212580,53,JUnit View: Disabled ParameterizedTest does not have icon and is missing in counters,frankbenoit,8962790,Frank Benoit,,OPEN,2022-05-15T07:37:29Z,2022-05-19T16:13:05Z,"A normal test with @Disabled shows an overlay icon on the lower-left corner.
This is not the case for @ParameterizedTest.

Also the @ParameterizedTest is not counting in the number of tests and skipped tests.

![image](https://user-images.githubusercontent.com/8962790/168462387-d8d26e2d-3179-4405-8dea-83f09a69f7a9.png)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/53/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/53,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DdJa4,eclipse.jdt.ui,1131714232,53,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-05-19T13:46:37Z,2022-05-19T13:46:37Z,"> This is not the case for @ParameterizedTest.

Does the above statement mean  that the test disabledParametrizedTest have 2 annottations applied on it **@ParametrizedTest** and **@disabled**. Can you please provide a sample code or file to understand the usecase?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DdJa4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/53,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Dd7L9,eclipse.jdt.ui,1131918077,53,NA,frankbenoit,8962790,Frank Benoit,,NA,2022-05-19T16:13:05Z,2022-05-19T16:13:05Z,"The use case is the same like with a non-parameterized test.
Could look like this:
````
@Disabled(""problem with last refactoring. JIRA-12345 to bring it back"")
@ParameterizedTest
@CsvSource({
""input1, output1"",
""input2, output2"",
})
void test( String input, String expected ){
....
````","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Dd7L9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/56,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/56,eclipse.jdt.ui,1238326288,56,Quickfix/cleanup removes //$NON-NLS-1$,vik-chand,99390647,Vikas Chandra,,CLOSED,2022-05-17T09:10:15Z,2022-07-14T04:21:08Z,"**Cleanup**
```

-		File file = null;
-		file = new File(homeDir, ""eclipse""); //$NON-NLS-1$
+		File file = new File(homeDir, ""eclipse"");
```


**Quickfix**

```
fBrowseFile.addSelectionListener(new SelectionAdapter() {
-			@Override
-			public void widgetSelected(SelectionEvent e) {
-				chooseFile(fArchiveCombo, new String[] {""*"" + ZIP_EXTENSION, ""*"" + WAR_EXTENSION}); //$NON-NLS-1$ //$NON-NLS-2$
-			}
-		});
+		fBrowseFile.addSelectionListener(widgetSelectedAdapter(e -> chooseFile(fArchiveCombo, new String[] {""*"" + ZIP_EXTENSION, ""*"" + WAR_EXTENSION})));
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/56/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/56,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DfQIP,eclipse.jdt.ui,1132265999,56,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-05-19T22:29:00Z,2022-05-19T22:29:00Z,"Hi  Thomas, can you take a look at this?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DfQIP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/56,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Dm1Ni,eclipse.jdt.ui,1134252898,56,NA,tsmaeder,13163770,Thomas Mäder,,NA,2022-05-23T06:51:44Z,2022-05-23T06:51:44Z,@vik-chand which cleanup and/or quick fix is this? Instructions to reproduce would be much appreciated.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Dm1Ni/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/56,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EnQyr,eclipse.jdt.ui,1151143083,56,NA,tsmaeder,13163770,Thomas Mäder,,NA,2022-06-09T13:47:09Z,2022-06-09T13:47:09Z,"There are a couple of factors to be considered here:

1. The ""non-nls"" warning is not a Java error, instead it's a convention introduced by the Eclipse source code itself
2. The problem is configurable and might be turned off. In this case I would consider it wrong to introduce ""$NON-NLS"" tags.
3. There might be tagged strings outside of the initializer being moved both in the origin as well as the target line. Both existing and moved tag numbers will have to be updated. Consider this case: 
    ```
    String bla= ""gork"";File f= new File(""abc""); String zoz= ""zoz""; //$NON-NLS3
    f= new File(""foo"" + ""bar""); //$NON-NLS2
    ``` 
4. If tags exist, they should be moved, even if omitting them would not introduce an error (as in case 2.)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EnQyr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/56,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EqPi0,eclipse.jdt.ui,1151924404,56,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-06-10T04:25:49Z,2022-06-10T04:25:49Z,We also would need to consider that the cleanup/quickfix should also not add extra warnings.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EqPi0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/56,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EtWcB,eclipse.jdt.ui,1152739073,56,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-06-10T21:07:13Z,2022-06-10T21:07:13Z,"The NLS comment should not be removed in the simple example originally given in the issue.  You can reconstruct the comment if you create a brand new statement via ASTRewrite.createStringPlaceHolder and cast it to be a line comment.  If there is some really complex situation you can think of where the cleanup won't know what to do or the code will be overly complex, simply bail on the cleanup (e.g. don't handle any VarDeclarationStatement with multiple fragments, don't handle multiple statements on a single line, etc..).  There should be few of these complex scenarios in the wild but the first scenario is very common.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EtWcB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/56,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FKu9u,eclipse.jdt.ui,1160441710,56,NA,tsmaeder,13163770,Thomas Mäder,,NA,2022-06-20T13:20:21Z,2022-06-20T13:20:21Z,"@jjohnstn a problem I'm running into is that the AST simply does not seem to have any line information: if there already is a line comment on the declaration line, how do I even match that to the var initializer I'm replacing? NLS processing is based on TextEdits and lines, not an AST.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FKu9u/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/56,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FKww0,eclipse.jdt.ui,1160449076,56,NA,tsmaeder,13163770,Thomas Mäder,,NA,2022-06-20T13:27:04Z,2022-06-20T13:27:04Z,"Btw: I think even before I started working on this, the cleanup could have introduced warnings. Consider this:
```
var foo= new File(""abcdef""); //$NON-NLS-1
foo= new File(this.currentFile);
```
That would have been rewritten to 
```
var foo= new File(this.currentFile); //$NON-NLS-1
```
, which will generate a ""unnessary non-nls tag"" warning.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FKww0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/56,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FL3NT,eclipse.jdt.ui,1160737619,56,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-06-20T18:30:54Z,2022-06-20T18:30:54Z,"Hi Thomas, there are two methods you can call:  ASTNodes.getLeadingComments(node) and ASTNode.getTrailingComments(node).
From there, you can build a statement in a StringBuffer and prepend/append comments as you please.  You can then cast that String into any node using ASTRewrite.createStringPlaceHolder(String s, int nodeType).  You can see an example of this in: SwitchExpressionsFixCore.getNewStatementForCase().  In that example, I move some leading line comments into a switch case so line comments need to be converted to block comments so they don't obliterate the line.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FL3NT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/56,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FVIyl,eclipse.jdt.ui,1163168933,56,NA,tsmaeder,13163770,Thomas Mäder,,NA,2022-06-22T14:23:17Z,2022-06-22T14:23:17Z,"I've thought about this intensely, and handling this gets fiendishly difficult except for the most trivial case: where both the original and the overriden assignment sit alone on their own line. In any other case it's not even clear, where one would insert a line comment: from a syntactical point of view, comments are empty space, so you'd have to find an insert location that is between two ast nodes that are on the current and the next line. The location may also be the first child of an ""upper level"" node, etc. 
As I said, this gets hairy real fast.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FVIyl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/56,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FWMq3,eclipse.jdt.ui,1163446967,56,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-06-22T18:04:25Z,2022-06-22T18:04:25Z,"Handle the cases you can.  That is the vast majority of cases.  Who declares a variable with an initializer, then changes its value on the same line AND has comments intertwined?  If you don't add the NLS for the simple cases, this will break builds and create a lot of work for the end-user.  If a user has some convoluted situation where the original and overridden are on the same line (easy to recognize) and there are comments, simply bail; don't do the cleanup.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FWMq3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/56,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FYr0f,eclipse.jdt.ui,1164098847,56,NA,tsmaeder,13163770,Thomas Mäder,,NA,2022-06-23T08:15:26Z,2022-06-23T08:15:26Z,"I'm not talking about strange cases, but simple ones like these:

```
String foo= ""bar"" + //$NON-NLS-1
           ""zoz"" + 
           ""gorx""; // NON-NLS-1
```
or
``` 
var z= ""borx""; var x= ""foo"";  // some comment, maybe for the first, maybe for the second var //$NON-NLS-1 //$NON-NLS-2
...
x= ""bla"";
```
or even worse:
```
if (""TRUE"".equals(str)) { var x= ""bar""; //$NON-NLS-1 //NON-NLS-2
```
Even just detecting that this last case is a problem is not trivial looking at the AST. There is a good reason the NLS fixes work on text edits, not AST manipulation. Mixing the two is hard.

That said, yes, I'll just bail on anything that is non-trivial. But if our aim is to not introduce any warnings/errors, we need to detect _all_ the cases where we _would_ introduce a problem, which itself is non-trivial.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FYr0f/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/56,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FlH3V,eclipse.jdt.ui,1167359445,56,NA,tsmaeder,13163770,Thomas Mäder,,NA,2022-06-27T13:32:47Z,2022-06-27T13:32:47Z,"This is driving me nuts! So I've got a solution that would just move the line end comments: the problem is: line comments are not part of the AST, so you can't remove them from the AST either (throws NPE). So the only solution I can see would be to replace the parent node of the variable declarations (probably a `Block`) as text. But that does not seem like a good approach: we'd have to do the manipulation of the AST as well as text edits (instead of AST manipulation). 
At this point, I would close this one as ""won't fix"", t.b.h. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FlH3V/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/56,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FpVg4,eclipse.jdt.ui,1168463928,56,NA,tsmaeder,13163770,Thomas Mäder,,NA,2022-06-28T09:22:05Z,2022-06-28T09:22:05Z,"@jjohnstn I tried your idea with using string placeholders to replace the whole variable declaration statement. The problem I'm running into is in handling the leading comments. For example: 
```
     /**
      * Some comment
      */
      String bla= ""foo"" //$NON-NLS-1
```
If I use a `ASTRewrite.createStringPlaceholder()`, I can either lost the leading comment or the leading indent of the comment gets scrambled in the result since string placeholders do not get formatted. Should I try to fix the indenting of leading comments myself or what's a promising approach here?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FpVg4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/56,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FqG77,eclipse.jdt.ui,1168666363,56,NA,tsmaeder,13163770,Thomas Mäder,,NA,2022-06-28T12:36:24Z,2022-06-28T12:36:24Z,"Never mind, I found a way to ignore the leading comments using a custom source range computer.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FqG77/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/56,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5F2g6d,eclipse.jdt.ui,1171918493,56,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-07-01T04:20:42Z,2022-07-01T04:20:42Z,"After looking at it, I think it is better to ensure that both the declaration and replacement lines don't share lines with other statements rather than restrict if they have multiple lines.  It is fine to move up the case with:

    int s = ""some line""; //$NON-NLS-1$
    s = ""abc"" + //$NON-NLS-1$
          ""def"" +
          ""ghi""; //$NON-NLS-1$

as this doesn't cause any warnings that weren't already there.  I have modified the code and added a new case to the test that verifies that movement doesn't occur when there are multiple statements on a line or multiple declarations on a line.  I also modified to move preceding comments as well which is in the test as well.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5F2g6d/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/57,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/57,eclipse.jdt.ui,1238932486,57,ClassNotFoundException while using the rerun junit5 functionality,vik-chand,99390647,Vikas Chandra,,CLOSED,2022-05-17T17:09:08Z,2022-05-24T15:26:25Z,"While testing https://www.eclipse.org/eclipse/news/4.24/jdt.php#junit5-rerun-failures-first
```

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;

class t {

	@Test
	void atest() {
		//fail(""Not yet implemented"");
	}
	@Test
	void test() {
		fail(""Not yet implemented"");
	}

}
```

While running re-run I get
```

May 17, 2022 10:33:39 PM org.junit.jupiter.engine.config.InstantiatingConfigurationParameterConverter logFailureMessage
WARNING: Failed to load default method orderer class 'org.eclipse.jdt.internal.junit5.runner.FailuresFirstMethodOrderer' set via the 'junit.jupiter.testmethod.order.default' configuration parameter. Falling back to default behavior.
java.lang.ClassNotFoundException: org.eclipse.jdt.internal.junit5.runner.FailuresFirstMethodOrderer
	at org.eclipse.pde.internal.junit.runtime.MultiBundleClassLoader.findClass(MultiBundleClassLoader.java:40)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:587)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	at org.junit.platform.commons.util.ReflectionUtils.lambda$tryToLoadClass$9(ReflectionUtils.java:829)
	at org.junit.platform.commons.function.Try.lambda$call$0(Try.java:57)
	at org.junit.platform.commons.function.Try.of(Try.java:93)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/57/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/57,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DTqgh,eclipse.jdt.ui,1129228321,57,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-05-17T19:16:48Z,2022-05-17T19:16:48Z,"I can test this on I20220517 by creating a Plug-in project that depends on org.junit.jupiter.api, and org.eclipse.jdt.junit5.runtime.  Works fine.  Is there some requires needed in JDT so it works in your scenario?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DTqgh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/57,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DUNDQ,eclipse.jdt.ui,1129369808,57,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-05-17T22:18:33Z,2022-05-17T22:18:33Z,"After thinking about it, the jar containing the FailuresFirstMethodOrder class (currently  org.eclipse.jdt.junit5.runtime) needs to be added on the classpath by default instead of manually, but I am not sure how to do this.  I tried adding it in JUnitLaunchConfigurationDelegate.getVMRunnerConfiguration() where we add jupiter jars to the classpath, but it wasn't successful.  The feature will need to be marked incomplete and removed from the N&N until I can sort this out.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DUNDQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/57,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DXh2f,eclipse.jdt.ui,1130241439,57,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-05-18T16:38:17Z,2022-05-18T16:38:17Z,I tried running the same test as JUnit test and it works fine so I'll leave the feature in and keep this as an open issue.  The workaround is to add org.eclipse.jdt.junit5.runtime as a test plug-in dependency.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DXh2f/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/57,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Dd5VV,eclipse.jdt.ui,1131910485,57,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-05-19T16:05:16Z,2022-05-19T16:05:16Z,A fix has been proposed to PDE to fix this.  See issue: https://github.com/eclipse-pde/eclipse.pde/issues/117,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Dd5VV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/57,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Dd9IV,eclipse.jdt.ui,1131926037,57,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-05-19T16:20:59Z,2022-05-19T16:20:59Z,@vik-chand Can you review the PR mentioned above?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Dd9IV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/57,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DtxqO,eclipse.jdt.ui,1136073358,57,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-05-24T15:26:24Z,2022-05-24T15:26:24Z,The PDE changes have fixed this problem.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DtxqO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/59,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/59,eclipse.jdt.ui,1241243215,59,Inline module info question,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,CLOSED,2022-05-19T05:44:07Z,2022-07-07T07:43:06Z,"Would it be possible to inline the options of module info in the Java project wizard page?

![image](https://user-images.githubusercontent.com/139910/169218664-50819145-1653-40cc-9549-f4480346671c.png)

All the other options are set on the first page, only the module info is done via an additional popup which feels weird and IMHO is bad UX.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/59/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/59,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DbUCf,eclipse.jdt.ui,1131233439,59,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2022-05-19T05:44:23Z,2022-05-19T05:44:23Z,cc @tsmaeder and @jjohnstn ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DbUCf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/59,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DbWjd,eclipse.jdt.ui,1131243741,59,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-05-19T05:53:13Z,2022-05-19T05:53:13Z,"This is a duplicate of the bug [Bug 560840 - [9] There should be someway to avoid the module name dialog during Java Project creation](https://bugs.eclipse.org/bugs/show_bug.cgi?id=560840), which I plan to work on in 4.25 M1 ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DbWjd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/59,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DbZPw,eclipse.jdt.ui,1131254768,59,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2022-05-19T06:07:40Z,2022-05-19T06:07:40Z,"Very nice, as bugzilla is more or less dead, I will mark the bugzilla one as moved to Github.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5DbZPw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/59,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GKrlH,eclipse.jdt.ui,1177205063,59,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-07-07T07:43:06Z,2022-07-07T07:43:06Z,"@ktatavarthi 
Only problem I am facing with this is that the added segment on Java Project wizard Page is not displayed by default (atleast for me). Only if I scroll down I can see that.
<img width=""800"" alt=""image"" src=""https://user-images.githubusercontent.com/14090181/177719124-f645b84c-9027-49db-9967-425a6d2e1530.png"">

What are the options to move it up? How can we reorganize the page?
Can we move Project Layout and Working Set stuff down? Is that used frequently?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GKrlH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/60,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/60,eclipse.jdt.ui,1242602634,60,AnnotateAssistTest1d8.testAnnotateMethod_TypeParameter2 test failed on Mac in the I-build,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,OPEN,2022-05-20T04:37:33Z,2024-01-25T11:38:52Z,"The test org.eclipse.jdt.ui.tests.quickfix.AnnotateAssistTest1d8.testAnnotateMethod_TypeParameter2 failed on Mac in the build [I20220519-0130](https://download.eclipse.org/eclipse/downloads/drops4/I20220519-0130/testResults.php), with the below error

```java.lang.NullPointerException
at java.base/java.util.Objects.requireNonNull(Objects.java:208)
at java.base/java.util.Arrays$ArrayList.<init>(Arrays.java:4137)
at java.base/java.util.Arrays.asList(Arrays.java:4122)
at org.eclipse.jdt.ui.tests.quickfix.AbstractAnnotateAssistTests.collectAnnotateProposals(AbstractAnnotateAssistTests.java:82)
at org.eclipse.jdt.ui.tests.quickfix.AnnotateAssistTest1d8.testAnnotateMethod_TypeParameter2(AnnotateAssistTest1d8.java:1133)
```
test results link : [I20220519-0130/testresults/html/org.eclipse.jdt.ui.tests_ep424I-unit-mac64-java17_macosx](https://download.eclipse.org/eclipse/downloads/drops4/I20220519-0130/testresults/html/org.eclipse.jdt.ui.tests_ep424I-unit-mac64-java17_macosx.cocoa.x86_64_17.html)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/60/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/60,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xgdEV,eclipse.jdt.ui,1904333077,60,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-22T16:11:32Z,2024-01-22T16:11:32Z,"random failed on  https://ci.eclipse.org/jdt/job/eclipse.jdt.ui-github/job/PR-1115/1
```
java.lang.AssertionError: 
Wrong number of proposals, is: 0, expected: 2

	at org.junit.Assert.fail(Assert.java:89)
	at org.eclipse.jdt.ui.tests.quickfix.QuickFixTest.assertNumberOfProposals(QuickFixTest.java:485)
	at org.eclipse.jdt.ui.tests.quickfix.AnnotateAssistTest1d8.testAnnotateMethod_TypeParameter2(AnnotateAssistTest1d8.java:1136)
```

may relate to https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/736","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xgdEV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/60,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x2BxJ,eclipse.jdt.ui,1909988425,60,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-25T11:35:40Z,2024-01-25T11:35:40Z,"also frequently fails on CI jenkins, for example https://ci.eclipse.org/jdt/job/eclipse.jdt.ui-github/job/PR-1121/3","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x2BxJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/61,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/61,eclipse.jdt.ui,1242730072,61,typehierarchy: UI Freezes till Indexing done,jukzi,51790620,Jörg Kubitz,,CLOSED,2022-05-20T07:13:17Z,2024-02-08T13:21:26Z,"reproduce: 
1. press ""Rebuild Index"" in the Java Preferences
2. in a java editor press CTRL+T

=> Mouse icon changes to busy and UI freezes till indexing finished. Impossible to cancel. 
Expected: show a cancelable(!) ""wait till indexing finished"" Dialog

```
""main"" #1 prio=6 os_prio=0 cpu=128937.50ms elapsed=1278.33s tid=0x000001580d59f730 nid=0xe70 runnable  [0x0000000f8a8fb000]
   java.lang.Thread.State: RUNNABLE
        at org.eclipse.swt.internal.win32.OS.WaitMessage(Native Method)
        at org.eclipse.swt.widgets.Display.sleep(Display.java:4757)
        at org.eclipse.jface.operation.ModalContext$ModalContextThread.block(ModalContext.java:167)
        at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:368)
        at org.eclipse.ui.internal.WorkbenchWindow.lambda$7(WorkbenchWindow.java:2345)
        at org.eclipse.ui.internal.WorkbenchWindow$$Lambda$2406/0x0000000802052330.run(Unknown Source)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
        at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2343)
        at org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyLifeCycle.ensureRefreshedTypeHierarchy(TypeHierarchyLifeCycle.java:212)
        at org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyLifeCycle.ensureRefreshedTypeHierarchy(TypeHierarchyLifeCycle.java:161)
        at org.eclipse.jdt.internal.ui.typehierarchy.HierarchyInformationControl.setInput(HierarchyInformationControl.java:275)
        at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
        at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
        at org.eclipse.jface.text.AbstractInformationControlManager.setInformation(AbstractInformationControlManager.java:431)
        at org.eclipse.jface.text.information.InformationPresenter.computeInformation(InformationPresenter.java:321)
        at org.eclipse.jface.text.AbstractInformationControlManager.doShowInformation(AbstractInformationControlManager.java:1101)
        at org.eclipse.jface.text.AbstractInformationControlManager.showInformation(AbstractInformationControlManager.java:1091)
        at org.eclipse.jdt.internal.ui.javaeditor.JavaSourceViewer.doOperation(JavaSourceViewer.java:175)
        at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:206)
        at org.eclipse.ui.texteditor.TextOperationAction.lambda$0(TextOperationAction.java:130)
        at org.eclipse.ui.texteditor.TextOperationAction$$Lambda$2434/0x0000000801dd5490.run(Unknown Source)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
        at org.eclipse.ui.texteditor.TextOperationAction.run(TextOperationAction.java:130)
        at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
        at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
        at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
        at jdk.internal.reflect.GeneratedMethodAccessor342.invoke(Unknown Source)
        at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(java.base@17.0.3/DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(java.base@17.0.3/Method.java:568)
        at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
        at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
        at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
        at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
        at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
        at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
        at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
        at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
        at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
        at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
        at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
        at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
        at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
        at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1262)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
        at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
        at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
        at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1542)
        at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4868)
        at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
        at org.eclipse.swt.widgets.Control.windowProc(Control.java:4746)
        at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
        at org.eclipse.swt.widgets.Display.windowProc(Display.java:5026)
        at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3643)
        at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
        at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
        at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
        at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
        at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
        at org.eclipse.ui.internal.Workbench$$Lambda$276/0x0000000800ead0f0.run(Unknown Source)
        at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
        at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
        at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
        at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
        at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
        at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
        at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(java.base@17.0.3/Native Method)
        at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(java.base@17.0.3/NativeMethodAccessorImpl.java:77)
        at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(java.base@17.0.3/DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(java.base@17.0.3/Method.java:568)
        at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
        at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
        at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/61/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/61,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5leQTQ,eclipse.jdt.ui,1702429904,61,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-09-01T09:13:15Z,2023-09-01T09:13:15Z,"Normally there is  a progress an cancel button in the bottom left (managed by org.eclipse.jface.action.StatusLineManager).
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/e1a6e4de-99ba-439f-9099-f597d62dc9db)
unfortunately that button disappears as soon as the user switches the application (likely while waiting) and show eclipse again.
That is cause by monitor.done() in  org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.ActivationListener.windowActivated(IWorkbenchWindow) - closing an progressmonitor that is still needed.
I'll propose a PR.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5leQTQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/61,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5lefCA,eclipse.jdt.ui,1702490240,61,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-09-01T09:56:13Z,2023-09-01T09:56:13Z,introduced with https://bugs.eclipse.org/bugs/show_bug.cgi?id=485748,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5lefCA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/61,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5lfJtL,eclipse.jdt.ui,1702665035,61,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-09-01T12:25:04Z,2023-09-01T12:25:04Z,Can be fixed in general in platform.ui with https://github.com/eclipse-platform/eclipse.platform.ui/pull/1077,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5lfJtL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/61,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zSD6X,eclipse.jdt.ui,1934114455,61,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-08T13:21:26Z,2024-02-08T13:21:26Z,"This got fixed: Its possible to cancel using the stop button in the bottom:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/db2250a1-282d-4d09-8e2b-30ee1ab8244b)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zSD6X/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/62,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/62,eclipse.jdt.ui,1243298780,62,[19]  Allow JDT to target Java 19 in compiler preferences,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,CLOSED,2022-05-20T15:18:46Z,2022-05-23T04:31:52Z,Add `19 (BETA)` on the Compiler preferences page and show the corresponding disclaimer when it is selected.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/62/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/62,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Dmgge,eclipse.jdt.ui,1134168094,62,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-05-23T04:31:51Z,2022-05-23T04:31:51Z,"Issue is closed by 
- https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/63","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Dmgge/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/65,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/65,eclipse.jdt.ui,1246064923,65,[19] support coloring of the Restricted Keyword 'when' in the guarded pattern,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,CLOSED,2022-05-24T06:47:20Z,2022-05-26T04:52:48Z,"The guarded pattern in Java 19 3rd preview uses the restricted keyword `when`. This has to colored, as all restricted keywords are colored.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/65/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/65,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5D1tJs,eclipse.jdt.ui,1138152044,65,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-05-26T04:52:48Z,2022-05-26T04:52:48Z,"Fixed using 
-  https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/67","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5D1tJs/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/69,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/69,eclipse.jdt.ui,1250755709,69,Support other accessor styles besides traditional getter/setter (e.g. Record style),agentgt,567706,Adam Gent,,OPEN,2022-05-27T13:14:13Z,2022-05-31T19:35:36Z,"With Java now going more in the direction of Records and traditional Java Beans not as popular I have been seeing more desire to make accessor methods that do not follow the traditional get/set prefix.

Currently you can configure getter/setter body and comment style but you cannot configure the method names.

For example if I have a class like:

```java
public SomeClass {
  private String name;
  
}
```

I would like to generate accessors just like a Record where there is no get or set:

```java
public SomeClass {
   private String name;

   public String name() { return this.name; }
   public void name(String name) { this.name = name; }
}
```


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/69/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/70,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/70,eclipse.jdt.ui,1250956912,70,Text in package explorer becomes bolder,rickardnorlander,1970660,,,OPEN,2022-05-27T16:30:36Z,2022-05-27T16:30:36Z,"Text in Package Explorer starts rendering correctly, but as I work it gradually becomes bolder and bolder. If I force a re-render by say alt-tabbing back and forth or hovering the text in question, then it will reset to normal font weight, and start over on its journey.

One way I can force it to happen is to open a java file, introduce a compilation error, save it, remove the error, save it, reintroduce it, save, and so on. This may or may not be the only way.

This has been happening for me with Eclipse on Ubuntu for a long time, during which I have upgraded Ubuntu multiple times. Yesterday I was using the snap version of Eclipse on Ubuntu 22.04 which was affected. I decided to upgrade to see if that would solve it, so I installed openjdk17 (I previously had both 8 and 11 installed, and I'm unsure which I was using) and the Eclipse 2022-03 (4.23.0) using the installer from the Eclipse website, making sure to pick jdk17 in the installer. However the issue was still there. I created a new workspace, and a new barebones project within that workspace, and the issue was still there.

This is a picture of what it can look like. Notice that the jre system library is shown in bold. ![bold2](https://user-images.githubusercontent.com/1970660/170739715-4c7ceeb4-cd32-40c5-88c1-1c4de29b9e04.png)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/70/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/72,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/72,eclipse.jdt.ui,1251650501,72,"""Open declaration/implementation"" popup disappears too soon",LorenzoBettini,1202254,Lorenzo Bettini,,CLOSED,2022-05-28T14:50:50Z,2022-06-08T20:32:13Z,"I think this issue might be related to Wayland (in Linux) because I've just started using the Wayland session in Gnome 42 and I've never experienced this problem before: when I Ctrl+click on a type in the editor and the popup for ""Open declaration""/""Open implementation"" appears, it becomes nearly impossible to select ""Open implementation"" (the second item) because the popup disappears (most of the time) when you move the mouse to select the menu. And this happens in Fedora, Arch and Ubuntu (latest versions, Gnome 42, all with Wayland session).

![Screenshot-20220528164903-2560x1600](https://user-images.githubusercontent.com/1202254/170830598-0890d8c5-2e7f-4f2a-a775-1447bb99845e.png)

The version of Eclipse is 2022-03 (4.23.0)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/72/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/72,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5D90UW,eclipse.jdt.ui,1140278550,72,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-05-28T14:54:49Z,2022-05-28T14:54:49Z,Please report this for SWT. JDT UI is platform independent. ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5D90UW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/72,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5D90Wz,eclipse.jdt.ui,1140278707,72,NA,LorenzoBettini,1202254,Lorenzo Bettini,,NA,2022-05-28T14:56:05Z,2022-05-28T14:56:05Z,@iloveeclipse can I move the issue from here?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5D90Wz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/72,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5D92KF,eclipse.jdt.ui,1140286085,72,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-05-28T15:43:25Z,2022-05-28T15:43:25Z,"> @iloveeclipse can I move the issue from here?

Nope, ""modern"" github is not ""ancient"" bugzilla, it doesn't allow that simple thing. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5D92KF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/72,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EYBxu,eclipse.jdt.ui,1147149422,72,NA,LorenzoBettini,1202254,Lorenzo Bettini,,NA,2022-06-06T07:43:57Z,2022-06-06T07:43:57Z,"> > @iloveeclipse can I move the issue from here?
> 
> Nope, ""modern"" github is not ""ancient"" bugzilla, it doesn't allow that simple thing.

Actually, you can, but you have to have write access to both repositories.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EYBxu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/72,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EkW-6,eclipse.jdt.ui,1150382010,72,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-06-08T20:32:13Z,2022-06-08T20:32:13Z,"> Actually, you can, but you have to have write access to both repositories.

Actually, you can't, if the bugs belong to different **organizations** which is unfortunately the case here.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EkW-6/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/73,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/73,eclipse.jdt.ui,1254058915,73,Decoration Calculation waits for Indexing,jukzi,51790620,Jörg Kubitz,,CLOSED,2022-05-31T15:41:10Z,2024-02-15T07:55:02Z,"I just saw a very long running Decoration Job.
It was because of the usage of
 IJavaSearchConstants.WAIT_UNTIL_READY_TO_SEARCH
in
 org.eclipse.jdt.internal.ui.InterfaceIndicatorLabelDecorator.addOverlaysWithSearchEngine(ITypeRoot, String, IDecoration)

I am not sure about the consequences but i guess it will stall all other Decorations till indexer is ready... is that really smart when indexing takes a long time - say minutes?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/73/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/73,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EFjLa,eclipse.jdt.ui,1142305498,73,NA,jukzi,51790620,Jörg Kubitz,,NA,2022-05-31T15:45:12Z,2022-05-31T15:45:12Z,"![image](https://user-images.githubusercontent.com/51790620/171214852-826ea7f8-ed46-4e1f-9e09-0440a5b2cf92.png)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EFjLa/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/73,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EFkxw,eclipse.jdt.ui,1142312048,73,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-05-31T15:51:08Z,2022-05-31T15:51:08Z,"One possibility would be to **not** wait **while** decorating, but add some listener to the indexer and trigger decoration after indexer is done. I assume decorator wants have type information (interface/class/enum) from indexer","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EFkxw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/73,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EFlFs,eclipse.jdt.ui,1142313324,73,NA,jukzi,51790620,Jörg Kubitz,,NA,2022-05-31T15:52:19Z,2022-05-31T15:52:19Z,yea that sounds more reasonable,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EFlFs/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/73,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5z9lWw,eclipse.jdt.ui,1945523632,73,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-15T07:48:05Z,2024-02-15T07:48:05Z,not planned,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5z9lWw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/75,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/75,eclipse.jdt.ui,1254127926,75,The organize imports cleanup has a broken preview,carstenartur,3164220,Carsten Hammer,,OPEN,2022-05-31T16:38:57Z,2022-05-31T20:17:02Z,"It looks like the organize imports cleanup is based on very old code that is in parts in jdt.ui and jdt.core. It does not follow the patterns other cleanups are aligned to and beside the broken preview has more issues. In some situations (classpath issue in project) it exchanges your imports with unrelated imports. Maybe the reason is that it uses in some structures just the plain class name that is not unique in all cases (Think of ""Path"" that is used for classes in eclipse and in java itself).
![grafik](https://user-images.githubusercontent.com/3164220/171276864-12f0656f-d333-463f-b1d4-06358773bff4.png)
I'm talking about the upper part of the window where other cleanups show a tree for each code location found.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/75/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/76,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/76,eclipse.jdt.ui,1255356823,76,[content assist] Avoid suggesting template proposals when completing on variable names,gayanper,7471994,Gayan Perera,,OPEN,2022-06-01T08:32:11Z,2022-06-01T11:23:53Z,"```
      beanDefs.asMap().entrySet().forEach(e| -> {});
```

when completing at this position the template proposals are suggested. Fixing this could improve the completion suggestions on entry key stroke like VSCode java.

The same thing happens for any variable name definition location such as

`BeanDefinitionRegistry r|`

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/76/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/76,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EJhzA,eclipse.jdt.ui,1143348416,76,NA,humphreygao,52394598,,,NA,2022-06-01T09:18:58Z,2022-06-01T09:18:58Z,"I suggest not selecting any content assist by default when invoke content assist for variable name.
In proposals popup, the first content assist is selected by default, if I press `Enter`, the first content assist(which is very likely not my want) is inserted - very annoying.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EJhzA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/77,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/77,eclipse.jdt.ui,1255362313,77,[content assist] Provide variable name completions for lambda variables,gayanper,7471994,Gayan Perera,,OPEN,2022-06-01T08:34:49Z,2022-06-01T11:24:11Z,"```
map.entrySet().forEach(e| -> {
        
})
```
suggest variable names at `e|`based on the resolved lambda variable type like any other variable name suggestion.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/77/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/78,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/78,eclipse.jdt.ui,1255389257,78,[content assist] Investigate why default completion list is slower than VSCode Java when completion is enabled for all keys,gayanper,7471994,Gayan Perera,,OPEN,2022-06-01T08:44:48Z,2022-06-01T13:10:17Z,"When completing same code in both VSCodeJava and Eclipse, Eclipse JDT completion popup is slow to be populated compared to VSCode completions. This needs to be investigated and improved to provide same or more better level of response time in JDT.

This could be because of lack of debouncing in the JDT.UI editor for keystrokes.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/78/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/78,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EJitU,eclipse.jdt.ui,1143352148,78,NA,humphreygao,52394598,,,NA,2022-06-01T09:22:22Z,2022-06-01T09:22:22Z,"When there are errors in Java Editor, the content assist is extremely slow, so I have to press `Esc`  to quit content assist and invoke content assist again.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EJitU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/78,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EKdbO,eclipse.jdt.ui,1143592654,78,NA,gayanper,7471994,Gayan Perera,,NA,2022-06-01T13:10:17Z,2022-06-01T13:10:17Z,"> When there are errors in Java Editor, the content assist is extremely slow, so I have to press `Esc` to quit content assist and invoke content assist again.

Could you give a example code snippet. Then we can see what’s happening in side the completion engine. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EKdbO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/79,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/79,eclipse.jdt.ui,1257812692,79,Random failing of SaveParticipantTest,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,OPEN,2022-06-02T07:39:33Z,2025-01-17T09:36:12Z,"This issue is opened on behalf of [Bug 572555](https://bugs.eclipse.org/bugs/show_bug.cgi?id=572555) - Avoid random failures of SaveParticipantTest

Some tests in org.eclipse.jdt.ui.tests.quickfix.SaveParticipantTest fail randomly.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/79/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/79,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EOHyC,eclipse.jdt.ui,1144552578,79,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-06-02T07:44:16Z,2022-06-02T07:44:16Z,"org.eclipse.jdt.ui.tests.quickfix.SaveParticipantTest.testBug228659 failed in the build [I20220601-1800](https://download.eclipse.org/eclipse/downloads/drops4/I20220601-1800/testResults.php)

on [Mac - mac64-java17_macosx.cocoa.x86_64_17](https://download.eclipse.org/eclipse/downloads/drops4/I20220601-1800/testresults/html/org.eclipse.jdt.ui.tests_ep424I-unit-mac64-java17_macosx.cocoa.x86_64_17.html
) with the below error
```
expected:<...{ String s1 []= """"; } } > but was:<...{ String s1 [ ]= """"; } } >

org.junit.ComparisonFailure: expected:<...{
String s1 []= """";
}
}
> but was:<...{
String s1 [ ]= """";
}
}
>
at org.junit.Assert.assertEquals(Assert.java:117)
at org.junit.Assert.assertEquals(Assert.java:146)
at org.eclipse.jdt.ui.tests.quickfix.SaveParticipantTest.testBug228659(SaveParticipantTest.java:654) 
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EOHyC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/79,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GLcJR,eclipse.jdt.ui,1177403985,79,NA,noopur2507,8749449,Noopur Gupta,,NA,2022-07-07T10:57:25Z,2022-07-07T10:57:25Z,"I20220706-1800

org.eclipse.jdt.ui.tests.quickfix.SaveParticipantTest

testFormatChangeBug488229_2 and testFormatChangesBug207965 failed on mac64-java17.

testFormatChanges02 failed on win32-java11.

testFormatChangeBug561164 failed on gtk3-java18.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GLcJR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/79,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5JkJuB,eclipse.jdt.ui,1234213761,79,NA,noopur2507,8749449,Noopur Gupta,,NA,2022-09-01T12:30:08Z,2022-09-01T12:30:08Z,"I20220831-1800

org.eclipse.jdt.ui.tests.quickfix.SaveParticipantTest

testFormatChangeBug488229_2 and testFormatChangesBug205177 failed on mac64-java17.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5JkJuB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/79,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5LRuJJ,eclipse.jdt.ui,1262936649,79,NA,noopur2507,8749449,Noopur Gupta,,NA,2022-09-29T23:34:25Z,2022-09-29T23:34:25Z,Failed again in I20220928-1800 on mac64-java17.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5LRuJJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/79,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5OHKS8,eclipse.jdt.ui,1310500028,79,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-11-10T15:51:53Z,2022-11-10T15:51:53Z,"org.eclipse.jdt.ui.tests.quickfix.SaveParticipantTest -  testFormatChangeBug488229_2
failed in the build [I20221109-1850](https://download.eclipse.org/eclipse/downloads/drops4/I20221109-1850/testresults/html/org.eclipse.jdt.ui.tests_ep426I-unit-mac64-java17_macosx.cocoa.x86_64_17.html)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5OHKS8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/79,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5g0yNg,eclipse.jdt.ui,1624449888,79,NA,noopur2507,8749449,Noopur Gupta,,NA,2023-07-06T23:58:13Z,2023-07-06T23:58:13Z,"I20230705-1800
win32-java17
org.eclipse.jdt.ui.tests.quickfix.SaveParticipantTest
testFormatChangeBug561164 failed. 

```
expected:<...; public class E1 { [ /** * Method foo with a really long description that will wrap lines on save * operation * * @param a * - integer input * * @return integer */ public int foo(int a) { return 0; ]} }> but was:<...; public class E1 { [ /** * Method foo with a really long description that will wrap lines on save * operation * * @param a - integer input * * @return integer */ public int foo(int a) { return 0; ]} }>

org.junit.ComparisonFailure: expected:<...;
public class E1 {
[ /**
* Method foo with a really long description that will wrap lines on save
* operation
*
* @param a
* - integer input
*
* @return integer
*/
public int foo(int a) {
return 0;
]}
}> but was:<...;
public class E1 {
[ /**
* Method foo with a really long description that will wrap lines on save
* operation
*
* @param a - integer input
*
* @return integer
*/
public int foo(int a) {
return 0;
]}
}>
at org.junit.Assert.assertEquals(Assert.java:117)
at org.junit.Assert.assertEquals(Assert.java:146)
at org.eclipse.jdt.ui.tests.quickfix.SaveParticipantTest.testFormatChangeBug561164(SaveParticipantTest.java:1060)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5g0yNg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/79,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5kTWx8,eclipse.jdt.ui,1682795644,79,NA,noopur2507,8749449,Noopur Gupta,,NA,2023-08-17T18:50:39Z,2023-08-17T18:50:39Z,"org.eclipse.jdt.ui.tests.quickfix.SaveParticipantTest - testFormatChangeBug488229_2

Failed in I20230815-1800
mac64-java17","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5kTWx8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/79,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5lZMUz,eclipse.jdt.ui,1701102899,79,NA,noopur2507,8749449,Noopur Gupta,,NA,2023-08-31T14:02:35Z,2023-08-31T14:02:35Z,"I20230830-2200

org.eclipse.jdt.ui.tests.quickfix.SaveParticipantTest

testFormatChangeBug488229_2 and testFormatChanges02 failed on mac64-java17.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5lZMUz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/79,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5rielW,eclipse.jdt.ui,1804200278,79,NA,noopur2507,8749449,Noopur Gupta,,NA,2023-11-09T16:54:42Z,2023-11-09T16:54:42Z,org.eclipse.jdt.ui.tests.quickfix.SaveParticipantTest.testFormatChangesBug207965 failed in I20231108-0600 on mac64-java17.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5rielW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/79,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5sPCgh,eclipse.jdt.ui,1815881761,79,NA,noopur2507,8749449,Noopur Gupta,,NA,2023-11-17T07:42:52Z,2023-11-17T07:42:52Z,"org.eclipse.jdt.ui.tests.quickfix.SaveParticipantTest.testFormatChangeBug561164 failed in I20231115-1800, macosx.cocoa.x86_64 java17.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5sPCgh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/79,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5-4vB8,eclipse.jdt.ui,2128801916,79,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-05-24T07:35:10Z,2024-05-24T07:35:10Z,"> org.eclipse.jdt.ui.tests.quickfix.SaveParticipantTest.testFormatChangesBug207965 failed in I20231108-0600 on mac64-java17.

Failed again in I20240522-1800.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5-4vB8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/79,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6JeKjo,eclipse.jdt.ui,2306386152,79,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-08-23T06:31:35Z,2024-08-23T06:31:35Z,"The test failed in I20240822-0100 again:

org.eclipse.jdt.ui.tests.quickfix.SaveParticipantTest 
testFormatChangeBug488229_3
win32-java17

```
expected:<...; public class E1 { [ /** * Method foo * * @param a * - integer input * * @return integer */ public int foo(int a) { return 0; ]} }> but was:<...; public class E1 { [ /** * Method foo * * @param a - integer input * * @return integer */ public int foo(int a) { return 0; ]} }>

org.junit.ComparisonFailure: expected:<...;
public class E1 {
[ /**
* Method foo
*
* @param a
* - integer input
*
* @return integer
*/
public int foo(int a) {
return 0;
]}
}> but was:<...;
public class E1 {
[ /**
* Method foo
*
* @param a - integer input
*
* @return integer
*/
public int foo(int a) {
return 0;
]}
}>
at org.junit.Assert.assertEquals(Assert.java:117)
at org.junit.Assert.assertEquals(Assert.java:146)
at org.eclipse.jdt.ui.tests.quickfix.SaveParticipantTest.testFormatChangeBug488229_3(SaveParticipantTest.java:1035)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
```


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6JeKjo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/79,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6W1dhF,eclipse.jdt.ui,2530596933,79,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-12-10T06:56:47Z,2024-12-10T06:56:47Z,"testFormatChangeBug561164 Failed again:
https://download.eclipse.org/eclipse/downloads/drops4/I20241209-1800/testresults/html/org.eclipse.jdt.ui.tests_ep435I-unit-macosx-x86_64-java17_macosx.cocoa.x86_64_17.html

```
org.junit.ComparisonFailure: expected:<...;
public class E1 {
[ /**
* Method foo with a really long description that will wrap lines on save
* operation
*
* @param a
* - integer input
*
* @return integer
*/
public int foo(int a) {
return 0;
]}
}> but was:<...;
public class E1 {
[ /**
* Method foo with a really long description that will wrap lines on save operation
* @param a - integer input
* @return integer
*/
public int foo( int a ) {
return 0;
]}
}>
at org.junit.Assert.assertEquals(Assert.java:117)
at org.junit.Assert.assertEquals(Assert.java:146)
at org.eclipse.jdt.ui.tests.quickfix.SaveParticipantTest.testFormatChangeBug561164(SaveParticipantTest.java:1105)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6W1dhF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/79,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6aLnc3,eclipse.jdt.ui,2586736439,79,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-13T10:32:40Z,2025-01-13T10:32:40Z,"again in 
https://download.eclipse.org/eclipse/downloads/drops4/I20250112-1800/testresults/html/org.eclipse.jdt.ui.tests_ep435I-unit-macosx-x86_64-java21_macosx.cocoa.x86_64_21.html","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6aLnc3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/79,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6a14VK,eclipse.jdt.ui,2597815626,79,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-17T09:36:10Z,2025-01-17T09:36:10Z,"again in 
https://download.eclipse.org/eclipse/downloads/drops4/I20250116-1800/testresults/html/org.eclipse.jdt.ui.tests_ep435I-unit-win32-x86_64-java21_win32.win32.x86_64_21.html","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6a14VK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/80,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/80,eclipse.jdt.ui,1258180379,80,Intermittent test failures in I-builds : testHierarchicalJUnit and markImplementOccurrences3,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,OPEN,2022-06-02T13:22:11Z,2024-01-25T11:38:53Z,"This is an issue tracking [Bug 562654](https://bugs.eclipse.org/bugs/show_bug.cgi?id=562654) - Intermittent test failures in I-builds : testHierarchicalJUnit, testFormatChanges02, markImplementOccurrences3

The below tests fail randomly in the nightly builds
- org.eclipse.jdt.ui.tests.refactoring.RenamePackageTests.testHierarchicalJUnit
- org.eclipse.jdt.text.tests.MarkOccurrenceTest.markImplementOccurrences3

Created the below issue for random failure of org.eclipse.jdt.ui.tests.quickfix.SaveParticipantTest.testFormatChanges02
-  https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/79","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/80/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/80,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EPTa8,eclipse.jdt.ui,1144862396,80,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-06-02T13:25:09Z,2022-06-02T13:25:09Z,"The test org.eclipse.jdt.ui.tests.refactoring.RenamePackageTests.testHierarchicalJUnit failed on [Windows ](https://download.eclipse.org/eclipse/downloads/drops4/I20220601-1800/testresults/html/org.eclipse.jdt.ui.tests.refactoring_ep424I-unit-win32-java11_win32.win32.x86_64_11.html) in the I-Build [I20220601-1800](https://download.eclipse.org/eclipse/downloads/drops4/I20220601-1800/testResults.php) with the below error

```
Problems encountered while moving resources.

Java Model Exception: Core Exception [code 4] Problems encountered while moving resources.
at org.eclipse.jdt.internal.core.MultiOperation.processElements(MultiOperation.java:180)
at org.eclipse.jdt.internal.core.CopyResourceElementsOperation.processElements(CopyResourceElementsOperation.java:436)
at org.eclipse.jdt.internal.core.MultiOperation.executeOperation(MultiOperation.java:95)
at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2380)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2405)
at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:811)
at org.eclipse.jdt.internal.core.JavaModel.rename(JavaModel.java:296)
at org.eclipse.jdt.internal.core.PackageFragment.rename(PackageFragment.java:533)
at org.eclipse.jdt.internal.corext.refactoring.changes.RenamePackageChange.renamePackage(RenamePackageChange.java:210)
at org.eclipse.jdt.internal.corext.refactoring.changes.RenamePackageChange.doRename(RenamePackageChange.java:137)
at org.eclipse.jdt.internal.corext.refactoring.AbstractJavaElementRenameChange.perform(AbstractJavaElementRenameChange.java:92)
at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.access$0(DynamicValidationStateChange.java:1)
at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.lambda$0(DynamicValidationStateChange.java:105)
at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:41)
at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2380)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2405)
at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5929)
at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.perform(DynamicValidationStateChange.java:106)
at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
at org.eclipse.ltk.core.refactoring.PerformChangeOperation.lambda$0(PerformChangeOperation.java:258)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2380)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2405)
at org.eclipse.ltk.core.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation.java:295)
at org.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:224)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2380)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2400)
at org.eclipse.jdt.ui.tests.refactoring.RenamePackageTests.testHierarchicalJUnit(RenamePackageTests.java:1014)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EPTa8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/81,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/81,eclipse.jdt.ui,1258233805,81,NPE in StringConcatToTextBlockFixCore,Bananeweizen,406876,Michael Keppler,,CLOSED,2022-06-02T14:03:55Z,2022-08-15T16:14:26Z,"2022-03
```
java.lang.NullPointerException
	at org.eclipse.jdt.internal.corext.fix.StringConcatToTextBlockFixCore$StringConcatFinder.visit(StringConcatToTextBlockFixCore.java:93)
	at org.eclipse.jdt.core.dom.Assignment.accept0(Assignment.java:299)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3129)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:3177)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3129)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3200)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:128)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3129)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:3177)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:677)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3129)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3200)
	at org.eclipse.jdt.core.dom.TypeDeclaration.accept0(TypeDeclaration.java:499)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3129)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3200)
	at org.eclipse.jdt.core.dom.CompilationUnit.accept0(CompilationUnit.java:258)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3129)
	at org.eclipse.jdt.internal.corext.fix.StringConcatToTextBlockFixCore.createCleanUp(StringConcatToTextBlockFixCore.java:234)
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/81/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/83,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/83,eclipse.jdt.ui,1259553791,83,Repository README needs updates,Bananeweizen,406876,Michael Keppler,,CLOSED,2022-06-03T07:30:39Z,2022-07-06T12:31:25Z,It still mentions bugzilla for bugs.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/83/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/85,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/85,eclipse.jdt.ui,1259848845,85,`JavadocHover` Uses Incorrect Line Separator,tsmaeder,13163770,Thomas Mäder,,CLOSED,2022-06-03T12:23:11Z,2022-07-26T20:24:02Z,"`JavadoceHover` incorrectly uses `\n` instead of the proper `System.lineSeparator()`

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/85/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/93,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/93,eclipse.jdt.ui,1264437477,93,Support @Suite from JUnit5,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,CLOSED,2022-06-08T09:11:27Z,2023-12-01T09:34:12Z,"If I try to use @Suite from latest JUnit Jupiter the context menu to run tests is not available.
See https://howtodoinjava.com/junit5/junit5-test-suites-examples/

To test:

- Open org.eclipse.e4.ui.tests.css.core.CssCoreTestSuite from platform.ui repo and replace @RunWith(JUnitPlatform.class)
 with @Suite
- Right-click on the class and see that run and JUnit test is not available

![image](https://user-images.githubusercontent.com/139910/172578975-149be1a4-3179-451a-92a1-5f4c27bc7951.png)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/93/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/93,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FAMYL,eclipse.jdt.ui,1157678603,93,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-06-16T13:43:29Z,2022-06-16T13:43:29Z,"@jjohnstn is this issue a continuation of 
- [Bug 576995](https://bugs.eclipse.org/bugs/show_bug.cgi?id=576995) - [junit 5] Add @Suite support from JUnit 5.8.1

Please add your comments here.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FAMYL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/93,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FBgwW,eclipse.jdt.ui,1158024214,93,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-06-16T18:54:41Z,2022-06-16T18:54:41Z,Will do.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FBgwW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/93,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FCl03,eclipse.jdt.ui,1158307127,93,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-06-17T00:06:20Z,2022-06-17T00:06:20Z,"Looking into this, it seems there is some requirement for the suite name to start with the prefix ""Test"".  If I rename the file to be TestCssCoreTestSuite, it works.  I need to look at where the filtering is taking place and why it isn't looking at the annotation.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FCl03/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/93,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FFiZr,eclipse.jdt.ui,1159079531,93,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-06-17T17:12:38Z,2022-06-17T17:12:38Z,"I have just installed the new EPP for Eclipse Committers 2022-06 and now it works fine in a child Eclipse without a need for a rename. 

I have the following additional change to MANIFEST.MF

- org.junit.platform.suite.api;bundle-version=""1.1.0""
+ org.junit.platform.suite.api;bundle-version=""1.1.0"",
+ org.junit.platform.suite.engine;bundle-version=""1.8.1"",
+ org.junit.jupiter.engine;bundle-version=""5.8.1""

There is cached information in the TestKindRegistry which would explain why a rename fixed the problem for me and it works today after restarting.  Could you add the changes above and restart with -clean and see if it works for you?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FFiZr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/93,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FJkHO,eclipse.jdt.ui,1160135118,93,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2022-06-20T08:27:59Z,2022-06-20T08:27:59Z,"Thanks @jjohnstn for looking into this. I'm still not able to run the test suite. I pushed the example to https://github.com/eclipse-platform/eclipse.platform.ui/pull/158 to make it easier to check what is wrong. My version range for the MANIFEST.MF is different, I picked whatever the Eclipse SDK provides as version.


```
 org.junit.jupiter.api;bundle-version=""5.8.1"",
 org.junit.platform.suite.api;bundle-version=""1.8.1"",
 org.junit.platform.suite.engine;bundle-version=""1.8.1"",
 org.junit.jupiter.engine;bundle-version=""5.8.1""
```

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FJkHO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/93,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tVqIh,eclipse.jdt.ui,1834394145,93,NA,fedejeanne,2205684,Federico Jeanne,,NA,2023-11-30T19:10:23Z,2023-11-30T19:10:23Z,"This issue seems to be fixed

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/2205684/ab76e3d3-af1d-498e-90b8-58a595096bfb)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tVqIh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/93,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ta5Ri,eclipse.jdt.ui,1835766882,93,NA,noopur2507,8749449,Noopur Gupta,,NA,2023-12-01T09:34:11Z,2023-12-01T09:34:11Z,"> This issue seems to be fixed

Thanks for the confirmation. 
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ta5Ri/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1145,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1145,eclipse.jdt.ui,2109287134,1145,IvyDE managed libraries not exported,haba713,599049,Harri,haba713@gmail.com,OPEN,2022-06-08T11:46:15Z,2024-01-31T05:01:03Z,"## Issue description

The classes of IvyDE managed libraries are not exported into a runnable JAR file when a project JRE System Library is JavaSE-17.

## Steps for reproducing the issue

1. Clone [the project](https://github.com/haba713/eclipse-ivyde-export-issue): `git clone git@github.com:haba713/eclipse-ivyde-export-issue.git`
2. Make sure that your Eclipse uses OpenJDK 17 and has IvyDE installed.
3. Import the cloned project into Eclipse workspace.
4. Right-click the class `src/com.example/Main.java` in the project tree and choose Run as → Java Application. See the output: `{""key"":""value""}`.
5. Right-click the project and choose Export → Java → Runnable JAR file.
6. Choose the launch configuration created on the step 4 above and choose also Library handling: ◉ Extract required libraries into generated JAR. Click Finish.
7. Try to run the generated JAR file:
    ```
    $ java -jar eclipse-ivyde-export-issue.jar
    Exception in thread ""main"" java.lang.NoClassDefFoundError: org/json/JSONObject
      at com.example.Main.main(Main.java:8)
    Caused by: java.lang.ClassNotFoundException: org.json.JSONObject
      at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
      at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
      at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
      ... 1 more
    ```

The class `org.json.JSONObject` and other JSON classes are not included in the JAR file even though the library is listed in the [Ivy dependencies](https://github.com/haba713/eclipse-ivyde-export-issue/blob/master/ivy.xml).

## Workaround: Use JRE System Library 1.8 instead 

Add OpenJDK 8 to Eclipse and change Java Build Path → Libraries → JRE System Library to JavaSE-1.8. After that
the IvyDE managed libraries are included in the runnable JAR file when it's generated again.

See [this commit](https://github.com/haba713/eclipse-ivyde-export-issue/commit/1789bb9e5a583bb1b0baa0481c8ea6e0481ef421).

## JDT or IvyDE issue?
The issue was also reported [here](https://issues.apache.org/jira/browse/IVYDE-394) because I'm not sure if this is a JDT or IvyDE issue.

## Environment

- Eclipse 2022-06 M2 (4.24.0 M2)
- IvyDE 2.2.0.final-201311091524-RELEASE
- OpenJDK 17.0.3+7-Debian-1deb11u1
- Debian GNU/Linux 11 (Bullseye)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1145/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1145,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5yWELR,eclipse.jdt.ui,1918386897,1145,NA,srikanth-sankaran,131454720,Srikanth Sankaran,,NA,2024-01-31T03:36:08Z,2024-01-31T03:36:08Z,"@iloveeclipse, @jarthana - I don't see the value in this ticket being queued up against JDT/Core. Who creates runnable Jars ? Would it be Platform/runtime ? Or PDE - sorry for my ignorance. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5yWELR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1145,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5yWELT,eclipse.jdt.ui,1918386899,1145,NA,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,NA,2024-01-31T04:58:43Z,2024-01-31T04:58:43Z,"> @iloveeclipse, @jarthana - I don't see the value in this ticket being queued up against JDT/Core. Who creates runnable Jars ? Would it be Platform/runtime ? Or PDE - sorry for my ignorance.

This feature is from JDT UI. Copying @noopur2507 to take this through.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5yWELT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1145,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5yWERU,eclipse.jdt.ui,1918387284,1145,NA,srikanth-sankaran,131454720,Srikanth Sankaran,,NA,2024-01-31T05:01:02Z,2024-01-31T05:01:02Z,"> > @iloveeclipse, @jarthana - I don't see the value in this ticket being queued up against JDT/Core. Who creates runnable Jars ? Would it be Platform/runtime ? Or PDE - sorry for my ignorance.
> 
> This feature is from JDT UI. Copying @noopur2507 to take this through.

Thanks, I have transferred it to UI.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5yWERU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/94,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/94,eclipse.jdt.ui,1265795684,94,Completion doesn't offer closest match,humphreygao,52394598,,,OPEN,2022-06-09T08:41:20Z,2022-06-11T05:08:32Z,"```java
      String s = """";
        new Runnable() {
            public void run() {
                s.toLowerCase(Locale.CANADA);
            }
        };
```
![image](https://user-images.githubusercontent.com/52394598/172804246-c8e13c19-e6a9-4c20-b29e-3ff182679058.png)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/94/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/94,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EtXiU,eclipse.jdt.ui,1152743572,94,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-06-10T21:15:19Z,2022-06-10T21:15:19Z,Just to clarify in the title that this is a case where completion didn't offer the closest match to be first in the list of suggested completions.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EtXiU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/94,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EtxeP,eclipse.jdt.ui,1152849807,94,NA,humphreygao,52394598,,,NA,2022-06-11T04:03:03Z,2022-06-11T04:03:03Z,"Press Ctrl to toggle completions inserts/overwrites while content assist is active:
![image](https://user-images.githubusercontent.com/52394598/173171756-a02364be-aa80-4ff3-94e9-8222b3f14017.png)
In anonymous class, completion overwrites seems to be broken.

The picture below is what I want:

![image](https://user-images.githubusercontent.com/52394598/173171535-4d19497b-be59-4d65-9739-0fdaf56c4792.png)


> Just to clarify in the title that this is a case where completion didn't offer the closest match to be first in the list of suggested completions.
Yes, what you said is one of the problems.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EtxeP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/94,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Etzgs,eclipse.jdt.ui,1152858156,94,NA,humphreygao,52394598,,,NA,2022-06-11T05:08:31Z,2022-06-11T05:08:31Z,"I find another problem: First character of method is converted to capital after invoking content assist.

https://user-images.githubusercontent.com/52394598/173173574-f690f3cb-50c6-4c0e-ab01-6731d4d7f4ea.mp4

Are the problems belong to platform text?

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Etzgs/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/97,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/97,eclipse.jdt.ui,1267208766,97,Open Resource - Show in -> Project Explorer missing in Java perspectives,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,CLOSED,2022-06-10T08:08:30Z,2022-07-06T12:30:45Z,"Could you also add the project explorer to the show-in list of the Java perspective and the Debug perspective?

![image](https://user-images.githubusercontent.com/139910/173020837-8f533b6c-0c59-4bf8-833b-a192cb69ea7a.png)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/97/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/97,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Eq4yT,eclipse.jdt.ui,1152093331,97,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2022-06-10T08:09:12Z,2022-06-10T08:09:12Z,cc @[jukzi](https://github.com/jukzi),"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Eq4yT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/97,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Et5Zl,eclipse.jdt.ui,1152882277,97,NA,Bananeweizen,406876,Michael Keppler,,NA,2022-06-11T08:32:25Z,2022-06-11T08:32:25Z,"It's available in all 3 Java perspectives, see https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/master/org.eclipse.jdt.ui/plugin.xml#L613. I've opened a PR on platform.debug for the Debug perspective.
You may need to ""Reset perspective"" if your runtime looks broken.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Et5Zl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/97,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EwHcQ,eclipse.jdt.ui,1153464080,97,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-06-13T04:42:36Z,2022-06-13T04:42:36Z,`Open Resource - Show in -> Project Explorer` is available in Java Perspective. @vogella I am not able to reproduce the issue.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EwHcQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/97,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EwrU6,eclipse.jdt.ui,1153611066,97,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2022-06-13T08:12:13Z,2022-06-13T08:12:13Z,"Solved via https://github.com/eclipse-platform/eclipse.platform.debug/pull/27 for the debug perspective. Thanks @Bananeweizen 

@ktatavarthi yes, sorry, it is already available for Java perspective, look like I was in debug perspective which @Bananeweizen now enhanced.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5EwrU6/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/98,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/98,eclipse.jdt.ui,1267493315,98,More icons in JUnit view menus,Bananeweizen,406876,Michael Keppler,,CLOSED,2022-06-10T12:42:48Z,2022-07-06T12:28:03Z,"![image](https://user-images.githubusercontent.com/406876/173065997-5984f7cf-0c6f-4e02-8145-367b75bdcc76.png)
![image](https://user-images.githubusercontent.com/406876/173066044-67f83e8c-3492-4f35-b49e-4f2b4680cd73.png)
All images available in existing Eclipse projects.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/98/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/100,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/100,eclipse.jdt.ui,1268130343,100,New while to enhanced for loop cleanup gets range error when whiles are nested and end with line comment,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2022-06-11T01:39:13Z,2022-06-11T02:51:16Z,"The following method:

    void m(List<String> strings,List<String> strings2) {
        Collections.reverse(strings);
        Iterator it = strings.iterator();
        while (it.hasNext()) {
        	String s = (String)it.next();
            Iterator it2 = strings2.iterator();
            while (it2.hasNext()) {
                String s2 = (String) it2.next();
                System.out.println(s2);
            }
            // this extraneous comment causes an exception to occur
        }
        System.out.println();
    }

Causes an exception to occur when the new while -> enhanced for loop conversion is applied.  It only fails if the extraneous comment noted is last line in outer while loop.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/100/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/102,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/102,eclipse.jdt.ui,1270569953,102,Allow to run Source actions on a set of projects from Project Explorer even if one of them is not a Java project,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,CLOSED,2022-06-14T10:08:30Z,2023-03-29T17:33:05Z,"Follow-up for https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/34

#34 allows to run source actions from the project explorer which is great. One missing feature is that this is also possible if the set of project contains one or more non Java projects but at least one Java project. This is currently suported by the Package explorer.

To test: 

Create three projects, two Java projects, one of type General.
Open Package Explorer, select all projects, right-click -> You see the Source options
Open Project Explorer, select all projects, right-click -> You  DO NOT see the Source options

@jjohnstn can you also have a look at this one?
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/102/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/102,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5G9ntE,eclipse.jdt.ui,1190558532,102,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-07-20T17:30:41Z,2022-07-20T17:30:41Z,"Hi @vogella I tracked down the problem to CommonActionProviderDescriptor in o.e.ui.navigator.  It checks all the objects in a multi-selection and fails when any of them is not enabled.  To fix this, I have proposed a fix that adds a new attribute for an actionProvider (multiprojectEnable).  When set to ""any"", if one or more of the selected projects is enabled, then the action is enabled.  I have created a PR: https://github.com/eclipse-platform/eclipse.platform.ui/pull/222 for this.  If you can, please take a look.  From there, it is a simple fix for JDT to add the multiprojectEnable attribute for the Java action provider that supports the Source options.  I have tested and this works.  If you don't have time to look at it then it will have to be proposed for M3 or next release.  If you have a better solution, by all means, I'm all ears.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5G9ntE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/104,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/104,eclipse.jdt.ui,1271983518,104,Code cleanup to switch expression does not work correctly,cyril-steimer,11210821,,,CLOSED,2022-06-15T09:59:53Z,2022-06-16T21:28:55Z,"The following switch statement was not cleaned up:
```java
switch (mode) {
    case FALLBACK_TO_DEFAULT:
        return DatapointOutOfRangeMode.FALLBACK_TO_DEFAULT;
    case TRUNCATE_TO_RANGE:
        return DatapointOutOfRangeMode.TRUNCATE_TO_RANGE;
    case ACCEPT_ANYWAY:
        return DatapointOutOfRangeMode.ACCEPT_ANYWAY;
    case NONE:
        return DatapointOutOfRangeMode.NONE;
    default:
        throw new IllegalArgumentException(""Unknown enum constant "" + mode);
}
```

Manually cleaned up to:
```java
return switch (mode) {
    case FALLBACK_TO_DEFAULT -> DatapointOutOfRangeMode.FALLBACK_TO_DEFAULT;
    case TRUNCATE_TO_RANGE -> DatapointOutOfRangeMode.TRUNCATE_TO_RANGE;
    case ACCEPT_ANYWAY -> DatapointOutOfRangeMode.ACCEPT_ANYWAY;
    case NONE -> DatapointOutOfRangeMode.NONE;
}
```

Note:
- The different values are enum constants.
- The switch to cleanup was contained inside of a lambda expression.
- We have around 13000 switch statements. It's unclear how many of them could be cleaned up, but it's certainly a significant amount.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/104/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/104,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5E6y_g,eclipse.jdt.ui,1156263904,104,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2022-06-15T10:00:39Z,2022-06-15T10:00:39Z,@jjohnstn can you have a look?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5E6y_g/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/104,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5E836H,eclipse.jdt.ui,1156808327,104,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-06-15T18:44:35Z,2022-06-15T18:44:35Z,This would be an enhancement to the current code.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5E836H/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/104,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5E9qM3,eclipse.jdt.ui,1157014327,104,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-06-15T22:31:05Z,2022-06-15T22:31:05Z,"I have posted a PR for this.  Please note that the code will not delete the unused default case as specified in the manual example.  This default might be used to make the code handle the case where new enum values get added in the future.  A separate cleanup to remove unneeded default cases could be added to handle this at the explicit direction of the user, but not as part of this cleanup.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5E9qM3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/104,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5E_qnm,eclipse.jdt.ui,1157540326,104,NA,cyril-steimer,11210821,,,NA,2022-06-16T11:16:47Z,2022-06-16T11:16:47Z,"Thanks, I tested the code from the PR and it worked perfectly. During these tests I found another unrelated issue: https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/107","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5E_qnm/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/105,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/105,eclipse.jdt.ui,1272134290,105,ClassCastException in PropertyAndPreferencePage,jukzi,51790620,Jörg Kubitz,,CLOSED,2022-06-15T12:05:44Z,2023-05-24T16:17:22Z,"i clicked on Java Compiler in the properties of a library:
![image](https://user-images.githubusercontent.com/51790620/173822899-5a42130f-49f1-4985-8b54-0ae3329c0594.png)

```
java.lang.ClassCastException: class org.eclipse.core.internal.resources.File cannot be cast to class org.eclipse.core.resources.IProject (org.eclipse.core.internal.resources.File and org.eclipse.core.resources.IProject are in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @6cd1a661)
	at org.eclipse.jdt.internal.ui.preferences.PropertyAndPreferencePage.setElement(PropertyAndPreferencePage.java:327)
	at org.eclipse.jdt.internal.ui.preferences.CompliancePreferencePage.setElement(CompliancePreferencePage.java:168)
	at org.eclipse.ui.internal.dialogs.RegistryPageContributor.createPage(RegistryPageContributor.java:145)
	at org.eclipse.ui.internal.dialogs.PropertyPageNode.createPage(PropertyPageNode.java:60)
	at org.eclipse.jface.preference.PreferenceDialog.createPage(PreferenceDialog.java:1280)
	at org.eclipse.ui.internal.dialogs.FilteredPreferenceDialog.createPage(FilteredPreferenceDialog.java:338)
	at org.eclipse.jface.preference.PreferenceDialog.showPage(PreferenceDialog.java:1166)
	at org.eclipse.ui.internal.dialogs.FilteredPreferenceDialog.showPage(FilteredPreferenceDialog.java:630)
	at org.eclipse.jface.preference.PreferenceDialog$5.lambda$0(PreferenceDialog.java:660)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jface.preference.PreferenceDialog$5.selectionChanged(PreferenceDialog.java:657)
	at org.eclipse.jface.viewers.StructuredViewer$3.run(StructuredViewer.java:821)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.StructuredViewer.firePostSelectionChanged(StructuredViewer.java:818)
	at org.eclipse.jface.viewers.StructuredViewer.handlePostSelect(StructuredViewer.java:1191)
	at org.eclipse.swt.events.SelectionListener$1.widgetSelected(SelectionListener.java:84)
	at org.eclipse.jface.util.OpenStrategy.firePostSelectionEvent(OpenStrategy.java:284)
	at org.eclipse.jface.util.OpenStrategy$1.lambda$1(OpenStrategy.java:438)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4043)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3648)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.ui.dialogs.PropertyDialogAction.run(PropertyDialogAction.java:155)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4251)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4068)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3645)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.ui.internal.views.log.EventDetailsDialog.open(EventDetailsDialog.java:192)
	at org.eclipse.ui.internal.views.log.EventDetailsDialogAction.run(EventDetailsDialogAction.java:102)
	at org.eclipse.ui.internal.views.log.LogView.lambda$2(LogView.java:599)
	at org.eclipse.jface.viewers.StructuredViewer$1.run(StructuredViewer.java:780)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.StructuredViewer.fireDoubleClick(StructuredViewer.java:777)
	at org.eclipse.jface.viewers.AbstractTreeViewer.handleDoubleSelect(AbstractTreeViewer.java:1542)
	at org.eclipse.jface.viewers.StructuredViewer$4.widgetDefaultSelected(StructuredViewer.java:1211)
	at org.eclipse.jface.util.OpenStrategy.fireDefaultSelectionEvent(OpenStrategy.java:272)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:329)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4251)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4068)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3645)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/105/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/105,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FokjF,eclipse.jdt.ui,1168263365,105,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-06-28T06:00:57Z,2022-06-28T06:00:57Z,"I have not been able to reproduce this issue. If possible, can you provide the jar file with which you are able to reproduce this issue?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FokjF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/105,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Fo8DU,eclipse.jdt.ui,1168359636,105,NA,jukzi,51790620,Jörg Kubitz,,NA,2022-06-28T07:46:14Z,2022-06-28T07:46:14Z,"here is an example project, where i can reproduce the issue:
[issues105.zip](https://github.com/eclipse-jdt/eclipse.jdt.ui/files/8998751/issues105.zip)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Fo8DU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/105,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GBPG7,eclipse.jdt.ui,1174729147,105,NA,sthdev,49412556,,,NA,2022-07-05T07:46:04Z,2022-07-05T07:46:04Z,"I get the same exception in the properties dialog of a source folder.

```
java.lang.ClassCastException: class org.eclipse.core.internal.resources.Folder cannot be cast to class org.eclipse.core.resources.IProject (org.eclipse.core.internal.resources.Folder and org.eclipse.core.resources.IProject are in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @1ab5487e)
	at org.eclipse.jdt.internal.ui.preferences.PropertyAndPreferencePage.setElement(PropertyAndPreferencePage.java:327)
	at org.eclipse.ui.internal.dialogs.RegistryPageContributor.createPage(RegistryPageContributor.java:145)
	at org.eclipse.ui.internal.dialogs.PropertyPageNode.createPage(PropertyPageNode.java:60)
```

In order to reproduce, create a plain Java project with the corresponding wizard, right-click the `src` folder and select _Properties_.

The error occurrs when selecting _Java Code Style_ or one of the _Java Compiler_ tree items (there are two for some reason).

![image](https://user-images.githubusercontent.com/49412556/177276573-3b86c324-f6f5-41a6-b332-dc8b8337b0e9.png)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GBPG7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/105,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5HKqgt,eclipse.jdt.ui,1193977901,105,NA,jukzi,51790620,Jörg Kubitz,,NA,2022-07-25T12:19:54Z,2022-07-25T12:19:54Z,was also reported in https://bugs.eclipse.org/bugs/show_bug.cgi?id=579428,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5HKqgt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/105,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5JM-Gp,eclipse.jdt.ui,1228136873,105,NA,jukzi,51790620,Jörg Kubitz,,NA,2022-08-26T07:11:09Z,2022-08-26T07:11:09Z,"was also reported in https://bugs.eclipse.org/bugs/show_bug.cgi?id=467761
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5JM-Gp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/105,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dErIZ,eclipse.jdt.ui,1561506329,105,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-05-24T16:17:17Z,2023-05-24T16:17:17Z,"This was fixed by https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/239
which somehow referenced a wrong issue.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dErIZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/107,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/107,eclipse.jdt.ui,1273419581,107,Code cleanup to switch expression doesn't handle comments correctly,cyril-steimer,11210821,,,CLOSED,2022-06-16T11:15:59Z,2022-07-06T12:26:28Z,"While testing the fix for https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/106, another issue appeared when applying the clean for converting switch statements to switch expressions in our code. The following code can be used to easily reproduce the issue:

```java
private static boolean isOne (int value) {
    switch (value) {
        case 1:
            // Some comment
            return true;
        default:
            return false;
    }
}
```

The comment is then wrongly merged with `true` after the cleanup:

```java
private static boolean isOne (int value) {
    return switch (value) {
        case 1 -> // Some comment true;
        default -> false;
    };
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/107/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/107,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FBhND,eclipse.jdt.ui,1158026051,107,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-06-16T18:57:13Z,2022-06-16T18:57:13Z,Thanks for catching this.  I'll fix it ASAP and add to the original PR.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FBhND/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/109,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/109,eclipse.jdt.ui,1276005315,109,"Problems with ""While loop to foreach loop conversion """,HannesWell,44067969,Hannes Wellmann,,CLOSED,2022-06-19T09:35:46Z,2022-07-06T12:25:23Z,"I just applied the enhanced [Convert while loops to enhanced for loops](https://www.eclipse.org/eclipse/news/4.25/jdt.php#while-to-enhanced-for) clean-up introduced in https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/55 to the equinox code base (The unchanged result is at https://github.com/eclipse-equinox/equinox/pull/45) and encountered the following problems. The option ""Only if loop variable used"" was enabled and all other clean-ups were disabled.

- [x] Loop variable of `Map.entrySet()` iterator is not typed correctly, the second argument is missing:
```
	public static void before() {
		Map<String, Object> map = Map.of(""Hello"", new Object());
		Iterator<Entry<String, Object>> iterator = map.entrySet().iterator();
		while (iterator.hasNext()) {
			Entry<String, Object> entry = iterator.next();
			System.out.println(entry);
		}
	}

	public static void after() {
		Map<String, Object> map = Map.of(""Hello"", new Object());
		for (Entry<String> entry : map.entrySet()) {
			System.out.println(entry);
		}
	}
```
- [x] The import of java.util.Iterator is not always removed if not used anymore. I noticed it is removed most often but in the equinox-code base for [ModuleDatabase.java](https://github.com/eclipse-equinox/equinox/pull/45/files#diff-9c1e3f220b7f4b01c47e22ccf78778c76428f9575afa32a303523de97442f542) the clean-up fails to remove it.
- [x] The conversion of a counting-loop over a list fails if the current entry is assigned to two different variables (although I suspect this is a bug in the corresponding code that the second variable is assigned from the same list). If two separate lists use the same counter-variable the clean-up correctly does nothing:
```
	private void before1() {
		List<String> list1 = List.of("""");
		for (int i = 0; i < list1.size(); i++) {
			String s1 = list1.get(i);
			String s2 = list1.get(i);
			System.out.println(s1 + "","" + s2);
		}
	}

	private void after1() {
		List<String> list1 = List.of("""");
		for (String s1 : list1) {
			System.out.println(s1 + "","" + s2);
		}
	}

	private void before2() {
		List<String> list1 = List.of("""");
		List<String> list2 = List.of("""");
		for (int i = 0; i < list1.size(); i++) {
			String s1 = list1.get(i);
			String s2 = list2.get(i);
			System.out.println(s1 + "","" + s2);
		}
	}

	private void after2() {
		List<String> list1 = List.of("""");
		List<String> list2 = List.of("""");
		for (int i = 0; i < list1.size(); i++) {
			String s1 = list1.get(i);
			String s2 = list2.get(i);
			System.out.println(s1 + "","" + s2);
		}
	}
```


@carstenartur and @jjohnstn maybe you can have a look at this. Thanks in advance.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/109/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/109,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FSFAS,eclipse.jdt.ui,1162366994,109,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-06-21T21:09:14Z,2022-06-21T21:09:14Z,"Regarding the Iterator not being removed, there is a default cleanup for unused imports that gets run after the For loop and While loop cleanups.  Did you turn this off for that project or use a cleanup template that has turned this off?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FSFAS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/109,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FSJkE,eclipse.jdt.ui,1162385668,109,NA,HannesWell,44067969,Hannes Wellmann,,NA,2022-06-21T21:27:29Z,2022-06-21T21:27:29Z,"> Regarding the Iterator not being removed, there is a default cleanup for unused imports that gets run after the For loop and While loop cleanups. Did you turn this off for that project or use a cleanup template that has turned this off?

I intentionally turned it off and only run the enhanced-loop-conversion clean-up.
The following screenshot was the setting, then I hit finish and pushed the result as it is to https://github.com/eclipse-equinox/equinox/pull/45

![grafik](https://user-images.githubusercontent.com/44067969/174899427-98fe145b-1529-4a22-9f1c-91d37c5c2996.png)

Interestingly if I add `Remove unused imports` and apply the (then) three clean-ups to the previous state, the result is the same and the import is still there. However if I run the clean-up with still the three ones active a second time the import is removed.
So I suspect that, if `Remove unused imports` is added explicitly it runs before the loop clean-up
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FSJkE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/109,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FSvrN,eclipse.jdt.ui,1162541773,109,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-06-22T02:07:18Z,2022-06-22T02:07:18Z,"I should have stated ""Organize Imports"" instead of Unused imports.  According to JDT UI plugin.xml, the ImportsCleanUp (Organize Imports) should run after the ConvertLoopCleanUp and UseIteratorToForLoopCleanUp.  However, so should have the Unused Imports clean up so I'll have to take a look.  Try the Organize Imports cleanUp which is a default.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FSvrN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/109,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FW8u2,eclipse.jdt.ui,1163643830,109,NA,HannesWell,44067969,Hannes Wellmann,,NA,2022-06-22T21:52:09Z,2022-06-22T21:52:09Z,"As elaborated in https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/114#issuecomment-1163640184 and https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/115#issuecomment-1163615699 many cases of the Entry-Set bug and the multiple-variable extraction issue are fixed but unfortunately there are still cases that do not work,","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FW8u2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/109,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FW-_R,eclipse.jdt.ui,1163653073,109,NA,HannesWell,44067969,Hannes Wellmann,,NA,2022-06-22T22:02:52Z,2022-06-22T22:02:52Z,"> I should have stated ""Organize Imports"" instead of Unused imports. According to JDT UI plugin.xml, the ImportsCleanUp (Organize Imports) should run after the ConvertLoopCleanUp and UseIteratorToForLoopCleanUp. However, so should have the Unused Imports clean up so I'll have to take a look. Try the Organize Imports cleanUp which is a default.

Using ""Organize Imports"" indeed removes that import on the first run.
But I noticed that in other files imports that are unused after the loop-conversion are removed even without ""Organize Imports"" or ""Remove unused imports"" being enabled. So I suspect that in general there is a detection if the import becomes unused by applying the conversion. Therefore my guess is that the detection if the import becomes unused does not work in that case. Maybe some counter or similar is not set correctly.

In case you want the exact class it is [org.eclipse.osgi.container.ModuleDatabase.java](https://github.com/eclipse-equinox/equinox/pull/45/files#diff-9c1e3f220b7f4b01c47e22ccf78778c76428f9575afa32a303523de97442f542) in https://github.com/eclipse-equinox/equinox/pull/45","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FW-_R/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/109,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FXjV7,eclipse.jdt.ui,1163801979,109,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-06-23T00:38:52Z,2022-06-23T00:38:52Z,Ok thx for reporting back.  I'll take a look.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FXjV7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/109,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FctHS,eclipse.jdt.ui,1165152722,109,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-06-24T03:20:48Z,2022-06-24T03:20:48Z,"Regarding the failure to remove the import of Iterator, please open a separate issue.  I reproduced with a simple test that has one for loop using iterator and one while loop using iterator in the same compilation unit.  Isolating either loop works by themselves.  My guess is that somehow the two cleanups aren't communicating properly so that when the ImportRemover is called on the second cleanup run, it still thinks the other loop still needs to use the iterator.  Most people won't run into this as they will have Organize Imports defaulted for them.

public class TestForLoop {

	public void before1() {
		Map<List<? extends Date>, Date[]> map3 = new HashMap<>();
		Iterator<Entry<List<? extends Date>, Date[]>> iterator3 = map3.entrySet().iterator();
		while (iterator3.hasNext()) {
			Entry<List<? extends Date>, Date[]> entry = iterator3.next();
			System.out.println(entry);
		}
		Map<Date[], Date[]> map = Map.of(new Date[0], new Date[1]);
		for (Iterator<Entry<Date[], Date[]>> iterator = map.entrySet().iterator(); iterator.hasNext();) {
			Entry<Date[], Date[]> entry = iterator.next();
			System.out.println(entry);
		}
	}
	
}","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FctHS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/109,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Fg0Oe,eclipse.jdt.ui,1166230430,109,NA,HannesWell,44067969,Hannes Wellmann,,NA,2022-06-25T08:45:47Z,2022-06-25T08:45:47Z,"> Regarding the failure to remove the import of Iterator, please open a separate issue. I reproduced with a simple test that has one for loop using iterator and one while loop using iterator in the same compilation unit. Isolating either loop works by themselves. My guess is that somehow the two cleanups aren't communicating properly so that when the ImportRemover is called on the second cleanup run, it still thinks the other loop still needs to use the iterator. Most people won't run into this as they will have Organize Imports defaulted for them.

That sounds like an explanation. But do you think this is still necessary, because with your latest fix in jdt.ui available in the I-build from tonight (i.e. I20220624-1800) the import is correctly removed. So maybe your latest enhancement also fixed that (unintentionally?).
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Fg0Oe/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/109,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Fg0Ru,eclipse.jdt.ui,1166230638,109,NA,HannesWell,44067969,Hannes Wellmann,,NA,2022-06-25T08:46:58Z,2022-06-25T08:46:58Z,"Closed this issue since all initially reported problems with the equinox code base are fixed.
Thanks again!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Fg0Ru/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/109,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Fg4GC,eclipse.jdt.ui,1166246274,109,NA,HannesWell,44067969,Hannes Wellmann,,NA,2022-06-25T10:02:22Z,2022-06-25T10:02:22Z,"> > Regarding the failure to remove the import of Iterator, please open a separate issue. I reproduced with a simple test that has one for loop using iterator and one while loop using iterator in the same compilation unit. Isolating either loop works by themselves. My guess is that somehow the two cleanups aren't communicating properly so that when the ImportRemover is called on the second cleanup run, it still thinks the other loop still needs to use the iterator. Most people won't run into this as they will have Organize Imports defaulted for them.
> 
> That sounds like an explanation. But do you think this is still necessary, because with your latest fix in jdt.ui available in the I-build from tonight (i.e. I20220624-1800) the import is correctly removed. So maybe your latest enhancement also fixed that (unintentionally?).

OK with other clean up configuration that issue showed again and I was also able to reproduce it with a simple test.
Created https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/121 to track that.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Fg4GC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/109,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FnZ55,eclipse.jdt.ui,1167957625,109,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-06-27T22:01:07Z,2022-06-27T22:01:07Z,Thanks Hannes.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FnZ55/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/112,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/112,eclipse.jdt.ui,1277252637,112,"On 22-06, getting ClassNotFoundException ",castortech,85858,,,OPEN,2022-06-20T18:13:31Z,2022-06-28T09:18:06Z,"I am now getting some weird exceptions from jdt.ui and jdt.debug.

1st is with save action:
`Caused by: java.lang.ClassNotFoundException: org.eclipse.jdt.internal.corext.fix.CodeFormatFix$AjcClosure3 cannot be found by org.eclipse.jdt.ui_3.26.100.v20220516-1138`

2nd is importing breakpoints:
`Caused by: java.lang.ClassNotFoundException: org.eclipse.jdt.internal.debug.core.breakpoints.ConditionalBreakpointHandler$AjcClosure1 cannot be found by org.eclipse.jdt.debug_3.19.200.v20220430-1851`

Both issues refer to AjcClosure, which I was able to find out is related to AspectJ. Really not sure why that would be happening. Used decompiler to look at CodeFormatFix and don't see any such classes there.

If that matters, I installed AspectJ a little while back but have yet to use it.

Thanks
Alain
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/112/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/112,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FL-mn,eclipse.jdt.ui,1160767911,112,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-06-20T19:15:43Z,2022-06-20T19:15:43Z,"I found an AspectJ bug: https://bugs.eclipse.org/bugs/show_bug.cgi?id=567081

which mentions AspectJ weaving where JDT bytecode gets modified.

See comment 17 where Andrey suggests uninstalling AspectJ weaving and it fixes the user's problem.

In any case, I suggest you open a bug against AspectJ for this.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FL-mn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/112,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FoV1v,eclipse.jdt.ui,1168203119,112,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-06-28T04:22:04Z,2022-06-28T04:22:04Z,"@castortech Can you please provide your feedback, if you have tried unistalling AspectJ weaving and trying to reproduce the problem?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FoV1v/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/112,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FpURm,eclipse.jdt.ui,1168458854,112,NA,castortech,85858,,,NA,2022-06-28T09:18:05Z,2022-06-28T09:18:05Z,"Actually did a full reboot of my PC and have not seen the issue since then. After installing 22-06 I got a few similar issues, that would go away after restarting Eclipse. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FpURm/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/113,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/113,eclipse.jdt.ui,1277938571,113,ArrayOutofBounds exception during refactor operation,sravanlakkimsetti,77106773,Sravan Kumar Lakkimsetti,,CLOSED,2022-06-21T06:08:03Z,2022-06-23T16:14:45Z,"
Installation details:
Eclipse SDK
Version: 2022-06 (4.25)
Build id: I20220619-1800
OS: Windows 10, v.10.0, x86_64 / win32
Java vendor: Eclipse Adoptium
Java runtime version: 17.0.3+7
Java version: 17.0.3

Got the following exception stack traceerror while doing refactor inline operation

```
null
org.eclipse.ltk.ui.refactoring
Error
Tue Jun 21 11:34:43 IST 2022
Internal Error

java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:395)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.ui.internal.progress.ProgressMonitorJobsDialog.run(ProgressMonitorJobsDialog.java:230)
	at org.eclipse.ui.internal.progress.ProgressManager.lambda$26(ProgressManager.java:827)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile(ProgressManager.java:860)
	at org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile(ProgressManager.java:836)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.checkInitialConditions(RefactoringWizardOpenOperation.java:222)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.lambda$0(RefactoringWizardOpenOperation.java:173)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:209)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:126)
	at org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:41)
	at org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter.startInlineTempRefactoring(RefactoringExecutionStarter.java:345)
	at org.eclipse.jdt.ui.actions.InlineTempAction.tryInlineTemp(InlineTempAction.java:121)
	at org.eclipse.jdt.ui.actions.InlineAction.run(InlineAction.java:120)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:278)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:252)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4251)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4068)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3645)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
Caused by: java.lang.IndexOutOfBoundsException: Index -1 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)
	at java.base/java.util.Objects.checkIndex(Objects.java:359)
	at java.base/java.util.ArrayList.remove(ArrayList.java:504)
	at org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring.createFullyQualifiedName(InlineTempRefactoring.java:689)
	at org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring.getAlternativeQualifications(InlineTempRefactoring.java:585)
	at org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring.checkClashes(InlineTempRefactoring.java:257)
	at org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring.checkInitialConditions(InlineTempRefactoring.java:243)
	at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:84)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2380)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2405)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:89)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)
Root exception:
java.lang.IndexOutOfBoundsException: Index -1 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)
	at java.base/java.util.Objects.checkIndex(Objects.java:359)
	at java.base/java.util.ArrayList.remove(ArrayList.java:504)
	at org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring.createFullyQualifiedName(InlineTempRefactoring.java:689)
	at org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring.getAlternativeQualifications(InlineTempRefactoring.java:585)
	at org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring.checkClashes(InlineTempRefactoring.java:257)
	at org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring.checkInitialConditions(InlineTempRefactoring.java:243)
	at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:84)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2380)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2405)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:89)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/113/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/113,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FOHWs,eclipse.jdt.ui,1161328044,113,NA,noopur2507,8749449,Noopur Gupta,,NA,2022-06-21T06:43:38Z,2022-06-21T06:43:38Z,Can you please add the sample code and steps to reproduce the issue?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FOHWs/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/113,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FOJPJ,eclipse.jdt.ui,1161335753,113,NA,sravanlakkimsetti,77106773,Sravan Kumar Lakkimsetti,,NA,2022-06-21T06:54:41Z,2022-06-21T06:54:41Z,"I don't have a sample code here. I found while using eclipse.

Here the snippet where I got this error
```
ReferenceBinding declaringClass = method.declaringClass;
if ((declaringClass != null)
	&&(declaringClass.id == getJavaLangInvokeMethodHandle().id||declaringClass.id == getJavaLangInvokeVarHandle().id)) {
	method.tagBits |= TagBits.AnnotationPolymorphicSignature;
}
```
Steps:
1. Select `declaringClass`  variable
2. Right click and select Inline. 
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FOJPJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/113,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FTSrP,eclipse.jdt.ui,1162685135,113,NA,noopur2507,8749449,Noopur Gupta,,NA,2022-06-22T06:10:22Z,2022-06-22T06:10:22Z,"I couldn't find the snippet in my setup to reproduce. But looking at the stack trace, a check can be added at the error location. This code was added via [Bug 367536](https://bugs.eclipse.org/bugs/show_bug.cgi?id=367536).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FTSrP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/119,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/119,eclipse.jdt.ui,1284514843,119,Add '(De)Select all' buttons to Clean-up Configuration dialog and ability to search for a specific clean-up,HannesWell,44067969,Hannes Wellmann,,CLOSED,2022-06-25T09:00:36Z,2022-08-02T07:56:31Z,"It would be handy if the Java  Code Style Clean-Up Preference dialog would have Buttons to `Deselect all` and `Select all` available clean ups. Especially the former avoids a lot of manual unchecking if one you want to have a clean configuration to then select only one or a few certain clean ups.

Furthermore it would super convenient if the Clean-Up preferences dialog would offer something like a search bar, where you can type in the name (label, id, etc.) and get the corresponding clean up elements displayed.
The Java -> Compiler Errors/Warnings dialog offers such search bar, but also has a different structure. Therefore I don't know how this should work for different tabs.

I assume that the dialog itself is the same for 
- `Preferences -> Java Code Style -> Clean Up -> Edit`
- `Preferences -> Java -> Editor -> Save Actions -> Configure (Additional actions)`
- `Right click on a project in the Explorer -> Source -> Clean up... -> Configure (Use custom profile)`","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/119/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/119,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GBsvn,eclipse.jdt.ui,1174850535,119,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2022-07-05T09:41:39Z,2022-07-05T09:41:39Z,IIRC @jjohnstn was planning to look at this in the past but this might have been lost over time.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GBsvn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/119,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GiqAc,eclipse.jdt.ui,1183490076,119,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-07-13T17:26:13Z,2022-07-13T17:26:13Z,"The search option would require a complete rewrite of the page logic so I would say no.  I have though implemented four new buttons on the individual pages: Select All, Deselect All, Defaults, and Reset.  The Defaults button sets the options to their default values and the Reset button resets the values to their initial settings in case you want to start again.  The buttons apply to the options for the page shown.  I did not want to extend it to all options/all pages as the user can't even see what options are being changed and then there isn't any granularity.  For example, I could easily see a user setting all Performance options and/or Java Feature options but not wanting to set Source Changing options which have warnings about their usage.  Try it out and see if you like it. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GiqAc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/119,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GsC2W,eclipse.jdt.ui,1185951126,119,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-07-15T21:17:43Z,2022-07-15T21:17:43Z,Hi @vogella Do you want to try the PR mentioned above as I believe you originally requested this via bugzilla?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GsC2W/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/119,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GsOzw,eclipse.jdt.ui,1186000112,119,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2022-07-15T22:35:45Z,2022-07-15T22:35:45Z,"> Hi @vogella Do you want to try the PR mentioned above as I believe you originally requested this via bugzilla?

Currently on vacation, so please merge. I can give feedback in 2 weeks","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GsOzw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/119,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GsRto,eclipse.jdt.ui,1186012008,119,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-07-15T23:04:57Z,2022-07-15T23:04:57Z,"Ok, I will wait until Monday and give Hannes a chance to comment.  I want to get it into M2 so there is time to respond to comments in M3.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GsRto/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/119,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5HDDIC,eclipse.jdt.ui,1191981570,119,NA,noopur2507,8749449,Noopur Gupta,,NA,2022-07-21T22:05:58Z,2022-07-21T22:05:58Z,"The problems discussed in the reported issue are very similar to the ones that were present for Java > Formatter profile. For these reasons, the formatter page was rewritten to add search and modify all options. See [bug 462940](https://bugs.eclipse.org/bugs/show_bug.cgi?id=462940).

Adding so many buttons will surely clutter the UI. Also, the meaning and difference between ""Defaults"" and ""Reset"" is not clear with the button names. 

Do you think we need ""Defaults"" and ""Reset"" for each tab? Instead, we can add ""Restore Defaults"" and ""Reset Profile"" as common profile-level buttons before the ""Apply"" button. That looks more consistent with the rest of the Eclipse UI.

For the tab-level buttons, we can just keep the Select and Deselect All buttons.

Another option is to just add the two profile-level buttons. And move all four tab-level buttons to context menu options on each tab.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5HDDIC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/119,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5HDE2j,eclipse.jdt.ui,1191988643,119,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-07-21T22:17:51Z,2022-07-21T22:17:51Z,"Ok, will remove the Defaults and Reset buttons from the tab options and put them in the main dialog as common buttons.  As well, I will rename as specified.  I think context menu options will not be discovered by the end-user since there aren't any other options there previously.  I will update the patch.  Hannes was requesting the Deselect All for common profile to clear all to start.  If you agree, I can add it easily enough as I already did a patch with it before I saw your comment.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5HDE2j/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/119,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5HESMH,eclipse.jdt.ui,1192305415,119,NA,noopur2507,8749449,Noopur Gupta,,NA,2022-07-22T08:12:03Z,2022-07-22T08:12:03Z,"> Hannes was requesting the Deselect All for common profile to clear all to start. 

Not sure if that's a common scenario. A user might deselect all in the profile to start configuring it so he/she might go through each tab to check if anything needs to be enabled there. So, the options in each tab can be quickly deselected with the tab-level button if nothing is required from that page. It is not as straightforward as deselecting all in the profile but we can probably avoid another button until we know it's a common scenario requested by a lot of users.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5HESMH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/119,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Hp018,eclipse.jdt.ui,1202146684,119,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2022-08-02T07:56:31Z,2022-08-02T07:56:31Z,"Thanks @jjohnstn, very useful!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Hp018/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/120,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/120,eclipse.jdt.ui,1284520312,120,"Internal Error for ""Convert to enhanced 'for' loops"" clean-up without ""Only if loop variable used""",HannesWell,44067969,Hannes Wellmann,,CLOSED,2022-06-25T09:09:49Z,2022-06-27T18:11:27Z,"I tried to apply the ""Convert to enhanced 'for' loops"" clean-up without ""Only if loop variable used"" being selected to the equinox code base and it failed with the error below. If the second option is selected everything works fine.

Furthermore I noticed that the list of selected actions in the Use custom profile section (reached via Right click on project -> Source -> Clean up...) lists the action twice:
```
- Convert to enhanced 'for' loops
- Convert to enhanced 'for' loops
```
If I additionally select ""Only if loop variable used"" the list looks like this (which actually also seems duplicated):
```
Convert to enhanced 'for' loops only if the loop variable is used
Convert to enhanced 'for' loops
```
Product:
```
Eclipse SDK

Version: 2022-06 (4.25)
Build id: I20220624-1800
```
Exception Stack Trace of ""Internal Error"":
```
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:395)
	at org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:1033)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizard.createChange(RefactoringWizard.java:662)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizard.computeUserInputSuccessorPage(RefactoringWizard.java:504)
	at org.eclipse.ltk.ui.refactoring.UserInputWizardPage.computeSuccessorPage(UserInputWizardPage.java:77)
	at org.eclipse.ltk.ui.refactoring.UserInputWizardPage.getNextPage(UserInputWizardPage.java:113)
	at org.eclipse.jdt.internal.ui.fix.CleanUpRefactoringWizard$CleanUpConfigurationPage.getNextPage(CleanUpRefactoringWizard.java:437)
	at org.eclipse.jface.wizard.WizardDialog.nextPressed(WizardDialog.java:910)
	at org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:468)
	at org.eclipse.jface.dialogs.Dialog.lambda$0(Dialog.java:619)
	at org.eclipse.swt.events.SelectionListener$1.widgetSelected(SelectionListener.java:84)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4251)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4068)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3645)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.lambda$0(RefactoringWizardOpenOperation.java:190)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:209)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:126)
	at org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:41)
	at org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter.startCleanupRefactoring(RefactoringExecutionStarter.java:257)
	at org.eclipse.jdt.internal.ui.actions.AllCleanUpsAction.performRefactoring(AllCleanUpsAction.java:71)
	at org.eclipse.jdt.internal.ui.actions.CleanUpAction.runOnMultiple(CleanUpAction.java:215)
	at org.eclipse.jdt.internal.ui.actions.CleanUpAction.run(CleanUpAction.java:119)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:274)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:252)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4251)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4068)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3645)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
Caused by: java.lang.IllegalArgumentException: Invalid identifier : >List<V><
	at org.eclipse.jdt.core.dom.SimpleName.setIdentifier(SimpleName.java:247)
	at org.eclipse.jdt.core.dom.AST.newSimpleName(AST.java:2777)
	at org.eclipse.jdt.core.dom.AST.newName(AST.java:2427)
	at org.eclipse.jdt.internal.corext.fix.helper.AbstractTool.addImport(AbstractTool.java:66)
	at org.eclipse.jdt.internal.corext.fix.helper.WhileToForEach.rewrite(WhileToForEach.java:424)
	at org.eclipse.jdt.internal.corext.fix.helper.WhileToForEach.rewrite(WhileToForEach.java:1)
	at org.eclipse.jdt.internal.corext.fix.UseIteratorToForLoopFixCore$1.rewriteAST(UseIteratorToForLoopFixCore.java:77)
	at org.eclipse.jdt.internal.corext.fix.CompilationUnitRewriteOperationsFixCore.createChange(CompilationUnitRewriteOperationsFixCore.java:98)
	at org.eclipse.jdt.internal.ui.fix.CleanUpFixWrapper.createChange(CleanUpFixWrapper.java:46)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.calculateChange(CleanUpRefactoring.java:775)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor.calculateSolutions(CleanUpRefactoring.java:301)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor.acceptAST(CleanUpRefactoring.java:279)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1008)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:692)
	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:954)
	at org.eclipse.jdt.internal.corext.dom.ASTBatchParser.createASTs(ASTBatchParser.java:82)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpFixpointIterator.next(CleanUpRefactoring.java:399)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.cleanUpProject(CleanUpRefactoring.java:682)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.checkFinalConditions(CleanUpRefactoring.java:642)
	at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:86)
	at org.eclipse.ltk.core.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:122)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2380)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2405)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:89)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)
Root exception:
java.lang.IllegalArgumentException: Invalid identifier : >List<V><
	at org.eclipse.jdt.core.dom.SimpleName.setIdentifier(SimpleName.java:247)
	at org.eclipse.jdt.core.dom.AST.newSimpleName(AST.java:2777)
	at org.eclipse.jdt.core.dom.AST.newName(AST.java:2427)
	at org.eclipse.jdt.internal.corext.fix.helper.AbstractTool.addImport(AbstractTool.java:66)
	at org.eclipse.jdt.internal.corext.fix.helper.WhileToForEach.rewrite(WhileToForEach.java:424)
	at org.eclipse.jdt.internal.corext.fix.helper.WhileToForEach.rewrite(WhileToForEach.java:1)
	at org.eclipse.jdt.internal.corext.fix.UseIteratorToForLoopFixCore$1.rewriteAST(UseIteratorToForLoopFixCore.java:77)
	at org.eclipse.jdt.internal.corext.fix.CompilationUnitRewriteOperationsFixCore.createChange(CompilationUnitRewriteOperationsFixCore.java:98)
	at org.eclipse.jdt.internal.ui.fix.CleanUpFixWrapper.createChange(CleanUpFixWrapper.java:46)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.calculateChange(CleanUpRefactoring.java:775)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor.calculateSolutions(CleanUpRefactoring.java:301)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor.acceptAST(CleanUpRefactoring.java:279)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1008)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:692)
	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:954)
	at org.eclipse.jdt.internal.corext.dom.ASTBatchParser.createASTs(ASTBatchParser.java:82)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpFixpointIterator.next(CleanUpRefactoring.java:399)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.cleanUpProject(CleanUpRefactoring.java:682)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.checkFinalConditions(CleanUpRefactoring.java:642)
	at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:86)
	at org.eclipse.ltk.core.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:122)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2380)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2405)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:89)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/120/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/120,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Fg2fy,eclipse.jdt.ui,1166239730,120,NA,HannesWell,44067969,Hannes Wellmann,,NA,2022-06-25T09:27:01Z,2022-06-25T09:27:01Z,"OK, I was able to boil it down to the following method:
```
private static <K, V> List<V> method(Map<K, List<V>> map) {
	List<V> results = new ArrayList<>();
	Iterator<List<V>> iterator = map.values().iterator();
	while (iterator.hasNext()) {
		results.addAll(iterator.next());
	}
	return results;
}
```
When running only `Convert to enhanced 'for' loops` without the option `only if the loop variable is used` then the clean up fails with the error above (even in the preview).

Furthermore if I select that option and run `Convert to enhanced 'for' loops only if the loop variable is used` that method is not changed, but I would expect that it is converted to something like:
```
private static <K, V> List<V> expected(Map<K, List<V>> map) {
	List<V> results = new ArrayList<>();
	for (List<V> value : map.values()) {
		results.addAll(value);
	}
	return results;
}
```
@jjohnstn, @carstenartur do you want to take a look at this?



","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Fg2fy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/120,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FhEiq,eclipse.jdt.ui,1166297258,120,NA,carstenartur,3164220,Carsten Hammer,,NA,2022-06-25T14:18:23Z,2022-06-25T14:18:23Z,"Thanks again for your patience and continued testing!

Just a short remark: That there are two identical entries in the list is because there are two different cleanups bound to the identical constant

```
import static org.eclipse.jdt.internal.corext.fix.CleanUpConstants.CONTROL_STATEMENTS_CONVERT_FOR_LOOP_ONLY_IF_LOOP_VAR_USED;
import static org.eclipse.jdt.internal.corext.fix.CleanUpConstants.CONTROL_STATEMENTS_CONVERT_FOR_LOOP_TO_ENHANCED;

```
![image](https://user-images.githubusercontent.com/3164220/175777094-2cc857ee-9946-4830-97dc-e1d5a0ae2972.png)

For that the two different text messages do not need to be equal and the have not been in earlier versions. But now both make use of the same text

![image](https://user-images.githubusercontent.com/3164220/175777201-2830b2b5-5066-4638-9e0d-b8f738fca795.png)


https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/55/files#diff-fe82b809bb16e49eedbb27bc774782b47cd4c9c44e9bce17087829f21d36fdf6

If it is up to me we can discuss if there is a better way but lets hear what @jjohnstn thinks about it.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FhEiq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/120,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FlBpD,eclipse.jdt.ui,1167333955,120,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-06-27T13:10:13Z,2022-06-27T13:10:13Z,"> Furthermore if I select that option and run `Convert to enhanced 'for' loops only if the loop variable is used` that method is not changed

Regarding the above statement, As shown in the `cleanup preview of Convert to enhanced 'for' loops only if the loop variable is used`, we see that there is no loop variable.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FlBpD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/120,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FmbwS,eclipse.jdt.ui,1167703058,120,NA,HannesWell,44067969,Hannes Wellmann,,NA,2022-06-27T18:11:27Z,2022-06-27T18:11:27Z,"> Just a short remark: That there are two identical entries in the list is because there are two different cleanups bound to the identical constant
> 
So the two cleanup actions use the same constant and are (de-)activated by the same checkbox in the UI, aren't they?
Then I would consider it an implementation detail that there are actually two actions and present just one item in the UI.


First of all @ktatavarthi, thank you for your fix. I just opened a PR to add the presented reproducer as a JUnit test case. This test case also shows that there is a false import added with that fix. I was also able to reproduce that in an Editor of an Eclipse-app launched from my JDT workspace.

> > Furthermore if I select that option and run `Convert to enhanced 'for' loops only if the loop variable is used` that method is not changed
> 
> Regarding the above statement, As shown in the `cleanup preview of Convert to enhanced 'for' loops only if the loop variable is used`, we see that there is no loop variable.

Yes after thinking about that I also came to the conclusion that I understood it wrong.
I falsely assumed that this was referring to loops that use a counter variable like in the following snippet or similar for an array:
```
	List<String> list = List.of("""");
	for (int i = 0; i < list .size(); i++) {
		System.out.println(""Hello World"");
	}
```
In these cases it would IMHO make sense to not use an enhanced for loop to avoid the iterator creation and I assumed that this was the motivation for the option `only if the loop variable is used`. In cases where the result of Iterator.next() is passed directly to a method I think it still makes sense to convert to an enhanced for-loop since the iterator is used anyway.
If the motivation is really to avoid iterator creation it might be reasonable to refine the criteria for this sub-option to only skip the conversion to an enhanced loop if the loop variable **after** applying the clean up would not be used.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FmbwS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/121,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/121,eclipse.jdt.ui,1284533716,121,"Clean up ""Convert to enhanced 'for' loops"" does not detect unused imports for combined enhanced for- and while-loops",HannesWell,44067969,Hannes Wellmann,,OPEN,2022-06-25T10:00:38Z,2022-07-20T19:27:44Z,"Given one applies the clean-up `Convert to enhanced 'for' loops`, without the option `only if the loop variable is used`, to the following code, then the afterwards unused import for `java.util.Iterator` is not removed.
```
package test;

import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class Test {
	private void method(List<String> list, Map<Date, List<String>> map) {
		Iterator<String> removed = list.iterator();
		while (removed.hasNext()) {
			System.out.println(removed.next());
		}
		for (Iterator<List<String>> value = map.values().iterator(); value.hasNext();) {
			System.out.println(value.next());
		}
	}
}
```
Is cleaned up to:
```
package test;

import java.util.Date;
import java.util.Iterator; // <-- Is now unused
import java.util.List;
import java.util.Map;

public class Test {
	private void method(List<String> list, Map<Date, List<String>> map) {
		for (String element : list) {
			System.out.println(element);
		}
		for (List<String> list2 : map.values()) {
			System.out.println(list2);
		}
	}
}
```
If the initial code only contains either of the for or while loop the afterwards unused import is removed correctly.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/121/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/121,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5G-Csp,eclipse.jdt.ui,1190669097,121,NA,HannesWell,44067969,Hannes Wellmann,,NA,2022-07-20T19:27:44Z,2022-07-20T19:27:44Z,"@jjohnstn, the problem seem to be that the `WhileToForEach` and to-enhanced-for-loop clean up use a different  `CompilationUnitRewrite` instance and therefore a different `ImportRemover`. And in `CleanUpRefactoring.calculateChange()` the changes seem not to 'overlap', but I'm not sure if this is relevant.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5G-Csp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/125,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/125,eclipse.jdt.ui,1286183561,125,"Clean up ""Use Multi-catch"" does not removed then unused imports",HannesWell,44067969,Hannes Wellmann,,OPEN,2022-06-27T18:23:17Z,2022-06-28T04:18:30Z,"If one applies the clean-up ""Use Multi-catch"" to the following code snippets, the afterwards unused import for `IOException` is not removed:
```
package test;
import java.io.IOException;

public class Test {
	public void m() {
		try {
			m1();
		} catch (IOException e) {
			e.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	private void m1() throws Exception {
	}
}
```
Expected is the following code, but at the moment the import is not removed.
```
package test;
public class Test {
	public void m() {
		try {
			m1();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	private void m1() throws Exception {
	}
}
```
The example makes a bit more sense when the called method is defined in another Class and lists both `IOException` and `Exception` in its throws list.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/125/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/127,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/127,eclipse.jdt.ui,1288282630,127,[critical] UI issues in latest i-builds start from 06-27,gayanper,7471994,Gayan Perera,,CLOSED,2022-06-29T07:22:02Z,2022-06-30T07:22:56Z,"The first problem is it doesn't show items in the Open Type table
![image](https://user-images.githubusercontent.com/7471994/176373182-4e8ddbb5-2a43-48b4-98f0-e5e9977e7a41.png)

This works fine with i-build from 06-26


The second problem is characters type after content assist is not filtering the items.

![image](https://user-images.githubusercontent.com/7471994/176376450-9332cf20-5c3d-4006-aad1-6a25903421bf.png)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/127/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/127,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Ft4-4,eclipse.jdt.ui,1169657784,127,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-06-29T07:59:04Z,2022-06-29T07:59:04Z,"See https://github.com/eclipse-platform/eclipse.platform.swt/issues/223.

Please verify if the https://github.com/eclipse-platform/eclipse.platform.swt/pull/231 fixes the problem, I haven't had time to do this yet.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Ft4-4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/127,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FuUga,eclipse.jdt.ui,1169770522,127,NA,niraj-modi,92304759,Niraj Modi,,NA,2022-06-29T09:47:07Z,2022-06-29T09:47:07Z,"> See [eclipse-platform/eclipse.platform.swt#223](https://github.com/eclipse-platform/eclipse.platform.swt/issues/223).
> 
> Please verify if the [eclipse-platform/eclipse.platform.swt#231](https://github.com/eclipse-platform/eclipse.platform.swt/pull/231) fixes the problem, I haven't had time to do this yet.

Above PR fixes the root cause, just triggered below Eclipse IBuild:
- [I20220629-0540](https://download.eclipse.org/eclipse/downloads/drops4/I20220629-0540/)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FuUga/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/127,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FwLR_,eclipse.jdt.ui,1170257023,127,NA,niraj-modi,92304759,Niraj Modi,,NA,2022-06-29T17:15:10Z,2022-06-29T17:15:10Z,"Verified with [I20220629-0540](https://download.eclipse.org/eclipse/downloads/drops4/I20220629-0540/) all broken views are back to normal:
![image](https://user-images.githubusercontent.com/92304759/176496116-55ea49bd-a29b-4518-ba8d-72ce2241d199.png)

Except for one minor scenario where-in empty table is not visible(unless we type something):
![image](https://user-images.githubusercontent.com/92304759/176496387-d20f5d00-835f-4d0b-88dd-784afa33102e.png)

Will fix this part as well shortly.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FwLR_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/127,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FycWL,eclipse.jdt.ui,1170851211,127,NA,niraj-modi,92304759,Niraj Modi,,NA,2022-06-30T07:10:31Z,2022-06-30T07:10:31Z,"With fix https://github.com/eclipse-platform/eclipse.platform.swt/issues/223 verified in Build id: I20220629-1800.
We can close this issue now.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FycWL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/127,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Fye2D,eclipse.jdt.ui,1170861443,127,NA,gayanper,7471994,Gayan Perera,,NA,2022-06-30T07:22:56Z,2022-06-30T07:22:56Z,"Yes now its fixed, Thanks Niraj","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Fye2D/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/130,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/130,eclipse.jdt.ui,1289607886,130,Refreshing tree takes very long when projects are opened,dmigowski,3821763,Daniel Migowski,,CLOSED,2022-06-30T05:32:20Z,2024-02-14T15:31:21Z,"I have about 100 projects open in Eclipse, some trees of them are opened. When I refresh all projects it takes ages when I don't close the trees before hitting Ctrl-A and refresh. 

Could you please, when a whole project is selected anyway, don't call the refresh action on every item in the project by itself? I am still waiting for Eclipse to respond while writing this report. 

Thanks. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/130/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/130,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FzV8g,eclipse.jdt.ui,1171087136,130,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-06-30T11:11:34Z,2022-06-30T11:11:34Z,"@dmigowski : could you please provide a jstack dump while you do the refresh?

Just in case: you do not need to select everything to refresh everything. 
Hitting F5 **without** selecting any project would refresh all projects too.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FzV8g/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/130,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5z4Cb5,eclipse.jdt.ui,1944069881,130,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-14T15:31:21Z,2024-02-14T15:31:21Z,"A PR to improve it would be welcome. However I had never a problem with this. We use to press the refresh button in the git view, which works fine. 
Closing as not planned.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5z4Cb5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/131,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/131,eclipse.jdt.ui,1289615364,131,Default Execution Environment for Y build is 9,vik-chand,99390647,Vikas Chandra,,CLOSED,2022-06-30T05:43:37Z,2022-06-30T08:15:42Z,Launch Y build using Java 19. Create a java project. The Execution Environment selected is 9. It should be 19.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/131/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/131,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FyeO_,eclipse.jdt.ui,1170858943,131,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-06-30T07:19:48Z,2022-06-30T07:19:48Z,@vik-chand The plugin build fails after this change. Can you please have a look.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5FyeO_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/131,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Fyq3e,eclipse.jdt.ui,1170910686,131,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-06-30T08:15:42Z,2022-06-30T08:15:42Z,"> @vik-chand The plugin build fails after this change. Can you please have a look.

Closing this issue as the build failure is not related to this change.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Fyq3e/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/135,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/135,eclipse.jdt.ui,1291765087,135,"AssertionFailedException during refactoring operation ""Extract interface""",jubax,10562923,Juergen Baier,baier@semedy.com,OPEN,2022-07-01T19:33:32Z,2022-07-01T19:34:27Z,"- I have a class FooImpl with several methods and I choose ""Extract interface"".
- Choose ""Select all"" to extract all methods
- Click on ""Preview"" or ""OK""

=> ""An unexpected exception occurred while creating a change object. See error log for details.""

Sadly I was not yet able to create a reproducible case. But maybe the stack trace below is already useful?

**Session Data**
```
eclipse.buildId=4.24.0.I20220607-0700
java.version=17.0.3
java.vendor=Eclipse Adoptium
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_DE
Framework arguments:  -product org.eclipse.epp.package.jee.product -product org.eclipse.epp.package.jee.product -product org.eclipse.epp.package.jee.product -keyring /Users/<account>/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.jee.product -product org.eclipse.epp.package.jee.product -data /Users/<account>/<myworkspace> -product org.eclipse.epp.package.jee.product -keyring /Users/<account>/.eclipse_keyring
```
**Stack trace**
```
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:395)
	at org.eclipse.ltk.internal.ui.refactoring.RefactoringWizardDialog2.run(RefactoringWizardDialog2.java:324)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizard.createChange(RefactoringWizard.java:662)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizard.computeUserInputSuccessorPage(RefactoringWizard.java:504)
	at org.eclipse.ltk.ui.refactoring.UserInputWizardPage.computeSuccessorPage(UserInputWizardPage.java:77)
	at org.eclipse.ltk.ui.refactoring.UserInputWizardPage.getNextPage(UserInputWizardPage.java:113)
	at org.eclipse.jdt.internal.ui.refactoring.ExtractInterfaceWizard$ExtractInterfaceInputPage.getNextPage(ExtractInterfaceWizard.java:343)
	at org.eclipse.ltk.internal.ui.refactoring.RefactoringWizardDialog2.nextOrPreviewPressed(RefactoringWizardDialog2.java:493)
	at org.eclipse.ltk.internal.ui.refactoring.RefactoringWizardDialog2$1.widgetSelected(RefactoringWizardDialog2.java:693)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4604)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1524)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1547)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1532)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1325)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4390)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3966)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.lambda$0(RefactoringWizardOpenOperation.java:190)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:209)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:126)
	at org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:41)
	at org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter.startExtractInterfaceRefactoring(RefactoringExecutionStarter.java:296)
	at org.eclipse.jdt.ui.actions.ExtractInterfaceAction.run(ExtractInterfaceAction.java:150)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:278)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:252)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4604)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1524)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1547)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1532)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1325)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4390)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3966)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
Caused by: org.eclipse.core.runtime.AssertionFailedException: null argument:
	at org.eclipse.core.runtime.Assert.isNotNull(Assert.java:88)
	at org.eclipse.core.runtime.Assert.isNotNull(Assert.java:76)
	at org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.HierarchyType.initialize(HierarchyType.java:35)
	at org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TypeEnvironment.createStandardType(TypeEnvironment.java:377)
	at org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TypeEnvironment.create(TypeEnvironment.java:219)
	at org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel.createTType(SuperTypeConstraintsModel.java:472)
	at org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel.createIndependentTypeVariable(SuperTypeConstraintsModel.java:392)
	at org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsCreator.endVisit(SuperTypeConstraintsCreator.java:291)
	at org.eclipse.jdt.core.dom.ConditionalExpression.accept0(ConditionalExpression.java:185)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3180)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3251)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:228)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3180)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3251)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:228)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3180)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:3228)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3180)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3251)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:128)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3180)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:3228)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:274)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3180)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3251)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:128)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3180)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:3228)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:677)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3180)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3251)
	at org.eclipse.jdt.core.dom.TypeDeclaration.accept0(TypeDeclaration.java:499)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3180)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3251)
	at org.eclipse.jdt.core.dom.CompilationUnit.accept0(CompilationUnit.java:258)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3180)
	at org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor.performFirstPass(SuperTypeRefactoringProcessor.java:720)
	at org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor$3.acceptAST(SuperTypeRefactoringProcessor.java:1197)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1008)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:692)
	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:954)
	at org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor.solveSuperTypeConstraints(SuperTypeRefactoringProcessor.java:1192)
	at org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor.access$0(ExtractInterfaceProcessor.java:1)
	at org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor$1.acceptAST(ExtractInterfaceProcessor.java:1076)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1008)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:692)
	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:954)
	at org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor.rewriteTypeOccurrences(ExtractInterfaceProcessor.java:1057)
	at org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor.createChangeManager(ExtractInterfaceProcessor.java:423)
	at org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor.checkFinalConditions(ExtractInterfaceProcessor.java:247)
	at org.eclipse.ltk.core.refactoring.participants.ProcessorBasedRefactoring.checkFinalConditions(ProcessorBasedRefactoring.java:226)
	at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:86)
	at org.eclipse.ltk.core.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:122)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2380)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2405)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:89)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)
Root exception:
org.eclipse.core.runtime.AssertionFailedException: null argument:
	at org.eclipse.core.runtime.Assert.isNotNull(Assert.java:88)
	at org.eclipse.core.runtime.Assert.isNotNull(Assert.java:76)
	at org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.HierarchyType.initialize(HierarchyType.java:35)
	at org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TypeEnvironment.createStandardType(TypeEnvironment.java:377)
	at org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TypeEnvironment.create(TypeEnvironment.java:219)
	at org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel.createTType(SuperTypeConstraintsModel.java:472)
	at org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel.createIndependentTypeVariable(SuperTypeConstraintsModel.java:392)
	at org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsCreator.endVisit(SuperTypeConstraintsCreator.java:291)
	at org.eclipse.jdt.core.dom.ConditionalExpression.accept0(ConditionalExpression.java:185)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3180)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3251)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:228)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3180)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3251)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:228)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3180)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:3228)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3180)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3251)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:128)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3180)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:3228)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:274)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3180)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3251)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:128)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3180)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:3228)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:677)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3180)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3251)
	at org.eclipse.jdt.core.dom.TypeDeclaration.accept0(TypeDeclaration.java:499)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3180)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3251)
	at org.eclipse.jdt.core.dom.CompilationUnit.accept0(CompilationUnit.java:258)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3180)
	at org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor.performFirstPass(SuperTypeRefactoringProcessor.java:720)
	at org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor$3.acceptAST(SuperTypeRefactoringProcessor.java:1197)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1008)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:692)
	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:954)
	at org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor.solveSuperTypeConstraints(SuperTypeRefactoringProcessor.java:1192)
	at org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor.access$0(ExtractInterfaceProcessor.java:1)
	at org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor$1.acceptAST(ExtractInterfaceProcessor.java:1076)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1008)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:692)
	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:954)
	at org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor.rewriteTypeOccurrences(ExtractInterfaceProcessor.java:1057)
	at org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor.createChangeManager(ExtractInterfaceProcessor.java:423)
	at org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor.checkFinalConditions(ExtractInterfaceProcessor.java:247)
	at org.eclipse.ltk.core.refactoring.participants.ProcessorBasedRefactoring.checkFinalConditions(ProcessorBasedRefactoring.java:226)
	at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:86)
	at org.eclipse.ltk.core.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:122)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2380)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2405)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:89)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/135/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/136,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/136,eclipse.jdt.ui,1292911904,136,OverridingAssignmentCleanup moves up initializer with undefined Variable.,tsmaeder,13163770,Thomas Mäder,,CLOSED,2022-07-04T09:47:31Z,2022-07-13T21:05:11Z,"Running the `OverridingAssignmentCleanup` on such a code block:
```
		char[] result = null;
		...
		int sigLength = sig.length();
		result = new char[sigLength];
```
will result in this code:
```
		char[] result = new char[sigLength];
		...
		int sigLength = sig.length();
```
which does not compile due to `sigLength` not being defined.

To reproduce, turn on the ""Remove overridden assignment"" cleanup and run it on the above code. 

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/136/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/136,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5F88P-,eclipse.jdt.ui,1173603326,136,NA,tsmaeder,13163770,Thomas Mäder,,NA,2022-07-04T09:49:01Z,2022-07-04T09:49:01Z,"When moving an initializer up to the var declaration, we need to check whether it uses variables that are defined after the declaration. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5F88P-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/136,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GBsVE,eclipse.jdt.ui,1174848836,136,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2022-07-05T09:39:56Z,2022-07-05T09:39:56Z,"Another test case in eclipse.platform.ui for this behavior would be org.eclipse.ui.activities.ActivityCategoryPreferencePage. In the current JDT code base it replaces:

```
Set<String> categories = null;
if (WorkbenchActivityHelper.isEnabled(workingCopy, category.getId())) {
	categories = WorkbenchActivityHelper.getDisabledCategories(workingCopy, category.getId());
} else {
	categories = WorkbenchActivityHelper.getEnabledCategories(workingCopy, category.getId());
}
categories = WorkbenchActivityHelper.getContainedCategories(workingCopy, category.getId());

```

With 

```
if (WorkbenchActivityHelper.isEnabled(workingCopy, category.getId())) {
	categories = WorkbenchActivityHelper.getDisabledCategories(workingCopy, category.getId());
} else {
	categories = WorkbenchActivityHelper.getEnabledCategories(workingCopy, category.getId());
}
Set<String> categories = WorkbenchActivityHelper.getContainedCategories(workingCopy, category.getId());
	
```

I have not yet tried with your fix.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GBsVE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/136,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GF3KQ,eclipse.jdt.ui,1175941776,136,NA,tsmaeder,13163770,Thomas Mäder,,NA,2022-07-06T08:33:29Z,2022-07-06T08:33:29Z,"@vogella that's an interesting, but unrelated failure case: ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GF3KQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/137,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/137,eclipse.jdt.ui,1294107543,137,"[19] Quickfix for ""you are using preview feature"" causes compilation error",vik-chand,99390647,Vikas Chandra,,CLOSED,2022-07-05T10:29:18Z,2022-07-12T09:08:44Z,"public class X {
	static void print(Rectangle r) {
		if (r instanceof (Rectangle(ColoredPoint(Point(int x, int y), Color c),
		                         ColoredPoint lr) r1)) {
		  System.out.println(""Upper-left corner: "" + r1);
		}
	}
	public static void main(String[] obj) {
		print(new Rectangle(new ColoredPoint(new Point(0, 0), Color.BLUE), 
		                         new ColoredPoint(new Point(10, 15), Color.RED)));
	}
}
record Point(int x, int y) {}
enum Color { RED, GREEN, BLUE }
record ColoredPoint(Point p, Color c) {}
record Rectangle(ColoredPoint upperLeft, ColoredPoint lowerRight) {}


You will get you are using preview feature warning.
Quickfix select the 1st option ( add suppress warning to r1)

You get 
		if (r instanceof (@SuppressWarnings(""preview"") Rectangle(ColoredPoint(Point(int x, int y), Color c),
		                         ColoredPoint lr) r1)) {

Compilation error
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/137/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/138,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/138,eclipse.jdt.ui,1294137902,138,Use JUnit 5 from Maven Central: change in Bundle-SymbolicName,mickaelistria,469058,Mickael Istria,mistria@redhat.com,CLOSED,2022-07-05T10:57:16Z,2022-07-15T12:51:54Z,"As we plan to move to JUnit from Maven Central instead of Orbit, some code in JDT needs to be audited and probably tweaked to work with newer Bundle-SymbolicNames

Those are the filtered results of a search trying to lookup every reference to JUnit bundles by symbolic name in JDT.
```
eclipse.jdt.ui
org.eclipse.jdt.junit
src
org
eclipse
jdt
internal
junit
ui
JUnitClasspathFixProcessor.java (3 matches)
159: if (s.startsWith(""org.junit.jupiter"") || s.startsWith(""org.junit.platform"")) { //$NON-NLS-1$ //$NON-NLS-2$ 
161: } else if (s.startsWith(""org.junit."")) { //$NON-NLS-1$ 
org.eclipse.jdt.junit.core
src
org
eclipse
jdt
internal
junit
buildpath
BuildPathSupport.java (41 matches)
300: ""org.junit"", new VersionRange(""[3.8.2,3.9)""), ""junit.jar"", ""junit.jar"", ""org.junit.source"", ""source-bundle/"", JUnitPreferencesConstants.JUNIT3_JAVADOC); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ 
303: ""org.junit"", new VersionRange(""[4.13.0,5.0.0)""), null, ""org.junit_4.*.jar"", ""org.junit.source"", ""source-bundle/"", JUnitPreferencesConstants.JUNIT4_JAVADOC); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ 
309: ""org.junit.jupiter.api"", new VersionRange(""[5.0.0,6.0.0)""), null, ""org.junit.jupiter.api_5.*.jar"", ""org.junit.jupiter.api.source"", """", //$NON-NLS-1$//$NON-NLS-2$//$NON-NLS-3$//$NON-NLS-4$//$NON-NLS-5$ 
313: ""org.junit.jupiter.engine"", new VersionRange(""[5.0.0,6.0.0)""), null, ""org.junit.jupiter.engine_5.*.jar"", ""org.junit.jupiter.engine.source"", """", //$NON-NLS-1$//$NON-NLS-2$//$NON-NLS-3$//$NON-NLS-4$//$NON-NLS-5$ 
317: ""org.junit.jupiter.migrationsupport"", new VersionRange(""[5.0.0,6.0.0)""), null, ""org.junit.jupiter.migrationsupport_5.*.jar"", ""org.junit.jupiter.migrationsupport.source"", """", //$NON-NLS-1$//$NON-NLS-2$//$NON-NLS-3$//$NON-NLS-4$//$NON-NLS-5$ 
321: ""org.junit.jupiter.params"", new VersionRange(""[5.0.0,6.0.0)""), null, ""org.junit.jupiter.params_5.*.jar"", ""org.junit.jupiter.params.source"", """", //$NON-NLS-1$//$NON-NLS-2$//$NON-NLS-3$//$NON-NLS-4$//$NON-NLS-5$ 
325: ""org.junit.platform.commons"", new VersionRange(""[1.0.0,2.0.0)""), null, ""org.junit.platform.commons_1.*.jar"", ""org.junit.platform.commons.source"", """", //$NON-NLS-1$//$NON-NLS-2$//$NON-NLS-3$//$NON-NLS-4$//$NON-NLS-5$ 
329: ""org.junit.platform.engine"", new VersionRange(""[1.0.0,2.0.0)""), null, ""org.junit.platform.engine_1.*.jar"", ""org.junit.platform.engine.source"", """", //$NON-NLS-1$//$NON-NLS-2$//$NON-NLS-3$//$NON-NLS-4$//$NON-NLS-5$ 
333: ""org.junit.platform.launcher"", new VersionRange(""[1.0.0,2.0.0)""), null, ""org.junit.platform.launcher_1.*.jar"", ""org.junit.platform.launcher.source"", """", //$NON-NLS-1$//$NON-NLS-2$//$NON-NLS-3$//$NON-NLS-4$//$NON-NLS-5$ 
337: ""org.junit.platform.runner"", new VersionRange(""[1.0.0,2.0.0)""), null, ""org.junit.platform.runner_1.*.jar"", ""org.junit.platform.runner.source"", """", //$NON-NLS-1$//$NON-NLS-2$//$NON-NLS-3$//$NON-NLS-4$//$NON-NLS-5$ 
341: ""org.junit.platform.suite.api"", new VersionRange(""[1.0.0,2.0.0)""), null, ""org.junit.platform.suite.api_1.*.jar"", ""org.junit.platform.suite.api.source"", """", //$NON-NLS-1$//$NON-NLS-2$//$NON-NLS-3$//$NON-NLS-4$//$NON-NLS-5$ 
345: ""org.junit.platform.suite.engine"", new VersionRange(""[1.0.0,2.0.0)""), null, ""org.junit.platform.suite.engine_1.*.jar"", ""org.junit.platform.suite.engine.source"", """", //$NON-NLS-1$//$NON-NLS-2$//$NON-NLS-3$//$NON-NLS-4$//$NON-NLS-5$ 
349: ""org.junit.platform.suite.commons"", new VersionRange(""[1.0.0,2.0.0)""), null, ""org.junit.platform.suite.commons_1.*.jar"", ""org.junit.platform.suite.commons.source"", """", //$NON-NLS-1$//$NON-NLS-2$//$NON-NLS-3$//$NON-NLS-4$//$NON-NLS-5$ 
353: ""org.junit.vintage.engine"", new VersionRange(""[4.12.0,6.0.0)""), null, ""org.junit.vintage.engine_5.*.jar"", ""org.junit.vintage.engine.source"", """", //$NON-NLS-1$//$NON-NLS-2$//$NON-NLS-3$//$NON-NLS-4$//$NON-NLS-5$ 
junit
launcher
JUnitLaunchConfigurationDelegate.java (8 matches)
202: if (!Arrays.stream(classpath).anyMatch(s -> s.contains(""junit-platform-launcher"") || s.contains(""org.junit.platform.launcher""))) { //$NON-NLS-1$ //$NON-NLS-2$ 
204: JUnitRuntimeClasspathEntry x= new JUnitRuntimeClasspathEntry(""org.junit.platform.launcher"", null); //$NON-NLS-1$ 
213: if (!Arrays.stream(classpath).anyMatch(s -> s.contains(""junit-jupiter-engine"") || s.contains(""org.junit.jupiter.engine""))) { //$NON-NLS-1$ //$NON-NLS-2$ 
215: JUnitRuntimeClasspathEntry x= new JUnitRuntimeClasspathEntry(""org.junit.jupiter.engine"", null); //$NON-NLS-1$ 
224: if (!Arrays.stream(classpath).anyMatch(s -> s.contains(""junit-jupiter-api"") || s.contains(""org.junit.jupiter.api""))) { //$NON-NLS-1$ //$NON-NLS-2$ 
226: JUnitRuntimeClasspathEntry x= new JUnitRuntimeClasspathEntry(""org.junit.jupiter.api"", null); //$NON-NLS-1$ 
410: if (isOnModulePath(getJavaProject(configuration), ""org.junit.jupiter.api.Test"")) { //$NON-NLS-1$ 
411: addOpensTargets= ""org.junit.platform.commons,ALL-UNNAMED""; //$NON-NLS-1$ 
org.eclipse.jdt.text.tests
src
org
eclipse
jdt
text
tests
PluginsNotLoadedTest.java (4 matches)
147: ""org.junit"", 
148: ""org.junit4"", 
179: ""org.junit.source"", 
264: if (element.contains(""org.junit"")) 
org.eclipse.jdt.ui.tests
ui
org
eclipse
jdt
ui
tests
activation
JavaActivationTest.java (3 matches)
132: ""org.junit"", 
133: ""org.junit4"", 
164: ""org.junit.source"", 
org.eclipse.jdt.ui.unittest.junit
src
org
eclipse
jdt
ui
unittest
junit
launcher
JUnitLaunchConfigurationDelegate.java (6 matches)
218: s -> s.contains(""junit-platform-launcher"") || s.contains(""org.junit.platform.launcher""))) { //$NON-NLS-1$ //$NON-NLS-2$ 
220: JUnitRuntimeClasspathEntry x = new JUnitRuntimeClasspathEntry(""org.junit.platform.launcher"", //$NON-NLS-1$ 
232: s -> s.contains(""junit-jupiter-engine"") || s.contains(""org.junit.jupiter.engine""))) { //$NON-NLS-1$ //$NON-NLS-2$ 
234: JUnitRuntimeClasspathEntry x = new JUnitRuntimeClasspathEntry(""org.junit.jupiter.engine"", //$NON-NLS-1$ 
246: .anyMatch(s -> s.contains(""junit-jupiter-api"") || s.contains(""org.junit.jupiter.api""))) { //$NON-NLS-1$ //$NON-NLS-2$ 
248: JUnitRuntimeClasspathEntry x = new JUnitRuntimeClasspathEntry(""org.junit.jupiter.api"", //$NON-NLS-1$ 
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/138/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/138,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GCbi3,eclipse.jdt.ui,1175042231,138,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2022-07-05T13:10:09Z,2022-07-05T13:10:09Z,Looks like only BuildPathSupport would need an update when adopting upstream.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GCbi3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/138,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GCi6L,eclipse.jdt.ui,1175072395,138,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2022-07-05T13:38:44Z,2022-07-05T13:38:44Z,Submitted #141 towards that goal,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GCi6L/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/138,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GqYgp,eclipse.jdt.ui,1185515561,138,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2022-07-15T12:51:54Z,2022-07-15T12:51:54Z,Fixed with #141,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GqYgp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/140,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/140,eclipse.jdt.ui,1294274104,140,Assert.fail(e.getMessage()); convert to static imports does not work,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,CLOSED,2022-07-05T13:04:03Z,2022-07-06T12:23:16Z,"Assume the following code:

````
/*******************************************************************************
 * Copyright (c) 2004, 2017 IBM Corporation and others.
 *
 * This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License 2.0
 * which accompanies this distribution, and is available at
 * https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/

package org.eclipse.ui.tests.activities;

import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;

/**
 * Tests that the Persistance class is catching malformed registry entries.
 *
 * @since 3.1
 */
@RunWith(JUnit4.class)
public class PersistanceTest {

	@Test
	public void testActivityPermutations() {
		try {
			// stuff
		}
		catch (Exception e) {
			Assert.fail(e.getMessage());
		}
	}
}

````

Go to line 	Assert.fail(e.getMessage()); and use quick-fix -> convert to static import:

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/140/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/140,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GCaJM,eclipse.jdt.ui,1175036492,140,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2022-07-05T13:04:22Z,2022-07-05T13:04:22Z,Sorry false error,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GCaJM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/142,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/142,eclipse.jdt.ui,1295304505,142,[JUnit5] New JUnit Test Suite Project wizard does not give option to create JUnit 5 Suite,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,CLOSED,2022-07-06T07:05:16Z,2022-08-23T08:56:41Z,"We get the options to Create JUnit 3 and JUnit 4 Test Suite.
Should we not got an option to create JUnit 5 Test Suite?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/142/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/142,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GFiyl,eclipse.jdt.ui,1175858341,142,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-07-06T07:05:40Z,2022-07-06T07:05:40Z,Notification @noopur2507 @ktatavarthi ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GFiyl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/142,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GFoHu,eclipse.jdt.ui,1175880174,142,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-07-06T07:31:11Z,2022-07-06T07:31:11Z,Initial bug for his was created in bugzilla : [Bug 511183](https://bugs.eclipse.org/bugs/show_bug.cgi?id=511183),"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GFoHu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/142,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GGaAQ,eclipse.jdt.ui,1176084496,142,NA,carstenartur,3164220,Carsten Hammer,,NA,2022-07-06T11:00:31Z,2022-07-06T11:00:31Z,"> We get the options to Create JUnit 3 and JUnit 4 Test Suite.
> 
> Should we not got an option to create JUnit 5 Test Suite?

You are talking about something else?
https://bugs.eclipse.org/bugs/show_bug.cgi?id=570989","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GGaAQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/142,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GGvDM,eclipse.jdt.ui,1176170700,142,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-07-06T12:37:12Z,2022-07-06T12:37:12Z,"> > We get the options to Create JUnit 3 and JUnit 4 Test Suite.
> > Should we not got an option to create JUnit 5 Test Suite?
> 
> You are talking about something else? https://bugs.eclipse.org/bugs/show_bug.cgi?id=570989

This is not about creating Test Case, but about creating Test Suite

![image](https://user-images.githubusercontent.com/18457577/177551651-f9755104-c2da-49d7-a756-16d3fbd0b6e4.png)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GGvDM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/142,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GGxVh,eclipse.jdt.ui,1176180065,142,NA,noopur2507,8749449,Noopur Gupta,,NA,2022-07-06T12:47:01Z,2022-07-06T12:47:01Z,"JUnit 5 test suites support was added recently so this can be an enhancement to the wizard.

@jjohnstn Would you like to take this up and describe what can be done here as part of JUnit 5 test suites support?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GGxVh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/142,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GJM1l,eclipse.jdt.ui,1176816997,142,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-07-06T22:30:24Z,2022-07-06T22:30:24Z,"Sure.  I'm on vacation for a bit, but I can look at it for 2022-09 M2.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GJM1l/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/142,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5G5dX9,eclipse.jdt.ui,1189467645,142,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-07-19T19:24:48Z,2022-07-19T19:24:48Z,"@noopur2507 If you get a chance, please comment on the PR, otherwise, if you are too busy, I will merge for M2.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5G5dX9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/142,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5HCwfk,eclipse.jdt.ui,1191905252,142,NA,noopur2507,8749449,Noopur Gupta,,NA,2022-07-21T20:31:45Z,2022-07-21T20:31:45Z,"> @noopur2507 If you get a chance, please comment on the PR, otherwise, if you are too busy, I will merge for M2.

Sure, I will take a look.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5HCwfk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/142,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IoCOx,eclipse.jdt.ui,1218454449,142,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-08-17T20:21:41Z,2022-08-17T20:21:41Z,Verified for 4.25 M3 using I20220817-0600 build,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IoCOx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/142,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IqJAr,eclipse.jdt.ui,1219006507,142,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-08-18T03:37:29Z,2022-08-18T03:37:29Z,"I tried adding the Wizard to create the Test Suite but I land up with errors which specifies that org.junit is not recognized.
When I add a Test Case, I get a dialog to add JUnit5 in the build path but I don't get the same when I dd the test suite, any reason?

N&N entry is still missing.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IqJAr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/142,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ItNem,eclipse.jdt.ui,1219811238,142,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-08-18T18:36:59Z,2022-08-18T18:36:59Z,"N&N was pushed, but I don't have permission to merge after the github migration.  I noticed that it was just merged.

I will have to look at the missing dialog; off-hand I am not sure if this was done for JUnit 4 testsuites.  I also noticed that New JUnit Testsuite isn't in the default New dialog while New JUnit Test is.  Should that be changed as well?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ItNem/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/142,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Ivaon,eclipse.jdt.ui,1220389415,142,NA,SarikaSinha,14090181,Sarika Sinha,sarika.sinha@in.ibm.com,NA,2022-08-19T08:19:31Z,2022-08-19T08:19:31Z,"> N&N was pushed, but I don't have permission to merge after the github migration. I noticed that it was just merged.
> 
> I will have to look at the missing dialog; off-hand I am not sure if this was done for JUnit 4 testsuites. I also noticed that New JUnit Testsuite isn't in the default New dialog while New JUnit Test is. Should that be changed as well?

In which New dialog t isn't in the default? Can you attach the screenshot?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Ivaon/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/142,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5I3vmB,eclipse.jdt.ui,1222572417,142,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-08-22T16:08:21Z,2022-08-22T16:08:21Z,Select a Package.  Do a right click -> New ...  You will see the last item is a JUnit Test Case but to get a testsuite you have to click on Other -> Java -> JUnit -> JUnit Testsuite  (lots of work),"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5I3vmB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/142,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5I8TXK,eclipse.jdt.ui,1223767498,142,NA,noopur2507,8749449,Noopur Gupta,,NA,2022-08-23T08:56:41Z,2022-08-23T08:56:41Z,Adding it to the default New menu is not required I think as it is not used very frequently. We can consider if we get more user requests. ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5I8TXK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/144,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/144,eclipse.jdt.ui,1296692257,144,It is recommended that there is  project presentation setting in package explorer,lyh061619,15118571,,,OPEN,2022-07-07T02:04:22Z,2022-07-12T10:28:38Z,"Package Explorer has no project presentation Optional flat or hierarchical settings
![20220707100309](https://user-images.githubusercontent.com/15118571/177674374-c7308afa-47c7-4c5c-a68c-25abc0ef0a0d.jpg)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/144/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/144,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GJy3D,eclipse.jdt.ui,1176972739,144,NA,lyh061619,15118571,,,NA,2022-07-07T02:27:31Z,2022-07-07T02:27:31Z,"When you open package explorer, there is no project presentation configuration, and the multi module Maven project structure is displayed very badly","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GJy3D/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/144,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GJ4mo,eclipse.jdt.ui,1176996264,144,NA,humphreygao,52394598,,,NA,2022-07-07T03:03:16Z,2022-07-07T03:03:16Z,"这有什么问题？package explorer平级展示嵌套项目，project explorer可分级展示嵌套项目，否则要什么package explorer？干脆取消package explorer算了。

有不少人觉得package explorer没卵用，要求取消呢，但是又有几个人不愿意，说我一直用的package explorer呢，不行不能取消。
package explorer唯一有用的是这个：
![image](https://user-images.githubusercontent.com/52394598/177681679-08313a05-4d75-4228-aa07-e64b147f4f1f.png)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GJ4mo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/144,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GbaxT,eclipse.jdt.ui,1181592659,144,NA,lyh061619,15118571,,,NA,2022-07-12T10:28:38Z,2022-07-12T10:28:38Z,"> 这有什么问题？package explorer平级展示嵌套项目，project explorer可分级展示嵌套项目，否则要什么package explorer？干脆取消package explorer算了。
> 
> 有不少人觉得package explorer没卵用，要求取消呢，但是又有几个人不愿意，说我一直用的package explorer呢，不行不能取消。 package explorer唯一有用的是这个： ![image](https://user-images.githubusercontent.com/52394598/177681679-08313a05-4d75-4228-aa07-e64b147f4f1f.png)


Project Explorer handles the function integration of pakage Explorer well, which can be cancelled completely. It works well in unified view. Now the experience of using Project Explorer without Java element is too bad:

. The reconstruction of the project is also inconvenient. It cannot be reconstructed at all, and intelligent automatic replacement is impossible

. establish. Java files have to be configured manually, which is no different from writing code in rich text. There is too much repetition

. Display unnecessary problems in the hierarchy directory after opening
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GbaxT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/145,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/145,eclipse.jdt.ui,1296698794,145,"Project Explorer project enables Java elements Maven. There are multiple directories, such as",lyh061619,15118571,,,OPEN,2022-07-07T02:16:01Z,2022-07-08T02:15:59Z,"Project Explorer project enables Java elements Maven. There are multiple directories, such as
![20220707100904](https://user-images.githubusercontent.com/15118571/177675634-d8d89317-c69d-4148-9ef4-5bbd02397473.png)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/145/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/145,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GJxQS,eclipse.jdt.ui,1176966162,145,NA,lyh061619,15118571,,,NA,2022-07-07T02:16:59Z,2022-07-07T02:16:59Z,Eclipse Maven this display is too bad,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GJxQS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/145,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GJ2YC,eclipse.jdt.ui,1176987138,145,NA,humphreygao,52394598,,,NA,2022-07-07T02:53:53Z,2022-07-07T02:53:53Z,"Project Explorer: Packges are display wrongly in project's `src` folder when package presentation is hierarchical.

when the package presentation is flat, it is okay:
![image](https://user-images.githubusercontent.com/52394598/177685497-ce45c0dc-6082-486c-99df-c5413607c6cd.png)

but when the package presentation is hierarchical:
![image](https://user-images.githubusercontent.com/52394598/177685669-97310633-8111-486d-8136-38e251d6a337.png)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GJ2YC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/145,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GOIVI,eclipse.jdt.ui,1178109256,145,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-07-07T19:16:48Z,2022-07-07T19:16:48Z,Could this be: https://bugs.eclipse.org/bugs/show_bug.cgi?id=579170,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GOIVI/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/145,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GPesA,eclipse.jdt.ui,1178462976,145,NA,nitind,2684153,Nitin Dahyabhai,thatnitind@gmail.com,NA,2022-07-08T02:15:59Z,2022-07-08T02:15:59Z,"Without a visible ""Java Resources"" node, unlikely, but then it's something you can narrow down by systematically disabling the content providers in the view's local settings.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GPesA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/146,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/146,eclipse.jdt.ui,1297304962,146,BadLocationException when trying to use Refactor - Rename on a java method,costescuandrei,1453855,Andrei Costescu,,CLOSED,2022-07-07T11:58:03Z,2022-10-13T16:28:23Z,"I have a class in it's own java file. I try to do ALT+SHIFT+R (or from the context menu refactor - rename) on one of it's public methods. It does not work and I get this exception:

```
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.link.LinkedPositionGroup.enforceDisjoint(LinkedPositionGroup.java:162)
	at org.eclipse.jface.text.link.LinkedPositionGroup.addPosition(LinkedPositionGroup.java:127)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.RenameLinkedMode.start(RenameLinkedMode.java:304)
	at org.eclipse.jdt.internal.ui.refactoring.actions.RenameJavaElementAction.run(RenameJavaElementAction.java:250)
	at org.eclipse.jdt.internal.ui.refactoring.actions.RenameJavaElementAction.doRun(RenameJavaElementAction.java:190)
	at org.eclipse.jdt.internal.ui.refactoring.actions.RenameJavaElementAction.run(RenameJavaElementAction.java:162)
	at org.eclipse.jdt.ui.actions.RenameAction.run(RenameAction.java:121)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:278)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:252)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4251)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4068)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3645)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.equinox.internal.app.MainApplicationLauncher.run(MainApplicationLauncher.java:36)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
```

```
eclipse.buildId=4.24.0.I20220607-0700
java.version=18.0.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.rcp.product -product org.eclipse.wildwebdeveloper.product.branding.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -clean -product org.eclipse.epp.package.rcp.product -product org.eclipse.wildwebdeveloper.product.branding.product -data e:\Workspaces\master
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/146/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/146,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GL1wL,eclipse.jdt.ui,1177508875,146,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-07-07T12:10:10Z,2022-07-07T12:10:10Z,"@jjohnstn : may be related to https://git.eclipse.org/r/c/jdt/eclipse.jdt.ui/+/70037 changes in `org.eclipse.jdt.internal.ui.refactoring.reorg.RenameLinkedMode.start()`.
Could you please take a look?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GL1wL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/146,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GNG5X,eclipse.jdt.ui,1177841239,146,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-07-07T15:56:30Z,2022-07-07T15:56:30Z,Ok.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GNG5X/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/146,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GN4uY,eclipse.jdt.ui,1178045336,146,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-07-07T18:29:14Z,2022-07-07T18:29:14Z,"@costescuandrei  I don't have access to a Windows box, but it works for me on Linux for Eclipse internal Java classes opened in a 2022-06 ""Eclipse for Eclipse Committer's"" epp package as well as in the ""Eclipse for Enterprise Java and Web Developers"" epp package.  Could you provide more information?  What EPP package did you install and did you install any additional products?  If you create a simple Java class with a few public methods, does it still fail for you?  If not, can you provide more details about your particular project and class?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GN4uY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/146,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Gb-o9,eclipse.jdt.ui,1181739581,146,NA,costescuandrei,1453855,Andrei Costescu,,NA,2022-07-12T13:08:21Z,2022-07-12T13:08:21Z,"Maybe it needs then a special set of java classes. I tried to rename BasicFormController.executePreHideSteps method from https://github.com/Servoy/servoy-client
So https://github.com/Servoy/servoy-client/blob/master/servoy_shared/src/com/servoy/j2db/BasicFormController.java

Yes. I see now that in other classes it works.
Please try to use that git repo. to reproduce it. Let me know if that does not work - I can try to reduce that project to a smaller sample (if needed).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Gb-o9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/146,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GrzdF,eclipse.jdt.ui,1185888069,146,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-07-15T20:23:48Z,2022-07-15T20:23:48Z,"Can you please try the latest I-build from: https://download.eclipse.org/eclipse/downloads/ ?

A fix was made to handle a regression in the rename code that among other things caused a BadLocationException to occur under the covers which prevented the rename from occurring after hitting Enter. It also sometimes caused an assertion failure. I have verified that today's I-build contains the fix and I believe it may be the same issue as this one.

The issue recently fixed is: https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/158

The sample test from the issue above is simple.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GrzdF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/146,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5MKu_X,eclipse.jdt.ui,1277882327,146,NA,costescuandrei,1453855,Andrei Costescu,,NA,2022-10-13T16:28:23Z,2022-10-13T16:28:23Z,"Yes, now it works. Thank you!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5MKu_X/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/148,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/148,eclipse.jdt.ui,1299066409,148,Parameter name code mining not supported for record constructor invocation,rgrunber,1417342,Roland Grunberg,,CLOSED,2022-07-08T14:02:35Z,2022-07-21T13:55:46Z,"Originally discussed at https://github.com/redhat-developer/vscode-java/issues/2414

JDT does't support parameter name code minings for record constructor invocations. This is because the logic relies on accessing the constructor node's java model (`IMethod`), but the method is synthetic so `null`. In JDT-LS they try to use the record's field declaration to get the parameter names, but order is not guaranteed so that isn't correct.

It's possible to expose the ordered parameter names of the record's constructors using the method binding so we just need to expose it in jdt.core, and then write some code to construct the mining from a method binding.

**Result with proposed changes :**
![](https://user-images.githubusercontent.com/1417342/174167406-f0aad370-c608-49e4-902f-06f1cfd17f6d.png)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/148/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/151,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/151,eclipse.jdt.ui,1300458822,151,JUnit view shows wrong tests when re-using suites,paphko,6435623,,,CLOSED,2022-07-11T09:40:35Z,2024-02-14T14:12:13Z,"I have a test suite with some default data under test.

For variations of the test data, I subclassed the test suite and change the data under test in an @BeforeClass method.

Then the debug view shows both all test executions under the same (last) instance, even though one passes and one fails:
![image](https://user-images.githubusercontent.com/6435623/178235238-64916db0-82b3-4a6c-9e40-91e3d5e89b20.png)

Test files are attached: [suits.zip](https://github.com/eclipse-jdt/eclipse.jdt.ui/files/9082726/suits.zip)
Tested with Eclipse 22-06.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/151/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/151,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5HC4Vq,eclipse.jdt.ui,1191937386,151,NA,noopur2507,8749449,Noopur Gupta,,NA,2022-07-21T21:08:42Z,2022-07-21T21:08:42Z,"Can you please describe what's the expected result here?

Please run the same JUnit 4 test on the command line and attach the result here.

Also, try it out and mention if it was working in any older Eclipse release and is a regression in Eclipse 22-06.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5HC4Vq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/151,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5z3Lvn,eclipse.jdt.ui,1943845863,151,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-14T14:11:37Z,2024-02-14T14:11:37Z,There is not information provided in this issue.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5z3Lvn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/152,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/152,eclipse.jdt.ui,1300940921,152,Extracting a superclass from an inner static class extracts the outer class instead,khatchad,2048831,Raffi Khatchadourian,khatchad@hunter.cuny.edu,CLOSED,2022-07-11T16:23:06Z,2022-07-27T08:28:31Z,"## Steps
1. Select an inner static class in the UI.
2. Select the ""extract superclass"" refactoring option.

## Expect Result
A superclass is extracted from the selected, inner static class.

## Actual Result
A superclass is extracted from the outer class.

## Example Problematic Input
```java
class A {
  static class B {
// ...
}
```
Extracting a superclass from `B` attempts to exact a superclass from `A`.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/152/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/152,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GXr7O,eclipse.jdt.ui,1180614350,152,NA,khatchad,2048831,Raffi Khatchadourian,khatchad@hunter.cuny.edu,NA,2022-07-11T16:23:30Z,2022-07-11T16:23:30Z,Related to https://bugs.eclipse.org/bugs/show_bug.cgi?id=304473.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GXr7O/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/152,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5HJ0na,eclipse.jdt.ui,1193757146,152,NA,tsmaeder,13163770,Thomas Mäder,,NA,2022-07-25T08:40:42Z,2022-07-25T08:40:42Z,"If you select a member of the class `B` in the above example, the refactoring correctly extracts a superclass of `B`. As far as I can tell from the code in `ExtractSupertypeProcessor,`, this seems to work as designed. So this seems to be more a case of ""unexpected UI behaviour"" than a straight up bug. I'll have to dig around a bit to see if it makes sense to make the selected type the target of the action in this case.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5HJ0na/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/152,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5HKHM_,eclipse.jdt.ui,1193833279,152,NA,tsmaeder,13163770,Thomas Mäder,,NA,2022-07-25T09:54:47Z,2022-07-25T09:54:47Z,"If you select the class `B`, the wizard opens with `B` selected as the member to be extracted to the new super class. As far as I'm concerned, this works as designed.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5HKHM_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/152,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5HT-kD,eclipse.jdt.ui,1196419331,152,NA,tsmaeder,13163770,Thomas Mäder,,NA,2022-07-27T08:28:31Z,2022-07-27T08:28:31Z,"Closing this one as ""works as designed"".","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5HT-kD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/156,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/156,eclipse.jdt.ui,1302951181,156,[19] - Refactor does not work for record pattern,vik-chand,99390647,Vikas Chandra,,CLOSED,2022-07-13T06:10:53Z,2022-08-04T06:23:54Z,"```
@SuppressWarnings(""preview"")public class X {
public static void printLowerRight(Rectangle r) {
	int res = switch(r) {
	case Rectangle(ColoredPoint(Point(int xy, int y), Color c),
	                   ColoredPoint lr) r1  -> {
	                	   //r1.
	                	   
	                	   r1=null;
				System.out.println(""x= "" + xy);
				System.out.println(""y= "" + y);
				System.out.println(""lr= "" + lr);
				System.out.println(""lr.c()= "" + lr.c());
				System.out.println(""lr.p()= "" + lr.p());
				System.out.println(""lr.p().x()= "" + lr.p().x());
				System.out.println(""lr.p().y()= "" + lr.p());
				System.out.println(""c= "" + c);
				System.out.println(""r1= "" + r1);
		yield xy;  
	} 
	default -> 0;
	}; 
	System.out.println(""Returns: "" + res);
}
public static void main(String[] args) {
	printLowerRight(new Rectangle(new ColoredPoint(new Point(15, 5), Color.BLUE), 
	new ColoredPoint(new Point(30, 10), Color.RED)));
}
}
record Point(int x, int y) {}
enum Color { RED, GREEN, BLUE }
record ColoredPoint(Point p, Color c) {}
record Rectangle(ColoredPoint upperLeft, ColoredPoint lowerRight) {}
```

Select xy on line number 4 and try to rename to xyz. Nothing happens. Please note search correctly return the 2 matches.
Also try to rename lr on line number 5. That fails too. Search gives the correct result (5 matches by Command-Shift-G)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/156/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/156,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GpWWd,eclipse.jdt.ui,1185244573,156,NA,noopur2507,8749449,Noopur Gupta,,NA,2022-07-15T07:06:31Z,2022-07-15T07:06:31Z,"Currently, there is no AST node for variables like xy and lr. This should be revisited after [RecordPattern DOM AST changes](https://github.com/eclipse-jdt/eclipse.jdt.core/pull/174#) is merged.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GpWWd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/156,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5H0AIW,eclipse.jdt.ui,1204814358,156,NA,noopur2507,8749449,Noopur Gupta,,NA,2022-08-04T06:23:54Z,2022-08-04T06:23:54Z,These cases are now working fine.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5H0AIW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/157,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/157,eclipse.jdt.ui,1303129123,157,"Rename with keyboard shortcut ""⌥⌘R"" is renaming more than one AST node",jmini,1222165,Jérémie Bresson,dev@jmini.fr,CLOSED,2022-07-13T09:02:13Z,2024-02-14T15:40:22Z,"With the newest Eclipse 2022-06 I have observed a wired behavior when I try to rename a method using the `⌥⌘R` shortcut:

![Eclipse Refactoring - rename issue](https://user-images.githubusercontent.com/1222165/178692372-3e9b59da-44c3-4ef9-94ab-0e4566a8e44c.gif)

I do not have a standalone reproduced yet. Also the project (Gradle project, imported in the Workspace using Buildship) presented in the screenshot is not open-source yet.

When I tried it this morning again, the error is still present but the wrongly-renamed node is somewhere else (maybe also because the code has changed)
![Eclipse Refactoring - rename issue (2)](https://user-images.githubusercontent.com/1222165/178694663-be9decef-6adf-4755-bf96-333449370c61.gif)

Also note that when you hit ""Enter"" to terminate the renaming operation, the wrongly renamed node is turned back to his original value. So maybe it is only a display problem during the rename operation?


**My Eclipse version:**

Eclipse IDE for Java Developers (includes Incubating components)

Version: 2022-06 (4.24.0)
Build id: 20220609-1112

```
applicationXMI=org.eclipse.ui.workbench/LegacyIDE.e4xmi
awt.toolkit=sun.lwawt.macosx.LWCToolkit
ds.delayed.keepInstances=true
ds.delayed.keepInstances.default=true
eclipse.application=org.eclipse.ui.ide.workbench
eclipse.buildId=4.24.0.I20220607-0700
```

Tested on macOS.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/157/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/157,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GrzZo,eclipse.jdt.ui,1185887848,157,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-07-15T20:23:26Z,2022-07-15T20:23:26Z,"Can you please try the latest I-build from:  https://download.eclipse.org/eclipse/downloads/ ?

A fix was made to handle a regression in the rename code that among other things caused a BadLocationException to occur under the covers which prevented the rename from occurring after hitting Enter.  It also sometimes caused an assertion failure.  I have verified that today's I-build contains the fix and I believe it may be the same issue as this one.

The issue recently fixed is:  https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/158

The sample test from the issue above is simple.

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5GrzZo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/157,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5HH7nO,eclipse.jdt.ui,1193261518,157,NA,jmini,1222165,Jérémie Bresson,dev@jmini.fr,NA,2022-07-24T07:09:41Z,2022-07-24T07:09:41Z,I will give it a try,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5HH7nO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/157,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IoKUB,eclipse.jdt.ui,1218487553,157,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-08-17T21:02:39Z,2022-08-17T21:02:39Z,@jmini Did you manage to try out the latest I-build?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IoKUB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/157,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5z4G0d,eclipse.jdt.ui,1944087837,157,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-14T15:40:22Z,2024-02-14T15:40:22Z,this issue contains insufficent information / is likely to be already fixed.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5z4G0d/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/158,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/158,eclipse.jdt.ui,1303462533,158,Java: Refactoring of Interface Implementation no longer possible,StefanLindner,668992,,,CLOSED,2022-07-13T13:36:00Z,2022-08-17T20:24:36Z,"Given the following Java Interface
```
public interface ITest {

	public void wrongName();

}

```
and implementing class
```
public class Test implements ITest {
   	
   	
	public static void main(String[] args) throws Exception {
		new Test().wrongName();
	}

	
	public void wrongName() {
		
	}

	
}

```
Until Eclipse 4.23 it was possible to do a refactor/rename of ""wrongName"" in the implementing class. The definition in the intervace was renamed too, refactoring complete.

Now after upgrading to Eclipse 4.24 it is no longer pssible do do this. A refactor/rename in the class does nothing at all. It does NOT show any way to edit the name of the procedure. Doing so in the interface file still works fine.

I saw a lombok-problem for this while searching for a hint bot we don't habe and never did have a lombok plugin.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/158/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/158,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Gk8Sd,eclipse.jdt.ui,1184089245,158,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-07-14T07:22:10Z,2022-07-14T07:22:10Z,@jjohnstn This seems to be occurring because of fix for [Bug 99622](https://bugs.eclipse.org/bugs/show_bug.cgi?id=99622) - ` [rename] Rename method misses ambiguously overridden method` . Can you please have a look at this for 4.25 M3,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Gk8Sd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/158,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Gnq9r,eclipse.jdt.ui,1184804715,158,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-07-14T19:13:19Z,2022-07-14T19:13:19Z,Will do.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Gnq9r/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/158,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IoCzY,eclipse.jdt.ui,1218456792,158,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-08-17T20:24:36Z,2022-08-17T20:24:36Z,Verified for 4.25 M3 using I20220817-0600 build,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IoCzY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/159,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/159,eclipse.jdt.ui,1303465746,159,[19] Add AST levels 18 and 19 in AST view,noopur2507,8749449,Noopur Gupta,,CLOSED,2022-07-13T13:47:06Z,2022-07-14T07:36:52Z,Add AST levels 18 and 19 in AST view menu. ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/159/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/161,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/161,eclipse.jdt.ui,1303673514,161,"Implement methods quickfix on records should not create stubs for equals, hashCode and toString",szarnekow,375492,Sebastian Zarnekow,Sebastian.Zarnekow@gmail.com,CLOSED,2022-07-13T16:26:01Z,2022-08-17T20:26:54Z,"```java
record MyRecord(Object o) implements Comparable<MyRecord> {
}
```

Invoking the quickfix to add the missing members unexpectedly yields
```java
record MyRecord(Object o) implements Comparable<MyRecord> {

	@Override
	public int compareTo(MyRecord o) {
		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		return false;
	}

	@Override
	public int hashCode() {
		return 0;
	}

	@Override
	public String toString() {
		return null;
	}
	
}
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/161/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/161,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5HKM2q,eclipse.jdt.ui,1193856426,161,NA,tsmaeder,13163770,Thomas Mäder,,NA,2022-07-25T10:18:32Z,2022-07-25T10:18:32Z,"`StubUtility2Core#getUnimplementedMethods(...)` incorrectly adds the synthetic record methods to the set of methods to implement: the super class of all records is `java.lang.Record`, which contains abstract methods for `equals`, `hashCode` and `toString()`. It seems to me that something being implemented with a synthetic method should remove the need for it to be implemented. The alternative fix would be to special-case `java.lang.Record` in order to ignore all methods declared there.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5HKM2q/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/161,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5HLIyK,eclipse.jdt.ui,1194101898,161,NA,tsmaeder,13163770,Thomas Mäder,,NA,2022-07-25T14:11:36Z,2022-07-25T14:11:36Z,"The code came in as a fix for https://bugs.eclipse.org/bugs/show_bug.cgi?id=577180. I'm not sure that was a good change: the record synthetic methods are never unimplemented in a record, so they shouldn't be added upon creation, IMO. The option still makes sense, since records can implement interfaces. @jjohnstn what's your take on it?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5HLIyK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/161,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5HLJn2,eclipse.jdt.ui,1194105334,161,NA,tsmaeder,13163770,Thomas Mäder,,NA,2022-07-25T14:14:15Z,2022-07-25T14:14:15Z,Just a note: it seems that overriding equals/hashCode may make sense for records containing structures like arrays. ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5HLJn2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/161,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5HQEGq,eclipse.jdt.ui,1195393450,161,NA,tsmaeder,13163770,Thomas Mäder,,NA,2022-07-26T12:02:37Z,2022-07-26T12:02:37Z,"Further error case: when we implement an interface that has the same name as a property, implementing methods also adds those methods, even if the compiler generates them: example:
```
record <T> Foo(T get) implements Supplier<T>, Runnable {
}
```

invoking ""add unimplemented methods"" will add a `T get()` method. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5HQEGq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/161,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5HRDBx,eclipse.jdt.ui,1195651185,161,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-07-26T15:43:42Z,2022-07-26T15:43:42Z,"I agree that getUnimplementedMethods() is not correct for the record.  Those methods are implemented.  I also think that the bug referenced is not unreasonable in creating the stubs as asked since the vast majority of users won't ever select that when creating a record.  That said, I think that a new method should be added to StubUtility to support the creationg dialog so both situations work as expected.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5HRDBx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/161,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IoDQU,eclipse.jdt.ui,1218458644,161,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-08-17T20:26:54Z,2022-08-17T20:26:54Z,Verified for 4.25 M3 using I20220817-0600 build,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IoDQU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/164,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/164,eclipse.jdt.ui,1305696157,164,Provide Hover support for TextBlock Source.,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,CLOSED,2022-07-15T07:42:13Z,2022-07-15T12:49:51Z,Currently there is no support to show the TextBlock  relevant string. This issue is to provide java source hover support for TextBlock which gets the literal value of the TextBlock AST Node and displays it on hover and Shift + hover,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/164/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/167,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/167,eclipse.jdt.ui,1305942199,167,ECJ+Save actions Bug: The Varnisher,dashorst,46626,Martijn Dashorst,dashorst@apache.org,OPEN,2022-07-15T08:43:08Z,2022-07-15T11:49:39Z,"Somehow my Eclipse 2022.3 found it necessary to adorn all my var statements with type parameters that were already on the right side of the initialization statement:

```java
var joinX = (Join<F, X>) root.fetch(tToX, JoinType.LEFT);
```
became (due to our save actions automation):

```java
var<F, X> joinX = (Join<F, X>) root.fetch(tToX, JoinType.LEFT);
```

I never expected this to be valid Java (and according to the language rules it shouldn't be), so this sparked more interest in finding the most funny representation of this issue. Behold: 

### The Varnisher

```java
var<var<var<var<var<var<var<var<var<var<var<var<var<var<var<var>>>>>>>>>>>>>>> var = ""var"";
```

ECJ finds this code to be perfectly correct, whereas javac will give a compilation error on the type parameters (the variable can of course be named `var`, as var is only a restricted type, not a keyword).

I don't think fixing the compiler is the most important issue ever, and this makes for great slides in lightning talks, so please take your time fixing it 😄 

The issue causing me to find this ecj bug is of course also interesting and probably more important to fix, but I don't know how to reproduce it.

### Settings for the auto save actions

- Format all lines
- Organize imports

Additional actions:
- Change non static accesses to static members using declaring type
- Change indirect accesses to static members to direct accesses (accesses through subtypes)
- Remove unused imports
- Add missing '@Override' annotations
- Add missing '@Override' annotations to implementations of interface methods
- Add missing '@Deprecated' annotations
- Remove unnecessary casts
- Remove unnecessary '$NON-NLS$' tags
- Remove trailing white spaces on all lines
- Use diamond operator

Image with the diffs (I did not edit these lines myself, the save action did that for me):

<img width=""1024"" alt=""image"" src=""https://user-images.githubusercontent.com/46626/179191160-149d835a-315f-460e-8cc2-b686161406bb.png"">
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/167/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/890,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/890,eclipse.jdt.ui,1972626932,890,Nested records have unneeded import,frankbenoit,8962790,Frank Benoit,,CLOSED,2022-07-16T17:31:55Z,2024-09-10T19:40:55Z,"Version: 2022-06 (4.24.0)
Build id: 20220609-1112

Given a record nesting a record:
````Java
record A( int v, B b ){
    record B( String n ){}
}
````
On organize imports, this will have an import for `B`. At the same time this `import` is marked as unneeded.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/890/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/890,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qpOCZ,eclipse.jdt.ui,1789190297,890,NA,nlisker,37422899,,,NA,2022-07-17T00:25:34Z,2022-07-17T00:25:34Z,"The bug occurs for any nested type, not just if `B` is a record. Try `enum` and `class` too. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qpOCZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/890,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qpOCe,eclipse.jdt.ui,1789190302,890,NA,pme-sap,118993949,Peter Metternich,,NA,2022-12-07T15:18:46Z,2022-12-07T15:18:46Z,"Retested with 2022-09 and 2022-12 as well (Version: 2022-12 (4.26.0) - Build id: 20221201-1913).

The issue is still there. To reproduce:
1. Import attached project [EclipseBug-579273.zip](https://github.com/eclipse-jdt/eclipse.jdt.core/files/10177326/EclipseBug-579273.zip)
2. See the warning ""unused import"" on Rec.java:3
3. Manually delete line 3 & save
4. Execute Source -> Organize Imports and find the unused import again","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qpOCe/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/890,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qpOCp,eclipse.jdt.ui,1789190313,890,NA,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,NA,2022-12-15T07:42:14Z,2022-12-15T07:42:14Z,"I can reproduce this with latest Eclipse build. Looks like the issue is in ImportRewrite (in jdt.ui) that doesn't check for the names from inner types. This made sense for types because we won't encounter inner types names as part of the outer type's declaration. But as seen in this example, records are an exception. 

One way to fix this would be, in ImportRewrite#findInImports(), we should look for known names from body declarations of a record and if found return ImportRewriteContext.RES_NAME_FOUND

Could be a good first for a beginner.

Tag @noopur2507 ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qpOCp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/890,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qpOCv,eclipse.jdt.ui,1789190319,890,NA,pme-sap,118993949,Peter Metternich,,NA,2023-03-15T16:14:16Z,2023-03-15T16:14:16Z,Still present in 2023-03 (4.27.0) - Build id: 20230309-1520,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qpOCv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/890,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qpOC4,eclipse.jdt.ui,1789190328,890,NA,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,NA,2023-03-16T04:05:16Z,2023-03-16T04:05:16Z,@noopur2507 Can you please take this forward?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qpOC4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/890,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qpOC8,eclipse.jdt.ui,1789190332,890,NA,arithauth,100252514,arithauth,,NA,2023-05-06T08:19:41Z,2023-05-06T08:19:41Z,"I met it on May 6, 2023 and found this opened issue.
Language Support for Java(TM) by Red Hat v1.18.0","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qpOC8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/890,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qqpCu,eclipse.jdt.ui,1789563054,890,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-11-01T19:46:21Z,2023-11-01T19:46:21Z,Transferred as suggested changes are in UI and patch will be posted shortly.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qqpCu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/890,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6KeDuw,eclipse.jdt.ui,2323135408,890,NA,nlisker,37422899,,,NA,2024-09-01T02:43:03Z,2024-09-01T02:43:03Z,"@jjohnstn I'm still seeing this (or a similar) bug:

```java
import com.test.Entry.Source.Bound;
import com.test.Entry.Source.Entity;
import com.test.Entry.Source.Innate;
import com.test.Entry.Source.Structural;

public record Entry() {

	public sealed interface Source permits Innate, Structural, Bound, Entity {
	
		record Innate() implements Source {} // error below would be on this line

		record Structural() implements Source {}

		record Bound() implements Source {}

		record Entity() implements Source {}
	}
}
```

with unused import warnings on all imports. Removing the import causes an error:

`The type Innate that implements a sealed interface Entry.Source should be a permitted subtype of Entry.Source`. This message is wrong I believe.

I'm using version: 2024-06 (4.32) | Build id: I20240601-0610.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6KeDuw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/890,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Lli69,eclipse.jdt.ui,2341875389,890,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-09-10T19:40:54Z,2024-09-10T19:40:54Z,"Hi @nlisker Your case above is a completely separate issue.  I tried the test with the up-coming 4.34 M1 (2024-12) and it works fine (no import warnings).  It may work with the soon to be released 4.33 (2024-09) which releases tomorrow.   If I remove the imports and then do an Organize Imports, it adds the imports with no warnings.  The original test works fine as well.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Lli69/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/169,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/169,eclipse.jdt.ui,1309863451,169,Infer Generic Arguments causes ClassCastException in CompositeChange,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2022-07-19T17:57:17Z,2022-08-17T20:39:40Z,"Following code:

```
import java.util.ArrayList;
public class LocalTest {
    void m() {
        class Local {
        	Local fSelf;
        }
        new ArrayList().add(new Local().fSelf);
    }
}
```
`

causes ClassCastException in CompositeChange trying to cast CompilationUnitChange to CompositeChange.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/169/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/169,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IoFur,eclipse.jdt.ui,1218468779,169,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-08-17T20:39:40Z,2022-08-17T20:39:40Z,Verified for 4.25 M3 uing I20220817-0600 build,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IoFur/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/174,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/174,eclipse.jdt.ui,1316482459,174,"ComparingOnCriteriaCleanUp (""Use Comparator.comparing()"") fails with error",SchubP,23518402,,,CLOSED,2022-07-25T08:48:06Z,2023-12-06T23:09:44Z,"Hi,

we are using:
    Eclipse SDK
    Version: 2022-06 (4.24)
    Build id: I20220607-0700
    Java: Temurin-17.0.3+7

When we perform the CleanUp ""Use Comparator.comparing()""on our code, we get the following exception:
    `java.lang.IllegalArgumentException: Invalid identifier : >? super Test<
	    at org.eclipse.jdt.core.dom.SimpleName.setIdentifier(SimpleName.java:243)
	    at org.eclipse.jdt.core.dom.AST.newSimpleName(AST.java:2777)
	    at org.eclipse.jdt.core.dom.AST.newName(AST.java:2427)
	    at org.eclipse.jdt.internal.corext.dom.ASTNodeFactory.newName(ASTNodeFactory.java:327)
	    at org.eclipse.jdt.internal.ui.fix.ComparingOnCriteriaCleanUp$ComparingOnCriteriaOperation.buildField(ComparingOnCriteriaCleanUp.java:576)
	    at org.eclipse.jdt.internal.ui.fix.ComparingOnCriteriaCleanUp$ComparingOnCriteriaOperation.rewriteAST(ComparingOnCriteriaCleanUp.java:522)
	    at org.eclipse.jdt.internal.corext.fix.CompilationUnitRewriteOperationsFix$CompilationUnitRewriteOperation.rewriteAST(CompilationUnitRewriteOperationsFix.java:45)
	    at org.eclipse.jdt.internal.corext.fix.CompilationUnitRewriteOperationsFixCore.createChange(CompilationUnitRewriteOperationsFixCore.java:98)
	    at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.calculateChange(CleanUpRefactoring.java:775)
	    at org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener.saved(CleanUpPostSaveListener.java:384)
	    at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$4.run(CompilationUnitDocumentProvider.java:1642)
	    at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	    at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.notifyPostSaveListeners(CompilationUnitDocumentProvider.java:1636)
	    at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.commitWorkingCopy(CompilationUnitDocumentProvider.java:1420)
	    at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$3.execute(CompilationUnitDocumentProvider.java:1495)
	    at org.eclipse.ui.editors.text.TextFileDocumentProvider$DocumentProviderOperation.run(TextFileDocumentProvider.java:133)
	    at org.eclipse.ui.actions.WorkspaceModifyDelegatingOperation.execute(WorkspaceModifyDelegatingOperation.java:71)
	    at org.eclipse.ui.actions.WorkspaceModifyOperation.lambda$0(WorkspaceModifyOperation.java:110)
	    at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2380)
	    at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2405)
	    at org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:131)
	    at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:76)
	    at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:66)
	    at org.eclipse.ui.editors.text.TextFileDocumentProvider.executeOperation(TextFileDocumentProvider.java:461)
	    at org.eclipse.ui.editors.text.TextFileDocumentProvider.saveDocument(TextFileDocumentProvider.java:764)
	    at org.eclipse.ui.texteditor.AbstractTextEditor.performSave(AbstractTextEditor.java:5001)
	    at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSave(CompilationUnitEditor.java:1263)
	    at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(CompilationUnitEditor.java:1317)
	    at org.eclipse.jdt.internal.ui.refactoring.reorg.PasteAction$TextPaster$2.pasteCU(PasteAction.java:804)
	    at org.eclipse.jdt.internal.ui.refactoring.reorg.PasteAction$TextPaster$2.lambda$0(PasteAction.java:716)
	    at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:41)
	    at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	    at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2380)
	    at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2405)
	    at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5929)
	    at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5886)
	    at org.eclipse.jdt.internal.ui.refactoring.reorg.PasteAction$TextPaster$2.run(PasteAction.java:704)
	    at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	    at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	    at org.eclipse.ui.internal.WorkbenchWindow.lambda$7(WorkbenchWindow.java:2345)
	    at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	    at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2343)
	    at org.eclipse.ui.internal.progress.ProgressManager$RunnableWithStatus.run(ProgressManager.java:1123)
	    at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	    at org.eclipse.ui.internal.progress.ProgressManager.lambda$27(ProgressManager.java:1002)
	    at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:183)
	    at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	    at org.eclipse.swt.widgets.Display.syncExec(Display.java:4790)
	    at org.eclipse.ui.internal.progress.ProgressManager.runInUI(ProgressManager.java:1002)
	    at org.eclipse.jdt.internal.ui.refactoring.reorg.PasteAction$TextPaster.paste(PasteAction.java:1026)
	    at org.eclipse.jdt.internal.ui.refactoring.reorg.PasteAction.run(PasteAction.java:269)
	    at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:274)
	    at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:252)
	    at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	    at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	    at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	    at jdk.internal.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	    at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	    at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	    at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	    at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	    at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	    at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	    at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	    at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	    at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	    at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	    at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	    at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	    at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
	    at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	    at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	    at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	    at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1262)
	    at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	    at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	    at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	    at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	    at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	    at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1542)
	    at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4868)
	    at org.eclipse.swt.widgets.Tree.WM_CHAR(Tree.java:6064)
	    at org.eclipse.swt.widgets.Control.windowProc(Control.java:4746)
	    at org.eclipse.swt.widgets.Tree.windowProc(Tree.java:6059)
	    at org.eclipse.swt.widgets.Display.windowProc(Display.java:5026)
	    at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	    at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3643)
	    at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	    at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	    at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	    at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	    at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	    at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	    at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	    at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	    at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	    at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	    at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	    at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	    at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	    at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	    at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	    at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	    at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	    at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	    at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
    `

In the following there is a simple sample Java class to reproduce the error. Of course you have to enable the CleanUp in: Preferences>Java>""Code style"">""Clean Up"">New/Edit>""Java Feature"">""Java 8"">""Use Comparator.comparing()""

Sample code to reproduce:
```
import java.util.TreeSet;

public class Test {
	
	public class FooBar {
		public String value;
	}
	
	private final TreeSet<FooBar> foo = new TreeSet<>((a,b) -> b.value.compareTo(a.value));
	
}
```

With simple types it works perfectly, but if there are individual objects involed it crashes.

For now we are disabling this specific clean up. Please let us know if we can provide you with further information.

Many thanks in advance.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/174/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/175,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/175,eclipse.jdt.ui,1316839319,175,StringIndexOutOfBoundsException in SelectionConverter on undo in Java editor,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2022-07-25T13:26:24Z,2022-08-17T20:32:46Z,"I've got this stack below as error while undoing some temporary changes in java editor.
This is a regression from https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/68

I assume the patch doesn't handle lines containing only whitespace.

```
eclipse.buildId=4.25.0.I20220724-1800
java.version=17.0.3
java.vendor=Eclipse Adoptium
BootLoader constants: OS=linux, ARCH=x86_64, WS=gtk, NL=en_US
Command-line arguments:  -data /data/4x_platform_workspace -os linux -ws gtk -arch x86_64

org.eclipse.ui
Error
Mon Jul 25 15:21:32 CEST 2022
Unhandled event loop exception

java.lang.StringIndexOutOfBoundsException: String index out of range: 5
	at java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)
	at java.base/java.lang.String.charAt(String.java:1515)
	at org.eclipse.jdt.internal.ui.actions.SelectionConverter.getElementAtOffset(SelectionConverter.java:286)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditorBreadcrumb.getCurrentInput(JavaEditorBreadcrumb.java:814)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditorBreadcrumb.setInput(JavaEditorBreadcrumb.java:785)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.setBreadcrumbInput(JavaEditor.java:1999)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.selectionChanged(JavaEditor.java:2260)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor$EditorSelectionChangedListener.selectionChanged(JavaEditor.java:309)
	at org.eclipse.jface.text.TextViewer.firePostSelectionChanged(TextViewer.java:2718)
	at org.eclipse.jface.text.TextViewer.firePostSelectionChanged(TextViewer.java:2648)
	at org.eclipse.jface.text.TextViewer$2.run(TextViewer.java:2627)
	at org.eclipse.swt.widgets.Display.timerProc(Display.java:5689)
	at org.eclipse.swt.internal.gtk3.GTK3.gtk_main_iteration_do(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4474)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/175/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/175,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IoEYf,eclipse.jdt.ui,1218463263,175,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-08-17T20:32:46Z,2022-08-17T20:32:46Z,Verified for 4.25 M3 using I20220817-0600 build,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IoEYf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/178,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/178,eclipse.jdt.ui,1319139387,178,268 failures in content assist related tests on Mac since I20220726-1800,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2022-07-27T07:31:06Z,2022-07-29T06:08:32Z,"https://download.eclipse.org/eclipse/downloads/drops4/I20220726-1800/testResults.php
https://download.eclipse.org/eclipse/downloads/drops4/I20220726-1800/testresults/html/org.eclipse.jdt.ui.tests_ep425I-unit-mac64-java17_macosx.cocoa.x86_64_17.html

Affected: AdvancedQuickAssistTest, AssistQuickFixTest, JavadocQuickFixTest

I can't verify if that is sporadic issue, I don't have Mac.

In most cases there are no proposals found. Not sure what caused that, couldn't see related changes.

These two were merged in I20220726-1800 but seem not be related:
- https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/177
- https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/86","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/178/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/178,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Hdfy8,eclipse.jdt.ui,1198914748,178,NA,noopur2507,8749449,Noopur Gupta,,NA,2022-07-29T06:08:13Z,2022-07-29T06:08:13Z,Looks like these were sporadic. Didn't fail in the next builds and also running fine locally on mac now.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Hdfy8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/180,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/180,eclipse.jdt.ui,1320208912,180,Java Comment Templates: Template does not load after restart when using git_config variable,pbull-oracle,68705005,,,OPEN,2022-07-27T23:05:22Z,2024-08-07T07:04:29Z,"Environment:
- Red Hat Enterprise Linux Server release 7.4 (Maipo)
- Eclipse Platform 4.15.0.I20200305-0155
- Eclipse Java Development Tools 3.18.300.v20200305-0155
- Git integration for Eclipse 5.7.0.202003110725-r

Steps:
1. Create a Java project
2. Go to Window > Preferences > Java > Code Style > Code Templates
3. Ensure ""Automatically add comments for new methods, types, modules, packages and files"" is checked
4. Select ""Comments"" > ""Files"", and click ""Edit...""
5. In the Pattern field, insert text: /* myname:  ${name:git_config(user.name)} */
6. Click OK, then Apply and Close
7. Create a few new classes and check the generated comments
8. Restart Eclipse
9. Create a few new classes and check the generated comments
10. Go to Window > Preferences > Java > Code Style > Code Templates
11. Select ""Comments"" > ""Files"", and observe the contents of the Pattern field
12. Create a few new classes and observe the generated comments
13. Go to Window > Preferences > Java > Code Style > Code Templates
14. Select ""Comments"" > ""Files"", and observe the contents of the Pattern field

Expected results:
- Custom comment template is loaded and applied correctly at steps 7,9,11,12,14

Actual results:
- Default comment template (instead of custom template) is loaded/applied incorrectly at steps 9,11.
- Custom comment template is still loaded and applied correctly at steps 7,12,14.

I started noticing this problem somewhere between releases 4.8 and 4.13.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/180/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/180,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IgJYA,eclipse.jdt.ui,1216386560,180,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-08-16T09:24:45Z,2022-08-16T09:24:45Z,"Cool. I can reproduce on 4.25 head and latest nightly egit build. 

Looks like **creating the preferences page** is needed to properly initialize used templates.

This explains why we don't see anything in step 11 but on next time **without any preference change** the preferences page shows proper content.

@jjohnstn : not sure if it is interesting for you.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IgJYA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/180,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Hd6l8,eclipse.jdt.ui,2272766332,180,NA,cristalp,12525759,,,NA,2024-08-07T07:03:45Z,2024-08-07T07:03:45Z,"I'm experiencing the same problem with Eclipse 2023-12. I just wanted to add that the template is saved correctly into the file `org.eclipse.jdt.ui.prefs` and is not erased or changed when restarting. But obviously, that template (and only that template) can't be read on startup.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Hd6l8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/181,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/181,eclipse.jdt.ui,1320827428,181,"""Add unimplemented methods"" for enum value generates incorrect code",tsmaeder,13163770,Thomas Mäder,,CLOSED,2022-07-28T12:01:06Z,2022-08-02T09:02:43Z,"Consider the following snippet:

```
public enum EnumAbstract {
    
    Foo {
        int getNum() {
            return 20;
        }
    },
    Bar,
    
    abstract int getNum();
}
```

You'll get an error that the `getNum()` method i unimplemented on the `Bar` constant. When you execute the ""add unimplemented methods"" quickfix on that error, the resulting code does not compile:

```
public enum EnumAbstract {
    
    Foo {
        int getNum() {
            return 20;
        }
    },
    Bar,
    
 {
        @Override
        int getNum() {
            // TODO Auto-generated method stub
            return 0;
        }
    }    abstract int getNum();
}
```

Notice how the method body is inserted *after* the comman and it's missing a semicolon before the abstract method declaration.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/181/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/181,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5HqFxm,eclipse.jdt.ui,1202216038,181,NA,tsmaeder,13163770,Thomas Mäder,,NA,2022-08-02T09:02:43Z,2022-08-02T09:02:43Z,"The case with a ""comma"" actually is not correct code, so I'll chalk this one up to ""garbage in-garbage out"". Closing.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5HqFxm/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/182,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/182,eclipse.jdt.ui,1320870195,182,"""Add unimplemented methods"" does not work for some interfaces with defaults",tsmaeder,13163770,Thomas Mäder,,CLOSED,2022-07-28T12:38:41Z,2023-02-28T08:33:29Z,"Consider the following snippet:
```
interface I1 {
    default int gogo() {
        return 24;
    }
}

interface I2 extends I1 {
    int gogo();
}

public class Gugu implements I1, I2 {
}
```

You correctly get an error on ""Gugu"" saying that the class must implement the method `gogo()`, howerver, invoking the ""add unimplemented methods"" quick fix shows an error dialog and does not add the method.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/182/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/182,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Hadye,eclipse.jdt.ui,1198120094,182,NA,tsmaeder,13163770,Thomas Mäder,,NA,2022-07-28T13:10:13Z,2022-07-28T13:10:13Z,The relevant section of the spec would be https://docs.oracle.com/javase/specs/jls/se18/html/jls-9.html#jls-9.4.1,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Hadye/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/182,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WS0Lh,eclipse.jdt.ui,1447772897,182,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-02-28T08:33:28Z,2023-02-28T08:33:28Z,"I assume this can be closed now. If not, please feel free to reopen and re-set the milestone.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WS0Lh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/183,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/183,eclipse.jdt.ui,1322371443,183,"When opening Java files via serch results, I get ""This compilation unit is not on the build path of a Java project""",marco-brandizi,534529,Marco Brandizi,,CLOSED,2022-07-29T15:12:08Z,2023-02-06T15:43:02Z,"I do a search over an entire working set, containing multiple projects and multi-module Java projects (Project Explorer), then I click on a result and the respective file open, then I try to use some Java-specific feature, such as autocompletion, but I'm blown with a pop-up that says: ""This compilation unit is not on the build path of a Java project"".  

The file is actually part of a Java project, but Eclipse seems unable to recognise it when I come from the search results. If open the same file on the Project Explorer, everything works as usually.  

Moreover, if I try ""Show In"" -> ""Project Explorer"" from the editor opened via search results, it has no effect. Apparently, there is some lack of synch between the search UI and the Project Explorer, the project manager (the component that manages things like the project class path, I don't know if it has a specific name).  

Search results should open normally and the corresponding files should be editable as part of the project they are.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/183/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/183,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SkyBH,eclipse.jdt.ui,1385373767,183,NA,hborchardt,66408901,hborchardt,,NA,2023-01-17T12:46:44Z,2023-01-17T12:46:44Z,"Same for me, maybe I can add some details.

I have a folder structure like
- repository
  - projectA
  - projectB

and files are shown in the search result both as children of ""repository"" project, and as children of the ""project"" projects.
Opening the files by clicking the children of the ""repository"" project node gives the behavior as described.
Opening files by clicking the children of the ""project"" nodes opens the files fully-functional.

My workaround is to always open files from the project nodes and not the repository nodes, but it is easy to forget.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SkyBH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/183,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5UmLQv,eclipse.jdt.ui,1419293743,183,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-02-06T15:43:02Z,2023-02-06T15:43:02Z,"This is fixed via recent fixes to Platform text:  https://github.com/eclipse-platform/eclipse.platform.text/pull/144 and
https://github.com/eclipse-platform/eclipse.platform.text/pull/135","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5UmLQv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/184,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/184,eclipse.jdt.ui,1323019917,184,Content assist in nested try/catch block sometimes doesn't work,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2022-07-30T13:16:07Z,2022-08-03T15:43:38Z,"Given example below
```
import java.io.File;
import java.util.stream.Stream;

public class X {
	public static void main(String[] args) throws Exception {
		try {
			try {
				Stream<File> stream = Stream.of(new File("""")); // place cursor anywhere here
				System.out.println(stream);
			} catch (Exception e) {
			}
		} catch (Exception e) {
		}
	}
}
```
place cursor inside the first line inside inner try block and try to invoke `Ctrl+1` for content assist.
There will be only one ""No suggestions available"" entry shown and in the error log error below will be reported twice.

This is a regression from f42020ec00b26af423e9f055036e5cf19f0c3cdb 
```
java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)
	at java.base/java.util.Objects.checkIndex(Objects.java:359)
	at java.base/java.util.ArrayList.get(ArrayList.java:427)
	at org.eclipse.jdt.internal.ui.text.correction.QuickAssistProcessor.getTryWithResourceProposals(QuickAssistProcessor.java:3168)
	at org.eclipse.jdt.internal.ui.text.correction.QuickAssistProcessor.getTryWithResourceAssistProposals(QuickAssistProcessor.java:3093)
	at org.eclipse.jdt.internal.ui.text.correction.QuickAssistProcessor.getAssists(QuickAssistProcessor.java:371)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeAssistCollector.safeRun(JavaCorrectionProcessor.java:404)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.run(JavaCorrectionProcessor.java:341)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.process(JavaCorrectionProcessor.java:330)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectAssists(JavaCorrectionProcessor.java:506)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectProposals(JavaCorrectionProcessor.java:291)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.computeQuickAssistProposals(JavaCorrectionProcessor.java:247)
	at org.eclipse.jface.text.quickassist.QuickAssistAssistant$ContentAssistProcessor.computeCompletionProposals(QuickAssistAssistant.java:71)
	at org.eclipse.jface.text.contentassist.ContentAssistant$2.lambda$0(ContentAssistant.java:2063)
	at java.base/java.util.Collections$SingletonSet.forEach(Collections.java:4905)
	at org.eclipse.jface.text.contentassist.ContentAssistant$2.run(ContentAssistant.java:2062)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.ContentAssistant.computeCompletionProposals(ContentAssistant.java:2059)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.computeProposals(CompletionProposalPopup.java:577)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.lambda$0(CompletionProposalPopup.java:507)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:502)
	at org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1873)
	at org.eclipse.jface.text.quickassist.QuickAssistAssistant.showPossibleQuickAssists(QuickAssistAssistant.java:113)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionAssistant.showPossibleQuickAssists(JavaCorrectionAssistant.java:194)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:201)
	at org.eclipse.ui.texteditor.TextOperationAction.lambda$0(TextOperationAction.java:130)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.ui.texteditor.TextOperationAction.run(TextOperationAction.java:130)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor91.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1262)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmKeyDown(Widget.java:1798)
	at org.eclipse.swt.widgets.Control.WM_KEYDOWN(Control.java:5155)
	at org.eclipse.swt.widgets.Canvas.WM_KEYDOWN(Canvas.java:406)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4778)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5026)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3643)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/184/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/187,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/187,eclipse.jdt.ui,1323499770,187,Still freezes in AdornmentCalculationJob,iloveeclipse,964108,Andrey Loskutov,,OPEN,2022-07-31T15:59:11Z,2022-07-31T15:59:11Z,"After fixing bug 450663 ""worst"" freezes of ~30 seconds are gone, but I still observe ""smaller"" freezes in the range of 2 - 5 seconds on startup.

Here one of the freeze reports.

```
!ENTRY org.eclipse.ui.monitoring 4 0 2022-07-30 08:30:12.613
!MESSAGE UI freeze of 3,0s at 08:30:09.624
!SUBENTRY 1 org.eclipse.ui.monitoring 1 0 2022-07-30 08:30:12.613
!MESSAGE Sample at 08:30:10.303 (+0,679s)
Thread 'main' tid=1 (BLOCKED)
!STACK 0
Stack Trace
	at org.eclipse.core.internal.jobs.JobManager.schedule(JobManager.java:1321)
	at org.eclipse.core.internal.jobs.InternalJob.schedule(InternalJob.java:385)
	at org.eclipse.core.runtime.jobs.Job.schedule(Job.java:684)
	at org.eclipse.jdt.ui.ProblemsLabelDecorator$AdornmentCalculationJob.lambda$1(ProblemsLabelDecorator.java:466)
	at org.eclipse.jdt.ui.ProblemsLabelDecorator$AdornmentCalculationJob$$Lambda$534/0x0000000801221500.apply(Unknown Source)
	at java.base@17.0.2/java.util.HashMap.compute(HashMap.java:1316)
	at org.eclipse.jdt.ui.ProblemsLabelDecorator$AdornmentCalculationJob.schedule(ProblemsLabelDecorator.java:461)
	at org.eclipse.jdt.ui.ProblemsLabelDecorator$AdornmentCacheManager.scheduleTask(ProblemsLabelDecorator.java:364)
	at org.eclipse.jdt.ui.ProblemsLabelDecorator.computeContainerAdornmentFlags(ProblemsLabelDecorator.java:557)
	at org.eclipse.jdt.ui.ProblemsLabelDecorator.computeAdornmentFlags(ProblemsLabelDecorator.java:218)
	at org.eclipse.jdt.internal.ui.viewsupport.TreeHierarchyLayoutProblemsDecorator.computeAdornmentFlags(TreeHierarchyLayoutProblemsDecorator.java:69)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerProblemsDecorator.computeAdornmentFlags(PackageExplorerProblemsDecorator.java:43)
	at org.eclipse.jdt.ui.ProblemsLabelDecorator.decorateImage(ProblemsLabelDecorator.java:193)
	at org.eclipse.jdt.internal.ui.viewsupport.JavaUILabelProvider.decorateImage(JavaUILabelProvider.java:136)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerLabelProvider.getImage(PackageExplorerLabelProvider.java:137)
	at org.eclipse.jface.viewers.DelegatingStyledCellLabelProvider.getImage(DelegatingStyledCellLabelProvider.java:198)
	at org.eclipse.jface.viewers.DecoratingStyledCellLabelProvider.getImage(DecoratingStyledCellLabelProvider.java:171)
	at org.eclipse.jface.viewers.DelegatingStyledCellLabelProvider.update(DelegatingStyledCellLabelProvider.java:124)
	at org.eclipse.jface.viewers.DecoratingStyledCellLabelProvider.update(DecoratingStyledCellLabelProvider.java:134)
	at org.eclipse.jface.viewers.ViewerColumn.refresh(ViewerColumn.java:144)
	at org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:970)
	at org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run(AbstractTreeViewer.java:126)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.JFaceUtil$$Lambda$114/0x0000000800db3c40.run(Unknown Source)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:1048)
	at org.eclipse.jface.viewers.StructuredViewer$UpdateItemSafeRunnable.run(StructuredViewer.java:427)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.JFaceUtil$$Lambda$114/0x0000000800db3c40.run(Unknown Source)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.StructuredViewer.updateItem(StructuredViewer.java:2109)
	at org.eclipse.jface.viewers.StructuredViewer.internalUpdate(StructuredViewer.java:2092)
	at org.eclipse.jface.viewers.StructuredViewer.update(StructuredViewer.java:2033)
	at org.eclipse.jface.viewers.ColumnViewer.update(ColumnViewer.java:545)
	at org.eclipse.jface.viewers.StructuredViewer.update(StructuredViewer.java:1977)
	at org.eclipse.jface.viewers.StructuredViewer.handleLabelProviderChanged(StructuredViewer.java:1156)
	at org.eclipse.jdt.internal.ui.viewsupport.ProblemTreeViewer.handleLabelProviderChanged(ProblemTreeViewer.java:206)
	at org.eclipse.jface.viewers.ContentViewer$1.labelProviderChanged(ContentViewer.java:95)
	at org.eclipse.jface.viewers.BaseLabelProvider$1.run(BaseLabelProvider.java:75)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.JFaceUtil$$Lambda$114/0x0000000800db3c40.run(Unknown Source)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.BaseLabelProvider.fireLabelProviderChanged(BaseLabelProvider.java:72)
	at org.eclipse.jface.viewers.DecoratingStyledCellLabelProvider$$Lambda$509/0x00000008011b5e18.labelProviderChanged(Unknown Source)
	at org.eclipse.ui.internal.decorators.DecoratorManager.lambda$0(DecoratorManager.java:351)
	at org.eclipse.ui.internal.decorators.DecoratorManager$$Lambda$1155/0x00000008016a60a8.run(Unknown Source)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.DecoratorManager.fireListener(DecoratorManager.java:351)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$3.runInUIThread(DecorationScheduler.java:560)
	at org.eclipse.ui.progress.UIJob.lambda$0(UIJob.java:95)
	at org.eclipse.ui.progress.UIJob$$Lambda$1005/0x00000008015e0688.run(Unknown Source)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4043)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3648)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.ui.internal.Workbench$$Lambda$163/0x0000000800dda308.run(Unknown Source)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base@17.0.2/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@17.0.2/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base@17.0.2/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@17.0.2/java.lang.reflect.Method.invoke(Method.java:568)
	at app//org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at app//org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at app//org.eclipse.equinox.launcher.Main.run(Main.java:1467)
!SUBENTRY 1 org.eclipse.ui.monitoring 1 0 2022-07-30 08:30:12.613
!MESSAGE Sample at 08:30:10.956 (+0,653s)
Thread 'main' tid=1 (BLOCKED)
!STACK 0
Stack Trace
	at org.eclipse.core.internal.jobs.JobManager.schedule(JobManager.java:1321)
	at org.eclipse.core.internal.jobs.InternalJob.schedule(InternalJob.java:385)
	at org.eclipse.core.runtime.jobs.Job.schedule(Job.java:684)
	at org.eclipse.jdt.ui.ProblemsLabelDecorator$AdornmentCalculationJob.lambda$1(ProblemsLabelDecorator.java:466)
	at org.eclipse.jdt.ui.ProblemsLabelDecorator$AdornmentCalculationJob$$Lambda$534/0x0000000801221500.apply(Unknown Source)
	at java.base@17.0.2/java.util.HashMap.compute(HashMap.java:1316)
	at org.eclipse.jdt.ui.ProblemsLabelDecorator$AdornmentCalculationJob.schedule(ProblemsLabelDecorator.java:461)
	at org.eclipse.jdt.ui.ProblemsLabelDecorator$AdornmentCacheManager.scheduleTask(ProblemsLabelDecorator.java:364)
	at org.eclipse.jdt.ui.ProblemsLabelDecorator.computeContainerAdornmentFlags(ProblemsLabelDecorator.java:557)
	at org.eclipse.jdt.ui.ProblemsLabelDecorator.computeAdornmentFlags(ProblemsLabelDecorator.java:218)
	at org.eclipse.jdt.internal.ui.viewsupport.TreeHierarchyLayoutProblemsDecorator.computeAdornmentFlags(TreeHierarchyLayoutProblemsDecorator.java:69)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerProblemsDecorator.computeAdornmentFlags(PackageExplorerProblemsDecorator.java:43)
	at org.eclipse.jdt.ui.ProblemsLabelDecorator.decorateImage(ProblemsLabelDecorator.java:193)
	at org.eclipse.jdt.internal.ui.viewsupport.JavaUILabelProvider.decorateImage(JavaUILabelProvider.java:136)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerLabelProvider.getImage(PackageExplorerLabelProvider.java:137)
	at org.eclipse.jface.viewers.DelegatingStyledCellLabelProvider.getImage(DelegatingStyledCellLabelProvider.java:198)
	at org.eclipse.jface.viewers.DecoratingStyledCellLabelProvider.getImage(DecoratingStyledCellLabelProvider.java:171)
	at org.eclipse.jface.viewers.DelegatingStyledCellLabelProvider.update(DelegatingStyledCellLabelProvider.java:124)
	at org.eclipse.jface.viewers.DecoratingStyledCellLabelProvider.update(DecoratingStyledCellLabelProvider.java:134)
	at org.eclipse.jface.viewers.ViewerColumn.refresh(ViewerColumn.java:144)
	at org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:970)
	at org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run(AbstractTreeViewer.java:126)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.JFaceUtil$$Lambda$114/0x0000000800db3c40.run(Unknown Source)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:1048)
	at org.eclipse.jface.viewers.StructuredViewer$UpdateItemSafeRunnable.run(StructuredViewer.java:427)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.JFaceUtil$$Lambda$114/0x0000000800db3c40.run(Unknown Source)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.StructuredViewer.updateItem(StructuredViewer.java:2109)
	at org.eclipse.jface.viewers.StructuredViewer.internalUpdate(StructuredViewer.java:2092)
	at org.eclipse.jface.viewers.StructuredViewer.update(StructuredViewer.java:2033)
	at org.eclipse.jface.viewers.ColumnViewer.update(ColumnViewer.java:545)
	at org.eclipse.jface.viewers.StructuredViewer.update(StructuredViewer.java:1977)
	at org.eclipse.jface.viewers.StructuredViewer.handleLabelProviderChanged(StructuredViewer.java:1156)
	at org.eclipse.jdt.internal.ui.viewsupport.ProblemTreeViewer.handleLabelProviderChanged(ProblemTreeViewer.java:206)
	at org.eclipse.jface.viewers.ContentViewer$1.labelProviderChanged(ContentViewer.java:95)
	at org.eclipse.jface.viewers.BaseLabelProvider$1.run(BaseLabelProvider.java:75)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.JFaceUtil$$Lambda$114/0x0000000800db3c40.run(Unknown Source)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.BaseLabelProvider.fireLabelProviderChanged(BaseLabelProvider.java:72)
	at org.eclipse.jface.viewers.DecoratingStyledCellLabelProvider$$Lambda$509/0x00000008011b5e18.labelProviderChanged(Unknown Source)
	at org.eclipse.ui.internal.decorators.DecoratorManager.lambda$0(DecoratorManager.java:351)
	at org.eclipse.ui.internal.decorators.DecoratorManager$$Lambda$1155/0x00000008016a60a8.run(Unknown Source)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.DecoratorManager.fireListener(DecoratorManager.java:351)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$3.runInUIThread(DecorationScheduler.java:560)
	at org.eclipse.ui.progress.UIJob.lambda$0(UIJob.java:95)
	at org.eclipse.ui.progress.UIJob$$Lambda$1005/0x00000008015e0688.run(Unknown Source)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4043)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3648)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.ui.internal.Workbench$$Lambda$163/0x0000000800dda308.run(Unknown Source)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base@17.0.2/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@17.0.2/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base@17.0.2/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@17.0.2/java.lang.reflect.Method.invoke(Method.java:568)
	at app//org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at app//org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at app//org.eclipse.equinox.launcher.Main.run(Main.java:1467)
!SUBENTRY 1 org.eclipse.ui.monitoring 1 0 2022-07-30 08:30:12.613
!MESSAGE Sample at 08:30:12.313 (+1,357s)
Thread 'main' tid=1 (BLOCKED)
!STACK 0
Stack Trace
	at org.eclipse.core.internal.jobs.JobManager.schedule(JobManager.java:1321)
	at org.eclipse.core.internal.jobs.InternalJob.schedule(InternalJob.java:385)
	at org.eclipse.core.runtime.jobs.Job.schedule(Job.java:684)
	at org.eclipse.jdt.ui.ProblemsLabelDecorator$AdornmentCalculationJob.lambda$1(ProblemsLabelDecorator.java:466)
	at org.eclipse.jdt.ui.ProblemsLabelDecorator$AdornmentCalculationJob$$Lambda$534/0x0000000801221500.apply(Unknown Source)
	at java.base@17.0.2/java.util.HashMap.compute(HashMap.java:1316)
	at org.eclipse.jdt.ui.ProblemsLabelDecorator$AdornmentCalculationJob.schedule(ProblemsLabelDecorator.java:461)
	at org.eclipse.jdt.ui.ProblemsLabelDecorator$AdornmentCacheManager.scheduleTask(ProblemsLabelDecorator.java:364)
	at org.eclipse.jdt.ui.ProblemsLabelDecorator.computeContainerAdornmentFlags(ProblemsLabelDecorator.java:557)
	at org.eclipse.jdt.ui.ProblemsLabelDecorator.computeAdornmentFlags(ProblemsLabelDecorator.java:218)
	at org.eclipse.jdt.internal.ui.viewsupport.TreeHierarchyLayoutProblemsDecorator.computeAdornmentFlags(TreeHierarchyLayoutProblemsDecorator.java:69)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerProblemsDecorator.computeAdornmentFlags(PackageExplorerProblemsDecorator.java:43)
	at org.eclipse.jdt.ui.ProblemsLabelDecorator.decorateImage(ProblemsLabelDecorator.java:193)
	at org.eclipse.jdt.internal.ui.viewsupport.JavaUILabelProvider.decorateImage(JavaUILabelProvider.java:136)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerLabelProvider.getImage(PackageExplorerLabelProvider.java:137)
	at org.eclipse.jface.viewers.DelegatingStyledCellLabelProvider.getImage(DelegatingStyledCellLabelProvider.java:198)
	at org.eclipse.jface.viewers.DecoratingStyledCellLabelProvider.getImage(DecoratingStyledCellLabelProvider.java:171)
	at org.eclipse.jface.viewers.DelegatingStyledCellLabelProvider.update(DelegatingStyledCellLabelProvider.java:124)
	at org.eclipse.jface.viewers.DecoratingStyledCellLabelProvider.update(DecoratingStyledCellLabelProvider.java:134)
	at org.eclipse.jface.viewers.ViewerColumn.refresh(ViewerColumn.java:144)
	at org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:970)
	at org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run(AbstractTreeViewer.java:126)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.JFaceUtil$$Lambda$114/0x0000000800db3c40.run(Unknown Source)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:1048)
	at org.eclipse.jface.viewers.StructuredViewer$UpdateItemSafeRunnable.run(StructuredViewer.java:427)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.JFaceUtil$$Lambda$114/0x0000000800db3c40.run(Unknown Source)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.StructuredViewer.updateItem(StructuredViewer.java:2109)
	at org.eclipse.jface.viewers.StructuredViewer.internalUpdate(StructuredViewer.java:2092)
	at org.eclipse.jface.viewers.StructuredViewer.update(StructuredViewer.java:2033)
	at org.eclipse.jface.viewers.ColumnViewer.update(ColumnViewer.java:545)
	at org.eclipse.jface.viewers.StructuredViewer.update(StructuredViewer.java:1977)
	at org.eclipse.jface.viewers.StructuredViewer.handleLabelProviderChanged(StructuredViewer.java:1156)
	at org.eclipse.jdt.internal.ui.viewsupport.ProblemTreeViewer.handleLabelProviderChanged(ProblemTreeViewer.java:206)
	at org.eclipse.jface.viewers.ContentViewer$1.labelProviderChanged(ContentViewer.java:95)
	at org.eclipse.jface.viewers.BaseLabelProvider$1.run(BaseLabelProvider.java:75)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.JFaceUtil$$Lambda$114/0x0000000800db3c40.run(Unknown Source)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.BaseLabelProvider.fireLabelProviderChanged(BaseLabelProvider.java:72)
	at org.eclipse.jface.viewers.DecoratingStyledCellLabelProvider$$Lambda$509/0x00000008011b5e18.labelProviderChanged(Unknown Source)
	at org.eclipse.ui.internal.decorators.DecoratorManager.lambda$0(DecoratorManager.java:351)
	at org.eclipse.ui.internal.decorators.DecoratorManager$$Lambda$1155/0x00000008016a60a8.run(Unknown Source)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.DecoratorManager.fireListener(DecoratorManager.java:351)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$3.runInUIThread(DecorationScheduler.java:560)
	at org.eclipse.ui.progress.UIJob.lambda$0(UIJob.java:95)
	at org.eclipse.ui.progress.UIJob$$Lambda$1005/0x00000008015e0688.run(Unknown Source)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4043)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3648)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.ui.internal.Workbench$$Lambda$163/0x0000000800dda308.run(Unknown Source)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base@17.0.2/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@17.0.2/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base@17.0.2/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@17.0.2/java.lang.reflect.Method.invoke(Method.java:568)
	at app//org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at app//org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at app//org.eclipse.equinox.launcher.Main.run(Main.java:1467)
!SUBENTRY 2 org.eclipse.ui.monitoring 1 0 2022-07-30 08:30:12.613
!MESSAGE Thread 'Common-Cleaner' tid=13 (TIMED_WAITING)
Waiting for: java.lang.ref.ReferenceQueue$Lock@10227f87
!STACK 0
Stack Trace
	at java.base@17.0.2/java.lang.Object.wait(Native Method)
	at java.base@17.0.2/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:155)
	at java.base@17.0.2/jdk.internal.ref.CleanerImpl.run(CleanerImpl.java:140)
	at java.base@17.0.2/java.lang.Thread.run(Thread.java:833)
	at java.base@17.0.2/jdk.internal.misc.InnocuousThread.run(InnocuousThread.java:162)
!SUBENTRY 2 org.eclipse.ui.monitoring 1 0 2022-07-30 08:30:12.613
!MESSAGE Thread 'Active Thread: Equinox Container: 0bcf99e6-7c03-419d-8372-93e9069d23c2' tid=16 (TIMED_WAITING)
Waiting for: java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject@49edde7c
!STACK 0
Stack Trace
	at java.base@17.0.2/jdk.internal.misc.Unsafe.park(Native Method)
	at java.base@17.0.2/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
	at java.base@17.0.2/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
	at java.base@17.0.2/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
	at java.base@17.0.2/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
	at java.base@17.0.2/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
	at java.base@17.0.2/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
	at java.base@17.0.2/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base@17.0.2/java.lang.Thread.run(Thread.java:833)
!SUBENTRY 2 org.eclipse.ui.monitoring 1 0 2022-07-30 08:30:12.613
!MESSAGE Thread 'SCR Component Actor' tid=20 (WAITING)
Waiting for: java.util.LinkedList@0d8b9f4c
!STACK 0
Stack Trace
	at java.base@17.0.2/java.lang.Object.wait(Native Method)
	at java.base@17.0.2/java.lang.Object.wait(Object.java:338)
	at org.apache.felix.scr.impl.ComponentActorThread.run(ComponentActorThread.java:83)
	at java.base@17.0.2/java.lang.Thread.run(Thread.java:833)
!SUBENTRY 2 org.eclipse.ui.monitoring 1 0 2022-07-30 08:30:12.613
!MESSAGE Thread 'EMF Reference Cleaner' tid=22 (WAITING)
Waiting for: java.lang.ref.ReferenceQueue$Lock@2ab2aebf
!STACK 0
Stack Trace
	at java.base@17.0.2/java.lang.Object.wait(Native Method)
	at java.base@17.0.2/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:155)
	at java.base@17.0.2/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:176)
	at org.eclipse.emf.common.util.CommonUtil$1ReferenceClearingQueuePollingThread.run(CommonUtil.java:70)
!SUBENTRY 2 org.eclipse.ui.monitoring 1 0 2022-07-30 08:30:12.613
!MESSAGE Thread 'Worker-JM' tid=24 (WAITING)
Waiting for: java.util.ArrayList@0a21042a
!STACK 0
Stack Trace
	at java.base@17.0.2/java.lang.Object.wait(Native Method)
	at org.eclipse.core.internal.jobs.InternalWorker.run(InternalWorker.java:61)
!SUBENTRY 2 org.eclipse.ui.monitoring 1 0 2022-07-30 08:30:12.613
!MESSAGE Thread 'Gogo shell' tid=26 (WAITING)
Waiting for: java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject@34734e8f
!STACK 0
Stack Trace
	at java.base@17.0.2/jdk.internal.misc.Unsafe.park(Native Method)
	at java.base@17.0.2/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
	at java.base@17.0.2/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
	at java.base@17.0.2/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
	at java.base@17.0.2/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
	at java.base@17.0.2/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
	at java.base@17.0.2/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
	at java.base@17.0.2/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
	at java.base@17.0.2/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
	at java.base@17.0.2/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base@17.0.2/java.lang.Thread.run(Thread.java:833)
!SUBENTRY 2 org.eclipse.ui.monitoring 1 0 2022-07-30 08:30:12.613
!MESSAGE Thread 'Git Repository Closer' tid=30 (WAITING)
Waiting for: java.lang.ref.ReferenceQueue$Lock@5a2b4be1
!STACK 0
Stack Trace
	at java.base@17.0.2/java.lang.Object.wait(Native Method)
	at java.base@17.0.2/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:155)
	at java.base@17.0.2/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:176)
	at org.eclipse.egit.core.RepositoryCache$Closer.run(RepositoryCache.java:453)
!SUBENTRY 2 org.eclipse.ui.monitoring 1 0 2022-07-30 08:30:12.613
!MESSAGE Thread 'Java indexing' tid=33 (WAITING)
Waiting for: org.eclipse.jdt.internal.core.search.indexing.IndexManager@76003e76
!STACK 0
Stack Trace
	at java.base@17.0.2/java.lang.Object.wait(Native Method)
	at java.base@17.0.2/java.lang.Object.wait(Object.java:338)
	at org.eclipse.jdt.internal.core.search.processing.JobManager.run(JobManager.java:452)
	at java.base@17.0.2/java.lang.Thread.run(Thread.java:833)
!SUBENTRY 2 org.eclipse.ui.monitoring 1 0 2022-07-30 08:30:12.613
!MESSAGE Thread 'ForkJoinPool.commonPool-worker-1' tid=36 (WAITING)
Waiting for: java.util.concurrent.ForkJoinPool@0d9d9052
!STACK 0
Stack Trace
	at java.base@17.0.2/jdk.internal.misc.Unsafe.park(Native Method)
	at java.base@17.0.2/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
	at java.base@17.0.2/java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1724)
	at java.base@17.0.2/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1623)
	at java.base@17.0.2/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
!SUBENTRY 2 org.eclipse.ui.monitoring 1 0 2022-07-30 08:30:12.613
!MESSAGE Thread 'ForkJoinPool.commonPool-worker-2' tid=37 (WAITING)
Waiting for: java.util.concurrent.ForkJoinPool@0d9d9052
!STACK 0
Stack Trace
	at java.base@17.0.2/jdk.internal.misc.Unsafe.park(Native Method)
	at java.base@17.0.2/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
	at java.base@17.0.2/java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1724)
	at java.base@17.0.2/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1623)
	at java.base@17.0.2/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
!SUBENTRY 2 org.eclipse.ui.monitoring 1 0 2022-07-30 08:30:12.613
!MESSAGE Thread 'ForkJoinPool.commonPool-worker-3' tid=38 (TIMED_WAITING)
Waiting for: java.util.concurrent.ForkJoinPool@0d9d9052
!STACK 0
Stack Trace
	at java.base@17.0.2/jdk.internal.misc.Unsafe.park(Native Method)
	at java.base@17.0.2/java.util.concurrent.locks.LockSupport.parkUntil(LockSupport.java:410)
	at java.base@17.0.2/java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1726)
	at java.base@17.0.2/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1623)
	at java.base@17.0.2/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
!SUBENTRY 2 org.eclipse.ui.monitoring 1 0 2022-07-30 08:30:12.613
!MESSAGE Thread 'ForkJoinPool.commonPool-worker-4' tid=39 (WAITING)
Waiting for: java.util.concurrent.ForkJoinPool@0d9d9052
!STACK 0
Stack Trace
	at java.base@17.0.2/jdk.internal.misc.Unsafe.park(Native Method)
	at java.base@17.0.2/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
	at java.base@17.0.2/java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1724)
	at java.base@17.0.2/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1623)
	at java.base@17.0.2/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
!SUBENTRY 2 org.eclipse.ui.monitoring 1 0 2022-07-30 08:30:12.613
!MESSAGE Thread 'ForkJoinPool.commonPool-worker-5' tid=40 (WAITING)
Waiting for: java.util.concurrent.ForkJoinPool@0d9d9052
!STACK 0
Stack Trace
	at java.base@17.0.2/jdk.internal.misc.Unsafe.park(Native Method)
	at java.base@17.0.2/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
	at java.base@17.0.2/java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1724)
	at java.base@17.0.2/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1623)
	at java.base@17.0.2/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
!SUBENTRY 2 org.eclipse.ui.monitoring 1 0 2022-07-30 08:30:12.613
!MESSAGE Thread 'ForkJoinPool.commonPool-worker-6' tid=41 (WAITING)
Waiting for: java.util.concurrent.ForkJoinPool@0d9d9052
!STACK 0
Stack Trace
	at java.base@17.0.2/jdk.internal.misc.Unsafe.park(Native Method)
	at java.base@17.0.2/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
	at java.base@17.0.2/java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1724)
	at java.base@17.0.2/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1623)
	at java.base@17.0.2/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
!SUBENTRY 2 org.eclipse.ui.monitoring 1 0 2022-07-30 08:30:12.613
!MESSAGE Thread 'ForkJoinPool.commonPool-worker-7' tid=42 (WAITING)
Waiting for: java.util.concurrent.ForkJoinPool@0d9d9052
!STACK 0
Stack Trace
	at java.base@17.0.2/jdk.internal.misc.Unsafe.park(Native Method)
	at java.base@17.0.2/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
	at java.base@17.0.2/java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1724)
	at java.base@17.0.2/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1623)
	at java.base@17.0.2/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
!SUBENTRY 2 org.eclipse.ui.monitoring 1 0 2022-07-30 08:30:12.613
!MESSAGE Thread 'org.eclipse.jdt.internal.ui.text.JavaReconciler' tid=43 (TIMED_WAITING)
Waiting for: org.eclipse.jface.text.reconciler.DirtyRegionQueue@0d69b643
!STACK 0
Stack Trace
	at java.base@17.0.2/java.lang.Object.wait(Native Method)
	at org.eclipse.jface.text.reconciler.AbstractReconciler.delay(AbstractReconciler.java:572)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:181)
!SUBENTRY 2 org.eclipse.ui.monitoring 1 0 2022-07-30 08:30:12.613
!MESSAGE Thread 'pool-1-thread-1' tid=48 (WAITING)
Waiting for: java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject@6af292a6
!STACK 0
Stack Trace
	at java.base@17.0.2/jdk.internal.misc.Unsafe.park(Native Method)
	at java.base@17.0.2/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
	at java.base@17.0.2/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
	at java.base@17.0.2/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
	at java.base@17.0.2/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
	at java.base@17.0.2/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
	at java.base@17.0.2/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
	at java.base@17.0.2/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
	at java.base@17.0.2/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
	at java.base@17.0.2/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base@17.0.2/java.lang.Thread.run(Thread.java:833)
!SUBENTRY 2 org.eclipse.ui.monitoring 1 0 2022-07-30 08:30:12.613
!MESSAGE Thread 'pool-2-thread-1' tid=49 (WAITING)
Waiting for: java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject@0b8c90aa
!STACK 0
Stack Trace
	at java.base@17.0.2/jdk.internal.misc.Unsafe.park(Native Method)
	at java.base@17.0.2/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
	at java.base@17.0.2/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
	at java.base@17.0.2/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
	at java.base@17.0.2/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
	at java.base@17.0.2/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
	at java.base@17.0.2/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
	at java.base@17.0.2/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
	at java.base@17.0.2/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
	at java.base@17.0.2/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base@17.0.2/java.lang.Thread.run(Thread.java:833)
!SUBENTRY 2 org.eclipse.ui.monitoring 1 0 2022-07-30 08:30:12.613
!MESSAGE Thread 'YJP-Plugin-RequestListener' tid=63 (RUNNABLE)
Holding: java.util.concurrent.locks.ReentrantLock$NonfairSync@4b17f436
!STACK 0
Stack Trace
	at java.base@17.0.2/sun.nio.ch.Net.accept(Native Method)
	at java.base@17.0.2/sun.nio.ch.NioSocketImpl.accept(NioSocketImpl.java:755)
	at java.base@17.0.2/java.net.ServerSocket.implAccept(ServerSocket.java:675)
	at java.base@17.0.2/java.net.ServerSocket.platformImplAccept(ServerSocket.java:641)
	at java.base@17.0.2/java.net.ServerSocket.implAccept(ServerSocket.java:617)
	at java.base@17.0.2/java.net.ServerSocket.implAccept(ServerSocket.java:574)
	at java.base@17.0.2/java.net.ServerSocket.accept(ServerSocket.java:532)
	at com.yourkit.z.d.a(a:53)
	at com.yourkit.z.d$$Lambda$1033/0x00000008016043f8.run(Unknown Source)
	at java.base@17.0.2/java.lang.Thread.run(Thread.java:833)
!SUBENTRY 2 org.eclipse.ui.monitoring 1 0 2022-07-30 08:30:12.613
!MESSAGE Thread 'Worker-13' tid=65 (RUNNABLE)
!STACK 0
Stack Trace
	at org.eclipse.core.internal.jobs.InternalJob.addLast(InternalJob.java:175)
	at org.eclipse.core.internal.jobs.JobManager.nextJob(JobManager.java:1170)
	at org.eclipse.core.internal.jobs.JobManager.startJob(JobManager.java:1681)
	at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)
!SUBENTRY 2 org.eclipse.ui.monitoring 1 0 2022-07-30 08:30:12.613
!MESSAGE Thread 'Worker-21' tid=73 (BLOCKED)
Waiting for: java.lang.Object@7fc2c4ae lock owner='Worker-13' tid=65
!STACK 0
Stack Trace
	at org.eclipse.core.internal.jobs.JobManager.startJob(JobManager.java:1691)
	at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)
!SUBENTRY 2 org.eclipse.ui.monitoring 1 0 2022-07-30 08:30:12.613
!MESSAGE Thread 'Worker-39: Java problems decoration calculation...' tid=91 (BLOCKED)
Waiting for: java.util.LinkedHashMap@1901520e lock owner='main' tid=1
!STACK 0
Stack Trace
	at org.eclipse.jdt.ui.ProblemsLabelDecorator$AdornmentCalculationJob.poll(ProblemsLabelDecorator.java:449)
	at org.eclipse.jdt.ui.ProblemsLabelDecorator$AdornmentCalculationJob.run(ProblemsLabelDecorator.java:408)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SUBENTRY 2 org.eclipse.ui.monitoring 1 0 2022-07-30 08:30:12.613
!MESSAGE Thread 'pool-3-thread-1' tid=798 (WAITING)
Waiting for: java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject@612c9058
!STACK 0
Stack Trace
	at java.base@17.0.2/jdk.internal.misc.Unsafe.park(Native Method)
	at java.base@17.0.2/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
	at java.base@17.0.2/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
	at java.base@17.0.2/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
	at java.base@17.0.2/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
	at java.base@17.0.2/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
	at java.base@17.0.2/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
	at java.base@17.0.2/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
	at java.base@17.0.2/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
	at java.base@17.0.2/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base@17.0.2/java.lang.Thread.run(Thread.java:833)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/187/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/189,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/189,eclipse.jdt.ui,1324125288,189,"""No target edit provided"" on ""Use String.join()"" cleanup",carstenartur,3164220,Carsten Hammer,,CLOSED,2022-08-01T09:37:02Z,2022-09-14T01:52:21Z,"This happens running on pde org.eclipse.pde.internal.core.project.ProjectModifyOperation.java
![image](https://user-images.githubusercontent.com/3164220/182117237-afbe24e1-bb71-4c58-84b3-4a0193c7a3bb.png)

![image](https://user-images.githubusercontent.com/3164220/182117452-1291d578-8c91-43fe-a84f-49469a55d202.png)

!ENTRY org.eclipse.jface 4 2 2022-08-01 11:23:13.597
!MESSAGE Problems occurred when invoking code from plug-in: ""org.eclipse.jface"".
!STACK 0
org.eclipse.text.edits.MalformedTreeException: No target edit provided.
	at org.eclipse.text.edits.MoveSourceEdit.performConsistencyCheck(MoveSourceEdit.java:207)
	at org.eclipse.text.edits.TextEdit.traverseConsistencyCheck(TextEdit.java:876)
	at org.eclipse.text.edits.MoveSourceEdit.traverseConsistencyCheck(MoveSourceEdit.java:181)
	at org.eclipse.text.edits.TextEdit.traverseConsistencyCheck(TextEdit.java:872)
	at org.eclipse.text.edits.TextEdit.traverseConsistencyCheck(TextEdit.java:872)
	at org.eclipse.text.edits.TextEdit.traverseConsistencyCheck(TextEdit.java:872)
	at org.eclipse.text.edits.TextEdit.traverseConsistencyCheck(TextEdit.java:872)
	at org.eclipse.text.edits.TextEditProcessor.checkIntegrityDo(TextEditProcessor.java:178)
	at org.eclipse.text.edits.TextEdit.dispatchCheckIntegrity(TextEdit.java:746)
	at org.eclipse.text.edits.TextEditProcessor.performEdits(TextEditProcessor.java:153)
	at org.eclipse.ltk.core.refactoring.TextChange.getPreviewDocument(TextChange.java:527)
	at org.eclipse.ltk.core.refactoring.TextChange.getPreviewDocument(TextChange.java:401)
	at org.eclipse.ltk.core.refactoring.TextChange.getPreviewContent(TextChange.java:407)
	at org.eclipse.ltk.internal.ui.refactoring.TextEditChangePreviewViewer.setInput(TextEditChangePreviewViewer.java:215)
	at org.eclipse.ltk.internal.ui.refactoring.AbstractChangeNode.feedInput(AbstractChangeNode.java:108)
	at org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.showPreview(PreviewWizardPage.java:624)
	at org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.lambda$0(PreviewWizardPage.java:601)
	at org.eclipse.jface.viewers.Viewer$1.run(Viewer.java:151)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:148)
	at org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:2130)
	at org.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:1660)
	at org.eclipse.jface.viewers.TreeViewer.setSelection(TreeViewer.java:1090)
	at org.eclipse.jface.viewers.Viewer.setSelection(Viewer.java:376)
	at org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.setVisible(PreviewWizardPage.java:526)
	at org.eclipse.jface.wizard.WizardDialog.updateForPage(WizardDialog.java:1252)
	at org.eclipse.jface.wizard.WizardDialog.lambda$3(WizardDialog.java:1222)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jface.wizard.WizardDialog.showPage(WizardDialog.java:1222)
	at org.eclipse.jface.wizard.WizardDialog.nextPressed(WizardDialog.java:917)
	at org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:468)
	at org.eclipse.jface.dialogs.Dialog.lambda$0(Dialog.java:619)
	at org.eclipse.swt.events.SelectionListener$1.widgetSelected(SelectionListener.java:84)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4251)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4068)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3645)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.lambda$0(RefactoringWizardOpenOperation.java:190)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:209)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:126)
	at org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:41)
	at org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter.startCleanupRefactoring(RefactoringExecutionStarter.java:257)
	at org.eclipse.jdt.internal.ui.actions.AllCleanUpsAction.performRefactoring(AllCleanUpsAction.java:71)
	at org.eclipse.jdt.internal.ui.actions.CleanUpAction.runOnMultiple(CleanUpAction.java:215)
	at org.eclipse.jdt.internal.ui.actions.CleanUpAction.run(CleanUpAction.java:119)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:274)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:252)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4251)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4068)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3645)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

The code causing issues is
````
			String[] shorts = description.getLaunchShortcuts();
			if (shorts == null || shorts.length == 0) {
				pref.remove(ICoreConstants.MANIFEST_LAUNCH_SHORTCUTS); // use defaults
			} else {
				StringBuilder value = new StringBuilder();
				for (int i = 0; i < shorts.length; i++) {
					if (i > 0) {
						value.append(',');
					}
					value.append(shorts[i]);
				}
				pref.put(ICoreConstants.MANIFEST_LAUNCH_SHORTCUTS, value.toString());
			}
````

Here a standalone version. Unfortunately it works as junit test in jdt but not when executed from pde  checkout, dunno why
````
public class E {
	public void bla(String[] shorts) {
		StringBuilder value = new StringBuilder();
		for (int i = 0; i < shorts.length; i++) {
			if (i > 0) {
				value.append(',');
			}
			value.append(shorts[i]);
		}
		System.out.println(value.toString());
	}
}
````","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/189/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/190,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/190,eclipse.jdt.ui,1324135109,190,"iterator declaration missing after ""enhanced foreach cleanup"" in case of more than one use of declared iterator",carstenartur,3164220,Carsten Hammer,,CLOSED,2022-08-01T09:45:12Z,2022-08-17T20:19:37Z,"See a code sample for this issue:

![image](https://user-images.githubusercontent.com/3164220/182121140-cc6b77c5-eeea-4017-8656-eda1c12a1528.png)

The declared variable is used twice but after refactoring the first one the declared variable is no longer available.

Sample code at 
https://github.com/carstenartur/eclipse.pde/commit/b5abc23cdb348fa203d3a72c4d5c2b92c389c570","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/190/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/190,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IoB0i,eclipse.jdt.ui,1218452770,190,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-08-17T20:19:37Z,2022-08-17T20:19:37Z,Verified for 4.25 M3 using I20220817-0600 build,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IoB0i/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/191,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/191,eclipse.jdt.ui,1324198614,191,JUnitContainerInitializer cannot be used in Tycho Surefire tests,guw,191472,Gunnar Wagenknecht,,OPEN,2022-08-01T10:33:41Z,2022-08-06T16:56:15Z,"I am trying to get an existing projects Tycho Surefire tests running. I do find a lot of exceptions in the test log, which seems to indicate an issue with `JUnitContainerInitializer`.

```
!ENTRY org.eclipse.jdt.junit.core 4 4 2022-08-01 12:26:16.408
!MESSAGE Error
!STACK 0
java.io.FileNotFoundException: org.eclipse.equinox.simpleconfigurator/bundles.info (No such file or directory)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at java.base/sun.net.www.protocol.file.FileURLConnection.connect(FileURLConnection.java:86)
	at java.base/sun.net.www.protocol.file.FileURLConnection.getInputStream(FileURLConnection.java:189)
	at java.base/java.net.URL.openStream(URL.java:1161)
	at org.eclipse.equinox.internal.simpleconfigurator.manipulator.SimpleConfiguratorManipulatorImpl.loadConfiguration(SimpleConfiguratorManipulatorImpl.java:365)
	at org.eclipse.jdt.internal.junit.buildpath.P2Utils.findBundle(P2Utils.java:93)
	at org.eclipse.jdt.internal.junit.buildpath.BuildPathSupport$JUnitPluginDescription.getBundleLocation(BuildPathSupport.java:89)
	at org.eclipse.jdt.internal.junit.buildpath.BuildPathSupport$JUnitPluginDescription.getBundleLocation(BuildPathSupport.java:85)
	at org.eclipse.jdt.internal.junit.buildpath.BuildPathSupport$JUnitPluginDescription.getLibraryEntry(BuildPathSupport.java:207)
	at org.eclipse.jdt.internal.junit.buildpath.BuildPathSupport.getJUnit4LibraryEntry(BuildPathSupport.java:408)
	at org.eclipse.jdt.internal.junit.buildpath.JUnitContainerInitializer.getNewContainer(JUnitContainerInitializer.java:121)
	at org.eclipse.jdt.internal.junit.buildpath.JUnitContainerInitializer.initialize(JUnitContainerInitializer.java:101)
	at org.eclipse.jdt.internal.core.JavaModelManager.initializeContainer(JavaModelManager.java:3145)
	at org.eclipse.jdt.internal.core.JavaModelManager$10.run(JavaModelManager.java:3029)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2380)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2405)
	at org.eclipse.jdt.internal.core.JavaModelManager.initializeAllContainers(JavaModelManager.java:3091)
	at org.eclipse.jdt.internal.core.JavaModelManager.getClasspathContainer(JavaModelManager.java:2088)
	at org.eclipse.jdt.core.JavaCore.getClasspathContainer(JavaCore.java:3789)
	at org.moreunit.test.context.WorkspaceConfiguration.applyClasspathUpdate(WorkspaceConfiguration.java:219)
	at org.moreunit.test.context.WorkspaceConfiguration.applyPreferences(WorkspaceConfiguration.java:138)
	at org.moreunit.test.context.WorkspaceConfiguration.initWorkspace(WorkspaceConfiguration.java:53)
	at org.moreunit.test.context.TestContextRule$StatementInContext.<init>(TestContextRule.java:235)
	at org.moreunit.test.context.TestContextRule.apply(TestContextRule.java:82)
	at org.junit.runners.RuleContainer.apply(RuleContainer.java:81)
	at org.junit.runners.BlockJUnit4ClassRunner.withRules(BlockJUnit4ClassRunner.java:412)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:321)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:206)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:161)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:84)
	at org.eclipse.tycho.surefire.osgibooter.OsgiSurefireBooter.run(OsgiSurefireBooter.java:128)
	at org.eclipse.tycho.surefire.osgibooter.AbstractUITestApplication$1.run(AbstractUITestApplication.java:37)
	at org.eclipse.e4.ui.internal.workbench.swt.E4Testable.lambda$1(E4Testable.java:127)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4345)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3968)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.tycho.surefire.osgibooter.UITestApplication.runApplication(UITestApplication.java:29)
	at org.eclipse.tycho.surefire.osgibooter.AbstractUITestApplication.run(AbstractUITestApplication.java:122)
	at org.eclipse.tycho.surefire.osgibooter.UITestApplication.start(UITestApplication.java:35)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
```

It looks like `P2Utils.findBundle(P2Utils.java:93)` expect that `org.eclipse.equinox.simpleconfigurator` is being used. But I don't think that's the case in a Tycho Surefire environment.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/191/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/191,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5HqPpc,eclipse.jdt.ui,1202256476,191,NA,noopur2507,8749449,Noopur Gupta,,NA,2022-08-02T09:39:35Z,2022-08-02T09:39:35Z,Notifying @mickaelistria for comments on this.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5HqPpc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/191,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5H7zhg,eclipse.jdt.ui,1206859872,191,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2022-08-05T21:00:27Z,2022-08-05T21:00:27Z,"Indeed, Tycho does not use the bundles.info. I'm not sure about the criticity of this error though, it could be an issue just to locate source bundles (probably not critical then). However, one recommendation would be that JDT implements more tolerant/standard strategies to lookup bundles, like for example querying the OSGi runtime directly. A more ""low-level"" strategy would make it more portable and would allow to work with more kinds of deployments.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5H7zhg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/191,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5H9R-Q,eclipse.jdt.ui,1207246736,191,NA,guw,191472,Gunnar Wagenknecht,,NA,2022-08-06T16:56:15Z,2022-08-06T16:56:15Z,If it's not critical then it shouldn't be logged as an error.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5H9R-Q/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/192,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/192,eclipse.jdt.ui,1326188530,192,"Some comments get lost on ""enhanced for loop cleanup""",carstenartur,3164220,Carsten Hammer,,CLOSED,2022-08-02T17:48:54Z,2022-08-02T20:18:58Z,"Here an example
![image](https://user-images.githubusercontent.com/3164220/182440569-32d8ae9d-d99a-40ee-90df-b1d619e32f91.png)

See
https://github.com/eclipse-pde/eclipse.pde/pull/251/files

for more samples","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/192/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/197,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/197,eclipse.jdt.ui,1327780802,197,NPE when using Inline Refactoring on method with varargs within switch expression,rgrunber,1417342,Roland Grunberg,,CLOSED,2022-08-03T20:56:52Z,2022-08-11T06:31:36Z,"This is a pretty specific case, though I did try to narrow it down as much as I could, so I'd say it's probably not the highest of priorities.
Create a project based on the given sample source file. You'll need at least Java 14 to use the switch expression syntax :

**Main.java**
```
package org.example;
public class Main {
	public static String format (String... input) {
		return """";
	}
	public static void main(String[] args) {
		int value = 0;
		String message = switch (value) {
			case 0 -> format("""");
			default -> """";
		};
	}
}
```

- Select the only `format` reference in `main()`
- `Refactor -> Inline` using whichever method you prefer (eg. `Refactor` menu item, or context menu)
- Select `Preview` or `Ok` (also I think playing with any of the options shouldn't matter)
- You should see the following error in the Error Log view :

<details>
<summary>stacktrace</summary>

```
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:395)
	at org.eclipse.ltk.internal.ui.refactoring.RefactoringWizardDialog2.run(RefactoringWizardDialog2.java:324)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizard.createChange(RefactoringWizard.java:662)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizard.computeUserInputSuccessorPage(RefactoringWizard.java:504)
	at org.eclipse.ltk.ui.refactoring.UserInputWizardPage.computeSuccessorPage(UserInputWizardPage.java:77)
	at org.eclipse.ltk.ui.refactoring.UserInputWizardPage.getNextPage(UserInputWizardPage.java:113)
	at org.eclipse.ltk.internal.ui.refactoring.RefactoringWizardDialog2.nextOrPreviewPressed(RefactoringWizardDialog2.java:493)
	at org.eclipse.ltk.internal.ui.refactoring.RefactoringWizardDialog2$1.widgetSelected(RefactoringWizardDialog2.java:693)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:5794)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1529)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:5025)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4477)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.lambda$0(RefactoringWizardOpenOperation.java:190)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:209)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:126)
	at org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:41)
	at org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter.startInlineMethodRefactoring(RefactoringExecutionStarter.java:336)
	at org.eclipse.jdt.internal.ui.refactoring.actions.InlineMethodAction.tryInlineMethod(InlineMethodAction.java:151)
	at org.eclipse.jdt.ui.actions.InlineAction.run(InlineAction.java:127)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:278)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:252)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:5794)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1529)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:5025)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4477)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
Caused by: java.lang.NullPointerException: Cannot invoke ""org.eclipse.jdt.core.dom.rewrite.ListRewrite.insertAt(org.eclipse.jdt.core.dom.ASTNode, int, org.eclipse.text.edits.TextEditGroup)"" because ""this.fListRewrite"" is null
	at org.eclipse.jdt.internal.corext.refactoring.code.CallInliner.addNewLocals(CallInliner.java:569)
	at org.eclipse.jdt.internal.corext.refactoring.code.CallInliner.perform(CallInliner.java:456)
	at org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring.checkFinalConditions(InlineMethodRefactoring.java:315)
	at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:86)
	at org.eclipse.ltk.core.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:122)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2380)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2405)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:89)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)
```
</details>","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/197/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/197,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IN4hN,eclipse.jdt.ui,1211598925,197,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-08-11T06:31:35Z,2022-08-11T06:31:35Z,Created https://github.com/eclipse-jdt/eclipse.jdt.core/issues/305 to track the incorrect formatting of the inlined code.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IN4hN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/198,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/198,eclipse.jdt.ui,1328696908,198,Tooltips in Java Editor Eclipse 4.25 M1 are blank when using MS Edge on Windows 11,minduch,28196566,Christopher Mindus,,CLOSED,2022-08-04T14:08:58Z,2024-12-21T20:25:55Z,"In Windows 11 and MS Edge in Eclipse 4.25 M1 using `-Dorg.eclipse.swt.browser.DefaultType=edge` in `eclipse.ini` causes all tooltips in Eclipse workbench Java code to be blank, regardless of Dark/Light/Classic theme. Removing the setting `-Dorg.eclipse.swt.browser.DefaultType=edge` makes it work.

Tooltips shown other editors e.g. XML works fine in both modes (with or without declaration of `-Dorg.eclipse.swt.browser.DefaultType=edge`).

**Environment**
Windows 11 (Developer Preview Channel) = Microsoft Windows [Version 10.0.22622.450]
MS Edge = Version 103.0.1264.77 (Official build) (64-bit)
Java = JustJ from Eclipse 4.25 M1","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/198/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/198,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KqJM7,eclipse.jdt.ui,1252561723,198,NA,minduch,28196566,Christopher Mindus,,NA,2022-09-20T15:54:45Z,2022-09-20T15:54:45Z,Same problem as issue #248.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KqJM7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/198,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Ye4KF,eclipse.jdt.ui,2558231173,198,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2024-12-21T20:25:55Z,2024-12-21T20:25:55Z,This has been worked on in SWT. Please use latest version.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Ye4KF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/200,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/200,eclipse.jdt.ui,1329641798,200,getTextBlockHoverInfo throws a NullPointerException,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,CLOSED,2022-08-05T08:47:09Z,2022-08-09T07:37:54Z,"I can't recall what I did that caused this, but I am sure I had no text block in the file I was working with. But I found this stack in the console:

java.lang.NullPointerException
	at org.eclipse.jdt.core.dom.NodeFinder.<init>(NodeFinder.java:186)
	at org.eclipse.jdt.core.dom.NodeFinder.perform(NodeFinder.java:103)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaSourceHover.getTextBlockHoverInfo(JavaSourceHover.java:446)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaSourceHover.getHoverInfo(JavaSourceHover.java:149)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaSourceHover.getHoverInfo2(JavaSourceHover.java:127)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/200/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/201,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/201,eclipse.jdt.ui,1329844398,201,Refactor rename reports shadowing when there is none,trancexpress,24752155,Simeon Andreev,,CLOSED,2022-08-05T11:58:38Z,2022-08-17T20:30:32Z,"**To reproduce:**

1. Import projects from: [RefactorRenameShadowingBug.zip](https://github.com/eclipse-jdt/eclipse.jdt.ui/files/9268291/RefactorRenameShadowingBug.zip)
2. Open type ```test1.impl.ITes`t``.
3. Refactor rename ```foo()``` to ```foo1()```.
4. Observe reported shadowing problems:

![RefactorRenameShadowingBug](https://user-images.githubusercontent.com/24752155/183072217-2859c609-534e-4da3-b54a-eed65219d864.png)

There is no shadowing though, the rename is fine.

**Cause:**

Looks like JDT UI ""thinks"" there are no search matches for the new method in the mentioned files, after the rename. So it reports shadowing (as it thinks the rename did nothing).

This is the case due to the order of elements passed to: ```RenameMethodProcessor.batchFindNewOccurrences()``` (and in particular, delegated to ```RefactoringScopeFactory.create(IMember[]))```. ```test2.Foo``` seems to be found first by ```RippleMethodFinder2.getRelatedMethods()``` and so only its project is used for the search. I.e. the scope is created with only the project ```Test2``` and so the search misses some occurrences. The refactor rename then thinks those missed occurrences are shadowing, instead of subject to the rename.

The problem is created with this stack trace:

```
""ModalContext"" #199 prio=6 os_prio=0 cpu=45.89ms elapsed=16.76s tid=0x00007ffff3240000 nid=0x3dce at breakpoint [0x00007fff29cf4000]
   java.lang.Thread.State: RUNNABLE
        at org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil.addShadowsError(RenameAnalyzeUtil.java:387)
        at org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil.analyzeRenameChanges2(RenameAnalyzeUtil.java:277)
        at org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor.analyzeRenameChanges(RenameMethodProcessor.java:572)
        at org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor.doCheckFinalConditions(RenameMethodProcessor.java:412)
        at org.eclipse.jdt.internal.corext.refactoring.rename.RenameVirtualMethodProcessor.doCheckFinalConditions(RenameVirtualMethodProcessor.java:148)
        at org.eclipse.jdt.internal.corext.refactoring.rename.JavaRenameProcessor.checkFinalConditions(JavaRenameProcessor.java:51)
        at org.eclipse.ltk.core.refactoring.participants.ProcessorBasedRefactoring.checkFinalConditions(ProcessorBasedRefactoring.java:226)
        at org.eclipse.ltk.core.refactoring.Refactoring.checkAllConditions(Refactoring.java:165)
        at org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper$Operation.run(RefactoringExecutionHelper.java:84)
        at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:41)
        at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
        at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2380)
        at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2405)
        at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5929)
        at org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:108)
        at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/201/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/201,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IoD97,eclipse.jdt.ui,1218461563,201,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-08-17T20:30:31Z,2022-08-17T20:30:31Z,Verified for 4.25 M3 using I20220817-0600 build,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IoD97/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/202,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/202,eclipse.jdt.ui,1329932828,202,Can't create a package-info.java file,laeubi,1331477,Christoph Läubrich,,OPEN,2022-08-05T13:20:18Z,2022-08-05T13:20:18Z,"If I try to create a `package-info.java` this currently seems not possible.

I choose the package and use N`ew > Java Class` but i get ""package-info"" is not a valid identifier (I actually dont want to create a type of course):

![grafik](https://user-images.githubusercontent.com/1331477/183085597-558c04f5-0906-4523-bf7d-d32cc74114da.png)


But I can create one by hand using `New > File` naming it `package-info.java`
![grafik](https://user-images.githubusercontent.com/1331477/183085810-60eb9890-a594-44a2-8d11-86addf5a55b6.png)

but of course I the also have to add the package name and it seems not very intuitive.

I also searched for a Wizard, but only found I can create one if I create a new package...
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/202/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/203,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/203,eclipse.jdt.ui,1329973374,203,Use ToolFactory.createScanner() with source compliance set if possible,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2022-08-05T13:55:24Z,2022-08-06T05:52:22Z,"Follow up on the issue surprised me a lot in https://github.com/spotbugs/spotbugs/issues/2134

There is a possibility that JDT bails out scanning fully valid code only because the IScanner was created with wrong (too old, default) source level.

I've checked how much code still uses `org.eclipse.jdt.core.ToolFactory.createScanner(boolean, boolean, boolean, boolean)` and see ~20 references in JDT UI that probably should use proper source compliance set.

I will try to change that and see if some test fails.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/203/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/206,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/206,eclipse.jdt.ui,1330739864,206,Problems Launching JUnit Tests: The input type of the launch configuration does not exist ==> further info button,ralfhauser,1681677,Ralf Hauser,,OPEN,2022-08-06T12:26:40Z,2022-08-16T07:25:29Z,"E.g. provide the info of / link to

https://vikashazrati.wordpress.com/2008/06/09/quicktip-junit/","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/206/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/206,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Ifn61,eclipse.jdt.ui,1216249525,206,NA,noopur2507,8749449,Noopur Gupta,,NA,2022-08-16T07:25:29Z,2022-08-16T07:25:29Z,There could also be other reasons why the input type was not found. The text message can be improved to check if the type exists and is part of the source folder.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Ifn61/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/209,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/209,eclipse.jdt.ui,1333420220,209,NPE in OrganizeImportsOperation.addStaticImports(),leopoldog,13318868,Leopoldo Ghielmetti,,CLOSED,2022-08-09T12:19:15Z,2022-08-09T16:25:28Z,"I've configured the ""Java""->""Appearance""->""Members Sort Order"" and the ""Java""->""Code Style""->""Organize imports"" but they don't work as expected.
The parameters are totally ignored, I can put whatever I want, the order is still some kind of ""default"".
I've not found any particular error in the logs.

The version is the last one 2022-06 (4.24.0) build 20220609-1112 but the problem appeared at the beginning of the year but only randomly.
I've also deleted the workspace and reinitialized all the projects, removing the .project, .settings and .classpath and also removed all the .eclipse and .p2 folders and other eclipse related information (what I was able to find) but nothing changed. Impossible to make the sorter work correctly.

Over the eclipse standard I've also installed (from the Marketplace) the ""JBoss Tools 4.24.0.Final"" and the ""Subclipse 4.3.3"".

It's important that the sort order works as expected otherwise it will be impossible to work correctly with all my coworkers in the company. They also have encountered that problem randomly, but in their case a reinstallation of the eclipse environment was enough to make it works. All the other members of the teams have switched to IntelliJ to avoid all the problems we regularly encounter with eclipse.

Edit: I'm working on Windows 10","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/209/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/209,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IF-K5,eclipse.jdt.ui,1209524921,209,NA,leopoldog,13318868,Leopoldo Ghielmetti,,NA,2022-08-09T12:43:45Z,2022-08-09T12:43:45Z,"After some trial I've received that error, I don't know if it's related, but, just in case:

!ENTRY org.eclipse.jdt.ui 4 10006 2022-08-09 14:37:07.541
!MESSAGE The save participant 'org.eclipse.jdt.ui.postsavelistener.cleanup' caused an exception: java.lang.NullPointerException: Cannot invoke ""String.split(String)"" because ""pref"" is null
!STACK 0
java.lang.NullPointerException: Cannot invoke ""String.split(String)"" because ""pref"" is null
        at org.eclipse.jdt.core.manipulation.OrganizeImportsOperation.addStaticImports(OrganizeImportsOperation.java:678)
        at org.eclipse.jdt.core.manipulation.OrganizeImportsOperation.createTextEdit(OrganizeImportsOperation.java:599)
        at org.eclipse.jdt.internal.corext.fix.ImportsFix.createCleanUp(ImportsFix.java:51)
        at org.eclipse.jdt.internal.ui.fix.ImportsCleanUp.createFix(ImportsCleanUp.java:62)
        at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.calculateChange(CleanUpRefactoring.java:768)
        at org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener.saved(CleanUpPostSaveListener.java:384)
        at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$4.run(CompilationUnitDocumentProvider.java:1642)
        at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
        at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.notifyPostSaveListeners(CompilationUnitDocumentProvider.java:1636)
        at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.commitWorkingCopy(CompilationUnitDocumentProvider.java:1420)
        at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$3.execute(CompilationUnitDocumentProvider.java:1495)
        at org.eclipse.ui.editors.text.TextFileDocumentProvider$DocumentProviderOperation.run(TextFileDocumentProvider.java:133)
        at org.eclipse.ui.actions.WorkspaceModifyDelegatingOperation.execute(WorkspaceModifyDelegatingOperation.java:71)
        at org.eclipse.ui.actions.WorkspaceModifyOperation.lambda$0(WorkspaceModifyOperation.java:110)
        at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2380)
        at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2405)
        at org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:131)
        at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:76)
        at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:66)
        at org.eclipse.ui.editors.text.TextFileDocumentProvider.executeOperation(TextFileDocumentProvider.java:461)
        at org.eclipse.ui.editors.text.TextFileDocumentProvider.saveDocument(TextFileDocumentProvider.java:764)
        at org.eclipse.ui.texteditor.AbstractTextEditor.performSave(AbstractTextEditor.java:5001)
        at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSave(CompilationUnitEditor.java:1263)
        at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(CompilationUnitEditor.java:1317)
        at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.doSave(AbstractTextEditor.java:7167)
        at org.eclipse.ui.Saveable.doSave(Saveable.java:213)
        at org.eclipse.ui.internal.SaveableHelper.doSaveModel(SaveableHelper.java:333)
        at org.eclipse.ui.internal.SaveableHelper.lambda$1(SaveableHelper.java:196)
        at org.eclipse.ui.internal.SaveableHelper.lambda$3(SaveableHelper.java:271)
        at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
        at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
        at org.eclipse.ui.internal.WorkbenchWindow.lambda$7(WorkbenchWindow.java:2345)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
        at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2343)
        at org.eclipse.ui.internal.SaveableHelper.runProgressMonitorOperation(SaveableHelper.java:278)
        at org.eclipse.ui.internal.SaveableHelper.runProgressMonitorOperation(SaveableHelper.java:260)
        at org.eclipse.ui.internal.SaveableHelper.saveModels(SaveableHelper.java:207)
        at org.eclipse.ui.internal.SaveableHelper.savePart(SaveableHelper.java:150)
        at org.eclipse.ui.internal.WorkbenchPage.saveSaveable(WorkbenchPage.java:3799)
        at org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:3812)
        at org.eclipse.ui.internal.handlers.SaveHandler.execute(SaveHandler.java:82)
        at org.eclipse.ui.internal.handlers.HandlerProxy.execute(HandlerProxy.java:283)
        at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.base/java.lang.reflect.Method.invoke(Method.java:568)
        at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
        at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
        at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
        at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
        at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
        at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
        at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
        at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
        at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
        at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
        at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
        at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
        at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
        at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1262)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
        at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
        at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
        at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1542)
        at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4868)
        at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
        at org.eclipse.swt.widgets.Control.windowProc(Control.java:4746)
        at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
        at org.eclipse.swt.widgets.Display.windowProc(Display.java:5026)
        at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3643)
        at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
        at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
        at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
        at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
        at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
        at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
        at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
        at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
        at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
        at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
        at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.base/java.lang.reflect.Method.invoke(Method.java:568)
        at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
        at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
        at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.core.jobs 4 2 2022-08-09 14:37:15.666
!MESSAGE An internal error occurred during: ""Organize Imports"".
!STACK 0
java.lang.NullPointerException: Cannot invoke ""String.split(String)"" because ""pref"" is null
        at org.eclipse.jdt.core.manipulation.OrganizeImportsOperation.addStaticImports(OrganizeImportsOperation.java:678)
        at org.eclipse.jdt.core.manipulation.OrganizeImportsOperation.createTextEdit(OrganizeImportsOperation.java:599)
        at org.eclipse.jdt.core.manipulation.OrganizeImportsOperation.run(OrganizeImportsOperation.java:549)
        at org.eclipse.jdt.ui.actions.OrganizeImportsAction$1.run(OrganizeImportsAction.java:298)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IF-K5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/209,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IF-K8,eclipse.jdt.ui,1209524924,209,NA,leopoldog,13318868,Leopoldo Ghielmetti,,NA,2022-08-09T14:32:47Z,2022-08-09T14:32:47Z,"Complementary information:
I've reinstalled everything again and I've seen that the problem with the ignored sort order arise after I install the ""JBoss Tools 4.24.0.Final"" so something is incompatible between eclipse and the JBoss Tools.
The errors in the log files are not present anymore, so it was some temporary glitch.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IF-K8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/209,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IF-K-,eclipse.jdt.ui,1209524926,209,NA,leopoldog,13318868,Leopoldo Ghielmetti,,NA,2022-08-09T14:54:12Z,2022-08-09T14:54:12Z,"Ok, finally I've spot where the problem is.
When installing the JBoss Tools, I have choose to not install the ""Quarkus Tools"" and the problem disappeared.

So it seems that is that Quarkus Tools that doesn't work and should be uninstalled!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IF-K-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/209,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IF-LB,eclipse.jdt.ui,1209524929,209,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-08-09T15:16:36Z,2022-08-09T15:16:36Z,"```
java.lang.NullPointerException: Cannot invoke ""String.split(String)"" because ""pref"" is null
at org.eclipse.jdt.core.manipulation.OrganizeImportsOperation.addStaticImports(OrganizeImportsOperation.java:678)
```
is a coding mistake, where the code assumes some preference is set, which is for whatever reason not the case here.
I will push a trivial patch.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IF-LB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/211,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/211,eclipse.jdt.ui,1334665739,211,[JUnit] Support collections when showing a failed assertEquals(),jubax,10562923,Juergen Baier,baier@semedy.com,CLOSED,2022-08-10T13:52:34Z,2022-08-16T07:46:25Z,"When you have code like
```
List<String> expected = List.of(""a"",""b"");
List<String> actual = List.of(""a"",""b"",""c"");
assertEquals(expected, actual);
```
and you run the code then Eclipse shows an error. But when you double-click on the failure trace then nothing happens. It would be nice if we would have a display of the differences like it is already done with e.g. strings.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/211/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/211,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IfozW,eclipse.jdt.ui,1216253142,211,NA,noopur2507,8749449,Noopur Gupta,,NA,2022-08-16T07:29:38Z,2022-08-16T07:29:38Z,"You need to double-click on the first line of the failure trace. We show the result comparison in this case also.

<img width=""1243"" alt=""Screenshot 2022-08-16 at 12 58 01 PM"" src=""https://user-images.githubusercontent.com/8749449/184822608-69ef485a-4804-44c9-b11b-f212d20c4b75.png"">
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IfozW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/211,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Ifsw2,eclipse.jdt.ui,1216269366,211,NA,jubax,10562923,Juergen Baier,baier@semedy.com,NA,2022-08-16T07:46:25Z,2022-08-16T07:46:25Z,"Thank you. I was aware that I need to double-click on the first line. But for some reason this sometimes does not work for me. I just thought it was a general problem, but maybe it was something specific.

I will re-open or create a new bug if I have a reproducable case. Thanks again!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Ifsw2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/212,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/212,eclipse.jdt.ui,1334681578,212,NPE in NodeFinder:186,jukzi,51790620,Jörg Kubitz,,CLOSED,2022-08-10T14:03:02Z,2022-08-10T14:34:27Z,"```
java.lang.NullPointerException: Cannot invoke ""org.eclipse.jdt.core.dom.ASTNode.accept(org.eclipse.jdt.core.dom.ASTVisitor)"" because ""root"" is null
	at org.eclipse.jdt.core.dom.NodeFinder.<init>(NodeFinder.java:186)
	at org.eclipse.jdt.core.dom.NodeFinder.perform(NodeFinder.java:103)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaSourceHover.getTextBlockHoverInfo(JavaSourceHover.java:446)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaSourceHover.getHoverInfo(JavaSourceHover.java:149)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaSourceHover.getHoverInfo2(JavaSourceHover.java:127)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
```

root == null in constructor

getTextBlockHoverInfo() needs to check if ast==null","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/212/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/212,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IKiTW,eclipse.jdt.ui,1210721494,212,NA,jukzi,51790620,Jörg Kubitz,,NA,2022-08-10T14:04:06Z,2022-08-10T14:04:06Z,"relates to ""JavaSourceHover support for TextBlock. Fixes #164 (#165)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IKiTW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/212,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IKieN,eclipse.jdt.ui,1210722189,212,NA,jukzi,51790620,Jörg Kubitz,,NA,2022-08-10T14:04:39Z,2022-08-10T14:04:39Z,@ktatavarthi  can you take a look?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IKieN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/212,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IKs4Q,eclipse.jdt.ui,1210764816,212,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-08-10T14:34:27Z,2022-08-10T14:34:27Z,This is a duplicate of https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/200,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IKs4Q/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/215,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/215,eclipse.jdt.ui,1338030442,215,Add support to use async completion on type,gayanper,7471994,Gayan Perera,,OPEN,2022-08-13T18:47:17Z,2024-04-29T10:05:39Z,"Enable async completion on typing by using new mode from https://github.com/eclipse-platform/eclipse.platform.text/pull/49

#### Conditions
This will only be enabled if the Auto Activation is enabled.

#### Additional Changes
Add support in the IJavaCompletionProposalComputer to differentiate if the request was made by the content assist shortcut or as part of typing. This will enable to control heavy completion computations not to be part of type events.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/215/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/215,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SAOl_,eclipse.jdt.ui,1375791487,215,NA,humphreygao,52394598,,,NA,2023-01-09T15:25:04Z,2023-01-09T15:25:04Z,Any progress？,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SAOl_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/215,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM58HerL,eclipse.jdt.ui,2082335435,215,NA,humphreygao,52394598,,,NA,2024-04-29T10:05:38Z,2024-04-29T10:05:38Z,Any progress？,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM58HerL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/217,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/217,eclipse.jdt.ui,1338623185,217,NoSuchMethodError: 'boolean com.ibm.icu.text.UTF16.isSurrogate(int)',jukzi,51790620,Jörg Kubitz,,CLOSED,2022-08-15T07:09:16Z,2022-08-16T07:42:59Z,"i just did a fresh OOmph for JDT+PDE+Platform and ended up in a non working eclipse. I get the error

![image](https://user-images.githubusercontent.com/51790620/184590905-0fb733a5-a974-42a2-93b2-fcec45a9ee72.png)

and it allways pops up again after pressing OK => not usable.

logfile:
```
!ENTRY org.eclipse.ui.workbench 4 2 2022-08-15 08:46:18.885
!MESSAGE Problems occurred when invoking code from plug-in: ""org.eclipse.ui.workbench"".
!STACK 0
java.lang.NoSuchMethodError: 'boolean com.ibm.icu.text.UTF16.isSurrogate(int)'
	at org.eclipse.jdt.internal.ui.text.JavaWordFinder.findWord(JavaWordFinder.java:39)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.updateOccurrenceAnnotations(JavaEditor.java:3300)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor$ActivationListener.windowActivated(JavaEditor.java:1216)
	at org.eclipse.ui.internal.Workbench$8.run(Workbench.java:1004)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.Workbench.fireWindowActivated(Workbench.java:1001)
	at org.eclipse.ui.internal.WorkbenchWindow$6.shellActivated(WorkbenchWindow.java:2460)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:92)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4251)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Decorations.WM_ACTIVATE(Decorations.java:1521)
	at org.eclipse.swt.widgets.Shell.WM_ACTIVATE(Shell.java:2314)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4743)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1480)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2286)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5026)
	at org.eclipse.swt.internal.win32.OS.PeekMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3640)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

```

![image](https://user-images.githubusercontent.com/51790620/184591396-0295f270-e640-4fea-ad68-7d17cdb07e5b.png)

![image](https://user-images.githubusercontent.com/51790620/184591484-d4c89fd4-c271-449c-aa3f-90bb657b4674.png)

I do not know why the method is not found. But that dependency could be avoided by using Character.isSurrogate(c) instead.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/217/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/217,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IZtwJ,eclipse.jdt.ui,1214700553,217,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-08-15T07:22:42Z,2022-08-15T07:22:42Z,See https://github.com/eclipse-platform/eclipse.platform.releng.aggregator/issues/476,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IZtwJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/217,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IZwJ4,eclipse.jdt.ui,1214710392,217,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2022-08-15T07:34:53Z,2022-08-15T07:34:53Z,What about the proposed Character.isSurrogate change? IMHO adjusting now for smth that would be removed again from ICU4J in a month makes sense.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IZwJ4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/217,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IZzt2,eclipse.jdt.ui,1214724982,217,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-08-15T07:56:25Z,2022-08-15T07:56:25Z,"> What about the proposed Character.isSurrogate change?

I will do that now.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IZzt2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/217,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Ifr97,eclipse.jdt.ui,1216266107,217,NA,jukzi,51790620,Jörg Kubitz,,NA,2022-08-16T07:42:59Z,2022-08-16T07:42:59Z,"thanks Andrey, today i could oomph again :-)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Ifr97/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/219,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/219,eclipse.jdt.ui,1339319054,219,Change NewTestSuiteWizard to avoid recursion on initial set-up,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2022-08-15T18:24:49Z,2022-08-17T20:11:46Z,"The NewTestSuiteWizard has been recently changed to support JUnit5.  In addition, it was changed to modify the default testsuite class name if it already existed.  This avoided recursion, but it ends up including the old testsuite so tests will be run multiple times.  Instead, leave the default testsuite type name to be AllTests and if it exists, just ensure it is not initially selected in the testsuite classes table.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/219/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/219,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IoANA,eclipse.jdt.ui,1218446144,219,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-08-17T20:11:46Z,2022-08-17T20:11:46Z,Verified using I20220817-0600 build,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5IoANA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/221,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/221,eclipse.jdt.ui,1341475816,221,ClassCastException when renaming interface methods,TheKodeToad,57493648,,,CLOSED,2022-08-17T09:39:59Z,2022-08-24T08:36:40Z,"Often when renaming methods in interfaces, it fails with an error in the log. There is no indication that anything went wrong unless you specifically look in the log. Unfortunately I can't provide instructions for reproduction, it just seems to happen randomly, and persist over restarts for specific method names.

For example, you may have an interface like this:
```java
public interface Nameable {

    @NotNull String getName();

}
```
and an implementation:
```java
public record User(String name) implements Nameable {

    @Override
    public @NotNull String getName() {
        return name;
    }

}
```
When this issue occurs, you would not be able to rename this method.
You can (obviously) change the name manually like this

```java
public interface Nameable {

    @NotNull String getFirstName();

}
```
but references won't update. Refactoring will work again, but as soon as the method name returns back to when the issue first occurred, it will stop working again.
Sorry if there isn't enough information to fix it, but I can't find any pattern of what causes this.
Judging from the stacktrace, this should be the correct repo. Sorry if it's not.

Log (I couldn't attach):
```
eclipse.buildId=4.24.0.I20220607-0700
java.version=11.0.16
java.vendor=Ubuntu
BootLoader constants: OS=linux, ARCH=x86_64, WS=gtk, NL=en_GB
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os linux -ws gtk -arch x86_64 -product org.eclipse.epp.package.java.product

org.eclipse.e4.ui.workbench
Error
Wed Aug 17 10:11:27 BST 2022
Execution exception for: ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6104691c,
		,,true),null) in 
	context chain: WorkbenchContext -> TrimmedWindowImpl (IDEWindow) Context -> PerspectiveImpl (org.eclipse.jdt.ui.JavaPerspective) Context -> PartImpl (org.eclipse.e4.ui.compatibility.editor)  removeOnHide org.eclipse.jdt.ui.CompilationUnitEditorContext

org.eclipse.core.commands.ExecutionException: While executing the action, an exception occurred
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:126)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor79.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1908)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1528)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1555)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1538)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1577)
	at org.eclipse.swt.widgets.Widget.gtk_key_press_event(Widget.java:937)
	at org.eclipse.swt.widgets.Control.gtk_key_press_event(Control.java:4004)
	at org.eclipse.swt.widgets.Composite.gtk_key_press_event(Composite.java:921)
	at org.eclipse.swt.widgets.Widget.windowProc(Widget.java:2434)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:6832)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:6114)
	at org.eclipse.swt.internal.gtk3.GTK3.gtk_main_do_event(Native Method)
	at org.eclipse.swt.widgets.Display.eventProc(Display.java:1552)
	at org.eclipse.swt.internal.gtk3.GTK3.gtk_main_iteration_do(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4474)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
Caused by: java.lang.ClassCastException: class org.eclipse.jdt.internal.core.SourceField cannot be cast to class org.eclipse.jdt.core.IMethod (org.eclipse.jdt.internal.core.SourceField and org.eclipse.jdt.core.IMethod are in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @2afe825a)
	at org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2$1MethodRequestor.acceptSearchMatch(RippleMethodFinder2.java:437)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.report(MatchLocator.java:2185)
	at org.eclipse.jdt.internal.core.search.matching.MethodLocator.matchReportReference(MethodLocator.java:510)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(MatchLocator.java:2735)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(MatchLocator.java:2940)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(MatchLocator.java:3285)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(MatchLocator.java:2862)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.process(MatchLocator.java:2037)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1310)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1390)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1532)
	at org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(JavaSearchParticipant.java:135)
	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches(BasicSearchEngine.java:251)
	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.search(BasicSearchEngine.java:602)
	at org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:670)
	at org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2.findAllDeclarations(RippleMethodFinder2.java:469)
	at org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2.findAllRippleMethods(RippleMethodFinder2.java:207)
	at org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2.getAllRippleMethods(RippleMethodFinder2.java:187)
	at org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2.getRelatedMethodsInCompilationUnit(RippleMethodFinder2.java:166)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.RenameLinkedMode.start(RenameLinkedMode.java:281)
	at org.eclipse.jdt.internal.ui.refactoring.actions.RenameJavaElementAction.run(RenameJavaElementAction.java:250)
	at org.eclipse.jdt.internal.ui.refactoring.actions.RenameJavaElementAction.doRun(RenameJavaElementAction.java:190)
	at org.eclipse.jdt.internal.ui.refactoring.actions.RenameJavaElementAction.run(RenameJavaElementAction.java:162)
	at org.eclipse.jdt.ui.actions.RenameAction.run(RenameAction.java:121)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:278)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:252)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	... 55 more
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/221/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/221,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5I_dAd,eclipse.jdt.ui,1224593437,221,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-08-23T18:43:28Z,2022-08-23T18:43:28Z,"Please try with latest I-build or 4.25 M3: https://download.eclipse.org/eclipse/downloads/

Fixes have been made in this area for 2022-09.  I tried your scenario and it works fine.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5I_dAd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/221,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5JCY7-,eclipse.jdt.ui,1225363198,221,NA,TheKodeToad,57493648,,,NA,2022-08-24T08:22:23Z,2022-08-24T08:22:23Z,"I'm still not sure how consistent it is, or if it's at all related to the name, but I still have the same project where I can't rename the method.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5JCY7-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/221,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5JCcr5,eclipse.jdt.ui,1225378553,221,NA,TheKodeToad,57493648,,,NA,2022-08-24T08:36:40Z,2022-08-24T08:36:40Z,It appears to have been fixed in 2022-09.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5JCcr5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/223,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/223,eclipse.jdt.ui,1342005985,223,Java Text Editor: Select All and Copy with collapsed block comment at top of file looses first line,ghidra1,48333017,Ghidra1,,CLOSED,2022-08-17T16:20:37Z,2022-09-13T17:25:43Z,"When opening a Java source file with the Java Editor where the top of the fiile has a block comment, e.g.
```
/**
 * comment
 */
 ```
The block comment will be displayed as collapsed and only the second line showing (e.g., ` * comment`).  With the file in this initial state if you select the entire file (Ctrl-A), copy the selection (Ctrl-C), then past into another file - the first line is omitted.

This should be corrected such that the first hidden line, as with other collapsed content, is included in the selection and the subsequent copy. 

------------

Eclipse Version Details:: 
Eclipse IDE for Java Developers (includes Incubating components)
Version: 2021-12 (4.22.0)
Build id: 20211202-1639
OS: Linux, v.4.14.285-215.501.amzn2.x86_64, x86_64 / gtk 3.22.30, WebKit 2.28.2
Java vendor: Amazon.com Inc.
Java runtime version: 17.0.4+8-LTS
Java version: 17.0.4

org.eclipse.jdt.ui (3.25.0.v20211115-1252) ""Java Development Tools UI""
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/223/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/223,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KQCna,eclipse.jdt.ui,1245719002,223,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-09-13T17:25:43Z,2022-09-13T17:25:43Z,"Hello @ghidra1.  This problem was fixed in 4.23 via https://bugs.eclipse.org/bugs/show_bug.cgi?id=577122

Please update your Eclipse.  Eclipse 4.25 should be released later this week.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KQCna/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/224,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/224,eclipse.jdt.ui,1342271572,224,Quickfix to add generic arguments causes invalid import,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2022-08-17T20:41:06Z,2022-09-07T04:51:21Z,"The following testcase:

```
import java.util.ArrayList;
public class LocalTest {
    void m() {
        class Local {
        	Local fSelf;
        }
        new ArrayList().add(new Local().fSelf);
    }
}
```

causes an invalid import when quickfix is run on new ArrayList() line to add arguments","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/224/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/225,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/225,eclipse.jdt.ui,1343009049,225,Test ImportOrganizeTest1d8 failed in build,noopur2507,8749449,Noopur Gupta,,OPEN,2022-08-18T12:11:25Z,2024-01-25T11:38:20Z,"I20220817-1800
win32-java11

org.eclipse.jdt.ui.tests.core.ImportOrganizeTest1d8 failed.

AST must not be null

java.lang.IllegalArgumentException: AST must not be null
at org.eclipse.jdt.core.dom.rewrite.ImportRewrite.create(ImportRewrite.java:402)
at org.eclipse.jdt.core.manipulation.CodeStyleConfiguration.createImportRewrite(CodeStyleConfiguration.java:99)
at org.eclipse.jdt.core.manipulation.OrganizeImportsOperation.createTextEdit(OrganizeImportsOperation.java:567)
at org.eclipse.jdt.core.manipulation.OrganizeImportsOperation.run(OrganizeImportsOperation.java:549)
at org.eclipse.jdt.ui.tests.core.ImportOrganizeTest.test2(ImportOrganizeTest.java:220)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/225/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1144,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1144,eclipse.jdt.ui,2109279144,1144,[JUnit] JUnit view shows italic tab after process has been stopped in the console,jubax,10562923,Juergen Baier,baier@semedy.com,OPEN,2022-08-22T12:25:50Z,2024-01-31T04:51:57Z,"This is an old bug about missing synchronization between JUnit and Console:

https://bugs.eclipse.org/bugs/show_bug.cgi?id=94491

I just thought I'd move this bug over to GitHub in case no one reads Bugzilla anymore.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1144/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/228,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/228,eclipse.jdt.ui,1346985562,228,feature request: refactoring field variable by type.,hamidrezaabroshan,48859267,Hamidreza Abroshan,,OPEN,2022-08-22T17:16:51Z,2022-08-22T21:06:41Z,"Refactoring a field or local variable's type is very useful and handy. 
I needed that feature, and found this stackOverFlow question without proper solution.https://stackoverflow.com/questions/5185480/how-to-refactor-variable-type-in-eclipse
I'm using Eclipse 2022.06 on windows 10.
Thanks very much.

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/228/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/228,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5I5i5D,eclipse.jdt.ui,1223044675,228,NA,hamidrezaabroshan,48859267,Hamidreza Abroshan,,NA,2022-08-22T17:19:49Z,2022-08-22T17:19:49Z,"I'm new to Eclipse's repo and it's rules. so, if I violated some rule or should submit this feature request to other repo, please update.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5I5i5D/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/230,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/230,eclipse.jdt.ui,1348033056,230,Java Code Assist: javaCompletionProposal throws runtime exception,nimo23,3045549,,,CLOSED,2022-08-23T14:15:58Z,2024-02-15T03:12:18Z,"Within the java editor, I get this error  when using **eclipse code assist**:

![Screenshot at Aug 23 16-08-12](https://user-images.githubusercontent.com/3045549/186180727-872ff036-800f-4f41-ad11-72c99cbb0ed1.png)


```
The 'org.eclipse.jdt.ui.org.eclipse.jdt.ui.javaCompletionProposalComputer.chain' proposal computer from the 'org.eclipse.jdt.ui' plug-in did not complete normally. The extension has thrown a runtime exception.

java.lang.NumberFormatException: Cannot parse null string
	at java.base/java.lang.Integer.parseInt(Integer.java:630)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at org.eclipse.jdt.internal.ui.text.java.ChainCompletionProposalComputer.executeCallChainSearch(ChainCompletionProposalComputer.java:152)
	at org.eclipse.jdt.internal.ui.text.java.ChainCompletionProposalComputer.computeCompletionProposals(ChainCompletionProposalComputer.java:77)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalComputerDescriptor.computeCompletionProposals(CompletionProposalComputerDescriptor.java:348)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalCategory.computeCompletionProposals(CompletionProposalCategory.java:340)
	at org.eclipse.jdt.internal.ui.text.java.ContentAssistProcessor.collectProposals(ContentAssistProcessor.java:333)
	at org.eclipse.jdt.internal.ui.text.java.ContentAssistProcessor.computeCompletionProposals(ContentAssistProcessor.java:289)
	at org.eclipse.jface.text.contentassist.ContentAssistant$2.lambda$0(ContentAssistant.java:2048)
	at java.base/java.util.Collections$SingletonSet.forEach(Collections.java:4905)
	at org.eclipse.jface.text.contentassist.ContentAssistant$2.run(ContentAssistant.java:2047)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.ContentAssistant.computeCompletionProposals(ContentAssistant.java:2044)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.computeProposals(CompletionProposalPopup.java:577)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.lambda$0(CompletionProposalPopup.java:507)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:502)
	at org.eclipse.jface.text.contentassist.ContentAssistant$AutoAssistListener.lambda$0(ContentAssistant.java:399)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4345)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3968)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
```

Using:
- Eclipse IDE Version: 2022-06 (4.24.0)
- JDK 17


I can disable ""Chain Template Proposals"" in Preference->Content-Assist->Advanced to not have an error, but then I don't have ""Chain Template Proposals"" anymore.

Btw, the ""**Eclipse Code Recommenders**"" did also throw such an exception. I disabled it to have no error. But after that, it complains about ""Chain Template Proposals"".
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/230/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/230,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vmYOd,eclipse.jdt.ui,1872331677,230,NA,kaziabidazad,11661458,Kazi Abid Azad,,NA,2023-12-29T20:50:58Z,2023-12-29T20:50:58Z,"Were you able to find a solution to this? I am facing the same with eclipse 2023.12
eclipse.buildId=4.30.0.20231201-1200
java.version=17.0.9
java.vendor=Eclipse Adoptium","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vmYOd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/230,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x2Gyl,eclipse.jdt.ui,1910008997,230,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-25T11:43:21Z,2024-01-25T11:43:21Z,"@rgrunber code was added with 01d2391c4f95df250b36675d9660720c457233ac - maybe executeCallChainSearch() can just return empty list if preferences are not found, or any good use any good default value when preferences null?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x2Gyl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/230,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x4Pwx,eclipse.jdt.ui,1910570033,230,NA,rgrunber,1417342,Roland Grunberg,,NA,2024-01-25T16:35:05Z,2024-01-25T16:35:05Z,"We can definitely fix this with an easy workaround. It looks like we're trying to call `Integer.parseInt(..)` on `null` which is wrong. I'm more interested in how this is happening. The value comes from https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/6a8301e7125a7b1a3e93294ea9e8601b006c6477/org.eclipse.jdt.core.manipulation/common/org/eclipse/jdt/core/manipulation/JavaManipulation.java#L108-L120

The only way that returns `null` is if the default scope isn't set but we do set it at :

https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/6a8301e7125a7b1a3e93294ea9e8601b006c6477/org.eclipse.jdt.ui/ui/org/eclipse/jdt/ui/PreferenceConstants.java#L4148-L4152 . This is ultimately called by https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/6a8301e7125a7b1a3e93294ea9e8601b006c6477/org.eclipse.jdt.ui/ui/org/eclipse/jdt/internal/ui/JavaUIPreferenceInitializer.java#L38 which is registered at https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/6a8301e7125a7b1a3e93294ea9e8601b006c6477/org.eclipse.jdt.ui/plugin.xml#L5988-L5990 .

If you look up the chain, `store` is just a `ScopedPreferenceStore` where `setDefault(...)` uses the `DefaultScope.INSTANCE`. `fgPreferenceNodeId` also can't be `null` because that would throw an `IllegalArgumentException` earlier.

**Update:** Ok, I think I have some idea. This initialization all comes from the core runtime, at : 

https://github.com/eclipse-equinox/equinox/blob/6d32d4fb1cbf511dd1fabaa9e27584a1c1507f83/bundles/org.eclipse.equinox.preferences/src/org/eclipse/core/internal/preferences/PreferenceServiceRegistryHelper.java#L99-L120

https://github.com/eclipse-equinox/equinox/blob/6d32d4fb1cbf511dd1fabaa9e27584a1c1507f83/bundles/org.eclipse.equinox.preferences/src/org/eclipse/core/internal/preferences/PreferenceServiceRegistryHelper.java#L281-L290

Maybe if someone installed a bundle that contributed its own preference initialization that threw an exception that wasn't a `CoreException`, nor `ClassCastException`, then all the other initiailizers wouldn't get run. However I think this would break many other things, so it doesn't seem as likely.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x4Pwx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/230,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5yRyoE,eclipse.jdt.ui,1917266436,230,NA,rgrunber,1417342,Roland Grunberg,,NA,2024-01-30T15:40:03Z,2024-01-30T15:40:03Z,@jukzi can this be closed with #1129 ?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5yRyoE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/230,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5yR8-m,eclipse.jdt.ui,1917308838,230,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-30T15:50:01Z,2024-01-30T15:50:01Z,i think that NPE should still be fixed,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5yR8-m/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/230,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5z4Prr,eclipse.jdt.ui,1944124139,230,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-14T15:58:47Z,2024-02-14T15:58:47Z,"> **Update:** Ok, I think I have some idea. This initialization all comes from the core runtime, at :

@rgrunber can you please provide a fix or at least a null check to avoid NPE?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5z4Prr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/231,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/231,eclipse.jdt.ui,1348832805,231,HierarchicalASTVisitorTest fails,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2022-08-24T04:16:38Z,2022-08-24T07:15:46Z,"Regression from https://github.com/eclipse-jdt/eclipse.jdt.core/pull/328 

https://download.eclipse.org/eclipse/downloads/drops4/I20220823-1800/testresults/html/org.eclipse.jdt.ui.tests_ep425I-unit-cen64-gtk3-java18_linux.gtk.x86_64_18.html

HierarchicalASTVisitor must be updated to reflect a change in the ASTNode hierarchy. No method visit(AbstractTextElement) was found in HierarchicalASTVisitor.

java.lang.AssertionError: HierarchicalASTVisitor must be updated to reflect a change in the ASTNode hierarchy. No method visit(AbstractTextElement) was found in HierarchicalASTVisitor.
at org.junit.Assert.fail(Assert.java:89)
at org.eclipse.jdt.ui.tests.core.HierarchicalASTVisitorTest.checkHierarchicalASTVisitorMethodExistsFor(HierarchicalASTVisitorTest.java:522)
at org.eclipse.jdt.ui.tests.core.HierarchicalASTVisitorTest.checkAllMethodsForHierarchyExist(HierarchicalASTVisitorTest.java:495)
at org.eclipse.jdt.ui.tests.core.HierarchicalASTVisitorTest.test(HierarchicalASTVisitorTest.java:471)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/231/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/231,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5JBsiz,eclipse.jdt.ui,1225181363,231,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-08-24T04:38:33Z,2022-08-24T04:38:33Z,@iloveeclipse I will fix this for 4.25 RC1,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5JBsiz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/234,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/234,eclipse.jdt.ui,1349376703,234,Java Editor fails to open simple file,StefanLindner,668992,,,CLOSED,2022-08-24T12:35:07Z,2022-08-24T14:26:29Z,"Here ist the simple file content

```
public class SimpleClass {
	
	int x; // 

}
```
Error message is

```
java.lang.StringIndexOutOfBoundsException: index 10, length 10
	at java.base/java.lang.String.checkIndex(String.java:5320)
	at java.base/java.lang.StringUTF16.checkIndex(StringUTF16.java:1624)
	at java.base/java.lang.StringUTF16.charAt(StringUTF16.java:1421)
	at java.base/java.lang.String.charAt(String.java:2130)
	at com.cb.eclipse.folding.java.calculation.UserDefinedRegionHelper.isSentinel(UserDefinedRegionHelper.java:53)
	at com.cb.eclipse.folding.java.calculation.UserDefinedRegionHelper.isOpeningSentinel(UserDefinedRegionHelper.java:29)
	at com.cb.eclipse.folding.java.calculation.CommentHelper.isUserDefinedSentinel(CommentHelper.java:90)
	at com.cb.eclipse.folding.java.calculation.CommentHelper.handle(CommentHelper.java:67)
	at com.cb.eclipse.folding.java.calculation.AbstractBlockStrategy.handle(AbstractBlockStrategy.java:93)
	at com.cb.eclipse.folding.java.calculation.CompositeCalculationStrategy.handle(CompositeCalculationStrategy.java:24)
	at com.cb.eclipse.folding.java.calculation.CommentPrefixStrategy.handle(CommentPrefixStrategy.java:64)
	at com.cb.eclipse.folding.java.calculation.JavaProjectionCalculator.computeProjections(JavaProjectionCalculator.java:230)
	at com.cb.eclipse.folding.java.calculation.JavaProjectionCalculator.findAnnotations(JavaProjectionCalculator.java:96)
	at com.cb.eclipse.folding.java.calculation.JavaProjectionCalculator.findAnnotations(JavaProjectionCalculator.java:108)
	at com.cb.eclipse.folding.java.calculation.JavaProjectionCalculator.findAnnotations(JavaProjectionCalculator.java:108)
	at com.cb.eclipse.folding.java.calculation.JavaProjectionCalculator.findAnnotations(JavaProjectionCalculator.java:68)
	at com.cb.eclipse.folding.java.calculation.ProjectionChangeReconciler.reconstructAnnotations(ProjectionChangeReconciler.java:173)
	at com.cb.eclipse.folding.java.calculation.ProjectionChangeReconciler.initialize(ProjectionChangeReconciler.java:99)
	at com.cb.eclipse.folding.java.EnhancedJavaFoldingStructureProvider.initialize(EnhancedJavaFoldingStructureProvider.java:115)
	at com.cb.eclipse.folding.java.EnhancedJavaFoldingStructureProvider$ProjectionListener.projectionEnabled(EnhancedJavaFoldingStructureProvider.java:201)
	at org.eclipse.jface.text.source.projection.ProjectionViewer.fireProjectionEnabled(ProjectionViewer.java:475)
	at org.eclipse.jface.text.source.projection.ProjectionViewer.enableProjection(ProjectionViewer.java:523)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaSourceViewer.setVisibleDocument(JavaSourceViewer.java:636)
	at org.eclipse.jface.text.TextViewer.setDocument(TextViewer.java:2885)
	at org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:663)
	at org.eclipse.jface.text.source.projection.ProjectionViewer.setDocument(ProjectionViewer.java:368)
	at org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:613)
	at org.eclipse.ui.texteditor.AbstractTextEditor.initializeSourceViewer(AbstractTextEditor.java:3975)
	at org.eclipse.ui.texteditor.AbstractTextEditor.createPartControl(AbstractTextEditor.java:3467)
	at org.eclipse.ui.texteditor.StatusTextEditor.createPartControl(StatusTextEditor.java:64)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createPartControl(AbstractDecoratedTextEditor.java:454)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.createPartControl(JavaEditor.java:3093)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.createPartControl(CompilationUnitEditor.java:1522)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.createPartControl(CompatibilityPart.java:158)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityEditor.createPartControl(CompatibilityEditor.java:96)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.create(CompatibilityPart.java:365)
	at jdk.internal.reflect.GeneratedMethodAccessor99.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:995)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:960)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalInject(InjectorImpl.java:140)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:403)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:330)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:202)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:91)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:60)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:42)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributedPartRenderer.createWidget(ContributedPartRenderer.java:132)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:995)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.lambda$0(PartServiceImpl.java:105)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl$$Lambda$332/0x00000000aed504d0.handleEvent(Unknown Source)
	at org.eclipse.e4.ui.services.internal.events.UIEventHandler.lambda$0(UIEventHandler.java:38)
	at org.eclipse.e4.ui.services.internal.events.UIEventHandler$$Lambda$251/0x00000000ac842c48.run(Unknown Source)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:183)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4790)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.services.internal.events.UIEventHandler.handleEvent(UIEventHandler.java:38)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.ElementContainerImpl.setSelectedElementGen(ElementContainerImpl.java:170)
	at org.eclipse.e4.ui.model.application.ui.impl.ElementContainerImpl.setSelectedElement(ElementContainerImpl.java:188)
	at org.eclipse.e4.ui.internal.workbench.ModelServiceImpl.showElementInWindow(ModelServiceImpl.java:660)
	at org.eclipse.e4.ui.internal.workbench.ModelServiceImpl.bringToTop(ModelServiceImpl.java:624)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.delegateBringToTop(PartServiceImpl.java:787)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.bringToTop(PartServiceImpl.java:401)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.showPart(PartServiceImpl.java:1261)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:3207)
	at org.eclipse.ui.internal.WorkbenchPage.lambda$9(WorkbenchPage.java:3097)
	at org.eclipse.ui.internal.WorkbenchPage$$Lambda$1029/0x00000000b6bc9860.run(Unknown Source)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:3095)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:3065)
	at org.eclipse.ui.actions.OpenWithMenu.openEditor(OpenWithMenu.java:325)
	at org.eclipse.ui.actions.OpenWithMenu.lambda$0(OpenWithMenu.java:182)
	at org.eclipse.ui.actions.OpenWithMenu$$Lambda$1109/0x00000000b7436d70.handleEvent(Unknown Source)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4251)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4068)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3645)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.ui.internal.Workbench$$Lambda$174/0x00000000ace53268.run(Unknown Source)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/234/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/234,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5JD417,eclipse.jdt.ui,1225756027,234,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-08-24T13:50:49Z,2022-08-24T13:50:49Z,com.cb.eclipse.folding.java.calculation.UserDefinedRegionHelper.isSentinel(UserDefinedRegionHelper.java:53) is not Eclipse code. ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5JD417/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/234,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5JED4G,eclipse.jdt.ui,1225801222,234,NA,StefanLindner,668992,,,NA,2022-08-24T14:26:29Z,2022-08-24T14:26:29Z,Sorry!,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5JED4G/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/236,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/236,eclipse.jdt.ui,1351244371,236,"Feature request, add audio queues for accessibility (for blind and visually impaired users)",hamidrezaabroshan,48859267,Hamidreza Abroshan,,OPEN,2022-08-25T17:43:20Z,2022-08-25T17:43:20Z,"I'm blind developer.
When navigating the source code, if there is any error, warning or break point, it is very useful to alert the user with different audios.
Vscode has a similar feature called audio queues.
Sea <a href =""https://code.visualstudio.com/updates/v1_65#_audio-cues""> here </a>
for more info.
Thanks.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/236/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/237,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/237,eclipse.jdt.ui,1351360895,237,No comparison dialog for subclasses of ComparisonFailure in JUnit5,dpetroff,1384881,Dimo Petroff,,CLOSED,2022-08-25T19:30:59Z,2022-09-06T20:28:57Z,Subclasses of `ComparisonFailure` do not benefit from the comparison dialog in JUnit5. It looks like it might have been [this fix for Bug 538956: [JUnit 5] Incorrect JUnit 5 test results without JUnit 4 on the classpath](https://github.com/eclipse-jdt/eclipse.jdt.ui/commit/8bff492a738ed1c08ecf857fd77e1fad38c06fad#diff-b8dd354caa0771bd3282216124abf47badb8b8d18e1151e9c5d9034b336c17a1L133-R149) that broke it.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/237/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/238,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/238,eclipse.jdt.ui,1351749226,238,The Class File Viewer cannot handle the given input ('org.eclipse.ui.ide.FileStoreEditorInput').,laeubi,1331477,Christoph Läubrich,,OPEN,2022-08-26T05:02:20Z,2022-08-26T05:02:20Z,"If one drag&drop a classfile into eclipse from an external location the editor fails:

```
org.eclipse.core.runtime.CoreException: The Class File Viewer cannot handle the given input ('org.eclipse.ui.ide.FileStoreEditorInput').
	at org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor.doSetInput(ClassFileEditor.java:663)
	at org.eclipse.ui.texteditor.AbstractTextEditor.lambda$1(AbstractTextEditor.java:3162)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.ui.internal.WorkbenchWindow.lambda$7(WorkbenchWindow.java:2345)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2343)
	at org.eclipse.ui.texteditor.AbstractTextEditor.internalInit(AbstractTextEditor.java:3179)
	at org.eclipse.ui.texteditor.AbstractTextEditor.init(AbstractTextEditor.java:3204)
	at org.eclipse.ui.internal.EditorReference.initialize(EditorReference.java:353)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.create(CompatibilityPart.java:344)
	at jdk.internal.reflect.GeneratedMethodAccessor99.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
```

I don't see a compelling reason why the file must be in the workspace to be displayed, so it seems the editor simply not handles the `FileStoreEditorInput`.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/238/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1143,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1143,eclipse.jdt.ui,2109233053,1143,[quickfix] Allow creating switch expressions from quickfix context menu,jubax,10562923,Juergen Baier,baier@semedy.com,OPEN,2022-08-26T07:01:57Z,2024-01-31T03:56:22Z,"(I guess this is a feature request)

The quick fixes for the switch only supports creating old-style switch statements, not switch expressions:

<img width=""505"" alt=""image"" src=""https://user-images.githubusercontent.com/10562923/186842177-b2e4ef44-35ec-4d33-86ba-c13086d786df.png"">


It would be great if we had ""Add missing case expressions"" so that we would get
````
switch (type) {
    VALUE_1 -> {}
    VALUE_2 -> {}
}
````

instead of 

````
switch (type) {
    VALUE_1: break;
    VALUE_2: break;
    default: break;
}
````
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1143/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/241,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/241,eclipse.jdt.ui,1352648579,241,2022-09 M3 A conflict occurred for ALT+COMMAND+R,cdietrich,238736,Christian Dietrich,christian.dietrich.opensource@gmail.com,OPEN,2022-08-26T19:21:04Z,2022-08-29T08:53:31Z,"with an freshly oomphed 2022-09 M3 i am getting
```
A conflict occurred for ALT+COMMAND+R:
Binding(ALT+COMMAND+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler(""org.eclipse.ui.edit.rename""),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,cocoa,system)
Binding(ALT+COMMAND+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler(""org.eclipse.jdt.ui.edit.text.java.rename.element""),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,cocoa,system)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/241/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/241,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5JQv5R,eclipse.jdt.ui,1229127249,241,NA,cdietrich,238736,Christian Dietrich,christian.dietrich.opensource@gmail.com,NA,2022-08-27T05:27:24Z,2022-08-27T05:27:24Z,"same on linux

```
A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler(""org.eclipse.jdt.ui.edit.text.java.rename.element""),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler(""org.eclipse.ui.edit.rename""),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5JQv5R/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/241,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5JThyT,eclipse.jdt.ui,1229855891,241,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-08-29T06:55:20Z,2022-08-29T06:55:20Z,"Please provide the information of the selected Item , whose rename causes this conflict.

Can you please also check with https://download.eclipse.org/eclipse/downloads/drops4/S-4.25M3-202208171800/. 
It is possible that the rename extension is implemented by a dependent plugin which is conflicting with the Java rename support.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5JThyT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/241,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5JT9-e,eclipse.jdt.ui,1229971358,241,NA,cdietrich,238736,Christian Dietrich,christian.dietrich.opensource@gmail.com,NA,2022-08-29T08:51:13Z,2022-08-29T08:51:13Z,"how do i get the selected item? i dont select anything. it shows up on startup of eclipse.
i also have no clue how to get that [S-4.25M3-202208171800/](https://download.eclipse.org/eclipse/downloads/drops4/S-4.25M3-202208171800/). one into my oomph
shoulnt it automatically be picked?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5JT9-e/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/592,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/592,eclipse.jdt.ui,1724350745,592,Refactor renames random java elements,jukzi,51790620,Jörg Kubitz,,CLOSED,2022-08-30T17:30:30Z,2023-05-25T07:28:18Z,"Very nasty regression (random results - but reproducible):
ALT+SHIFT+R on a method sometimes also selects and refactors code that has nothing todo with it.
Example:
![image](https://user-images.githubusercontent.com/51790620/187499163-c1b26aec-84db-43b7-8ad2-055efdb05d76.png)

I wanted to refactor the name of ""waitFor"" but in the same turn it refactored ""lockAcquiringRunnable""
![image](https://user-images.githubusercontent.com/51790620/187499752-d346f2da-667e-4d58-b31f-554a41c57cf9.png)
When i slightly change the code then either problem is gone or other elements are refactored:
![image](https://user-images.githubusercontent.com/51790620/187501093-31fdda92-39f6-46cf-bf64-68b7b653263b.png)

You can download the the example from https://github.com/jukzi/eclipse.platform/commits/refactorBug
```
git clone git@github.com:jukzi/eclipse.platform.git
git checkout refactorBug

```
Then import the `project eclipse.platform\runtime\tests\org.eclipse.core.tests.runtime` to your workspace.
It will have many compilation errors if you do not have the dependencies but that does not affect the bug.

Sorry, that i could not find a smaller example .. as soon as i reduce it i can't reproduce.

Feels like there is a comparison of a colliding hash instead of checking for equals.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/592/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/592,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dEqnN,eclipse.jdt.ui,1561504205,592,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-05-24T16:02:39Z,2023-05-24T16:02:39Z,"@jjohnstn this is a regression from https://github.com/eclipse-jdt/eclipse.jdt.ui/commit/c8ab3558cf8d482557e53d04f26e2713535580ed#diff-b1a1111fa629b3734055f042bc05d0f31f670107db239bdabb47863a290e5cfdR290

The `iMethod.getNameRange()` may belong to another `root` CompilationUnit then the current file.
For the example given in https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/592  the `iMethod.getNameRange()` returns the range for the Method ""waitFor"" in the File ""RandomOrder.java"" while the `root` is the ""OrderedLockTest2.java"" currently edited. Searching the ASTNode for a range that meant to be in annother file then finds a wrong hit in the current file. (https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/master/org.eclipse.jdt.ui/ui%20refactoring/org/eclipse/jdt/internal/ui/refactoring/reorg/RenameLinkedMode.java#L285)

please move this issue to jdt.ui
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dEqnN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/592,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dFfUa,eclipse.jdt.ui,1561720090,592,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-05-24T18:11:00Z,2023-05-24T18:11:00Z,@jukzi I tested the patch with your example and if works fine and I also verified the old tests continue to work.  Do you want to try it out as well?  @iloveeclipse Can this go into RC1 or RC2?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dFfUa/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/592,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dFgY3,eclipse.jdt.ui,1561724471,592,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-05-24T18:14:39Z,2023-05-24T18:14:39Z,"> Can this go into RC1 or RC2?

The patch seem simple. Is there anyone else who knows the code and can review it?
Is a regression test easily doable?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dFgY3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/592,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dFjys,eclipse.jdt.ui,1561738412,592,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-05-24T18:25:14Z,2023-05-24T18:25:14Z,@iloveeclipse I'm hoping @jukzi can review it as he located the source of the issue.  A test is difficult because it is a fluke that we are able to find a method name range in another file that is also a name position in the current file.  I could give it a try if @jukzi hasn't already.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dFjys/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/592,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dFkLa,eclipse.jdt.ui,1561739994,592,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-05-24T18:26:24Z,2023-05-24T18:26:24Z,"i'll test tomorrow, source looks good to me.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dFkLa/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/592,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dGdZP,eclipse.jdt.ui,1561974351,592,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-05-24T21:52:03Z,2023-05-24T21:52:03Z,"@iloveeclipse I was able to make the following test.  If you rename the waitFor() call in B without the patch, it will try and change the loop variable name as well.  With the patch, it works.  Didn't quite know how to fit this into existing rename tests which only have one file supported.

[testrename.zip](https://github.com/eclipse-jdt/eclipse.jdt.ui/files/11559426/testrename.zip)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dGdZP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/242,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/242,eclipse.jdt.ui,1356101854,242,Completion does not work for pattern matching,frankbenoit,8962790,Frank Benoit,,OPEN,2022-08-30T17:42:55Z,2024-02-21T18:49:00Z,"In the snippet below, with cursor at the position, the proposals show up valid, but <enter> does not complete (e.g. selecting 'String', it does not add the missing 'g'):

````java
    private void func( Object o ) {
        if (o instanceof @NonNull Strin| text) {
        }        
    }
````

When the annotation is not present, it works as expected.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/242/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/242,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5LSahu,eclipse.jdt.ui,1263118446,242,NA,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,NA,2022-09-30T05:27:14Z,2022-09-30T05:27:14Z,"Looks like this only happens when there's an annotation before the completion node. Vikas, can you please take a look?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5LSahu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/242,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50rOjg,eclipse.jdt.ui,1957488864,242,NA,rgrunber,1417342,Roland Grunberg,,NA,2024-02-21T17:46:14Z,2024-02-21T17:46:14Z,"Just to add to this, https://github.com/eclipse-jdtls/eclipse.jdt.ls/issues/3068 . Completion before the variable declaration works just fine (eg. after type `.` or completing on the prefix `.is`), but not after the declaration.

```java
import java.util.ArrayList;
import java.util.List;

public class SimpleJavaClass {
  public static void main(String[] args) {
    Object unknown = new ArrayList<>();

    if (unknown instanceof List things) {
      // things.is
      Object nothing = null;
      // things.is
    }
  }
}
```

This was still slightly broken in `4.28` up to `I20240212-0420` (4.31-I-builds) :

![completion-pattern-matching-4 30](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1417342/c4c9d242-a3c8-447a-9fa5-7a1f112234ce)

It broke completely starting at `I20240122-1800` :

![completion-pattern-matching-4 31-I20240212-0420](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1417342/08f7e050-078e-4f08-a301-da9f96915121)




","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50rOjg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/243,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/243,eclipse.jdt.ui,1356172507,243,QuickFix for annotations import not enough grained,bvfalcon,49613576,Vladimir V. Bychkov,github@bychkov.name,OPEN,2022-08-30T18:54:05Z,2022-09-11T20:17:56Z,"I want to describe a small bug/enhancement for Quick Fix function.

When we add an annotation for class/method/field we can see in proposes an imports, that a not applicable for given context.

For demonstration I have created [small project](https://github.com/bvfalcon/eclipse-ide-annotation-quickfix-test):

Creating a method and annotating it with `@Test` annotation. We have in classpath two annotations with such name, but they have different `@Target`. For our context applicable only one of these annotations - red arrow. Green arrow is not applicable and cannot be shown in Quick Fix

![screenshot-1](https://user-images.githubusercontent.com/49613576/187518356-38b7e122-36d3-4a0c-a8fb-ce0692a82edf.png)
Screenshot 1

![screenshot-2](https://user-images.githubusercontent.com/49613576/187518372-3026b89a-194c-48ef-92f6-28982691d5f1.png)
Screenshot 2
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/243/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/248,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/248,eclipse.jdt.ui,1360883209,248,"JDT tooltips are blank when MS Edge browser is used in Eclipse using ""-Dorg.eclipse.swt.browser.DefaultType=edge""",minduch,28196566,Christopher Mindus,,CLOSED,2022-09-03T15:09:27Z,2022-11-04T10:16:23Z,"If running Eclipse with `-Dorg.eclipse.swt.browser.DefaultType=edge` under e.g. Windows 11 or 10, the tooltips shown by JDT in for example Java editors are empty. This is probably due to SWT issues with the `Browser` component being MS Edge and not MS Internet Explorer (or MS Edge in MSIE compatibility mode on Windows 11).

### Eclipse 2022-09 RC1 under Windows 11

Below, you will see the tooltip on a boolean variable:

<img width=""395"" alt=""Screenshot 2022-09-03-no-content-in-JDT-tooltip-in-EDGE"" src=""https://user-images.githubusercontent.com/28196566/188276377-3c8046b1-c514-4455-bd21-ddb5b5ee9698.png"">

If `-Dorg.eclipse.swt.browser.DefaultType=edge` is not specified, it works, both in Windows 10 and 11:

<img width=""391"" alt=""Screenshot 2022-09-03 170708"" src=""https://user-images.githubusercontent.com/28196566/188276655-caccdb1d-60ef-4455-8276-1e75188b4587.png"">
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/248/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/248,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Kofme,eclipse.jdt.ui,1252129182,248,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-09-20T10:06:14Z,2022-09-20T10:06:14Z,@niraj-modi Can you please provide your feedback here?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Kofme/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/248,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KqIDA,eclipse.jdt.ui,1252556992,248,NA,minduch,28196566,Christopher Mindus,,NA,2022-09-20T15:51:07Z,2022-09-20T15:51:07Z,"What kind of feedback would you like?
That the problem is still present in the Eclipse 2022-09 release version?

Same problem as issue #198.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KqIDA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/248,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Kq9bn,eclipse.jdt.ui,1252775655,248,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-09-20T18:51:55Z,2022-09-20T18:51:55Z,"Hi, this appears to be an SWT issue.  I have opened: https://github.com/eclipse-platform/eclipse.platform.swt/issues/398 and copied your info.  Please track that issue and if requested, provide further details.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Kq9bn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/248,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5K6eCQ,eclipse.jdt.ui,1256841360,248,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-09-24T02:56:30Z,2022-09-24T02:56:30Z,Closing as issue being addressed in SWT.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5K6eCQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/248,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5MuIpp,eclipse.jdt.ui,1287162473,248,NA,mfvalenta,93959434,,,NA,2022-10-21T16:04:43Z,2022-10-21T16:04:43Z,"This is not an SWT issue. The behavior of the Edge browser is different than IE in the sense that whenever setText is called on the browser, A location change is issued with a URL using the data: protocol that contains the Base64 encoded version of the text. The following exception is happening because the URL is not recognized in the JavaElementLinks location listener. Because the URL parsing fails, the listener tries to invoke a hyperlink handler and sets doit to false. Change the code on line 314 to something like the following fixes the issue:

				if (nomatch) {
					try {
						if (!loc.startsWith(""data:"") &&  handler.handleExternalLink(new URL(loc), event.display))
							return;
						event.doit= true;
					} catch (MalformedURLException e) {
						JavaPlugin.log(e);
					}
				}

Here is the exception.

java.net.MalformedURLException: unknown protocol: data
	at java.base/java.net.URL.<init>(URL.java:681)
	at java.base/java.net.URL.<init>(URL.java:569)
	at java.base/java.net.URL.<init>(URL.java:516)
	at org.eclipse.jdt.internal.ui.viewsupport.JavaElementLinks$1.changing(JavaElementLinks.java:316)
	at org.eclipse.swt.browser.Edge.handleNavigationStarting(Edge.java:575)
	at org.eclipse.swt.browser.Edge.handleNavigationStarting(Edge.java:557)
	at org.eclipse.swt.browser.Edge.lambda$5(Edge.java:197)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3630)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5MuIpp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/248,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Mu6BQ,eclipse.jdt.ui,1287364688,248,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-10-21T19:38:32Z,2022-10-21T19:38:32Z,"Should the check for ""data:"" be instead added to the lines on 258 so if we recognize ""data:"" in addition to ""about:blank"" we call handler.handleTextSet()?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Mu6BQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/248,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5MvGyQ,eclipse.jdt.ui,1287416976,248,NA,mfvalenta,93959434,,,NA,2022-10-21T20:41:09Z,2022-10-21T20:41:09Z,I suspect you are right. handler.handleTextSet() should probably be called in this case.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5MvGyQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/248,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Mvqiv,eclipse.jdt.ui,1287563439,248,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-10-22T00:51:38Z,2022-10-22T00:51:38Z,@mfvalenta I have posted a PR.  Could you verify this works as I don't have access to a Windows machine to test this properly?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Mvqiv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/248,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5M1HlN,eclipse.jdt.ui,1288993101,248,NA,mfvalenta,93959434,,,NA,2022-10-24T12:56:10Z,2022-10-24T12:56:10Z,@jjohnstn The patch works for me.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5M1HlN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/248,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5M1T_d,eclipse.jdt.ui,1289043933,248,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-10-24T13:33:40Z,2022-10-24T13:33:40Z,Thanks @mfvalenta I have merged the patch.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5M1T_d/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/248,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5NrYLL,eclipse.jdt.ui,1303216843,248,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-11-04T10:16:22Z,2022-11-04T10:16:22Z,The changes have been back-ported to the branch R4_23_maintenance,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5NrYLL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/249,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/249,eclipse.jdt.ui,1365936829,249,Javadoc tooltips cannot be resized ,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,OPEN,2022-09-08T09:54:48Z,2022-11-01T17:15:58Z,"I tried to increate the Javadoc popup but it only got smaller. Now I cannot increase its size anymore.

![image](https://user-images.githubusercontent.com/139910/189092686-6d1868a6-81d3-4e30-b9b3-5fd5569ec7bb.png)


Restarting remembers this tiny size. 

Eclipse SDK
Version: 2022-12 (4.26)
Build id: I20220907-1800
OS: Linux, v.5.15.0-47-generic, x86_64 / gtk 3.24.33, WebKit 2.36.6
Java vendor: Eclipse Adoptium
Java runtime version: 17.0.3+7
Java version: 17.0.3


Maybe a GTK issue but I'm unable to use Eclipse. Anyone knows where the size of the Javadoc popup is persisted?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/249/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/249,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KNcr3,eclipse.jdt.ui,1245039351,249,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2022-09-13T07:57:21Z,2022-09-13T07:57:21Z,"I switched to a new workspace, closing as no one seems to feel responsible.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KNcr3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/249,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5NYgrl,eclipse.jdt.ui,1298270949,249,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2022-11-01T09:37:13Z,2022-11-01T09:37:13Z,Happened again. @jjohnstn do you know a way to reset the size of the Javadoc without abandon the workspace?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5NYgrl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/249,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Navg0,eclipse.jdt.ui,1298855988,249,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-11-01T17:15:58Z,2022-11-01T17:15:58Z,@vogella I don't know..  It appears to be calculated based on the input data.  Perhaps you could debug JavadocView for your situation.  I did notice that it doesn't seem to account for code sections that aren't wrapped by the smaller window.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Navg0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/253,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/253,eclipse.jdt.ui,1370473915,253,Cleanup select all and deselect all should ignore radio button options/sub-options,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2022-09-12T20:24:21Z,2022-09-13T17:02:48Z,"When configuring Cleanups, the UI has buttons to Select All or Deselect All.  For options/sub-options that use radio buttons, there should be only one item chosen so select all and deselect all should ignore these.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/253/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/256,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/256,eclipse.jdt.ui,1371003810,256,Stale Eclipse-SourceReferences for org.eclipse.jdt.astview and org.eclipse.jdt.jeview,merks,208716,Ed Merks,,CLOSED,2022-09-13T07:42:14Z,2022-09-13T09:30:54Z,"While investigating https://github.com/eclipse-platform/eclipse.platform.releng/issues/113 I noticed these two references to git.eclipse.org:

![image](https://user-images.githubusercontent.com/208716/189840769-46fc4347-ab1c-4a2b-a4bc-0a0b2a9bec20.png)

I'm not sure why these are hard coded.  Can they be removed?  Should they be changed to https://github.com/eclipse-jdt/eclipse.jdt.ui.git instead?


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/256/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/256,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KNZSA,eclipse.jdt.ui,1245025408,256,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-09-13T07:44:06Z,2022-09-13T07:44:06Z,"> I'm not sure why these are hard coded. 

Me either

> Can they be removed? Should they be changed to https://github.com/eclipse-jdt/eclipse.jdt.ui.git instead?

What do we do in other ""good"" manifests? Just do the same I would say.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KNZSA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/256,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KNaz9,eclipse.jdt.ui,1245031677,256,NA,merks,208716,Ed Merks,,NA,2022-09-13T07:50:03Z,2022-09-13T07:50:03Z,"These are the only two bundles in my entire SDK workspace with an Eclipse-SourceReferences property.  They were added like this without a Bugzilla and no explanation.
```
Eclipse-SourceReferences: scm:cvs:pserver:dev.eclipse.org:/cvsroot/eclipse:jdt-ui-home/plugins/org.eclipse.jdt.jeview;tag=R1_0_8
```
I think deleting them makes sense.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KNaz9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/259,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/259,eclipse.jdt.ui,1374330614,259,[18] Update ASTView and JEView Marketplace Entries,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,CLOSED,2022-09-15T10:52:42Z,2022-09-15T12:56:25Z,The Market Place entries need to be created post 4.25 release,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/259/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/259,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KYjSq,eclipse.jdt.ui,1247949994,259,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-09-15T11:08:12Z,2022-09-15T11:08:12Z,gerrit patch associated with this change https://git.eclipse.org/r/c/www.eclipse.org/jdt/+/195831,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KYjSq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/259,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KYwEg,eclipse.jdt.ui,1248002336,259,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-09-15T11:55:44Z,2022-09-15T11:55:44Z,gerrit job associated with checking in the signed jars https://git.eclipse.org/r/c/www.eclipse.org/jdt/+/195834,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KYwEg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/261,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/261,eclipse.jdt.ui,1374415222,261,Outline view: don't show full annotations for method parameters,mmatela,687761,Mateusz Matela,,CLOSED,2022-09-15T11:59:41Z,2023-01-03T16:51:13Z,"The Outline view doesn't show information about annotations on classes, methods or fields - which is good, because it's just an overview that doesn't need to go into such details. But for methods instead of a simple list of parameter types, we do see full annotations (including annotation parameters and their values). In projects that use annotations extensively, it makes the view less useful as we don't see the list of parameters, just the first part of the first parameter's annotations list.

I'm not even sure if a configuration would be necessary for this. Although as I was looking around the Outline settings, the ""Visible Categories..."" option looked promising. But it only shows a dialog with an empty list and nothing can be changed - what is that about?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/261/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/265,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/265,eclipse.jdt.ui,1374591413,265,[19] Update ASTFlattener,noopur2507,8749449,Noopur Gupta,,CLOSED,2022-09-15T14:07:36Z,2022-09-16T06:41:51Z,Update ASTFlattener with changes up to Java 19. See NaiveASTFlattener for reference.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/265/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/269,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/269,eclipse.jdt.ui,1378515704,269,Eclipse IDE for Java Developers fails to update,superbonaci,8339596,,,CLOSED,2022-09-19T21:00:28Z,2022-09-26T18:33:48Z,"Error message when trying to update Eclipse:
````
Cannot complete the install because some dependencies are not satisfiable
  Software being installed: M2E - SLF4J over Logback Logging 2.0.0.20220717-0848 (org.eclipse.m2e.logback.feature.feature.group 2.0.0.20220717-0848)
  Software currently installed: JustJ OpenJDK Hotspot JRE Complete 15.0.1.v20201027-0507 (org.eclipse.justj.openjdk.hotspot.jre.full.feature.group 15.0.1.v20201027-0507)
  Cannot satisfy dependency:
    From: JustJ OpenJDK Hotspot JRE Complete 15.0.1.v20201027-0507 (org.eclipse.justj.openjdk.hotspot.jre.full 15.0.1.v20201027-0507)
    To: org.eclipse.equinox.p2.iu; a.jre.javase 0.0.0
  Cannot satisfy dependency:
    From: JustJ OpenJDK Hotspot JRE Complete 15.0.1.v20201027-0507 (org.eclipse.justj.openjdk.hotspot.jre.full.feature.group 15.0.1.v20201027-0507)
    To: org.eclipse.equinox.p2.iu; org.eclipse.justj.openjdk.hotspot.jre.full [15.0.1.v20201027-0507,15.0.1.v20201027-0507]
  Cannot satisfy dependency:
    From: M2E Logback Configuration 2.0.0.20220705-1221 (org.eclipse.m2e.logback.configuration 2.0.0.20220705-1221)
    To: osgi.ee; (&(osgi.ee=JavaSE)(version=17))
  Cannot satisfy dependency:
    From: M2E - SLF4J over Logback Logging 2.0.0.20220717-0848 (org.eclipse.m2e.logback.feature.feature.group 2.0.0.20220717-0848)
    To: org.eclipse.equinox.p2.iu; org.eclipse.m2e.logback.configuration [2.0.0.20220705-1221,2.0.0.20220705-1221]
````

![](https://i.imgur.com/4H5BWXV.png)

Debug info:
```
Eclipse IDE for Java Developers (includes Incubating components)
Version: 2022-06 (4.24.0)
Build id: 20220609-1112
OS: Windows 10, v.10.0, x86_64 / win32
Java vendor: Oracle Corporation
Java runtime version: 15.0.1+9-18
Java version: 15.0.1
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/269/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/269,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KqH_s,eclipse.jdt.ui,1252556780,269,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-09-20T15:50:58Z,2022-09-20T15:50:58Z,"Hello.  This is not a JDT UI issue but I understand your frustration.

Eclipse 2022-09 (4.25) components require Java 17.  You have JustJ 15.0.1 as part of your 2022-06 IDE and JustJ 17 is not part of the default update sites.  If you add the following: https://download.eclipse.org/justj/jres/17/updates/release to your available update sites, the update should work.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KqH_s/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/269,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Kwauv,eclipse.jdt.ui,1254206383,269,NA,superbonaci,8339596,,,NA,2022-09-21T20:41:29Z,2022-09-21T20:41:29Z,Why JDT UI does not prompt to update JustJ before updating Eclipse? If that's the issue seems logic that they update justj alongside with eclipse itself.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Kwauv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/269,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KwlAx,eclipse.jdt.ui,1254248497,269,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-09-21T21:30:48Z,2022-09-21T21:30:48Z,"I have posed such a question internally.  Apparently, it is not part of current simrel but I agree it should be.  It is a build/platform issue and not JDT UI.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KwlAx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/269,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Kw1vW,eclipse.jdt.ui,1254317014,269,NA,superbonaci,8339596,,,NA,2022-09-21T22:58:00Z,2022-09-21T22:58:00Z,Which bug tracker is the adequate to report this bug?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Kw1vW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/269,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Kw2RT,eclipse.jdt.ui,1254319187,269,NA,superbonaci,8339596,,,NA,2022-09-21T23:01:51Z,2022-09-21T23:01:51Z,"To update it's as easy as downloading the new version from the website and installing, but still it's a weird bug.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Kw2RT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/269,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5K50Wn,eclipse.jdt.ui,1256670631,269,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-09-23T20:57:29Z,2022-09-23T20:57:29Z,It has been proposed on the mailing lists that JustJ could register and enable its update site automatically for IDEs that have installed it.  I agree and this would have solved your problem and will help in the future.  You can post a bug to JustJ: https://bugs.eclipse.org/bugs/enter_bug.cgi?product=Justj,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5K50Wn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/269,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5K7CBX,eclipse.jdt.ui,1256988759,269,NA,superbonaci,8339596,,,NA,2022-09-24T14:56:30Z,2022-09-24T14:56:30Z,"If it's been proposed already we should wait to see the resolution of who's in charge, isn't it?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5K7CBX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/269,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5LAa9c,eclipse.jdt.ui,1258401628,269,NA,jonahgraham,679236,Jonah Graham,jonah@kichwacoders.com,NA,2022-09-26T17:50:35Z,2022-09-26T17:50:35Z,"Please see the [bug raised in bugzilla](https://bugs.eclipse.org/bugs/show_bug.cgi?id=580808) where we will work towards a resolution. I hope that @superbonaci you are able to add yourself to the CC list there if you can participate.

@jjohnstn I guess you can close the JDT issue.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5LAa9c/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/269,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5LAmPH,eclipse.jdt.ui,1258447815,269,NA,superbonaci,8339596,,,NA,2022-09-26T18:33:48Z,2022-09-26T18:33:48Z,"Thank you ,👍","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5LAmPH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/272,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/272,eclipse.jdt.ui,1380648995,272,PackageJavadocTests.testFailToAccessAttachedJavadoc fails in I20220920-2240 on all platforms,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2022-09-21T09:50:51Z,2024-12-21T20:27:06Z,"See https://download.eclipse.org/eclipse/downloads/drops4/I20220920-2240/testResults.php

Stack from https://download.eclipse.org/eclipse/downloads/drops4/I20220920-2240/testresults/html/org.eclipse.jdt.ui.tests_ep426I-unit-cen64-gtk3-java11_linux.gtk.x86_64_11.html

```
at org.junit.Assert.fail(Assert.java:89)
at org.junit.Assert.assertTrue(Assert.java:42)
at org.eclipse.jdt.ui.tests.hover.PackageJavadocTests.testFailToAccessAttachedJavadoc(PackageJavadocTests.java:354)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/272/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/272,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Ye4P2,eclipse.jdt.ui,2558231542,272,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2024-12-21T20:27:05Z,2024-12-21T20:27:05Z,Haven't seen this failing in long time.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Ye4P2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/274,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/274,eclipse.jdt.ui,1380966172,274,Use the shortcut key to operate the alarm Unhandled event loop exception,lyh061619,15118571,,,OPEN,2022-09-21T13:47:55Z,2022-09-22T04:29:59Z,"version: eclipse.buildId=4.25.0.I20220831-1800

Use the shortcut key to switch the editor to report Unhandled event loop exception. The detailed exception is as follows:

java.lang.StackOverflowError
	at org.eclipse.e4.core.internal.contexts.osgi.EclipseContextOSGi.lookup(EclipseContextOSGi.java:72)
	at org.eclipse.e4.core.internal.contexts.osgi.EclipseContextOSGi.containsKey(EclipseContextOSGi.java:64)
	at org.eclipse.e4.core.internal.contexts.EclipseContext.containsKey(EclipseContext.java:155)
	at org.eclipse.e4.core.internal.contexts.EclipseContext.containsKey(EclipseContext.java:146)
	at org.eclipse.e4.core.internal.contexts.ContextObjectSupplier.fillArgs(ContextObjectSupplier.java:186)
	at org.eclipse.e4.core.internal.contexts.ContextObjectSupplier.get(ContextObjectSupplier.java:172)
	at org.eclipse.e4.core.internal.di.InjectorImpl.resolveArgs(InjectorImpl.java:531)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:309)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/274/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/274,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Ku2Yl,eclipse.jdt.ui,1253795365,274,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-09-21T14:29:31Z,2022-09-21T14:29:31Z,"Please provide more information:
1) Operating system
2) **Exact** steps to reproduce. Which command, which editor, etc.
3) **Full** error log, not part of it..","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Ku2Yl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/274,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KvFXg,eclipse.jdt.ui,1253856736,274,NA,lyh061619,15118571,,,NA,2022-09-21T15:15:29Z,2022-09-21T15:15:29Z,"

> Please provide more information:
> 
>     1. Operating system
> 
>     2. **Exact** steps to reproduce. Which command, which editor, etc.
> 
>     3. **Full** error log, not part of it..

The asynchrony of each trigger is different, resubmit a complete one, and the asynchrony problem is the same
1、Operating system
win10
2、Exact steps to reproduce. Which command, which editor, etc.
ctrl+e 、ctrl+tab、 ctrl+f
3、Full error log, not part of it..
!ENTRY org.eclipse.ui 4 0 2022-09-21 17:17:52.641
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.StackOverflowError
	at java.base/java.util.Collections$SynchronizedMap.get(Collections.java:2672)
	at org.eclipse.e4.core.internal.di.InjectorImpl.getDeclaredMethods(InjectorImpl.java:829)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:302)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.canExecute(E4HandlerProxy.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.isEnabled(HandlerServiceHandler.java:62)
	at org.eclipse.core.commands.Command.isEnabled(Command.java:832)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:917)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.canExecute(E4HandlerProxy.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.isEnabled(HandlerServiceHandler.java:62)
	at org.eclipse.core.commands.Command.isEnabled(Command.java:832)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:917)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.canExecute(E4HandlerProxy.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.isEnabled(HandlerServiceHandler.java:62)
	at org.eclipse.core.commands.Command.isEnabled(Command.java:832)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:917)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.canExecute(E4HandlerProxy.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.isEnabled(HandlerServiceHandler.java:62)
	at org.eclipse.core.commands.Command.isEnabled(Command.java:832)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:917)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.canExecute(E4HandlerProxy.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.isEnabled(HandlerServiceHandler.java:62)
	at org.eclipse.core.commands.Command.isEnabled(Command.java:832)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:917)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.canExecute(E4HandlerProxy.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.isEnabled(HandlerServiceHandler.java:62)
	at org.eclipse.core.commands.Command.isEnabled(Command.java:832)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:917)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.canExecute(E4HandlerProxy.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.isEnabled(HandlerServiceHandler.java:62)
	at org.eclipse.core.commands.Command.isEnabled(Command.java:832)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:917)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.canExecute(E4HandlerProxy.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.isEnabled(HandlerServiceHandler.java:62)
	at org.eclipse.core.commands.Command.isEnabled(Command.java:832)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:917)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.canExecute(E4HandlerProxy.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.isEnabled(HandlerServiceHandler.java:62)
	at org.eclipse.core.commands.Command.isEnabled(Command.java:832)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:917)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.canExecute(E4HandlerProxy.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.isEnabled(HandlerServiceHandler.java:62)
	at org.eclipse.core.commands.Command.isEnabled(Command.java:832)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:917)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.canExecute(E4HandlerProxy.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.isEnabled(HandlerServiceHandler.java:62)
	at org.eclipse.core.commands.Command.isEnabled(Command.java:832)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:917)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.canExecute(E4HandlerProxy.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.isEnabled(HandlerServiceHandler.java:62)
	at org.eclipse.core.commands.Command.isEnabled(Command.java:832)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:917)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.canExecute(E4HandlerProxy.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.isEnabled(HandlerServiceHandler.java:62)
	at org.eclipse.core.commands.Command.isEnabled(Command.java:832)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:917)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.canExecute(E4HandlerProxy.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.isEnabled(HandlerServiceHandler.java:62)
	at org.eclipse.core.commands.Command.isEnabled(Command.java:832)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:917)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.canExecute(E4HandlerProxy.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.isEnabled(HandlerServiceHandler.java:62)
	at org.eclipse.core.commands.Command.isEnabled(Command.java:832)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:917)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.canExecute(E4HandlerProxy.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.isEnabled(HandlerServiceHandler.java:62)
	at org.eclipse.core.commands.Command.isEnabled(Command.java:832)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:917)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.canExecute(E4HandlerProxy.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
![20220921174128-3](https://user-images.githubusercontent.com/15118571/191543077-ddbb7de7-d09a-4a96-a541-f4f3bd6f680f.png)
![20220921174049-2](https://user-images.githubusercontent.com/15118571/191543098-345f8115-0c6f-4b74-be43-2f79f6a0334e.png)
![20220921174020-1](https://user-images.githubusercontent.com/15118571/191543105-73d87619-07c4-48a9-a515-5379f8c06fe5.png)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KvFXg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/274,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KvIvg,eclipse.jdt.ui,1253870560,274,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-09-21T15:26:48Z,2022-09-21T15:26:48Z,Please provide at least some steps to reproduce!,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KvIvg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/274,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KvK1a,eclipse.jdt.ui,1253879130,274,NA,lyh061619,15118571,,,NA,2022-09-21T15:33:45Z,2022-09-21T15:33:45Z,"> Please provide at least some steps to reproduce!

My working computer sleeps until the next time I use it. I often use the ctrl+e shortcut key to switch the editor during work. The above bug appears after a long time. If it appears, the problem disappears after I restart the ide according to the prompt","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KvK1a/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/274,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KvMte,eclipse.jdt.ui,1253886814,274,NA,lyh061619,15118571,,,NA,2022-09-21T15:40:02Z,2022-09-21T15:40:02Z,"> Please provide at least some steps to reproduce!

At present, I encounter a bug that directly causes it. The recurrence step is to use the ctrl+e shortcut key. The quick switch editor is frequently needed in work","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KvMte/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/274,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Kxlb2,eclipse.jdt.ui,1254512374,274,NA,lyh061619,15118571,,,NA,2022-09-22T04:29:59Z,2022-09-22T04:29:59Z,"> Please provide at least some steps to reproduce!

Now I use ctrl+e to quickly switch the editing problem again

java.lang.StackOverflowError
	at org.eclipse.e4.ui.bindings.internal.BindingTableManager.getTable(BindingTableManager.java:75)
	at org.eclipse.e4.ui.bindings.internal.BindingTableManager.getSequencesFor(BindingTableManager.java:181)
	at org.eclipse.e4.ui.bindings.internal.BindingTableManager.getBestSequenceFor(BindingTableManager.java:166)
	at org.eclipse.e4.ui.bindings.internal.BindingServiceImpl.getBestSequenceFor(BindingServiceImpl.java:136)
	at org.eclipse.ui.internal.keys.BindingService.getBestActiveBindingFor(BindingService.java:166)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:511)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.canExecute(E4HandlerProxy.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor14.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.isEnabled(HandlerServiceHandler.java:62)
	at org.eclipse.core.commands.Command.isEnabled(Command.java:832)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:917)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.canExecute(E4HandlerProxy.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor14.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.isEnabled(HandlerServiceHandler.java:62)
	at org.eclipse.core.commands.Command.isEnabled(Command.java:832)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:917)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.canExecute(E4HandlerProxy.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor14.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.isEnabled(HandlerServiceHandler.java:62)
	at org.eclipse.core.commands.Command.isEnabled(Command.java:832)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:917)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.canExecute(E4HandlerProxy.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor14.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.isEnabled(HandlerServiceHandler.java:62)
	at org.eclipse.core.commands.Command.isEnabled(Command.java:832)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:917)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.canExecute(E4HandlerProxy.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor14.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.isEnabled(HandlerServiceHandler.java:62)
	at org.eclipse.core.commands.Command.isEnabled(Command.java:832)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:917)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.canExecute(E4HandlerProxy.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor14.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.isEnabled(HandlerServiceHandler.java:62)
	at org.eclipse.core.commands.Command.isEnabled(Command.java:832)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:917)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.canExecute(E4HandlerProxy.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor14.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.isEnabled(HandlerServiceHandler.java:62)
	at org.eclipse.core.commands.Command.isEnabled(Command.java:832)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:917)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.canExecute(E4HandlerProxy.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor14.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.isEnabled(HandlerServiceHandler.java:62)
	at org.eclipse.core.commands.Command.isEnabled(Command.java:832)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:917)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.canExecute(E4HandlerProxy.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor14.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.isEnabled(HandlerServiceHandler.java:62)
	at org.eclipse.core.commands.Command.isEnabled(Command.java:832)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:917)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.canExecute(E4HandlerProxy.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor14.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.isEnabled(HandlerServiceHandler.java:62)
	at org.eclipse.core.commands.Command.isEnabled(Command.java:832)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:917)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.canExecute(E4HandlerProxy.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor14.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.isEnabled(HandlerServiceHandler.java:62)
	at org.eclipse.core.commands.Command.isEnabled(Command.java:832)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:917)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.canExecute(E4HandlerProxy.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor14.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.isEnabled(HandlerServiceHandler.java:62)
	at org.eclipse.core.commands.Command.isEnabled(Command.java:832)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:917)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.canExecute(E4HandlerProxy.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor14.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.isEnabled(HandlerServiceHandler.java:62)
	at org.eclipse.core.commands.Command.isEnabled(Command.java:832)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:917)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.canExecute(E4HandlerProxy.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor14.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.isEnabled(HandlerServiceHandler.java:62)
	at org.eclipse.core.commands.Command.isEnabled(Command.java:832)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:917)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.canExecute(E4HandlerProxy.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor14.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.isEnabled(HandlerServiceHandler.java:62)
	at org.eclipse.core.commands.Command.isEnabled(Command.java:832)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:917)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.canExecute(E4HandlerProxy.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor14.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.isEnabled(HandlerServiceHandler.java:62)
	at org.eclipse.core.commands.Command.isEnabled(Command.java:832)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:917)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.ui.menus.CommandContributionItem.isEnabled(CommandContributionItem.java:916)
	at org.eclipse.ui.menus.CommandContributionItem.updateMenuItem(CommandContributionItem.java:531)
	at org.eclipse.ui.menus.CommandContributionItem.update(CommandContributionItem.java:484)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$2(CommandContributionItem.java:323)
	at org.eclipse.ui.menus.CommandContributionItem.updateCommandProperties(CommandContributionItem.java:327)
	at org.eclipse.ui.menus.CommandContributionItem.lambda$1(CommandContributionItem.java:294)
	at org.eclipse.core.commands.Command$1.run(Command.java:529)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.commands.Command.fireCommandChanged(Command.java:522)
	at org.eclipse.core.commands.Command.lambda$0(Command.java:1002)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.fireHandlerChanged(HandlerServiceHandler.java:180)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:115)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.ui.internal.handlers.HandlerProxy.lambda$1(HandlerProxy.java:372)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.core.commands.AbstractHandler.setBaseEnabled(AbstractHandler.java:111)
	at org.eclipse.ui.texteditor.AbstractTextZoomHandler.setEnabled(AbstractTextZoomHandler.java:131)
	at org.eclipse.ui.texteditor.TextZoomInHandler.setEnabled(TextZoomInHandler.java:1)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:229)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.canExecute(E4HandlerProxy.java:76)
	at jdk.internal.reflect.GeneratedMethodAccessor14.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.isEnabled(HandlerServiceHandler.java:62)
	at org.eclipse.core.commands.Command.isEnabled(Command.java:832)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Kxlb2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/275,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/275,eclipse.jdt.ui,1381922812,275,PackageJavadocTests# testFailToAccessAttachedJavadoc test failing ,noopur2507,8749449,Noopur Gupta,,CLOSED,2022-09-22T06:46:00Z,2022-09-22T09:05:58Z,PackageJavadocTests# testFailToAccessAttachedJavadoc test failing in I-build since [I20220920-2240](https://download.eclipse.org/eclipse/downloads/drops4/I20220920-2240/).,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/275/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/275,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Kx6rN,eclipse.jdt.ui,1254599373,275,NA,noopur2507,8749449,Noopur Gupta,,NA,2022-09-22T06:46:09Z,2022-09-22T06:46:09Z,"
java.lang.AssertionError: <html><head><style CHARSET=""ISO-8859-1"" TYPE=""text/css"">/* Font definitions */
html { font-family: 'Segoe UI',sans-serif; font-size: 9pt; font-style: normal; font-weight: normal; }
body, h1, h2, h3, h4, h5, h6, p, table, td, caption, th, ul, ol, dl, li, dd, dt { font-size: 1em; }
pre { font-family: monospace; }

/* Margins */
body { overflow: auto; margin-top: 0px; margin-bottom: 0.5em; margin-left: 0.3em; margin-right: 0px; }
h1 { margin-top: 0.3em; margin-bottom: 0.04em; }
h2 { margin-top: 2em; margin-bottom: 0.25em; }
h3 { margin-top: 1.7em; margin-bottom: 0.25em; }
h4 { margin-top: 2em; margin-bottom: 0.3em; }
h5 { margin-top: 0px; margin-bottom: 0px; }
p { margin-top: 1em; margin-bottom: 1em; }
pre { margin-left: 0.6em; }
ul { margin-top: 0px; margin-bottom: 1em; margin-left: 1em; padding-left: 1em;}
li { margin-top: 0px; margin-bottom: 0px; }
li p { margin-top: 0px; margin-bottom: 0px; }
ol { margin-top: 0px; margin-bottom: 1em; margin-left: 1em; padding-left: 1em; }
dl { margin-top: 0px; margin-bottom: 1em; }
dt { margin-top: 0px; margin-bottom: 0px; font-weight: bold; }
dd { margin-top: 0px; margin-bottom: 0px; }

/* Styles and colors */
a:link { color: #0066cc; } /* get's replaced with actual color */
a:hover { color: #00478f; } /* get's replaced with actual color */
a:visited { text-decoration: underline; }
a.header:link { text-decoration: none; color: #000000 }
a.header:visited { text-decoration: none; color: #000000 }
a.header:hover { text-decoration: underline; color: #00478f; } /* get's replaced with actual color */
h4 { font-style: italic; }
strong { font-weight: bold; }
em { font-style: italic; }
var { font-style: italic; }
th { font-weight: bold; }

/* Workarounds for new Javadoc stylesheet (1.7) */
ul.blockList li.blockList, ul.blockListLast li.blockList {
list-style:none;
}
ul.blockList ul.blockList ul.blockList ul.blockList li.blockListLast {
list-style:none;
}
</style>
<base href='https://docs.oracle.com/javase/6/docs/apii/java/math/package-summary.html'>
</head><body text=""#000000"" bgcolor=""#ffffe1""><h5><div style='word-wrap: break-word; position: relative; margin-left: 20px; padding-top: 2px; '><a href='eclipse-open:%E2%98%82=TestSetupProject/C:%5C/Users%5C/genie.releng%5C/workspace%5C/ep426I-unit-win32-java11%5C/workarea%5C/I20220921-1800%5C/eclipse-testing%5C/test-eclipse%5C/eclipse%5C/plugins%5C/org.eclipse.jdt.ui.tests_3.14.500.v20220909-2154%5C/testresources%5C/rtstubs15.jar=/javadoc_location=/https:%5C/%5C/docs.oracle.com%5C/javase%5C/6%5C/docs%5C/apii%5C/=/%3Cjava.math'><!--[if lte IE 6]><![if gte IE 5.5]>
<span alt='Open Declaration' style=""border:none; position: absolute; width: 16px; height: 16px; left: -21px; filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src='file:/C:/Users/genie.releng/workspace/ep426I-unit-win32-java11/workarea/I20220921-1800/eclipse-testing/test-eclipse/eclipse/jdt_folder/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/0.png')""></span>
<![endif]><![endif]-->
<!--[if !IE]>-->
<img alt='Open Declaration' style='border:none; position: absolute; width: 16px; height: 16px; left: -21px; ' src='file:/C:/Users/genie.releng/workspace/ep426I-unit-win32-java11/workarea/I20220921-1800/eclipse-testing/test-eclipse/eclipse/jdt_folder/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/0.png'/>
<!--<![endif]-->
<!--[if gte IE 7]>
<img alt='Open Declaration' style='border:none; position: absolute; width: 16px; height: 16px; left: -21px; ' src='file:/C:/Users/genie.releng/workspace/ep426I-unit-win32-java11/workarea/I20220921-1800/eclipse-testing/test-eclipse/eclipse/jdt_folder/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/0.png'/>
<![endif]-->
</a><a class='header' href='eclipse-javadoc:%E2%98%82=TestSetupProject/C:%5C/Users%5C/genie.releng%5C/workspace%5C/ep426I-unit-win32-java11%5C/workarea%5C/I20220921-1800%5C/eclipse-testing%5C/test-eclipse%5C/eclipse%5C/plugins%5C/org.eclipse.jdt.ui.tests_3.14.500.v20220909-2154%5C/testresources%5C/rtstubs15.jar=/javadoc_location=/https:%5C/%5C/docs.oracle.com%5C/javase%5C/6%5C/docs%5C/apii%5C/=/%3Cjava'>java</a>.math</div></h5><br><p></body></html>
at org.junit.Assert.fail(Assert.java:89)
at org.junit.Assert.assertTrue(Assert.java:42)
at org.eclipse.jdt.ui.tests.hover.PackageJavadocTests.testFailToAccessAttachedJavadoc(PackageJavadocTests.java:354)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Kx6rN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/275,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KyGMR,eclipse.jdt.ui,1254646545,275,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-09-22T07:40:15Z,2022-09-22T07:40:15Z,Duplicate of #272,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KyGMR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/275,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KydHo,eclipse.jdt.ui,1254740456,275,NA,noopur2507,8749449,Noopur Gupta,,NA,2022-09-22T09:05:57Z,2022-09-22T09:05:57Z,"> Duplicate of #272

OK. Closing this one.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5KydHo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/276,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/276,eclipse.jdt.ui,1382763243,276,[refactor] Import static doesn't work when static method is referenced from subtype,fapdash,459631,FAP,,CLOSED,2022-09-22T17:09:17Z,2022-11-08T21:26:02Z,"[Original report](https://bugs.eclipse.org/bugs/show_bug.cgi?id=484727) by Lukas Eder: 

Consider the following classes:

```java
package x;

public class A {
    public static void m() {}
}
```

```java
package x;

public class B extends A {

}
```

```java
import x.B;

public class Test {
    void x() {
        B.m();
    }
}
```

I want to be able to click on ""m()"" and static-import the method via Ctrl+Shift+M or ""Right click > Source > Add Import"". If I do this, nothing happens. If I do Ctrl+Shift+M on ""m()"" in the following class, it works:

```java
import static x.A.m;

public class Test {
    void x() {
        m();
    }
}
```


---

I copied the issue to GitHub because Eclipse Genie wanted to close it over on bugzilla.
I intend to work on this issue in the coming weeks.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/276/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/276,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5N9CgA,eclipse.jdt.ui,1307846656,276,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-11-08T21:26:02Z,2022-11-08T21:26:02Z,Verified for 4.26 M3 using I20221108 build.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5N9CgA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/277,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/277,eclipse.jdt.ui,1383105317,277,Removal of unused throws via quickfix does not remove import,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2022-09-22T22:57:52Z,2022-09-24T02:27:43Z,"For the following code:

```
import java.io.EOFException;

public Test {

  public void foo() throws EOFException {
  }

}
```
can flag an error on the throws statement as it is never thrown.  The quick fix to remove the unused exception will not remove the import statement above which then may generate a warning/error itself.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/277/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/281,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/281,eclipse.jdt.ui,1387328575,281,Add generators to the quick fix / assists for the class ,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,CLOSED,2022-09-27T08:18:52Z,2022-11-11T05:49:20Z,"The assists pop-up on a Java class still contains only a few entries. What not adding the generate entries also the quick fixes?

![image](https://user-images.githubusercontent.com/139910/192472445-c9b59e55-5fe8-488b-9068-749b4be492ac.png)

![image](https://user-images.githubusercontent.com/139910/192472597-a7c1ce9e-018c-40c1-bf40-2237bdad7f8c.png)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/281/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/281,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5LDSkV,eclipse.jdt.ui,1259153685,281,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2022-09-27T08:19:06Z,2022-09-27T08:19:06Z,cc @jjohnstn ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5LDSkV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/281,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5LMaZK,eclipse.jdt.ui,1261545034,281,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-09-28T22:54:19Z,2022-09-28T22:54:19Z,"Not sure about all of them.  I think there's a precedent for Generate Getters and Setters because the Quick Fix for a field that doesn't already have a getter/setter offers to create one so it makes sense to offer this for the class.  Of the remaining ones in your list, I could see Override/Implement Methods and possibly hashCode() and equals(), but I don't think the others are important enough and we don't want a cluttered list.

@noopur2507 What do you think?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5LMaZK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/281,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5LNZpd,eclipse.jdt.ui,1261804125,281,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2022-09-29T05:59:54Z,2022-09-29T05:59:54Z,"I think the most important (for me) would be:

Getter / Setter (per field is not super easy to use)
hashCode()
Equals()
toString()

The Override / implement Method wizard is rarely used by me, but adding it would most likely also helpful to others.

Thanks @jjohnstn for considering this. IntelliJ has a popup and shortcut for these generations, would be nice to have this as quick fix in Eclipse.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5LNZpd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/281,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5LtkzF,eclipse.jdt.ui,1270238405,281,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-10-06T15:11:29Z,2022-10-06T15:11:29Z,I have added: https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/285 to handle getters/setters,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5LtkzF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/281,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Lw_nn,eclipse.jdt.ui,1271134695,281,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2022-10-07T05:42:28Z,2022-10-07T05:42:28Z,Thanks @jjohnstn what about the hashCode/ equals and toString generators?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Lw_nn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/281,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5L0U9k,eclipse.jdt.ui,1272008548,281,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-10-07T19:15:21Z,2022-10-07T19:15:21Z,"Still to come.  Otherwise, I would have closed the issue.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5L0U9k/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/281,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5MP5eE,eclipse.jdt.ui,1279235972,281,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-10-14T16:42:41Z,2022-10-14T16:42:41Z,@vogella I think this can be closed now unless you have any issues.  I will leave the implement/override methods to be accessible via the Source menu.  ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5MP5eE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/281,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5McThv,eclipse.jdt.ui,1282488431,281,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2022-10-18T14:28:27Z,2022-10-18T14:28:27Z,"Thanks Jeff, looks great ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5McThv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/281,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5N8-t9,eclipse.jdt.ui,1307831165,281,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-11-08T21:11:58Z,2022-11-08T21:11:58Z,Verified for 4.26 M3 using I20221108 build.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5N8-t9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/281,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5OKDeN,eclipse.jdt.ui,1311258509,281,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2022-11-11T05:49:20Z,2022-11-11T05:49:20Z,@jjohnstn Can you please add N&N entries for these new Quick assists.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5OKDeN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/282,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/282,eclipse.jdt.ui,1389465346,282,Executing Junit4 based test fails using Junit5 based launch configuration (test not found) ,carstenartur,3164220,Carsten Hammer,,CLOSED,2022-09-28T14:27:38Z,2024-10-03T08:21:17Z,It looks like you removed support for legacy (Junit3+4) tests in junit 5 run configurations in 4.24(?? Is this true or is there something changed in the defaults?). I remember there have been commits to remove legacy support. While it is possible to switch the run configuration back to junit 4 on each test execution it is slightly annoying to be forced to do this.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/282/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/282,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5LLb2h,eclipse.jdt.ui,1261288865,282,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-09-28T18:07:40Z,2022-09-28T18:07:40Z,Hi Carsten.  There isn't any JDT patch I can find that mentions removing Junit3+4 testing support.  I have a Junit3 test that has a Run Configuration and it runs as JUnit3.  Do you have a specific case you can elaborate?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5LLb2h/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/282,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5NHUaH,eclipse.jdt.ui,1293764231,282,NA,carstenartur,3164220,Carsten Hammer,,NA,2022-10-27T16:13:00Z,2022-10-27T16:13:00Z,"> Hi Carsten. There isn't any JDT patch I can find that mentions removing Junit3+4 testing support. I have a Junit3 test that has a Run Configuration and it runs as JUnit3. Do you have a specific case you can elaborate?

If you feel like trying it yourself just try to start the junit 5 parametrized test at
https://github.com/carstenartur/sandbox/blob/main/sandbox_platform_helper_test/src/org/sandbox/jdt/ui/tests/quickfix/Java8CleanUpTest.java
However it is not exactly the junit 5 case I mean - though it might be related.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5NHUaH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/283,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/283,eclipse.jdt.ui,1391851731,283,[19] No quickfix offered when a switch case is reported to have both unconditional pattern and default label,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,OPEN,2022-09-30T05:31:30Z,2022-09-30T05:31:30Z,"The following code, when preview is enabled, is reported for an error:

```
int res = switch(r) {
	case Rectangle3 r1 -> {
	     yield 1;
        }
	default -> 0;
};
```


The error reported is : `Switch case cannot have both unconditional pattern and default label`
However, there's no quickfix provided to remove the default label. It would be helpful for the user to provide one.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/283/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/286,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/286,eclipse.jdt.ui,1398036954,286,Can't export runnable jar if some launch config contains unexpected attributes,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2022-10-05T16:04:10Z,2022-10-05T19:07:50Z,"I was trying to export runnable jar (File -> Export -> Java -> Runnable Jar File) but that doesn't work (wizard simply doesn't switch to the next page), reporting an error in the log.

I have ~100 launch configs in various projects, I have no clue which one might be ""bad"" now.
This is a regression from 245c6ce7856df728b83bea927babcc4afaf5d957

I see we loop there over all launch configs.
*We should*
1) Try/catch for every config, not over all once
2) Properly report **which** one is broken

```
eclipse.buildId=4.25.0.202209021158
java.version=17.0.4
java.vendor=Eclipse Adoptium
BootLoader constants: OS=linux, ARCH=x86_64, WS=gtk, NL=en_US
Command-line arguments:  -os linux -ws gtk -arch x86_64

org.eclipse.ui
Error
Wed Oct 05 18:00:06 CEST 2022
Unhandled event loop exception

java.lang.IllegalArgumentException: Path for project must have only one segment.
	at org.eclipse.core.runtime.Assert.isLegal(Assert.java:66)
	at org.eclipse.core.internal.resources.WorkspaceRoot.getProject(WorkspaceRoot.java:151)
	at org.eclipse.jdt.internal.ui.jarpackagerfat.FatJarPackageWizardPage.getLaunchConfigurations(FatJarPackageWizardPage.java:669)
	at org.eclipse.jdt.internal.ui.jarpackagerfat.FatJarPackageWizardPage.createLaunchConfigSelectionGroup(FatJarPackageWizardPage.java:349)
	at org.eclipse.jdt.internal.ui.jarpackagerfat.FatJarPackageWizardPage.createContentGroup(FatJarPackageWizardPage.java:333)
	at org.eclipse.jdt.internal.ui.jarpackagerfat.FatJarPackageWizardPage.createControl(FatJarPackageWizardPage.java:309)
	at org.eclipse.jface.wizard.Wizard.createPageControls(Wizard.java:178)
	at org.eclipse.jface.wizard.WizardDialog.createPageControls(WizardDialog.java:744)
	at org.eclipse.jface.wizard.WizardDialog.setWizard(WizardDialog.java:1182)
	at org.eclipse.jface.wizard.WizardDialog.updateForPage(WizardDialog.java:1235)
	at org.eclipse.jface.wizard.WizardDialog.lambda$3(WizardDialog.java:1223)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jface.wizard.WizardDialog.showPage(WizardDialog.java:1223)
	at org.eclipse.jface.wizard.WizardDialog.nextPressed(WizardDialog.java:918)
	at org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:469)
	at org.eclipse.jface.dialogs.Dialog.lambda$0(Dialog.java:619)
	at org.eclipse.swt.events.SelectionListener$1.widgetSelected(SelectionListener.java:84)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:5796)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1529)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:5025)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4477)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.ui.internal.handlers.WizardHandler$Export.executeHandler(WizardHandler.java:104)
	at org.eclipse.ui.internal.handlers.WizardHandler.execute(WizardHandler.java:283)
	at org.eclipse.ui.internal.handlers.HandlerProxy.execute(HandlerProxy.java:283)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor265.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.ui.internal.handlers.LegacyHandlerService.executeCommand(LegacyHandlerService.java:389)
	at org.eclipse.ui.internal.actions.CommandAction.runWithEvent(CommandAction.java:142)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:5796)
...
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/286/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/289,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/289,eclipse.jdt.ui,1399036047,289,Provide a more up-to-date list of default/promoted views/perspectives,ctron,202474,Jens Reimann,ctron@dentrassi.de,OPEN,2022-10-06T07:55:35Z,2022-10-06T07:55:35Z,"Installing a fresh release of the Eclipse Java IDE brings the following ""new view"" menu:

![image](https://user-images.githubusercontent.com/202474/194248679-bcef19fd-8bb8-4764-9dd6-9a617ae93e38.png)

Ant as the first entry (I know `A` goes first, but you could hide this under ""others"" by now). This (and others) take up space for the other great stuff hidden in the ""Others"" dialog.

Same for perspectives, this is UI flow I need to perform in order to get a dialog which allows me to go to the Git perspective:

![image](https://user-images.githubusercontent.com/202474/194249384-257ef767-6ed0-4484-b956-0cd7da174d1d.png)

I know I can click on the tiny plus icon too … but still, views are there, perspectives too. So that should be a bit more usable IMHO.

At least there should be a more reasonable choice of perspectives presented.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/289/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/290,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/290,eclipse.jdt.ui,1399827738,290,UI Freeze opening Quick Type Hierarchy,jukzi,51790620,Jörg Kubitz,,CLOSED,2022-10-06T15:07:13Z,2024-02-08T15:24:13Z,"""***Quick*** Type Hierarchy"" ...
I accendentially pressed Strg+t on Object.toString().
10minute freeze and i could not cancel it:-(

example stacktrace:

```
""main"" #1 prio=6 os_prio=0 cpu=566609.38ms elapsed=19583.29s tid=0x00000172dcc37800 nid=0x2980 runnable  [0x000000351ff79000]
   java.lang.Thread.State: RUNNABLE
        at java.util.zip.ZipFile$Source.initCEN(java.base@11.0.16.1/ZipFile.java:1581)
        at java.util.zip.ZipFile$Source.<init>(java.base@11.0.16.1/ZipFile.java:1308)
        at java.util.zip.ZipFile$Source.get(java.base@11.0.16.1/ZipFile.java:1271)
        at java.util.zip.ZipFile$CleanableResource.<init>(java.base@11.0.16.1/ZipFile.java:733)
        at java.util.zip.ZipFile$CleanableResource.get(java.base@11.0.16.1/ZipFile.java:850)
        at java.util.zip.ZipFile.<init>(java.base@11.0.16.1/ZipFile.java:248)
        at java.util.zip.ZipFile.<init>(java.base@11.0.16.1/ZipFile.java:177)
        at java.util.zip.ZipFile.<init>(java.base@11.0.16.1/ZipFile.java:191)
        at org.eclipse.jdt.internal.core.JavaModelManager.getZipFile(JavaModelManager.java:2897)
        at org.eclipse.jdt.internal.core.nd.java.model.BinaryTypeFactory.rawReadTypeTestForExists(BinaryTypeFactory.java:145)
        at org.eclipse.jdt.internal.core.nd.java.model.BinaryTypeFactory.rawReadType(BinaryTypeFactory.java:121)
        at org.eclipse.jdt.internal.core.nd.java.model.BinaryTypeFactory.readType(BinaryTypeFactory.java:116)
        at org.eclipse.jdt.internal.core.ClassFile.getJarBinaryTypeInfo(ClassFile.java:246)
        at org.eclipse.jdt.internal.core.ClassFile.getBinaryTypeInfo(ClassFile.java:201)
        at org.eclipse.jdt.internal.core.ClassFile.buildStructure(ClassFile.java:92)
        at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
        at org.eclipse.jdt.internal.core.SourceRefElement.generateInfos(SourceRefElement.java:113)
        at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
        at org.eclipse.jdt.internal.core.BinaryType.getElementInfo(BinaryType.java:288)
        at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:314)
        at org.eclipse.jdt.internal.core.BinaryType.isAnonymous(BinaryType.java:732)
        at org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyContentProvider.isAnonymous(TypeHierarchyContentProvider.java:379)
        at org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyContentProvider.isAnonymousFromInterface(TypeHierarchyContentProvider.java:386)
        at org.eclipse.jdt.internal.ui.typehierarchy.TraditionalHierarchyViewer$TraditionalHierarchyContentProvider.getTypesInHierarchy(TraditionalHierarchyViewer.java:140)
        at org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyContentProvider.hasTypeChildren(TypeHierarchyContentProvider.java:333)
        at org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyContentProvider.hasChildren(TypeHierarchyContentProvider.java:275)
        at org.eclipse.jface.viewers.AbstractTreeViewer.isExpandable(AbstractTreeViewer.java:2184)
        at org.eclipse.jface.viewers.TreeViewer.isExpandable(TreeViewer.java:553)
        at org.eclipse.jface.viewers.AbstractTreeViewer.isExpandable(AbstractTreeViewer.java:2214)
        at org.eclipse.jface.viewers.AbstractTreeViewer.internalExpandToLevel(AbstractTreeViewer.java:1818)
        at org.eclipse.jface.viewers.AbstractTreeViewer.internalExpandToLevel(AbstractTreeViewer.java:1831)
        at org.eclipse.jface.viewers.AbstractTreeViewer.internalInitializeTree(AbstractTreeViewer.java:1611)
        at org.eclipse.jface.viewers.TreeViewer.internalInitializeTree(TreeViewer.java:787)
        at org.eclipse.jface.viewers.AbstractTreeViewer.lambda$1(AbstractTreeViewer.java:1595)
        at org.eclipse.jface.viewers.AbstractTreeViewer$$Lambda$677/0x00000173fcb4f840.run(Unknown Source)
        at org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:1398)
        at org.eclipse.jface.viewers.TreeViewer.preservingSelection(TreeViewer.java:365)
        at org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:1359)
        at org.eclipse.jface.viewers.AbstractTreeViewer.inputChanged(AbstractTreeViewer.java:1589)
        at org.eclipse.jface.viewers.ContentViewer.setInput(ContentViewer.java:282)
        at org.eclipse.jface.viewers.StructuredViewer.setInput(StructuredViewer.java:1632)
        at org.eclipse.jdt.internal.ui.text.AbstractInformationControl.inputChanged(AbstractInformationControl.java:618)
        at org.eclipse.jdt.internal.ui.typehierarchy.HierarchyInformationControl.setInput(HierarchyInformationControl.java:306)
        at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
        at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
        at org.eclipse.jface.text.AbstractInformationControlManager.setInformation(AbstractInformationControlManager.java:431)
        at org.eclipse.jface.text.information.InformationPresenter.computeInformation(InformationPresenter.java:321)
        at org.eclipse.jface.text.AbstractInformationControlManager.doShowInformation(AbstractInformationControlManager.java:1101)
        at org.eclipse.jface.text.AbstractInformationControlManager.showInformation(AbstractInformationControlManager.java:1091)
        at org.eclipse.jdt.internal.ui.javaeditor.JavaSourceViewer.doOperation(JavaSourceViewer.java:175)
        at org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor$5.doOperation(ClassFileEditor.java:929)
        at org.eclipse.ui.texteditor.TextOperationAction.lambda$0(TextOperationAction.java:130)
        at org.eclipse.ui.texteditor.TextOperationAction$$Lambda$1724/0x00000172c3014c40.run(Unknown Source)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
        at org.eclipse.ui.texteditor.TextOperationAction.run(TextOperationAction.java:130)
        at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
        at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
        at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
        at jdk.internal.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
        at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(java.base@11.0.16.1/DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(java.base@11.0.16.1/Method.java:566)
        at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
        at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
        at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
        at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
        at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
        at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
        at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
        at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
        at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
        at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
        at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
        at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
        at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
        at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1262)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
        at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
        at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
        at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1542)
        at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4868)
        at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
        at org.eclipse.swt.widgets.Control.windowProc(Control.java:4746)
        at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
        at org.eclipse.swt.widgets.Display.windowProc(Display.java:5026)
        at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3643)
        at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
        at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
        at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
        at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
        at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
        at org.eclipse.ui.internal.Workbench$$Lambda$144/0x00000173ebe340a8.run(Unknown Source)
        at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
        at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
        at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
        at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
        at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
        at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
        at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(java.base@11.0.16.1/Native Method)
        at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(java.base@11.0.16.1/NativeMethodAccessorImpl.java:62)
        at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(java.base@11.0.16.1/DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(java.base@11.0.16.1/Method.java:566)
        at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
        at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
        at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

```

samples:
![image](https://user-images.githubusercontent.com/51790620/194348038-fa1d924d-ffa1-4882-8ea9-44d922fef3c2.png)
![image](https://user-images.githubusercontent.com/51790620/194348416-a3f8afda-e663-4719-98d4-d9ca24d16128.png)

hotspots:
![image](https://user-images.githubusercontent.com/51790620/194348643-3756f892-7c42-436a-8619-5d43aa6e6f5a.png)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/290/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/290,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dC0aj,eclipse.jdt.ui,1561020067,290,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-05-24T12:19:16Z,2023-05-24T12:19:16Z,Still happens in Platform Workspace.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dC0aj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/290,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5fEdMZ,eclipse.jdt.ui,1595003673,290,NA,sebthom,426959,Sebastian Thomschke,,NA,2023-06-16T17:16:57Z,2023-06-16T17:16:57Z,"We are also experiencing this issue with Eclipse 2023-03 using Java 17.

This is the stacktrace:
```
""main"" #1 prio=6 os_prio=0 cpu=3036734.38ms elapsed=100769.22s tid=0x000001b7c0d29160 nid=0x7658 runnable  [0x000000493cbfa000]
   java.lang.Thread.State: RUNNABLE
        at java.util.zip.ZipFile$Source.initCEN(java.base@17.0.6/ZipFile.java:1567)
        at java.util.zip.ZipFile$Source.<init>(java.base@17.0.6/ZipFile.java:1315)
        at java.util.zip.ZipFile$Source.get(java.base@17.0.6/ZipFile.java:1277)
        at java.util.zip.ZipFile$CleanableResource.<init>(java.base@17.0.6/ZipFile.java:709)
        at java.util.zip.ZipFile.<init>(java.base@17.0.6/ZipFile.java:243)
        at java.util.zip.ZipFile.<init>(java.base@17.0.6/ZipFile.java:172)
        at java.util.zip.ZipFile.<init>(java.base@17.0.6/ZipFile.java:186)
        at org.eclipse.jdt.internal.core.JavaModelManager.getZipFile(JavaModelManager.java:2898)
        at org.eclipse.jdt.internal.core.nd.java.model.BinaryTypeFactory.rawReadTypeTestForExists(BinaryTypeFactory.java:145)
        at org.eclipse.jdt.internal.core.nd.java.model.BinaryTypeFactory.rawReadType(BinaryTypeFactory.java:121)
        at org.eclipse.jdt.internal.core.nd.java.model.BinaryTypeFactory.readType(BinaryTypeFactory.java:116)
        at org.eclipse.jdt.internal.core.ClassFile.getJarBinaryTypeInfo(ClassFile.java:246)
        at org.eclipse.jdt.internal.core.ClassFile.getBinaryTypeInfo(ClassFile.java:201)
        at org.eclipse.jdt.internal.core.ClassFile.buildStructure(ClassFile.java:92)
        at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
        at org.eclipse.jdt.internal.core.SourceRefElement.generateInfos(SourceRefElement.java:113)
        at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
        at org.eclipse.jdt.internal.core.BinaryType.getElementInfo(BinaryType.java:288)
        at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:314)
        at org.eclipse.jdt.internal.core.BinaryType.isAnonymous(BinaryType.java:732)
        at org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyContentProvider.isAnonymous(TypeHierarchyContentProvider.java:379)
        at org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyContentProvider.isAnonymousFromInterface(TypeHierarchyContentProvider.java:386)
        at org.eclipse.jdt.internal.ui.typehierarchy.TraditionalHierarchyViewer$TraditionalHierarchyContentProvider.getTypesInHierarchy(TraditionalHierarchyViewer.java:140)
        at org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyContentProvider.hasTypeChildren(TypeHierarchyContentProvider.java:333)
        at org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyContentProvider.hasChildren(TypeHierarchyContentProvider.java:275)
        at org.eclipse.jface.viewers.AbstractTreeViewer.isExpandable(AbstractTreeViewer.java:2184)
        at org.eclipse.jface.viewers.TreeViewer.isExpandable(TreeViewer.java:553)
        at org.eclipse.jface.viewers.AbstractTreeViewer.isExpandable(AbstractTreeViewer.java:2214)
        at org.eclipse.jface.viewers.AbstractTreeViewer.internalExpandToLevel(AbstractTreeViewer.java:1818)
        at org.eclipse.jface.viewers.AbstractTreeViewer.internalExpandToLevel(AbstractTreeViewer.java:1831)
        at org.eclipse.jface.viewers.AbstractTreeViewer.internalInitializeTree(AbstractTreeViewer.java:1611)
        at org.eclipse.jface.viewers.TreeViewer.internalInitializeTree(TreeViewer.java:787)
        at org.eclipse.jface.viewers.AbstractTreeViewer.lambda$1(AbstractTreeViewer.java:1595)
        at org.eclipse.jface.viewers.AbstractTreeViewer$$Lambda$624/0x00000007c07bca88.run(Unknown Source)
        at org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:1398)
        at org.eclipse.jface.viewers.TreeViewer.preservingSelection(TreeViewer.java:365)
        at org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:1359)
        at org.eclipse.jface.viewers.AbstractTreeViewer.inputChanged(AbstractTreeViewer.java:1589)
        at org.eclipse.jface.viewers.ContentViewer.setInput(ContentViewer.java:282)
        at org.eclipse.jface.viewers.StructuredViewer.setInput(StructuredViewer.java:1632)
        at org.eclipse.jdt.internal.ui.text.AbstractInformationControl.inputChanged(AbstractInformationControl.java:618)
        at org.eclipse.jdt.internal.ui.typehierarchy.HierarchyInformationControl.setInput(HierarchyInformationControl.java:306)
        at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
        at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
        at org.eclipse.jface.text.AbstractInformationControlManager.setInformation(AbstractInformationControlManager.java:431)
        at org.eclipse.jface.text.information.InformationPresenter.computeInformation(InformationPresenter.java:321)
        at org.eclipse.jface.text.AbstractInformationControlManager.doShowInformation(AbstractInformationControlManager.java:1101)
        at org.eclipse.jface.text.AbstractInformationControlManager.showInformation(AbstractInformationControlManager.java:1091)
        at org.eclipse.jdt.internal.ui.javaeditor.JavaSourceViewer.doOperation(JavaSourceViewer.java:175)
        at org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor$5.doOperation(ClassFileEditor.java:929)
        at org.eclipse.ui.texteditor.TextOperationAction.lambda$0(TextOperationAction.java:130)
        at org.eclipse.ui.texteditor.TextOperationAction$$Lambda$2026/0x00000007c131e158.run(Unknown Source)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
        at org.eclipse.ui.texteditor.TextOperationAction.run(TextOperationAction.java:130)
        at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
        at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
        at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
        at jdk.internal.reflect.GeneratedMethodAccessor108.invoke(Unknown Source)
        at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(java.base@17.0.6/DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(java.base@17.0.6/Method.java:568)
        at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
        at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
        at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
        at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
        at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
        at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
        at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
        at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
        at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
        at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
        at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
        at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
        at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
        at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1286)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
        at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
        at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
        at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1594)
        at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4865)
        at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
        at org.eclipse.swt.widgets.Control.windowProc(Control.java:4743)
        at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
        at org.eclipse.swt.widgets.Display.windowProc(Display.java:5022)
        at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3640)
        at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
        at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
        at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
        at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
        at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
        at org.eclipse.ui.internal.Workbench$$Lambda$243/0x00000007c034f9e0.run(Unknown Source)
        at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
        at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
        at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
        at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
        at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
        at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
        at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(java.base@17.0.6/Native Method)
        at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(java.base@17.0.6/NativeMethodAccessorImpl.java:77)
        at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(java.base@17.0.6/DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(java.base@17.0.6/Method.java:568)
        at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
        at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
        at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

   Locked ownable synchronizers:
        - None
```

I think it would be better if all these expensive zip operations were not done on the UI thread.

This issue is especially annoying if one accidentally hits CTRL+T and the IDE stops responding for minutes.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5fEdMZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/290,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zTATe,eclipse.jdt.ui,1934361822,290,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-08T15:24:13Z,2024-02-08T15:24:13Z,"With the recent performance improvements, i can not reproduce it anymore. -  Strg+t on Object.toString() takes less then a minute now and is cancelable most of the time in my workspace.
If the other watchers still can reproduce with  eclipse.buildId >= 4.31.0.I20240207-1800, please reopen.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zTATe/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/291,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/291,eclipse.jdt.ui,1400412947,291,"Offer ""Open Call Hierarchy"" on mouse hover menu for methods",fapdash,459631,FAP,,OPEN,2022-10-06T23:19:09Z,2022-10-07T05:40:14Z,"In Intellij Idea the default behavior for Ctrl+Click on a method name in a method definition is to show all usages / references.
I think it is intuitive to offer a quick way to show usages / references in this context and since I used Idea for a project for a bit I miss this option in Eclipse.

To be added here:
![2022-10-06_12-44](https://user-images.githubusercontent.com/459631/194434417-8de39f65-1481-471d-864e-19e1cae57122.png)

Currently reachable with right click:
![Selection_229](https://user-images.githubusercontent.com/459631/194434459-5217735d-c4a4-4bea-9c8f-b4db5a8b8481.png)

I could even see also adding ""Open Type Hierarchy"" and removing ""Open Return Type"" as the return type is available to Ctrl+Mouse1 just a few pixels away. I personally can't see many people using ""Open Return Type"" but maybe I'm totally off base there.

![Selection_230](https://user-images.githubusercontent.com/459631/194435247-b4081571-128d-4750-8910-a5fb74441738.png)


cc @vogella ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/291/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/291,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Lw_UO,eclipse.jdt.ui,1271133454,291,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2022-10-07T05:40:14Z,2022-10-07T05:40:14Z,Cc @jjohnstn ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Lw_UO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/292,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/292,eclipse.jdt.ui,1402058207,292,USE_COLORED_LABELS=false makes Package Explorer text invisible under certain interaction,Kademlia,152798,Kademlia,,OPEN,2022-10-08T20:41:47Z,2022-10-08T20:41:47Z,"Hey, I finally managed to track down this bug i was having:

Bug: All text in Package Explorer disappears except the currently selected/highlighted item. (See Video)

Cause: Config setting USE_COLORED_LABELS=false in
\.metadata\.plugins\org.eclipse.core.runtime\.settings\org.eclipse.ui.prefs

Reproduction:
1. Set USE_COLORED_LABELS=false
2. Move Package-Explorer into its own window
3. Open a .java file
4. Make sure the .java file is highlighted/selected in Package Explorer
5. Click into the Open java file to loose focus from Package Explorer window (java-file is still highlighted)
6. Click exactly on the selected/opened java file within the Package Explorer
7. (Clicking on any other file will not cause the problem)
![image](https://user-images.githubusercontent.com/152798/194727074-be64c932-4196-498b-a721-41dddd9d0423.png)


https://user-images.githubusercontent.com/152798/194727078-eb749b60-6177-4ed6-a135-0ba94896e816.mp4

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/292/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/299,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/299,eclipse.jdt.ui,1410783538,299,result of `fori` postfix is strange,jdneo,6193897,Sheng Chen,,CLOSED,2022-10-17T02:30:53Z,2022-11-08T21:03:44Z,"Given the code

```java
public static void main(String[] args) {
    args.fori|
}
```

When trigger the `fori` postfix, it generates the following code:

```java
for (int args2 = 0; i < args.length; args2++) {
		
}
```

The index variables should be either `args2` or `i`, but here it's mixed together. Is this on purpose?

https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/master/org.eclipse.jdt.ui/templates/default-postfixtemplates.xml#L37","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/299/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/299,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5MYaGz,eclipse.jdt.ui,1281466803,299,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-10-17T20:38:40Z,2022-10-17T20:38:40Z,Agreed.  I have posted a fix to make the indexing consistent.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5MYaGz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/299,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5N88jY,eclipse.jdt.ui,1307822296,299,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-11-08T21:03:43Z,2022-11-08T21:03:43Z,Verified for 4.26 M3 using I20221108 build.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5N88jY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/301,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/301,eclipse.jdt.ui,1413251786,301,Can't use Ctrl+Shift+Left or Ctrl+Shift+Right for multi-selection,jabby,1883932,Gautier de Saint Martin Lacaze,gautier@jabby-techs.fr,OPEN,2022-10-18T13:40:31Z,2022-10-18T13:40:31Z,"I started to use multi-selection in Eclipse IDE. 

I am facing a little problem in Java Editor. I first posted this issue [here](https://github.com/eclipse-platform/eclipse.platform.text/issues/102) but it seems it's not related to text editor nor generic editor. 

If I select multiples lines with Multi caret down. Then if I use Shift+End, it's select in each line from my cursor to the end of the line. This is great. But if I use Ctrl+Shift+Right it only select a word on the first line and text editor is not on multi-selection anymore.

I don't know how the selection should work exactly. I think about 2 options.

- select just one word and select only the first part of a java attribute in case of camel case name
- select to the next separator (space, semi-colum, ...)

If you have other suggestions, feel free to provide.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/301/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/302,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/302,eclipse.jdt.ui,1413388107,302,[JUnit] `JUnit4TestFinder` large project performance,eric-milles,18193802,Eric Milles,,CLOSED,2022-10-18T15:01:32Z,2023-10-06T03:10:13Z,"Original discussion: https://bugs.eclipse.org/bugs/show_bug.cgi?id=540712

I have been investigating _Run As > JUnit Test_ start times for a while now.  I think there are some opportunities in `JUnit4TestFinder` to make some improvements.  

1. After `newTypeHierarchy`, all of the types from a source folder, package or project are added to the search scope.  Later, abstract or inaccessible types are excluded from the result.  Q: Is it necessary to search abstract types or anonymous types for test methods?  Is it possible in JUnit 4 to find any test cases this way?  [RxJava](https://github.com/ReactiveX/RxJava) has about 2000 test classes and over 7000 anonymous inner classes.  Minimally, I am proposing that `createJavaSearchScope` be passed only non-anonymous types.  This can be checked without fetching element info using `aClass.getElementName().isEmpty()` -- anonymous inner classes return an empty name.  The abstract test requires creating element info, so I can understand why you might wait until after.

1. After finding all test types, the `candidates` set is filtered by accessibility, abstractness and containment.  At the very least, the abstract check should be the least expensive and can be moved up front:
`if (!Flags.isAbstract(curr.getFlags()) && CoreTestSearchEngine.isAccessibleClass(curr) && region.contains(curr))`

1. Similarly in `JUnit5TestFinder` there are some expensive things like parsing within `internalIsTest`, so I propose changing the order of checks within `findTestsInContainer`:
`if (region.contains(type) && internalIsTest(type, pm))`

1. Lastly, within `JUnit5TestFinder#internalIsTest` is there a way to determine ""is test"" using only the `IType` passed in?  Is the `TypeBinding` the only way to make the determination?


https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/master/org.eclipse.jdt.junit.core/src/org/eclipse/jdt/internal/junit/launcher/JUnit4TestFinder.java#L132
https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/master/org.eclipse.jdt.junit.core/src/org/eclipse/jdt/internal/junit/launcher/JUnit5TestFinder.java#L221","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/302/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/302,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Mgbe9,eclipse.jdt.ui,1283569597,302,NA,jdneo,6193897,Sheng Chen,,NA,2022-10-19T07:41:52Z,2022-10-19T07:41:52Z,"For point 4, AFAIK, the `TypeBinding` is needed because JUnit 5 support meta-annotation. In order to determine if the type is annotated by `@Test`, we have to resolve the binding in AST.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Mgbe9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/302,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Mu80R,eclipse.jdt.ui,1287376145,302,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-10-21T19:53:18Z,2022-10-21T19:53:18Z,I think points 1-3 are reasonable with 1 removing anonymous classes.  Do you want to submit a PR or have me do it and you can test it with your project to verify?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Mu80R/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/302,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5MwkTE,eclipse.jdt.ui,1287800004,302,NA,eric-milles,18193802,Eric Milles,,NA,2022-10-22T13:55:20Z,2022-10-22T13:55:20Z,If you could make the changes that would be great.  I don't have a jdt.ui fork or tests ready.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5MwkTE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/302,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5M9mVp,eclipse.jdt.ui,1291216233,302,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-10-25T22:41:19Z,2022-10-25T22:41:19Z,"Ok, PR created.  If you could verify this makes a difference on the project you opened the issue on, that would be helpful.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5M9mVp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/302,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5NNuhE,eclipse.jdt.ui,1295444036,302,NA,eric-milles,18193802,Eric Milles,,NA,2022-10-28T20:39:40Z,2022-10-28T20:39:40Z,Is there an update site or bundle created for the PR build/checks?  Is the only way to test to import the plugin project into PDE and build/deploy?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5NNuhE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/302,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5NON4P,eclipse.jdt.ui,1295572495,302,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-10-28T22:36:00Z,2022-10-28T22:36:00Z,"Yes, you will need to import the plugin project and deploy or do a local build with -Pbuild-individual-bundles.  There won't be an I-build available until the patch is merged which requires at least verifying it fixes problems.  ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5NON4P/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/302,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5NVZiX,eclipse.jdt.ui,1297455255,302,NA,eric-milles,18193802,Eric Milles,,NA,2022-10-31T17:50:35Z,2022-10-31T17:50:35Z,Thanks for making this change.  I can confirm that under Eclipse 4.25 the start time for RxJava 2.2.3 tests went from ~20s to ~13s.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5NVZiX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/302,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5NV3hW,eclipse.jdt.ui,1297578070,302,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-10-31T19:36:49Z,2022-10-31T19:36:49Z,"Great, patch merged.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5NV3hW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/302,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5oQQVc,eclipse.jdt.ui,1749091676,302,NA,eric-milles,18193802,Eric Milles,,NA,2023-10-05T15:04:03Z,2023-10-05T15:04:03Z,"@jdneo @jjohnstn The performance of `JUnit5TestFinder#internalIsTest` has come up again.  Would it be possible to make a two-phase determination?  First, check the `IType` passed for annotations using the JDT API.  Then if not a test, continue to AST parsing as is done currently?  I may be able to mock something up and experiment with it if you're game to make a change here.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5oQQVc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/302,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5oTbsc,eclipse.jdt.ui,1749924636,302,NA,jdneo,6193897,Sheng Chen,,NA,2023-10-06T03:10:12Z,2023-10-06T03:10:12Z,"> First, check the IType passed for annotations using the JDT API. 

Sorry not quite get the idea. Could you give more details about this sentence?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5oTbsc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/303,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/303,eclipse.jdt.ui,1413497702,303,Make code lenses reference count match result of Call Hierarchy,fapdash,459631,FAP,,OPEN,2022-10-18T16:14:20Z,2024-02-14T16:43:51Z,"Currently the code lenses seem to match more than `Call Hierarchy` does, which makes the feature quite useless to me in some cases.
Is this intended behavior? Is it not feasible to count via `Call Hierarchy` functionality because of performance issues?

### Method definition with code lens references
This method is referenced / called exactly once in the project, but we get 1537 (potential) matches.

![2022-10-18_17-40](https://user-images.githubusercontent.com/459631/196483651-b432dd31-aba0-43c8-8685-a77e5c269321.png)

### Method Call Hierarchy
![2022-10-18_17-20](https://user-images.githubusercontent.com/459631/196484887-3b6f9158-1df8-4074-9df7-52b107a9a69c.png)


### One of the potential matches from code lens, which is clearly not a reference
The reference is not calling the method on the class Recipient and should not show up in the reference count.

![2022-10-18_18-01](https://user-images.githubusercontent.com/459631/196483717-1aae4391-b998-4c68-ae42-f25757f12c23.png)

### Version
   Eclipse Java Development Tools	3.18.1300.v20220831-1800	org.eclipse.jdt.feature.group	Eclipse.org
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/303/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/303,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Mc8V_,eclipse.jdt.ui,1282655615,303,NA,fapdash,459631,FAP,,NA,2022-10-18T16:18:03Z,2022-10-18T16:18:03Z,@angelozerr Pinging you because I think you're the expert on the code lenses feature?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Mc8V_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/307,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/307,eclipse.jdt.ui,1419900189,307,Is there a limit on the amount of source folders allowed in the package view?,TheShermanTanker,32636402,Julian Waters,,OPEN,2022-10-23T19:27:30Z,2022-10-23T19:28:05Z,"Been stuck on this for a good part of the week now, I have an automatically generated .classpath file that has quite a large number of source folders listed within and said source folders will simply never show up in the package explorer when the project is loaded. Manually adding the source folders one by one reveals that after a certain number of source folders are added all of them will simply disappear from the explorer. Is this intended or a bug, and if this is working as designed, is there an option to turn it off?

classpath file
<img width=""517"" alt=""generated"" src=""https://user-images.githubusercontent.com/32636402/197412630-ae6dc72a-347e-4f89-9150-f2ea70a34fb0.PNG"">
Package Explorer (Notice how the ""jdk"" project has no triangle to expand the view and show the source folders, to Eclipse it's as if the project is completely empty)

<img width=""100"" alt=""Capture"" src=""https://user-images.githubusercontent.com/32636402/197412807-61367793-9e22-4743-9559-bd0d36cca953.PNG"">
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/307/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/310,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/310,eclipse.jdt.ui,1423195405,310,[quick fix] When making a method abstract also make the class abstract,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2022-10-25T22:38:57Z,2022-11-08T20:59:05Z,"This issue created from: https://bugs.eclipse.org/bugs/show_bug.cgi?id=239111

```
public class NewClass {

	public int a();
	
}
```

When a quick fix is made to add abstract to a(), it should also add abstract to the class declaration.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/310/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/310,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5N87Yk,eclipse.jdt.ui,1307817508,310,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-11-08T20:59:04Z,2022-11-08T20:59:04Z,Verified for 4.26 M3 using I20221108 build.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5N87Yk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/312,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/312,eclipse.jdt.ui,1423644132,312,Missing Java Syntax Coloring,HuyMaster,80255843,,,OPEN,2022-10-26T08:35:51Z,2022-10-26T08:35:51Z,"![image](https://user-images.githubusercontent.com/80255843/197976786-3780d0fd-3e70-4b76-85c9-b037a06a7b36.png)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/312/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/313,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/313,eclipse.jdt.ui,1426223673,313,"Save Actions: ""Remove unused private method parameters"" applies even when disabled in Preferences",pbull-oracle,68705005,,,CLOSED,2022-10-27T20:23:00Z,2023-07-13T20:38:59Z,"`Preferences > Java > Editor > Save Actions > Additional Actions > Configure > Unnecessary Code > Remove unused private method parameters`

When this is unchecked, sometimes (at least 50% of the time for me) unused private method parameters will still be removed. Before executing the save actions, it is not correctly reading what has been selected in Preferences.

Example:
1. Window > Preferences > Java > Editor > Save Actions configured as:
![SaveActions](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/68705005/f6ffffdc-6cff-4f1d-8d0c-3b8290884069)
2. Create a new a class
```
public class Example {

}
```
3. Add a private method with unused parameter
```
public class Example {
    
    private void m1(Object p1) {
        
    }

}
```
4. Save","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/313/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/313,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5g6q9l,eclipse.jdt.ui,1625993061,313,NA,pbull-oracle,68705005,,,NA,2023-07-07T19:52:34Z,2023-07-07T19:52:34Z,"Preferences > Java > Compiler > Errors/Warnings > Unnecessary code
""Value of method parameter is not used:"" set to Info, Warning, or Error","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5g6q9l/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/313,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5g6xrV,eclipse.jdt.ui,1626020565,313,NA,pbull-oracle,68705005,,,NA,2023-07-07T20:14:54Z,2023-07-07T20:14:54Z,UnusedCodeCleanUpCore.createFix(...) methods always pass removeUnusedParameter=true,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5g6xrV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/315,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/315,eclipse.jdt.ui,1427567502,315,UI for configuring annotation path relative to a classpath container,stephan-herrmann,24587985,Stephan Herrmann,,CLOSED,2022-10-28T17:37:28Z,2022-10-29T13:07:33Z,"As of eclipse-jdt/eclipse.jdt.core#23 JDT/Core supports a new way to define the location where .eea (eclipse external annotation) are looked for.

During build path configuration, users should have a convenient way to configure this without knowing the exact syntax.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/315/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/316,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/316,eclipse.jdt.ui,1427747096,316,Javadoc hover cannot handle use of <pre> </pre> tags,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2022-10-28T19:45:32Z,2022-11-08T20:56:57Z,"This issue was originally opened as: https://bugs.eclipse.org/bugs/show_bug.cgi?id=534418

From the original bug:

Consider the Javadoc display of Stream.flatMap() as displayed in the Javadoc view. It is rendered as such:

--------------------------------------------------------
If path is the path to a file, then the following produces a stream of the words contained in that file: 

```
Stream<String> lines = Files.lines(path, StandardCharsets.UTF_8);
     Stream<String> words = lines.flatMap(line -> Stream.of(line.split("" +"")));
```
--------------------------------------------------------

The second line has an indentation of 5 whitespaces.

Also, the Javadoc display of Stream.reduce(BinaryOperator) has an excess closing curly brace:

--------------------------------------------------------
```
boolean foundAny = false;
     T result = null;
     for (T element : this stream) {
         if (!foundAny) {
             foundAny = true;
             result = element;
         }
         else
             result = accumulator.apply(result, element);
     }
     return foundAny ? Optional.of(result) : Optional.empty();
 }
```
--------------------------------------------------------

... which is really the closing curly brace of the {@code} tag, not part of the code itself.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/316/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/316,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5NNjAn,eclipse.jdt.ui,1295396903,316,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-10-28T19:47:04Z,2022-10-28T19:47:04Z,I have a fix that handles the indentation issues.  I just need to fix the extraneous curly brace.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5NNjAn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/316,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5N8654,eclipse.jdt.ui,1307815544,316,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-11-08T20:56:57Z,2022-11-08T20:56:57Z,Verified for 4.26 M3 using the I20221108 build.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5N8654/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/319,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/319,eclipse.jdt.ui,1428134005,319,Filter in Quick Type Hierarchy by package name,mstup,16793676,mykola,,OPEN,2022-10-29T07:24:15Z,2024-07-07T10:45:31Z,"As a developer I want to be able to look over the list of posterities (interfaces and classes) for the selected package with ability to filter them by package name and sub-name, like any of the following:

&nbsp;&nbsp;com.*
&nbsp;&nbsp;com.my*
&nbsp;&nbsp;com.myproject.*
&nbsp;&nbsp;com.\*.myproj\*

To do that I want to type text in the text field on the top of dialog.
If there is dot in the text then is require to show the list of all posterities in this package (all nested packages).

![hierarchy](https://user-images.githubusercontent.com/16793676/198819568-73bad170-7865-4cb9-b2ad-3f1fce70a9fc.jpeg)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/319/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/321,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/321,eclipse.jdt.ui,1431138827,321,"Quick fix for variable assignment is ""sometimes"" dependent on the semicolon",vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,OPEN,2022-11-01T09:35:41Z,2022-11-10T19:26:54Z,"I like to use CTRL+ 2, L to create a local assignment. This works in most cases but sometimes I need to add a semicolon to make this fix available.

Example for existing code from org.eclipse.e4.ui.css.swt.dom.ToolItemElement
````

	private SelectionListener selectionListener = new SelectionAdapter() {
		@Override
		public void widgetSelected(SelectionEvent e) {
			ToolItemElement.this.isSelected = getToolItem().getSelection();
			doApplyStyles();
		}
	};

````

Now I want to introduce a dispose check.
````
private SelectionListener selectionListener = new SelectionAdapter() {
		@Override
		public void widgetSelected(SelectionEvent e) {
			getToolItem() ---> CURSOR HIER
			ToolItemElement.this.isSelected = getToolItem().getSelection();
			doApplyStyles();
		}
	};

````

Ctrl+1 or CTRL+ 2, L does not work until I add a semicolon. In other scenarios this works without a semicolon and the quickfix also adds a semicolon.

@jjohnstn could that changed that is always is avaiable?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/321/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/321,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Nbxsd,eclipse.jdt.ui,1299127069,321,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-11-01T20:49:42Z,2022-11-01T20:49:42Z,@vogella This is due to parsing from the NodeFinder.  The covering node for the area is returned as the FieldDeclaration and there is a check looking for an ExpressionStatement which causes the quick fix to bail.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Nbxsd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/321,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5NeFRJ,eclipse.jdt.ui,1299731529,321,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2022-11-02T07:55:51Z,2022-11-02T07:55:51Z,Thanks @jjohnstn for the analysis. Can this be improved so that the quick fix is still available in this situation or would that be to much effort?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5NeFRJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/321,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5OIGHn,eclipse.jdt.ui,1310745063,321,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-11-10T18:42:22Z,2022-11-10T18:42:22Z,"I could take a look to see if it is something trivial, but odds are that it would be complex in that the node parsing is incomplete due to the error in the source at that particular position.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5OIGHn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/321,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5OIR1K,eclipse.jdt.ui,1310793034,321,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2022-11-10T19:26:54Z,2022-11-10T19:26:54Z,"It would be nice to fix this, in case it is tribal. If not, please close this issue.

Thanks Jeff, for keeping JDT alive. Feels like you are the only one responding to feature requests.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5OIR1K/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/322,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/322,eclipse.jdt.ui,1433898809,322,Create new method quickfix fails to add type parameters,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2022-11-02T23:07:47Z,2022-11-08T20:57:22Z,"This is from: https://bugs.eclipse.org/bugs/show_bug.cgi?id=539067

Given this method

    public static <T> void test(T a) {
        test(a, a);      // error here
    }

Apply ""Quickfix > Create method 'test(T, T)'"", which adds this method:

    private static void test(T a, T a2) {
    }

The method is missing its own type parameter <T>.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/322/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/322,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5N86O3,eclipse.jdt.ui,1307812791,322,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-11-08T20:53:47Z,2022-11-08T20:53:47Z,Fix verified for 4.26 M3 using I20221108 build.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5N86O3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/323,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/323,eclipse.jdt.ui,1434264382,323,...,inemtsov-axcient-com,116650998,Igor Nemtsov,,CLOSED,2022-11-03T08:12:11Z,2022-11-03T08:13:32Z,,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/323/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/324,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/324,eclipse.jdt.ui,1434279956,324,Tooltip window in editor closed unexpectedly in Ubuntu,Kosha-account,12052605,Kosha,,OPEN,2022-11-03T08:27:01Z,2022-11-03T08:27:01Z,"Hi, I have problem in Java editor, it found only on Ubuntu(may be other Linuxes too) 18.*, 20.*, 22.*.When open tooltip window like following:
1. Alt+[mouse hover] on method then window appears with 3 choices(Open Declaration, Open Implementation, Open return type) then when click on liked choice the window is closed immediatelly without expected bechaviour.
2. Being in debug mode and stoped on breakpoint then [mouse hover] on variable shows tooltip window with variable value, but when want to select some item inside this window then window immediatelly closed
3. When [mouse hover] on method the tooltip window shows javadoc, but if I want to scroll content of this window or select with mouse some text then this window immediatelly closing
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/324/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/325,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/325,eclipse.jdt.ui,1434942857,325,Wrong source,andreasdc,82218780,,,OPEN,2022-11-03T16:25:19Z,2022-11-10T06:16:30Z,"Have a project.
Press F3 on some reference from another project.
The source code is not picked up from the project in your workspace, but the one from the library.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/325/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/325,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5NqtKY,eclipse.jdt.ui,1303040664,325,NA,andreasdc,82218780,,,NA,2022-11-04T06:46:26Z,2022-11-04T06:46:26Z,"It's so bugged that when I open reference to the class from the same project, it opens the class but in the project, that has the main project as the library. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5NqtKY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/325,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Nqtjr,eclipse.jdt.ui,1303042283,325,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-11-04T06:49:43Z,2022-11-04T06:49:43Z,"1) Please provide self containing example.
2) Try to use new workspace, sometimes it can happen that some workspace metadata goes corrupt. 

Without exact steps ro reproduce / example project there is no way for this bug to proceed. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Nqtjr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/325,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Nqtu2,eclipse.jdt.ui,1303042998,325,NA,andreasdc,82218780,,,NA,2022-11-04T06:51:06Z,2022-11-04T06:51:06Z,"It happened after the latest update, maybe the workspace is corrupted. I have many projects in it, how can I fix it? I don't want to share my projects here, I think that's obvious.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Nqtu2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/325,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Nqt8g,eclipse.jdt.ui,1303043872,325,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-11-04T06:52:48Z,2022-11-04T06:52:48Z,"You can try to recreate JDT index. Go to Preferences - > Java and trigger ""rebuild index"". ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Nqt8g/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/325,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5NquyT,eclipse.jdt.ui,1303047315,325,NA,andreasdc,82218780,,,NA,2022-11-04T06:59:11Z,2022-11-04T06:59:11Z,It's the same.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5NquyT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/325,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5OEloQ,eclipse.jdt.ui,1309825552,325,NA,andreasdc,82218780,,,NA,2022-11-10T06:16:29Z,2022-11-10T06:16:29Z,"./
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5OEloQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/326,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/326,eclipse.jdt.ui,1435644309,326,Freeze on launch,andreasdc,82218780,,,CLOSED,2022-11-04T06:57:09Z,2022-12-03T02:52:52Z,"After launching Eclipse I see that the window is freezed, it says that eclipse.exe is not responding.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/326/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/326,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5NquoM,eclipse.jdt.ui,1303046668,326,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-11-04T06:58:07Z,2022-11-04T06:58:07Z,Create thread dump and attach it here please. ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5NquoM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/326,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Nqusx,eclipse.jdt.ui,1303046961,326,NA,andreasdc,82218780,,,NA,2022-11-04T06:58:31Z,2022-11-04T06:58:31Z,How to do it?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Nqusx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/326,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Nspos,eclipse.jdt.ui,1303550508,326,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2022-11-04T13:37:14Z,2022-11-04T13:37:14Z,"Please search with your preferred search provider ""how to create Java thread dump"". ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Nspos/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/326,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5NxCvi,eclipse.jdt.ui,1304701922,326,NA,andreasdc,82218780,,,NA,2022-11-06T02:50:46Z,2022-11-06T02:50:46Z,Is it necessary?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5NxCvi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/326,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5PohLn,eclipse.jdt.ui,1336021735,326,NA,andreasdc,82218780,,,NA,2022-12-03T02:52:48Z,2022-12-03T02:52:48Z,"I guess it wasn't necessary, I don't see this issue anymore. :)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5PohLn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/329,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/329,eclipse.jdt.ui,1436227926,329,"[code mining] show inferred type for local ""var"" statements",johnthuss,372038,John Huss,johnthuss@gmail.com,OPEN,2022-11-04T15:08:19Z,2024-11-13T08:49:05Z,"Add an option to show a code mining for the inferred type of a local variable that was assigned to a ""var"" rather than explicitly typed. For example:

<img width=""661"" alt=""Screen Shot 2022-11-04 at 9 59 51 AM"" src=""https://user-images.githubusercontent.com/372038/200008650-8b07096b-434b-41a7-ad4a-345a21de1e58.png"">
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/329/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/329,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WzVTP,eclipse.jdt.ui,1456297167,329,NA,JanecekPetr,1746404,Petr Janeček,,NA,2023-03-06T15:00:48Z,2023-03-06T15:00:48Z,"For other readers, https://github.com/angelozerr/jdt-codemining has this feature. It's a sister plugin with experimental code minings that have not made it yet into JDT.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WzVTP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/330,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/330,eclipse.jdt.ui,1439024170,330,New method creation that specifies generic parameter needs to use appropriate generic parameter name,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2022-11-07T21:37:17Z,2022-12-14T21:42:43Z,"From: https://bugs.eclipse.org/bugs/show_bug.cgi?id=539067

Another related but different problem: if the destination is already generic, the correct type variable is not used.

Before quickfix:

```
    public class Bug {
        
        private static class Class1<T> {
            T t;
            Class2<T> c2;
            
            void method() {
                c2.useT(t);  // Quickfix ""Create method 'useT(T)' in Class2""
            }
        }
    
        private static class Class2<U> {
        }
    }

```
After quickfix:

```
    public class Bug {
        
        private static class Class1<T> {
            T t;
            Class2<T> c2;
            
            void method() {
                c2.useT(t);
            }
        }
    
        private static class Class2<U> {
            public void useT(T t) {  // Should be (U t), not (T t)
            }
        }
    }
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/330/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/331,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/331,eclipse.jdt.ui,1440409990,331,"Improve the Safety of ""Extract Local Variable"" Refactorings concering ClassCasts",chixiaye,54989108,XIAYE CHI,,CLOSED,2022-11-08T15:22:17Z,2023-02-08T22:15:37Z,"# Improve the Safety of ""Extract Local Variable"" Refactorings concerning ClassCasts

## Description
In previous work (commit ID: [2987007](https://github.com/eclipse-jdt/eclipse.jdt.ui/commit/2987007d9703de02eea83081a0b7b65fdc6e4a84)), we improved the safety of extract variable refactorings in JDT that otherwise may have resulted in NullPointerException. However, as specified in the issue(issue ID: [39](https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/39)), if the extracted expression is a classcast, the extract variable refactoring conducted by JDT may result in NULLPOINTER EXCEPTION as well. This problem has not yet been fixed. 


Considering such example:
```java
1   /* CS1: Original Code Snippet */
2    void foo(Object obj){
3       if(obj instanceof Integer && ((Integer)obj).intValue() > 0){
4             System.out.println(((Integer)obj).intValue());
5       }else if(obj instanceof Float && ((Float)obj).floatValue() > 0.0){
6            System.out.println(((Float)obj).floatValue());
7       }
8    }
``` 

If we select the expression `((Integer)obj).intValue()` (line `4` in `CS1`), and conduct refactoring ""extract local variable"",and name the new variable as `value`, we will get the following code snippet:
```java
1   /* CS2: Refactored Code Snippet */
2    void foo(Object obj){
3       int value = ((Integer) obj).intValue();
4       if(obj instanceof Integer && value > 0){
5             System.out.println(value);
6       }else if(obj instanceof Float && ((Float)obj).floatValue() > 0.0){
7            System.out.println(((Float)obj).floatValue());
8       }
9    }
``` 

Such refactoring is incorrect and dangerous. If the method is called via `foo(new Float(3.5))`, the refactored version of the method would result in ClassCastException whereas the original version would not.

## Solution
The main difference between NullPointerException case and ClassCastException case is the condition that would cause ClassCastException. We defined the case as sub-condition `obj` instanceof `Class1` and sub-condition `((Class2)obj).method()` occur sequentially in the same logical expression which is between the declaration position and the position where the first expression appears, where `Class2` is the superclass of `Class1`.

The correct and safe refactorings would be as:
```java
1   /* CS3: Safe Refactored Code Snippet */
2    void foo(Object obj){
3       if(obj instanceof Integer && ((Integer)obj).intValue() > 0){
4             int value = ((Integer) obj).intValue();
5             System.out.println(value);
6       }else if(obj instanceof Float && ((Float)obj).floatValue() > 0.0){
7            System.out.println(((Float)obj).floatValue());
8       }
9    }
``` 

**The corresponding PR will be submitted later.**
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/331/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/331,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Oy_ph,eclipse.jdt.ui,1321990753,331,NA,chixiaye,54989108,XIAYE CHI,,NA,2022-11-21T12:33:00Z,2022-11-21T12:33:00Z,"@ktatavarthi hi, could you please confirm the bug report? Thanks a lot. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Oy_ph/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/331,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5P407q,eclipse.jdt.ui,1340296938,331,NA,liuhuigmail,10864327,HUI LIU,liuhui08@bit.edu.cn,NA,2022-12-07T02:42:07Z,2022-12-07T02:42:07Z,"The patch for this issue is under review now (https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/333#issuecomment-1339462032). 

Can somebody help to check this issue and kindly confirm the bug?  Thanks. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5P407q/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/331,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5U1gIj,eclipse.jdt.ui,1423311395,331,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-02-08T22:15:36Z,2023-02-08T22:15:36Z,Closing this issue as the PR has been merged.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5U1gIj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/334,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/334,eclipse.jdt.ui,1454051894,334,QuickFix for adding missing annotation attributes should generate SingleMemberAnnotation if applicable,datho7561,22376627,David Thompson,davthomp@redhat.com,OPEN,2022-11-17T21:56:23Z,2022-11-17T21:56:23Z,"If you have an annotation of the form:

```java
public @interface MyAnnotation {
  String value();
}
```

Then you can apply it to java code like this:

```java
@MyAnnotation(""my string"")
public class MyClass {
}
```

However, if you apply the QuickFix suggested when you have not filled in the required value:

```java
@MyAnnotation
public class MyClass {
}
```

Then it will do this instead:

```java
@MyAnnotation(value = """")
public class MyClass {
}
```

I think it'd be nice if the QuickFix used the compact syntax when it's able to.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/334/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/338,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/338,eclipse.jdt.ui,1471991869,338,Refactor - Move Type to New File produces non-compilable code,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2022-12-01T21:39:22Z,2022-12-02T00:54:32Z,"Taken from Bug 567020:  https://bugs.eclipse.org/bugs/show_bug.cgi?id=567020

Original class:

```
class Foo {
    static class Bar {
        static class X {
            static void method() {
                var x = new X();
                System.out.println(x);
            }
        }
    }
}
```

After using Refactor/Move Type to New File on class Bar:

Foo.java

```
import Foo.Bar; // <-- wrong

class Foo {
}
```

Bar.java

```
import Foo.Bar.X; // <-- wrong

class Bar {
    static class X {
        static void method() {
            Bar.var x = new X(); // <-- wrong
            System.out.println(x);
        }
    }
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/338/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/365,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/365,eclipse.jdt.ui,1519420283,365,Spell Checker issues error for Javadoc tag @param,duesentrieb17,34717473,,,CLOSED,2022-12-02T13:30:59Z,2024-07-08T11:21:18Z,"Version: 2022-12 RC1 (4.26.0 RC1)
Build id: 20221124-2251
```
package bugs;

public class Param {
    /**
     * @param i
     * @return i
     */
    public int test(int i) {
        return i;
    }
}
```
![spelling_error](https://user-images.githubusercontent.com/34717473/205303594-04d61d68-fca4-49e2-9f4f-1f5587cb205a.png)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/365/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/365,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5RvDOa,eclipse.jdt.ui,1371288474,365,NA,hendeltom,7311310,Thomas Hendel,,NA,2023-01-02T12:40:04Z,2023-01-02T12:40:04Z,"I'm facing the same problem; in addition, the spell checker also marks parameter names as misspelled;
makes the spell checker unusable","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5RvDOa/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/365,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5RvDOf,eclipse.jdt.ui,1371288479,365,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-01-04T05:12:44Z,2023-01-04T05:12:44Z,"I see why this is happening, but need to track the source of the regression.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5RvDOf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/365,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6DxPTV,eclipse.jdt.ui,2210723029,365,NA,mariomarinato,6649014,,,NA,2024-07-05T11:39:52Z,2024-07-05T11:39:52Z,"Hello, @jjohnstn, I see this problem happening on Eclipse 2024-06.  Would you care to take a look at it?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6DxPTV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/365,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6DzTRd,eclipse.jdt.ui,2211263581,365,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-07-05T18:28:22Z,2024-07-05T18:28:22Z,@mariomarinato I'll take a look,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6DzTRd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/365,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Dzj6M,eclipse.jdt.ui,2211331724,365,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-07-05T19:36:54Z,2024-07-05T19:36:54Z,"@mariomarinato I tried with 2024-06 Java EPP package on Linux and it works fine.  I also tried with latest Eclipse I-build and it worked fine as well.  Can you provide some context?  Do you have an example that is failing?  Do you by any chance have some additional plug-ins installed that might be interferring (e.g. gradle)?  As well, can you provide info from About Eclipse?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Dzj6M/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/365,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6D8hVz,eclipse.jdt.ui,2213680499,365,NA,mariomarinato,6649014,,,NA,2024-07-08T10:53:24Z,2024-07-08T10:53:24Z,"@jjohnstn I'm using Eclipse 2024-06 for RCP.  Indeed, the message I get is a bit different from the one originally posted here:

![spellError](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/6649014/476b7477-213e-4897-ac67-dff07e65384e)

Checking the option _Ignore non-letters at word boundaries_ makes no difference.

Here's the About Eclipse screen (is that you wanted to see?)

![about](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/6649014/da3bb9db-2229-4872-9f31-99f044ec000f)

We have a few additional plug-ins installed.  I'll try a fresh installation to check if any of them might be the cause.

EDIT:  I've checked, and it's not plugin-related.  It's workspace-related.  There's something on our workspace that makes it happen.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6D8hVz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/345,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/345,eclipse.jdt.ui,1491332985,345,ResourceException on closed project logged by ProblemsLabelDecorator.AdornmentTask.run(),iloveeclipse,964108,Andrey Loskutov,,CLOSED,2022-12-12T08:49:38Z,2022-12-12T09:22:58Z,"Found in the log of our automated tests:
```
!ENTRY org.eclipse.jdt.ui 4 10001 2022-12-09 05:53:05.904
!MESSAGE Internal Error
!STACK 1
org.eclipse.core.internal.resources.ResourceException(/74act299)[372]: java.lang.Exception: Project '74act299' is not open.
	at org.eclipse.core.internal.resources.ResourceException.provideStackTrace(ResourceException.java:42)
	at org.eclipse.core.internal.resources.ResourceException.<init>(ResourceException.java:38)
	at org.eclipse.core.internal.resources.Project.checkAccessible(Project.java:153)
	at org.eclipse.core.internal.resources.Resource.findMaxProblemSeverity(Resource.java:1003)
	at org.eclipse.jdt.ui.ProblemsLabelDecorator.getErrorTicksFromMarkers(ProblemsLabelDecorator.java:589)
	at org.eclipse.jdt.ui.ProblemsLabelDecorator$AdornmentTask.run(ProblemsLabelDecorator.java:504)
	at org.eclipse.jdt.ui.ProblemsLabelDecorator$AdornmentCalculationJob.run(ProblemsLabelDecorator.java:409)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SUBENTRY 1 org.eclipse.core.resources 4 372 2022-12-09 05:53:05.905
!MESSAGE Project '74act299' is not open.
!STACK 0
java.lang.Exception: Project '74act299' is not open.
	at org.eclipse.core.internal.resources.ResourceException.provideStackTrace(ResourceException.java:42)
	at org.eclipse.core.internal.resources.ResourceException.<init>(ResourceException.java:38)
	at org.eclipse.core.internal.resources.Project.checkAccessible(Project.java:153)
	at org.eclipse.core.internal.resources.Resource.findMaxProblemSeverity(Resource.java:1003)
	at org.eclipse.jdt.ui.ProblemsLabelDecorator.getErrorTicksFromMarkers(ProblemsLabelDecorator.java:589)
	at org.eclipse.jdt.ui.ProblemsLabelDecorator$AdornmentTask.run(ProblemsLabelDecorator.java:504)
	at org.eclipse.jdt.ui.ProblemsLabelDecorator$AdornmentCalculationJob.run(ProblemsLabelDecorator.java:409)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
```

The decorator code runs in parallel to the project open/close/remove, so it fails if project is not open.
There are already checks for not existing resources, so we should just add one for closed projects.
I will push a PR in a moment.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/345/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/347,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/347,eclipse.jdt.ui,1492544256,347,Hover for method declaration is missing type parameters that use `extends`,eric-milles,18193802,Eric Milles,,OPEN,2022-12-12T18:58:51Z,2023-01-16T16:42:18Z,"Go to `java.util.Comparator` and hover over `thenComparing` declarations.  Simple `<U>` shows up fine, however `<U extends Comparable<? super U>>` fails to display properly.  There are many more examples in Comparator.

![image](https://user-images.githubusercontent.com/18193802/207130979-5a2a77bd-a328-4dfb-a63b-2e8b8e6a9708.png)

![image](https://user-images.githubusercontent.com/18193802/207130998-330300d2-18b4-466c-af7b-066be6dd196f.png)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/347/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/347,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SfowY,eclipse.jdt.ui,1384025112,347,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-16T13:03:35Z,2023-01-16T13:03:35Z,"Sorry, **where exactly** the failure is? I can't see what is wrong in the screenshots.
There is `<U>` in both screenshots, but that's exactly what is in the javadoc (at least on Java 17).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SfowY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/347,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SgZET,eclipse.jdt.ui,1384222995,347,NA,eric-milles,18193802,Eric Milles,,NA,2023-01-16T15:35:30Z,2023-01-16T15:35:30Z,"The proper hover shows ""<U> java.util.Comparator<T> java.util.Comparator.thenComparing(java.util.function.Function<? super T, ? extends U> keyExtractor, java.util.Comparator<? super U> keyComparator)"".

The broken hover shows ""java.util.Comparator<T>""
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SgZET/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/347,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sgt6i,eclipse.jdt.ui,1384308386,347,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-16T16:42:18Z,2023-01-16T16:42:18Z,"Arrgh, I see it now, I've only take attention to type parameter below. Is this a recent regression? If yes, in which release was it working last?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sgt6i/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/348,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/348,eclipse.jdt.ui,1494288072,348,"Improve the Safety of ""Extract Local Variable"" Refactorings by Identifying the Side Effect of Selected Expression",chixiaye,54989108,XIAYE CHI,,CLOSED,2022-12-13T13:56:24Z,2023-01-20T19:04:24Z,"# Improve the Safety of ""Extract Local Variable"" Refactorings by Identifying the Side Effect of Selected Expression

# Description
""Extract Variable"" refactoring in Eclipse provides an option to replace all occurrences of the selected expression with references to the newly extracted local variable. However, it may result in semantic errors when the selected expression (to be extracted as a variable) has side effect, i.e., it may change the states of the system. 

 A simple and straightforward example is `Lines[i++]`: 

```java
1   /* CS1: Original Code Snippet */
2   String[] Lines;
3   int i;
4   private String foo(String msg) {
5   	return msg+"": ""+ Lines[i++];
6   }
7   ...
8   log.warn(foo(""Format warning""));
9   ...
10  log.warn(foo(""Format warning""));
```
Extracting `foo(""Format warning"")` as local variable (enabling ""replace all occurrences"") would result in the following code:

```java
1   /* CS2: Code Snippet After Refactoring */
2   String[] Lines;
3   int i;
4   private String foo(String msg) {
5   	return msg+"": ""+ Lines[i++];
6   }
7   ...
8   String foo= foo(""Format warning"");
9   log.warn(foo);
10  ...
11  log.warn(foo);
```
The resulting code is semantically different from the original code, which results in semantic errors. 

# Solution
We should check the potential side effect of the selected expression before the actual conduction of the Extract Local Variable refactoring. 

The key of the checking is composed of two parts. The first is to identify all statements that may be executed by the selected expression, which may include the expression itself and all statements directly or indirectly invoked by the expression. To guarantee the performance of the IDE, we would confine the method call stack to the first four levels (if there are any).  

The second part is to validate whether the collected statements would change any status of the systems, i.e., updating variables/parameters/fields or generating outputs.   Notably, if we cannot access the body of the method invoked by the retrieved statements, we simply assume the method is safe (having no side effect) to minimize the chance of false alarms. 

To guarantee the performance (response time) of the refactoring engine, we can set a maximum analyzing time (e.g., 3 or 5 seconds). If the analysis terminates within the given time slot, that is fine. If fail, it would return what the current version of Eclipse returns (i.e., allowing the extracting of the selected expression).

**The above is our proposed solution, if you have any comments or suggestions, please let us know.**","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/348/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/348,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5QYp5D,eclipse.jdt.ui,1348640323,348,NA,chixiaye,54989108,XIAYE CHI,,NA,2022-12-13T14:08:03Z,2022-12-13T14:08:03Z,"@jjohnstn We have added a new issue, could you please check if our solution meets your expectations and requirements? Thank you so much.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5QYp5D/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/348,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5QrUwP,eclipse.jdt.ui,1353534479,348,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-12-15T18:31:20Z,2022-12-15T18:31:20Z,"I think that protecting all method call scenarios would be too significant a cost to do each time and in the end, it still is ""user beware"" as you might still run out of time.  Any method call that has side-effects should probably document them in its Javadoc and the user can discover this by hovering over the method name.  That said, you could scan just the single method itself (no following method calls) and look for field, input variable, and static variable changes.  Not sure about looking for outputs as these might be false positives in that they are error messages not meant to occur or output gets overwritten with the same data over and over again.  Even obvious side-effects may not occur (e.g. an error counter protected by an if statement).  To that end, you could issue a warning dialog that ""possible side-effects are detected, do you wish to continue?""  Beyond direct changes in the method and call itself, I think it is fair to treat other scenarios as ""user beware"" (remember the user is manually choosing to extract the call into a local variable).  You could also add additional support to check expressions using the ASTNodes.isPassive() method.  This would screen out such obvious cases like extracting a[x++].","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5QrUwP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/348,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5QtTKw,eclipse.jdt.ui,1354052272,348,NA,liuhuigmail,10864327,HUI LIU,liuhui08@bit.edu.cn,NA,2022-12-16T01:31:51Z,2022-12-16T01:31:51Z,"@jjohnstn  Thank you for quick response. So, we should 
1. Validate the selected expression with ASTNodes.isPassive() first
2. If the selected expression contains any method invocation, we scan just the invoked methods themselves (no following method calls) and look for field, input variable, and static variable changes. 

@chixiaye  Would you please kindly prepare a pull request according to the preceding description? Thank you. 
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5QtTKw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/348,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5QzBe8,eclipse.jdt.ui,1355552700,348,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2022-12-16T20:23:03Z,2022-12-16T20:23:03Z,Just to clarify point 1: you need to check any expression that is part of the selection (the selection might not be an expression itself but may have expressions in it  e.g. a[i++].getInteger()). ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5QzBe8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/348,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Q1lH4,eclipse.jdt.ui,1356222968,348,NA,chixiaye,54989108,XIAYE CHI,,NA,2022-12-17T11:41:47Z,2022-12-17T11:41:47Z,Got it. I will prepare PR based on your suggestions. THX a lot.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Q1lH4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/348,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5RrJNy,eclipse.jdt.ui,1370264434,348,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-01-03T21:56:08Z,2023-01-03T21:56:08Z,"Hi, I was off for the holidays.  Regarding the latest patch, sorry I wasn't clear above.  If you know there are side-effects that will change the logic, you should not make the change (e.g. if you have code with a[i++] + a[i++] then you should not extract the a[i++] in this case as it is a logic change to replace both references with one local variable).  In this case, you shouldn't ask the end-user.  You could, if you want, do the extraction if there was only one instance replaced as you know that the logic hasn't changed unless you move it before a reference to i.  Only in the case where you don't know if you have side-effects should you ask the user.  So, if you have a method call to extract and you scan the method but find nothing then you can go ahead but if that method has other method calls that you don't follow and scan as mentioned earlier, then you can qualify this as ""potential side-effects"" and ask if the user wants to continue.   I think for your method scanning you could add some common Java library methods as clean to reduce the odds of asking the end-user (e.g. consider java.lang.String methods as clean) so if a method just called String methods and didn't assign the output of such calls to cause side-effects, then it would be considered clean.  I would suggest you make the user message more specific since it will only involve method calls.  For example, ""The extraction will contain a method call that may cause side-effects, do you wish to continue?"")","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5RrJNy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/348,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Rwt5V,eclipse.jdt.ui,1371725397,348,NA,chixiaye,54989108,XIAYE CHI,,NA,2023-01-05T03:02:14Z,2023-01-05T03:02:14Z,"Thank you very much for your comments. I'm sorry for not clarifying the patch. Your suggestions will guarantee the accuracy of refactoring, but I have the following two concerns. 

First, in my opinion, when we think that an extracted expression has side effects, it may not happen all the time. So extracting multiple expressions does not necessarily lead to a change in semantics. For example,
```java  
int i= getAndAdd(0);
int j= getAndAdd(0);
...
getAndAdd(int cnt){
    int res= this.value;
    this.value+= cnt;
    return res;
}
```  
In our algorithm, the method `getAndAdd` is considered to have side effects. Extracting `getAndAdd(0)` would not lead to a change in semantics obviously. But in another case, if the expression `getAndAdd(1)` was selected, the semantics of the code would be changed. Although data flow and control flow analysis can solve this problem, the computational cost is huge. For this kind of side effect expression, we are certain to some extent, I think it would be more appropriate to warn the user. Of course, for expressions that do not involve function calls that have potential side effects, like `a[i++]`, we can directly extract only a single expression. For example,
```java  
return a[++i] + a[++i] + a[++i];
```  
Select the first `a[++i]` expression and open replace all option to do refactoring, the right result would be:
```java
int v= a[++i]; 
return v + a[++i] + a[++i];
```

Second, regarding function calls whose side effects cannot be judged, my concern is that introducing too often warning messages will make the user experience bad. Because just marking some common methods may not be enough. In a real Java development project, it is inevitable to use external APIs and utilize Java polymorphism. I think that the ambiguous functions can be seen as having no side effects (most of them truly do not). And for the methods like `print`,`log`,`currentTimeMillis` ... we can send a warning message to the user.

The above are some of my personal opinions. I sincerely look forward to reaching an aggrement.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Rwt5V/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/348,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5R0RMo,eclipse.jdt.ui,1372656424,348,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-01-05T19:45:33Z,2023-01-05T19:45:33Z,"Hi @chixiaye.  Thanks for the update.  I like your idea to only make one change for an expression with known side-effects.  That way a user will see a change but it won't change the logic.  I think you should take the same approach with a method that has direct side-effects as well (rather than a warning).  Otherwise, the user is forced to know the logic of the method that is being called or look up its source in the middle of the change which isn't feasible.  I think in both cases, you should check for the ""change all occurrences"" preference and if it is enabled and there is more than one usage in the file to change, issue a log message or a dialog that tells the user only one instance can be extracted due to side-effects.  Now, the user has all the info needed and no difficult decision to make.  Regarding methods with no direct side-effects, I am fine with your idea of making the change without a warning, but if you find calls to print, etc.. that you know cause side-effects, then the rules above apply.  What do you think?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5R0RMo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/348,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5R4Sf2,eclipse.jdt.ui,1373710326,348,NA,chixiaye,54989108,XIAYE CHI,,NA,2023-01-06T14:28:04Z,2023-01-06T14:28:04Z,"Glad to receive your response and thank you so much for your suggestions. Warnings make users recheck the code, which really increases the user's cost.

In the following, based on your suggestions, I would illustrate the refactoring with some specific examples. If any ideas differ from yours or misunderstand what you meant, please let me know. In these examples, `replace all occurrences` option is opened. 

#### Example-1: Expression does have side effects
```java  
return arr[i++] + arr[i++];
```
Select the first expression `arr[i++]` and do refactoring. Only one expression was extracted as follows, and a dialog(information dialog rather than warning dialog) would pop up to remind the user like `Only one expression can be extracted due to side-effects`.
```java  
int v= arr[i++];
return v + arr[i++];
```

#### Example-2: Expression that contains side-effects method invocation
```java  
return inc() + inc();
int inc(){
    return ++this.value;
}
```
Select the first expression `inc()` and do refactoring. Only one expression was extracted, and a dialog would pop up as well.
```java  
int v= inc();
return v + inc();
int inc(){
    return ++this.value;
}
```

#### Example-3: Expression that's not sure about side effects
```java  
System.out.println(list.size()+"",""+list.size());
```
Select the first expression `list.size()` and do refactoring. All two expressions were extracted.
```java  
int v= list.size();
System.out.println(v+"",""+v);
```

#### Example-4: Expression that contains marked methods 
```java  
long start= System.currentTimeMillis();
...
if(System.currentTimeMillis() - start < slot){
    ...
}
```
Select the second expression `System.currentTimeMillis()` and do refactoring. Only the selected expression was extracted, and a dialog would pop up.
```java  
long start= System.currentTimeMillis();
...
long v= System.currentTimeMillis();
if(v - start < slot){
    ...
}
```

BTW, a patch was resubmitted in [ClassCast PR](https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/333). Could you kindly check the patch? Thanks a lot. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5R4Sf2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/348,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5R44c0,eclipse.jdt.ui,1373865780,348,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-01-06T16:27:55Z,2023-01-06T16:27:55Z,Hi @chixiaye.  That looks good.  Will look at the patch.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5R44c0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/348,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SUm0x,eclipse.jdt.ui,1381133617,348,NA,liuhuigmail,10864327,HUI LIU,liuhui08@bit.edu.cn,NA,2023-01-13T00:11:11Z,2023-01-13T00:11:11Z,"@jjohnstn  Would you please kindly check the updated patch https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/360? Thanks. 

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SUm0x/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/348,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TYDJw,eclipse.jdt.ui,1398813296,348,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-01-20T19:03:59Z,2023-01-20T19:03:59Z,Closing with merge of #360,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TYDJw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/349,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/349,eclipse.jdt.ui,1497069377,349,Take returntype of method into account for suggestions,laeubi,1331477,Christoph Läubrich,,CLOSED,2022-12-14T17:16:08Z,2023-02-08T01:16:41Z,"I already noticed this several times and it is a constant source of ""what the ... "" moments of eclipse:

I have a local variable and it is missing the type import returned from a method, then I open the QuickFix and it get multiple choices where obviously only one can be the right choice (that is the return type of the method) see the following screenshot:

![grafik](https://user-images.githubusercontent.com/1331477/207662588-8edaf859-5238-408a-92ce-3828ab7a203c.png)

even worse, not only I now have the choice, the first option in this case is also the wrong one, so if I choose this ""fix"" I end up with an error telling me that the types are not assignable.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/349/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/349,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5QkzbR,eclipse.jdt.ui,1351825105,349,NA,laeubi,1331477,Christoph Läubrich,,NA,2022-12-14T17:31:12Z,2022-12-14T17:31:12Z,"The same issue happens when one returns a type from a method:

![grafik](https://user-images.githubusercontent.com/1331477/207666010-abb5f578-c66c-4da4-9555-5a3ebf826ff7.png)

obviously the first choice can never be correct here...","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5QkzbR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/350,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/350,eclipse.jdt.ui,1497244415,350,"""Use lambda where possible"" clean up doesn't indent properly sometimes",datho7561,22376627,David Thompson,davthomp@redhat.com,OPEN,2022-12-14T19:18:38Z,2022-12-14T19:18:38Z,"To reproduce:
1. Enable the ""Use lambda where possible"" save action (Preferences > Java > Editor > Save Actions > Additional actions > Configure > Java Feature > Java 8, then check ""Convert functional interface instances"")
2. Open `ErrorParticipantLanguageServiceTest.java` from `eclipse/lemminx` at `13fce878` https://github.com/eclipse/lemminx/blob/de9c702be26f5380be84b3a38d6d16f6913011df/org.eclipse.lemminx/src/test/java/org/eclipse/lemminx/services/extensions/ErrorParticipantLanguageServiceTest.java (I couldn't figure out a more minimal example, sorry)
3. Save the file to trigger the clean up
4. The indentation of the 2nd, 3rd, 4th... lines of the generated lambdas is incorrect","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/350/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/351,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/351,eclipse.jdt.ui,1498768280,351,"Blank line after some annotations when showing ""Methods implementing an interface"" occurrences",adrienconst,7868806,Adrien C.,,OPEN,2022-12-15T16:48:36Z,2022-12-15T16:48:36Z,"When I activate ""Methods implementing an interface"" in Java > Editor > Mark Occurrences, I get some empty lines after some annotations.

It happen specifically on JUnit 4 test files (the @RunWith, @Test, @Before and @After annotations are followed by an empty line) or JPA entity files, even when I comment out the annotations.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/351/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/353,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/353,eclipse.jdt.ui,1501109261,353,Surround with try/catch unnecessarily renames exception variable of catch clause,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2022-12-17T02:15:20Z,2022-12-17T03:43:12Z,"For the following test, the new try/catch around the throw statement will name
the variable in the catch clause e1 instead of e.

```
throw new Exception(); <-- use Quick Fix; ""Surround with try/catch""
try {

} catch (Exception e) {
    // TODO: handle exception
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/353/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/357,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/357,eclipse.jdt.ui,1507638852,357,Add new Formatter rules for record patterns,Madjosz,28844868,,,CLOSED,2022-12-22T10:40:15Z,2022-12-22T11:28:51Z,"With the new [Record Patterns (JEP 405)](https://openjdk.org/jeps/405) (preview in JDK 19+) new syntax constructs have to be formatted. Specifically the following structure with matching against nested records is problematic:
```java
record Inner(int x, int y) {}
record Outer(Inner i, int z) {}
if (someObj instanceof Outer(Inner(int x,int y)inner,int z)) {}
                                         ^     ^     ^
```
As you can see in the above example the record components are all mashed together without any space inbetween where it is not syntactically neccessary. There should be a new Formatter rule to configure this and also a space should be put into the marked places.

Tested with
Eclipse SDK
Version: 2023-03 (4.27)
Build id: I20221221-1800

openjdk version ""19.0.1"" 2022-10-18
OpenJDK Runtime Environment Temurin-19.0.1+10 (build 19.0.1+10)
OpenJDK 64-Bit Server VM Temurin-19.0.1+10 (build 19.0.1+10, mixed mode, sharing)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/357/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/357,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ROZUR,eclipse.jdt.ui,1362728209,357,NA,Madjosz,28844868,,,NA,2022-12-22T11:28:51Z,2022-12-22T11:28:51Z,Looks like this has been addressed in the jdt.core repository but was not yet included in the latest build: https://github.com/eclipse-jdt/eclipse.jdt.core/issues/264,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ROZUR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/363,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/363,eclipse.jdt.ui,1518651917,363,Suggestion: add an extract record item in a Class refactor menu item,cvgaviao,251734,Cristiano Gavião,,OPEN,2023-01-04T09:45:16Z,2023-01-04T16:05:14Z,"Currently there are an extract class function. 
But would be very useful to have one that creates a new record from the selected class. For example to create DTOs from Entities classes.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/363/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/364,eclipse.jdt.ui,1519180223,364,Add Bytecode Outline to JDT UI,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2023-01-04T15:36:21Z,2023-03-13T09:43:07Z,"Follow up on https://bugs.eclipse.org/bugs/show_bug.cgi?id=540436 / https://github.com/iloveeclipse/bytecodeoutline/issues/8 .

One goal would be to add ""Bytecode Outline"" view to JDT UI.
Stretch goal would be to replace default class file editor (that shows bytecode for classes with missing source) with one crafted by BCO.

I had no time yet to work on this, but I think that should be an easy task now.
The main issue is to move the code from https://github.com/iloveeclipse/bytecodeoutline & setup maven build in JDT UI so the bundle is picked up by platform build.

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/364/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5R4bnh,eclipse.jdt.ui,1373747681,364,NA,LunarLaurus,121956871,Lauren,,NA,2023-01-06T15:06:17Z,2023-01-06T15:06:17Z,"I believe the work done here is enough for the Maven aspect: https://github.com/LunarLaurus/eclipse.jdt.ui/tree/BytecodeOutline

My fresh Oomph install for making these changes doesn't let me launch it as an Eclipse Application (Even with a fresh clone of JDT), but I don't see why this shouldn't work. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5R4bnh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SgfCi,eclipse.jdt.ui,1384247458,364,NA,LunarLaurus,121956871,Lauren,,NA,2023-01-16T15:57:34Z,2023-01-16T15:57:34Z,"> replace default class file editor

Am I correct in assuming this will be the right class to target for further integration?
`org/eclipse/jdt/internal/ui/javaeditor/ClassFileEditor.java`
If yes, great. 👍 ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SgfCi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sgp-o,eclipse.jdt.ui,1384292264,364,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-16T16:27:49Z,2023-01-16T16:27:49Z,"Yes. Good luck ...
Please note, your changes should wait for https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/385 to be merged (or you should check that PR out and add your changes on top).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sgp-o/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sgqvn,eclipse.jdt.ui,1384295399,364,NA,LunarLaurus,121956871,Lauren,,NA,2023-01-16T16:30:34Z,2023-01-16T16:30:34Z,"I have seen that it is in the process of being approved and merged, good work.
Currently trying to get an Eclipse instance working where jdt.ui.* packages can be edited without missing dependencies so that I am ready once merge occurs. Trying to use the installer in advance mode to set up Eclipse for Eclipse developers with just the jdt.ui.* packages available.

Edit: This seems to have worked successfully! Wonderful news.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sgqvn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sg25G,eclipse.jdt.ui,1384345158,364,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-16T17:12:42Z,2023-01-16T17:12:42Z,"See `ClassFileBytesDisassembler` for the current class file disassembler used. I think the idea of [original request](https://bugs.eclipse.org/bugs/show_bug.cgi?id=540436) was to have the output of that being replaced by properly colored / syntax highlighted bytecode (ideally with hovers, outline etc).

So I would first recommend to try out ""just"" making the disassembled source ""nice looking"". Outline & navigation are harder.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sg25G/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ShB6D,eclipse.jdt.ui,1384390275,364,NA,LunarLaurus,121956871,Lauren,,NA,2023-01-16T17:55:59Z,2023-01-16T17:55:59Z,"So I can create a new oomph intsance of for jdt packages, however while it pulls down the `org.eclipse.jdt.bcoview` repository within `git\eclipse.jdt.ui`, Eclipse itself fails to add bcoview as a project. Importing as a maven project into the jdt.ui working set works, but it still cannot find the newly added asm bundles.
![image](https://user-images.githubusercontent.com/121956871/212740660-1881fc7c-fe64-49b2-b5bf-8af21c4764d3.png)

Do I need to wait for this to deploy everywhere or? 
I will try again tomorrow, just wanted to start now 😆 ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ShB6D/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sjrl7,eclipse.jdt.ui,1385085307,364,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-17T09:26:52Z,2023-01-17T09:26:52Z,"> Do I need to wait for this to deploy everywhere or?

I assume the dependencies are **in the target platform** now (because the code builds), but not in the resulted SDK package (because the view is not referenced by any feature / product).

I assume we need same addition like in https://github.com/eclipse-platform/eclipse.platform.releng/pull/180.

I will prepare PR as soon as https://github.com/eclipse-platform/eclipse.platform.releng/pull/180 will be merged, to avoid merge conflicts.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sjrl7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SjtsR,eclipse.jdt.ui,1385093905,364,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2023-01-17T09:31:51Z,2023-01-17T09:31:51Z,Let me run a full I-build to be sure I haven't missed anything for the old views addition first.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SjtsR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sjvg6,eclipse.jdt.ui,1385101370,364,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-17T09:37:28Z,2023-01-17T09:37:28Z,"> Let me run a full I-build to be sure I haven't missed anything for the old views addition first.

I've also noticed there is no `org.eclipse.jdt.bcoview` **feature** yet (I didn't wanted to copy old feature that has no value). 
I assume I have to create one now? I can quickly add one.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sjvg6/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SjwLG,eclipse.jdt.ui,1385104070,364,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2023-01-17T09:39:33Z,2023-01-17T09:39:33Z,"Yes, you would have to create such a feature so there is smth end user installable .","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SjwLG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SjwvK,eclipse.jdt.ui,1385106378,364,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-17T09:41:17Z,2023-01-17T09:41:17Z,"OK, I will add that feature then.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SjwvK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SqJPo,eclipse.jdt.ui,1386779624,364,NA,LunarLaurus,121956871,Lauren,,NA,2023-01-18T09:56:30Z,2023-01-18T09:56:30Z,"Tried to get this rolling today with yet another fresh install via Oomph, but now I get this.
Not really sure where to report this properly, but figure you do.
Sorry to be such a pain @iloveeclipse 🚧 

![image](https://user-images.githubusercontent.com/121956871/213140591-3df488d2-0b5c-4660-8e34-dc42af39c409.png)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SqJPo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SqOw_,eclipse.jdt.ui,1386802239,364,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-18T10:11:50Z,2023-01-18T10:11:50Z,"Please retry once again. I've just built SDK again (https://download.eclipse.org/eclipse/downloads/drops4/I20230118-0200/), probably you've seen the version https://download.eclipse.org/eclipse/downloads/drops4/I20230117-1800/","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SqOw_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sqpq3,eclipse.jdt.ui,1386912439,364,NA,LunarLaurus,121956871,Lauren,,NA,2023-01-18T11:36:11Z,2023-01-18T11:36:11Z,Appears this still occurs even after updating Oomph. Should I just wait longer?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sqpq3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SrJKS,eclipse.jdt.ui,1387041426,364,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-18T13:04:38Z,2023-01-18T13:04:38Z,"@LunarLaurus : honestly speaking, no idea, I'm not a heavy oomph user.
Can you please provide exact steps you use to get to the error above?

@merks : not sure if a screenshot in comment before is enough for you to diagnose the problem.

At least in the plain SDK https://download.eclipse.org/eclipse/downloads/drops4/I20230118-0200/ Bytecode Outline view is included & functional:

![image](https://user-images.githubusercontent.com/964108/213178740-d72a81a0-392e-45fa-b1ba-8090a2c5567e.png)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SrJKS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SrKaZ,eclipse.jdt.ui,1387046553,364,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-18T13:08:03Z,2023-01-18T13:08:03Z,"Could be again mismatch between Orbit's and maven bundle names: `org.objectweb.asm.tree.analysis` vs `org.objectweb.asm.analysis`. The later one is in Orbit, the former one is from Maven / platform.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SrKaZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SrfuP,eclipse.jdt.ui,1387133839,364,NA,merks,208716,Ed Merks,,NA,2023-01-18T14:09:46Z,2023-01-18T14:09:46Z,"If the file it's complaining really does not exist on disk and the problem recurs if you try again, then probably you need to try to repair the bundle pool:

https://www.eclipse.org/forums/index.php/m/1835944/?srch=repair+bundle+pool#msg_1835944

As mentioned in that thread, sometimes virus scanners keep the file from being moved from the download location to the pool...","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SrfuP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SrgqW,eclipse.jdt.ui,1387137686,364,NA,LunarLaurus,121956871,Lauren,,NA,2023-01-18T14:12:20Z,2023-01-18T14:12:20Z,"Was just in a meeting, let me poke things and then do a fresh Oomph run.
It's certainly not an AV issue though. Thank you both for being helpful!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SrgqW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SrnQ8,eclipse.jdt.ui,1387164732,364,NA,LunarLaurus,121956871,Lauren,,NA,2023-01-18T14:29:15Z,2023-01-18T14:29:15Z,"I nuked my bundle pool and it redownloaded everything.
Sorry for the screenshots, but I feel it explains this issue best.

Oomph setup.
![image](https://user-images.githubusercontent.com/121956871/213196097-cbacd761-f9ab-4b1d-ad74-af0bcfb1f6db.png)
JDT UI selected for development.
![image](https://user-images.githubusercontent.com/121956871/213196138-41ad76e9-fb4b-4b14-ab32-b62ee80d5e53.png)
Oomph Okay.
![image](https://user-images.githubusercontent.com/121956871/213196445-7d98787d-d86c-4dee-b8cc-bece2497752d.png)
Eclipse Staging.
![image](https://user-images.githubusercontent.com/121956871/213196597-db5cc3ac-773b-40a9-98c1-077e8700f28d.png)
Asm Utils still missing?
![image](https://user-images.githubusercontent.com/121956871/213196654-d7aa4cfd-dd8a-403d-836d-fd8a69dcb597.png)
Version Information.
![image](https://user-images.githubusercontent.com/121956871/213196824-9df19fa0-5629-4704-a268-9c24cd540e3f.png)
ASM Utils is installed.
![image](https://user-images.githubusercontent.com/121956871/213196730-c7c77c23-ef63-4e10-a026-0d2c42b2ba28.png)
BCO Exists.
![image](https://user-images.githubusercontent.com/121956871/213196778-ce167d48-f183-46ee-8ac3-3db056aa213b.png)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SrnQ8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SrqMR,eclipse.jdt.ui,1387176721,364,NA,merks,208716,Ed Merks,,NA,2023-01-18T14:37:19Z,2023-01-18T14:37:19Z,"Does the file exist on your file system at the indicate path shown in the dialog?

Window -> Preferences -> Oomph -> Bundles Pools  -> Analyze Agent... should help find and fix problems.

![image](https://user-images.githubusercontent.com/208716/213199418-2d52abf7-97e3-4096-9c83-cc4c92058814.png)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SrqMR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Srsf3,eclipse.jdt.ui,1387186167,364,NA,LunarLaurus,121956871,Lauren,,NA,2023-01-18T14:43:51Z,2023-01-18T14:43:51Z,Removing the entire .p2 directory worked 🥂 ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Srsf3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SryPG,eclipse.jdt.ui,1387209670,364,NA,merks,208716,Ed Merks,,NA,2023-01-18T14:59:15Z,2023-01-18T14:59:15Z,I've disabled the virus scanner from scanning my p2 folder and from scanning the folder containing all my installations.  This helps make the installations faster too!,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SryPG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sr0tZ,eclipse.jdt.ui,1387219801,364,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-18T15:05:25Z,2023-01-18T15:05:25Z,"> I've disabled the virus scanner from scanning my p2 folder and from scanning the folder containing all my installations

Yea, I did that too for all of my system files, and the speedup is insane. PS: I'm using Linux :-)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sr0tZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sr21A,eclipse.jdt.ui,1387228480,364,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-18T15:10:38Z,2023-01-18T15:10:38Z,"> One goal would be to add ""Bytecode Outline"" view to JDT UI.

Done & verified with https://download.eclipse.org/eclipse/downloads/drops4/I20230118-0200

> Stretch goal would be to replace default class file editor (that shows bytecode for classes with missing source) with one crafted by BCO.

@LunarLaurus : If you still have interest to continue, please open a new ticket here with an appropriate title & description.

I think the main part is done now => closing **this** issue.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sr21A/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5XXPu5,eclipse.jdt.ui,1465711545,364,NA,noopur2507,8749449,Noopur Gupta,,NA,2023-03-13T08:32:43Z,2023-03-13T08:32:43Z,"![BCO](https://user-images.githubusercontent.com/8749449/224647336-bcfb5f6f-b2d0-4139-aba0-296ecb4a8508.png)
The string ""Bytecode Outline"" is not translated as reported in the testing (see screenshot). @iloveeclipse, could you please check if it is externalized properly and mention the location of the externalized string here? ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5XXPu5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5XXRWl,eclipse.jdt.ui,1465718181,364,NA,merks,208716,Ed Merks,,NA,2023-03-13T08:38:00Z,2023-03-13T08:38:00Z,"Just the feature doesn't make it translatable, but that's only affects the display in p2, e.g., install/update or about:

![image](https://user-images.githubusercontent.com/208716/224648463-c7d631fb-6a93-4060-b77c-cc9a68cf3ef8.png)

Babel has not had a release in more than a year and is hoping to produce a new release for 2023-06 so until then, there is no translation available for such new strings...","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5XXRWl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5XXej9,eclipse.jdt.ui,1465772285,364,NA,noopur2507,8749449,Noopur Gupta,,NA,2023-03-13T09:15:12Z,2023-03-13T09:15:12Z,"Looks like the preference page string is hard-coded in /org.eclipse.jdt.bcoview/plugin.xml.

Can you please create a patch to fix it in the master and the R4_27_maintenance branches?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5XXej9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5XXfmG,eclipse.jdt.ui,1465776518,364,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-13T09:18:15Z,2023-03-13T09:18:15Z,"I will do, but not today. I assume this is not urgent.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5XXfmG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5XXh9o,eclipse.jdt.ui,1465786216,364,NA,noopur2507,8749449,Noopur Gupta,,NA,2023-03-13T09:25:25Z,2023-03-13T09:25:25Z,You can create the patch tomorrow. It's required by IBM products team to pass 4.27 testing. ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5XXh9o/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5XXoBf,eclipse.jdt.ui,1465811039,364,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-13T09:43:06Z,2023-03-13T09:43:06Z,"> You can create the patch tomorrow. 

I would try.

> It's required by IBM products team to pass 4.27 testing.

Shouldn't that be driven by IBM products team then?

Ideally it would be found during code reviews, but once code is merged - at least short after merge, not few days before release. In our company we run all the Eclipse related tests **we** have every week against latest Eclipse build, so we usually detect regressions latest in one week after merge to master.

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5XXoBf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/367,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/367,eclipse.jdt.ui,1522271717,367,New keywords like `record` and `sealed` not syntax highlighted in compare editor,hjohn,995917,John Hendrikx,,CLOSED,2023-01-06T09:40:31Z,2023-01-09T19:17:22Z,"![image](https://user-images.githubusercontent.com/995917/210974450-7b89afe3-5c2f-4acd-9f11-124ad351fad4.png)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/367/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/368,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/368,eclipse.jdt.ui,1522279509,368,New keywords (like `record` and `sealed`) are colored like the `return` keyword,hjohn,995917,John Hendrikx,,CLOSED,2023-01-06T09:46:29Z,2023-03-14T17:27:59Z,"I've configured the return keyword to stand out with the Eclipse preference `Java > Editor > Syntax Coloring` ""Keyword 'return'"".  New keywords take on this color, instead of the color set for ""Keywords excluding 'return'"".

See screenshot:

![image](https://user-images.githubusercontent.com/995917/210975262-59c4e070-f1cf-41be-b405-80ae183dd4db.png)

Expected:

I would except these new keywords to be colored like regular keywords.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/368/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/368,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Si_Jx,eclipse.jdt.ui,1384903281,368,NA,PhilippWendler,2545335,Philipp Wendler,,NA,2023-01-17T06:40:19Z,2023-01-17T06:40:19Z,"For me, `record` is formatted in the color chosen for ""Restricted identifiers"". Maybe try changing this color definition?

These new keywords are not really regular keywords but ""contextual keywords"".","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Si_Jx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/368,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Snr0Q,eclipse.jdt.ui,1386134800,368,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-01-17T22:01:55Z,2023-01-17T22:01:55Z,"Hi @hjohn, @PhilippWendler is correct.  The color for record and sealed is set via the ""Restricted identifiers"" color category.  I will close this issue.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Snr0Q/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/369,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/369,eclipse.jdt.ui,1522786340,369,Code Minings - Blank line when no occurences are found in Eclipse 2022-12,CarlosMOGoncalves,2636004,Carlos Gonçalves,carlosmoliveiragoncalves@gmail.com,CLOSED,2023-01-06T15:51:25Z,2023-01-09T19:19:10Z,"# Description #
----------

Hello there, 

Since Eclipse 2022-12, whenever Code Minings is active and we check  ""**Only if there is at least one result**"", the editor will still show a blank line when there is no occurence of a method reference. The same is true for reference of other kinds, like fields or types.

This worked fine on 2022-09. 

## Expected Outcome ##

I expect that if no reference is found for a given method, field or type, then no blank line is shown when ""**Only if there is at least one result**"" is checked.

## Current Outcome ##

Currently, when ""**Only if there is at least one result**"" is not checked then a ""virtual"" line will be inserted in the Editor, above the method, type or field with the text ""**0 references**"". If however, that option is checked, it will insert **a blank line above the method**, type or field which is not referenced anywhere in the code.


## Steps to reproduce ## 

This can probably be seen very easily in just about any application, but if not I have this one:
I have prepared a sample application that has a very simple Payara Micro application
It can be found [here](https://github.com/CarlosMOGoncalves/eclipse-issue-tester)

This app does nothing special. It has a Jakarta REST endpoint but that is just for show.

1. Fresh install Eclipse for **Eclipse IDE for Enterprise Java and Web Developers 2022-12**
2. Checkout the project from my repository
3. Activate Code Minings for every possible reference and check ""Only if there is at least one result"", like this:

![image](https://user-images.githubusercontent.com/2636004/211042963-ac9866b3-fe6b-4371-81e3-d7220e89e2bf.png)

4. Then just check any class with methods tha have no reference, like NumericUtils.java, this will show up:

![image](https://user-images.githubusercontent.com/2636004/211047336-ea530614-2e5e-4651-8b24-89ae58e493d1.png)


**Final note**

- sorry for all the Issue ceremony. I used a template from Payara issues as I think it is pleasant to work with.


## Environment ##
- **Distribution**:  Eclipse IDE for Enterprise Java and Web Developers 2022-12 2022-12 for Windows x64
- **JDK Version**: Corretto JDK 11
- **Operating System**:  Windows 10
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/369/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/369,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5R52tf,eclipse.jdt.ui,1374120799,369,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-01-06T20:54:52Z,2023-01-06T20:54:52Z,Problem has been traced to eclipse.platform.text and PR has been created.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5R52tf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/369,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SBoat,eclipse.jdt.ui,1376159405,369,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-01-09T19:18:55Z,2023-01-09T19:18:55Z,Issue has been fixed in Platform Text.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SBoat/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/370,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/370,eclipse.jdt.ui,1522934307,370,Code Minings - Method call occurences for common named methods are not correctly calculated,CarlosMOGoncalves,2636004,Carlos Gonçalves,carlosmoliveiragoncalves@gmail.com,CLOSED,2023-01-06T17:50:16Z,2023-01-18T18:40:19Z,"# Description #
----------

Hello there, 

I noticed Code Minings is not calculating correct occurences of, at least, methods. 
This has likely something to do with the way occurences are found.
I don't know when it started working like this.

## Expected Outcome ##

I expect that an occurence of a method call is calculated in the same way as **""Open Call Hierarchy""** option or at least that shows the call occurences in the workspace.

## Current Outcome ##

Some methods, depending on their name and/or signature will be marked has having `""X occurences""` but these don't match any actual call of that method, but rather any other method with the same name that can be somehow found in the classpath.


## Steps to reproduce ## 

I have prepared a sample application that has a very simple Payara Micro application, whose kind is irrelevant to the case in point.
It can be found [here](https://github.com/CarlosMOGoncalves/eclipse-issue-tester)

This app does nothing special. It has a Jakarta REST endpoint but that is just for show.

1. Fresh install Eclipse for **Eclipse IDE for Enterprise Java and Web Developers 2022-12**
2. Checkout the project from my repository
3. Run `mvn clean install` on it
4. Activate Code Minings for method references, like this:

![image](https://user-images.githubusercontent.com/2636004/211067333-6b813341-7ab9-4128-b408-f35f8381ad1f.png)

5. Then navigate to the class `NumericUtils.java`, method `getType()`:

![image](https://user-images.githubusercontent.com/2636004/211068009-e46e8ecb-53a9-4e66-8bb3-f932cf4d1249.png)

6. It marks 1 occurence. However, that occurence is not correct, but rather just an occurence a similarly named method on a comment:

![image](https://user-images.githubusercontent.com/2636004/211068338-8b2b6fa0-72f6-4cc3-9874-b735077b01f3.png)

7. If we use ""Open Call Hierarchy"" on that method we clearly see that no one is calling it:

![image](https://user-images.githubusercontent.com/2636004/211068504-14cf9c17-9acf-477c-b849-5cfa8a168c41.png)

8. The same can be said for methods with common names, like on `TestResource#get()`:

![image](https://user-images.githubusercontent.com/2636004/211068787-ef8ee099-5e92-48d0-94ea-8be710659e30.png)

9. Which is not in fact the right callee:

![image](https://user-images.githubusercontent.com/2636004/211068918-de63533d-749f-4886-b55a-98aaf992ce9b.png)


**Final note**

- sorry for all the Issue ceremony. I used a template from Payara issues as I think it is pleasant to work with.


## Environment ##
- **Distribution**:  Eclipse IDE for Enterprise Java and Web Developers 2022-12 2022-12 for Windows x64
- **JDK Version**: Corretto JDK 11
- **Operating System**:  Windows 10
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/370/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/370,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5R7QMx,eclipse.jdt.ui,1374487345,370,NA,humphreygao,52394598,,,NA,2023-01-07T13:47:12Z,2023-01-07T13:47:12Z,"![image](https://user-images.githubusercontent.com/52394598/211153835-253a96bf-e2c1-45f6-83a0-2bb3dd962491.png)
check this option may solve this problem. 

> I expect that an occurence of a method call is calculated in the same way as **""Open Call Hierarchy""** option or at least that shows the call occurences in the workspace.

I agree.

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5R7QMx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/370,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5R_KiQ,eclipse.jdt.ui,1375512720,370,NA,CarlosMOGoncalves,2636004,Carlos Gonçalves,carlosmoliveiragoncalves@gmail.com,NA,2023-01-09T11:53:25Z,2023-01-09T11:53:25Z,"Hello @humphreygao,

Thanks for the quick reply.
Indeed, this prevents those results to be counted as matches. Solves it, basically.

However, I think this brings up the point: **should these kind of ""potential matches"" be considered in Code Minings?**
Because I think Code Minings is extremely useful for quick checking references to methods (and types, fields), specially to quickly understand and consider dependencies... but these results must be very accurate or they risk losing their value.

Surely, showing potential matches, by default, is not what is expected and potentially highly misleading.

Here's an example. 
This is a screenshot from a somewhat more complex project I have.
There is a JPA entity that has a method called **getType()**, similar to the one in the issue description.
On Code Minings this shows 123 references (!!!), but most of those are in fact from 3rd party libraries which my project depend on which naturally cannot be referencing my project. Check below:

![image](https://user-images.githubusercontent.com/2636004/211300665-2cf11c28-6956-461a-b10c-7af94a79a9af.png)

The actual expected results for this Code Mining is rather this (now with potential matches disabled):

![image](https://user-images.githubusercontent.com/2636004/211301240-db4ee43b-d921-431d-a0d9-d0ed9bf84f21.png)

All of these references are actually in my own project, which is what is correct and expected.

**What do the developers think about this?**
**Wouldn't it be much more accurate to perform the Code Minings default reference search withous ""potential matches""?**","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5R_KiQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/370,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SAMeN,eclipse.jdt.ui,1375782797,370,NA,humphreygao,52394598,,,NA,2023-01-09T15:19:17Z,2023-01-09T15:19:17Z,"> What do the developers think about this?
Wouldn't it be much more accurate to perform the Code Minings default reference search withous ""potential matches""?

Could ask @angelozerr 
as he is the original developer of code mining https://github.com/angelozerr/jdt-codemining
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SAMeN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/370,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SAN4y,eclipse.jdt.ui,1375788594,370,NA,humphreygao,52394598,,,NA,2023-01-09T15:23:02Z,2023-01-09T15:23:02Z,@jdneo 在写代码时，Eclipse的codelens跳来跳去的，处于几乎不可用状态，但是VS Code就好多了，是怎么做到的？,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SAN4y/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/370,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SDPiY,eclipse.jdt.ui,1376581784,370,NA,jdneo,6193897,Sheng Chen,,NA,2023-01-10T01:11:24Z,2023-01-10T01:11:24Z,"@humphreygao VS Code has a dedicated job for document update. When trying to resolve the code lens, we will first wait the document update job is finished.

Take the debugger's `Run | Debug` code lens as an example: https://github.com/microsoft/java-debug/blob/42f9ac7d4843b75b1fdde64762d8c5ce4a4c51b2/com.microsoft.java.debug.plugin/src/main/java/com/microsoft/java/debug/plugin/internal/ResolveMainMethodHandler.java#L51-L55","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SDPiY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/370,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SaPRH,eclipse.jdt.ui,1382609991,370,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-01-14T00:40:22Z,2023-01-14T00:40:22Z,"| What do the developers think about this?
| Wouldn't it be much more accurate to perform the Code Minings default reference search withous ""potential matches""?

I think this could be accomplished by adding a specific option to the Code Minings preferences and not rely on the Search settings which are in another preference page which is unintuitive.  This option could be set to Ignore by default.  What do you think?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SaPRH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/370,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SfdAq,eclipse.jdt.ui,1383977002,370,NA,CarlosMOGoncalves,2636004,Carlos Gonçalves,carlosmoliveiragoncalves@gmail.com,NA,2023-01-16T12:22:49Z,2023-01-16T12:22:49Z,"Hello @jjohnstn ,

Those are my thoughts exactly. As a user I think this would definitely be more intuitive. All functionality related to Code Minings should be inside the Code Minings preferences.

A lot can be said about the sheer amout of Preferences in Eclipse out of the box, with a lot of them being really hard to find, some being contraditory and a lot of overlapping.

But this particular case is one that would really benefit from not relying on other settings.

Thanks @jjohnstn ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SfdAq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/372,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/372,eclipse.jdt.ui,1524087658,372,JUnit failure trace view: Stracktrace garbled (org.junit.jupiter truncated from message),hohwille,1923119,Jörg Hohwiller,,CLOSED,2023-01-07T19:29:31Z,2023-04-17T21:28:38Z,"I have to create my own assertion error message in an advanced JUnit.
When I run the JUnit with Maven, I get the proper output:
```
[ERROR] testReadProject  Time elapsed: 0.407 s  <<< FAILURE!
java.lang.AssertionError:
Expected
<[Dependency {groupId=org.apache.maven, artifactId=maven-core, version=3.6.1, type=jar}, Dependency {groupId=io.github.m-m-m, artifactId=mmm-code-base, version=0-SNAPSHOT, type=jar}, Dependency {groupId=org.mockito, artifactId=mockito-junit-jupiter, version=4.9.0, type=jar}, Dependency {groupId=org.junit.jupiter, artifactId=junit-jupiter, version=5.9.1, type=jar}, Dependency {groupId=org.assertj, artifactId=assertj-core, version=3.23.1, type=jar}, Dependency {groupId=ch.qos.logback, artifactId=logback-classic, version=1.4.5, type=jar}]>
to contain
<[Dependency {groupId=io.github.m-m-m, artifactId=mmm-code-base, version=0-SNAPSHOT, type=jar}, Dependency {groupId=org.apache.maven, artifactId=maven-core, version=3.6.1, type=jar}, Dependency {groupId=org.assertj, artifactId=assertj-core, version=3.23.1, type=jar}, Dependency {groupId=org.junit.jupiter, artifactId=junit-jupiter, version=5.9.0, type=jar}, Dependency {groupId=org.mockito, artifactId=mockito-junit-jupiter, version=4.9.0, type=jar}, Dependency {groupId=ch.qos.logback, artifactId=logback-classic, version=1.4.5, type=jar}]>
but could not find
<[Dependency {groupId=org.junit.jupiter, artifactId=junit-jupiter, version=5.9.0, type=jar}]>
 and did not expect
<[Dependency {groupId=org.junit.jupiter, artifactId=junit-jupiter, version=5.9.1, type=jar}]>
        at io.github.mmm.code.java.maven.impl.MavenBridgeImplTest.verifyDependencies(MavenBridgeImplTest.java:133)
        at io.github.mmm.code.java.maven.impl.MavenBridgeImplTest.testReadProject(MavenBridgeImplTest.java:91)
```

However, Eclipse does make evil black magic here and simply removes lines from the exception message that contain brackets:
<img width=""1271"" alt=""Eclipse-JUnit-stracktrace-garbled"" src=""https://user-images.githubusercontent.com/1923119/211167021-422f9ed9-4a86-466c-b01a-f4fa52565698.png"">

As a result the important information is missing and the result is rendered useless.
It would be awesome if you could consider adapting this magic that truncates stacktraces.
I also created a minimal test-case and found out that the keyword `org.junit.jupiter` is triggering this effect.
While it makes fully sense to remove such lines from the actual stacktrace call hierarchy, it IMHO does not make sense to remove it from the actual exception message.
Here is my test-case:
```
import org.junit.jupiter.api.Test;

public class MyTest {
  @Test
  public void test() {
    throw new AssertionError(""Eclipse truncates lines with\n[org.junit.jupiter]\nfrom stracktraces."");
  }
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/372/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/372,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5VC7Yq,eclipse.jdt.ui,1426830890,372,NA,hohwille,1923119,Jörg Hohwiller,,NA,2023-02-11T17:22:30Z,2023-02-11T17:22:30Z,"My hope was that after JDK moved to github that issues get seen unlike the eclipse bugzilla graveyard where issues have not been addressed for decades. :)

Is there any feedback on this (e.g. ""issue was understood and accepted as bug but with very low prio and PR is welcome"")?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5VC7Yq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/372,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5VEHYM,eclipse.jdt.ui,1427142156,372,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-02-12T21:55:52Z,2023-02-12T21:55:52Z,Will take a look at it.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5VEHYM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/372,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5VKYr9,eclipse.jdt.ui,1428785917,372,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-02-13T22:29:52Z,2023-02-13T22:29:52Z,"What is happening is that there is an Eclipse preference page that specifies what should be filtered from a JUnit stack trace:

Preferences -> Java -> JUnit

This page displays items to be filtered from a stack trace but the filter is not used on the first line of the trace.  This is the majority of user; if you remove the newline before [org.junit.jupiter], in the example, your information will print as expected.

If you are happy with all the junit info in the traces, you can simply disable the org.junit.* filter in the preferences page and you will see what you see in the left side of your sample trace.

If you would like filtering but don't want to remove ""org.junit.jupiter"", you can disable the org.junit.* filter and add your own: org.junit.jupiter.* and org.junit.platform.* filters.  These will filter out the stuff in the stack trace but leave your lines where org.junit.jupiter is specified without any trailing .xxxx. 

That said, a code modification could be made to hold off on filtering until it has seen a line that matches a trace line (e.g. starts with "" at "").  If you use newlines and also make lines look like a trace line, then you would be out of luck.  4.27 M3 is already frozen so such a modification would have to be a 4.28 M1 item and could be available for an I-build once the master repo is unfrozen post RC1.  If you are happy with the above work-arounds, then I will close this issue.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5VKYr9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/373,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/373,eclipse.jdt.ui,1525783397,373,"Improved clean up ""Convert to enhanced for loop"" rewrites loop even if iterator is used",PhilippWendler,2545335,Philipp Wendler,,CLOSED,2023-01-09T15:10:48Z,2023-03-09T19:28:15Z,"Consider the following Java code:
```java
import java.util.Arrays;
import java.util.Iterator;

public class Test {

  public static void main(String... args) {
    Iterator<String> it = Arrays.asList(args).iterator();
    while (it.hasNext()) {
      String arg = it.next();
      System.out.println(arg);
      System.out.println(it);
    }
  }
}
```

Since the cleanup ""Convert to enhanced 'for' loops"" was improved in Eclipse 4.25, this clean up method converts such code wrongly into a for loop that does not compile because the variable `it` is gone:

![image](https://user-images.githubusercontent.com/2545335/211339196-c2a78673-f39d-4240-a296-49ee42efac7b.png)

The cleanup should only apply if there are no other uses of the iterator in the loop.

I am using version 4.26.0.20221201-1200 of the Eclipse IDE for Java Developers and version 3.27.100.v20221122-0749 of `org.eclipse.jdt.ui`, which is the latest that the updater offers for me.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/373/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/374,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/374,eclipse.jdt.ui,1526114702,374,Remove $author from code template for class and module,Bananeweizen,406876,Michael Keppler,,CLOSED,2023-01-09T18:38:26Z,2023-04-04T12:26:09Z,"The default code templates for new type and new module (maybe others) contain a placeholder to insert the author of that new class/type/module. This was useful at times where many people did not have version control or a version control system that was not easy to use and query.

Today I see more negative than positive benefit:
* The same information is _better_ available in the version control history, with attribution by line instead of assuming this one author for every line currently in the file
* People copy/paste classes to create ""something similar"", without fixing this comment.
* It may leak information of the private user account to the public (at least on Windows, this defaults to your local user account id, and my company admin would surely not like me posting that account id everywhere).
* Even developers without an underlying version control system should not rely on this information, but rather be nudged to set up a real version control system.

I therefore want to suggest to remove this from all Javadoc-like comment templates (i.e. not from file header copyright banners, it does have benefit there).

Be aware this is not about the JDT or Eclipse platform source code, but about the templates provided by JDT.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/374/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/374,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5XUAu2,eclipse.jdt.ui,1464863670,374,NA,erik-brangs,9282509,Erik Brangs,,NA,2023-03-11T08:49:22Z,2023-03-11T08:49:22Z,"I think this would be a good change. Personally, I've configured my templates to remove the author information because I just ended up deleting it every time.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5XUAu2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/376,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/376,eclipse.jdt.ui,1528878217,376,Arguments don't align vertically in method declarations and calls,gbygrave,32875778,,,OPEN,2023-01-11T11:32:45Z,2023-01-11T11:32:45Z,"From a brief glance at the internet, I notice this issue has been raised (and solved) before, but it seems to have come back.  Perhaps that was intentional?  Anyway, I think it's important.
When declaring a new method, or invoking an existing one, I prefer to align arguments vertically when wrapping becomes necessary, like so...
```
class Example {
    void aMethodWithALargeNameToClearlyShowNonVerticalAlignment(int arg1,
                                                                int arg2,
                                                                int arg3,
                                                                int arg4,
                                                                int arg5,
                                                                int arg6) {
    }
}
```
At the moment, the arguments that get wrapped (i.e. arg2,arg3 etc) are indented, so they don't sit underneath the first argument, which means I need to consciously group them together in my mind, rather than them ""visually"" sitting together, in a single column on the page.

Inside the java formatter settings, this looks like it ought to be configured under (or somewhere near):
[Line Wrapping -> Wrapping Settings -> Method Declarations -> Parameters = ""Wrap all elements, except first element if not necessary"".
But instead, things look like so...
```
class Example {
    void aMethodWithALargeNameToClearlyShowNonVerticalAlignment(int arg1,
            int arg2,
            int arg3,
            int arg4,
            int arg5,
            int arg6) {
    }
}
```
Is this configurable in the most recent version of the IDE?
I observe this behaviour in:
**Spring Tool Suite 4 
Version: 4.17.1.RELEASE
Build Id: 202301011401
Revision: 394b6c753a82ab73b912e8efdc97c92d30d07dfc**

Thanks for your help!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/376/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/378,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/378,eclipse.jdt.ui,1529713676,378,Support Junit5 parallel test execution through RemoteTestRunner,fladdimir,53265832,Wladimir Hofmann,,CLOSED,2023-01-11T21:19:23Z,2023-01-12T18:28:10Z,"When executing Junit5 tests in parallel, the `RemoteTestRunner` seems to write malformed result information.
Apparently, concurrent test execution threads may write related lines of their result-reporting to the socket in a non-synchonized way?

Example output obtained from a local test run (added '// comments' to indicate problematic sections): 

```
%TESTC  2 v2
%TSTTREE2,junit5.ParallelExecutionTest,true,2,false,1,ParallelExecutionTest,,[engine:junit-jupiter]/[class:junit5.ParallelExecutionTest]
%TSTTREE3,test_1(junit5.ParallelExecutionTest),false,1,false,2,test_1(),,[engine:junit-jupiter]/[class:junit5.ParallelExecutionTest]/[method:test_1()]
%TSTTREE4,test_2(junit5.ParallelExecutionTest),false,1,false,2,test_2(),,[engine:junit-jupiter]/[class:junit5.ParallelExecutionTest]/[method:test_2()]

// 2 tests are run in parallel, both reporting their starts:
%TESTS  4,test_2(junit5.ParallelExecutionTest)
%TESTS  3,test_1(junit5.ParallelExecutionTest)

// test_2 fails and failure reporting is started:
%FAILED 4,test_2(junit5.ParallelExecutionTest)
// -> from here on, the comparison failure and trace of test_2 should follow immediately, without any interference
// however, test_1 also starts to report its failure:
%FAILED 3,test_1(junit5.ParallelExecutionTest)

// -> from here on, it is impossible to say which messages are belonging to which test:
%EXPECTS
%EXPECTS
expected_2
expected_1
%EXPECTE
%EXPECTE
%ACTUALS
%ACTUALS
actual_2
actual_1
%ACTUALE
%ACTUALE
%TRACES 
%TRACES
org.opentest4j.AssertionFailedError: expected: <expected_2> but was: <actual_2>
// [...] (shortened the stacktrace)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

%TRACEE

org.opentest4j.AssertionFailedError: expected: <expected_1> but was: <actual_1>
// [...]
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

%TRACEE

// (finally both test threads report their end:)
%TESTE  4,test_2(junit5.ParallelExecutionTest)
%TESTE  3,test_1(junit5.ParallelExecutionTest)

%RUNTIME87
```

artifact / version: org.eclipse.jdt.junit.runtime-3.7.0.jar","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/378/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/378,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SOdhW,eclipse.jdt.ui,1379522646,378,NA,fladdimir,53265832,Wladimir Hofmann,,NA,2023-01-11T21:41:59Z,2023-01-11T21:41:59Z,"It looks like an instance of `FirstRunExecutionListener` (which reports the test information via its `MessageSender` (`RemoteTestRunner`)) is called concurrently from multiple test execution threads.

```java

	@Override
	public void notifyTestFailed(TestReferenceFailure failure) {
		sendMessage(failure.getTest(), failure.getStatus()); // <- write %FAILED message
                // add related comparison failure/trace messages:
		sendFailure(failure, MessageIds.TRACE_START, MessageIds.TRACE_END);
	}
        // [...]
	protected void sendFailure(TestReferenceFailure failure, String startTrace,
			String endTrace) {
		FailedComparison comparison = failure.getComparison();
		if (comparison != null)
			comparison.sendMessages(fSender);

		fSender.sendMessage(startTrace);
		fSender.sendMessage(failure.getTrace());
		fSender.sendMessage(endTrace);
		fSender.flush();
	}

```

Since calls of the underlying PrintWriter instance are synchronized, individual messages are written correctly, however, multiple related messages may be mixed up by different threads.  

To prevent this, it might be sufficient to synchronize calls of `notifyTestFailed` (the only method sending multiple related messages)?

```java
        @Override
	public synchronized void notifyTestFailed(TestReferenceFailure failure) { // [...]
```

(Please let me know in case I may help fixing this.)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SOdhW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/378,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SOjiV,eclipse.jdt.ui,1379547285,378,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-01-11T22:07:11Z,2023-01-11T22:07:11Z,Hi @fladdimir.  I think the synchronization of the notifyTestFailed method makes perfect sense.  Do you want to submit a PR to go through the process or would you rather I did it?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SOjiV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/378,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SOlr-,eclipse.jdt.ui,1379556094,378,NA,fladdimir,53265832,Wladimir Hofmann,,NA,2023-01-11T22:16:32Z,2023-01-11T22:16:32Z,"> Hi @fladdimir. I think the synchronization of the notifyTestFailed method makes perfect sense. Do you want to submit a PR to go through the process or would you rather I did it?

Hi, thanks for the quick reply! I would like to do it and I will prepare a PR","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SOlr-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/380,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/380,eclipse.jdt.ui,1530511415,380,"Clean up ""Convert to switch expression"" crashes with ClassCastException due to ThrowStatement",PhilippWendler,2545335,Philipp Wendler,,CLOSED,2023-01-12T10:58:42Z,2023-01-12T19:51:28Z,"Applying the clean up ""Convert to switch expression"" on the code
```java
public class Test {

  public void bar() {}

  public int foo(int i) {
    switch (i) {
      case 0:
        return 0;
      default:
        bar();
        throw new AssertionError();
    }
  }
}
```
leads to the error message ""An unexpected exception occurred while creating a change object"" and the following stack trace in the error log:
```
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:395)
	at org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:1034)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizard.createChange(RefactoringWizard.java:662)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizard.computeUserInputSuccessorPage(RefactoringWizard.java:504)
	at org.eclipse.ltk.ui.refactoring.UserInputWizardPage.computeSuccessorPage(UserInputWizardPage.java:77)
	at org.eclipse.ltk.ui.refactoring.UserInputWizardPage.getNextPage(UserInputWizardPage.java:113)
	at org.eclipse.jdt.internal.ui.fix.CleanUpRefactoringWizard$CleanUpConfigurationPage.getNextPage(CleanUpRefactoringWizard.java:437)
	at org.eclipse.jface.wizard.WizardDialog.nextPressed(WizardDialog.java:911)
	at org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:469)
	at org.eclipse.jface.dialogs.Dialog.lambda$0(Dialog.java:619)
	at org.eclipse.swt.events.SelectionListener$1.widgetSelected(SelectionListener.java:84)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:5855)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1529)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:5065)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4517)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.lambda$0(RefactoringWizardOpenOperation.java:190)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:209)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:126)
	at org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:41)
	at org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter.startCleanupRefactoring(RefactoringExecutionStarter.java:257)
	at org.eclipse.jdt.internal.ui.actions.AllCleanUpsAction.performRefactoring(AllCleanUpsAction.java:71)
	at org.eclipse.jdt.internal.ui.actions.CleanUpAction.run(CleanUpAction.java:186)
	at org.eclipse.jdt.internal.ui.actions.CleanUpAction.run(CleanUpAction.java:116)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:274)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:252)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:5855)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1529)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:5065)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4517)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
Caused by: java.lang.ClassCastException: class org.eclipse.jdt.core.dom.ThrowStatement cannot be cast to class org.eclipse.jdt.core.dom.ExpressionStatement (org.eclipse.jdt.core.dom.ThrowStatement and org.eclipse.jdt.core.dom.ExpressionStatement are in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @45da40ad)
	at org.eclipse.jdt.internal.corext.fix.SwitchExpressionsFixCore$SwitchExpressionsFixOperation.rewriteAST(SwitchExpressionsFixCore.java:407)
	at org.eclipse.jdt.internal.corext.fix.CompilationUnitRewriteOperationsFixCore.createChange(CompilationUnitRewriteOperationsFixCore.java:98)
	at org.eclipse.jdt.internal.ui.fix.CleanUpFixWrapper.createChange(CleanUpFixWrapper.java:46)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.calculateChange(CleanUpRefactoring.java:775)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor.calculateSolutions(CleanUpRefactoring.java:301)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor.acceptAST(CleanUpRefactoring.java:279)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1008)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:692)
	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:954)
	at org.eclipse.jdt.internal.corext.dom.ASTBatchParser.createASTs(ASTBatchParser.java:82)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpFixpointIterator.next(CleanUpRefactoring.java:399)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.cleanUpProject(CleanUpRefactoring.java:682)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.checkFinalConditions(CleanUpRefactoring.java:642)
	at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:86)
	at org.eclipse.ltk.core.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:122)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2380)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2405)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:89)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)
```
The error does not occur if either the call to `bar()` or the `throw` are removed.

It seems that [this code for adding a yield statement for cases with more than one statement](https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/b0cbe57f12a55c0e2cdf2f55082ddd06a470b2f6/org.eclipse.jdt.core.manipulation/core%20extension/org/eclipse/jdt/internal/corext/fix/SwitchExpressionsFixCore.java#L404-L408) needs to gain a case for `ThrowStatement` like the [code for single-statement cases](https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/b0cbe57f12a55c0e2cdf2f55082ddd06a470b2f6/org.eclipse.jdt.core.manipulation/core%20extension/org/eclipse/jdt/internal/corext/fix/SwitchExpressionsFixCore.java#L384-L386) has.

I am using version 4.26.0.20221201-1200 of the Eclipse IDE for Java Developers and version 3.27.100.v20221122-0749 of `org.eclipse.jdt.ui`, which is the latest that the updater offers for me.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/380/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/381,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/381,eclipse.jdt.ui,1530530878,381,"Clean up ""Convert to switch expression"" crashes with NullPointerException due to return without expression",PhilippWendler,2545335,Philipp Wendler,,CLOSED,2023-01-12T11:12:20Z,2023-01-12T21:49:44Z,"Applying the clean up ""Convert to switch expression"" on the code
```java
public class Test {

  public void f(int i) {
    switch (i) {
      case 0:
        return;
      default:
        throw new AssertionError();
    }
  }
}
```
leads to the error message ""An unexpected exception occurred while creating a change object"" and the following stack trace in the error log:
```
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:395)
	at org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:1034)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizard.createChange(RefactoringWizard.java:662)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizard.computeUserInputSuccessorPage(RefactoringWizard.java:504)
	at org.eclipse.ltk.ui.refactoring.UserInputWizardPage.computeSuccessorPage(UserInputWizardPage.java:77)
	at org.eclipse.ltk.ui.refactoring.UserInputWizardPage.getNextPage(UserInputWizardPage.java:113)
	at org.eclipse.jdt.internal.ui.fix.CleanUpRefactoringWizard$CleanUpConfigurationPage.getNextPage(CleanUpRefactoringWizard.java:437)
	at org.eclipse.jface.wizard.WizardDialog.nextPressed(WizardDialog.java:911)
	at org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:469)
	at org.eclipse.jface.dialogs.Dialog.lambda$0(Dialog.java:619)
	at org.eclipse.swt.events.SelectionListener$1.widgetSelected(SelectionListener.java:84)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:5855)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1529)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:5065)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4517)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.lambda$0(RefactoringWizardOpenOperation.java:190)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:209)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:126)
	at org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:41)
	at org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter.startCleanupRefactoring(RefactoringExecutionStarter.java:257)
	at org.eclipse.jdt.internal.ui.actions.AllCleanUpsAction.performRefactoring(AllCleanUpsAction.java:71)
	at org.eclipse.jdt.internal.ui.actions.CleanUpAction.run(CleanUpAction.java:186)
	at org.eclipse.jdt.internal.ui.actions.CleanUpAction.run(CleanUpAction.java:116)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:274)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:252)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:5855)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1529)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:5065)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4517)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
Caused by: java.lang.NullPointerException
	at org.eclipse.jdt.internal.corext.fix.SwitchExpressionsFixCore$SwitchExpressionsFixOperation.getNewStatementFromReturn(SwitchExpressionsFixCore.java:511)
	at org.eclipse.jdt.internal.corext.fix.SwitchExpressionsFixCore$SwitchExpressionsFixOperation.rewriteAST(SwitchExpressionsFixCore.java:388)
	at org.eclipse.jdt.internal.corext.fix.CompilationUnitRewriteOperationsFixCore.createChange(CompilationUnitRewriteOperationsFixCore.java:98)
	at org.eclipse.jdt.internal.ui.fix.CleanUpFixWrapper.createChange(CleanUpFixWrapper.java:46)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.calculateChange(CleanUpRefactoring.java:775)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor.calculateSolutions(CleanUpRefactoring.java:301)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor.acceptAST(CleanUpRefactoring.java:279)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1008)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:692)
	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:954)
	at org.eclipse.jdt.internal.corext.dom.ASTBatchParser.createASTs(ASTBatchParser.java:82)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpFixpointIterator.next(CleanUpRefactoring.java:399)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.cleanUpProject(CleanUpRefactoring.java:682)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.checkFinalConditions(CleanUpRefactoring.java:642)
	at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:86)
	at org.eclipse.ltk.core.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:122)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2380)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2405)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:89)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)
Root exception:
java.lang.NullPointerException
	at org.eclipse.jdt.internal.corext.fix.SwitchExpressionsFixCore$SwitchExpressionsFixOperation.getNewStatementFromReturn(SwitchExpressionsFixCore.java:511)
	at org.eclipse.jdt.internal.corext.fix.SwitchExpressionsFixCore$SwitchExpressionsFixOperation.rewriteAST(SwitchExpressionsFixCore.java:388)
	at org.eclipse.jdt.internal.corext.fix.CompilationUnitRewriteOperationsFixCore.createChange(CompilationUnitRewriteOperationsFixCore.java:98)
	at org.eclipse.jdt.internal.ui.fix.CleanUpFixWrapper.createChange(CleanUpFixWrapper.java:46)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.calculateChange(CleanUpRefactoring.java:775)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor.calculateSolutions(CleanUpRefactoring.java:301)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor.acceptAST(CleanUpRefactoring.java:279)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1008)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:692)
	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:954)
	at org.eclipse.jdt.internal.corext.dom.ASTBatchParser.createASTs(ASTBatchParser.java:82)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpFixpointIterator.next(CleanUpRefactoring.java:399)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.cleanUpProject(CleanUpRefactoring.java:682)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.checkFinalConditions(CleanUpRefactoring.java:642)
	at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:86)
	at org.eclipse.ltk.core.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:122)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2380)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2405)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:89)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)
```

It seems that [this code](https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/b0cbe57f12a55c0e2cdf2f55082ddd06a470b2f6/org.eclipse.jdt.core.manipulation/core%20extension/org/eclipse/jdt/internal/corext/fix/SwitchExpressionsFixCore.java#L497-L518) needs to handle return statements without an expression.

I am using version 4.26.0.20221201-1200 of the Eclipse IDE for Java Developers and version 3.27.100.v20221122-0749 of `org.eclipse.jdt.ui`, which is the latest that the updater offers for me.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/381/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/382,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/382,eclipse.jdt.ui,1530790790,382,"Clean up ""Convert to switch expression"" produces invalid code for end-of-line comments at end of case",PhilippWendler,2545335,Philipp Wendler,,CLOSED,2023-01-12T14:16:28Z,2023-01-16T08:07:00Z,"Consider the following code:
```java
public class Test {

  public int f(int i) {
    switch (i) {
      case 0:
        return 0; // comment
      default:
        return 1;
    }
  }
}
```
The cleanup ""Convert to switch expression"" puts everything on one line, which makes all cases after the one with an end-of-line comment become part of the comment:
![grafik](https://user-images.githubusercontent.com/2545335/212089385-f6f6fc8a-3cae-47e4-8fc6-ec4ddc82e03e.png)
Note the `// commentdefault return 1;`.

The clean up should not join all lines into one in order to avoid this.

I am using version 4.26.0.20221201-1200 of the Eclipse IDE for Java Developers and version 3.27.100.v20221122-0749 of `org.eclipse.jdt.ui`, which is the latest that the updater offers for me.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/382/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/382,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SY1Do,eclipse.jdt.ui,1382240488,382,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-01-13T18:42:35Z,2023-01-13T18:42:35Z,"Hi @PhilippWendler I am unable to reproduce this problem.  I get:

```
public class Test {

	public int f(int i) {
		return switch (i) {
		case 0 -> 0; // comment
		default -> 1;
		};
	}

}
```
Do you have any special formatting options set up to put everything on one line?

I am using the Eclipse IDE for Eclipse Committers 2022-12 4.26.0.  I also get the same results when I use a child Eclipse that uses latest JDT UI sources that I am using to work on 4.27 M2.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SY1Do/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/382,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SeI2D,eclipse.jdt.ui,1383632259,382,NA,PhilippWendler,2545335,Philipp Wendler,,NA,2023-01-16T08:06:59Z,2023-01-16T08:06:59Z,"Weird. I cannot reproduce this anymore as well. I use the Eclipse plugin for google-java-format as formatter, and last week I had some problems with it because the latest version does not work. But even when I replicate the situation with the non-working formatter, I cannot reproduce this issue. So no idea what happened back then. Sorry for the noise!

And thanks a lot for the fast response and fixes also for my other issues!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SeI2D/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,eclipse.jdt.ui,1533722802,387,Add AST view and Java Element view to SDK,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2023-01-15T08:49:28Z,2024-10-27T09:23:54Z,"I've always wondered why such interesting JDT tools like AST view and Java Element view are not part of the SDK.
![image](https://user-images.githubusercontent.com/964108/212531225-9517d4e1-8797-4d50-bf83-68d39c2a1254.png).

The views offer insight about JDT internals, and are useful mostly for JDT development. But I think it would be beneficial also for few JDT developers and contributors to have such tools at hand.

I'm actually not aware how an average user can install them, I don't see them on any update site (or I'm blind).
The views themselves don't introduce any ""unwanted"" side effects in the IDE, so if someone isn't interested in them, they do not harm and do not disturb as not shown by default.

So why not add them to the SDK by default?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ScFUs,eclipse.jdt.ui,1383093548,387,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2023-01-15T08:58:04Z,2023-01-15T08:58:04Z,As a first step I would say create a feature (or features) and publish them on the update site. After that they can be included in the SDK zip.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ScFUs/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ScFne,eclipse.jdt.ui,1383094750,387,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2023-01-15T09:01:24Z,2023-01-15T09:01:24Z,+1 for adding them to the SDK,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ScFne/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ScFpQ,eclipse.jdt.ui,1383094864,387,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-15T09:01:44Z,2023-01-15T09:01:44Z,"> create a feature (or features)

I **see** features in JDT UI git repo.

> and publish them on the update site.

May be that was broken at some time?
See for example https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/master/org.eclipse.jdt.astview.feature/feature.xml#L19
 
I have also no idea **which** update site and **how** to publish? 

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ScFpQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ScF2f,eclipse.jdt.ui,1383095711,387,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2023-01-15T09:05:13Z,2023-01-15T09:05:13Z,As this is published to jdt web space this is smth that JDT devs handled and not the releng team so I can't help with that. IMHO it makes perfect sense to have it in the regular p2 repo if that is the intention and I can help with that.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ScF2f/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ScGJa,eclipse.jdt.ui,1383096922,387,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-15T09:10:26Z,2023-01-15T09:10:26Z,"> IMHO it makes perfect sense to have it in the regular p2 repo if that is the intention and I can help with that.

Yes, please. I wish I can have them not only in the debugger :-)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ScGJa/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ScGb-,eclipse.jdt.ui,1383098110,387,NA,laeubi,1331477,Christoph Läubrich,,NA,2023-01-15T09:16:24Z,2023-01-15T09:16:24Z,"Why not simply add the bundles that provide them to the `jdt.feature` instead of an extra one? m2eclise for example also ship some debugging views that are not enabled by default, but if could get interesting.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ScGb-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ScKNn,eclipse.jdt.ui,1383113575,387,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2023-01-15T10:28:22Z,2023-01-15T10:28:22Z,"+1 to add it in the SDK (as a feature or even directly as bundles since IIRC mixed products are now supported).
-1 to add it in the main jdt.feature; as this would be source of noise and confusion for the vast majority of JDT users.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ScKNn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ScKZs,eclipse.jdt.ui,1383114348,387,NA,laeubi,1331477,Christoph Läubrich,,NA,2023-01-15T10:32:20Z,2023-01-15T10:32:20Z,"> -1 to add it in the main jdt.feature; as this would be source of noise and confusion for the vast majority of JDT users.

Can you explain how ""the vast majority of JDT users"" are _confused_ by a view that is not shown?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ScKZs/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ScKje,eclipse.jdt.ui,1383114974,387,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2023-01-15T10:35:31Z,2023-01-15T10:35:31Z,"> Can you explain how ""the vast majority of JDT users"" are confused by a view that is not shown?

Users will get to the ""Show View"" dialog and see one more view which they would hardly know whether it's interesting to them or not. Usually, they'll want the Outline view, but if they're not familiar with the Outline term, they may choose the AST view hoping it's what they want, and often, it wouldn't be what they want.
Every new UI entry, every new term does adds complexity to users, because it forces them to chose or to learn 1 more thing.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ScKje/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ScLM7,eclipse.jdt.ui,1383117627,387,NA,laeubi,1331477,Christoph Läubrich,,NA,2023-01-15T10:47:45Z,2023-01-15T10:47:45Z,"> Users will get to the ""Show View"" dialog and see one more view which they would hardly know whether it's interesting to them or not. 

There is already a filter of ""default"" shown items and a ""more..."" that actually contains lot of stuff I hardly know if it is interesting, but thing what, I just don't click items I don't know what they do and e voila I'm not confused ;-)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ScLM7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ScL6J,eclipse.jdt.ui,1383120521,387,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2023-01-15T11:03:29Z,2023-01-15T11:03:29Z,"And what about Ctrl+3? Or other entry points?

> I just don't click items I don't know what they do and e voila I'm not confused ;-)

Good for you. But I don't think this can be generalized to everyone.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ScL6J/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ScMb0,eclipse.jdt.ui,1383122676,387,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-15T11:14:26Z,2023-01-15T11:14:26Z,"> +1 to add it in the SDK (as a feature or even directly as bundles since IIRC mixed products are now supported).

Could you give a pointer how one can do that? I would be fine to have the tools in the SDK, because this is what SDK is good for. Having them in feature is irrelevant for the purpose I have.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ScMb0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ScMco,eclipse.jdt.ui,1383122728,387,NA,laeubi,1331477,Christoph Läubrich,,NA,2023-01-15T11:14:46Z,2023-01-15T11:14:46Z,"Well given that we better ship **nothing** to the user as then a user can't be ""confused"" ...","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ScMco/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ScNDy,eclipse.jdt.ui,1383125234,387,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2023-01-15T11:28:53Z,2023-01-15T11:28:53Z,"> Could you give a pointer how one can do that? I would be fine to have the tools in the SDK, because this is what SDK is good for. Having them in feature is irrelevant for the purpose I have.

You can see for example https://github.com/eclipse-tycho/tycho/blob/master/tycho-its/projects/product.types/products/mixed.product/mixed.product and apply similar addition `<plugins>` to https://github.com/eclipse-platform/eclipse.platform.releng.aggregator/blob/master/eclipse.platform.releng.tychoeclipsebuilder/eclipse.platform.repository/sdk.product . But actually, it would make sense to add it into the SDK feature https://github.com/eclipse-platform/eclipse.platform.releng/blob/master/features/org.eclipse.sdk/feature.xml directly.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ScNDy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SegAo,eclipse.jdt.ui,1383727144,387,NA,merks,208716,Ed Merks,,NA,2023-01-16T09:24:07Z,2023-01-16T09:24:07Z,"There's a distinction between what's show here:

![image](https://user-images.githubusercontent.com/208716/212642911-41c41239-550a-4071-867d-e587318c3003.png)

Versus what's available via Other...  Wouldn't it be fine for it to only be available view Other?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SegAo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sekvo,eclipse.jdt.ui,1383746536,387,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-16T09:32:40Z,2023-01-16T09:32:40Z,"@merks : if it is possible to add the bundles to SDK feature, I will just do that. I simply had no time yet to do that.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sekvo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SeqML,eclipse.jdt.ui,1383768843,387,NA,merks,208716,Ed Merks,,NA,2023-01-16T09:48:20Z,2023-01-16T09:48:20Z,"I just ask, because EPP projects uses JDT's feature so that makes a difference where you adding..","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SeqML/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Serd2,eclipse.jdt.ui,1383774070,387,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2023-01-16T09:52:38Z,2023-01-16T09:52:38Z,"Exactly, the goal should be to add to eclipse sdk feature and not to the jdt feature","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Serd2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SjNXY,eclipse.jdt.ui,1384961496,387,NA,noopur2507,8749449,Noopur Gupta,,NA,2023-01-17T07:48:01Z,2023-01-17T07:48:01Z,"See https://www.eclipse.org/jdt/ui/index.php - Optional Plug-ins (maintained by JDT UI).

Update site mentioned is - http://www.eclipse.org/jdt/ui/update-site/content

We also have these views available via Eclipse Marketplace.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SjNXY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SjZZl,eclipse.jdt.ui,1385010789,387,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-17T08:23:39Z,2023-01-17T08:23:39Z,"> Update site mentioned is - http://www.eclipse.org/jdt/ui/update-site/content

That was built last time **2021**.
![image](https://user-images.githubusercontent.com/964108/212845452-cc96384e-c80e-44f7-b215-9f3a0c6892ca.png)

> See https://www.eclipse.org/jdt/ui/index.php - Optional Plug-ins (maintained by JDT UI).

Well, we see how good that maintenance is :-(

The https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/390 re-enabled building the views that for some reason was not done anymore...

Note: the point is to simplify JDT development to provide all the tools we wrote for the JDT developer *instantly*.
And I fully agree that they shouldn't be included in ""default"" Eclipse based packages.
But SDK is the place where I expect them to appear, because they belong to ""software development kit"" for Eclipse.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SjZZl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SjgD2,eclipse.jdt.ui,1385038070,387,NA,noopur2507,8749449,Noopur Gupta,,NA,2023-01-17T08:49:03Z,2023-01-17T08:49:03Z,"Regarding the last update, it was done with https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/259. Not sure if something went wrong and the changes are not being reflected.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SjgD2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sji1f,eclipse.jdt.ui,1385049439,387,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-17T08:59:10Z,2023-01-17T08:59:10Z,"> Regarding the last update, it was done with #259. Not sure if something went wrong and the changes are not being reflected.

So do you propose to keep the current state and rely on **manual** tasks to update not widely known update site?

What speaks against **automatic** deployment in the SDK (not part of JDT feature)?
- It will be automated, zero effort to deployment
- It will be available instantly in SDK also for those who has no idea about existence of the tools and update site","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sji1f/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sjjb_,eclipse.jdt.ui,1385051903,387,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2023-01-17T09:01:16Z,2023-01-17T09:01:16Z,"As far as I understand, @noopur2507 did only share some context and didn't oppose to the idea of adding the views to the SDK feature.
I agree with @iloveeclipse in the current state, adding those to SDK feature would provide good value and make maintenance easier; maybe making it possible for JDT to abandon maintenance of http://www.eclipse.org/jdt/ui/update-site/content and the Marketplace entry: less maintenance, more value delivered to the right audience, isn't it great?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sjjb_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sjlfi,eclipse.jdt.ui,1385060322,387,NA,ktatavarthi,18457577,Kalyan Prasad Tatavarthi,,NA,2023-01-17T09:07:56Z,2023-01-17T09:07:56Z,"+1 for adding these plugins to the sdk. 

The approach followed previously was that the ASTView and JEView were updated post Eclipse SDK Release which officially supported a new Java release. I had done it as part of #259. 

The problem that @iloveeclipse has discovered seems to have occurred because of the move of the git repository from  https://git.eclipse.org/r/plugins/gitiles/www.eclipse.org/jdt to https://github.com/eclipse-jdt/jdt-website. The new changes done as part of #259 are missing here.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sjlfi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sjzk-,eclipse.jdt.ui,1385118014,387,NA,merks,208716,Ed Merks,,NA,2023-01-17T09:50:17Z,2023-01-17T09:50:17Z,"When these are available, I think it will be good that the Oomph setup for JDT installs these views, right?  I can make the requirements optional greedy so that that install doesn't fail if it doesn't find those views...","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sjzk-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sj46s,eclipse.jdt.ui,1385139884,387,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-17T10:05:23Z,2023-01-17T10:05:23Z,"> When these are available, I think it will be good that the Oomph setup for JDT installs these views, right?

Exact. That's was the point of having all the tooling we have at hand.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sj46s/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SkBSW,eclipse.jdt.ui,1385174166,387,NA,merks,208716,Ed Merks,,NA,2023-01-17T10:29:42Z,2023-01-17T10:29:42Z,"I looked at what's contributed to SimRel and because product that includes the SDK feature that now includes these two view features is contributed, I expect that the train repo will also contain these two additional JDT view features:

![image](https://user-images.githubusercontent.com/208716/212875138-4ad3e644-13b8-4b65-85ab-7cba356fbc2b.png)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SkBSW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SkaIY,eclipse.jdt.ui,1385275928,387,NA,noopur2507,8749449,Noopur Gupta,,NA,2023-01-17T11:21:10Z,2023-01-17T11:21:10Z," 

> As far as I understand, @noopur2507 did only share some context and didn't oppose to the idea of adding the views to the SDK feature.

That's correct.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SkaIY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SkbX-,eclipse.jdt.ui,1385281022,387,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2023-01-17T11:25:41Z,2023-01-17T11:25:41Z,AST and Java element views are available and installed by default by the SDK in https://download.eclipse.org/eclipse/downloads/drops4/I20230117-0430/ thus this one can be closed.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SkbX-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SkePd,eclipse.jdt.ui,1385292765,387,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-17T11:36:01Z,2023-01-17T11:36:01Z,"Thanks Alex, but I plan to add smoke tests. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SkePd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Skfd2,eclipse.jdt.ui,1385297782,387,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2023-01-17T11:40:52Z,2023-01-17T11:40:52Z,Perfect. I am just reporting releng part is done. The views will need some polishing for sure but this is beyond this issue purpose.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Skfd2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sk1EE,eclipse.jdt.ui,1385386244,387,NA,merks,208716,Ed Merks,,NA,2023-01-17T12:57:49Z,2023-01-17T12:57:49Z,"FYI, these new things are cause JDT's Maven publishing to fail because of missing sources:

https://ci.eclipse.org/releng/view/Publish%20to%20Maven/job/PublishJDTtoMaven/

The sources are present in the p2 repo, so I shall investigate...","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sk1EE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sk7q7,eclipse.jdt.ui,1385413307,387,NA,merks,208716,Ed Merks,,NA,2023-01-17T13:19:17Z,2023-01-17T13:19:17Z,"@akurtakov 

The problem is that the source bundles are not mentioned anywhere, and there is no source feature generated for these two things that were added to the SDK feature.  I'm pretty sure if we had the corresponding source features to the SDK that this will fix the Maven publishing problem and is the easiest way to fix it...","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sk7q7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SlqNM,eclipse.jdt.ui,1385603916,387,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-17T15:29:04Z,2023-01-17T15:29:04Z,"> FYI, these new things are cause JDT's Maven publishing to fail because of missing sources:
> 
> https://ci.eclipse.org/releng/view/Publish%20to%20Maven/job/PublishJDTtoMaven/
> 
> The sources are present in the p2 repo, so I shall investigate...

I believe this continues now in https://github.com/eclipse-platform/eclipse.platform.releng.aggregator/issues/739, so nothing to do here at JDT.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SlqNM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SrP66,eclipse.jdt.ui,1387069114,387,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-18T13:24:24Z,2023-01-18T13:24:24Z,"Unfortunately the smoke test didn't work as expected on Mac & Linux Java 19, I have to update the test => reopening.

```
begin 0, end -1, length 2

java.lang.StringIndexOutOfBoundsException: begin 0, end -1, length 2
at java.base/java.lang.String.checkBoundsBeginEnd(String.java:4601)
at java.base/java.lang.String.substring(String.java:2704)
at org.eclipse.jdt.ui.tests.views.SmokeViewsTest.readJdkRelease(SmokeViewsTest.java:186)
at org.eclipse.jdt.ui.tests.views.SmokeViewsTest.createProject(SmokeViewsTest.java:151)
at org.eclipse.jdt.ui.tests.views.SmokeViewsTest.setUp(SmokeViewsTest.java:67)
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SrP66/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/387,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6RbkTp,eclipse.jdt.ui,2439922921,387,NA,jmini,1222165,Jérémie Bresson,dev@jmini.fr,NA,2024-10-27T09:23:53Z,2024-10-27T09:23:53Z,"Here is a PR to update the documentation pages of the ASTView and JEView: https://github.com/eclipse-jdt/jdt-website/pull/2.

I hope that even if the php pages are in maintenance mode, they can still be updated until there a replacement (like a static website).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6RbkTp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/388,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/388,eclipse.jdt.ui,1534492688,388,"Clean up ""Convert to switch expression"" produces invalid code if there is a comment after the case",PhilippWendler,2545335,Philipp Wendler,,CLOSED,2023-01-16T08:19:54Z,2023-03-09T23:07:22Z,"Consider the following code:

```java
public class Test {

  public int f(int i) {
    switch (i) {
      case 0: // comment
        return 0;
      default:
        return 1;
    }
  }
}
```

The clean up ""Convert to switch expression"" replaces this with a switch expression inside a `return` and removes the `return` in the cases, but fails to convert the switch labeled statement groups into switch rules, leaving invalid code:

![grafik](https://user-images.githubusercontent.com/2545335/212628467-5fbe8dba-5fa5-4c11-97cf-659c66485ee9.png)

The expected result would be something like
```java
public class Test {

  public int f(int i) {
    return switch (i) {
      case 0 -> // comment
      0;
      default -> 1;
    };
  }
}
```
A solution with `yield` would also be possible instead, but the switch rule would be nicer.

If I replace `// comment` with `/* comment */`, the same invalid code is produced.
If the comment is removed completely, everything works as it should. 

I am using version 4.26.0.20221201-1200 of the Eclipse IDE for Java Developers and version 3.27.100.v20221122-0749 of `org.eclipse.jdt.ui`, which is the latest that the updater offers for me.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/388/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/392,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/392,eclipse.jdt.ui,1535053569,392,"Feature Suggestion: Let clean up ""Use pattern matching for instanceof"" apply only to positive cases (optionally)",PhilippWendler,2545335,Philipp Wendler,,OPEN,2023-01-16T14:41:10Z,2023-01-20T07:48:57Z,"Consider the following code:
```java
public class Test {

  public void f() {
    Object o = String.valueOf("""");

    if (o instanceof String) {
      String a = (String) o;
      System.out.println(a);
    }

    if (!(o instanceof String)) {
      System.out.println();
    } else {
      String b = (String) o;
      System.out.println(b);
    }

    if (!(o instanceof String)) {
      return;
    }
    String c = (String) o;
    System.out.println(c);
  }
}
```
The clean up ""Use pattern matching for instanceof"" currently rewrites this to
```java
public class Test {

  public void f() {
    Object o = String.valueOf("""");

    if (o instanceof String a) {
      System.out.println(a);
    }

    if (!(o instanceof String b)) {
      System.out.println();
    } else {
      System.out.println(b);
    }

    if (!(o instanceof String c)) {
      return;
    }
    System.out.println(c);
  }
}
```

This is correct and does what the clean up is supposed to do.

However, in my personal opinion, I would usually like to apply this refactoring only to cases like for variable `a` and not for cases like `b` and `c`, because I find the use of pattern matching there hard(er) to read. And I guess that many Java developers would agree with me here.

Thus I would like to make the suggestion that it would be a nice feature, if there would be a check box for this clean up for toggling between applying it to all possible cases or only to cases with positive `instanceof` checks (where the variable declaration is within a syntactic branch that is guarded by the `instanceof`).
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/392/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/392,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sh5z5,eclipse.jdt.ui,1384619257,392,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-01-16T22:12:46Z,2023-01-16T22:12:46Z,I'm not sure most Java developers would agree with you as you are the first I have seen to note this.  What if we made the cleanup a quick-fix as well so you could pick individual cases and change them at will?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sh5z5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/392,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Si9hh,eclipse.jdt.ui,1384896609,392,NA,PhilippWendler,2545335,Philipp Wendler,,NA,2023-01-17T06:33:07Z,2023-01-17T06:33:07Z,"Thanks for your response!

Maybe lack of feedback is also because not many projects are still on older Java versions?

For me, a quick fix would not useful. We have a large code base and I use the Eclipse clean ups from time to time in order to clean up the whole code base (which is really nice), and of course especially when migrating to a newer Java version.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Si9hh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/392,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TTi0k,eclipse.jdt.ui,1397632292,392,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-01-19T21:28:20Z,2023-01-19T21:28:20Z,"I personally think the clean-up is doing what is supposed to do: it is removing lines and making the code cleaner utilizing the new Java feature.  That said, I also think the code flow is reasonable to follow once you get used to the new feature and I don't feel a sub-option is warranted.  An olive branch I can offer is to add a new clean-up which changes any if/else with a negative instanceof pattern matching to reverse the if/else logic so the positive logic occurs up front and a negative instanceof isn't required.  What do you think?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TTi0k/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/392,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TVC16,eclipse.jdt.ui,1398025594,392,NA,PhilippWendler,2545335,Philipp Wendler,,NA,2023-01-20T07:48:57Z,2023-01-20T07:48:57Z,"We agree, I already wrote in my original post that the cleanup does what it is supposed to do. :-)

A clean up for inverting negated `instanceof` conditions might be nice as well, I certainly won't argue against it (more clean up options are always nice!). For me as an outsider it just seems a lot more complex and more work, and I would already be fine with that sub-option for the existing clean up.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TVC16/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/394,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/394,eclipse.jdt.ui,1535871864,394,Keyboard shortcut `CTRL`+`SHIFT`+`T` clash in default binding between Language Server and JDT ,de-jcup,11644753,Albert Tregnaghi,,CLOSED,2023-01-17T06:58:14Z,2023-01-19T08:31:44Z,"## Situation
I upgraded my eclipse IDE to:
- Version: 2022-12 (4.26.0)
- Build id: 20221201-1913
- OS : Linux

_(I did not have the problem with 2022-09)_

Problem: I am using `CTRL`+`SHIFT`+`T`  more than 17 years now to show the ""Open type"" dialog in eclipse when writing Java code. But now there is a name clash : The language server parts have introduced same short cut for ""Go to Symbol in Workspace"". Because of this situation there is always a selection inside the window necessary which variant shall be used when pressing the shortcut inside a Java editor - very annoying/slowing down workflow.

### Details
![image](https://user-images.githubusercontent.com/11644753/212825047-d308cb3f-c373-409f-8ce4-481d6498428c.png)

## My current workaround
As a workaround I tried to change the default keybinding. And this was not as trivial as I would have expected.
Finally I managed to change the ""Go to Symbol in Workspace"" to be used only inside generic code editors and ""Open type"" to be used in ""Editing Java Source"" (But I still had to unbind the selected entry in next figure)
![image](https://user-images.githubusercontent.com/11644753/212827992-6a6ac7c5-2f52-4274-bfb2-b563ab5df8ae.png)

The final working setup looks now like this:
![image](https://user-images.githubusercontent.com/11644753/212829677-9dd73e1d-ae72-441f-99da-b05e679ecf32.png)

## Wanted
The standard behavior of ""Open type"" command inside JDT shall work ""out of the box"" without any clashes with language server. 

## Suggested Solution
The language server ""Go to Symbol in Workspace"" shall have per default ""when in generic code editor"" and the 2Open Type"" variant should be changed to ""Editing Java Source"" also per default.

So there would be two changes necessary: one in in JDT/Java editor command binding and another in language server binding.

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/394/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/394,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sn3d1,eclipse.jdt.ui,1386182517,394,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-01-17T22:42:25Z,2023-01-17T22:42:25Z,"Hi @de-jcup, key-bindings across the installation of various features/plug-ins is a long-standing issue in that different projects dole out key-bindings without there being a central authority to reserve them.  As you mentioned, this has been working for 17 years in Java and looking at the code, the key-binding definition in plugin.xml hasn't changed since 2005. As you might understand, there will be Java users who use the CTRL + SHIFT + T outside of the editor and this would be a loss of functionality to restrict this to only edting Java source (e.g. I can open a .properties file and still open a type via the short-cut), especially if the additional plug-ins causing the clash are not installed.   I'm not sure there is a solution that works for all parties other than the current one of asking the user what to do or having the user modify the bindings via the Keys preference page to avoid the clash.  Have you opened an issue against the language server?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Sn3d1/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/394,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SsL4p,eclipse.jdt.ui,1387314729,394,NA,de-jcup,11644753,Albert Tregnaghi,,NA,2023-01-18T16:04:32Z,2023-01-18T16:04:32Z,"I did not open currently an issue at the language server project. The problem is... Looking at https://bugs.eclipse.org/bugs/enter_bug.cgi I found the github page for JDT, but no hint about the Language server project. If you can give me  the official issue tracker URL for the language server, I would create an issue and link this one.

And... my workaround was (as you already mentioned in your comment before) not working well : when you have not opened a java editor it did not work any longer...

So I switched the key binding for JDT back to ""In Windows"" (as shown in next screen). Now it works again as expected and I have at least no multi selection except when being inside a generic text editor... The most problematic part was still that the origin Language server keybinding had to be deleted (I showed this inside a picture) to avoid the clash...

My now correct working setup:

![image](https://user-images.githubusercontent.com/11644753/213223349-093e313b-b426-4037-ac25-bb06ee7e3433.png)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5SsL4p/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/394,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TNuw0,eclipse.jdt.ui,1396108340,394,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-01-18T21:26:18Z,2023-01-18T21:26:18Z,"Hi @de-jcup I believe you want to open an issue against lsp4e (assuming you have it installed) as I did find the CTRL+SHIFT+T keybinding to go to symbol in workspace.

Their github site can be found at: https://github.com/eclipse/lsp4e","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TNuw0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/394,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TPDfG,eclipse.jdt.ui,1396455366,394,NA,de-jcup,11644753,Albert Tregnaghi,,NA,2023-01-19T05:22:59Z,2023-01-19T05:22:59Z,@jjohnstn : I created an issue at `lsp4e` at https://github.com/eclipse/lsp4e/issues/378,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TPDfG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/394,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TPpfF,eclipse.jdt.ui,1396611013,394,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-19T08:31:44Z,2023-01-19T08:31:44Z,"I think we can close this now?

Note the original issue is https://github.com/eclipse/lsp4e/issues/38","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TPpfF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/403,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/403,eclipse.jdt.ui,1549155186,403,Replace default class file editor with one crafted by BytecodeOutline.,LunarLaurus,121956871,Lauren,,OPEN,2023-01-19T13:24:41Z,2023-01-19T13:58:35Z,"Following on from [the addition of BCO into Eclipse](https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/364), [the original suggestion from 2018](https://bugs.eclipse.org/bugs/show_bug.cgi?id=540436) suggested improvements to the default class file editor. 

As a user, when reading a .class file, it can be difficult to understand the bytecode without proper syntax highlighting and/or colour coding. In order to improve the readability of class files in the default class file editor, the following changes are proposed:

- Implement syntax highlighting and color coding to highlight keywords and identifiers, similar to the Java editor.
- Add hovers to display more information about specific bytecode instructions.
- Improve the overall appearance of the disassembled source by adding outline and navigation features.

This is something I am happy to work on, but any suggestions are welcome.
I would like to thank @iloveeclipse as well for their hard work integrating BCO into Eclipse. 🙏 🙇‍♀️ ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/403/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/404,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/404,eclipse.jdt.ui,1550625731,404,"""Updating Maven Project"" blocks whole UI, not just updated project",2019-05-10,50481865,,,OPEN,2023-01-20T10:32:27Z,2023-01-20T10:47:02Z,"I reopened a long time closed Maven Project.
Immediately a process ""Updating Maven Project"" started, visible in Progress view and on the lower right.

Waiting for that to finish I try to open a file from a completely separate and unrelated project.
A modal popup appears showing progress of several processes, UI behind it is grayed out and it is impossible to do anything.

- closing the popup does not help, the moment I do something, it's back
- cancelling the ""Update Maven Project"" process does not work. Red cancel button gets gray and that's it. Process continues, UI inaccessible
- restarting/shutting down Eclipse doesn't work either -- it still ""Waiting for .... to finish""

I need to kill the Java process, but once I start Eclipse again, I am back at the same point.

a) why does a long running process block the whole UI at all?
b) why does a process (update, build, whatever) in one project lead to blocking everything in unrelated projects also?
c) why does a cancel does not actually cancel? Asking to cancel and waiting for it is one thing, but after a certain time w/o response, Eclipse should assume the process to be broken and kill it mercyless -- it should not wait indefinitely and even refus to shutdown
d) in this case it boiled down to fetch maven deps (jars) from a very slow repo -- such a bunch of http requests should really never block the UI, no matter what

A thread dump I took w/
`jstack <Java PID>`
[eclipse_updating_maven_deps.txt.zip](https://github.com/eclipse-jdt/eclipse.jdt.ui/files/10465406/eclipse_updating_maven_deps.txt.zip)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/404/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/404,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TVtCD,eclipse.jdt.ui,1398198403,404,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2023-01-20T10:34:58Z,2023-01-20T10:34:58Z,This is not JDT bug an M2E one. It's issue tracker is at https://github.com/eclipse-m2e/m2e-core/ so please report there.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TVtCD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/404,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TVwCF,eclipse.jdt.ui,1398210693,404,NA,2019-05-10,50481865,,,NA,2023-01-20T10:47:02Z,2023-01-20T10:47:02Z,"Care to elaborate?
How is a plugin utilizing the framework, using framework popups, progress etc responsible and not the framework it is embedded in?

I fully expect M2E to tell me it's an JDT or whatever issue, so please explain.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TVwCF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/405,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/405,eclipse.jdt.ui,1550679828,405,Allow to use JDT language server functionality as alternative to regular JDT UI,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,CLOSED,2023-01-20T11:10:29Z,2024-12-21T20:29:30Z,"To me it looks that most development for JDT will go into the JDT language server integration instead of enhancing JDT UI directly. 
It would be great if the Eclipse IDE would also provide a standard way to using this. Maybe you can connect the Java language server with the generic editor and if the user gives priority to this editor the Java language server would be used.

This way we would at least be able to provide the same functionality as VsCode for Java. Currently JDT UI might be more powerful but this may change giving the development resources moving to Java language server support.  ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/405/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/405,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TV2Hv,eclipse.jdt.ui,1398235631,405,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2023-01-20T11:10:44Z,2023-01-20T11:10:44Z,cc @mickaelistria @akurtakov @gayanper ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TV2Hv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/405,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TV4f4,eclipse.jdt.ui,1398245368,405,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2023-01-20T11:20:42Z,2023-01-20T11:20:42Z,"Some experiments are happening at https://github.com/rgrunber/eclipse.jdt.ls.client and https://github.com/mickaelistria/eclipse.jdt.ls.client . While it was already proven that JDT-LS can be used as an external process just like it's done for all other language servers; it immediately seems much weaker than plain JDT: missing preferences, missing discovery of JVM, and many other missing operations.
So we're progressively trying to run JDT-LS in the same process as JDT UI, using the same workspace and the same everything. This is a bit less easy and JDT-LS needs to be refactored here and there to behave more like a ""slave"" than a ""master"" of some lower-level Eclipse bits, but it's doable and some pieces are already working. I hope I'll soon report that the experiment is actually usable and that we can start planning the next steps (ie identify bits of JDT-UI that we can remove if JDT-LS is present).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TV4f4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/405,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TV5GU,eclipse.jdt.ui,1398247828,405,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2023-01-20T11:23:27Z,2023-01-20T11:23:27Z,See also this mailing-list thread: https://www.eclipse.org/lists/platform-dev/msg03695.html,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TV5GU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/405,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Tiz26,eclipse.jdt.ui,1401634234,405,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2023-01-24T09:38:10Z,2023-01-24T09:38:10Z,"Note that at the moment, once the current prototype is a minimum viable product, my plan is to keep it in a personal or a Red Hat repo and publish it on Marketplace. We won't try to push force this editor into JDT.
However, this repo will be maintained the Eclipse way, with IP tracking and so on, so whenever there is possible benefit (eg capability to attract more contributor?) to move the code to some Eclipse project, it will be easy. I suspect discussing the replacement of the editor will naturally happen if JDT-UI starts to lag behind JDT-LS and if one day the JDT-LS based editor gets superior in some vital aspects; then it would be in the best interest of JDT-UI itself to adopt it. But we're not there yet.
If everything goes as I foresee, the minimum viable product will be available on Marketplace within a couple of weeks. Our team at Red Hat will most likely start using it as primary editor, for dogfooding, thus allowing also to better consolidate other parts of the stack (eg LSP4E, JDT-LS...).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Tiz26/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/405,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Ti1Sr,eclipse.jdt.ui,1401640107,405,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2023-01-24T09:43:00Z,2023-01-24T09:43:00Z,"I would like to start using it, once you think it is consumable for test users. Let me know. One first step into this direction would be to make the JDT UI feature a root level feature in the SDK to be able to uninstall it after getting the new stuff.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Ti1Sr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/405,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Ti3pH,eclipse.jdt.ui,1401649735,405,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2023-01-24T09:51:25Z,2023-01-24T09:51:25Z,"> One first step into this direction would be to make the JDT UI feature a root level feature in the SDK to be able to uninstall it after getting the new stuff.

Actually, I think for some time, the best is to have both the JDT-LS based editor and the full JDT UI editors installed and usable in the same IDE to allow to comparing them and also to have a good failback to workaround some limitations of the JDT-LS editor that will take some time to fix.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Ti3pH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/405,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TjDmP,eclipse.jdt.ui,1401698703,405,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-24T10:29:07Z,2023-01-24T10:29:07Z,"All that remembers me the story with e4 introduction, at least the fun part of it (before it became default).

Shouldn't we aim to produce **two** official SDK builds with either JDT UI version being installed?
I believe a ""mix"" of both in same SDK would be extremely confusing, also for ""testers"".","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TjDmP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/405,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TjFtX,eclipse.jdt.ui,1401707351,405,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2023-01-24T10:35:51Z,2023-01-24T10:35:51Z,"Note that jdt.ls right now has dependencies on bundles from m2e, xtext, buildship, etc. While these dependencies are optional this could be a major hurdle from releng POV and I don't see anyone jumping up for even daily official builds/tests/etc. so speaking for second SDK build is jumping ahead of ourselves right now. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TjFtX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/405,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TjHYR,eclipse.jdt.ui,1401714193,405,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2023-01-24T10:41:25Z,2023-01-24T10:41:25Z,"> Shouldn't we aim to produce two official SDK builds with either JDT UI version being installed?

I think what to aim as delivery is still too early to be settled. Fortunately the Eclipse Platform allows to delay and change such decision until very late without risk and without impacting the first steps; so let's leverage this opportunity and dodge the delivery debate until things start to work.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TjHYR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/405,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5UmGIF,eclipse.jdt.ui,1419272709,405,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2023-02-06T15:30:36Z,2023-02-06T15:30:36Z,"Interested people can look at https://github.com/mickaelistria/eclipse.jdt.ls.client and install it from https://marketplace.eclipse.org/content/jdt-language-server-client-eclipse-ide . It's still immature, but it works and allows to get the generic editor working with JDT-LS in the Eclipse IDE, with or without JDT-UI.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5UmGIF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/405,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Ye4ZE,eclipse.jdt.ui,2558232132,405,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2024-12-21T20:29:30Z,2024-12-21T20:29:30Z,Closing this one as the project is not top priority and interested people should step up to help at https://github.com/redhat-developer/eclipseide-jdtls,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Ye4ZE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/410,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/410,eclipse.jdt.ui,1552966924,410,Linux (dark system theme): code completion is hard to read,tmssngr,6029561,Thomas Singer,,OPEN,2023-01-23T11:56:20Z,2023-01-23T13:46:42Z,"I'm on Manjaro Linux (Gnome edition, GTK 3.24.36) which uses a dark theme by default (""Adw-dark""). As shown in the screenshot below, the code completion popup uses colors where foreground (middle gray) and background (middle blue) have a very bad contrast and hence are even for users with reasonable eyes hard to read.
![screenshot](https://user-images.githubusercontent.com/6029561/214033106-4af826fd-733a-4ff3-84fc-01f1bcacfefb.png)
Setting GTK_THEME=Adwaita before launching Eclipse fixes the problem, but it looks like an alien application (white theme while the system is dark).
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/410/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/410,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TdcCD,eclipse.jdt.ui,1400225923,410,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2023-01-23T11:58:47Z,2023-01-23T11:58:47Z,Have you tried switching Eclipse theme to Dark too?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TdcCD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/410,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TdcS6,eclipse.jdt.ui,1400227002,410,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-23T11:59:55Z,2023-01-23T11:59:55Z,"@tmssngr: I assume this is not JDT UI issue, and should be reported at https://github.com/eclipse-platform/eclipse.platform.ui.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TdcS6/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/410,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TdeT1,eclipse.jdt.ui,1400235253,410,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2023-01-23T12:06:11Z,2023-01-23T12:06:11Z,Remains to be seen. It could be jdt editor theming too.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TdeT1/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/410,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Tdn7k,eclipse.jdt.ui,1400274660,410,NA,tmssngr,6029561,Thomas Singer,,NA,2023-01-23T12:37:26Z,2023-01-23T12:37:26Z,"> Have you tried switching Eclipse theme to Dark too?

No, I've used the default. To me as a user it looked like Eclipse already adjusted to the dark system theme.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Tdn7k/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/410,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TdpmX,eclipse.jdt.ui,1400281495,410,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2023-01-23T12:43:50Z,2023-01-23T12:43:50Z,"Please do so, SWT adjust it's colors accordingly but wherever a plugin overrides/sets some color explicitly one has to switch to Eclipse dark theme.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TdpmX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/410,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Td39_,eclipse.jdt.ui,1400340351,410,NA,tmssngr,6029561,Thomas Singer,,NA,2023-01-23T13:28:37Z,2023-01-23T13:28:37Z,"In the preferences, page General | Appearance, the checkbox *Enable theming* is already selected as well as *Theme: Dark*. As I have not changed anything in the preferences, this seems like the default on this system.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Td39_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/410,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Td5yA,eclipse.jdt.ui,1400347776,410,NA,tmssngr,6029561,Thomas Singer,,NA,2023-01-23T13:32:02Z,2023-01-23T13:32:02Z,"BTW, is it expected that all buttons are flat and the enabled and disabled look similar?
![Screenshot from 2023-01-23 14-31-44](https://user-images.githubusercontent.com/6029561/214052086-09caa77b-9b4b-4c28-a059-476aa804f4eb.png)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Td5yA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/410,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TeBUt,eclipse.jdt.ui,1400378669,410,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2023-01-23T13:46:41Z,2023-01-23T13:46:41Z,"![image](https://user-images.githubusercontent.com/574788/214054526-998915cd-a6ec-44c1-946b-d1ebdf79f105.png)

Enabled/disabled are same for me too . The ""flat"" buttons are some intergration failing with your theme. Note that some years ago ""Adwaita theme is guaranteed to work. Eclipse SDK will run with other GTK 3 themes, however we cannot flag these as reference versions without significant community support for testing and/or development of fixes. Bugs that are reproducible only with themes other than Adwaita will be given a lower priority (or may not be fixed at all), compared to bugs which are reproducible on the target environments listed above. "" has been put into the project plan https://www.eclipse.org/projects/project-plan.php?planurl=http://www.eclipse.org/eclipse/development/plans/eclipse_project_plan_4_26.xml#target_environments%20plan . ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TeBUt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/411,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/411,eclipse.jdt.ui,1553963605,411,Save Action not removing unnecessary 'this' in generic classes,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2023-01-23T22:56:19Z,2023-01-24T12:16:59Z,"This is opening an issue for Bug 536138

https://bugs.eclipse.org/bugs/show_bug.cgi?id=536138

The Save Action ""Remove 'this' qualifier for non static field accesses"" is not evaluated in generic classes.

```
/**
 * Removing unnecessary 'this' works
 */
public class Foo{
  private int n;

  void run(){
    this.n = 5;
  }

  int get(){
    return this.n;
  }
}

/**
 * Removing unnecessary 'this' does not work
 */
public class Bar<T>{
  private int n;

  void run(){
    this.n = 5;
  }

  int get(){
    return this.n;
  }
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/411/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/413,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/413,eclipse.jdt.ui,1554992703,413,"Indentation setting of formatter ""forgotten"" sometimes",odrotbohm,128577,Oliver Drotbohm,info@odrotbohm.de,CLOSED,2023-01-24T13:31:23Z,2023-02-22T08:53:04Z,"I have a formatter setup using tabbed indentation and a tad width of two. Sometimes, after restarting Eclipse, these indentation settings are not applied anymore. The symptom is that I see tabs with the default width in the editor and when applying the formatter the sources change to space-based indentation. I can fix this problem by going to the formatter settings, switching to space-based indentation and then back to tab-based in the formatter.

Not that I also see the preference ""General > Editors > Text Editors > Insert spaces for tabs"" has been reactivated (I had explicitly disabled that before). I wonder if it's rather a bug in reading that setting that, if erroneously activated on startup, overrules the indentation settings of the formatter?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/413/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/413,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TkDQt,eclipse.jdt.ui,1401959469,413,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-24T13:34:43Z,2023-01-24T13:34:43Z,You use Oomph and that one simply restores your previously saved settings on startup in every workspace. ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TkDQt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/413,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TkD8B,eclipse.jdt.ui,1401962241,413,NA,odrotbohm,128577,Oliver Drotbohm,info@odrotbohm.de,NA,2023-01-24T13:36:35Z,2023-01-24T13:36:35Z,"No, I don't. I use a downloaded STS and the phenomenon appears without any changes to the platform (no updates or the liked).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TkD8B/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/413,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TkHCv,eclipse.jdt.ui,1401974959,413,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-24T13:45:23Z,2023-01-24T13:45:23Z,"> I use a downloaded STS

You should probably report that to the STS first?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TkHCv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/413,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TkIeW,eclipse.jdt.ui,1401980822,413,NA,odrotbohm,128577,Oliver Drotbohm,info@odrotbohm.de,NA,2023-01-24T13:49:42Z,2023-01-24T13:49:42Z,"Neither the general editor preference pane nor the JDT formatter settings are part of STS, right?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TkIeW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/413,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TkLSI,eclipse.jdt.ui,1401992328,413,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-24T13:57:46Z,2023-01-24T13:57:46Z,"> Neither the general editor preference pane nor the JDT formatter settings are part of STS, right?

Sorry, I have no idea what STS is and what's inside that could probably differ from default SDK package.

Ideally you should report your bugs on the **actual** product you use. If the product owner debugged the problem to the underlined platform issue, you are welcome in this tracker - or if you can reproduce the problem in a ""pure"" SDK package without anything added.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TkLSI/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/413,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TkOtV,eclipse.jdt.ui,1402006357,413,NA,odrotbohm,128577,Oliver Drotbohm,info@odrotbohm.de,NA,2023-01-24T14:07:03Z,2023-01-24T14:07:03Z,"I see, thanks for clarifying. I'll make sure I'm not gonna bother you in the future anymore.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TkOtV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/413,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TkRmG,eclipse.jdt.ui,1402018182,413,NA,,,,,NA,2023-01-24T14:14:00Z,2023-01-24T14:14:00Z,"https://spring.io/tools  

STS is short called of Spring boot Tools, It is really base on Eclipse.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TkRmG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/413,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TkR6-,eclipse.jdt.ui,1402019518,413,NA,,,,,NA,2023-01-24T14:14:51Z,2023-01-24T14:14:51Z,"@iloveeclipse Oliver Drotbohm 🥁 & 👨‍💻
[@odrotbohm](https://twitter.com/odrotbohm)
Frameworks & Architecture in the Spring team @ VMware, OpenSource, all things Spring, Java, data, DDD, REST, software architecture, drums & music. He/him.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TkR6-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/413,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TkT6z,eclipse.jdt.ui,1402027699,413,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-01-24T14:20:09Z,2023-01-24T14:20:09Z,"> It is really base on Eclipse.

No one doubted that. The question not answered is: since we have no related bugs reported for such basic functionality for the platform, could it be, that STS should investigate the problem first? There are many ways a product can change platform behavior, and not everything that is added by products is bug/side effects free.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TkT6z/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/413,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TkZj8,eclipse.jdt.ui,1402050812,413,NA,martinlippert,107705,Martin Lippert,mlippert@gmail.com,NA,2023-01-24T14:35:31Z,2023-01-24T14:35:31Z,"@iloveeclipse @odrotbohm Don't worry, I am involved here from the Spring Tools side and happy to help investigating this issue. No need to have a discussion around where to report his first, let's focus on the issue and try to reproduce this in the various environments to get to the bottom of this. Will keep you updated here.

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TkZj8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/413,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5VzzYp,eclipse.jdt.ui,1439643177,413,NA,martinlippert,107705,Martin Lippert,mlippert@gmail.com,NA,2023-02-22T08:53:04Z,2023-02-22T08:53:04Z,@odrotbohm I tried to reproduce this with the latest STS 4.17.2 as well as the most recent nightly builds based on Eclipse 2023-03 and wasn't able to reproduce this. Ping me when you are around and we can take a look at your specific installation to see what is going on here.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5VzzYp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/414,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/414,eclipse.jdt.ui,1556322155,414,Indent action indents unformatted text block wrongly,trancexpress,24752155,Simeon Andreev,,CLOSED,2023-01-25T09:32:00Z,2023-02-08T01:20:15Z,"This is a continuation of #30, which was fixed only partially with #33. We use the `Correct Indentation` save action and its applying odd indentations in our code.

E.g. with default formatter settings, the following (already formatted) snippet is no longer indented wrongly due to #30:

```
	public static void main(String[] args) {
		String a = """"""
				    line1
				    line2
				"""""";
		System.out.println(a);
	}
```

However, for a snippet that is not formatted, the formatting done by the indent action is wrong when compared to formatting the source.

Unformatted snippet:

```
	public static void main(String[] args) {
		String a =
				""""""
				    line1
				    line2
				"""""";
		System.out.println(a);
	}
```

Formatting the whole snippet: 

```
	public static void main(String[] args) {
		String a = """"""
				    line1
				    line2
				"""""";
		System.out.println(a);
	}
```

Indent action after selecting the snippet, this is also done for the `Correct Indentation` save action:

```
	public static void main(String[] args) {
		String a =
				""""""
						    line1
						    line2
						"""""";
		System.out.println(a);
	}
```

This is due to the indent action formatting each line separately, in which case the default formatter options result in the misaligned lines seen above. The fix for #30 addresses some cases of this (e.g. select the text block and `String a =`), but not all.

The expected outcome of the save action is to have the source look like formatted as a whole, since its supposed to correct indentations for all of the file.

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/414/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/414,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TpSjk,eclipse.jdt.ui,1403332836,414,NA,trancexpress,24752155,Simeon Andreev,,NA,2023-01-25T09:38:20Z,2023-01-25T09:38:20Z,"Hi @jjohnstn ,

any idea what might be missing in #33, when a text block starts on a separate line? Is maybe the ""0 indentation"" assumption (`TextBlockInfo textBlockInfo= new TextBlockInfo(-1, -1);`, from #33) wrong for that case?

Best regards and thanks,
Simeon","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TpSjk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/414,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TskXA,eclipse.jdt.ui,1404192192,414,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-01-25T20:34:26Z,2023-01-25T20:34:26Z,Hi @trancexpress I'll have to take a look.  It's been a while since I looked at that code.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TskXA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/414,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TsuzP,eclipse.jdt.ui,1404234959,414,NA,trancexpress,24752155,Simeon Andreev,,NA,2023-01-25T21:17:21Z,2023-01-25T21:17:21Z,"> Hi @trancexpress I'll have to take a look. It's been a while since I looked at that code.

That would be great, though its nothing urgent. We switched to the ""Indent on column"" option for text blocks since that seems to work best for us. If a potential fix is too complicated (or even looking into a fix is too much effort), its probably not worth investing time in.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5TsuzP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/414,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Ts0cl,eclipse.jdt.ui,1404258085,414,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-01-25T21:40:17Z,2023-01-25T21:40:17Z,"From my experiments here, the code is implementing the chosen strategy based on the first line.  The formatter is moving the opening """""" to the first line, then following the strategy.  In the case of just indenting, the opening """""" is treated as the first line with the strategy followed from there.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Ts0cl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/414,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5UvmJB,eclipse.jdt.ui,1421763137,414,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-02-08T01:19:58Z,2023-02-08T01:19:58Z,"Hi, the logic has been changed to make the indenting consistent whether the open quotes for the text block occur on their own line or the end of a previous line.  In either case, the indent will use the previous non-empty statement.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5UvmJB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/417,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/417,eclipse.jdt.ui,1559998373,417,Type filtering shouldn't apply to completion proposals dereferencing an object.,mickaelistria,469058,Mickael Istria,mistria@redhat.com,CLOSED,2023-01-27T15:56:50Z,2023-04-20T06:37:54Z,"From
```java
		com.sun.tools.javac.main.JavaCompiler javac = com.sun.tools.javac.main.JavaCompiler.instance(new com.sun.tools.javac.util.Context());
		javac.|
```
trying to complete on `|` gives nothing useful, no field of the `JavaCompiler` type. However, although type `com.sun.*` is filtered out (it wasn't proposed earlier as type and that's OK), once we know the type of the object, it doesn't seem useful to filter out the fields and methods.
In such case, filtering shouldn't apply to fields and methods, it should probably only apply to hide types or other proposals coming from a filtered type *that is not the dereferenced object*.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/417/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/417,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5aWRhB,eclipse.jdt.ui,1515788353,417,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-04-20T06:37:53Z,2023-04-20T06:37:53Z,"The fix caused a regression in debugger, see https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/239","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5aWRhB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/418,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/418,eclipse.jdt.ui,1560858664,418,Export a runnable JAR fails to include plugin dependencies with Maven nature enabled,philip-iii,590103,Philip Makedonski,,CLOSED,2023-01-28T13:29:39Z,2023-03-13T14:41:51Z,"When trying to export a runnable JAR from a launch configuration of a plugin project that has dependencies included in the manifest, and also the maven nature enabled, the exported JAR does not include the needed dependencies indicated in the manifest. Disabling the maven nature does seem to help, but the run configuration needs to be updated. Not sure if this is a problem of the JDT UI or the Maven integration, but it seems to impact the JDT UI so I put it here.

To reproduce in more detail:

1. Create a plugin project that uses some Eclipse component via the manifest, e.g. create a simple swt project from https://github.com/eclipse-platform/eclipse.platform.swt/blob/master/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet1.java
1. Run as java
1. Export as Runnable jar with copying required libraries in a subfolder (for visibility) -> the sub-folder contains the required libraries

Enabling maven
1. Repeat the first step above with a separate project, then add maven nature to the project (convert to maven project)
1. Run as java
1. Export as Runnable jar with copying required libraries in a subfolder (for visibility) -> the sub-folder is empty
1. Removing the maven nature and adjusting the run configuration to remove the CLASSPATH_PROVIDER and SOURCE_PATH_PROVIDER entries (not accessible through the UI) and repeating the export seems to fix the issue.

If needed I can provide a repo with all the projects, but it is fairly easy to reproduce as described.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/418/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/418,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WtSkh,eclipse.jdt.ui,1454713121,418,NA,philip-iii,590103,Philip Makedonski,,NA,2023-03-04T11:52:50Z,2023-03-04T11:52:50Z,"The issue is even more far reaching. Exporting products manually that have the maven nature enabled also lack all the built java classes due to this underlying issue.

Edit: Disregard this, it turned out to be a compliance level problem.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WtSkh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/418,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5XFQ2M,eclipse.jdt.ui,1460997516,418,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-03-08T22:52:58Z,2023-03-08T22:52:58Z,Hi @philip-iii please open the issue against M2E.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5XFQ2M/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/418,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5XZYiw,eclipse.jdt.ui,1466271920,418,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-03-13T14:41:50Z,2023-03-13T14:41:50Z,Closing this until diagnosis by M2E,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5XZYiw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/420,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/420,eclipse.jdt.ui,1570341224,420,Allow JUnitLauncher to launch all tests in a Package including subpackages,RoiSoleil,3462260,Hélios GILLES,helios.gilles@gmail.com,CLOSED,2023-02-03T19:32:53Z,2023-02-09T15:46:37Z,"Allow JUnitLauncher to launch all tests in a Package including subpackages.

At the moment, we can only run tests directly in the selected Package.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/420/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/421,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/421,eclipse.jdt.ui,1571229776,421,Everything is being highlighted,andreasdc,82218780,,,CLOSED,2023-02-05T04:27:47Z,2023-07-06T01:59:37Z,"Even when I drag the mouse on the double or something it's getting highlighted and big window shows, how to disable that?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/421/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/421,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5VwWGH,eclipse.jdt.ui,1438736775,421,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-02-21T16:06:58Z,2023-02-21T16:06:58Z,"Hello @andreasdc You are going to have provide details about how to reproduce your problem (i.e. what version of Eclipse were you using, on what system, a sample of code you were editing, what sequence of operations you were doing, what happened, and what you expected to happen) for anyone to work on this.  A picture would also help if you can provide one (before/after).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5VwWGH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/421,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WtQJh,eclipse.jdt.ui,1454703201,421,NA,andreasdc,82218780,,,NA,2023-03-04T11:11:50Z,2023-03-04T11:11:50Z,"Version: 2022-12 (4.26.0)
Build id: 20221201-1913

When for exameple I drag over the String class it shows me big window, maybe it shows too soon?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WtQJh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/421,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WzalC,eclipse.jdt.ui,1456318786,421,NA,JanecekPetr,1746404,Petr Janeček,,NA,2023-03-06T15:12:41Z,2023-03-06T15:12:41Z,"By ""big window"" do you mean the JavaDoc for the given class? That's most commonly a fairly small dialog (and goes away immediately if you move away), please show us a screenshot or provide more context on what's going on.

As a side-note, you can disable the dialogs on hover via Preferences -> Java -> Editor -> Hovers, or you can configure them to only appear when a specific modifier key is pressed.

Also on my machine (Mac) the hover delay is +/- 1 second which does not seem to be a bad value at all. Apparently there's no direct way to change the delay as it comes from the OS, but there are some blogposts with alternative approaches if you're on Windows: https://untamedmind.wordpress.com/2008/11/08/changing-the-mousehovertime-add-delay-on-the-tooltips-pop-up/, https://dandar3.blogspot.com/2008/09/tooltip-delay-in-windows.html. I have not tried either of those.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WzalC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/421,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WzbuQ,eclipse.jdt.ui,1456323472,421,NA,andreasdc,82218780,,,NA,2023-03-06T15:15:17Z,2023-03-06T15:15:17Z,"I want to change it for eclipse. For me window appears almost instantly, it wasn't like that before.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WzbuQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/421,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Wzcm7,eclipse.jdt.ui,1456327099,421,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-06T15:17:06Z,2023-03-06T15:17:06Z,"@andreasdc : please provide a screenshot, I have no idea what ""big window"" you are referring to. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Wzcm7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/421,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WzdQF,eclipse.jdt.ui,1456329733,421,NA,andreasdc,82218780,,,NA,2023-03-06T15:18:28Z,2023-03-06T15:18:28Z,"The one that is described above, this window doesn't appear on screenshots. Yellow window with javadocs.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WzdQF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/421,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WzjRB,eclipse.jdt.ui,1456354369,421,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-06T15:32:19Z,2023-03-06T15:32:19Z,"> The one that is described above

Sorry, I do not want description,  if you need help, **please** provide a **screenshot**.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WzjRB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/421,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Wzj_A,eclipse.jdt.ui,1456357312,421,NA,andreasdc,82218780,,,NA,2023-03-06T15:33:57Z,2023-03-06T15:33:57Z,"![image](https://user-images.githubusercontent.com/82218780/223156384-3dd2e407-9611-4220-a72a-a1c229823a89.png)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Wzj_A/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/421,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WzlaV,eclipse.jdt.ui,1456363157,421,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-06T15:37:30Z,2023-03-06T15:37:30Z,"This window is not ""big window"" by any means. Which display resolution do you have?
And as proposed above, you can disable this via Preferences -> Java -> Editor -> Hovers.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WzlaV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/421,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Wz5qv,eclipse.jdt.ui,1456446127,421,NA,andreasdc,82218780,,,NA,2023-03-06T16:23:15Z,2023-03-06T16:23:15Z,I don't want to disable that.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Wz5qv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/421,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Wz_j_,eclipse.jdt.ui,1456470271,421,NA,andreasdc,82218780,,,NA,2023-03-06T16:33:26Z,2023-03-06T16:33:26Z,It blocks typing and it is being diplayed wrongly for sure.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Wz_j_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/421,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5gulMV,eclipse.jdt.ui,1622823701,421,NA,andreasdc,82218780,,,NA,2023-07-06T01:59:36Z,2023-07-06T01:59:36Z,Is there a way to improve this?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5gulMV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/422,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/422,eclipse.jdt.ui,1571229829,422,Wrong libraries,andreasdc,82218780,,,OPEN,2023-02-05T04:28:07Z,2023-03-06T21:56:08Z,"Libraries open from referenced libraries after f3, not from projects.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/422/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/422,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5VwW1k,eclipse.jdt.ui,1438739812,422,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-02-21T16:08:47Z,2023-02-21T16:08:47Z,"Please provide more details.  What you were doing, which version of Eclipse, what happened, and what you expected to happen.  If you have a code sample, that would help immeasurably.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5VwW1k/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/422,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5W2QDa,eclipse.jdt.ui,1457062106,422,NA,JanecekPetr,1746404,Petr Janeček,,NA,2023-03-06T21:56:08Z,2023-03-06T21:56:08Z,I think this was more or less solved in https://github.com/eclipse-platform/.github/issues/101?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5W2QDa/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/423,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/423,eclipse.jdt.ui,1572234021,423,QuickFixTest1d8.testRemoveRedundantNonNull fails since I20230202-1800,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2023-02-06T09:38:45Z,2023-02-07T07:36:49Z,"QuickFixTest1d8.testRemoveRedundantNonNull fails since I20230202-1800.
```
Wrong number of problems, is: 2, expected: 1 Pb(922) The nullness annotation is redundant with a default that applies to this location[91 ,105] Pb(922) The nullness annotation is redundant with a default that applies to this location[91 ,105]

java.lang.AssertionError: Wrong number of problems, is: 2, expected: 1
Pb(922) The nullness annotation is redundant with a default that applies to this location[91 ,105]
Pb(922) The nullness annotation is redundant with a default that applies to this location[91 ,105]

at org.junit.Assert.fail(Assert.java:89)
at org.eclipse.jdt.ui.tests.quickfix.QuickFixTest.assertNumberOfProblems(QuickFixTest.java:254)
at org.eclipse.jdt.ui.tests.quickfix.QuickFixTest.collectCorrections(QuickFixTest.java:229)
at org.eclipse.jdt.ui.tests.quickfix.QuickFixTest.collectCorrections(QuickFixTest.java:224)
at org.eclipse.jdt.ui.tests.quickfix.QuickFixTest1d8.testRemoveRedundantNonNull(QuickFixTest1d8.java:1743)
```

Regression from https://github.com/eclipse-jdt/eclipse.jdt.core/pull/683","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/423/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/423,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5UkawQ,eclipse.jdt.ui,1418832912,423,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-02-06T10:12:57Z,2023-02-06T10:12:57Z,"@stephan-herrmann : could you please check if the original change  https://github.com/eclipse-jdt/eclipse.jdt.core/pull/683 produces expected results?

In debugger I see that the test fails because **two identical** compiler problems are reported now for the code below (which is tested in `QuickFixTest1d8.testRemoveRedundantNonNull`)

```
package test;
import org.eclipse.jdt.annotation.*;
@NonNullByDefault public class E {
  @NonNull Object f=new Object();
}
```

![image](https://user-images.githubusercontent.com/964108/216944571-5fcad3fb-a24f-4c97-aaf1-4e2b82fe33d9.png)

I can quickly fix the test (just adopt the assertion), but I assume it is not expected that compiler generates two identical problems for same line of code.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5UkawQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/423,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5UkmeA,eclipse.jdt.ui,1418880896,423,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-02-06T10:49:14Z,2023-02-06T10:49:14Z,"@stephan-herrmann : I've pushed https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/425 in case it would take longer to fix JDT core problem, so that JDT UI builds can succeed in Jenkins (right now they all fail due the broken test).

Just give a hint if that should be merged or not, I will wait with merging for now, especially ECA doesn't work anymore today: https://gitlab.eclipse.org/eclipsefdn/helpdesk/-/issues/2635","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5UkmeA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/423,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5UlBkg,eclipse.jdt.ui,1418991904,423,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2023-02-06T12:18:10Z,2023-02-06T12:18:10Z,"Thanks for the heads-up. Of course no warning should be reported twice.

I'll look into it later today. If you need to fix JDT/UI right now, feel free to merge #425 - I'd revert that when the issue in JDT/Core is fixed.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5UlBkg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/423,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5UlEdO,eclipse.jdt.ui,1419003726,423,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-02-06T12:27:40Z,2023-02-06T12:27:40Z,"@stephan-herrmann : I will wait, no one can merge anyway now. 
In best case you will have a fix in near future and we can close #425 without merging.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5UlEdO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/423,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5UorZG,eclipse.jdt.ui,1419949638,423,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2023-02-06T23:40:21Z,2023-02-06T23:40:21Z,"@iloveeclipse if you see  eclipse-jdt/eclipse.jdt.core#707 succeed, before I get online again, feel free to merge it (although it stirred up some more dust, which I'll clean up later).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5UorZG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/423,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5UqFhu,eclipse.jdt.ui,1420318830,423,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-02-07T07:36:27Z,2023-02-07T07:36:27Z,Thanks @stephan-herrmann !,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5UqFhu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/426,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/426,eclipse.jdt.ui,1573701842,426,[20] Allow JDT to target Java 20 in compiler preferences,noopur2507,8749449,Noopur Gupta,,CLOSED,2023-02-07T05:14:54Z,2023-03-11T10:29:30Z,"Add ""20 (BETA)"" on the Compiler preferences page and show the corresponding disclaimer when it is selected.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/426/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/426,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5W3_vH,eclipse.jdt.ui,1457519559,426,NA,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,NA,2023-03-07T04:41:21Z,2023-03-07T04:41:21Z,"It will be good to have this in Y build. As of now, we are unable to use the Java 20 compliance on the UI.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5W3_vH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/426,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5XT1NP,eclipse.jdt.ui,1464816463,426,NA,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,NA,2023-03-11T03:55:10Z,2023-03-11T03:55:10Z,"@noopur2507 I still don't see the ""20"" from the list of compliance level drop down. When I create a new project, I do see 20 being set in the .pref file. I also see the ""Enable Preview.. for Java 20"" on that page. But none of the drop downs have the 20.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5XT1NP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/426,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5XUE5M,eclipse.jdt.ui,1464880716,426,NA,noopur2507,8749449,Noopur Gupta,,NA,2023-03-11T10:29:30Z,2023-03-11T10:29:30Z,This change is still not picked up by the Y build. Let's discuss further on the Y build creation issue.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5XUE5M/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/430,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/430,eclipse.jdt.ui,1575970228,430,Moving a package shows many JRT as possible target,jukzi,51790620,Jörg Kubitz,,CLOSED,2023-02-08T11:43:48Z,2023-02-13T07:29:04Z,"Aelect a package and use File/Move opens a dialog wher jrt-fs.jar is displayed over and over:
![image](https://user-images.githubusercontent.com/51790620/217520048-ca778c60-6bb5-4882-aa2e-849c2f7acfb8.png)

* same .jar is shown many many times
* a .jar can not be a target of a move anyway

hard to find actual possible targets.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/430/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/430,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5VFX2v,eclipse.jdt.ui,1427471791,430,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-02-13T07:29:04Z,2023-02-13T07:29:04Z,thanks @jjohnstn ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5VFX2v/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/432,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/432,eclipse.jdt.ui,1579988621,432,"Improve the Safety of ""Extract Local Variable"" refactorings by identifying statements that may change the value of the extracted expressions",chixiaye,54989108,XIAYE CHI,,CLOSED,2023-02-10T16:22:31Z,2023-04-11T18:39:10Z,"
## Description
""Extract Local Variable"" refactoring in Eclipse provides an option to replace all occurrences of the selected expression with references to the newly extracted local variable. However, it may result in semantic errors when the selected expression (to be extracted as a variable) depends on variables that could be changed by statements between the initialization of the variable and the accesses (references) to the variables.

We take the following sample code to illustrate the bug:  
```java
1   /* CS1: Original Code Snippet */
2   String[] Lines;
3   int i;
4   private void inc() {
5   	i++;
6   }
7   ...
8   log.warn(Lines[i]);
9   ...
10  log.warn(Lines[i]);
11  ...
12  inc();
13  ...
14  log.warn(Lines[i]);
``` 

If we select expression `Lines[i]` (line `10` in `CS1`), conduct refactoring ""extract local variable"", and name the new variable as `x` (enabling ""replace all occurrences""), we will get the following code snippet:
```java
1   /* CS2: Code Snippet after incorrect refactoring */
2   String[] Lines;
3   int i;
4   private void inc() {
5   	i++;
6   }
7   ...
8   String x= Lines[i];
9   log.warn(x);
10  ...
11  log.warn(x);
12  ...
13  inc();
14  ...
15  log.warn(x);
```  

The refactoring is incorrect because the original values of `Lines[i]` at Line 8 and Line 10 in `CS1` are different from `Lines[i]` at Line 14. Consequently, replacing `Lines[i]` at Line 15 in `CS2` with `x` is incorrect. 

## Solution
The solution is composed of two parts. The first part is to calculate the path between the initialization of generated variable and the to-be-inserted references to the variable. The second part is the validation of the changed value.

To calculate the path, we parse the current BodyDeclaration as an AST, and do a root-first traversal between expressions that are to be verified. We will record these visited nodes without duplication. Notably, we take the method call (but exclude the following method calls) and its implementation into consideration. Besides, control statements (loop-statement, condition-statement, etc.) are also considered for accuracy. However, some dead code and complex control statements(break, continue, goto, etc.) are not considered due to potentially large cost.

To validate of changed value, we will traverse all nodes of the path we have gotten to make sure neither of them do update the variables that the selected expression depends on. It should be pointed out that we currently only consider source code, and subsequent commits will provide support for Java Class Library.

In the end, our desired refactoring result is as follows:
```java
1   /* CS3: Code Snippet after correct refactoring */
2   String[] Lines;
3   int i;
4   private void inc() {
5   	i++;
6   }
7   ...
8   String x= Lines[i];
9   log.warn(x);
10  ...
11  log.warn(x);
12  ...
13  inc();
14  ...
15  log.warn(Lines[i]);
```  

**The above is our proposed solution, if you have any comments or suggestions, please let us know.**","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/432/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/432,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5VQ3Ob,eclipse.jdt.ui,1430483867,432,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-02-14T22:39:46Z,2023-02-14T22:39:46Z,"Seems reasonable.  You could simplify the cases where you are protecting a local public/protected field and assume a public/protected method call could be overridden in which case, you assume the method call is dangerous (as opposed to spending time analyzing the method and subsequent method calls).  In your example, if i was declared public and inc() was declared public you would stop reusing x at that point.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5VQ3Ob/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/432,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WSs47,eclipse.jdt.ui,1447743035,432,NA,liuhuigmail,10864327,HUI LIU,liuhui08@bit.edu.cn,NA,2023-02-28T08:07:32Z,2023-02-28T08:07:32Z,"@jjohnstn  please kindly review the submitted pull request at https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/439
Thanks.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WSs47/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/432,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Wc2pC,eclipse.jdt.ui,1450404418,432,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-03-01T16:05:18Z,2023-03-01T16:05:18Z,@liuhuigmail Will do today.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Wc2pC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/432,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Zo6nc,eclipse.jdt.ui,1503898076,432,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-04-11T18:39:09Z,2023-04-11T18:39:09Z,Closing as done with #439,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Zo6nc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1113,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1113,eclipse.jdt.ui,2091890985,1113,Sort Members doesn't sort methods of record classes,rfcom,7666884,,,OPEN,2023-02-13T17:25:40Z,2024-01-20T04:47:03Z,"Create a record class for e.g. like this:
```
public record MyRecord() {
 public void methodB() {
 }
 public void methodA() {
 }
 public void methodC() {
 }
}
```
Then select `Source` > `Sort Members...` > `Sort all members` > `OK`  in the menu.

Result:

Nothing happens. The Methods are not sorted as configured in the ""Member Sort Order"" preference page.


Expected result:

Methods are sorted as configured in the ""Member Sort Order"" preference page.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1113/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1113,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xWlss,eclipse.jdt.ui,1901746988,1113,NA,mpalat,4507939,Manoj  N Palat,manoj.palat@in.ibm.com,NA,2023-04-07T05:14:33Z,2023-04-07T05:14:33Z,"@noopur2507 @jjohnstn - By first glance, this looks like a jdt.ui issue. Could you please check? TIA","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xWlss/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/433,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/433,eclipse.jdt.ui,1584965488,433,Create method does not offer drop down for method modifiers,ctgnz,18014456,Colin Sharples,,OPEN,2023-02-14T23:12:48Z,2023-02-15T22:24:50Z,"Eclipse version: 2022-12 (4.26.0)

The create method quick fix no longer offers a dropdown list of modifiers for the extracted method, so you have to type the full modifier (public/protected/private) instead of picking from a list.

Steps to reproduce:

1. Open a java file
2. Add code to call a method that does not yet exist
3. Select quick fix to create new method (ctrl+1)
4. Press tab to move to the method modifier

Expected: available modifiers are presented as a drop-down list

Actual: no modifiers are presented, so the modifier must be typed out in full

This is a regression from previously working and useful behaviour.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/433/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/433,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5VXMRo,eclipse.jdt.ui,1432142952,433,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-02-15T22:24:50Z,2023-02-15T22:24:50Z,Hello @ctgnz.  What version of Eclipse do you see this a regression from?  I tried Eclipse 2021-12 (4.22) and 2020-06 (4.16) which is over two years old and it does not offer the feature you specify.  The quick fix creates a private method and you can double-click on the modifier and type in the new one.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5VXMRo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/434,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/434,eclipse.jdt.ui,1590085727,434,No import suggestions at allocation expressions,andreasdc,82218780,,,CLOSED,2023-02-17T23:41:58Z,2023-08-03T01:56:40Z,"Type
Map<String, List<Object>> map = Maps.newConcurrentMap();

You can't import any of these classes.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/434/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/434,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WqeX9,eclipse.jdt.ui,1453975037,434,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-03-03T18:59:31Z,2023-03-03T18:59:31Z,"Hello @andreasdc.  I tried your example with 4.27 pre-release and it works fine except that I don't have Google Guava Maps in my classpath so doing CTRL+Shift+O adds imports for Map and List, but not Maps.  It flags List for not having a type parameter.

What version of Eclipse are you using?  By any chance do you have a Preferences->Type Filter that is getting in the way?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WqeX9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/434,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WrBmx,eclipse.jdt.ui,1454119345,434,NA,andreasdc,82218780,,,NA,2023-03-03T20:57:01Z,2023-03-03T20:57:01Z,"Version: 2022-12 (4.26.0)
Build id: 20221201-1913
I don't use CTRL+Shift+O, I click on non imported class.
![image](https://user-images.githubusercontent.com/82218780/222827866-885e5f9d-9c6f-41ac-b7e9-f08ca9db7a95.png)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WrBmx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/434,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WzkD_,eclipse.jdt.ui,1456357631,434,NA,JanecekPetr,1746404,Petr Janeček,,NA,2023-03-06T15:34:08Z,2023-03-06T15:34:08Z,"Hello!
This is still very unclear. There are literally millions of developers using Eclipse for Java development daily, so do not worry, it's (mostly) not broken :).

Clicking on an unimported class indeed does not import it. If you _hover_ over the class, you will get a popup with options to import the relevant classes. You can also invoke the Quick Fix action on the class (Ctrl+1 by default) or even do a Content Assist (Ctrl+Space by default) or invoke Optimize Imports (Ctrl+Shift+O, but it can also be set up to run automatically after a file save via Save Actions).

If this still does not work for you, please show us your project, something is misconfigured somewhere.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WzkD_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/434,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WzlH0,eclipse.jdt.ui,1456361972,434,NA,andreasdc,82218780,,,NA,2023-03-06T15:36:49Z,2023-03-06T15:36:49Z,"Try doing `private Map<String, List> map = Maps.newConcurrentMap();`","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WzlH0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/434,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5W0EuN,eclipse.jdt.ui,1456491405,434,NA,JanecekPetr,1746404,Petr Janeček,,NA,2023-03-06T16:42:25Z,2023-03-06T16:42:25Z,"> Try doing `private Map<String, List> map = Maps.newConcurrentMap();`

I have, of course. In a proper Java project with Guava on the classpath, it immediately imports the correct classes for me when doing any of the above mentioned actions. When I had two different `Maps` classes on the classpath, Organize imports only imported `Map` for me and I had to invoke a Quick Fix (or hover over) the `Maps` class.

In short, it works as it should. If it does not work for you, please show us your project, or send us a whole example project showcasing the problem, something is wrongly configured. Can you run a simple Hello world from your project to make sure it builds?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5W0EuN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/434,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5W0GJr,eclipse.jdt.ui,1456497259,434,NA,andreasdc,82218780,,,NA,2023-03-06T16:46:08Z,2023-03-06T16:46:08Z,"It works weird, when I posted the issue it wasn't working, when I posted the comment it wasn't working, right now it's working. I will try with these shortcuts too.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5W0GJr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/434,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZAwza,eclipse.jdt.ui,1493372122,434,NA,andreasdc,82218780,,,NA,2023-04-02T15:26:57Z,2023-04-02T15:26:57Z,Still not fixed.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZAwza/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/434,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZGmRr,eclipse.jdt.ui,1494901867,434,NA,JanecekPetr,1746404,Petr Janeček,,NA,2023-04-03T19:59:57Z,2023-04-03T19:59:57Z,"> Still not fixed.

Hello! I'm not an eclipse engineer, I'm a random lurker.
That said, as a fellow engineer you should appreciate that it's hard to fix a problem without proper diagnosis. If this were a widespread problem, many other people would be reporting this as well. They don't, so this is somehow isolated to your environment. Let's find out what stands out!

What version of eclipse are you using? Have you tried updating to 2023-03 which came out in the meantime? Is there anything notable about your setup, like some plugins, your OS, anything else?

What exactly are you trying and what is happening instead? Do you see anything in the Error log view after the import action fails (Window > Show view > Other, then General > Error Log)? Last time you we saying you're clicking on the classes you're trying to import, and I tried to explain that's not how to import classes which is why I'm asking for the exact sequence of actions.

Help us reproduce this please.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZGmRr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/434,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZGpcf,eclipse.jdt.ui,1494914847,434,NA,andreasdc,82218780,,,NA,2023-04-03T20:09:24Z,2023-04-03T20:09:24Z,"> Try doing `private Map<String, List> map = Maps.newConcurrentMap();`

This. For example you have new HashMap and you want to change non imported maps to this, it will show that you dont have it referenced libraries, you will need to put the maps inside a method for example.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZGpcf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/434,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZGtBJ,eclipse.jdt.ui,1494929481,434,NA,trancexpress,24752155,Simeon Andreev,,NA,2023-04-03T20:21:42Z,2023-04-03T20:21:42Z,"> > Try doing `private Map<String, List> map = Maps.newConcurrentMap();`
> 
> This. For example you have new HashMap and you want to change non imported maps to this, it will show that you dont have it referenced libraries, you will need to put the maps inside a method for example.

You'll need to provide more steps, maybe a screen recording will help understand what your problem is.

E.g. this works as expected from my POV, so provide a video showcasing that it doesn't:

https://user-images.githubusercontent.com/24752155/229618096-938f2581-5b6e-4ddc-b8cf-2fc156d9af7d.mp4","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZGtBJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/434,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZG6fK,eclipse.jdt.ui,1494984650,434,NA,andreasdc,82218780,,,NA,2023-04-03T21:10:57Z,2023-04-03T21:10:57Z,Have imported Map and List then try to change maps like I described above.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZG6fK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/434,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZG8bf,eclipse.jdt.ui,1494992607,434,NA,trancexpress,24752155,Simeon Andreev,,NA,2023-04-03T21:17:17Z,2023-04-03T21:17:17Z,"OK, I see what you mean:

```
import java.util.List;
import java.util.Map;

public class Snippet {
	private Map<String, List> map = new HashMap<>();

	private void m(HashMap<String, List> t) {
		Map<String, List> map = new HashMap<>();
	}
}
```

https://user-images.githubusercontent.com/24752155/229629523-be5d6d74-6113-4049-8010-1182e53cbf03.mp4

Works with:
```
Eclipse SDK
Version: 2023-03 (4.27)
Build id: I20230207-1800
```

Doesn't work with:
```
Eclipse SDK
Version: 2023-03 (4.27)
Build id: I20230211-0330
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZG8bf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/434,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZG8p2,eclipse.jdt.ui,1494993526,434,NA,andreasdc,82218780,,,NA,2023-04-03T21:18:04Z,2023-04-03T21:18:04Z,"Yes, I think that's it. :)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZG8p2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/434,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZJFn6,eclipse.jdt.ui,1495554554,434,NA,trancexpress,24752155,Simeon Andreev,,NA,2023-04-04T08:23:42Z,2023-04-04T08:23:42Z,"First commit I see this with is: 546a6978432fa5f2b01083919364848dd89805dc

@jjohnstn can you take a look here?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZJFn6/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/434,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZMZvR,eclipse.jdt.ui,1496423377,434,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-04-04T18:33:43Z,2023-04-04T18:33:43Z,"Yes, I see the problem.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZMZvR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/434,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZOQXz,eclipse.jdt.ui,1496909299,434,NA,trancexpress,24752155,Simeon Andreev,,NA,2023-04-05T04:42:32Z,2023-04-05T04:42:32Z,Thanks @jjohnstn !,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZOQXz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/434,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5aOwAy,eclipse.jdt.ui,1513816114,434,NA,andreasdc,82218780,,,NA,2023-04-18T21:29:18Z,2023-04-18T21:29:18Z,"It is not fixed in the latest version that I have, is it not released yet?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5aOwAy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/434,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5aO1WO,eclipse.jdt.ui,1513837966,434,NA,JanecekPetr,1746404,Petr Janeček,,NA,2023-04-18T21:55:28Z,2023-04-18T21:55:28Z,"> is it not released yet

Indeed. You can see the Milestone marked as 4.28 M1 which means this targets 4.28, that's another name for the 2023-06 release (see https://www.eclipse.org/eclipse/news/4.28/). If you want, you can download the early milestone release, https://download.eclipse.org/eclipse/downloads/, but obviously beware, this is in development and there could be dragons.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5aO1WO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/434,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5aO_YG,eclipse.jdt.ui,1513879046,434,NA,andreasdc,82218780,,,NA,2023-04-18T22:47:33Z,2023-04-18T22:47:33Z,How long until the release?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5aO_YG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/434,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5aU30H,eclipse.jdt.ui,1515420935,434,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-04-19T21:40:15Z,2023-04-19T21:40:15Z,"The full 4.28 release won't be until June 14.  You can either install a new 4.28 M1 EPP package or SDK that matches what you are currently using to try it out without affecting your current set-up or else you can update your current Eclipse.  To get a new 4.28 M1 Eclipse package you can go to:

https://www.eclipse.org/downloads/packages/release/2023-06/m1

A 4.28 Eclipse SDK can be downloaded from:

https://download.eclipse.org/eclipse/downloads/drops4/S-4.28M1-202304051800/

If you want to update your current Eclipse to 4.28 M1, you can specify the repo at:

https://download.eclipse.org/eclipse/updates/4.28-I-builds/I20230405-1800/

and do an update.

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5aU30H/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/434,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5abbwM,eclipse.jdt.ui,1517141004,434,NA,andreasdc,82218780,,,NA,2023-04-21T01:45:58Z,2023-04-21T01:45:58Z,"I have the no remedy error when checking updates, I added the repository.
The version still shows Version: 2023-03 (4.27.0)
I did the update and now I can't do anything in Eclipse:
An internal error occurred during: ""Requesting Java AST from selection"".
'boolean com.ibm.icu.text.UTF16.isSurrogate(char)'
`!ENTRY org.eclipse.ui.workbench 4 2 2023-04-21 03:46:02.623
!MESSAGE Problems occurred when invoking code from plug-in: ""org.eclipse.ui.workbench"".
!STACK 0
java.lang.NoSuchMethodError: 'boolean com.ibm.icu.text.UTF16.isSurrogate(char)'
	at org.eclipse.jdt.internal.ui.text.JavaWordFinder.findWord(JavaWordFinder.java:39)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.updateOccurrenceAnnotations(JavaEditor.java:3300)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor$ActivationListener.windowActivated(JavaEditor.java:1216)
	at org.eclipse.ui.internal.Workbench$8.run(Workbench.java:1004)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.Workbench.fireWindowActivated(Workbench.java:1001)
	at org.eclipse.ui.internal.WorkbenchWindow$6.shellActivated(WorkbenchWindow.java:2460)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:92)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4256)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Decorations.WM_ACTIVATE(Decorations.java:1519)
	at org.eclipse.swt.widgets.Shell.WM_ACTIVATE(Shell.java:2312)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4740)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1478)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2284)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5022)
	at org.eclipse.swt.internal.win32.OS.DestroyWindow(Native Method)
	at org.eclipse.swt.widgets.Control.destroyWidget(Control.java:780)
	at org.eclipse.swt.widgets.Shell.destroyWidget(Shell.java:732)
	at org.eclipse.swt.widgets.Widget.release(Widget.java:831)
	at org.eclipse.swt.widgets.Widget.dispose(Widget.java:428)
	at org.eclipse.swt.widgets.Decorations.dispose(Decorations.java:392)
	at org.eclipse.jface.window.Window.close(Window.java:335)
	at org.eclipse.jface.dialogs.Dialog.close(Dialog.java:988)
	at org.eclipse.ui.internal.statushandlers.InternalDialog.close(InternalDialog.java:651)
	at org.eclipse.jface.dialogs.Dialog.okPressed(Dialog.java:948)
	at org.eclipse.jface.dialogs.Dialog.buttonPressed(Dialog.java:468)
	at org.eclipse.ui.internal.statushandlers.InternalDialog.buttonPressed(InternalDialog.java:185)
	at org.eclipse.jface.dialogs.Dialog.lambda$0(Dialog.java:619)
	at org.eclipse.swt.events.SelectionListener$1.widgetSelected(SelectionListener.java:84)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4256)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4054)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3642)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)`","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5abbwM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/434,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ablFC,eclipse.jdt.ui,1517179202,434,NA,andreasdc,82218780,,,NA,2023-04-21T02:42:01Z,2023-04-21T02:42:01Z,"Also
`Cannot complete the install because of a conflicting dependency.
  Software being installed: Eclipse Platform 4.28.0.v20230405-1811 (org.eclipse.platform.feature.group 4.28.0.v20230405-1811)
  Software currently installed: Eclipse IDE for Java Developers 4.27.0.20230309-1200 (epp.package.java 4.27.0.20230309-1200)
  Only one of the following can be installed at once: 
    Compare Support for Word 1.2.100.v20180515-0858 (org.eclipse.compare.win32 1.2.100.v20180515-0858)
    Compare Support for Word 1.3.0.v20230317-0901 (org.eclipse.compare.win32 1.3.0.v20230317-0901)
    Compare Support for Word 1.0.200.v20130514-1224 (org.eclipse.compare.win32 1.0.200.v20130514-1224)
    Compare Support for Word 1.2.900.v20220812-1406 (org.eclipse.compare.win32 1.2.900.v20220812-1406)
    Compare Support for Word 1.2.800.v20200127-1343 (org.eclipse.compare.win32 1.2.800.v20200127-1343)
  Cannot satisfy dependency:
    From: Eclipse IDE for Java Developers 4.27.0.20230309-1200 (epp.package.java 4.27.0.20230309-1200)
    To: org.eclipse.equinox.p2.iu; org.eclipse.platform.feature.group [4.27.0.v20230302-0300,4.27.0.v20230302-0300]
  Cannot satisfy dependency:
    From: Eclipse Platform 4.27.0.v20230302-0300 (org.eclipse.platform.feature.group 4.27.0.v20230302-0300)
    To: org.eclipse.equinox.p2.iu; org.eclipse.compare.win32 [1.2.900.v20220812-1406,1.2.900.v20220812-1406]
  Cannot satisfy dependency:
    From: Eclipse Platform 4.28.0.v20230405-1811 (org.eclipse.platform.feature.group 4.28.0.v20230405-1811)
    To: org.eclipse.equinox.p2.iu; org.eclipse.compare.win32 [1.3.0.v20230317-0901,1.3.0.v20230317-0901]`","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ablFC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/434,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5abqMi,eclipse.jdt.ui,1517200162,434,NA,andreasdc,82218780,,,NA,2023-04-21T03:16:12Z,2023-04-21T03:16:12Z,"Also after adding the rep
![image](https://user-images.githubusercontent.com/82218780/233532186-6c69b863-746b-454b-83ad-1187685d1107.png)
`Your original request has been modified.
  ""Eclipse e4 Progress View"" is already installed, so an update will be performed instead.
  ""Eclipse SDK Tests"" is already installed, so an update will be performed instead.
Cannot complete the install because of a conflicting dependency.
  Software being installed: Eclipse e4 Progress View 0.4.0.v20230317-0802 (org.eclipse.e4.ui.progress 0.4.0.v20230317-0802)
  Software currently installed: Eclipse RCP 4.27.0.v20230302-0300 (org.eclipse.rcp.feature.group 4.27.0.v20230302-0300)
  Only one of the following can be installed at once: 
    Eclipse e4 Progress View 0.3.100.v20210110-1959 (org.eclipse.e4.ui.progress 0.3.100.v20210110-1959)
    Eclipse e4 Progress View 0.3.700.v20230214-1401 (org.eclipse.e4.ui.progress 0.3.700.v20230214-1401)
    Eclipse e4 Progress View 0.4.0.v20230317-0802 (org.eclipse.e4.ui.progress 0.4.0.v20230317-0802)
    Eclipse e4 Progress View 0.3.500.v20220717-1456 (org.eclipse.e4.ui.progress 0.3.500.v20220717-1456)
    Eclipse e4 Progress View 0.3.600.v20221024-2137 (org.eclipse.e4.ui.progress 0.3.600.v20221024-2137)
    Eclipse e4 Progress View 0.3.200.v20220221-0437 (org.eclipse.e4.ui.progress 0.3.200.v20220221-0437)
    Eclipse e4 Progress View 0.3.400.v20220502-1259 (org.eclipse.e4.ui.progress 0.3.400.v20220502-1259)
  Cannot satisfy dependency:
    From: Eclipse 4 Rich Client Platform 4.27.0.v20230220-1431 (org.eclipse.e4.rcp.feature.group 4.27.0.v20230220-1431)
    To: org.eclipse.equinox.p2.iu; org.eclipse.e4.ui.progress [0.3.700.v20230214-1401,0.3.700.v20230214-1401]
  Cannot satisfy dependency:
    From: Eclipse RCP 4.27.0.v20230302-0300 (org.eclipse.rcp.feature.group 4.27.0.v20230302-0300)
    To: org.eclipse.equinox.p2.iu; org.eclipse.e4.rcp.feature.group [4.27.0.v20230220-1431,4.27.0.v20230220-1431]`","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5abqMi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/434,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5afD-i,eclipse.jdt.ui,1518092194,434,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-04-21T16:48:56Z,2023-04-21T16:48:56Z,Something that you have installed in your Eclipse set-up still requires an older version of icu4j as the method in question was removed in newer versions.  I did see an old StackOverFlow issue that reported an error with that icu4j method and suggested working around it by disabling Mark Occurrences: https://stackoverflow.com/questions/74780857/boolean-com-ibm-icu-text-utf16-issurrogatechar  Not sure if that would help you.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5afD-i/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/434,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5jIjPo,eclipse.jdt.ui,1663185896,434,NA,andreasdc,82218780,,,NA,2023-08-03T01:56:40Z,2023-08-03T01:56:40Z,Still active.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5jIjPo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/436,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/436,eclipse.jdt.ui,1599579522,436,"Problems encountered during text search. An internal error occurred during: ""File Search Worker"". java.lang.ClassCastException",andreasdc,82218780,,,OPEN,2023-02-25T06:29:52Z,2023-04-14T21:34:36Z,"Problems encountered during text search.
An internal error occurred during: ""File Search Worker"".
java.lang.ClassCastException

More things break just like that, I think it's time to move to another IDE after all these years 👍 ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/436/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/436,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WISjc,eclipse.jdt.ui,1445013724,436,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-02-25T06:51:09Z,2023-02-25T06:51:09Z,Can you please attach full error log? Which Eclipse version? ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WISjc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/436,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WISni,eclipse.jdt.ui,1445013986,436,NA,andreasdc,82218780,,,NA,2023-02-25T06:52:37Z,2023-02-25T06:52:37Z,"This is the full error, latest eclipse Version: 2022-12 (4.26.0)
Build id: 20221201-1913","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WISni/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/436,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WIS3H,eclipse.jdt.ui,1445014983,436,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-02-25T06:57:57Z,2023-02-25T06:57:57Z,Full error log contains stack traces and is located under <workspace>/.metadata/.log,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WIS3H/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/436,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WITLZ,eclipse.jdt.ui,1445016281,436,NA,andreasdc,82218780,,,NA,2023-02-25T07:04:35Z,2023-02-25T07:04:35Z,"!ENTRY org.eclipse.core.jobs 4 0 2023-02-25 01:01:28.244
!MESSAGE Text Search
!SUBENTRY 1 org.eclipse.core.jobs 4 2 2023-02-25 01:01:28.244
!MESSAGE An internal error occurred during: ""File Search Worker"".
!STACK 0
java.lang.ClassCastException: class java.io.IOException cannot be cast to class java.lang.RuntimeException (java.io.IOException and java.lang.RuntimeException are in module java.base of loader 'bootstrap')
	at org.eclipse.search.internal.core.text.TextSearchVisitor$TextSearchJob.processFile(TextSearchVisitor.java:226)
	at org.eclipse.search.internal.core.text.TextSearchVisitor$TextSearchJob.run(TextSearchVisitor.java:185)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WITLZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/436,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Z9h8n,eclipse.jdt.ui,1509302055,436,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-04-14T21:34:35Z,2023-04-14T21:34:35Z,"@andreasdc Now that the ClassCastException issue is fixed (latest I-builds or 4.28 M1), could you please try and reproduce the original problem so as to generate trace without internal error?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Z9h8n/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/437,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/437,eclipse.jdt.ui,1599846276,437,Limited syntax coloring in JavaSourceHover,RedeemerSK,36334098,Jozef Tomek,,CLOSED,2023-02-25T21:22:30Z,2023-09-25T20:33:52Z,"Java Source hover has only limited syntax coloring from only basic java source content parsing.
Advanced semantic coloring is not applied.

Example:
![image](https://user-images.githubusercontent.com/36334098/221380002-aa660cc1-80d4-4385-8061-c2ec5df44c3b.png)

Expected:
Java source in hover viewer should be colored the same way as if it was opened in source code editor.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/437/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/437,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WJFp3,eclipse.jdt.ui,1445223031,437,NA,RedeemerSK,36334098,Jozef Tomek,,NA,2023-02-25T23:01:18Z,2023-02-25T23:01:18Z,"I would like to contribute a change of `org.eclipse.jdt.ui` module that fixes this issue, see https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/438

After fix:
![image](https://user-images.githubusercontent.com/36334098/221382055-b4b3073a-d2a8-4167-98a8-dc39a72b6847.png)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WJFp3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/437,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WJF6H,eclipse.jdt.ui,1445224071,437,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-02-25T23:07:20Z,2023-02-25T23:07:20Z,"Looks nice, but why do we need a preference at all? Is the new presentation too slow or what's the point **not** to use it?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WJF6H/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/437,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WJGyw,eclipse.jdt.ui,1445227696,437,NA,RedeemerSK,36334098,Jozef Tomek,,NA,2023-02-25T23:37:24Z,2023-02-25T23:37:24Z,"> Looks nice, but why do we need a preference at all? Is the new presentation too slow or what's the point not to use it?

I don't find it slower to the point where it may disturb the user. But hovering over elements origins of which are and not the same as that of active editor (not the ""fast"" AST path, more info in linked PR's comments) and are also large sometimes adds some short slightly noticeable delay.

I was not sure what's the process of introducing UI change like this plus as a 1st time contributor, I thought I rather prepare it with the preference to allow going back to original way.
Removing it, if that's preferred, is very simple.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WJGyw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/440,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/440,eclipse.jdt.ui,1600489846,440,Opening sources create huge trees of files,andreasdc,82218780,,,OPEN,2023-02-27T05:12:57Z,2023-05-25T17:41:53Z,"When you try to get the source of the file, it opens the file from the referenced libraries, creating huge trees of packages and classes, instead of just redirecting you to the file from the workspace project.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/440/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/440,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Wzc7d,eclipse.jdt.ui,1456328413,440,NA,JanecekPetr,1746404,Petr Janeček,,NA,2023-03-06T15:17:45Z,2023-03-06T15:17:45Z,"This depends on where the file is really coming from. If your project depends on a particular version of the library (e.g. 1.0.0) instead of the project itself (which is now 1.0.1-SNAPSHOT), it will depend on the JAR (1.0.0) and not the ""live"" version because the code could be different.

Therefore, this depends on the setup of the project and has a good rationale. Please provide an example project to showcase when this behaves unexpectedly. If your project depends on the project in your workspace, then for me JDT goes to the correct file in the workspace.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Wzc7d/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/440,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dB-nX,eclipse.jdt.ui,1560799703,440,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-05-24T09:47:34Z,2023-05-24T09:47:34Z,cannot reproduce any unwanted behavior. provide screenshot please,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dB-nX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/440,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dLbpD,eclipse.jdt.ui,1563277891,440,NA,andreasdc,82218780,,,NA,2023-05-25T17:41:53Z,2023-05-25T17:41:53Z,"> cannot reproduce any unwanted behavior. provide screenshot please

If I remember correctly this was the cause
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/82218780/4fd35108-3281-4caa-9f16-0d6d8a5e70db)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dLbpD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/442,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/442,eclipse.jdt.ui,1600641033,442,[20] Run Gerrit builds for JDT UI BETA_JAVA20 branch with latest Y-build,noopur2507,8749449,Noopur Gupta,,CLOSED,2023-02-27T07:33:46Z,2023-03-08T12:44:52Z,Run Gerrit builds for JDT UI BETA_JAVA20 branch with latest Y-build.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/442/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/445,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/445,eclipse.jdt.ui,1603516023,445,Typing text will remove next variable,andreasdc,82218780,,,CLOSED,2023-02-28T17:42:55Z,2023-03-06T16:32:19Z,"When you have for example
if (object.var)
and you want to type newobject. before the object, it will remove ""object"" text.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/445/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/445,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Wzd4H,eclipse.jdt.ui,1456332295,445,NA,JanecekPetr,1746404,Petr Janeček,,NA,2023-03-06T15:19:59Z,2023-03-06T15:19:59Z,"This is a feature that you can turn off, see Proferences -> Java -> Editor -> Content Assist, select ""Completion inserts"" instead of ""Completion overwrites"". Does that fix your problem?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Wzd4H/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/445,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Wz-n1,eclipse.jdt.ui,1456466421,445,NA,andreasdc,82218780,,,NA,2023-03-06T16:32:18Z,2023-03-06T16:32:18Z,yes,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Wz-n1/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/446,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/446,eclipse.jdt.ui,1605722159,446,Refactor boxable value to conditional introduces unexpected side effect,hjohn,995917,John Hendrikx,,CLOSED,2023-03-01T08:23:47Z,2023-03-10T00:12:18Z,"Given the following program:

    public static void main(String[] args) {
      Object s = ""Hi"";
  
      Number number;
      if(s instanceof String) {
        number = Long.parseLong(""1"");
      }
      else {
        number = Double.parseDouble(""1"");
      }
  
      System.out.println(number);
    }

This prints:

    class java.lang.Long = 1

When applying the refactoring to conditional the program becomes:

    public static void main(String[] args) {
      Object s = ""Hi"";

      Number number;
      number = s instanceof String ? Long.parseLong(""1"") : Double.parseDouble(""1"");

      System.out.println(number.getClass() + "" = "" + number);
    }

This prints:

    class java.lang.Double = 1.0

# Expected

I would expect this refactoring to not be available when it changes the results.

# Cause

The refactoring doesn't take into account that unboxed values can be implicitly cast (`long` to `double` in this case).  The conditional `s instanceof String ? 1 : 1.0`  is always a `double`, and after boxing would always be `Double` instead of `Long` or `Double`.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/446/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/448,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/448,eclipse.jdt.ui,1607359559,448,Refactor StringFix to jdt.core.manipulation (Bug 571757),jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2023-03-02T19:17:46Z,2023-03-10T05:28:31Z,Move StringFix to StringFixCore in jdt.core.manipulation for use in jdt.core.manipulation quickfixes and cleanups.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/448/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/450,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/450,eclipse.jdt.ui,1607692321,450,Enhance add NLS quick-fix to work for Text blocks,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2023-03-02T23:31:43Z,2023-03-10T18:14:43Z,"The following code:

```
	public void foo() {
		String x = """"""
				a line is here
				and here too
				"""""";
	}

```
will show a warning after https://github.com/eclipse-jdt/eclipse.jdt.core/issues/762 is merged.

Add support to allow a user to add an NON-NLS marker via quick-fix.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/450/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/450,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5XOLfv,eclipse.jdt.ui,1463334895,450,NA,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,NA,2023-03-10T06:25:49Z,2023-03-10T06:25:49Z,Is it possible to add a testcase verify the JDT Core part alone? Would be good to have one if there's a way.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5XOLfv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/450,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5XQwMR,eclipse.jdt.ui,1464009489,450,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-03-10T15:53:25Z,2023-03-10T15:53:25Z,I could add a test to TestTextBlock.java.  I'll do a separate PR for that.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5XQwMR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/454,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/454,eclipse.jdt.ui,1609681610,454,Eclipse deletes your code,andreasdc,82218780,,,OPEN,2023-03-04T08:49:54Z,2023-03-08T08:24:26Z,"When you undo typing and then redo typing with shortcut and you press any key for example h instead of r, it will delete all of the code that you had to redo.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/454/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/454,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WzUj9,eclipse.jdt.ui,1456294141,454,NA,JanecekPetr,1746404,Petr Janeček,,NA,2023-03-06T14:59:08Z,2023-03-06T14:59:08Z,"This is pretty standard behaviour in any editor as it creates a fork in the history and Ctrl+Y then does not know which way to take in the history. What do you suggest would be the ideal alternative?

You can still right-click your file and select Team -> Show Local History to see all (?) your previous versions.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5WzUj9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/454,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Wz--j,eclipse.jdt.ui,1456467875,454,NA,andreasdc,82218780,,,NA,2023-03-06T16:32:45Z,2023-03-06T16:32:45Z,this is not normal,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Wz--j/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/454,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5W0IBy,eclipse.jdt.ui,1456504946,454,NA,JanecekPetr,1746404,Petr Janeček,,NA,2023-03-06T16:51:28Z,2023-03-06T16:51:28Z,"> this is not normal

I'm sorry, you will have to be more specific than this as I apparently do not understand the problem. I just tried this in my OS's text editor:

1. I wrote a few sentences.
2. I pressed the Undo, some of the words disappeared.
3. I pressed Redo, everything came back.
4. I pressed Undo again, making some words disappear.
5. I made a ""mistake"" by pressing the letter 'z' instead of pressing the shortcut for Redo.
6. From this point on, no combination of Undo or Redo operations showed me the original sentences, I only could see the letter 'z' appear and disappear.

This seems consistent with what you described as being the problem. If it is, sorry, that's how standard text editors work. If I misunderstood the issue, please describe it in more detail so that someone from the Eclipse JDT team can understand.

Note that the Local History workaround should still work.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5W0IBy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/454,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5W2WQM,eclipse.jdt.ui,1457087500,454,NA,JanecekPetr,1746404,Petr Janeček,,NA,2023-03-06T22:11:37Z,2023-03-06T22:11:37Z,"Some more context here: https://github.com/eclipse-platform/.github/issues/99

I just tried Notepad++ and it behaves as expected, just like eclipse / Word / any other standrd text editor does. If you think otherwise, please show us a way to reproduce it. Other than that, the Local History feature will be your friend, and obviously a versioning system like Git.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5W2WQM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/454,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5W5Hu8,eclipse.jdt.ui,1457814460,454,NA,andreasdc,82218780,,,NA,2023-03-07T09:12:39Z,2023-03-07T09:12:39Z,"Notepad++ doesn't delete my code, while in Eclipse 1 missclicked button and you lose your code.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5W5Hu8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/454,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5W5UAC,eclipse.jdt.ui,1457864706,454,NA,JanecekPetr,1746404,Petr Janeček,,NA,2023-03-07T09:48:14Z,2023-03-07T09:48:14Z,"Please, help us understand what you mean by showing us what you're using in notepad++. I don't know it. I tried it, did the same sequence of operations as mentioned above in my OS's text editor (TextEdit on Mac) experiment, and got the same result.

Is there any other kind of operation you're using besides Undo and Redo? If yes, which one and how do I reproduce what you're seeing? Does notepad++ have some kind of extra local history that you can get back to? If yes, how is it different/better from Eclipse's Local History feature?

Of course, in any serious project Git (or other versioning system) is the answer which is why it's unlikely a change will happen to eclipse's history and/or Local History features. Still, I'm curious. Maybe you did actually find a bug and we just don't yet understand what you mean.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5W5UAC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/454,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5W66O1,eclipse.jdt.ui,1458283445,454,NA,andreasdc,82218780,,,NA,2023-03-07T14:35:46Z,2023-03-07T14:35:46Z,"But you know on eclipse after you do redo, any kind of key pressed will delete your undo history? No matter if it's typed letter or button that won't play any action.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5W66O1/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/454,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5W7iWw,eclipse.jdt.ui,1458447792,454,NA,JanecekPetr,1746404,Petr Janeček,,NA,2023-03-07T16:18:19Z,2023-03-07T16:18:19Z,"> But you know on eclipse after you do redo, any kind of key pressed will delete your undo history? No matter if it's typed letter or button that won't play any action.

No, not any key press. If you are in the middle of the undo/redo stack and press a key which does an _Edit_, then and only then it will add your last action on the stack and forget the original top of the stack. I just tried, even actions that _could_ do an edit but don't (like Optimize Imports on an already good file or a cancelled Content Assist) are okay, Eclipse still remembers the whole history chain.

As we said countless times, everything we observe in Eclipse regarding Undo/Redo is exactly the same as in every text editor we've seen, including notepad++. Please, if you're seeing something else, give us a step-by-step reproducible example. Or record a video. We clearly do not understand each other.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5W7iWw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/454,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5W71Vz,eclipse.jdt.ui,1458525555,454,NA,andreasdc,82218780,,,NA,2023-03-07T17:05:49Z,2023-03-07T17:05:49Z,For me pressing any key other than redo removes the h istory.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5W71Vz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/454,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5W8GE0,eclipse.jdt.ui,1458594100,454,NA,JanecekPetr,1746404,Petr Janeček,,NA,2023-03-07T17:55:37Z,2023-03-07T17:55:37Z,"Aha! Now that sounds like a bug, I think. Would you mind sending your eclipse log file? It should be located at .../your-workspace-location/.metadata/.log. Is there anything interesting / relevant there? Try triggering the issue, then look into the file.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5W8GE0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/455,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/455,eclipse.jdt.ui,1609829524,455,Content Assist wrong positioned on Ubuntu,egloffmark,7382336,,,OPEN,2023-03-04T15:27:14Z,2023-03-11T08:38:22Z,"Hi There. I am using eclipse 2022-12 (4.26.0 Build id: 20221201-1913) on Ubuntu 22.04 with Java 17 and kernel 6.1.12-060112-generic.

When I call the content assist with CTRL+ SPACE then the window of the content assist get first correctly positioned but then after ~ 1s automatically wrongly re-positioned, somewhere at a weird position, often outside of the Eclipse Main Window. I assume it has something to do when the JavaDoc get in the background read and after that displayed next to the content assist.

Example how it looks like after it get automatically re-positioned

**Remark**: I tried also with only one 4k monitor, with ""nvidia-driver-515 / 525"" and ""xorg-videau-nouveau""  Graphis Driver same issue is happening

![Screenshot from 2023-03-04 16-31-26](https://user-images.githubusercontent.com/7382336/222914865-b75fc498-5c00-4dc8-9436-28328ff2468f.png)



","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/455/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/456,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/456,eclipse.jdt.ui,1611894423,456,"Misleading text ""Access to a non-accessible member of an enclosing type"" ",clo-vis,25638902,Clovis,,OPEN,2023-03-06T17:26:50Z,2023-03-06T17:26:50Z,"Java - Compiler - Errors/Warnings - Code style has the option 

_Access to a non-accessible member of an enclosing type_

When this option is on, you get a warning (or error, or info) in

```java
class Foo {
    static void foo() {
        run(() -> Bar.privateMethod());
        run(Bar::privateMethod); // <-- warning here
    }
    
    static class Bar {
        private static void privateMethod() { /**/ }
    }
    
    static void run(Runnable r) { r.run(); }
}
```
The compiler does generate an accessor method for some reason. The reason, however, is neither because the method is not accessible (because it is, as the line before the warning shows), nor because ""privateMethod"" is in an enclos**ing** type (Bar is an enclos**ed** type).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/456/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/457,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/457,eclipse.jdt.ui,1611919318,457,[code mining] Do not show parameter names for trivial methods like `List.of()`,JanecekPetr,1746404,Petr Janeček,,CLOSED,2023-03-06T17:42:31Z,2023-06-13T15:11:28Z,"I'm loving the ""Show method parameter names"" code mining option in JDT. It does a good job on not showing most trivial names (e.g. if the param name is contained in the method name).

However, it annoyingly shows parameter names in common methods like `List.of()` and `Logger#info()` which seems a tad unnecessary. The other code mining plugin, https://github.com/angelozerr/jdt-codemining, solves this by having a configurable filter:
![image](https://user-images.githubusercontent.com/1746404/223188690-0fcd6a04-2ef2-44ac-b9b3-fd4a16a9d737.png)

Now, we don't really need a configurable filter, at the very least a static filter would help in 90% of the cases. Do we want to compile such a list, do we want to use the one from the other plugin, do we want to go a completely different direction?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/457/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/457,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5W2F_Z,eclipse.jdt.ui,1457020889,457,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-03-06T21:22:00Z,2023-03-06T21:22:00Z,"I personally think it is a minor nit and you are the first to mention it.  I definitely would not put a dynamic filter table on the main preference page.  If it was supported, it should be in its own dialog: (e.g. a checkbox to enable/disable parameter filtering with a button beside it that says Configure... which brings up the dialog when enabled and pressed). 

The simpler static option you allude to would be to support a filter option file which is manually edited (comments would specify the grammar and how to disable an entry).  Filtering logic would be ported from the other plug-in.  The preferences page could simply enable/disable use of the filter file.  An initial file would be provided akin to the static options you wanted to set.  I think this would be ok because I don't see many users taking advantage of it and if they do, they probably are willing to tweak the file.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5W2F_Z/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/457,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5evhJe,eclipse.jdt.ui,1589514846,457,NA,JanecekPetr,1746404,Petr Janeček,,NA,2023-06-13T15:11:28Z,2023-06-13T15:11:28Z,"Thank you very much! Details like these make a big difference, but rarely get much attention. Much appreciated!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5evhJe/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/459,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/459,eclipse.jdt.ui,1613030927,459,Code Mining + Print Margin discussion,JanecekPetr,1746404,Petr Janeček,,CLOSED,2023-03-07T09:17:06Z,2023-03-07T20:08:07Z,"This is obviously a minor appearance thing, and I do not have a strong opinion on it, but I'd like to open a discussion to see whether there are any good options.

I'm using code mining (for param names and var types) together with a print margin (to visually see when the code is becoming longer than the team agreed to, but it's a soft limit). Obviously, that suddenly does not make any sense because code mining makes my lines a lot longer, so it completely invalidates the print margin. E.g. The code below does _not_ contain a line which is too long:
![image](https://user-images.githubusercontent.com/1746404/223376735-0c53a82e-d8da-4f07-af5b-e57cbe007477.png)

Naively it could be possible to have a separate margin for each line and move it based on code mining. I assume this is technically unfeasible (and probably ugly and distracting)? Is there a good solution?

What I can do and have been doing so far is to properly set up a (auto)formatter, and/or Checkstyle which can warn when the line is too long. This obviously works. Still, it's not ideal that the two features directly counter each other.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/459/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/459,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5W7hcM,eclipse.jdt.ui,1458444044,459,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-03-07T16:15:50Z,2023-03-07T16:15:50Z,I agree it is minor and you already have a solution to warn you for lines that are indeed too long.  A separate margin would look very ugly and distracting as you mentioned.  One possibility might be to have a dynamic option to see the line in its non-code-mining form or to show the line with modified print margin (e.g. a hover on the print margin line or a context menu option when on the line).,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5W7hcM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/459,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5W7n4c,eclipse.jdt.ui,1458470428,459,NA,JanecekPetr,1746404,Petr Janeček,,NA,2023-03-07T16:33:28Z,2023-03-07T16:33:28Z,"> see the line in its non-code-mining form

That was a good idea! I simply set up a shortcut to Toggle Code Mining, and can now switch instantly. Even though still not ideal, I think this is as good as it gets. Unless you think there is any work to do, let's close this issue.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5W7n4c/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/459,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5W8cRa,eclipse.jdt.ui,1458685018,459,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-03-07T19:09:25Z,2023-03-07T19:09:25Z,Great.  I'm ok with closing this but if you like we can open a new enhancement issue regarding the JDT setting up a default shortcut.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5W8cRa/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/459,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5W81QV,eclipse.jdt.ui,1458787349,459,NA,JanecekPetr,1746404,Petr Janeček,,NA,2023-03-07T20:08:06Z,2023-03-07T20:08:06Z,"> we can open a new enhancement issue regarding the JDT setting up a default shortcut

Nah, that's not worth it, I'm probably one of ten people in the world annoyed by this, and that's only until I can convince my team to switch to an autoformatter.

Thanks!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5W81QV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/464,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/464,eclipse.jdt.ui,1615208170,464,[20] Add AST level 20 to AST view,noopur2507,8749449,Noopur Gupta,,CLOSED,2023-03-08T12:44:17Z,2023-03-08T12:49:32Z,Add AST level 20 to AST view.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/464/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/466,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/466,eclipse.jdt.ui,1615270590,466,Externalize Strings sometimes generating unusable Messages.java class,jprisco60,127115150,,,CLOSED,2023-03-08T13:26:07Z,2023-03-10T04:25:49Z,"The following bug suggested using
   private static final String BUNDLE_NAME= <MessagesClassName>.class.getPackageName() + ""<properties-file-name>"";

when generating the Messages class for Externalize Strings. <https://bugs.eclipse.org/bugs/show_bug.cgi?id=574801>

Apparently this creates a dependency on Java 9 - if this was not the intent then I suspect this a bug.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/466/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/466,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5XGVxs,eclipse.jdt.ui,1461279852,466,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-03-09T04:58:30Z,2023-03-09T04:58:30Z,"Hi @jprisco60 Thanks for noting.  Yes, the compliance level should be checked.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5XGVxs/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/468,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/468,eclipse.jdt.ui,1618867102,468,Run config not resolving dependency tree,Spacemetric-Oscar,86239543,,,OPEN,2023-03-10T12:00:39Z,2023-03-10T12:00:39Z,"Sorry if this issue is in the wrong project, It was difficult to know if it should be in ui or in core (or somewhere else for that matter).

When adding a project as a dependency in a run configuration, the dependency tree of that project is not taken into account by Eclipse.
For me this becomes an issue when writing applications using plugins such as using java ServiceLoader. When running applications with such plugins in the IDE it is almost impossible to correctly add all of the dependencies (since eclipse will not resolve them automatically).

I have created a very simple project that demonstrates the issue here: git@gitlab.com:spacemetric-public/eclipse-runcfg-transitive-issue.git

This project demonstrates this by having 3 projects: a, b and c with 3 classes A, B and C and one interface Plugin.

Project b has a dependency on project a and c while projects a and c have no dependencies at all.
Class A in project a uses the ServiceLoader to load instances of the Plugin interface and iterates over them.
Class B in project b implements this interface and uses class C from project c in its implementation.

In order to run the application we create a run configuration for class A and then add our plugin (project b) to the dependencies.
My assumption would be that any dependencies of b would also be added to the classpath by eclipse but this is not the case. Instead the result when running is a NoClassDefFoundError.
This error could of course easily be resolved by adding project c as well to the dependencies list. But in a real world scenario using ServiceLoader to load plugins into an application, it is often very difficult to find ALL the correct dependencies that needs to be added and doing this work manually.
I see very little reason why eclipse should not resolve these dependencies by itself.
 ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/468/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/470,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/470,eclipse.jdt.ui,1621193125,470,org.eclipse.jdt.bcoview should be properly externalized,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2023-03-13T10:23:22Z,2023-03-13T17:43:05Z,"Looks like the preference page string is hard-coded in /org.eclipse.jdt.bcoview/plugin.xml.

Can you please create a patch to fix it in the master and the R4_27_maintenance branches?

_Originally posted by @noopur2507 in https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/364#issuecomment-1465772285_
            ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/470/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/478,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/478,eclipse.jdt.ui,1626160102,478,IOOBE when moving JUnit5 classpath container from module path to classpath,trancexpress,24752155,Simeon Andreev,,CLOSED,2023-03-13T11:14:17Z,2023-04-17T16:37:07Z,"To reproduce:

1. Create a Java project with Java 17 and no module info (rest defaults).
2. Add JUnit5 to the module path.
3. Try to move the JUnit5 container from the module path to the classpath via the build path libraries preference page.
4. Observe logged exception, JUnit5 container disappears from the tree widget:
```
java.lang.IndexOutOfBoundsException: Index: 1, Size: 0
	at java.base/java.util.ArrayList.rangeCheckForAdd(ArrayList.java:756)
	at java.base/java.util.ArrayList.add(ArrayList.java:481)
	at org.eclipse.jdt.internal.ui.wizards.buildpaths.BuildPathBasePage.moveCPElementAcrossNode(BuildPathBasePage.java:336)
	at org.eclipse.jdt.internal.ui.wizards.buildpaths.LibrariesWorkbookPage$2.performDrop(LibrariesWorkbookPage.java:337)
	at org.eclipse.jface.viewers.ViewerDropAdapter.drop(ViewerDropAdapter.java:273)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:104)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:5855)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1529)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1555)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1538)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1316)
	at org.eclipse.swt.dnd.DropTarget.drag_data_received(DropTarget.java:378)
	at org.eclipse.swt.dnd.DropTarget.Drag_Data_Received(DropTarget.java:255)
	at org.eclipse.swt.internal.gtk3.GTK3.gtk_drag_get_data(Native Method)
	at org.eclipse.swt.dnd.DropTarget.drag_drop(DropTarget.java:423)
	at org.eclipse.swt.dnd.DropTarget.Drag_Drop(DropTarget.java:262)
	at org.eclipse.swt.internal.gtk3.GTK3.gtk_main_do_event(Native Method)
	at org.eclipse.swt.widgets.Display.eventProc(Display.java:1597)
	at org.eclipse.swt.internal.gtk3.GTK3.gtk_main_iteration_do(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4514)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.jdt.internal.ui.wizards.buildpaths.newsourcepage.ConfigureBuildPathAction.run(ConfigureBuildPathAction.java:88)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:5855)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1529)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:5065)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4517)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
```

See recording: https://user-images.githubusercontent.com/24752155/224685993-a68a3844-4287-4b2c-8ae9-9e047727724a.mp4

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/478/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/474,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/474,eclipse.jdt.ui,1624270656,474,Cleanup wizard summary must be refreshed on page enter,Bananeweizen,406876,Michael Keppler,,CLOSED,2023-03-14T20:43:01Z,2023-03-25T03:19:02Z,"If you go backward in the cleanup wizard and change the active cleanup rules, then the summary page with all changes to be performed shows the old but outdated summary at the top. That label must be updated when entering the page, not only when selecting one of the menu items.
![grafik](https://user-images.githubusercontent.com/406876/225131503-610ab173-b442-4566-9d6a-c47d0b7b1354.png)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/474/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/475,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/475,eclipse.jdt.ui,1624278713,475,Multiple NLS fix doesn't work for Text blocks,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2023-03-14T20:49:40Z,2023-03-14T22:27:00Z,"With the following code:

```
	public void foo() {
		String x = """"""
				a line is here
				and here too
				"""""";
		String y = """"""
				more lines
				"""""";
		System.out.println(""<"" + y + "">"");
	}
```

If preferences are set to warn of missing non-NLS markers, there will be warning markers for the 2 text blocks and the two string literals in the println statement.  While using a quick-fix on either x or y works, selecting Fix 4 problems of the same type will result in non-NLS markers being placed in the wrong position for variables x and y (on the first line instead of the last).
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/475/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1456,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1456,eclipse.jdt.ui,2350829862,1456,"""Organize imports"" should never delete comments",fbricon,148698,Fred Bricon,,OPEN,2023-03-16T14:41:24Z,2024-06-13T10:52:59Z,"context: when using [JBang](https://www.jbang.dev/), comments are used to declare several directives, like classpath dependencies. Those comments are critical to the proper functioning of JBang.

In certain conditions, calling ""organize imports"" will delete all comments above removed imports.

eg. with the following code:
```java
///usr/bin/env jbang ""$0"" ""$@"" ; exit $?
package foo;

//DESCRIPTION all those comments are JBang Directives. organizing imports should never ever remove them!!!
//DEPS com.github.jamesnetherton:lolcat4j:0.4.0
//DEPS com.github.lalyos:jfiglet:0.0.9
import static java.lang.System.*;

public class OrganizeImportsBug {
	public static void main(String[] args) {
		System.out.println(""Nooope"");
	}
}
```

invoking ""Organize imports"" will delete all comments  below the first non-comment line (the package statement), and the now removed `import static java.lang.System.*;`, producing:

```java
///usr/bin/env jbang ""$0"" ""$@"" ; exit $?
package foo;

public class OrganizeImportsBug {
	public static void main(String[] args) {
		System.out.println(""Nooope"");
	}
}
```

With [JBang Eclipse](https://github.com/jbangdev/jbang-eclipse) installed, this would mean the dependencies would be automatically removed from the classpath, causing compilation failures on a file actually using classes from those dependencies. Bad JDT! 

Same bug can be observed when running in VS Code with [jbang-vscode](https://marketplace.visualstudio.com/items?itemName=jbangdev.jbang-vscode).

cc @maxandersen @rgrunber @jjohnstn 






","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1456/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1456,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6BD_Ub,eclipse.jdt.ui,2165306651,1456,NA,rgrunber,1417342,Roland Grunberg,,NA,2023-03-16T14:49:21Z,2023-03-16T14:49:21Z,"There's a good chance this is a bug in the AST rewriting mechanism. I remember for a lot of rewrites, if the ""extended"" source range wasn't used, comments might be ignored/removed.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6BD_Ub/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1456,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6BD_Ue,eclipse.jdt.ui,2165306654,1456,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-03-16T20:05:44Z,2023-03-16T20:05:44Z,"This is a common problem.  JDT treats comments that precede an element and line comments on the same line as being owned by the element.  This is reasonable considering many comments apply to the next line.  When removed, the comments belonging to an element are removed as well.  Obviously, there are times when this approach is wrong and the comment is a global comment or describing logic flow for more than just the next line.   Looking at the Organize imports code, it is purposely treating the comments preceding the import statements as belonging to the first import statement just as it would consider comments between imports as belonging to the next import statement.

For example:

```
// import a list
import java.util.List; // added on Mar 3/1999
// Import an ArrayList
import java.util.ArrayList; // added on Mar 4/1999

public class A {
   public void foo(List<String> x) {
  }
}
```

Invoking Organize Imports on the sample above will remove the ArrayList import plus all its comments and leave the comments for List.  If List were also not used, then its comments would be removed as well.  Interestingly enough, if the threshold for using a .* import is reached, it leaves all comments in place for the items that are merged and adds the new .* (e.g. import java.util.*;).

Is there any reason the directive comments aren't all grouped together above the package statement? (i.e. are they supposed to be below the package statement)?

One idea might be to add a specific preference to clarify what is desired:  e.g. an option in the Organize Imports preferences to ignore leading comments before the first import statement.  If you expect such comments sprinkled throughout the code to be preserved a much more complex option would be to needed to add filters for comments to ignore and perhaps a list for shebang could be contributed for the user to select by default.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6BD_Ue/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1456,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6BD_Uq,eclipse.jdt.ui,2165306666,1456,NA,rgrunber,1417342,Roland Grunberg,,NA,2023-03-16T21:18:25Z,2023-03-16T21:18:25Z,"> Is there any reason the directive comments aren't all grouped together above the package statement? (i.e. are they supposed to be below the package statement)?

Because of https://github.com/eclipse-jdt/eclipse.jdt.core/issues/649 :stuck_out_tongue: 
 
> One idea might be to add a specific preference to clarify what is desired: e.g. an option in the Organize Imports preferences to ignore leading comments before the first import statement. If you expect such comments sprinkled throughout the code to be preserved a much more complex option would be to needed to add filters for comments to ignore and perhaps a list for shebang could be contributed for the user to select by default.

So maybe a formatting option of some sort, which is what I think Fred implied there.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6BD_Uq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1456,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6BD_Ux,eclipse.jdt.ui,2165306673,1456,NA,fbricon,148698,Fred Bricon,,NA,2023-03-17T07:56:32Z,2023-03-17T07:56:32Z,"



> This is a common problem. JDT treats comments that precede an element and line comments on the same line as being owned by the element. This is reasonable considering many comments apply to the next line. When removed, the comments belonging to an element are removed as well. Obviously, there are times when this approach is wrong and the comment is a global comment or describing logic flow for more than just the next line. Looking at the Organize imports code, it is purposely treating the comments preceding the import statements as belonging to the first import statement just as it would consider comments between imports as belonging to the next import statement.
> 
> For example:
> 
> ```
> // import a list
> import java.util.List; // added on Mar 3/1999
> // Import an ArrayList
> import java.util.ArrayList; // added on Mar 4/1999
> 
> public class A {
>    public void foo(List<String> x) {
>   }
> }
> ```
> 
> Invoking Organize Imports on the sample above will remove the ArrayList import plus all its comments and leave the comments for List. If List were also not used, then its comments would be removed as well. 

No, even that case is inconsistent. If there are no statement above, the comments are not removed. If you try with 
```
// import a list
import java.util.List; // added on Mar 3/1999
// Import an ArrayList
import java.util.ArrayList; // added on Mar 4/1999

public class A {
   public void foo() {
  }
}
```
you end up with 
```
// import a list

public class A {
   public void foo() {
  }
}
```

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6BD_Ux/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1456,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6BD_U4,eclipse.jdt.ui,2165306680,1456,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-03-22T22:32:20Z,2023-03-22T22:32:20Z,"> 
> No, even that case is inconsistent. If there are no statement above, the comments are not removed. If you try with
> 
> ```
> // import a list
> import java.util.List; // added on Mar 3/1999
> // Import an ArrayList
> import java.util.ArrayList; // added on Mar 4/1999
> 
> public class A {
>    public void foo() {
>   }
> }
> ```
> 
> you end up with
> 
> ```
> // import a list
> 
> public class A {
>    public void foo() {
>   }
> }
> ```

This is intentional.  The first comment is being considered the file header and there was a bug opened because it was removed if the imports were removed:  https://bugs.eclipse.org/121428

With Roland's patch, adding back the imports will properly treat the first comments as being the file header.

With a package statement in the file, the comments are treated as belonging to the first import statement.  If it is deleted, they are deleted.

I am currently working on adding the package statement and not affecting the header comments.



","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6BD_U4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/485,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/485,eclipse.jdt.ui,1632966038,485,QuickFix fails to propose import,dhmartin,4883186,David Martin,,CLOSED,2023-03-17T09:01:35Z,2023-03-21T06:19:10Z,"Used to work on eclipse 2022-12 and now fails just after upgrading to 2023-03.

Try this:

	public static void main(String[] args) {
		Date d1= new Date();

		Date d2;
		d2=new Date();
	}

Check QuickFix: `import java.util.Date` is proposed only with the standalone declaration for `d2`, but not when trying to declare and assign on a row. Not just for Date, seems to fail for different API classes.

David 
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/485/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/485,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YCc4N,eclipse.jdt.ui,1477037581,485,NA,trancexpress,24752155,Simeon Andreev,,NA,2023-03-20T22:39:15Z,2023-03-20T22:39:15Z,"Works as expected if I revert: https://github.com/eclipse-jdt/eclipse.jdt.ui/commit/546a6978432fa5f2b01083919364848dd89805dc

@jjohnstn could you take a look here? In the snippet from the description, quick fixes for importing `Date` are suggested only when hovering at `Date` at the line `Date d2;`. Seems to have broken with the fix for #349.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YCc4N/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/485,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YC4HT,eclipse.jdt.ui,1477149139,485,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-03-21T01:07:11Z,2023-03-21T01:07:11Z,Looking at it.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YC4HT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/485,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YDl1S,eclipse.jdt.ui,1477336402,485,NA,trancexpress,24752155,Simeon Andreev,,NA,2023-03-21T06:19:10Z,2023-03-21T06:19:10Z,"> Looking at it.

Thanks!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YDl1S/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/482,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/482,eclipse.jdt.ui,1629739783,482,Make string concat to text block check NLS consistency,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2023-03-17T18:19:31Z,2023-03-18T05:32:13Z,"For the following snippet:

```
String t = ""abc\n"" + //$NON-NLS-1$
			""def\n"" +
			""ghi\n""; //$NON-NLS-1$  // a string

```
The NLS marking is inconsistent for the whole string so it cannot be correctly converted to a text block which can only mark the entire string NON-NLS or not.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/482/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/482,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5X5ndo,eclipse.jdt.ui,1474721640,482,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-03-18T05:32:12Z,2023-03-18T05:32:12Z,Fixed with #483,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5X5ndo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/583,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/583,eclipse.jdt.ui,1711625781,583,View for tracing exception propogation routes,trancexpress,24752155,Simeon Andreev,,OPEN,2023-03-17T18:43:34Z,2023-05-16T09:28:19Z,"See: https://bugs.eclipse.org/bugs/show_bug.cgi?id=123948

>  it would be very neat to be able to select exceptions declared thrown in a methods signature, or particular exceptions thrown in the 
> method body, and have eclipse generate an upward tree of where these exceptions go.
>
> The difference between this and call-hierarchy is that three different behaviours could be added in this context
>   i) when an exception is caught then the exception can't propogate upward further so this branch would end in the call-hierarchy view. (If some logic possibly rethrows the exception or wraps it, then i think its reasonable to have the user perform a second search to  pursue its route further)
>   ii) when an exception is never caught, then the branch collapsed by default and marked visually as being a path that is uncaught
>   iii) as the intent of the user when asking for this is focussed on finding the places where the exception is not propogated any further  (i.e. it is caught or interrupts its host thread) then automatically going as far as is reasonable in the search makes sense. In theory this  could be prohibitively expensive but in my experience is most often not - maybe a preference could allow a maximum number of  nodes in the call-tree before no further automatic pursuing of propogation paths is allowed.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/583/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/583,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5cWLHA,eclipse.jdt.ui,1549316544,583,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2023-05-16T09:18:19Z,2023-05-16T09:18:19Z,Shouldn't we move this (nice!) request to jdt.ui?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5cWLHA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,eclipse.jdt.ui,1632288818,484,Javadoc build failure,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,CLOSED,2023-03-20T14:59:47Z,2023-04-11T08:11:10Z,In latest I-build javadoc build fails with the issues shown at https://download.eclipse.org/eclipse/downloads/drops4/I20230320-0330/compilelogs/jdt.doc.isv.javadoc.txt,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YENRN,eclipse.jdt.ui,1477497933,484,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-21T09:16:06Z,2023-03-21T09:16:06Z,"Last successful execution is https://download.eclipse.org/eclipse/downloads/drops4/I20230316-1800/
After that we've switched a lot of platform bundles to Java 17, platform tests were not running / recorded, and the first fail is in https://download.eclipse.org/eclipse/downloads/drops4/I20230320-0330/testResults.php

So we have regression between I20230316-1800 and I20230320-0330.

I don't see any breaking changes in JDT UI code here, so it must be something related to recent platform / releng activities.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YENRN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YEqxL,eclipse.jdt.ui,1477618763,484,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-21T10:46:49Z,2023-03-21T10:46:49Z,"See ""similar"" issue https://github.com/eclipse-platform/eclipse.platform.common/issues/18 and fix https://github.com/eclipse-platform/eclipse.platform.common/pull/19/files.
However, why should only JDT UI build fail?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YEqxL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YEvUs,eclipse.jdt.ui,1477637420,484,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-21T11:01:33Z,2023-03-21T11:01:33Z,"I've added https://github.com/eclipse-platform/.github/wiki/Javadoc-validation to start documenting how all that works.

@sravanlakkimsetti : would be great if you could fix the wiki above so other people can also understand how that javadoc build works and if you could give here a hint what is broken today n platform.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YEvUs/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YFa1e,eclipse.jdt.ui,1477815646,484,NA,sravanlakkimsetti,77106773,Sravan Kumar Lakkimsetti,,NA,2023-03-21T13:12:39Z,2023-03-21T13:12:39Z,"@iloveeclipse I can see 1 possible cause. org.eclipse.core.runtime is used in jdt.ui. I see that o.e.core.runtime updated to java 17 but the jdt.ui plugins that use o.e.core.runtime are set at java-11. I think we need to update jdt.ui bundles to java-17.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YFa1e/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YFf82,eclipse.jdt.ui,1477836598,484,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-21T13:27:01Z,2023-03-21T13:27:01Z,"@sravanlakkimsetti : thanks, that is surely not only one place where JDT (which is still on Java 11) uses platform that is on Java 17. But this implies that **somewhere** we run **some** task on Java 11 runtime that is unable to read Java 17 class files - **where** would be this output? Is this ""cut out"" from [jdt.doc.isv.javadoc.txt](https://download.eclipse.org/eclipse/downloads/drops4/I20230320-0330/compilelogs/jdt.doc.isv.javadoc.txt) ? 

I would **love** to see this build chain explained in the wiki. Who starts which process in which script and how that generates at the end the xyz.javadoc.txt files.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YFf82/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YF3nl,eclipse.jdt.ui,1477933541,484,NA,sravanlakkimsetti,77106773,Sravan Kumar Lakkimsetti,,NA,2023-03-21T14:24:25Z,2023-03-21T14:24:25Z,"I jotted down some points on how build is triggered in the wiki page. 
May be adding more doclint or javadoc debug options might give us more information. we can add more options in jdtOptions.txt file","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YF3nl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YF8aH,eclipse.jdt.ui,1477953159,484,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-21T14:35:39Z,2023-03-21T14:35:39Z,"@sravanlakkimsetti : thanks. Where, in which log are we supposed to see this output:
```
org.eclipse.jdt.doc.isv/buildDoc.xml - generateJavadoc:
      Using javadocExecutable:
```
from https://github.com/eclipse-platform/eclipse.platform.common/blob/54455a117960237d69a9d840e61872641cafdaaa/bundles/org.eclipse.jdt.doc.isv/buildDoc.xml#LL106C7-L107C31","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YF8aH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YGCpE,eclipse.jdt.ui,1477978692,484,NA,sravanlakkimsetti,77106773,Sravan Kumar Lakkimsetti,,NA,2023-03-21T14:50:24Z,2023-03-21T14:50:24Z,"this is the [exact line](https://github.com/eclipse-platform/eclipse.platform.common/blob/54455a117960237d69a9d840e61872641cafdaaa/bundles/org.eclipse.jdt.doc.isv/buildDoc.xml#L141-L143) where we execute javadoc and generate the log doc.bin.log. 

The doc.bin.log is renamed [here](https://github.com/eclipse-platform/eclipse.platform.releng.aggregator/blob/1bbda0a96dc04e93bdc1bb91813a5d98b5659653/eclipse.platform.releng.tychoeclipsebuilder/eclipse/helper.xml#L49-L78)

the rename happens during `gather eclipse parts` stage.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YGCpE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YGD0x,eclipse.jdt.ui,1477983537,484,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-21T14:53:04Z,2023-03-21T14:53:04Z,"@sravanlakkimsetti : yes, I see it, but in which **log** file in the SDK build do we see the output from the **echo** task that runs [40 lines above](https://github.com/eclipse-platform/eclipse.platform.common/blob/54455a117960237d69a9d840e61872641cafdaaa/bundles/org.eclipse.jdt.doc.isv/buildDoc.xml#L106)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YGD0x/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YGJwu,eclipse.jdt.ui,1478007854,484,NA,sravanlakkimsetti,77106773,Sravan Kumar Lakkimsetti,,NA,2023-03-21T15:07:21Z,2023-03-21T15:07:21Z,"we are running ant with `-quiet` option. I am not familiar with ant options. but I think if we use `-silent` we will see the echo statements in the maven build log. 

The commandline options are specified in https://github.com/eclipse-platform/eclipse.platform.common/blob/54455a117960237d69a9d840e61872641cafdaaa/bundles/org.eclipse.jdt.doc.isv/pom.xml#L102","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YGJwu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YGK7E,eclipse.jdt.ui,1478012612,484,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-21T15:10:13Z,2023-03-21T15:10:13Z,"Arrgh, OK, I will check that. Any idea why `-quiet` was used at all? Too much output?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YGK7E/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YGN-h,eclipse.jdt.ui,1478025121,484,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2023-03-21T15:17:37Z,2023-03-21T15:17:37Z,"FWIW, the process is too cumbersome and if there is agreement to move javadoc to separate bundles that contain only the javadoc I'm sure that we can craft something far easier to manage. Ideally, having one such bundle per git repo so javadoc errors are flagged even by verification builds. @laeubi already asked and tried things in that area for equinox and platform.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YGN-h/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YGQVg,eclipse.jdt.ui,1478034784,484,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-21T15:23:27Z,2023-03-21T15:23:27Z,"The quiet was added in https://github.com/eclipse-platform/eclipse.platform.common/commit/0b511f5d772126360bc064e5b6f6044a66881807 as a ""follow up"" on https://bugs.eclipse.org/bugs/show_bug.cgi?id=443771 with no further comments.

I would propose to enable it on JDT to see how bad is ""no quiet"" mode and if we will see some more info there.
I would especially like to see ant command line / executable and arguments.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YGQVg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YGQ_z,eclipse.jdt.ui,1478037491,484,NA,laeubi,1331477,Christoph Läubrich,,NA,2023-03-21T15:24:57Z,2023-03-21T15:24:57Z,"Actually tycho has a ""document bundle"" plugin, that *seems* to work towards the direction of having an ""eclipse-javadoc-tool"", but it is / was not really used, so if there are some demands I'm open to revive / modernize the plugin but I'm not very familiar with the current ""doc-builds"" and what are the expected outcomes are.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YGQ_z/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YGRMb,eclipse.jdt.ui,1478038299,484,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-21T15:25:27Z,2023-03-21T15:25:27Z,"> the process is too cumbersome and if there is agreement to move javadoc to separate bundles

I wonder why do we provide that javadoc at all? 
Who consumes that and do we still need that given that we ship sources with SDK?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YGRMb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YGTr3,eclipse.jdt.ui,1478048503,484,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-21T15:30:41Z,2023-03-21T15:30:41Z,@laeubi : is there any way to say tycho to run on Java 17 in https://github.com/eclipse-platform/eclipse.platform.common/blob/54455a117960237d69a9d840e61872641cafdaaa/bundles/org.eclipse.jdt.doc.isv/pom.xml#L87 ? Or is this already using Java 17?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YGTr3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YGV1p,eclipse.jdt.ui,1478057321,484,NA,laeubi,1331477,Christoph Läubrich,,NA,2023-03-21T15:34:20Z,2023-03-21T15:34:20Z,"Tycho always require Java 17 to *run* so this usually should already use Java 17, *but* the eclipse run itself calls **ant** so I'm not sure if/how there might be a different setting for that, there is a file in that folder that seems to configure some jdt options (guessing by name):
https://github.com/eclipse-platform/eclipse.platform.common/blob/54455a117960237d69a9d840e61872641cafdaaa/bundles/org.eclipse.jdt.doc.isv/jdtOptions.txt","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YGV1p/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YGaYM,eclipse.jdt.ui,1478075916,484,NA,laeubi,1331477,Christoph Läubrich,,NA,2023-03-21T15:45:34Z,2023-03-21T15:45:34Z,By the way as far as I know this does not only generates javadoc but also the extension point docs and alike...,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YGaYM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YGbfS,eclipse.jdt.ui,1478080466,484,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-21T15:47:57Z,2023-03-21T15:47:57Z,I've created https://github.com/eclipse-platform/.github/discussions/108.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YGbfS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YKStf,eclipse.jdt.ui,1479093087,484,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-22T08:24:19Z,2023-03-22T08:24:19Z,"@sravanlakkimsetti : I don't see anything in any log file that would indicate the ""echo"" from https://github.com/eclipse-platform/eclipse.platform.common/pull/128/files is there.

I'm looking for example for string `org.eclipse.jdt.doc.isv/buildDoc.xml` or `generateJavadoc` in 
- https://download.eclipse.org/eclipse/downloads/drops4/I20230321-1800/logs.php#console
- and there in https://download.eclipse.org/eclipse/downloads/drops4/I20230321-1800/testresults/consolelogs/ep428I-unit-cen64-gtk3-java17_linux.gtk.x86_64_17_consolelog.txt

So I assume the pom change has no effect => the javadoc build is triggered from somewhere else?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YKStf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YKY8E,eclipse.jdt.ui,1479118596,484,NA,sravanlakkimsetti,77106773,Sravan Kumar Lakkimsetti,,NA,2023-03-22T08:45:02Z,2023-03-22T08:45:02Z,"I see the echo statements in [mb220_buildSdkPatch.sh.log](https://download.eclipse.org/eclipse/downloads/drops4/I20230321-1800/buildlogs/mb220_buildSdkPatch.sh.log). Please refer to line numbers 30550 and 30551. 

build for org.eclipse.jdt.doc.isv starts at 28960 and ends at 31073. 
Ant build log is from 29107 to 31045","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YKY8E/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YM8S5,eclipse.jdt.ui,1479787705,484,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-22T15:32:48Z,2023-03-22T15:32:48Z,"@sravanlakkimsetti : interesting, I was looking at the first page, but missed completely https://download.eclipse.org/eclipse/downloads/drops4/I20230321-1800/buildlogs.php.

Unfortunately nothing interesting shown there, except that the tooling used **same** Java 17 version already for 4.27 and last successful 4.28 build without any troubles.

I now assume something is wrong with the classpath provided to the javadoc, something that breaks regular expression parser there etc.

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YM8S5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YWb0w,eclipse.jdt.ui,1482276144,484,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-24T05:34:43Z,2023-03-24T05:34:43Z,"Looks like moving JDT UI  bundles to Java 17 via https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/493 fixed **gazillions** of errors related to jdt.ui. 

Remaining one will be probably fixed either via https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/210 or by ant / debug bundles updates, I will try to do this today. 

```
../../../eclipse.platform/ant/org.eclipse.ant.launching/src/org/eclipse/ant/launching/IAntLaunchConstants.java:17: error: package org.eclipse.core.externaltools.internal does not exist
import org.eclipse.core.externaltools.internal.IExternalToolConstants;
                                              ^
1 error
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YWb0w/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Yse6a,eclipse.jdt.ui,1488055962,484,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2023-03-29T07:07:45Z,2023-03-29T07:07:45Z,I have touched doc bundles via https://ci.eclipse.org/releng/job/Touch_doc_bundles/62/ and will trigger I-build now so we can see the exact state of the issue.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Yse6a/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YsisO,eclipse.jdt.ui,1488071438,484,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-29T07:20:46Z,2023-03-29T07:20:46Z,"> I have touched doc bundles via

I've added this to the wiki: https://github.com/eclipse-platform/.github/wiki/Javadoc-validation

Can you please add explanation why, in which cases is this needed?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YsisO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YsxkM,eclipse.jdt.ui,1488132364,484,NA,sravanlakkimsetti,77106773,Sravan Kumar Lakkimsetti,,NA,2023-03-29T08:10:25Z,2023-03-29T08:10:25Z,"> > I have touched doc bundles via
> 
> I've added this to the wiki: https://github.com/eclipse-platform/.github/wiki/Javadoc-validation
> 
> Can you please add explanation why, in which cases is this needed?

Adding the explanation now. A bit lengthy will take some time.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YsxkM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Ys-fc,eclipse.jdt.ui,1488185308,484,NA,sravanlakkimsetti,77106773,Sravan Kumar Lakkimsetti,,NA,2023-03-29T08:48:34Z,2023-03-29T08:48:34Z,Added https://github.com/eclipse-platform/.github/wiki/Javadoc-validation#touch_doc_bundles. Please check where this is sufficient?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Ys-fc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YtCvd,eclipse.jdt.ui,1488202717,484,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-29T09:00:06Z,2023-03-29T09:00:06Z,"> I have touched doc bundles via https://ci.eclipse.org/releng/job/Touch_doc_bundles/62/ and will trigger I-build now so we can see the exact state of the issue.

Still same error as before:
https://download.eclipse.org/eclipse/downloads/drops4/I20230329-0310/compilelogs/jdt.doc.isv.javadoc.txt

```
../../../eclipse.platform/ant/org.eclipse.ant.launching/src/org/eclipse/ant/launching/IAntLaunchConstants.java:17: error: package org.eclipse.core.externaltools.internal does not exist
import org.eclipse.core.externaltools.internal.IExternalToolConstants;
                                              ^
1 error
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YtCvd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YtDxB,eclipse.jdt.ui,1488206913,484,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-29T09:02:35Z,2023-03-29T09:02:35Z,"I wonder if that is again Java 17 issue with org.eclipse.ant.launching that is already on java 17 but depend on org.eclipse.ant.core that is still on Java 11 but depend on org.eclipse.core.runtime that is moved to Java 17.

To proof that we need https://github.com/eclipse-platform/eclipse.platform/pull/356 fixes to be merged.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YtDxB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Yy9FO,eclipse.jdt.ui,1489752398,484,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-30T06:12:19Z,2023-03-30T06:12:19Z,"> To proof that we need [eclipse-platform/eclipse.platform#356](https://github.com/eclipse-platform/eclipse.platform/pull/356) fixes to be merged.

Did not help, but may be we miss touch on doc bundles now, so I've triggered 
https://ci.eclipse.org/releng/job/Touch_doc_bundles/63/

Will start IBiild once we also have this fix for  JDT crashes: https://github.com/eclipse-pde/eclipse.pde/pull/542","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Yy9FO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YzCuk,eclipse.jdt.ui,1489775524,484,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-30T06:40:15Z,2023-03-30T06:40:15Z,Triggered https://ci.eclipse.org/releng/job/Builds/job/I-build-4.28/36/,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YzCuk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YzMgZ,eclipse.jdt.ui,1489815577,484,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-30T07:18:47Z,2023-03-30T07:18:47Z,"> Triggered https://ci.eclipse.org/releng/job/Builds/job/I-build-4.28/36/

Failed, see https://github.com/eclipse-platform/eclipse.platform.releng/issues/222.

Triggered a new one: https://ci.eclipse.org/releng/job/Builds/job/I-build-4.28/37/","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YzMgZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YzunC,eclipse.jdt.ui,1489955266,484,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-30T09:06:13Z,2023-03-30T09:06:13Z,"Still same error in https://download.eclipse.org/eclipse/downloads/drops4/I20230330-0310/logs.php#javadoc :
https://download.eclipse.org/eclipse/downloads/drops4/I20230330-0310/compilelogs/jdt.doc.isv.javadoc.txt
```
../../../eclipse.platform/ant/org.eclipse.ant.launching/src/org/eclipse/ant/launching/IAntLaunchConstants.java:17: error: package org.eclipse.core.externaltools.internal does not exist
import org.eclipse.core.externaltools.internal.IExternalToolConstants;
                                              ^
1 error
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YzunC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZRQ--,eclipse.jdt.ui,1497698238,484,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-04-05T15:38:09Z,2023-04-05T15:38:09Z,"I have no time to investigate it further, especially there is no explanation how one can run the build only for the doc bundles without the rest of SDK.

=> workaround to build only subset of API reference for M1 (that at least produces non-empty doc bundles and I see no errors anymore opening help in built SDK):

https://github.com/eclipse-platform/eclipse.platform.common/pull/133","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZRQ--/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZUV79,eclipse.jdt.ui,1498504957,484,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-04-06T05:17:25Z,2023-04-06T05:17:25Z,"> I have no time to investigate it further, especially there is no explanation how one can run the build only for the doc bundles without the rest of SDK.
> 
> => workaround to build only subset of API reference for M1 (that at least produces non-empty doc bundles and I see no errors anymore opening help in built SDK):
> 
> [eclipse-platform/eclipse.platform.common#133](https://github.com/eclipse-platform/eclipse.platform.common/pull/133)

Interestingly, even if my local SDK build succeeded, [SDK build](https://download.eclipse.org/eclipse/downloads/drops4/I20230405-1800/) still has same problem.

So something is missing, even if the doc bundles were touched: https://github.com/eclipse-platform/eclipse.platform.common/commit/df307d9bbf5edf0ed0eee4134cc68c3bb6652e22 

Log file from this build is https://download.eclipse.org/eclipse/downloads/drops4/I20230405-1800/buildlogs/mb220_buildSdkPatch.sh.log","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZUV79/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZUghp,eclipse.jdt.ui,1498548329,484,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-04-06T06:15:48Z,2023-04-06T06:15:48Z,"> Interestingly, even if my local SDK build succeeded, [SDK build](https://download.eclipse.org/eclipse/downloads/drops4/I20230405-1800/) still has same problem.

I was wrong. My local build is still broken in same way like ""official"" one, but it is now **less** broken as the state I saw before with gazillions of JDT UI errors, so I've assumed it is OK, which is not.

=> will revert last change via https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/484","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZUghp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZXJQh,eclipse.jdt.ui,1499239457,484,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-04-06T15:17:44Z,2023-04-06T15:17:44Z,"This is the arguments file that the javadoc command executes:
```
-quiet
-encoding ""UTF-8""
-charset ""UTF-8""
-sourcepath ""../../../eclipse.jdt.core/org.eclipse.jdt.annotation/src:../../../eclipse.jdt.core/org.eclipse.jdt.core.compiler.batch/src:../../../eclipse.jdt.core/org.eclipse.jdt.apt.core/src:../../../eclipse.jdt.core/org.eclipse.jdt.core/antadapter:../../../eclipse.jdt.core/org.eclipse.jdt.core/codeassist:../../../eclipse.jdt.core/org.eclipse.jdt.core/compiler:../../../eclipse.jdt.core/org.eclipse.jdt.core/dom:../../../eclipse.jdt.core/org.eclipse.jdt.core/eval:../../../eclipse.jdt.core/org.eclipse.jdt.core/formatter:../../../eclipse.jdt.core/org.eclipse.jdt.core/model:../../../eclipse.jdt.core/org.eclipse.jdt.core/search:../../../eclipse.jdt.debug/org.eclipse.jdt.debug/eval:../../../eclipse.jdt.debug/org.eclipse.jdt.debug/jdi:../../../eclipse.jdt.debug/org.eclipse.jdt.debug/model:../../../eclipse.jdt.debug/org.eclipse.jdt.debug.ui/ui:../../../eclipse.jdt.debug/org.eclipse.jdt.launching/launching:../../../eclipse.jdt.ui/org.eclipse.jdt.core.manipulation/common:../../../eclipse.jdt.ui/org.eclipse.jdt.core.manipulation/refactoring:../../../eclipse.jdt.ui/org.eclipse.jdt.junit/src:../../../eclipse.jdt.ui/org.eclipse.jdt.junit.core/src:../../../eclipse.jdt.ui/org.eclipse.jdt.junit.runtime/src:../../../eclipse.jdt.ui/org.eclipse.jdt.junit4.runtime/src:../../../eclipse.jdt.ui/org.eclipse.jdt.junit5.runtime/src:../../../eclipse.jdt.ui/org.eclipse.jdt.ui/core extension:../../../eclipse.jdt.ui/org.eclipse.jdt.ui/core refactoring:../../../eclipse.jdt.ui/org.eclipse.jdt.ui/internal compatibility:../../../eclipse.jdt.ui/org.eclipse.jdt.ui/ui:../../../eclipse.jdt.ui/org.eclipse.jdt.ui/ui refactoring:../../../eclipse.platform/ant/org.eclipse.ant.launching/src:../../../eclipse.platform/ant/org.eclipse.ant.ui/Ant Editor:../../../eclipse.platform/ant/org.eclipse.ant.ui/Ant Tools Support""
-d reference/api
-classpath ${bootclasspath}:target/dependency/org.apache.ant-1.10.12.v20211102-1452-lib/ant.jar.jar:target/dependency/org.junit-4.13.2.v20211018-1956.jar:target/dependency/icu4j-72.1.jar:target/dependency/org.osgi.service.prefs-1.1.2.jar:target/dependency/org.osgi.service.event-1.4.1.jar:target/dependency/org.osgi.service.cm-1.6.1.jar:../../../rt.equinox.framework/bundles/org.eclipse.osgi/supplement/target/classes:../../../eclipse.jdt.core/org.eclipse.jdt.apt.core/mirrorapi.jar:../../../eclipse.jdt.debug/org.eclipse.jdt.debug/jdi.jar:../../../eclipse.jdt.ui/org.eclipse.jdt.core.manipulation/target/classes:../../../eclipse.jdt.ui/org.eclipse.jdt.junit/target/classes:../../../eclipse.jdt.ui/org.eclipse.jdt.junit.core/target/classes:../../../eclipse.jdt.ui/org.eclipse.ltk.core.refactoring/target/classes:../../../eclipse.jdt.ui/org.eclipse.ltk.ui.refactoring/target/classes:../../../eclipse.platform/ant/org.eclipse.ant.core/target/classes:../../../eclipse.platform.debug/org.eclipse.core.externaltools/target/classes:../../../eclipse.platform.debug/org.eclipse.core.variables/target/classes:../../../eclipse.platform.debug/org.eclipse.debug.core/target/classes:../../../eclipse.platform.debug/org.eclipse.debug.ui/target/classes:../../../eclipse.platform.debug/org.eclipse.ui.console/target/classes:../../../eclipse.platform.debug/org.eclipse.ui.externaltools/target/classes:../../../eclipse.platform/resources/bundles/org.eclipse.core.filesystem/target/classes:../../../eclipse.platform/resources/bundles/org.eclipse.core.resources/target/classes:../../../eclipse.platform/runtime/bundles/org.eclipse.core.contenttype/target/classes:../../../eclipse.platform/runtime/bundles/org.eclipse.core.expressions/target/classes:../../../eclipse.platform/runtime/bundles/org.eclipse.core.jobs/target/classes:../../../eclipse.platform/runtime/bundles/org.eclipse.core.runtime/target/classes:../../../eclipse.platform/runtime/bundles/org.eclipse.core.runtime.content/target/classes:../../../eclipse.platform/runtime/bundles/org.eclipse.core.runtime.jobs/target/classes:../../../eclipse.platform/runtime/bundles/org.eclipse.core.runtime.preferences/target/classes:../../../eclipse.platform.swt.binaries/bundles/org.eclipse.swt.win32.win32.x86_64/target/classes:../../../eclipse.platform/team/bundles/org.eclipse.compare/target/classes:../../../eclipse.platform/team/bundles/org.eclipse.compare.core/target/classes:../../../eclipse.platform/team/bundles/org.eclipse.team.core/target/classes:../../../eclipse.platform/team/bundles/org.eclipse.team.ui/target/classes:../../../eclipse.platform.text/org.eclipse.core.filebuffers/target/classes:../../../eclipse.platform.text/org.eclipse.jface.text/target/classes:../../../eclipse.platform.text/org.eclipse.search/target/classes:../../../eclipse.platform.text/org.eclipse.text/target/classes:../../../eclipse.platform.text/org.eclipse.ui.editors/target/classes:../../../eclipse.platform.text/org.eclipse.ui.workbench.texteditor/target/classes:../../../eclipse.platform.ua/org.eclipse.help/target/classes:../../../eclipse.platform.ua/org.eclipse.help.ui/target/classes:../../../eclipse.platform.ui/bundles/org.eclipse.core.commands/target/classes:../../../eclipse.platform.ui/bundles/org.eclipse.jface/target/classes:../../../eclipse.platform.ui/bundles/org.eclipse.ui/target/classes:../../../eclipse.platform.ui/bundles/org.eclipse.ui.forms/target/classes:../../../eclipse.platform.ui/bundles/org.eclipse.e4.ui.ide/target/classes:../../../eclipse.platform.ui/bundles/org.eclipse.ui.ide/target/classes:../../../eclipse.platform.ui/bundles/org.eclipse.ui.navigator/target/classes:../../../eclipse.platform.ui/bundles/org.eclipse.ui.views/target/classes:../../../eclipse.platform.ui/bundles/org.eclipse.ui.workbench/target/classes:../../../equinox/bundles/org.eclipse.equinox.app/target/classes:../../../equinox/bundles/org.eclipse.equinox.common/target/classes:../../../equinox/bundles/org.eclipse.equinox.bidi/target/classes:../../../equinox/bundles/org.eclipse.equinox.preferences/target/classes:../../../equinox/bundles/org.eclipse.equinox.registry/target/classes:../../../equinox/bundles/org.eclipse.osgi/target/classes:../../../equinox/bundles/org.eclipse.osgi.services/target/classes:../../../equinox/bundles/org.eclipse.osgi.util/target/classes:../../../rt.equinox.p2/bundles/org.eclipse.equinox.frameworkadmin/target/classes
-breakiterator
-use
-splitIndex
-windowtitle ""Eclipse JDT API Specification""
-doctitle ""Eclipse JDT API Specification""
-header ""<span style='font-size:small'><b>Eclipse JDT</b><br>2023-06 (4.28)</span>""
-bottom ""<br><span style='font-size:small;float:right'>Copyright (c) 2000, 2023 Eclipse Contributors and others. All rights reserved.</span><span style='font-size:small'><a href='{@docRoot}/../misc/api-usage-rules.html'>Guidelines for using Eclipse APIs.</a></span>""
-group ""Java development tools core packages"" ""org.eclipse.jdt.core:org.eclipse.jdt.core.*""
-group ""Java development tools UI packages"" ""org.eclipse.jdt.ui:org.eclipse.jdt.ui.*""
-group ""Java development tools APT packages"" ""org.eclipse.jdt.apt.core:org.eclipse.jdt.apt.core.*:com.sun.mirror.*""
-group ""Java development tools debug and launching packages"" ""org.eclipse.ant.launching:org.eclipse.ant.ui.launching:org.eclipse.jdt.debug.*:org.eclipse.jdt.launching:org.eclipse.jdt.launching.*""
-group ""Java development tools JUnit packages"" ""org.eclipse.jdt.junit:org.eclipse.jdt.junit.*""
-link https://docs.oracle.com/en/java/javase/17/docs/api
-link https://docs.osgi.org/javadoc/osgi.core/8.0.0/
-link https://docs.osgi.org/javadoc/osgi.enterprise/7.0.0/
-linkoffline ./../../../org.eclipse.platform.doc.isv/reference/api ../org.eclipse.platform.doc.isv/reference/api
-tag 'noimplement:a:Restriction:'
-tag 'noextend:a:Restriction:'
-tag 'noreference:a:Restriction:'
-tag 'noinstantiate:a:Restriction:'
-tag 'nooverride:a:Restriction:'
-tag 'category:a:Category:'
-Xdoclint:reference,html
-Xmaxwarns 10000
-Xmaxerrs 10000
-notimestamp

org.eclipse.jdt.annotation

org.eclipse.jdt.core
org.eclipse.jdt.core.compiler
org.eclipse.jdt.core.compiler.batch
org.eclipse.jdt.core.dom
org.eclipse.jdt.core.dom.rewrite
org.eclipse.jdt.core.eval
org.eclipse.jdt.core.formatter
org.eclipse.jdt.core.index
org.eclipse.jdt.core.jdom
org.eclipse.jdt.core.manipulation
org.eclipse.jdt.core.refactoring
org.eclipse.jdt.core.refactoring.descriptors
org.eclipse.jdt.core.refactoring.participants
org.eclipse.jdt.core.search
org.eclipse.jdt.core.util

org.eclipse.jdt.ui
org.eclipse.jdt.ui.actions
org.eclipse.jdt.ui.cleanup
org.eclipse.jdt.ui.dialogs
org.eclipse.jdt.ui.jarpackager
org.eclipse.jdt.ui.refactoring
org.eclipse.jdt.ui.search
org.eclipse.jdt.ui.text
org.eclipse.jdt.ui.text.folding
org.eclipse.jdt.ui.text.java
org.eclipse.jdt.ui.text.java.correction
org.eclipse.jdt.ui.text.java.hover
org.eclipse.jdt.ui.wizards

com.sun.mirror.apt
com.sun.mirror.declaration
com.sun.mirror.type
com.sun.mirror.util
org.eclipse.jdt.apt.core.build
org.eclipse.jdt.apt.core.env
org.eclipse.jdt.apt.core.util

org.eclipse.ant.launching
org.eclipse.ant.ui.launching
org.eclipse.jdt.debug.core
org.eclipse.jdt.debug.eval
org.eclipse.jdt.debug.ui
org.eclipse.jdt.debug.ui.actions
org.eclipse.jdt.debug.ui.breakpoints
org.eclipse.jdt.debug.ui.launchConfigurations
org.eclipse.jdt.launching
org.eclipse.jdt.launching.environments
org.eclipse.jdt.launching.sourcelookup
org.eclipse.jdt.launching.sourcelookup.advanced
org.eclipse.jdt.launching.sourcelookup.containers

org.eclipse.jdt.junit
org.eclipse.jdt.junit.launcher
org.eclipse.jdt.junit.model
org.eclipse.jdt.junit.wizards
```

And with exact that list in my local SDK build directory tree I don't see any errors.

BUT!

If I change `:../../../eclipse.platform.debug/org.eclipse.core.externaltools/target/classes:`  to  `:../../../eclipse.platform.debug/org.eclipse.core.externaltools/target/classesXXX:`

I see exact the error we see on the ""official"" build: 

```
cd eclipse.platform.releng.aggregator/eclipse.platform.common/bundles/org.eclipse.jdt.doc.isv

/usr/lib/jvm/jdk-17_adoptium/bin/javadoc @/data/git/eclipse.platform.common/bundles/org.eclipse.jdt.doc.isv/argsfile1.txt -J-Xmx1000M
../../../eclipse.platform/ant/org.eclipse.ant.launching/src/org/eclipse/ant/launching/IAntLaunchConstants.java:17: error: package org.eclipse.core.externaltools.internal does not exist
import org.eclipse.core.externaltools.internal.IExternalToolConstants;
                                              ^
1 error
```

What is really strange, because the externaltools/target/classes directory IS there **after** SDK build and the classpath I've extracted from ant log file works **after** the build but not **during** the build.

*And in fact, it looks like the externaltools are compiled **after** we build javadocs!!!*

I see this output AFTER the build fails!
```
[INFO] --------< org.eclipse.platform:org.eclipse.core.externaltools >---------
[INFO] Building [bundle] External Tools Headless Support 1.3.0-SNAPSHOT [159/520]
[INFO] ---------------------------[ eclipse-plugin ]---------------------------
[INFO] Resolving dependencies of MavenProject: org.eclipse.platform:org.eclipse.core.externaltools:1.3.0-SNAPSHOT @
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZXJQh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZXLYE,eclipse.jdt.ui,1499248132,484,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-04-06T15:24:31Z,2023-04-06T15:24:31Z,"And here is the order that maven prints at beginning:
```
[INFO] Reactor Build Order:
...
[INFO] org.eclipse.platform.doc.isv                            [eclipse-plugin]
[INFO] org.eclipse.jdt.doc.isv                                 [eclipse-plugin]
[INFO] org.eclipse.jdt.debug.ui                                [eclipse-plugin]
[INFO] org.eclipse.jdt.apt.pluggable.core                      [eclipse-plugin]
[INFO] org.eclipse.jdt.doc.user                                [eclipse-plugin]
[INFO] [bundle] External Tools Headless Support                [eclipse-plugin]
```

Note: javadoc requires **built** code of external tools bundle that is compiled **after** javadoc bundles.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZXLYE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZXMcr,eclipse.jdt.ui,1499252523,484,NA,laeubi,1331477,Christoph Läubrich,,NA,2023-04-06T15:27:56Z,2023-04-06T15:27:56Z,If `org.eclipse.jdt.doc.isv` requires `org.eclipse.core.externaltools` to be build before it should at best mention this as an additional dependency.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZXMcr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZXNlQ,eclipse.jdt.ui,1499257168,484,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-04-06T15:31:33Z,2023-04-06T15:31:33Z,"So was there a tycho / maven change that changed the order of dependencies?
I don't see **any** of many dependencies the javadoc requires defined in eclipse.platform.common/bundles/org.eclipse.jdt.doc.isv/META-INF/MANIFEST.MF","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZXNlQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZXQj1,eclipse.jdt.ui,1499269365,484,NA,laeubi,1331477,Christoph Läubrich,,NA,2023-04-06T15:41:28Z,2023-04-06T15:41:28Z,"You see additional dependencies are defined here:
https://github.com/eclipse-platform/eclipse.platform.common/blob/master/bundles/org.eclipse.jdt.doc.isv/pom.xml

if there is no dependency, this means the project can be build any time before/after or even in parallel. Also if I understand one needs to ""touch"" files to have things changed, so maybe this problem exits longer but was not noticed, or some dependency changed and the order changed therefore slightly...","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZXQj1/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZXSYx,eclipse.jdt.ui,1499276849,484,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-04-06T15:47:20Z,2023-04-06T15:47:20Z,"I've set https://github.com/eclipse-platform/eclipse.platform.common/pull/136 that adds this dependency.

But thinking more, **all** of the bundles we refer via target/classes, starting with [this line](https://github.com/eclipse-platform/eclipse.platform.common/blob/d44d20bc3e1e802f8a16555d09fe9d9153b03597/bundles/org.eclipse.jdt.doc.isv/jdtOptions.txt#L46) should be on the pom file dependencies list? 
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZXSYx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZXY7E,eclipse.jdt.ui,1499303620,484,NA,laeubi,1331477,Christoph Läubrich,,NA,2023-04-06T16:07:26Z,2023-04-06T16:07:26Z,"> But thinking more, all of the bundles we refer via target/classes, starting with [this line](https://github.com/eclipse-platform/eclipse.platform.common/blob/d44d20bc3e1e802f8a16555d09fe9d9153b03597/bundles/org.eclipse.jdt.doc.isv/jdtOptions.txt#L46) should be on the pom file dependencies list?

At best yes... I have investigated about the details how this works and think it can also work on the compiles jars, but currently it all very specific to a workspace, and compiled class files in a folder, I hope to find some time to optimize here and move stuff from ant->maven but that probably will be more ongoing work than happening tomorrow.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZXY7E/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Zajmr,eclipse.jdt.ui,1500133803,484,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-04-07T09:54:08Z,2023-04-07T09:54:08Z,Fixed with https://download.eclipse.org/eclipse/downloads/drops4/I20230407-0200/testResults.php,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Zajmr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/484,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZlChW,eclipse.jdt.ui,1502881878,484,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-04-11T08:11:09Z,2023-04-11T08:11:09Z,Note: I've added more dependencies to maven via https://github.com/eclipse-platform/eclipse.platform.common/pull/139,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZlChW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/487,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/487,eclipse.jdt.ui,1633319811,487,[20] Remove beta and disclaimers from copyright notes and UI,noopur2507,8749449,Noopur Gupta,,CLOSED,2023-03-21T06:47:34Z,2023-03-22T08:53:35Z,Remove beta and disclaimers from copyright notes and UI.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/487/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/489,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/489,eclipse.jdt.ui,1633327509,489,[20] Increase bundle versions for BETA_JAVA20 changes,noopur2507,8749449,Noopur Gupta,,CLOSED,2023-03-21T06:56:46Z,2023-03-22T08:53:18Z," Increase bundle versions for BETA_JAVA20 Changes.

Also, revert running Gerrit builds for JDT UI BETA_JAVA20 branch with latest Y-build.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/489/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/492,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/492,eclipse.jdt.ui,1634345178,492,Javadoc View Inconsistent with javadoc:javadoc,watuwo,83006066,,,OPEN,2023-03-21T16:56:39Z,2023-03-21T16:56:39Z,"Consider the Java file ""Cat.java"":

```java
package org.foo.bar;

/**
 * This class defines the representation of a \uD83D\uDC08.
 */
public class Cat {}
```

In the ""Javadoc"" View (a tab in the Eclipse IDE next to ""Problems"", ""Declaration"" and ""Console"") I see:

> This class defines the representation of a \uD83D\uDC08.

When I run the `clean compile javadoc:javadoc` Maven goals (Right click on project > Run As > Maven build...; add `JAVA_HOME`: ""/Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home/""; specify goals; run) I get:

> This class defines the representation of a 🐈.

Shouldn't Eclipse's ""Javadoc"" View and `javadoc:javadoc` render the comment in the same way?

---

Note: I first reported this at https://github.com/eclipse-platform/.github/issues/106 and was told:

> Thanks for this report.
> The Javadoc view is provided by the JDT sub-project. We cannot transfer issues to the eclipse-jdt organization, so can you please re-report it to https://github.com/eclipse-jdt/eclipse.jdt.ui/ ?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/492/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/493,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/493,eclipse.jdt.ui,1635287330,493,Update bundles to Java 17,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2023-03-22T08:35:28Z,2023-03-23T18:30:15Z,"There are many bundles in platform which require now Java 17 and so we have bundles that depend on those but still running with Java 11 settings.

We should change that and bump bundle settings / versions etc.

I plan to provide changes, once  BETA_JAVA20 branch is merged to master.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/493/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/493,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YKWFt,eclipse.jdt.ui,1479106925,493,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-22T08:36:53Z,2023-03-22T08:36:53Z,"@mpalat, @jarthana : I assume you plan to merge BETA_JAVA20 branch soon? Do you have concrete plans when you want merge it?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YKWFt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/494,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/494,eclipse.jdt.ui,1635302528,494,[20] Refactoring of Record pattern variable not working,mpalat,4507939,Manoj  N Palat,manoj.palat@in.ibm.com,CLOSED,2023-03-22T08:45:19Z,2023-03-22T10:18:52Z,"import java.util.ArrayList;
import java.util.List;

@SuppressWarnings(""preview"")
public class X {
	
	public static void foo(List<R> rList) {
		for (R(Integer abcd) : rList) { 
			System.out.println(abcd);  
		}
	}
	public static void main(String[] args) {
		List<R> rList = new ArrayList<>();
		rList.add(new R(1));
		rList.add(new R(2));
		foo(rList);
	}
}
record R(Integer i) {}

Try refactor-> rename of abcd, this does not work. 
For initial investigation from ui perspective [may come back to core]

maybe due to https://github.com/eclipse-jdt/eclipse.jdt.core/issues/884","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/494/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/494,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YKZM9,eclipse.jdt.ui,1479119677,494,NA,mpalat,4507939,Manoj  N Palat,manoj.palat@in.ibm.com,NA,2023-03-22T08:45:55Z,2023-03-22T08:45:55Z,"Adding a note that the search for references of ""abcd"" works","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YKZM9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/494,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YLAZ9,eclipse.jdt.ui,1479280253,494,NA,mpalat,4507939,Manoj  N Palat,manoj.palat@in.ibm.com,NA,2023-03-22T10:18:41Z,2023-03-22T10:18:41Z,"duplicate of 884, closing","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5YLAZ9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/501,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/501,eclipse.jdt.ui,1646007477,501,Code mining shouldn't format the line until the cursor is moved away,danibs,30932554,,,OPEN,2023-03-29T15:03:29Z,2023-04-07T14:24:13Z,"Hi,
I report here what is described in https://github.com/eclipse-platform/eclipse.platform.ui/issues/667 .
_mickaelistria_ suggest to do that.

When you start modify a line of code with mining active, che line is continually formatted just after a millisecond you stop to digit:

![immagine](https://user-images.githubusercontent.com/30932554/228581723-43d2f170-91a7-46b2-b005-92068102a583.png)

Is very stressful and useless in that way.
Thanks


Spring Tool Suite 4 
Version: 4.17.2.RELEASE
Build Id: 202301310704
Revision: 4c43862ec9482cb5c289960e5514998e59d2f1fe
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/501/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/504,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/504,eclipse.jdt.ui,1646778417,504,"Mouse hover cannot prompt for import,but ,ctrl+shift+o is ok.",1083,65584187,1083,,CLOSED,2023-03-30T01:49:46Z,2023-03-31T18:01:44Z,"Mouse hover cannot prompt for import,but ,ctrl+shift+o is ok.
ECLIPSE VER:2023-03
for example: 	ObjectMapper objectMapper = new ObjectMapper();
![ec](https://user-images.githubusercontent.com/65584187/228709212-aacea669-412a-489f-b568-a0cfd5ed1d26.JPG)
![bug1](https://user-images.githubusercontent.com/65584187/228709815-c59fd966-80e6-45f6-a58c-19fa4f447e55.JPG)
![but2](https://user-images.githubusercontent.com/65584187/228709824-2e28cc0e-d411-449d-8b66-9b0ce9f2a1b7.JPG)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/504/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/504,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Y9A7j,eclipse.jdt.ui,1492389603,504,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-03-31T18:01:43Z,2023-03-31T18:01:43Z,This is a duplicate of: https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/485 which was a regression in 2023-03.  The problem has been fixed and will be part of the 4.28 M1 milestone which will be released soon.  It is already in current I-builds.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Y9A7j/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/505,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/505,eclipse.jdt.ui,1649235996,505,"Contribute to ""onboarding"" extension in Java perspective",iloveeclipse,964108,Andrey Loskutov,,CLOSED,2023-03-31T12:01:31Z,2023-04-04T08:20:46Z,"See https://github.com/eclipse-platform/eclipse.platform.ui/issues/633 and changes to ""Resources"" perspective https://github.com/eclipse-platform/eclipse.platform.ui/pull/676.

It make sense to add exact same things what is contributed to ""Resources"" perspective **plus** ""Open Type"" command ""Ctrl+Shift+T"".","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/505/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/505,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Y7HMY,eclipse.jdt.ui,1491890968,505,NA,BeckerWdf,28338612,Matthias Becker,ma.becker@sap.com,NA,2023-03-31T13:00:37Z,2023-03-31T13:00:37Z,"I agree but the icon should be the Java perspective icon not the same that is used in the Resource perspective.
If you like I can provide SVG and PNGs for that.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Y7HMY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/505,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Y7KNC,eclipse.jdt.ui,1491903298,505,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-31T13:09:22Z,2023-03-31T13:09:22Z,"> If you like I can provide SVG and PNGs for that.

Yes, please.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Y7KNC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/506,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/506,eclipse.jdt.ui,1649274900,506,[4.26+] ClassFileEditor loses icon,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2023-03-31T12:30:19Z,2023-03-31T13:49:11Z,"- Make sure ""Reuse editors to show search matches"" is enabled 
![image](https://user-images.githubusercontent.com/964108/229118965-74709ddb-6646-448c-83a4-136090b3993e.png)
- Open java.util.Random type
- Click on the name and ""Search for References""
- In the Search view, just open few types that refer to ""Random""
- First match opened in the editor tab **with an icon**
- **Second** and each other match is shown in the same editor **without** the icon n the tab:
![image](https://user-images.githubusercontent.com/964108/229120334-3bdaba07-9602-49be-96fe-43057cab7dc2.png)


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/506/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/506,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Y7AWY,eclipse.jdt.ui,1491862936,506,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-31T12:36:08Z,2023-03-31T12:36:08Z,"Note: I couldn't see same effect if the search has a match in sources that would open ""usual"" CompilationUnitEditor, therefore I assume this is something specific to ClassFileEditor. I could be of course wrong and it could be some weird platform regression.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Y7AWY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/506,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Y7G7V,eclipse.jdt.ui,1491889877,506,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-31T12:59:44Z,2023-03-31T12:59:44Z,"OK, this works as expected in 4.25 but doesn't work in 4.26, so not a recent regression.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Y7G7V/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/506,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Y7W3u,eclipse.jdt.ui,1491955182,506,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-03-31T13:49:10Z,2023-03-31T13:49:10Z,"OK, that is a platform issue => https://github.com/eclipse-platform/eclipse.platform.ui/issues/679","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Y7W3u/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/508,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/508,eclipse.jdt.ui,1650317459,508,"Confusing ""No JRE"" in search header",ewillink,841933,Ed Willink,,OPEN,2023-04-01T06:00:34Z,2024-09-17T06:13:18Z,"https://bugs.eclipse.org/bugs/show_bug.cgi?id=365860 reported confusion with the ""No JRE"" comment at the end of Java searches.

This is now much more confusing since the text certainly implies a problem rather than a description.

I encountered a similar problem of no matches. (It eventually went away after a clean-all restart clean-all. It was as if a filter had been applied to the particular plugin that should have been giving results.) Since the problem occurred on a re-built Windows laptop the suggestion of a bad classpath seemed plausible, so I searched hard and spotted ""no JRE"" and Googling highlighted the observations that Java 11 onwards has no JRE, so I wasted a lot of time trying OpenJDK and then trying to overlay a JRE in traditional fashion. Complete waste of time of course caused by the very misleading message.

Please change to perhaps ""omitting JRE"" that is clearly descriptive rather than the imperative ""no JRE"".","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/508/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/509,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/509,eclipse.jdt.ui,1650825655,509,"Don't add closing quote after """""" if string blocks are available",trancexpress,24752155,Simeon Andreev,,CLOSED,2023-04-02T06:27:42Z,2023-04-11T18:35:47Z,"When I type `""` this results in `""""` in most cases. When I type `""` directly after a `""""`, this results in `""""""""""` - one quote too many for the start of a string block. So each time I want to start a string block, I have to fight the editor.

https://user-images.githubusercontent.com/24752155/229336347-7592fe7f-54bf-440f-b597-74bef7118da2.mp4

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/509/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/509,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZNuJU,eclipse.jdt.ui,1496769108,509,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-04-05T00:33:36Z,2023-04-05T00:33:36Z,The failure occurs if the two quotes are on a new line.  I have posted a patch.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZNuJU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/510,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/510,eclipse.jdt.ui,1652258501,510,Externalize AST and Java Element view names,noopur2507,8749449,Noopur Gupta,,CLOSED,2023-04-03T15:06:31Z,2023-04-03T15:41:06Z,Externalize AST and Java Element view names.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/510/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/571,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/571,eclipse.jdt.ui,1700611233,571,Call Hierarchy for Record components does not work,JanecekPetr,1746404,Petr Janeček,,CLOSED,2023-04-04T14:42:21Z,2023-05-12T18:48:34Z,"Using eclipse 2023-03 and Java 17 on an M1 Pro Mac with the provided JustJ 17:

1. The Call Hierarchy only works for Record components _when the record definition is in the same file as the caller_. Otherwise it does not show up at all.

    Different files:
![image](https://user-images.githubusercontent.com/1746404/229822892-b53aa604-9cb0-4ce0-ba24-d4223b832f46.png)

    Same file (it does not matter if the record is nested or a sibling, it shows up every time):
![image](https://user-images.githubusercontent.com/1746404/229823537-b87de155-a46b-4d99-b598-e69edbc5253a.png)

2. (Edit: Separated into an another ticket.) ~~Currently the Outline view does not show the record component accessor methods. I tried unticking the Synthetic members, does not make a difference. This is annoying because normally I have fields filtered out and only see methods which is now not possible for records.~~
    ~~Also I thought using Call Hierarchy on the methods might help, but they're not available at all. Maybe this is somehow related? I imagine the component accessors are special methods which circumvent the normal eclipse way of tracking things?~~

If these two things are completely unrelated, I'm happy to split this ticket into two.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/571/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/571,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bt0Q3,eclipse.jdt.ui,1538737207,571,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-04-04T14:49:50Z,2023-04-04T14:49:50Z,"Can reproduce using master.
Here the code to play with:
```
public record Car(int wheels) {
	public static void main(){
		System.out.println(new Car(0).wheels());
	}
}
```

```
public class Foo {
	void foo(Car c) {
		var wheels = c.wheels();
		System.out.println(wheels);
	}
}
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bt0Q3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/571,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bt0Q9,eclipse.jdt.ui,1538737213,571,NA,trancexpress,24752155,Simeon Andreev,,NA,2023-04-04T15:06:17Z,2023-04-04T15:06:17Z,"> Can reproduce using master. Here the code to play with:

What are you selecting and what isn't shown? For this example I see a call hierarchy as expected. Both when the 2 types are defined in the same file and when they are defined in separate files.

![jdtui_gh513](https://user-images.githubusercontent.com/24752155/229835836-f8490f9b-e178-4a44-834b-bdd3a2597010.png)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bt0Q9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/571,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bt0RD,eclipse.jdt.ui,1538737219,571,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-04-04T15:11:25Z,2023-04-04T15:11:25Z,"> What are you selecting and what isn't shown?

We are talking about the calls to **synthetic** method `wheels()` that aren't found **outside** of current record file.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bt0RD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/571,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bt0RK,eclipse.jdt.ui,1538737226,571,NA,JanecekPetr,1746404,Petr Janeček,,NA,2023-04-04T15:11:49Z,2023-04-04T15:11:49Z,"> I see a call hierarchy as expected

Oh interesting, using this code specifically (in different files) I can see it too! Now delete the code in Car (the `main` method), only leave the component declaration. Then it stops working.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bt0RK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/571,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bt0RT,eclipse.jdt.ui,1538737235,571,NA,trancexpress,24752155,Simeon Andreev,,NA,2023-04-04T15:17:36Z,2023-04-04T15:17:36Z,"> Oh interesting, using this code specifically (in different files) I can see it too! Now delete the code in Car (the `main` method), only leave the component declaration. Then it stops working.

Like this seems to work too?

![jdtui_gh513_2](https://user-images.githubusercontent.com/24752155/229839020-5129233e-ee3a-4509-ac93-aaded51ef6e7.png)

Can you paste the code from your screenshot to save some typing?
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bt0RT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/571,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bt0RX,eclipse.jdt.ui,1538737239,571,NA,JanecekPetr,1746404,Petr Janeček,,NA,2023-04-04T15:27:12Z,2023-04-04T15:27:12Z,"Exactly like this, but in separate files:

`Car.java`:
```
public record Car(int wheels) {}
```

and then `Foo.java`:
```
public class Foo {
    void foo(Car c) {
        var wheels = c.wheels();
        System.out.println(wheels);
    }
}
```

This way my Call Hierarchy view stays empty. It does not matter whether I click the component declaration in code or the element in Outline view.

...interestingly enough now even with 
```
public record Car(int wheels) {
    public static void main(){
        System.out.println(new Car(0).wheels());
    }
}
```

I only see the reference in the Car file, not the one in Foo:
![image](https://user-images.githubusercontent.com/1746404/229841241-20877c77-f500-404f-b623-ab0603d272b8.png)

...so there is already a difference between our two versions.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bt0RX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/571,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bt0Rd,eclipse.jdt.ui,1538737245,571,NA,trancexpress,24752155,Simeon Andreev,,NA,2023-04-04T15:59:08Z,2023-04-04T15:59:08Z,"Seems to be working in the workspace where I normally check for search bugs. In a fresh workspace I see the problem. Odd, since I tried rebuilding the indexing multiple times (I was checking if maybe some new change fixed the problem).

Anyway we probably want this moved to JDT core, I doubt JDT UI can provide a fix here. The search code is in JDT core.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bt0Rd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/571,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bt0Rj,eclipse.jdt.ui,1538737251,571,NA,trancexpress,24752155,Simeon Andreev,,NA,2023-04-04T16:06:12Z,2023-04-04T16:06:12Z,"Interesting, limiting the search scope to the project results in finding matches (I was using that to test searching for JRE types). When using the workspace search scope, nothing is found.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bt0Rj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/571,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bt0Rq,eclipse.jdt.ui,1538737258,571,NA,trancexpress,24752155,Simeon Andreev,,NA,2023-05-08T15:29:47Z,2023-05-08T15:29:47Z,"Seems to be due to `JdtFlags.isPrivate(IMember)` determining the record field is private, and so `CallerMethodWrapper.getAccurateSearchScope()` deciding that the search will be done only in the source for the record.

For the project scope there are slight differences in execution, that result in the  correct search scope. Should be irrelevant for the bug here.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bt0Rq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/571,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bt0R0,eclipse.jdt.ui,1538737268,571,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-05-08T15:34:53Z,2023-05-08T15:34:53Z,"I wonder if we can relax that if
1) the type is a record
2) the private field is final and has matching public synthetic member","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bt0R0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/571,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5buFcc,eclipse.jdt.ui,1538807580,571,NA,trancexpress,24752155,Simeon Andreev,,NA,2023-05-08T18:03:27Z,2023-05-08T18:03:27Z,"> 2\. the private field is final and has matching public synthetic member

I'm not sure how to do this. And which case it should cover?
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5buFcc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/517,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/517,eclipse.jdt.ui,1655624852,517,Create new Java Project Wizard too small,jukzi,51790620,Jörg Kubitz,,CLOSED,2023-04-05T13:29:37Z,2023-04-17T20:35:47Z,"With long JDK names (like ""openjdk.jdk17.win32.x86_64_1.17.0.006-010"") the Wizard becomes to small by default.
![image](https://user-images.githubusercontent.com/51790620/230092581-9bb64326-c475-4999-9526-714a6c0e76d2.png)
![image](https://user-images.githubusercontent.com/51790620/230094351-53ec346b-30c6-4ebf-bae4-1ddaf8eecc8e.png)
![image](https://user-images.githubusercontent.com/51790620/230093058-3040bf05-753c-4727-a8ce-3c5c43c73b4b.png)

in this case a width of 855px would be enough to not scroll:
![image](https://user-images.githubusercontent.com/51790620/230095208-36f6547c-0209-4317-ad0b-0e3d2506a686.png)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/517/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/517,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Z84RF,eclipse.jdt.ui,1509131333,517,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-04-14T19:40:15Z,2023-04-14T19:40:15Z,"![image](https://user-images.githubusercontent.com/1216877/232140188-29ff28d8-9365-4218-a8b0-cac95942d0d9.png)

I have reformatted the layout in a PR so that the JRE combos are considered 2 of 3 columns and the message with the long JRE name is also considered 2 of 3 columns.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Z84RF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/518,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/518,eclipse.jdt.ui,1656380979,518,Outline view does not show Record component accessors,JanecekPetr,1746404,Petr Janeček,,OPEN,2023-04-05T22:26:21Z,2023-05-08T17:07:24Z,"The Outline view does not show the record component accessor methods.

I tried unticking the Synthetic members, does not make a difference. This is annoying because normally I have fields filtered out and only see methods which is now not possible for records.

![obrazek](https://user-images.githubusercontent.com/1746404/230225249-cc187f06-0824-4cd1-b478-ef4b0da2204e.png)

```
public record Car(int wheelCount) {}
```

(This got separated from https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/571 which tried using Call Hierarchy on record components.)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/518/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/519,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/519,eclipse.jdt.ui,1657397152,519,Java Build Path : Adding an external jar in the `Libraries` tab changes the class path order in `Order and Export` tab,raghucssit,10301131,Raghunandana,,CLOSED,2023-04-06T13:07:16Z,2023-04-19T15:20:24Z,"Steps to reproduce:
1. Open properties of a java project and select `Java Build Path` tab on the left side panel.
2. Navigate to `Order and Export` tab observe that src and src1 entries are at the end of the list.
    
![order-before1](https://user-images.githubusercontent.com/10301131/230386046-19289260-06e6-4405-aec5-7969452377ad.png)

3. Navigate to `Libraries` tab and select `Add External JARs..`. Select any jar file from the file selection dialog.
  
![add-jar](https://user-images.githubusercontent.com/10301131/230386113-9295799e-b1bd-442c-8652-2a0efa88a804.PNG)
4. Now navigate back to `Order and Export` and observe that src and src1 entries have moved up.
  
![order-after](https://user-images.githubusercontent.com/10301131/230386376-27f844e9-d84e-445f-8bb7-d8aaba045237.png)
5. So far observed that only `src` folders move up in the list others remain unchanged. Expectation is newly added jar should be added to the end of the order and `src` folders should remain at their before position.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/519/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/519,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZWYiz,eclipse.jdt.ui,1499039923,519,NA,raghucssit,10301131,Raghunandana,,NA,2023-04-06T13:08:30Z,2023-04-06T13:08:30Z,@iloveeclipse FYI.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZWYiz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/521,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/521,eclipse.jdt.ui,1658490197,521,Backport issue 510,noopur2507,8749449,Noopur Gupta,,CLOSED,2023-04-07T07:44:41Z,2023-04-11T06:49:28Z,"Externalize AST and Java Element view names.

Backport https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/510 to R4_27_maintenance branch.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/521/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/521,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZknVw,eclipse.jdt.ui,1502770544,521,NA,noopur2507,8749449,Noopur Gupta,,NA,2023-04-11T06:49:27Z,2023-04-11T06:49:27Z,Done.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ZknVw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/522,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/522,eclipse.jdt.ui,1658859719,522,[code mining] code disappear,danibs,30932554,,,CLOSED,2023-04-07T14:22:41Z,2023-11-08T20:30:28Z,"Activating code mining sometime code disappear:

![immagine](https://user-images.githubusercontent.com/30932554/230624705-fd6d81a3-e41e-496e-bb06-999df29a5e6e.png)


Spring Tool Suite 4 
Version: 4.17.2.RELEASE
Build Id: 202301310704
Revision: 4c43862ec9482cb5c289960e5514998e59d2f1fe
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/522/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/522,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5oqBHB,eclipse.jdt.ui,1755845057,522,NA,agentgt,567706,Adam Gent,,NA,2023-10-10T16:48:23Z,2023-10-10T16:48:23Z,"I have this problem as well. I thought it was my theme and font color but when you scroll you can see the code mining.

Basically just like in your screen the last 5 or so lines closest to the bottom pane will render the code mining.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5oqBHB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/522,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5raHAR,eclipse.jdt.ui,1802006545,522,NA,xmichael91,51908948,,,NA,2023-11-08T14:32:11Z,2023-11-08T14:32:11Z,"Same for me, was fine in Eclipse 4.27.0 (JDT 3.19.0), but after I upgraded to Eclipse 4.29.0 (JDT 3.19.200) the Java Editor looks like this:

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51908948/b88b2f08-69a8-4c82-9dcf-932dd5a572db)


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5raHAR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/522,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5raPX6,eclipse.jdt.ui,1802040826,522,NA,agentgt,567706,Adam Gent,,NA,2023-11-08T14:49:57Z,2023-11-08T14:49:57Z,@danibs and @xmichael91 are you guys on macOS like me or something else?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5raPX6/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/522,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5raREy,eclipse.jdt.ui,1802047794,522,NA,xmichael91,51908948,,,NA,2023-11-08T14:53:31Z,2023-11-08T14:53:31Z,"@agentgt no, Windows. By the way, found the ""proper"" bug report and the solution mentioned there is to update to integration build, where the bug is fixed: https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/845","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5raREy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/522,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ragDQ,eclipse.jdt.ui,1802109136,522,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-11-08T15:21:33Z,2023-11-08T15:21:33Z,"Should be fixed in 4.30, please check latest build from https://download.eclipse.org/eclipse/downloads/","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ragDQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/522,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5rcYF-,eclipse.jdt.ui,1802600830,522,NA,danibs,30932554,,,NA,2023-11-08T20:27:05Z,2023-11-08T20:27:05Z,"> @danibs and @xmichael91 are you guys on macOS like me or something else?

Ubuntu.

I'm using:
Spring Tool Suite 4 

Version: 4.20.1.RELEASE
Build Id: 202310260003


I'll check in the next days.
Thanks!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5rcYF-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/522,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5rce8g,eclipse.jdt.ui,1802628896,522,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-11-08T20:30:28Z,2023-11-08T20:30:28Z,Closing as duplicate of https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/845,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5rce8g/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/525,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/525,eclipse.jdt.ui,1666629730,525,colorize wrong arguments in method XXX is not applicable for the arguments,weberjn,13678748,Jürgen Weber,,OPEN,2023-04-13T15:15:37Z,2023-04-13T15:15:37Z,"Eclipse should colorize the wrong arguments in the argument list, eg. in 
`The method dekodiereDaten(int, String, byte[], PointerByReference) in the type ApiLibrary is not applicable for the arguments (int,  String, String, PointerByReference)`

byte[] should be green and String red (or the chosen compare colors).

Especially with long argument lists the error message would be better understandable.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/525/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/527,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/527,eclipse.jdt.ui,1668524245,527,JavaDoc hover shows wrong contents,trancexpress,24752155,Simeon Andreev,,OPEN,2023-04-14T16:01:09Z,2023-04-14T16:01:23Z,"To reproduce:

1. import project from attached archive: [javadoc_hover_bug_reproducer.zip](https://github.com/eclipse-jdt/eclipse.jdt.ui/files/11234772/javadoc_hover_bug_reproducer.zip)
2. Open type `p.P52`.
3. Alternate hover over `P52` and `P1` at line 3, observe that eventually the hover at `P1` has wrong contents.

I ran into the bug with:

```
Eclipse SDK
Version: 2023-06 (4.28)
Build id: I20230404-0600
```

See screen recording: 

https://user-images.githubusercontent.com/24752155/232095979-786f950b-1033-4c0c-859d-fa49e1c592a6.mp4
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/527/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/528,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/528,eclipse.jdt.ui,1668772210,528,JavaDoc hover spawns a WebKit process per open tab on Linux ,trancexpress,24752155,Simeon Andreev,,CLOSED,2023-04-14T18:29:39Z,2023-05-10T08:30:22Z,"To reproduce, open many Java editors and hover on code from each editor. Observe many WebKit processes are spawned and running (one per editor tab). E.g.:

```
sandreev   25004   23553 52 13:36 pts/2    00:00:55 /usr/lib/jvm/java-17-openjdk/bin/java -XX:+ShowCodeDetailsInExceptionMessages -agentlib:jdwp=transport=dt_socket,suspend=y,address=localhost:41765 -Dorg.eclipse.swt.graphics.Resource.reportNonDisposed=true -Declipse.pde.launch=true --add-modules=ALL-SYSTEM -Djava.security.manager=allow -Dfile.encoding=UTF-8 -classpath /data/eclipses/eclipseSDK_428_m20230404/plugins/org.eclipse.equinox.launcher_1.6.400.v20210924-0641.jar org.eclipse.equinox.launcher.Main -launcher /data/eclipses/eclipseSDK_428_m20230404/eclipse -name Eclipse -showsplash 600 -product org.eclipse.platform.ide -data /data/workspaces/contributor_workspace/../runtime-Eclipse -configuration file:/data/workspaces/contributor_workspace/.metadata/.plugins/org.eclipse.pde.core/Eclipse/ -dev file:/data/workspaces/contributor_workspace/.metadata/.plugins/org.eclipse.pde.core/Eclipse/dev.properties -os linux -ws gtk -arch x86_64 -nl en_US -consoleLog
sandreev   25303   25004  0 13:37 pts/2    00:00:00 /usr/lib/webkit2gtk-4.0/WebKitNetworkProcess 8 129
sandreev   25309   25004  0 13:37 pts/2    00:00:00 /usr/lib/webkit2gtk-4.0/WebKitWebProcess 12 129
sandreev   25342   25004  0 13:37 pts/2    00:00:00 /usr/lib/webkit2gtk-4.0/WebKitWebProcess 20 145
sandreev   25374   25004  0 13:37 pts/2    00:00:00 /usr/lib/webkit2gtk-4.0/WebKitWebProcess 27 154
sandreev   25407   25004  0 13:37 pts/2    00:00:00 /usr/lib/webkit2gtk-4.0/WebKitWebProcess 34 157
sandreev   25435   25004  0 13:37 pts/2    00:00:00 /usr/lib/webkit2gtk-4.0/WebKitWebProcess 41 160
sandreev   25466   25004  0 13:37 pts/2    00:00:00 /usr/lib/webkit2gtk-4.0/WebKitWebProcess 48 163
sandreev   25490   25004  0 13:37 pts/2    00:00:00 /usr/lib/webkit2gtk-4.0/WebKitWebProcess 55 47
sandreev   25521   25004  0 13:37 pts/2    00:00:00 /usr/lib/webkit2gtk-4.0/WebKitWebProcess 62 169
sandreev   25550   25004  0 13:37 pts/2    00:00:00 /usr/lib/webkit2gtk-4.0/WebKitWebProcess 69 172
sandreev   25577   25004  0 13:37 pts/2    00:00:00 /usr/lib/webkit2gtk-4.0/WebKitWebProcess 76 175
sandreev   25605   25004  0 13:37 pts/2    00:00:00 /usr/lib/webkit2gtk-4.0/WebKitWebProcess 83 178
sandreev   25632   25004  0 13:37 pts/2    00:00:00 /usr/lib/webkit2gtk-4.0/WebKitWebProcess 90 181
sandreev   25657   25004  0 13:37 pts/2    00:00:00 /usr/lib/webkit2gtk-4.0/WebKitWebProcess 97 184
sandreev   25687   25004  0 13:37 pts/2    00:00:00 /usr/lib/webkit2gtk-4.0/WebKitWebProcess 104 187
sandreev   25712   25004  0 13:37 pts/2    00:00:00 /usr/lib/webkit2gtk-4.0/WebKitWebProcess 111 190
sandreev   25736   25004  0 13:37 pts/2    00:00:00 /usr/lib/webkit2gtk-4.0/WebKitWebProcess 118 193
sandreev   25760   25004  0 13:37 pts/2    00:00:00 /usr/lib/webkit2gtk-4.0/WebKitWebProcess 125 196
sandreev   25786   25004  0 13:37 pts/2    00:00:00 /usr/lib/webkit2gtk-4.0/WebKitWebProcess 132 199
sandreev   25834   25004  1 13:37 pts/2    00:00:00 /usr/lib/webkit2gtk-4.0/WebKitWebProcess 139 202
sandreev   25883   25004  1 13:37 pts/2    00:00:00 /usr/lib/webkit2gtk-4.0/WebKitWebProcess 146 205
sandreev   25908   25004  1 13:38 pts/2    00:00:00 /usr/lib/webkit2gtk-4.0/WebKitWebProcess 153 208
```

This doesn't scale well if the user continuously opens tabs, browses code, opens more tabs, and so on.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/528/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/528,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Z8m8p,eclipse.jdt.ui,1509060393,528,NA,trancexpress,24752155,Simeon Andreev,,NA,2023-04-14T18:29:49Z,2023-04-14T18:29:49Z,"Relevant code is in `org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.HoverControlCreator` and `org.eclipse.jface.internal.text.html.BrowserInformationControl`.

If I force (crudely) shared browsers from JDT, there are some painting artifacts:

```
diff --git a/org.eclipse.jdt.ui/ui/org/eclipse/jdt/internal/ui/text/java/hover/JavadocHover.java b/org.eclipse.jdt.ui/ui/org/eclipse/jdt/internal/ui/text/java/hover/JavadocHover.java
index 45f1cf8d9b..950b21c0ab 100644
--- a/org.eclipse.jdt.ui/ui/org/eclipse/jdt/internal/ui/text/java/hover/JavadocHover.java
+++ b/org.eclipse.jdt.ui/ui/org/eclipse/jdt/internal/ui/text/java/hover/JavadocHover.java
@@ -413,7 +413,7 @@ public class JavadocHover extends AbstractJavaEditorTextHover {
                        fAdditionalInfoAffordance= additionalInfoAffordance;
                }
 
-               private BrowserInformationControl iControl;
+               private static BrowserInformationControl iControl;
                /*
                 * @see org.eclipse.jdt.internal.ui.text.java.hover.AbstractReusableInformationControlCreator#doCreateInformationControl(org.eclipse.swt.widgets.Shell)
                 */
@@ -421,6 +421,9 @@ public class JavadocHover extends AbstractJavaEditorTextHover {
                public IInformationControl doCreateInformationControl(Shell parent) {
                        String tooltipAffordanceString= fAdditionalInfoAffordance ? JavaPlugin.getAdditionalInfoAffordanceString() : EditorsUI.getTooltipAffordanceString();
                        if (BrowserInformationControl.isAvailable(parent)) {
+                               if (iControl != null) {
+                                       return iControl;
+                               }
                                String font= PreferenceConstants.APPEARANCE_JAVADOC_FONT;
                                iControl= new BrowserInformationControl(parent, font, tooltipAffordanceString) {
                                        /*
```

I don't see extra `WebKit` processes spawn when I use content assist. There is no SWT `Browser` creation for the content assist hover. So whatever we are doing here, the JavaDoc hover is what we need to fix.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5Z8m8p/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/528,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bnlgH,eclipse.jdt.ui,1537103879,528,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-05-06T09:46:27Z,2023-05-06T09:46:27Z,"Note: this change becomes effective with a product customization option set
like below (which would dispose hovers after 10 seconds if hidden):

`org.eclipse.ui/disposeClosedBrowserHoverTimeout=10000`

For applying the change in an existing workspace **without** using plugin customization, one has to change following file
`.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.prefs`
and add there a line
```
disposeClosedBrowserHoverTimeout=10000
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bnlgH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/528,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5b0y3O,eclipse.jdt.ui,1540566478,528,NA,cdietrich,238736,Christian Dietrich,christian.dietrich.opensource@gmail.com,NA,2023-05-09T17:17:24Z,2023-05-09T17:17:24Z,"@iloveeclipse i cannot get passing pluginCustomization to work
how to properly pass this from an eclipse launch config","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5b0y3O/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/528,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5b4gp5,eclipse.jdt.ui,1541540473,528,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-05-10T08:07:25Z,2023-05-10T08:07:25Z,"Add something like `-pluginCustomization /home/aloskuto/tmp/pluginCustomization.ini` here
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/964108/bf51a960-1c32-49c4-81f9-f6386176fcf2)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5b4gp5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/528,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5b4iCN,eclipse.jdt.ui,1541546125,528,NA,cdietrich,238736,Christian Dietrich,christian.dietrich.opensource@gmail.com,NA,2023-05-10T08:11:22Z,2023-05-10T08:11:22Z,this is what did not work. even with fresh ws. this is why i was asking,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5b4iCN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/528,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5b4lFW,eclipse.jdt.ui,1541558614,528,NA,cdietrich,238736,Christian Dietrich,christian.dietrich.opensource@gmail.com,NA,2023-05-10T08:20:02Z,2023-05-10T08:20:02Z,hmmm have it another try on different machine. now its working,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5b4lFW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/528,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5b4oxy,eclipse.jdt.ui,1541573746,528,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-05-10T08:30:22Z,2023-05-10T08:30:22Z,"  ""works on my machine"" ® ™","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5b4oxy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/532,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/532,eclipse.jdt.ui,1670633199,532,SIOOBE in IndentAction.getTextBlockIndentationString,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2023-04-17T08:02:09Z,2023-04-17T21:24:59Z,"Using I20230416-1800.

I've tried to manually indent the begin of the string block by typing `<tab>` before `""""""` 
in the new test I'm adding in `org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_18.java` for https://github.com/eclipse-jdt/eclipse.jdt.core/issues/795:

```
public void testInlineReturn() {
	if(this.complianceLevel < ClassFileConstants.JDK16) {
		return;
	}
	this.runConformTest(
		new String[] {
			""X.java"",
	""""""
			/** Sample */
			public class Sample {
				/** {@return 42} */
				public int sample() {
					return 42;
				}
			}
					"""""",
		}
	);
}
```

and got this error:

```
java.lang.StringIndexOutOfBoundsException: begin 3, end 2, length 2
	at java.base/java.lang.String.checkBoundsBeginEnd(String.java:4602)
	at java.base/java.lang.String.substring(String.java:2705)
	at java.base/java.lang.String.substring(String.java:2678)
	at org.eclipse.jdt.internal.ui.actions.IndentAction.getTextBlockIndentationString(IndentAction.java:1016)
	at org.eclipse.jdt.internal.ui.actions.IndentAction.computeReplaceData(IndentAction.java:398)
	at org.eclipse.jdt.internal.ui.actions.IndentAction.indentLine(IndentAction.java:549)
	at org.eclipse.jdt.internal.ui.actions.IndentAction.lambda$0(IndentAction.java:185)
	at org.eclipse.jdt.internal.ui.actions.IndentAction.run(IndentAction.java:219)
	at org.eclipse.ui.texteditor.AbstractTextEditor$ActivationCodeTrigger.verifyKey(AbstractTextEditor.java:791)
	at org.eclipse.jface.text.TextViewer$VerifyKeyListenersManager.verifyKey(TextViewer.java:480)
	at org.eclipse.swt.custom.StyledTextListener.handleEvent(StyledTextListener.java:70)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:5855)
```

To reproduce, add the snippet above to the test, place cursor at the begin of the line with starting `""""""` and hit `<tab>` key.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/532/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/532,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5aDkUW,eclipse.jdt.ui,1510884630,532,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-04-17T08:02:31Z,2023-04-17T08:02:31Z,@jjohnstn : something you could look like?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5aDkUW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/532,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5aFYpO,eclipse.jdt.ui,1511361102,532,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-04-17T13:35:20Z,2023-04-17T13:35:20Z,Seem to be regression from https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/33 ?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5aFYpO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/532,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5aF6lJ,eclipse.jdt.ui,1511500105,532,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-04-17T14:39:45Z,2023-04-17T14:39:45Z,@iloveeclipse Will look at it.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5aF6lJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/532,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5aIOew,eclipse.jdt.ui,1512105904,532,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-04-17T21:24:58Z,2023-04-17T21:24:58Z,Fixed via #534,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5aIOew/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/538,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/538,eclipse.jdt.ui,1674310452,538,Improve JDT onboarding icon for the black theme,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,OPEN,2023-04-19T07:16:14Z,2023-05-24T08:35:02Z,"Similar to https://github.com/eclipse-pde/eclipse.pde/issues/581 the JDT onboarding icon should be improved to look good in the dark theme and the light theme.

Current icon:

![image](https://user-images.githubusercontent.com/139910/232997021-0634c468-bab6-409c-bc17-eeacb9640e68.png)


cc @BeckerWdf ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/538/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/538,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5aR8GB,eclipse.jdt.ui,1514652033,538,NA,BeckerWdf,28338612,Matthias Becker,ma.becker@sap.com,NA,2023-04-19T12:30:37Z,2023-04-19T12:30:37Z,What do you finde wrong? You would like to remove the fill? This looks odd then - I tried that.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5aR8GB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/538,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5anQkx,eclipse.jdt.ui,1520240945,538,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2023-04-24T14:13:56Z,2023-04-24T14:13:56Z,"> What do you finde wrong? You would like to remove the fill? This looks odd then - I tried that.

Maybe with some transparency?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5anQkx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/538,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5a5vgu,eclipse.jdt.ui,1525086254,538,NA,BeckerWdf,28338612,Matthias Becker,ma.becker@sap.com,NA,2023-04-27T08:18:44Z,2023-04-27T08:18:44Z,"> > What do you finde wrong? You would like to remove the fill? This looks odd then - I tried that.
> 
> Maybe with some transparency?

It already has transparency. See:

<img width=""1520"" alt=""Screenshot 2023-04-27 at 10 11 29"" src=""https://user-images.githubusercontent.com/28338612/234801174-fed5006d-bcd4-4fb0-a568-41dcf7ddca4d.png"">

I put a read shape behind the icon just to make this visible for you.

I don't find it too light in dark theme.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5a5vgu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/538,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dBgxY,eclipse.jdt.ui,1560677464,538,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-05-24T08:29:24Z,2023-05-24T08:29:24Z,"I like the  reduced contrast on PDE's image more, because it does not attract so much focus:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/9f555979-185d-46cc-890e-2f9887435c60)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dBgxY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/538,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dBiYq,eclipse.jdt.ui,1560684074,538,NA,BeckerWdf,28338612,Matthias Becker,ma.becker@sap.com,NA,2023-05-24T08:33:57Z,2023-05-24T08:33:57Z,"> I like the reduced contrast on PDE's image more, because it does not attract so much focus: ![image](https://user-images.githubusercontent.com/51790620/240536694-9f555979-185d-46cc-890e-2f9887435c60.png)

So what do you propose?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dBiYq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/538,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dBiww,eclipse.jdt.ui,1560685616,538,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-05-24T08:35:02Z,2023-05-24T08:35:02Z,use same colors as in PDE as shown in pasted image,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dBiww/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/539,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/539,eclipse.jdt.ui,1675024418,539,"UI issue : Unable to scroll down to ""Application"" section in the ""New project"" window",sharma-mallika,112951134,,,CLOSED,2023-04-19T14:28:56Z,2023-04-19T14:51:15Z,"Hello Team, 

In Eclipse IDE for Java development, i goto >> File >> New >> JavaCard Project

the window appearing is not showing the complete ""Application"" section and there is no way to scroll to it. 

Is there any possible way to fix it?
<img width=""584"" alt=""Capture"" src=""https://user-images.githubusercontent.com/112951134/233107007-867f1ac6-eb4e-4d43-8f93-a18a93e5269a.PNG"">
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/539/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/539,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5aSzc6,eclipse.jdt.ui,1514878778,539,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-04-19T14:51:14Z,2023-04-19T14:51:14Z,"Hi @sharma-mallika Have you tried expanding/stretching the window?  The Java Card project wizard is not part of JDT UI.  If re-sizing doesn't help, you'll need to open an issue against Oracle which develops the Eclipse Java Card plug-in.  Closing this issue.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5aSzc6/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/540,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/540,eclipse.jdt.ui,1676201616,540,"""Show Commandline"" leaks vmargs file",diti0023,130975899,Diethard Ohrt,,CLOSED,2023-04-20T07:53:03Z,2023-07-01T11:17:32Z,"This is a copy of https://github.com/eclipse-platform/eclipse.platform/issues/537
Summary: Open ""Show Commandline"" for a project's launch configuration with a large class/module path; this results in a file containing the classpath, which is then used as parameter like @/home/.../.temp-Main--module-path-arg-1681976925916.txt. After closing the dialog this file remains.

Sorry, this is the wrong repository -- closing.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/540/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/542,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/542,eclipse.jdt.ui,1677439279,542,i18n: hardcoded quoting used for UnresolvedElementsSubProcessor_swaparguments_description,dhmartin,4883186,David Martin,,OPEN,2023-04-20T21:14:02Z,2023-04-20T21:15:46Z,"Quickfix proposal for argument swapping errors, using the message `Swap arguments {0} and {1}`, may contain quoted variable names or plain argument position numbers. When quoting is needed in either the first or the second message placeholders, quoting is hardcoded, and therefore not suitable for translation. Single quotes is not a unique choice for all locales…

You may check on hover over the errors at:

```java
int a = 1, b = 3;
char[] charlist = { 'A', 'B', 'C', 'D', 'E' };

new String(a, b, charlist);
new String(a, charlist, b);
new String(a, new char[] { 'A', 'B', 'C', 'D', 'E' }, b);
new String(4, new char[] { 'A', 'B', 'C', 'D', 'E' }, 0);
```

BTW: The error description shown `The constructor String(int, int, char[]) is undefined` neither seems to be translated.

Quoting seems to be done at [org.eclipse.jdt.internal.ui.text.correction.UnresolvedElementsSubProcessor.java](https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/9eb04778168dc7045d694d7dd923deae269f996f/org.eclipse.jdt.ui/ui/org/eclipse/jdt/internal/ui/text/correction/UnresolvedElementsSubProcessor.java#L1704) as:
```java
return '\'' + BasicElementLabels.getJavaElementName(ASTNodes.asString(expr)) + '\'';
```

A common quoting method at the Messages class applying a translatable quoting format pattern might be a good alternative.
David","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/542/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/543,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/543,eclipse.jdt.ui,1677610225,543,"Pasting text adds ""\"" character",andreasdc,82218780,,,OPEN,2023-04-21T01:06:09Z,2023-05-24T08:01:55Z,"When I have a text and I paste it to another, it adds unnecessary ""\"" characters.
Example:
`                            String paste = ""paste"";
                            String test = ""example"" + ""text"";`
Copy ""paste"" over "" + "" to make `""example""paste""text""`, it should create `""examplepastetext""` text, but it's `""example\""paste\""text""`","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/543/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/543,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ab8lR,eclipse.jdt.ui,1517275473,543,NA,trancexpress,24752155,Simeon Andreev,,NA,2023-04-21T05:19:18Z,2023-04-21T05:19:18Z,"Can you try disabling the following preference?

Main menu -> Window -> Preferences -> Java -> Editor -> Typing -> ""Escape text when pasting into a literal string""

![escaping_preference](https://user-images.githubusercontent.com/24752155/233546935-8ce488bf-a675-4f3d-bc0e-9d7183bc927c.png)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ab8lR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/543,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ab89y,eclipse.jdt.ui,1517277042,543,NA,andreasdc,82218780,,,NA,2023-04-21T05:21:47Z,2023-04-21T05:21:47Z,"I think now it works, I don't know who would want it to be disabled.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ab89y/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/543,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ab9md,eclipse.jdt.ui,1517279645,543,NA,trancexpress,24752155,Simeon Andreev,,NA,2023-04-21T05:25:41Z,2023-04-21T05:25:41Z,"The default was set to enabled with this ticket: https://bugs.eclipse.org/bugs/show_bug.cgi?id=505608

Since disabling the preference works for you, closing this ticket. Please re-open if the preference doesn't work as expected.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ab9md/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/543,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ab92s,eclipse.jdt.ui,1517280684,543,NA,andreasdc,82218780,,,NA,2023-04-21T05:27:22Z,2023-04-21T05:27:22Z,So 1 or 2 guys basically wanted a feature that breaks pasting things into strings. ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ab92s/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/543,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5acA0S,eclipse.jdt.ui,1517292818,543,NA,trancexpress,24752155,Simeon Andreev,,NA,2023-04-21T05:45:45Z,2023-04-21T05:45:45Z,"The (enabled) preference is intended to ease pasting string literals into strings. E.g. if you want to print a certain string (with quotes and so on), the preference makes this easier.

> So 1 or 2 guys basically wanted a feature that breaks pasting things into strings.

The feature was requested and added quite early on (late 2003): https://bugs.eclipse.org/bugs/show_bug.cgi?id=27005

Though for setting the default as enabled, yes, 1 or 2 guys requested and made the change.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5acA0S/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/543,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5acA8p,eclipse.jdt.ui,1517293353,543,NA,andreasdc,82218780,,,NA,2023-04-21T05:46:37Z,2023-04-21T05:46:37Z,How does that help with pasting strings?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5acA8p/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/543,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dBWzS,eclipse.jdt.ui,1560636626,543,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-05-24T08:01:55Z,2023-05-24T08:01:55Z,"Usecase to add slashes: paste `I said something like ""HELLO""` into the empty string of
`String whatISaid="""";`

In your usecase you are supposed to paste `paste `instead of `""paste""` 
I recommend to close this issue as invalid.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dBWzS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/546,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/546,eclipse.jdt.ui,1683258865,546,IllegalStateException: trying to extract local variable,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2023-04-25T14:12:43Z,2023-06-09T18:03:48Z,"Go to org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.installTextHovers()

Select `JavaPlugin.getDefault().getJavaEditorTextHoverDescriptors()` in the code below, <ctrl +1> and say ""Extract to local variable"" -> error in the log and nothing happens.

```
		for (JavaEditorTextHoverDescriptor hoverDesc : JavaPlugin.getDefault().getJavaEditorTextHoverDescriptors()) {
			// ensure that we don't add ourselves to the list
			if (!PreferenceConstants.ID_BESTMATCH_HOVER.equals(hoverDesc.getId())) {
				fTextHoverSpecifications.add(hoverDesc);
			}
		}
```

```
java.lang.IllegalStateException: must specify at least one linked position
	at org.eclipse.jface.text.link.LinkedModeModel.enforceNotEmpty(LinkedModeModel.java:530)
	at org.eclipse.jface.text.link.LinkedModeModel.install(LinkedModeModel.java:484)
	at org.eclipse.jface.text.link.LinkedModeModel.forceInstall(LinkedModeModel.java:441)
	at org.eclipse.jdt.internal.ui.viewsupport.LinkedProposalModelPresenter.enterLinkedMode(LinkedProposalModelPresenter.java:105)
	at org.eclipse.jdt.internal.ui.text.correction.proposals.LinkedCorrectionProposal.performChange(LinkedCorrectionProposal.java:161)
	at org.eclipse.jdt.ui.text.java.correction.CUCorrectionProposal.apply(CUCorrectionProposal.java:167)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.insertProposal(CompletionProposalPopup.java:1004)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.insertSelectedProposalWithMask(CompletionProposalPopup.java:951)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.widgetDefaultSelected(CompletionProposalPopup.java:697)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:123)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/546/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/546,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bEXNK,eclipse.jdt.ui,1527870282,546,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-04-28T17:24:09Z,2023-04-28T17:24:09Z,"@iloveeclipse Will look at it
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bEXNK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/547,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/547,eclipse.jdt.ui,1683473181,547,ClassCastException: class org.eclipse.jdt.core.dom.AnonymousClassDeclaration cannot be cast to class org.eclipse.jdt.core.dom.TypeDeclaration,iloveeclipse,964108,Andrey Loskutov,,OPEN,2023-04-25T16:13:46Z,2023-04-25T16:13:46Z,"Consider this (changed) snippet from  `org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.HoverControlCreator.doCreateInformationControl(Shell)`

where I've added ""setVisible"" method that disposes control after 5 seconds.
Trying to `<ctrl+1>` on `dispose()` call below produces error:

```
		@Override
		public IInformationControl doCreateInformationControl(Shell parent) {
			String tooltipAffordanceString= fAdditionalInfoAffordance ? JavaPlugin.getAdditionalInfoAffordanceString() : EditorsUI.getTooltipAffordanceString();
			if (BrowserInformationControl.isAvailable(parent)) {
				String font= PreferenceConstants.APPEARANCE_JAVADOC_FONT;
				iControl= new BrowserInformationControl(parent, font, tooltipAffordanceString) {

					@Override
					public IInformationControlCreator getInformationPresenterControlCreator() {
						return fInformationPresenterControlCreator;
					}

					@Override
					public void setVisible(boolean visible) {
						super.setVisible(visible);
						if (!visible) {
							Display.getCurrent().timerExec(5000, () -> dispose());
						}
					}
				};
```

```
java.lang.ClassCastException: class org.eclipse.jdt.core.dom.AnonymousClassDeclaration cannot be cast to class org.eclipse.jdt.core.dom.TypeDeclaration (org.eclipse.jdt.core.dom.AnonymousClassDeclaration and org.eclipse.jdt.core.dom.TypeDeclaration are in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @dddcd91)
	at org.eclipse.jdt.internal.ui.text.correction.QuickAssistProcessor.getConvertLambdaToMethodReferenceProposal(QuickAssistProcessor.java:1068)
	at org.eclipse.jdt.internal.ui.text.correction.QuickAssistProcessor.getAssists(QuickAssistProcessor.java:395)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeAssistCollector.safeRun(JavaCorrectionProcessor.java:404)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.run(JavaCorrectionProcessor.java:341)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.process(JavaCorrectionProcessor.java:330)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectAssists(JavaCorrectionProcessor.java:506)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectProposals(JavaCorrectionProcessor.java:291)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.computeQuickAssistProposals(JavaCorrectionProcessor.java:247)
	at org.eclipse.jface.text.quickassist.QuickAssistAssistant$ContentAssistProcessor.computeCompletionProposals(QuickAssistAssistant.java:71)
	at org.eclipse.jface.text.contentassist.ContentAssistant$2.lambda$0(ContentAssistant.java:2063)
	at java.base/java.util.Collections$SingletonSet.forEach(Collections.java:4905)
	at org.eclipse.jface.text.contentassist.ContentAssistant$2.run(ContentAssistant.java:2062)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.ContentAssistant.computeCompletionProposals(ContentAssistant.java:2059)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.computeProposals(CompletionProposalPopup.java:577)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.lambda$0(CompletionProposalPopup.java:507)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:502)
	at org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1873)
	at org.eclipse.jface.text.quickassist.QuickAssistAssistant.showPossibleQuickAssists(QuickAssistAssistant.java:113)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionAssistant.showPossibleQuickAssists(JavaCorrectionAssistant.java:194)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:201)
	at org.eclipse.ui.texteditor.TextOperationAction.lambda$0(TextOperationAction.java:130)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/547/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1035,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1035,eclipse.jdt.ui,2058150462,1035,Cleanup 'Pattern matching for instanceof' removes final,wahlbrink,461613,Stephan Wahlbrink,,CLOSED,2023-04-26T09:59:55Z,2024-01-02T16:26:57Z,"The clean up 'Pattern matching for instanceof' removes the final keyword of the variable.

E.g. from:
```java
if (obj instanceof String) {
	final String s= (String)obj;
	s.chars();
}
```
the clean up 'Pattern matching for instanceof' currently creates:
```java
if (obj instanceof String s) {
	s.chars();
}
```
but should keep the final keyword:
```java
if (obj instanceof final String s) {
	s.chars();
}
```

--
Version: SDK 4.28 with JDT 3.19.100.v20230425-1800
Build id: I20230425-1800","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1035/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1035,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vtsjH,eclipse.jdt.ui,1874249927,1035,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-01-02T16:26:57Z,2024-01-02T16:26:57Z,This issue has been fixed via #549,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vtsjH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/550,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/550,eclipse.jdt.ui,1686471250,550,[21] Run Gerrit builds for JDT UI BETA_JAVA21 branch with latest Y-build ,noopur2507,8749449,Noopur Gupta,,CLOSED,2023-04-27T09:26:27Z,2023-04-28T09:21:13Z,Run Gerrit builds for JDT UI BETA_JAVA21 branch with the latest Y-build.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/550/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/553,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/553,eclipse.jdt.ui,1688697900,553,Hovering over an NLS message doesn't show the contents if the bundle name isn't constant,kjsmita6,9405706,Kyle Smith,,OPEN,2023-04-28T14:52:34Z,2023-04-28T14:52:34Z,"### Introduction
When creating a message bundle using the ""Externalize strings wizard"", the java class is initialized with a `BUNDLE_NAME` variable which contains the fully-qualified name of the message properties file, like:

`private static final String BUNDLE_NAME = NlsDemoMsg.class.getPackageName() + "".nlsdemomsg""; //$NON-NLS-1$`

In this case, it would resolve to `com.example.jdt.nls.msg.nlsdemomsg` which indeed resolves to a file called `nlsdemomsg.properties` in the `com.example.jdt.nls.msg` package.

---
### Problem
When using any messages from a class created in this way, hovering over the message does not show the contents, and you are not able to quickly goto it in the properties file:
![No preview](https://user-images.githubusercontent.com/9405706/235176840-b10fbc95-9830-4a14-9eb4-e1e983347a1b.png)
![No goto](https://user-images.githubusercontent.com/9405706/235176940-664fcfc3-dce0-4bfb-935a-55b2aeafbf5b.png)

I am assuming this is PDE's version of the wizard since it uses `org.eclipse.osgi.util.NLS` instead of `ResourceBundle`, but the plain-old Java version does the same thing, using `Messages.getString(""key"")` instead. The hover and goto only work if the `BUNDLE_NAME` is a constant string.

---
### Workaround
If the `BUNDLE_NAME` is changed to be just the string itself, like 

`private static final String BUNDLE_NAME = ""com.example.jdt.nls.msg.nlsdemomsg""; //$NON-NLS-1$`

then those things work:
![Preview of the message](https://user-images.githubusercontent.com/9405706/235177270-64579edb-02c3-4a37-9ce8-290188dbae06.png)
![Able to goto the file](https://user-images.githubusercontent.com/9405706/235177345-321c1729-b890-48cd-9a0d-53b9196acf7f.png)

---
### Expected
Ideally these features would work in all cases, especially as the wizard that makes this file does it the first way by calling `getPackageName()`.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/553/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/554,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/554,eclipse.jdt.ui,1688885273,554,[type wizards] 'New Class' wizard allows to set final class as a superclass,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2023-04-28T17:18:06Z,2023-06-09T20:53:07Z,"- moved from https://bugs.eclipse.org/bugs/show_bug.cgi?id=199667
- for the following example:

Suppose you have 
a(String str); and 
a(SomeInterface s);

when you write 
a(new InterfaceImpl());

select new InterfaceImpl() and use quick assist 
'create class InterfaceImpl()' - 
it will show a create class dialog with superclass field set to java.lang.String, which is wrong, because it should be interface SomeInterface, as String is final, so it is a call to a(SomeInterface s);

- the wizard should at least show an error when opened or not fill in the superclass if it knows it is filing in an invalid value
- preferably the code should find the second method with the interface","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/554/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/554,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5cnNzO,eclipse.jdt.ui,1553784014,554,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-05-18T23:39:38Z,2023-05-18T23:39:38Z,"After debugging, the code is using the bindings table to find the method declaration for ""a"" which it then uses to find the superclass of the new InterfaceImpl class to create.  The bindings table is only registering the first method ""a"" it finds to map to the method invocation.  If the code is changed to put the method that uses SomeInterface parameter, the wizard gets it correct.  Changing the bindings table logic isn't feasible and rewriting all that binding logic to handle this edge case also isn't reasonable so the code has been altered to simply recognize that the proposed super class is invalid as final and doesn't propose it.  In such a case, the super class will be Object in the wizard and it will be up to the user to specify correct super class and interfaces.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5cnNzO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/555,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/555,eclipse.jdt.ui,1688907394,555,Result of Source->Find broken externalized Strings is broken project,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2023-04-28T17:36:17Z,2023-06-09T00:42:39Z,"- taken from https://bugs.eclipse.org/bugs/show_bug.cgi?id=569043
- see https://git.eclipse.org/r/c/jdt/eclipse.jdt.ui/+/172642","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/555/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/555,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bhUib,eclipse.jdt.ui,1535461531,555,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-05-04T21:57:29Z,2023-05-04T21:57:29Z,"@carstenartur FYI, as the reporter of the original bug,  I have posted a new enhancement PR to be able to specify messages that are known to be used so they won't show up when you do a Find broken externalized Strings.  I do this by adding a .usedproperties file to protect various messages in the .properties file (as opposed to just adding comments).  I intend to add these files for JDT UI for 4.28 M3 and do the final removal for 4.29 M1 to give external projects ample time to discover any internal message being used that isn't marked as used (there are already a few of these).  One of the offenders was FoldingMessages.java which was an old style messages file and message keys were built dynamically so it fooled the find action.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bhUib/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/555,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bl7_v,eclipse.jdt.ui,1536671727,555,NA,carstenartur,3164220,Carsten Hammer,,NA,2023-05-05T19:17:41Z,2023-05-05T19:17:41Z,"It's too long ago. I don't remember the details and I'm not sure that I have understood the reason for the malfunction already at the time I investigated.
Will orphaned strings like the ones from
https://bugs.eclipse.org/bugs/show_bug.cgi?id=296836
be found now? And will they be removed? Or are they kept purly for backwards compatibility with your new approach? From my point of view another option removing nls keys could be to change the bundle version range on dependent bundles which allows a real cleanup (deletion) in the bundle. And for the ""keep backward compatibility case"" in an ideal world everything that has to be kept because of backwards compatibility should be marked somehow lightweight as deprecated near the orphaned entry itself. But maybe I should rather try your approach first. Thanks for putting effort on the bug report!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bl7_v/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/555,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bl-f8,eclipse.jdt.ui,1536681980,555,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-05-05T19:27:51Z,2023-05-05T19:27:51Z,Orphaned messages with DO NOT REMOVE have been placed into the .usedproperties files I will commit soon so they will protected at least for the time-being.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bl-f8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/557,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/557,eclipse.jdt.ui,1692507621,557,[Mac/Win] Unable to add a new source folder to a Java project using the Java Build Path properties,sclarke353,39244159,,,CLOSED,2023-05-02T14:12:43Z,2023-05-04T06:33:41Z,"It's not possible to add a new source folder to a Java project using the Java Build Path properties in Eclipse 2023-03.

Tested on macOS 13.3.1. 

Steps to reproduce:
Create a Java Project.
Right-Click on the Java project in the Package Explorer View and select Properties.
Select the Java Build Path properties page.
Select the Source tab.
Click Add Folder...
In the 'Source Folder Selection' dialog select 'Create New Folder...'

None of the controls in the 'New Source Folder' dialog are selectable at this point.

To close that dialog you need to first select cancel on the 'Source Folder Selection' dialog and then on the 'Properties' dialog and then the controls will be enabled and allow you to cancel it. If you try to create the folder at this point it will throw a org.eclipse.swt.SWTException: Widget is disposed error.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/557/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/557,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bTt_I,eclipse.jdt.ui,1531895752,557,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-05-02T17:50:07Z,2023-05-02T17:50:07Z,Can you please attach screenshot and check if there is anything reported in the error log view. ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bTt_I/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/557,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bTxN4,eclipse.jdt.ui,1531908984,557,NA,sclarke353,39244159,,,NA,2023-05-02T18:00:15Z,2023-05-02T18:00:15Z,"There are no errors logged when the 'New Source Folder' dialog is presented:
<img width=""1171"" alt=""NewSourceFolder"" src=""https://user-images.githubusercontent.com/39244159/235746342-8c745b8b-6ea5-4bff-8710-717a80d4b846.png"">

You will get an error if you try to add a source folder after clicking cancel on the two dialogs behind it.
org.eclipse.swt.SWTException: Widget is disposed
	at org.eclipse.swt.SWT.error(SWT.java:4918)
	at org.eclipse.swt.SWT.error(SWT.java:4833)
	at org.eclipse.swt.SWT.error(SWT.java:4804)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:811)
	at org.eclipse.swt.widgets.Widget.checkWidget(Widget.java:597)
	at org.eclipse.swt.widgets.Tree.getItemCount(Tree.java:1756)
	at org.eclipse.jface.viewers.TreeViewer.getItemCount(TreeViewer.java:197)
	at org.eclipse.jface.viewers.CheckboxTreeViewer.preservingSelection(CheckboxTreeViewer.java:401)
	at org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:1459)
	at org.eclipse.jface.viewers.ColumnViewer.refresh(ColumnViewer.java:526)
	at org.eclipse.jdt.internal.ui.wizards.buildpaths.MultipleFolderSelectionDialog.newFolderButtonPressed(MultipleFolderSelectionDialog.java:276)
	at org.eclipse.jdt.internal.ui.wizards.buildpaths.MultipleFolderSelectionDialog$1.widgetSelected(MultipleFolderSelectionDialog.java:229)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4646)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1524)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1547)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1532)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1325)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4413)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3989)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.jdt.internal.ui.wizards.buildpaths.CreateMultipleSourceFoldersDialog.open(CreateMultipleSourceFoldersDialog.java:191)
	at org.eclipse.jdt.internal.ui.wizards.buildpaths.SourceContainerWorkbookPage.sourcePageCustomButtonPressed(SourceContainerWorkbookPage.java:332)
	at org.eclipse.jdt.internal.ui.wizards.buildpaths.SourceContainerWorkbookPage$SourceContainerAdapter.customButtonPressed(SourceContainerWorkbookPage.java:256)
	at org.eclipse.jdt.internal.ui.wizards.dialogfields.TreeListDialogField.buttonPressed(TreeListDialogField.java:177)
	at org.eclipse.jdt.internal.ui.wizards.dialogfields.TreeListDialogField.doButtonSelected(TreeListDialogField.java:412)
	at org.eclipse.jdt.internal.ui.wizards.dialogfields.TreeListDialogField$2.widgetSelected(TreeListDialogField.java:373)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4646)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1524)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1547)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1532)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1325)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4413)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3989)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.ui.dialogs.PropertyDialogAction.run(PropertyDialogAction.java:155)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4646)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1524)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1547)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1532)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1325)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4413)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3989)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bTxN4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/557,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bTyTO,eclipse.jdt.ui,1531913422,557,NA,sclarke353,39244159,,,NA,2023-05-02T18:03:15Z,2023-05-02T18:03:15Z,"You can also select 'Create New Folder...' multiple times:
<img width=""1240"" alt=""MultipleDialogs"" src=""https://user-images.githubusercontent.com/39244159/235747798-04a6ff0a-c0a4-4f16-81af-cfbcaf708f37.png"">
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bTyTO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/557,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bWaIv,eclipse.jdt.ui,1532600879,557,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-05-03T07:58:03Z,2023-05-03T07:58:03Z,"I've checked on Linux / 4.28 master and see no errors / troubles.
The related code **seem** to be untouched for years on a quick look.
May be something was fixed meanwhile - you can try latest build from https://download.eclipse.org/eclipse/downloads/.

I do not have a Mac to verify, so no idea if that is something related to the new Mac OS version or Eclipse change, you have to bisect that.

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bWaIv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/557,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bWa5c,eclipse.jdt.ui,1532603996,557,NA,cdietrich,238736,Christian Dietrich,christian.dietrich.opensource@gmail.com,NA,2023-05-03T08:00:36Z,2023-05-03T08:00:36Z,"i see the same on my mac Version 2023-03
and on my windows 
Version: 2023-06 M1 (4.28.0 M1)


it seens like the add soure folder dialog still has focus and thus the create source folder does not do anything","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bWa5c/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/557,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bWyNh,eclipse.jdt.ui,1532699489,557,NA,sclarke353,39244159,,,NA,2023-05-03T09:17:09Z,2023-05-03T09:17:09Z,It's reproducible in the latest integration build I20230502-2040. Tested both the x86_64 and ARM macOS versions.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bWyNh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/557,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bXbFg,eclipse.jdt.ui,1532866912,557,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-05-03T11:28:55Z,2023-05-03T11:28:55Z,"This is a regression in 4.25, works fine (tested on Windows) in 4.24.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bXbFg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/557,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bXgFh,eclipse.jdt.ui,1532887393,557,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-05-03T11:48:13Z,2023-05-03T11:48:13Z,"Regression from https://github.com/eclipse-platform/eclipse.platform.ui/commit/70ea369e018a6df441f91555d4ca231febf2f680 / https://github.com/eclipse-platform/eclipse.platform.ui/pull/243 / https://github.com/eclipse-platform/eclipse.platform.ui/issues/242.

Reverting https://github.com/eclipse-platform/eclipse.platform.ui/commit/70ea369e018a6df441f91555d4ca231febf2f680 fixes the issue.

@jcompagner, @vogella : could you please check?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bXgFh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/557,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bX75F,eclipse.jdt.ui,1533001285,557,NA,jcompagner,3274268,Johan Compagner,,NA,2023-05-03T13:06:58Z,2023-05-03T13:06:58Z,"is that a wizard dialog? (seems to me that that is more a normal dialog)

But the thing is i guess incorrect parents are set there? 

I quickly tested this, and yes, the problem is incorrect parents.. 
The ""new source folder"" should have as its parent the ""source folder selection"" dialog..
It is just wrong that that is not the case..

The ""new source folder"" has as its parent the main application window.. but there are multiply dialogs in between...
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bX75F/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/557,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bX9SC,eclipse.jdt.ui,1533006978,557,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-05-03T13:10:51Z,2023-05-03T13:10:51Z,"> The ""new source folder"" should have as its parent the ""source folder selection"" dialog..
It is just wrong that that is not the case..

OK, thanks, that makes the fix simpler as I've thought. I will push it.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bX9SC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/557,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bYHvw,eclipse.jdt.ui,1533049840,557,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-05-03T13:39:49Z,2023-05-03T13:39:49Z,"Fix should be available in the next nightly build on https://download.eclipse.org/eclipse/downloads/. I've checked on Windows, it looks fine, and it seem not to have any effect on Linux either. 

If it should be still broken on Mac, please reopen.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bYHvw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/557,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bcWjb,eclipse.jdt.ui,1534159067,557,NA,sclarke353,39244159,,,NA,2023-05-04T06:33:40Z,2023-05-04T06:33:40Z,Test I20230503-1800 on macOS. All looks good. Thank you.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bcWjb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/558,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/558,eclipse.jdt.ui,1692996447,558,Content Assist in Version: 2023-03 (4.27.0) Build id: 20230309-1520 appears broken.,C4J,20553038,David Garratt,support@commander4j.com,CLOSED,2023-05-02T19:40:21Z,2023-05-03T20:05:13Z,"
Using a simple Java class as example. Hover over ""File"" in the two different lines and see how content assist offers the correct solution in one of the situations and ""File cannot be resolved to a type"" in the other.

package com.test;


public class test {

	File xxx;
	
	xxx = new File(""abc"");
	

	File yyy = new File(""xyz"");
	
}

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/558/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/558,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bUTik,eclipse.jdt.ui,1532049572,558,NA,C4J,20553038,David Garratt,support@commander4j.com,NA,2023-05-02T19:43:12Z,2023-05-02T19:43:12Z,"![3](https://user-images.githubusercontent.com/20553038/235769142-baf9dfdc-ee25-4518-8d7f-4359d148945d.png)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bUTik/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/558,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bUT-I,eclipse.jdt.ui,1532051336,558,NA,C4J,20553038,David Garratt,support@commander4j.com,NA,2023-05-02T19:44:40Z,2023-05-02T19:44:40Z,"I have reverted to 2022-12 and Code Assist seems to work in that version.

I am running on MacOS Ventura with Apple Silicon Processor.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bUT-I/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/558,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bZlen,eclipse.jdt.ui,1533433767,558,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-05-03T17:29:16Z,2023-05-03T17:29:16Z,"Hi @C4J This is a known regression that was fixed subsequent to the 0309 build ( see #485 ).  If you get the latest I-build you'll have the fix.  As you probably know your code has an issue as-is since it is outside of any method and trying to assign the field member xxx which is why ; gets flagged.  Regardless, with the latest I-build, all File references marked will offer to import java.io.File.  Closing this as it is fixed.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bZlen/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/558,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bZmAH,eclipse.jdt.ui,1533435911,558,NA,C4J,20553038,David Garratt,support@commander4j.com,NA,2023-05-03T17:31:09Z,2023-05-03T17:31:09Z,"As just an ""end user"" of Eclipse could you explain how I can get this updated version please.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bZmAH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/558,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5badQe,eclipse.jdt.ui,1533662238,558,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-05-03T20:05:13Z,2023-05-03T20:05:13Z,"@C4J My apologies, I should have added that.

Go to: https://download.eclipse.org/eclipse/downloads/

From there, you can click on the 4.28M1 link and from there you can download the 4.28 M1 milestone SDK or if you wish, you can add the M1 repo to your update sites and perform an update.  Note that if you do the update route, you will be using latest Eclipse and may see other issues appear as this is latest Eclipse.  Downloading the SDK allows you to play with it before switching over your current set-up.  4.28 M2 is coming out later this week and will be found at the same URL.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5badQe/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/560,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/560,eclipse.jdt.ui,1695376761,560,Java Compare: Ignore Whitespace inside Java Literals,BeckerWdf,28338612,Matthias Becker,ma.becker@sap.com,OPEN,2023-05-04T07:00:18Z,2023-06-26T22:25:35Z,"With https://github.com/eclipse-platform/eclipse.platform/pull/429#pullrequestreview-1411402321 it's now possible to hook into the ""Ignore Whitespace"" logic in the compare view.

It would be nice to have an implementation of this for Java Literals.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/560/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/560,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bcdQs,eclipse.jdt.ui,1534186540,560,NA,BeckerWdf,28338612,Matthias Becker,ma.becker@sap.com,NA,2023-05-04T07:01:05Z,2023-05-04T07:01:05Z,@tobiasmelcher: Can you provide such an implementation? ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5bcdQs/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/567,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/567,eclipse.jdt.ui,1699510968,567,[21] Allow JDT to target Java 21 in compiler preferences,noopur2507,8749449,Noopur Gupta,,CLOSED,2023-05-08T04:51:51Z,2023-05-08T05:06:53Z,Allow JDT to target Java 21 in compiler preferences.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/567/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/569,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/569,eclipse.jdt.ui,1699516332,569,[21] Add AST level 21 to AST view,noopur2507,8749449,Noopur Gupta,,CLOSED,2023-05-08T04:57:26Z,2023-05-08T05:07:27Z,Add AST level 21 to AST view.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/569/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/573,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/573,eclipse.jdt.ui,1701868260,573,Organize the order of actions when 'save actions' are enabled,freedom1b2830,102818470,,,CLOSED,2023-05-09T11:07:13Z,2023-05-15T20:40:50Z,"Eclipse IDE for Java Developers (includes Incubating components)
Version: 2023-03 (4.27.0)
Build id: 20230309-1520

The problem is that when I save, the variable declaration becomes var, the import becomes unused

actions now:

1) Remove unused imports
2) var
``an unused import appears``

what I want

1) var
2) Remove unused imports
``no unused imports``

https://user-images.githubusercontent.com/102818470/236677073-995d0bf2-a46a-44ad-a810-36d9f3ef3d12.mp4
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/573/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/573,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5cNxY4,eclipse.jdt.ui,1547114040,573,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-05-15T02:44:17Z,2023-05-15T02:44:17Z,"Looking at the code, it is actually an error in the var cleanup.  The var cleanup is not registering removed types.  When it does this, the import is removed by the var cleanup.  I will post a patch shortly.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5cNxY4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/574,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/574,eclipse.jdt.ui,1707291271,574,[quickfix] Convert instanceof check to method reference,jubax,10562923,Juergen Baier,baier@semedy.com,CLOSED,2023-05-11T12:18:33Z,2023-06-29T23:16:08Z,"This was originally reported as https://bugs.eclipse.org/bugs/show_bug.cgi?id=573372

It seems Eclipse does not show a warning and does not provide a quickfix when I use a lambda instead of a method reference in some cases.

When I have
```
public class QuickfixForInstanceOf {

  public static void main(String[] args) {
    List<Object> objects = List.of(""A"", 42, ""B"");
    long count = objects.stream()
      .filter(object -> object instanceof String).count();
    System.out.println(count);

  }
}
```
Then it would be nice if I would see a warning for
```
  filter(object -> object instanceof String)
```

and a quickfix which converts this to
```
  filter(String.class::isInstance)
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/574/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/574,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5cHdRZ,eclipse.jdt.ui,1545458777,574,NA,trancexpress,24752155,Simeon Andreev,,NA,2023-05-11T12:22:12Z,2023-05-11T12:22:12Z,Can you explain why this should be a warning?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5cHdRZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/574,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5cHdRe,eclipse.jdt.ui,1545458782,574,NA,jubax,10562923,Juergen Baier,baier@semedy.com,NA,2023-05-11T12:30:06Z,2023-05-11T12:30:06Z,"> Can you explain why this should be a warning?

I feel that using the shorter version is preferred. Not sure if this qualifies as a warning, but a quickfix would be useful. E.g. Eclipse already supports a quick fix for converting
```
    long count = objects.stream()
	    .filter(object -> {
		return object instanceof String;
	    }).count();
```
to an expression:
```
    long count = objects.stream()
	    .filter(object -> object instanceof String).count();
```

and method references would even be shorter.

There is a second, maybe weaker argument: Sonar also shows this as a warning (https://rules.sonarsource.com/java/RSPEC-1612).
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5cHdRe/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/574,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5cHdRk,eclipse.jdt.ui,1545458788,574,NA,jubax,10562923,Juergen Baier,baier@semedy.com,NA,2023-05-11T12:40:29Z,2023-05-11T12:40:29Z,"BTW, there is a weak argument why a warning might be useful: If you have a warning and click on it you can directly choose a quickfix. If this is not a warning then you need to manually select the lambda or block expression to get the quickfix.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5cHdRk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/574,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5cHdRp,eclipse.jdt.ui,1545458793,574,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-05-12T09:32:04Z,2023-05-12T09:32:04Z,"I'm not sure something like this deserves a compiler warning.
Let agree on a missing ""convert to method reference"" proposal => will move to JDT UI.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5cHdRp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/574,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5cHdXo,eclipse.jdt.ui,1545459176,574,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-05-12T09:32:39Z,2023-05-12T09:32:39Z,@jjohnstn : something interesting for you?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5cHdXo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/576,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/576,eclipse.jdt.ui,1710224638,576,Refactor VarCleanup to jdt.core.manipulation for jdt.ls usage,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2023-05-15T14:27:41Z,2023-06-09T19:38:36Z,Refactor VarCleanup to jdt.core.manipulation so jdt.ls can use it.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/576/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/577,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/577,eclipse.jdt.ui,1710230878,577,Refactor NoStringCreationCleanup to jdt.core.manipulation for jdt.ls use,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2023-05-15T14:31:07Z,2023-06-09T14:46:54Z,Refactor NoStringCreationCleanup to jdt.core.manipulation for jdt.ls to use,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/577/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/578,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/578,eclipse.jdt.ui,1710249010,578,Bug 241035 - [pull up] refactoring causes compile error because it replaces wrong destination type,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2023-05-15T14:42:00Z,2023-06-09T18:09:42Z,"Steps To Reproduce:
1. In the following code
 A.java
```
package p;

class A {
	void a(A a){}
	void a(B b){}
}
```

B.java
```
package p;

class B extends A {
	void m() { 
		a(this);
	}
}
```

2. pull up B.m() to class A
3. the above code becomes
A.java
```
package p;

class A {
	void a(A a){}
	void a(A b){}
	void m() { 
		a(this);
	}
}
```
B.java
```
package p;

class B extends A {
}
```
4. Compile error is detected
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/578/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/582,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/582,eclipse.jdt.ui,1711277334,582,"Source > Clean up > Configure > Select All/Deselect All doesn't change ""Add missing annotation""",Bananeweizen,406876,Michael Keppler,,CLOSED,2023-05-16T05:42:52Z,2023-06-09T21:16:46Z,"In the clean up configuration, the checkbox of Missing Code > Add missing annotation is not affected by the Select All/Deselect All buttons.
In addition to that, it also is marked checked when I open a cleanup configuration that only contains single _other_ cleanup, according to the cleanup summary in the wizard.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/582/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/589,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/589,eclipse.jdt.ui,1716981022,589,YBuild Failed while building org.eclipse.jdt.ui,MohananRahul,121536011,Rahul Mohanan,,CLOSED,2023-05-19T10:03:16Z,2024-12-21T20:31:03Z,"YBuild failing as per the log, Error is from JDT UI. (org.eclipse.jdt.ui)

https://ci.eclipse.org/releng/job/YPBuilds/job/Y-build-4.28/31/console

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/589/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/589,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5c9ef6,eclipse.jdt.ui,1559619578,589,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-05-23T15:00:49Z,2023-05-23T15:00:49Z,"The constant in question was added as part of JDT core commit:

Author: Jeff Johnston <jjohnstn@redhat.com>
Date:   Mon Apr 24 22:02:17 2023 -0400

    Don't put Javadoc html block tags on separate lines if requested (#1002)
    
    * Don't put Javadoc html block tags on separate lines if requested
    
    - add new DefaultCodeFormatterConstants value:
      FORMATTER_COMMENT_JAVADOC_DO_NOT_SEPARATE_BLOCK_TAGS
    - move html block tags in CommentsPreparator to a new category
      and add a check for the new formatter option in which case
      if true, treat as break-before, otherwise treat as separate-lines
    - add code in handleFormatCodeTag() to use same option to determine
      if pre tag should have separate lines or treated as break-before
    - needed for: #991

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5c9ef6/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/589,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Ye4f8,eclipse.jdt.ui,2558232572,589,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2024-12-21T20:31:03Z,2024-12-21T20:31:03Z,This failure is totally irrelevant nowadays.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Ye4f8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1150,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1150,eclipse.jdt.ui,2109703419,1150,Java formatter Comments/Javadocs is adding blank line with extra white space,djreilly356,128174603,,,OPEN,2023-05-21T17:21:28Z,2024-01-31T09:52:29Z,"When formatting javadoc with ""Blank lines between tags of a different type"", ""Align descriptions, grouped by type"", and ""Indent wrapped @param/@throws descriptions"" and you have a description that wraps, the blank lines added have trailing white space (tabs) when they should not.

Options:
![Screen Shot 2023-05-21 at 13 17 06](https://github.com/eclipse-jdt/eclipse.jdt/assets/128174603/cb28acaf-4e91-4fc4-83d7-98616ddb71b9)

How it should look:
![Screen Shot 2023-05-21 at 13 18 20](https://github.com/eclipse-jdt/eclipse.jdt/assets/128174603/4faabfac-5976-40eb-a86a-b48e7ae5c80c)

With wrapping:
![Screen Shot 2023-05-21 at 13 18 36](https://github.com/eclipse-jdt/eclipse.jdt/assets/128174603/62a5e888-04f1-4de2-a335-5dcce0562ef2)

With wrapped text removed:
![Screen Shot 2023-05-21 at 13 19 05](https://github.com/eclipse-jdt/eclipse.jdt/assets/128174603/4a9456ea-ea8a-4374-9f56-09447f56f7d1)


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1150/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1150,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5yXevd,eclipse.jdt.ui,1918757853,1150,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2023-11-30T10:06:32Z,2023-11-30T10:06:32Z,@jjohnstn Would you please assess the status of this one?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5yXevd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/590,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/590,eclipse.jdt.ui,1719449950,590,Proposal: Make Static Refactoring,Michael5601,102024826,Michael Bangas,,CLOSED,2023-05-22T11:04:09Z,2024-01-03T01:20:18Z,"# Proposal: Make Static Refactoring

## Background
The Eclipse IDE provides plenty of refactorings for different use cases. We want to implement a `MakeStatic` refactoring like the one that IntelliJ provides. The following description should give you a little insight to our planning and the functions that we want to include in the refactoring.


## Goal
The `MakeStatic` refactoring can be applied to instance methods and fields to make them static. It updates accesses and calls of these methods and fields to retain syntactic correctness and the execution semantics of all code currently accessible by the JDT tooling.

## Description
`MakeStatic` refactoring can be used in different ways. At first we will implement it for methods only. Later, an implementation for fields is also possible.
By performing the refactoring, a `RefactoringWizard` will open, giving the user a preview of the changes to the source code. The user can confirm the changes or cancel the refactoring.

A static keyword will be added to the selected function when the refactoring is performed. Furthermore, the references to this method will be adjusted so that every invocation is working properly after the refactoring.

#### Before refactoring
```java
class Foo {
  public void bar() {
      int i = 0;
  }

  public void Reference() {
      Foo foo = new Foo();
      foo.bar();
  }
}
```

#### After refactoring `bar`
```java
class Foo {
   public static void bar() {
      int i = 0;
  }

   public void Reference() {
      Foo foo = new Foo();
      Foo.bar();
  }
}
```

## Implementation Details
### Special Application Conditions
There are several special cases in which the refactoring must function properly. The initial functionality we plan to include should analyze those cases and give the user information why the refactoring cannot be executed.

The initial implementation should only work under the following conditions:

* The refactored method does not access instance variable/method.
* The refactored method is not a constructor.
* The refactored method does not override a method of the parent type and also does not have a child type where the method is overridden.
* The type in which the refactored method is declared must not be a local type, an anonymous type or an annotation.
* The refactoring can be executed if a MethodInvocation is selected but not if a SuperMethodInvocation is selected.

This is the minimum we plan to bring into this refactoring for now. In the following we provide a list with additional functions this refactoring should be able to do in the future.

### Precondition checks
In the following we discuss which of the above conditions will be checked as **initial preconditions** to make sure that the refactoring can be started and the workspace is in a stable state.

#### Initial conditions
1. Check for constructor:
The refactoring should not be able to change a constructor method into a static method.

2. Check for local type, anonymous type or annotation:
The parent type of the refactored method must not be local because it is not possible to access them outside of the method they are declared in. So a static method is not possible in local types. Anonymous types do not have a class name to associate them with so they also do not allow static methods. Annotations can have methods but should be used for metadata and not behavior, so static methods will not be allowed. 

3. Check for SuperMethodInvocation:
The refactoring should not change the method of the parent type to static if a SuperMethodInvocation in the child type is selected. It would not be possible to access the method of the parent type with the ""super"" keyword anymore.

#### Final conditions
After the **initial conditions** are met the refactoring can be started. It is important to add **final checks** that have to be met in runtime. The user gets a error message with the specific status if a condition check fails:

1. Check for access to instance variables and methods:
The refactoring should not change a method to static if it contains instance variable access or instance method access. A static method can only access static variables or methods without having an instance of a class.

2. Check if method overrides a method of parent type:
It should not be possible to refactor a method that overrides a method of the parent type. This is because a static method cannot override a method of the parent type. It is important that the AST will be analyzed for overrides before executing the refactoring.

3. Check if method is overridden in hierarchy:
The refactoring can not be executed if the refactored method is overridden in a child type because a static method cannot be overridden.

### Extensions
When the initial scope of the refactoring is implemented, extensions can be added.
Most extensions add functionality for the various edge cases covered in the conditions.

1. Instance variables and instance method access in method body:

    Should a type contain instance variables or methods that are used in the refactored 	method, the `MakeStatic` refactoring will have the same behavior but additionally an instance of the type will be added to the parameter list of the method. Every access of an instance variable or instance method inside the refactored method will be modified with the new parameter.

 #### Before refactoring
```java
class Foo {
       int i = 0;

       public void bar() {
            this.i = 0;
       }

       public void instanceReference() {
             this.bar();
        }

        public static void staticReference() {
              Foo foo = new Foo();
              foo.bar();
         }
}
```

 #### After refactoring `bar`
```java
class Foo {

         int i = 0;

          public static void bar(Foo foo) {
               foo.i = 0;
          }

         public void instanceReference() {
               Foo.bar(this);
         }

         public static void staticReference() {
               Foo foo = new Foo();
               Foo.bar(foo);
          }
}
```

   Additionally some final conditions need to be checked to make sure that the refactoring works properly:

 - Check for duplicate method signature:
It is possible that a method with the same signature as the refactored method already exists. In this case the refactoring will be canceled and the user will receive an error message.

 - Check for duplicate parameter name:
If the new parameter that is introduced to the refactored method has the same name as an already existing parameter the refactoring will be canceled and the user will receive an error message.

2. Refactoring a method that overrides a method of the parent type:

    This extension should make it possible to refactor a method that overrides a method of the parent type. After the refactoring a potential  `Override` annotation is deleted and the “super”-keyword will be exchanged with a new parameter containing an instance of the subclass. This is only possible when there is no further override in the lower hierarchy. If there is another override the same error will be shown as in the initial implementation. This means that only the lowest method in the hierarchy can be refactored. Even though no compiler error will be thrown after refactoring, it is necessary to include a warning when refactoring an overridding method in the subtype. This is because the program semantics can be changed very quickly if the hierarchy will be changed.

 #### Before refactoring
 ```java
public class SuperClass {

        public String toRefactor(String bar) {
              String i = bar;
              return i;
        }
}
```
```java
public class SubClass extends SuperClass {

        @Override
        public String toRefactor(String bar) {
             String i = super.toRefactor(bar);
             return i;
        }

        public static void staticMethod() {
            SubClass instance = new SubClass();
            String j = instance.toRefactor(""bar"");
        }
}
```

 #### After refactoring `toRefactor`

 ```java
public class SuperClass {

        public String toRefactor(String bar) {
            String i = bar;
            return i;
        }
}
```
```java
public class SubClass extends SuperClass {

       public static String toRefactor(String bar, SubClass subclass) {
           String i = subclass.toRefactor(bar);
           return i;
       }

       public static void staticMethod() {
           SubClass instance = new SubClass();
           String j = SubClass.toRefactor(""bar"", instance);
       }
}
```

## Feedback
We look forward to your feedback on the idea for adding such a `MakeStatic` refactoring. We particularly appreciate your input on:
1. The overall idea of having such a refactoring
2. Specific pointers to preconditions or special cases that may need to be consider before or while applying the refactoring.
3. Ideas for further extensions of the refactoring.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/590/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/590,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dBSJE,eclipse.jdt.ui,1560617540,590,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-05-24T07:47:56Z,2023-05-24T07:47:56Z,I am curious: what is the benefit of mass-converting to static? Is there any measurable runtime benfit? Doesn't the JVM erase unneeded parameters?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dBSJE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/590,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ds6H4,eclipse.jdt.ui,1572053496,590,NA,Michael5601,102024826,Michael Bangas,,NA,2023-06-01T13:27:17Z,2023-06-01T13:27:17Z,"The use case of the refactoring is to ease the refactoring of methods that were initially defined for a non-static context to be used in a static context.

Initial:
```java
public double calculateAverage(double[] numbers) {
		if (numbers == null || numbers.length == 0) {
			return 0.0;
		}

		double sum = 0.0;
		for (double number : numbers) {
			sum += number;
		}

		return sum / numbers.length;
	}
```
After Refactoring:
```java
public static double calculateAverage(double[] numbers) {
		if (numbers == null || numbers.length == 0) {
			return 0.0;
		}

		double sum = 0.0;
		for (double number : numbers) {
			sum += number;
		}

		return sum / numbers.length;
	}
```
Calls:
```java
public void caller() {
		double[] arr = { 0.5, 1.4, 2.5, 3.1 };
		Foo foo= new Foo();

                //instance method call
		foo.calculateAverage(arr);
	}
```
```java
public void caller() {
		double[] arr = { 0.5, 1.4, 2.5, 3.1 };
                Foo foo = new Foo();

                //static method call with instance
		foo.calculateAverage(arr);
                //static method call
		calculateAverage(arr);
	}
```

The JVM does not eliminate unused parameters. Particularly, it is rather difficult to eliminate references to <code>this</code> as non-static, non-final method references are usually resolved via the vtable of the object's class (https://wiki.openjdk.org/display/HotSpot/VirtualCalls).

There are also performance implications for very hot utility methods due to the multiple hops needed to resolve virtual calls. However, our central motivation is to ease the refactoring of non-static methods to be called in static contexts, where <code>this</code> is not used.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ds6H4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/596,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/596,eclipse.jdt.ui,1726475629,596,Java Formatter does not honor new line after annotations on parameters,,,,,CLOSED,2023-05-25T20:53:10Z,2023-05-26T12:58:36Z,"Have this selection in the formatter
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/87991620/192a2ccb-da2f-448b-9279-88eef9b3343f)
which translates to 

< setting id=""org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter"" value=""do not insert""/>

but still code is formatted like this:

> protected Object initialize(@SuppressWarnings(""unused"")
> Core<?> parent, Physical physical)

Instead of 

> protected Object initialize(@SuppressWarnings(""unused"") Core<?> parent, Physical physical)

Saw this in Eclipse 2023-03 and so tried 2022-12 and 2022-09 and they seem to have the same issue. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/596/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/596,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dMd7v,eclipse.jdt.ui,1563549423,596,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-05-25T21:54:05Z,2023-05-25T21:54:05Z,"@lynntanksley I am unable to reproduce this.  I don't have a Core or Physical class so I have:
```

package tests;

import java.util.Collection;

public class TestAnnotation {

	public void foo(@SuppressWarnings(""unused"") int a, int b) {
	}

	protected Object initialize(@SuppressWarnings(""unused"") Collection<?> parent, String physical) {
		return null;
	}

}
```

Specifying the setting makes the newline appear.  Without the setting, it doesn't do anything.

Can you provide more info?  Are you using the default formatter settings and if not, does it work when you switch back to default?  If you have custom settings and the default works, please provide your settings.  Does the sample I provided still exhibit the problem for you?  If not, can you provide the source being formatted or if not, can you provide a sample java file that exhibits the problem?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dMd7v/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/596,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dMlwj,eclipse.jdt.ui,1563581475,596,NA,,,,,NA,2023-05-25T22:21:33Z,2023-05-25T22:21:33Z,"Ok, thanks for the response. I found that we have a file called this, left over from 2018 version of eclipse:

> .settings/org.eclipse.jdt.core.prefs

I changed back to default prefs and deleted that file and then imported my custom profile again. Now that formatting works. Is the org.eclipse.jdt.core.prefs no longer needed?
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dMlwj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/596,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dNAsC,eclipse.jdt.ui,1563691778,596,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-05-26T01:19:34Z,2023-05-26T01:19:34Z,"The .settings/org.eclipse.jdt.core.prefs file in your project contains project-specific core preferences that are saved from session to session.  Any preferences that aren't specified in that file will either use the workspace preferences or use default values.  Some projects save these in their repos so everyone is using the same settings (e.g. so all files format to some consistent rule set).  If your previous settings file has some settings you wish to use, simply set the preferences again, specifying to configure project specific preferences.  Otherwise, if you are happy with the workspace settings and defaults, then you are fine.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dNAsC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/596,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dPjFO,eclipse.jdt.ui,1564356942,596,NA,,,,,NA,2023-05-26T12:58:36Z,2023-05-26T12:58:36Z,"Okay, this explains a lot. I think I've got it now. Thanks for the help.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dPjFO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/597,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/597,eclipse.jdt.ui,1727259365,597,NPE during CreateObjectReferenceProposal,jukzi,51790620,Jörg Kubitz,,CLOSED,2023-05-26T09:33:08Z,2023-06-08T23:29:47Z,"Got two similar exceptions today during editing java with slightly different stacktraces.
`(VariableDeclaration) name.getParent()` is documented that it may return null type. 
@jjohnstn can you please add a nullcheck in org.eclipse.jdt.internal.ui.text.correction.proposals.CreateObjectReferenceProposal.findReference(ASTNode, Type)

```
null
org.eclipse.jdt.ui
Error
Fri May 26 09:44:00 CEST 2023
Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".

java.lang.NullPointerException: Cannot invoke ""org.eclipse.jdt.core.dom.Type.accept(org.eclipse.jdt.core.dom.ASTVisitor)"" because ""type"" is null
	at org.eclipse.jdt.internal.corext.dom.ASTNodes.getQualifiedTypeName(ASTNodes.java:1173)
	at org.eclipse.jdt.internal.ui.text.correction.proposals.CreateObjectReferenceProposal.findReference(CreateObjectReferenceProposal.java:150)
	at org.eclipse.jdt.internal.ui.text.correction.proposals.CreateObjectReferenceProposal.hasProposal(CreateObjectReferenceProposal.java:84)
	at org.eclipse.jdt.internal.ui.text.correction.LocalCorrectionsSubProcessor.addObjectReferenceProposal(LocalCorrectionsSubProcessor.java:870)
	at org.eclipse.jdt.internal.ui.text.correction.QuickFixProcessor.process(QuickFixProcessor.java:494)
	at org.eclipse.jdt.internal.ui.text.correction.QuickFixProcessor.getCorrections(QuickFixProcessor.java:361)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionCollector.safeRun(JavaCorrectionProcessor.java:381)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.run(JavaCorrectionProcessor.java:341)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.process(JavaCorrectionProcessor.java:336)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectCorrections(JavaCorrectionProcessor.java:465)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectProposals(JavaCorrectionProcessor.java:284)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getMarkerAnnotationFixes(ProblemHover.java:154)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.computeCompletionProposals(ProblemHover.java:95)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.<init>(ProblemHover.java:74)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover.createAnnotationInfo(ProblemHover.java:178)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover.getHoverInfo2(AbstractAnnotationHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
```

```
null
org.eclipse.jdt.ui
Error
Fri May 26 09:43:58 CEST 2023
Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".

java.lang.NullPointerException: Cannot invoke ""org.eclipse.jdt.core.dom.Type.accept(org.eclipse.jdt.core.dom.ASTVisitor)"" because ""type"" is null
	at org.eclipse.jdt.internal.corext.dom.ASTNodes.getQualifiedTypeName(ASTNodes.java:1173)
	at org.eclipse.jdt.internal.ui.text.correction.proposals.CreateObjectReferenceProposal.findReference(CreateObjectReferenceProposal.java:150)
	at org.eclipse.jdt.internal.ui.text.correction.proposals.CreateObjectReferenceProposal.hasProposal(CreateObjectReferenceProposal.java:84)
	at org.eclipse.jdt.internal.ui.text.correction.LocalCorrectionsSubProcessor.addObjectReferenceProposal(LocalCorrectionsSubProcessor.java:870)
	at org.eclipse.jdt.internal.ui.text.correction.QuickFixProcessor.process(QuickFixProcessor.java:494)
	at org.eclipse.jdt.internal.ui.text.correction.QuickFixProcessor.getCorrections(QuickFixProcessor.java:361)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionCollector.safeRun(JavaCorrectionProcessor.java:381)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.run(JavaCorrectionProcessor.java:341)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.process(JavaCorrectionProcessor.java:336)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectCorrections(JavaCorrectionProcessor.java:465)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectProposals(JavaCorrectionProcessor.java:284)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.computeQuickAssistProposals(JavaCorrectionProcessor.java:247)
	at org.eclipse.jface.text.quickassist.QuickAssistAssistant$ContentAssistProcessor.computeCompletionProposals(QuickAssistAssistant.java:71)
	at org.eclipse.jface.text.contentassist.ContentAssistant$2.lambda$0(ContentAssistant.java:2063)
	at java.base/java.util.Collections$SingletonSet.forEach(Collections.java:4905)
	at org.eclipse.jface.text.contentassist.ContentAssistant$2.run(ContentAssistant.java:2062)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.ContentAssistant.computeCompletionProposals(ContentAssistant.java:2059)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.computeProposals(CompletionProposalPopup.java:577)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.lambda$0(CompletionProposalPopup.java:507)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:502)
	at org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1873)
	at org.eclipse.jface.text.quickassist.QuickAssistAssistant.showPossibleQuickAssists(QuickAssistAssistant.java:113)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionAssistant.showPossibleQuickAssists(JavaCorrectionAssistant.java:194)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:201)
	at org.eclipse.ui.texteditor.TextOperationAction.lambda$0(TextOperationAction.java:130)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ui.texteditor.TextOperationAction.run(TextOperationAction.java:130)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor91.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:309)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:243)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:655)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1286)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmKeyDown(Widget.java:1840)
	at org.eclipse.swt.widgets.Control.WM_KEYDOWN(Control.java:5152)
	at org.eclipse.swt.widgets.Canvas.WM_KEYDOWN(Canvas.java:406)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4775)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5040)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/597/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/597,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dRg5p,eclipse.jdt.ui,1564872297,597,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-05-26T20:01:53Z,2023-05-26T20:01:53Z,@jukzi Done.  I have put a milestone of 4.29 M1.  If this is something you think has to go into RC2 then speak up and we'll have to get Andrey involved.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5dRg5p/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1034,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1034,eclipse.jdt.ui,2058146760,1034,Inline local variable fails with non-static class attributes,marco-ceriani,28620342,Marco Ceriani,,OPEN,2023-05-29T12:11:45Z,2023-12-28T08:30:13Z,"In the latest version (In version 4.27.0) the refactor for inlining local variable fails when the variable points to a class attribute. 

In the following example, if I try to inline the variable _name_, the refactor converts the variable in a static reference, and then fails.

```
public class InlineAttributeBug {

    static class Attributes {
        String name;
        String age;
    }

    String foo() {
        Attributes attributes = new Attributes();
        attributes.name = ""fooobar"";

        // inlining variable name fails
        String name = attributes.name;
        return String.format(""%s"", name);
    }
}
```

What the refactor proposes is the line `String.format(""%s"", InlineAttributeBug.Attributes.name)`, which fails because the attribute is not static.

P.S. I know that having public, non static, attributes is a bad practice, but sometimes you have to work with legacy code or auto-generated code that you cannot modify. 
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1034/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1034,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vhDw9,eclipse.jdt.ui,1870937149,1034,NA,srikanth-sankaran,131454720,Srikanth Sankaran,,NA,2023-12-28T08:29:34Z,2023-12-28T08:29:34Z,"Problem arises when `org.eclipse.jdt.core.dom.AST.newName(String)` is called with argument being `.InlineAttributeBug.Attributes.name` - note the initial '.'

This arises in this call stack:

```
AST.newName(String) line: 2507	
InlineTempRefactoring.createFullyQualifiedName(SimpleName, ITypeBinding, int, boolean) line: 705	
InlineTempRefactoring.createFullyQualifiedName(SimpleName, ITypeBinding, boolean) line: 678	
InlineTempRefactoring.getAlternativeQualifications(SimpleName, Name) line: 586	
InlineTempRefactoring.checkClashes(VariableDeclaration) line: 257	
InlineTempRefactoring.checkInitialConditions(IProgressMonitor) line: 243	
CheckConditionsOperation.run(IProgressMonitor) line: 84	
Workspace.run(ICoreRunnable, ISchedulingRule, int, IProgressMonitor) line: 2453	
Workspace.run(IWorkspaceRunnable, ISchedulingRule, int, IProgressMonitor) line: 2478	
WorkbenchRunnableAdapter.run(IProgressMonitor) line: 89	
ModalContext$ModalContextThread.run() line: 122	
```

Problem originates in `InlineTempRefactoring.createFullyQualifiedName(SimpleName, ITypeBinding, int, boolean) ` in these lines:

```
		StringBuilder qualifiedName = new StringBuilder();
		if (addPackage && declaringClasses.size() > 0) {
			qualifiedName.append(declaringClasses.get(declaringClasses.size() - 1).getPackage().getName());
			qualifiedName.append('.');
		}
```

This code won't work for unnamed package.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vhDw9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/601,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/601,eclipse.jdt.ui,1730725876,601,Automated Name Recommendation For The Extract Local Variable Refactoring,Michaelll123,33093740,Michaelll123,,CLOSED,2023-05-29T13:00:57Z,2023-06-08T22:06:12Z,"### Automated Name Recommendation For The Extract Local Variable Refactoring
---
**Description**
---
""Extract Variable"" refactoring is a useful feature of JDT. However, the names recommended for the extracted variables sometimes are substantially different from what developers manually coin. Here we report a case as follows:
This example is a real-world case of extracting local variable refactoring in GeoServer, an open-source software server written in Java that allows users to share and edit geospatial data. (https://github.com/geoserver/geoserver/commit/c54d9ccbebd5d55ff2bcb2ca4db5e7167c1e2f2a#diff-40dd1af56b59d542f9c41036b47c0db77b2b4a5bc8ece7a2f4a78cc196867181, line 61 in src/community/oseo/oseo-stac/src/main/java/org/geoserver/ogcapi/stac/TemplatedItemsConverter.java )
```java
/* CS1: Real Case of Extract Local Variable Refactoring */
protected void writeInternal(
            AbstractItemsResponse itemsResponse, HttpOutputMessage httpOutputMessage)
            throws IOException {
-		RootBuilder builder = templates.getItemTemplate();
        try (STACGeoJSONWriter writer =
                new STACGeoJSONWriter(
                        new JsonFactory()
                                .createGenerator(httpOutputMessage.getBody(), JsonEncoding.UTF8))) {
            writer.startTemplateOutput(null);
            try (FeatureIterator features = itemsResponse.getItems().features()) {
                while (features.hasNext()) {
-					builder.evaluate(writer, new TemplateBuilderContext(features.next()));
+       			// lookup the builder, might be specific to the parent collection
+        			Feature feature = features.next();
+        			String collectionId =
+                		(String) feature.getProperty(""parentIdentifier"").getValue();
+        			RootBuilder builder = templates.getItemTemplate(collectionId);
+        			builder.evaluate(writer, new TemplateBuilderContext(feature));
                }
            }
            //Do other things
      	    // ...
        } catch (Exception e) {
            throw new ServiceException(e);
        }
    }
```
The actual name developer assigned to the extracted expression, i.e., `features.next()` (line 13 in CS1) is ""feature"". However, if we select the expression features.next() and conduct refactoring ""extract local variable"" in Eclipse, we will get the following code snippet:
```java
/* CS2: Code Snippet After Refactoring in Eclipse*/
protected void writeInternal(
            AbstractItemsResponse itemsResponse, HttpOutputMessage httpOutputMessage)
            throws IOException {
		RootBuilder builder = templates.getItemTemplate();
        try (STACGeoJSONWriter writer =
                new STACGeoJSONWriter(
                        new JsonFactory()
                                .createGenerator(httpOutputMessage.getBody(), JsonEncoding.UTF8))) {
            writer.startTemplateOutput(null);
            try (FeatureIterator features = itemsResponse.getItems().features()) {
                while (features.hasNext()) {
					Feature next = features.next();
					builder.evaluate(writer, new TemplateBuilderContext(feature));
                }
            }
            //Do other things
      	    // ...
        } catch (Exception e) {
            throw new ServiceException(e);
        }
    }
```
The name recommended for the extracted variable is ""next"" which is substantially different from what the developers finally selected. 

**Solution**
---
To this end, we proposed a new rule for recommending names for extracted variables:
`X = Xs.next()`, where ""Xs"" represents the receiver object in plural format, and ""X"" represents the singular format of the receiver object. Note that there are multiple plural forms, e.g., *f -> *ves, and here we just take ""X"" and ""Xs"" for example. 

The precondition for applying this rule is specified as follows:
1. The expression to be extracted is an instance of MethodInvocation.
2. The selected expression contains a receiver that is a SimpleName.
3. The receiver object is in plural format, indicating that it is a collection object.
4. The invoked method is named ""next"", indicating that the expression is to retrieve a single element from the collection.

To validate the effectiveness of the proposed rule, we identified real-world  extracted variables refactorings by mining commit histories of projects on GitHub.  
Evaluation results suggest that Xs.next() is often extracted as local variables, and developers rarely (2 out of 26 cases) name the variables as ""next"" (as Eclipse recommends). 
In contrast, the manually selected variable names are identical to the ones recommended by the new rule in 15 out of 26 cases, much higher than the success rate of Eclipse's default recommendation. 

**We will submit the pull request (implementing the new rule) if that is fine.**


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/601/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/601,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5daHtp,eclipse.jdt.ui,1567128425,601,NA,liuhuigmail,10864327,HUI LIU,liuhui08@bit.edu.cn,NA,2023-05-29T13:15:00Z,2023-05-29T13:15:00Z,"@jjohnstn  Following our contribution in safer extract local variable refactoring to Eclipse, now we begin to improve the recommendation of variables names during the refactoring.  

Please kindly have a look at the issue and the solution. Thanks. 


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5daHtp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/603,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/603,eclipse.jdt.ui,1733279217,603,Add name recommendation function for renaming field.,DongChunHao,77560508,DongChunHao,,CLOSED,2023-05-31T02:19:58Z,2023-06-09T02:51:56Z,"## Description
     ""Rename"" refactoring is a useful feature of JDT. Recommending a more suitable name can improve a programmer's development efficiency. 
      Here we report a case as follows: this example is a real-world case of renaming field in spring-framework. We have found that renaming the field ""configurer"" to a new name ""webMvcConfigurer"" based on the field type.
![1685343851888](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/77560508/8b11d3e8-b3cd-4d59-b96a-7d3a930d3eca)
     However, renaming fields in this tool does not currently support recommending new names.  When renaming the field ""configurer"", the old field name appears in the wizard for the new name, which seems illogical.
![1685495066409](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/77560508/246449a1-e7c8-4e0c-a17b-ce521fe7ec44)
## Solution
    We submit the pull request  to resolve this issue. When renaming a field, recommend a new name based on the field type and display it in the renaming wizard.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/603/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/605,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/605,eclipse.jdt.ui,1733324473,605,List of projects within a working set often are displayed duplicated ,aino-gautam,519118,Debasish padhy,,CLOSED,2023-05-31T03:27:21Z,2023-06-07T21:55:02Z,"As you can see in the screenshot project list is often displayed duplicated. I have noticed this to happen specially in the working sets in a list of working sets down the order. 

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/519118/7cd033a2-4275-4aad-af66-a60cc6112c0f)

**Version of eclipse in use**

Version: 2023-03 (4.27.0)
Build id: 20230309-1520
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/605/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/605,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5d2h5W,eclipse.jdt.ui,1574575702,605,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-06-03T02:31:42Z,2023-06-03T02:31:42Z,Hi @aino-gautam I am unable to reproduce this with vanilla 2023-03 SDK or 2023-06 RC1 with about 6 Java projects.  Is there any more information you can provide on how to reproduce this like what other plug-ins/features you have installed?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5d2h5W/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/605,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5d3pe_,eclipse.jdt.ui,1574868927,605,NA,aino-gautam,519118,Debasish padhy,,NA,2023-06-03T11:12:06Z,2023-06-03T11:12:06Z,"@jjohnstn Here is a link to my eclipse installation details taken directly from about eclipse dialog. Below you will also find an error log visible the same dialog .. related to binding conflicts. 

On my installation it occurs for every 2nd working set I create. And it repeats each time... sort of a standar feature. I also use git repository groups. Not sure if they could affect each other. 

What else can I share that might help ? 
[Gist of eclipse installation summary](https://gist.github.com/aino-gautam/65341adf4a8bf99ab55841b324e2520e)

!SESSION 2023-06-03 16:32:07.765 -----------------------------------------------
eclipse.buildId=4.27.0.20230309-1200
java.version=17.0.7
java.vendor=Oracle Corporation
BootLoader constants: OS=linux, ARCH=x86_64, WS=gtk, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os linux -ws gtk -arch x86_64 -product org.eclipse.epp.package.jee.product

This is a continuation of log file /home/dga/dev/gitdev-workspace/.metadata/.bak_0.log
Created Time: 2023-06-03 16:32:13.016

!ENTRY ch.qos.logback.classic 1 0 2023-06-03 16:32:13.016
!MESSAGE Logback config file: /home/dga/dev/gitdev-workspace/.metadata/.plugins/org.eclipse.m2e.logback/logback.2.1.100.20230106-1511.xml

!ENTRY org.eclipse.jface 2 0 2023-06-03 16:32:17.108
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-06-03 16:32:17.108
!MESSAGE A conflict occurred for CTRL+SHIFT+F11:
Binding(CTRL+SHIFT+F11,
	ParameterizedCommand(Command(org.eclipse.eclemma.ui.commands.CoverageLast,Coverage,
		Coverage,
		Category(org.eclipse.debug.ui.category.run,Run/Debug,Run/Debug command category,true),
		WorkbenchHandlerServiceHandler(""org.eclipse.eclemma.ui.commands.CoverageLast""),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+F11,
	ParameterizedCommand(Command(org.eclipse.tcf.te.tcf.ui.toolbar.command.historyLast,Execute Last Action,
		,
		Category(org.eclipse.tcf.te.ui.commands.category,Target Explorer Commands,null,true),
		WorkbenchHandlerServiceHandler(""org.eclipse.tcf.te.tcf.ui.toolbar.command.historyLast""),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,gtk,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-06-03 16:32:17.108
!MESSAGE A conflict occurred for ALT+CTRL+P:
Binding(ALT+CTRL+P,
	ParameterizedCommand(Command(org.eclipse.linuxtools.changelog.core.preparechangelog,Prepare Changelog,
		Prepares Changelog,
		Category(org.eclipse.linuxtools.changelog,Changelog,Changelog key bindings,true),
		WorkbenchHandlerServiceHandler(""org.eclipse.linuxtools.changelog.core.preparechangelog""),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+CTRL+P,
	ParameterizedCommand(Command(org.eclipse.m2e.profiles.ui.commands.selectMavenProfileCommand,Select Maven Profiles,
		,
		Category(org.eclipse.ui.category.window,Window,null,true),
		WorkbenchHandlerServiceHandler(""org.eclipse.m2e.profiles.ui.commands.selectMavenProfileCommand""),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.update.configurator 4 0 2023-06-03 16:35:18.944
!MESSAGE Can't find bundle for base name feature, locale en_IN","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5d3pe_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/605,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5d3pg0,eclipse.jdt.ui,1574869044,605,NA,aino-gautam,519118,Debasish padhy,,NA,2023-06-03T11:12:51Z,2023-06-03T11:12:51Z,"Additional note - it doesnt occur on my Mac M2. Will confirm if its the same build. Also on my ubuntu , when I delete the working set and recreate it, same behavior occurs. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5d3pg0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/605,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5d3rX1,eclipse.jdt.ui,1574876661,605,NA,aino-gautam,519118,Debasish padhy,,NA,2023-06-03T11:25:04Z,2023-06-03T11:25:04Z,And is there  a way I can easily export all installation summary including plugin list ? ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5d3rX1/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/605,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5eBWTX,eclipse.jdt.ui,1577411799,605,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-06-05T20:12:10Z,2023-06-05T20:12:10Z,You could take a screen snapshot of your Installed Software tab.  Did you start with an EPP product (e.g. Eclipse for Enterprise Java and Web Developers)?  I see a few packages referenced above in your key conflicts that I could pursue installing.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5eBWTX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/605,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5eDAeQ,eclipse.jdt.ui,1577846672,605,NA,aino-gautam,519118,Debasish padhy,,NA,2023-06-06T03:33:52Z,2023-06-06T03:33:52Z,"Please see installation summary screenshots. Also kindly help triage the issue #611 meant to address these struggles in reporting issues. 

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/519118/733515ce-4a8f-477c-a90f-b4157afcc563)
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/519118/59bf2398-8d02-491d-b928-5973747f135b)
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/519118/feafb59c-27ce-44bd-9af5-33abdfbb1f67)
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/519118/bd4c2c78-d254-4f36-9e7f-4a0ea4a30f06)

And yes I think its EPP. If I recall right I downloaded this version -
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/519118/a15ebc48-ab30-4493-94e5-9df90190eb0c)

Please suggest if I should pursue any chain of thoughts to help pinpoint the issue better. Looking into the key conflicts errors now. 
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5eDAeQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/605,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5eJL_c,eclipse.jdt.ui,1579466716,605,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-06-06T21:19:47Z,2023-06-06T21:19:47Z,"Hi @aino-gautam Thanks for the info.  I tried downloading the vanilla 2023-03 Eclipse IDE for Enterprise Java and Web Developers and creating a variety of projects, but unfortunately I can't reproduce the problem (I just created default projects of the various types and adding them to multiple working sets).   That said, I noticed you have the following additions installed:

1. CDT tools (don't think this is the issue)
2. Docker tooling from Linux Tools (won't be the issue)
3. ChangeLog plug-in from Linux Tools (won't be the issue)
4. Eclipse Jetty feature
5. FluentMark editor
6. JBoss Freemarker feature
7. Git GitFlow
8. GWT Eclipse plug-in
9. Git optional LFS support
10. Git option ssh support using JCraft
11. Linux Tools Javadocs (won't be this)
12. Javascript Development tools
13. Linux Tools JDT Docker Launcher (won't be this)
14. Mylyn Wikitext
15. Pydev for Eclipse
16. Linux Tools Systemtap (won't be this)

Of these, there a number I am unfamiliar with.  I believe one of these is the culprit (not the ones I have added ""won't be this"").  I work on Linux Tools and CDT and don't believe either of those will have caused the problem.

I would suggest try downloading a vanilla 2023-03 IDE for Enterprise Java and Web developers and importing all of your existing projects there.  Try and recreate your working sets and verify the problem does not occur (you may have some projects give errors due to missing additional features, but we aren't concerned with using this IDE, just finding out the culprit).  If that works fine for you, then we know it is the additions.

From there, try installing the various features above that I haven't designated as probably safe one by one and see if the problem surfaces.  I would start with Pydev as it uses a large assortment of extensions and might well be the cause of the problem.

Using the separate IDE should help to keep your current work set-up intact but if you have any projects that aren't restoreable by a repo system such as git, I would suggest copying them to ensure the .project or .settings files aren't overwritten in the import stage.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5eJL_c/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/605,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5eRK5z,eclipse.jdt.ui,1581559411,605,NA,aino-gautam,519118,Debasish padhy,,NA,2023-06-07T21:55:01Z,2023-06-07T21:55:01Z,I can confirm the issue was PyDev . Uninstalling it fixed the issue and a bunch of others I was facing. including losing out on  editor vs. file associations consistently. Thanks for the pointers and support. Much appreciated. ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5eRK5z/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/606,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/606,eclipse.jdt.ui,1733327038,606,Need the ability to remove read only working sets permanently [ Java Main Sources ] and [ Java Test Sources ],aino-gautam,519118,Debasish padhy,,OPEN,2023-05-31T03:31:45Z,2023-05-31T03:47:31Z,"[ Feature request ] 

They are an absolute offense. 

Key reason being they lack any project context while looking / navingating sourcef files and eclispe ""Link with Editor"" feature automaticaly selects those working sets to identify source files. 

It would be best if [ Link with editor ] feature expands a project in project tree and links editor to  the source file in the context of the project. 

**Version of eclipse in use**

Version: 2023-03 (4.27.0)
Build id: 20230309-1520
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/606/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/608,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/608,eclipse.jdt.ui,1735797413,608,AnnotateAssistTest1d5. testAnnotateParameter_Array1 failed,noopur2507,8749449,Noopur Gupta,,OPEN,2023-06-01T08:47:10Z,2023-06-22T16:58:46Z,"I20230531-1800

ep428I-unit-mac64-java17
macosx.cocoa.x86_64
17

java.lang.NullPointerException
at java.base/java.util.Objects.requireNonNull(Objects.java:208)
at java.base/java.util.Arrays$ArrayList.<init>(Arrays.java:4137)
at java.base/java.util.Arrays.asList(Arrays.java:4122)
at org.eclipse.jdt.ui.tests.quickfix.AbstractAnnotateAssistTests.collectAnnotateProposals(AbstractAnnotateAssistTests.java:82)
at org.eclipse.jdt.ui.tests.quickfix.AnnotateAssistTest1d5.testAnnotateParameter_Array1(AnnotateAssistTest1d5.java:316)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/608/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/608,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5fjAqR,eclipse.jdt.ui,1603013265,608,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2023-06-22T16:58:38Z,2023-06-22T16:58:38Z,"I cannot reproduce and hence all I can do is analyze the code:

* `ExternalNullAnnotationQuickAssistProcessor.computeQuickAssistProposals(IQuickAssistInvocationContext)` returned null.
* There are two such exits
  * The first one could result from either `cu==null` (I don't think that possible though), or `classFile.getSource() == null`
  * The second exit would have logged a `JavaModelException`. As this has not been reported, I assume the former.
* If indeed `classFile.getSource()` answered `null`, it could either mean the classfile was not valid (I cannot see any reason for this), or we were facing an issue with buffer management.

If buffer management is the problem, indeed, then I cannot even start to guess a cause. Corrupt cache, or SourceMapper's failure to find sources?

Finding nothing specific to the annotate assist, I'm stepping back from this issue.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5fjAqR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/610,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/610,eclipse.jdt.ui,1741149636,610,UI Freeze with quick assist,fedejeanne,2205684,Federico Jeanne,,CLOSED,2023-06-05T07:24:57Z,2024-09-23T12:01:11Z,"The UI froze for 16 seconds while waiting for the content of the _quick assist_ (CTRL + 1).

Sadly I didn't create a Sample with VisualVM at the moment so all I have are the reports created by the _UI responsiveness monitoring_ (Attached: [ui_freeze_16s.log](https://github.com/eclipse-jdt/eclipse.jdt.ui/files/11649785/ui_freeze_16s.log)).


IMHO the relevant methods in the stack trace are:

```
...
	at org.eclipse.m2e.jdt.ui.internal.AddDependencyQuickFixProcessor.handleImportNotFound(AddDependencyQuickFixProcessor.java:95)
	at org.eclipse.m2e.jdt.ui.internal.AddDependencyQuickFixProcessor.getCorrections(AddDependencyQuickFixProcessor.java:79)
...
```

And I assume what's happening is that these methods end up making some expensive IO calls (I've seen them opening a file and also making an HTTP call via `okhttp3`) in the main UI Thread.

Since I don't know my way around the code yet, I won't be able to fix this issue myself. So please let me know if it can be fixed at all by someone with more experience (someone that can look into it without the samples) or if I should close it. 

Any hints about how to reproduce the issue are also appreciated :)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/610/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/610,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6MWJbX,eclipse.jdt.ui,2354616023,610,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-09-17T06:12:21Z,2024-09-17T06:12:21Z,"""org.eclipse.m2e"" is not part of jdt","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6MWJbX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/610,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6NJPXW,eclipse.jdt.ui,2368009686,610,NA,fedejeanne,2205684,Federico Jeanne,,NA,2024-09-23T12:01:11Z,2024-09-23T12:01:11Z,"> ""org.eclipse.m2e"" is not part of jdt

Thank you for mentioning it. Closing.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6NJPXW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/611,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/611,eclipse.jdt.ui,1743014483,611,Feature request - Ability to export installation summary and report issue directly within eclipse IDE,aino-gautam,519118,Debasish padhy,,OPEN,2023-06-06T03:28:45Z,2023-06-06T03:28:45Z,"**Description**

While reporting another issue #605 , devs are having a hard time reproducing it and thus felt a need for easier and accurate issue. 

**Solution**

Devs need access to 

1. Installation summary 

- all plugins installed
- version in use 
- environment summary 
- usage heuristics 
- error reports if any

2. Concise info about the issue

- relevant screenshots 
- title / description
- usage info i.e. what type of projects / tech in use etc. 
- report issue button can be made available in the UI status bar next to tip of the day using an issue icon

3. Report issue directly from IDE 

- reporter connects with GithHub OAuth from IDE
- Creates issue and selects appropriate check boxes to include relevant info describe in 1 and 2 ( by default they should be selected )

4. Help with Triage

- To help triage such issues, they should be auto marked with an unique label. 
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/611/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/616,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/616,eclipse.jdt.ui,1743667388,616,Javadoc for methods of class not shown if class comes from a jar-file and only javadoc is attached to jar-file,robert-E,2329916,,,OPEN,2023-06-06T11:30:01Z,2023-10-19T10:17:58Z,"I'm using a class coming from a jar-file for which I did not attach the sources but only its javadoc via the 'Libraries' tab in Java Build Path. 
When I hover over the class name the javadoc of the class is displayed. 
But when I hover over the name of a method of this class no javadoc is displayed - instead I see the following message:
       _Note: This element has no attached source and the Javadoc could not be found in the attached Javadoc._

I tried this with slf4j-api-2.0.7.jar and junit-jupiter-api-5.10.0-M1.jar using Eclipse 2021-12 (4.22.0) as well as 2023-06 M2 (4.28.0 M2).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/616/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/616,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5evgN0,eclipse.jdt.ui,1589511028,616,NA,ght59,86794213,huartaxway,,NA,2023-06-13T15:10:14Z,2023-06-13T15:10:14Z,"Seems that Javadoc tool generates different (html) format  between Java 11 and Java 17.
May be Eclipse is only able to read/parse/display the oldest one. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5evgN0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/616,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ph9a7,eclipse.jdt.ui,1770510011,616,NA,ght59,86794213,huartaxway,,NA,2023-10-19T10:17:58Z,2023-10-19T10:17:58Z,"[JavadocForMethod.zip](https://github.com/eclipse-jdt/eclipse.jdt.ui/files/13041169/JavadocForMethod.zip)
Some material to reproduce the issue, please follow embedded Readme.txt file.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ph9a7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/618,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/618,eclipse.jdt.ui,1744192008,618,Move SplitVariable proposal to core.manipulation to be used with jdt.ls,gayanper,7471994,Gayan Perera,,CLOSED,2023-06-06T16:20:19Z,2023-06-22T19:52:55Z,Move SplitVariable proposal to core.manipulation to be used in jdt.ls and jdt.ui both.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/618/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/622,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/622,eclipse.jdt.ui,1746152383,622,wrong code in EnumConstructorTargetFinder,jukzi,51790620,Jörg Kubitz,,CLOSED,2023-06-07T15:20:02Z,2023-06-15T16:56:29Z,"line 143/145:
```
				if (nodeArgument.getNodeType() == ASTNode.METHOD_INVOCATION) {
					nodeTypeArgument= ((Expression) nodeArgument).resolveTypeBinding();
				} else if (nodeArgument.getNodeType() == ASTNode.METHOD_INVOCATION) {
					nodeTypeArgument= ((MethodInvocation) nodeArgument).resolveMethodBinding().getReturnType();
```
https://github.com/eclipse-jdt/eclipse.jdt.ui/blame/1b699b2df9a680df80ddd88f5193bd55d89e244d/org.eclipse.jdt.ui/ui/org/eclipse/jdt/internal/ui/javaeditor/EnumConstructorTargetFinder.java#L143

does not make sense as the two conditions are the same. the code in the else branch will never be executed.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/622/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/622,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5e1URF,eclipse.jdt.ui,1591034949,622,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-06-14T11:44:46Z,2023-06-14T11:44:46Z,"@jjohnstn : I've never touched AST area, but I assume the patch could look like 
```
diff --git a/org.eclipse.jdt.ui/ui/org/eclipse/jdt/internal/ui/javaeditor/EnumConstructorTargetFinder.java b/org.eclipse.jdt.ui/ui/org/eclipse/jdt/internal/ui/javaeditor/EnumConstructorTargetFinder.java
index 8456ca8..0499233 100644
--- a/org.eclipse.jdt.ui/ui/org/eclipse/jdt/internal/ui/javaeditor/EnumConstructorTargetFinder.java
+++ b/org.eclipse.jdt.ui/ui/org/eclipse/jdt/internal/ui/javaeditor/EnumConstructorTargetFinder.java
@@ -144,3 +144,3 @@
 				ITypeBinding nodeTypeArgument= null;
-				if (nodeArgument.getNodeType() == ASTNode.METHOD_INVOCATION) {
+				if (nodeArgument.getNodeType() == ASTNode.EXPRESSION_STATEMENT) {
 					nodeTypeArgument= ((Expression) nodeArgument).resolveTypeBinding();
```

Would you please check this?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5e1URF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/622,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5e1Ubn,eclipse.jdt.ui,1591035623,622,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-06-14T11:45:20Z,2023-06-14T11:45:20Z,Code in question is coming from 1b2de80562feebd4ac6d1d610892e7954e8dd835,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5e1Ubn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/622,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5e46eW,eclipse.jdt.ui,1591977878,622,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-06-14T21:00:33Z,2023-06-14T21:00:33Z,@iloveeclipse Just an extraneous if/else.  Both work but only one should have been kept.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5e46eW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/623,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/623,eclipse.jdt.ui,1747543560,623,Function keys aren't shown anymore on a Mac ,elecharny,2922517,Emmanuel Lécharny,,OPEN,2023-06-08T10:05:00Z,2023-06-08T10:05:00Z,"In Eclipse 2020-12, when debugging, the Fn keys where shown by default on a Mac OS touch bar. In 2023-03, it's not any more the case, you need to press the 'fn' keys to see the F4, F5, etc keys in the touch bar.

I'm not sure in which version this has been changed.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/623/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/626,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/626,eclipse.jdt.ui,1751368500,626,"Add missing NON-NLS doesn't respect method level @SuppressWarnings(""nls"")",castortech,85858,,,CLOSED,2023-06-11T10:47:14Z,2023-07-26T08:15:00Z,"I have been puzzled as to why I would have NON-NLS at times in method annotated with: @SuppressWarnings(""nls"")

Now I found out why. See here:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/85858/a63ddfe7-096f-476c-9b5a-94d0ff063f6a)
The dialog reports that I have 5 problem of the same category in file, which is accurate as these are the 5 lines shown. But when I apply this quick-fix, I then goes and add NON-NLS markers to all string without the marker, including those in methods with the suppresswarnings annotation.

So the dialog picks up the right stuff but then applies it to a different and wrong set of strings.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/626/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/626,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ia1JW,eclipse.jdt.ui,1651200598,626,NA,castortech,85858,,,NA,2023-07-26T08:15:00Z,2023-07-26T08:15:00Z,"Thanks, appreciated.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ia1JW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/627,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/627,eclipse.jdt.ui,1752036352,627,Add name recommendation function for renaming field.,DongChunHao,77560508,DongChunHao,,OPEN,2023-06-12T07:00:02Z,2023-06-17T06:30:23Z,"> **Renaming is one of the most frequently used features in IDEs (like Eclipse). However, we notice that their recommendation of new names during renames could be further improved. Here we present this issue to specify how we can improve the name recommendation for Rename Field refactorings.**

- The following code snippet comes the well-known project OpenJDK.  Line 44 of jdk/src/java.desktop/share/classes/sun/ java2d /marlin/Dasher.java. In this example, the original developers renamed the field ""recLimit"" to a new name ""REC_LIMIT"" because static and fine fields should follow the well-known ConstantNamingConvention (i.e., capitalizing all characters and connecting words with ‘_’).

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/77560508/409b56c6-66f9-4d34-828d-45e41b7509be)

- When the developers select the field ""recLimit"" and click the refactoring menu ""Rename"" in Eclipse, Eclipse will present the following refactoring wizard where the old field name ""recLimit"" appears in the wizard as the default new name. 

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/77560508/65331683-94eb-4202-827b-4e3ed451607f)

- A better choice here is to recommend the field that complies with constant naming conventions as the suggested new name. As a generic rule, we propose the following heuristics:

     If (f.modifiers CONTAINS ‘Final’ ) and ( f.modifiers CONTAINS ‘Static’ ) and (f.name NOTFOLLOW ConstantNamingConvention) :
                                f.newName= Conver2ConstantNamingConvention(f.name)

- We have validated the heuristic on 10574 field renamings actually conducted by the original developers in open-source applications. In total, the heuristic recommend 1073 names where 922 are exactly the same as what the original developers finally used. That is , the precision is 86%.

- We also submit the pull request to resolve this issue. When renaming field names that violate the constant naming convention, we modify the original field name to comply with the constant naming conventions and suggest it as the new name, and display it in the rename wizard. 


  ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/627/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/627,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ezOFs,eclipse.jdt.ui,1590485356,627,NA,liuhuigmail,10864327,HUI LIU,liuhui08@bit.edu.cn,NA,2023-06-14T05:18:01Z,2023-06-14T05:18:01Z,"@jjohnstn  We have submitted here a minor suggestion on how to faciliate renaming refactoring in Eclipse. Please kindly have a look on the issue as well as the associated PR. 

Thanks.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ezOFs/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/627,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5e_uT8,eclipse.jdt.ui,1593763068,627,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-06-15T21:47:25Z,2023-06-15T21:47:25Z,@liuhuigmail will take a look at it,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5e_uT8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/627,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5fG5mI,eclipse.jdt.ui,1595644296,627,NA,liuhuigmail,10864327,HUI LIU,liuhui08@bit.edu.cn,NA,2023-06-17T06:30:23Z,2023-06-17T06:30:23Z,Thanks @jjohnstn ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5fG5mI/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/639,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/639,eclipse.jdt.ui,1766529996,639,Bug 559614 - Decimal/hexadecimal values hover,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2023-06-12T14:52:38Z,2023-06-21T20:24:51Z,"From original bug:

Hover help with constant

When hovering over a byte, short, int or long constant, Eclipse conveniently displays the decimal and hexadecimal values of that constant (see attachment).

However, when the constant's value is inlined, no such help is provided, for example with this piece of code:
public class Main {
    public static void main(String[] args) {
        System.out.println(0b00001111);
    }
}

It would be nice if hovering over inlined values could provide decimal and hexadecimal values as well, possibly with a preference flag.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/639/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/629,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/629,eclipse.jdt.ui,1752957985,629,Bug 573344 - Quick fix - Convert to method reference similar to quick fix for convert to lambda,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2023-06-12T15:00:47Z,2023-06-22T21:06:24Z,"Consider converting directly to using a method reference when converting to lambda

JDT provides a quick fix to convert to to lambdas. In many scenarios this can be immidiately followed by a convert to method reference. Would be nice it JDT offers this directly in situations where this is possible.


Example:

toolBar.getDisplay().asyncExec(new Runnable() {

					@Override
					public void run() {
						menu.dispose();

					}
				});

-> Convert to lambda:

	@Override
			public void menuHidden(MenuEvent e) {
				toolBar.getDisplay().asyncExec(() -> menu.dispose());
			}

-> Convert to method reference:

	@Override
			public void menuHidden(MenuEvent e) {
				toolBar.getDisplay().asyncExec(menu::dispose);
			}","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/629/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/630,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/630,eclipse.jdt.ui,1753076349,630,Bug 507865 - [extract interface] Extract interface loses @Deprecated,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2023-06-12T16:02:33Z,2023-07-14T00:08:46Z,"From original bug: https://bugs.eclipse.org/bugs/show_bug.cgi?id=507865

When I extract an interface from a class, that has deprecated methods, the @Deprecated annotation is not carried over to the interface.

I don't know, if there are cases, where this might be useful. But it should not be default behavior.

If Java 8 is used, the refactoring could even (optionally) put the deprecated method into the interface as 'default' implementation and totally remove from the original class.

[[tag](https://bugs.eclipse.org/bugs/show_bug.cgi?id=507865#)] [[reply](https://bugs.eclipse.org/bugs/show_bug.cgi?id=507865#add_comment)] [[−]](https://bugs.eclipse.org/bugs/show_bug.cgi?id=507865#) [Comment 1](https://bugs.eclipse.org/bugs/show_bug.cgi?id=507865#c1)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/630/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/631,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/631,eclipse.jdt.ui,1754562094,631,Eclipse becomes unresponsive when trying to refresh a viewer with more than 30000 elements on one level,raghucssit,10301131,Raghunandana,,CLOSED,2023-06-13T10:31:35Z,2023-08-12T07:09:05Z,"This issue is to consume the solution provided for platform ui issue https://github.com/eclipse-platform/eclipse.platform.ui/issues/818
This is still a draft stage. Platform UI fix is still in progress.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/631/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/641,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/641,eclipse.jdt.ui,1772063344,641,Move JoinVariable proposal to core.manipulation to be used with jdt.ls,gayanper,7471994,Gayan Perera,,CLOSED,2023-06-23T20:01:18Z,2023-06-26T14:37:31Z,Move SplitVariable proposal to core.manipulation to be used in jdt.ls and jdt.ui both.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/641/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/643,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/643,eclipse.jdt.ui,1774147615,643,"Search for private references returns impossible ""potential"" matches in javadoc",laeubi,1331477,Christoph Läubrich,,OPEN,2023-06-26T07:43:28Z,2023-09-08T04:28:18Z,"I search for a private local variable using right click > references > workspace, the search offers me a ""potential match"" in some jar:

![grafik](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1331477/6e66b7ad-5a20-4197-9672-3d0e241639dd)

this has several problems:

1. a private field can't be referenced outside of the class in no way so actually anything else can be ignored (and reduce the search time)
2. even if the field would be public or protected, the ""potential match"" has nothing to do with this class/field at all, the only similarity is that is is named the same

In this case it seems that the javadoc reference  
```
 /**
   * The location of this symbol. Whether a server is allowed to
   * return a location without a range depends on the client
   * capability {@link SymbolCapabilities#resolveSupport}.
   * <p>
   * See also {@link SymbolInformation#location}.
   */
```

confuses JDT, but again `SymbolInformation` has no relation to `MavenExternalRuntime` at all...","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/643/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/643,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5fyCsa,eclipse.jdt.ui,1606953754,643,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-06-26T08:21:30Z,2023-06-26T08:21:30Z,"Nice one.

I haven't checked sources why anyone would ever consider javadoc matches with similar names **from other classes** for **private** fields (may be this was some use case), but on first glance this doesn't make any sense.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5fyCsa/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/643,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5fyE8h,eclipse.jdt.ui,1606962977,643,NA,laeubi,1331477,Christoph Läubrich,,NA,2023-06-26T08:28:00Z,2023-06-26T08:28:00Z,"I noticed this in other areas as well but thought this to be easy enough to be analyzed and fixed :-)

This becomes incredible annoying if you search for something very common, e.g. `status` or `run` as it show you many matches from the classpath that are completely unrelated.

Beside that, it seems that references in javadoc require an import of the class (even it is never used) or one gets complains about missing import, so I assume that the javadoc search is performed because of this.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5fyE8h/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/643,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5l_Kkj,eclipse.jdt.ui,1711057187,643,NA,laeubi,1331477,Christoph Läubrich,,NA,2023-09-08T04:28:17Z,2023-09-08T04:28:17Z,"What I also noticed (and might be related to this) is when I have a method that has a quite common name and perform a rename refactoring it could take literally *ages* for JDT to perform the refactoring (freezing the whole eclipse) even though there are only a few ""real"" references to that method, refactoring methods with unique names on the other hand is always fast.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5l_Kkj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/644,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/644,eclipse.jdt.ui,1774189082,644,F4 shortcut (Open Type Hierarchy) disappears if LSP4E is installed,Graou74,54896431,,,OPEN,2023-06-26T08:01:03Z,2024-03-08T09:59:35Z,"Following the latest update, the F4 shortcut is no longer possible :
<img width=""257"" alt=""Capture d’écran 2023-06-26 à 09 45 57"" src=""https://github.com/eclipse-jdt/eclipse.jdt.core/assets/54896431/77d40665-4c00-4fa2-ba49-7532e1d4e707"">

Whereas until now it was like this :
<img width=""256"" alt=""Capture d’écran 2023-06-26 à 09 46 29"" src=""https://github.com/eclipse-jdt/eclipse.jdt.core/assets/54896431/44c28660-8466-4005-b78f-79d00baf29bd"">

Shortcut settings remain unchanged :
<img width=""914"" alt=""Capture d’écran 2023-06-26 à 09 47 26"" src=""https://github.com/eclipse-jdt/eclipse.jdt.core/assets/54896431/8427cee6-ee7b-4d5b-8dfe-e588737165cb"">

Nothing blocking, just a very comfortable little feature.

My Eclipse configuration on Macos :
Version: 2023-06 (4.28.0)
Build id: 20230608-1333
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/644/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/644,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5fyA8k,eclipse.jdt.ui,1606946596,644,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-06-26T08:15:38Z,2023-06-26T08:15:38Z,"It could be installed CDT could somehow break the shortcut.
I can't see the issue in the default SDK on master (without CDT). However, I also don't see ith with 4.25 SDK + CDT. So it could be a change in platform or CDT.

But could you please explain:
- is this only a ""visual""  issue of not showing the key binding, or `F4` doesn't work anymore at all?
- do you have any errors in the log?
- can you please try to create a fresh new workspace and check if that could be a problem with the old workspace?
- if the issue appears in the new workspace too: can you please provide simple step by step instructions how to reproduce the issue?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5fyA8k/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/644,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5fyiNH,eclipse.jdt.ui,1607082823,644,NA,Graou74,54896431,,,NA,2023-06-26T09:35:00Z,2023-06-26T09:35:00Z,"To put it simply, I started from a new project in a new workspace and the problem remains exactly the same :

From a new workspace I created a new Java project (tests) then I created a new class ""tests.TestClass"".

There are some traces in the log file but nothing that explicitly refers to F4 and ""Open type hierarchy"" :
[log.txt](https://github.com/eclipse-jdt/eclipse.jdt.ui/files/11866609/log.txt)

The invocation of the ""Open type hierarchy"" functionality is still possible by right-clicking with the contextual menu, but calling it via the F4 keyboard shortcut is no longer possible, as has always been the case.

<img width=""778"" alt=""Capture d’écran 2023-06-26 à 11 26 01"" src=""https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/54896431/8bca25fa-919a-4b99-af76-8e0b8ecc54fd"">
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5fyiNH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/644,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5gFgAf,eclipse.jdt.ui,1612054559,644,NA,Graou74,54896431,,,NA,2023-06-28T20:26:18Z,2023-06-28T20:26:18Z,The same phenomenon occurs on PC (Windows 11). Before the update the functionality is accessible via F4 and after the update it can only be accessed via the context menu.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5gFgAf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/644,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5g5Af2,eclipse.jdt.ui,1625556982,644,NA,shadogray,1366879,ThomasF,,NA,2023-07-07T15:08:55Z,2023-07-07T15:08:55Z,"The same on Linux (OpenSUSE-Tumbleweed) 
reproduced with clean installation and new maven java project
Kernel 6.2.12-1-default
GTK 3-0-3.24.38, 4-1-4.10.4","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5g5Af2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/644,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5g5BiM,eclipse.jdt.ui,1625561228,644,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-07-07T15:12:03Z,2023-07-07T15:12:03Z,@shadogray : you also have CDT installed?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5g5BiM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/644,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5g-C4d,eclipse.jdt.ui,1626877469,644,NA,shadogray,1366879,ThomasF,,NA,2023-07-08T05:54:05Z,2023-07-08T05:54:05Z,"I reproduced the exakt same problem by
- a clean installation of eclipse-jee-2023-06-R-linux-gtk-x86_64.tar.gz, no updates, no add-ons
- JDK 17.0.4.1
- a new Maven/Java project","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5g-C4d/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/644,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hRHej,eclipse.jdt.ui,1631877027,644,NA,laeubi,1331477,Christoph Läubrich,,NA,2023-07-12T05:34:33Z,2023-07-12T05:34:33Z,"> I can't see the issue in the default SDK on master (without CDT). However, I also don't see ith with 4.25 SDK + CDT. So it could be a change in platform or CDT.

I see it with the platform.sdk-ide as well.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hRHej/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/644,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hRIlD,eclipse.jdt.ui,1631881539,644,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-07-12T05:40:45Z,2023-07-12T05:40:45Z,"> I see it with the platform.sdk-ide as well.

Please provide exact steps to reproduce. I've just verified it works with latest I20230711-1800 build.
Note, ""F4"" works with opened Java editor, so might be you have opened Java file in plain text editor or generic editor etc?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hRIlD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/644,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hRJ0T,eclipse.jdt.ui,1631886611,644,NA,laeubi,1331477,Christoph Läubrich,,NA,2023-07-12T05:45:37Z,2023-07-12T05:45:37Z,"- I'm using an IDE installed by oomph: https://github.com/eclipse-platform/.github/blob/main/CONTRIBUTING.md#creating-an-eclipse-development-environment
- then I open an interface or class
- now select the class/interface name 
- press `F4` -> nothing happens
- use the context menu and see that the shortcut is missing

I don't know how to know the editor, but it looks like a Java Editor here is a screenshot:
![grafik](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1331477/abbf4595-4684-42b2-b2c7-d9584a244134)

Beside that, I have the https://www.eclipse.org/downloads/packages/release/2023-06/r/eclipse-ide-rcp-and-rap-developers installed and see the same problem there.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hRJ0T/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/644,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hRMkC,eclipse.jdt.ui,1631897858,644,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-07-12T06:00:43Z,2023-07-12T06:00:43Z,"> * I'm using an IDE installed by oomph:

Can you please download https://download.eclipse.org/eclipse/downloads/drops4/I20230711-1800/ build manually, extract & start with a fresh workspace? This is what I do and I see no problems with SDK. 

So I assume either some bundle or Oomph might ""steal"" the shortcut. If it is Oomph, you might try to clean up all user preferences. For bundles, you can compare difference between ""Oomphed"" installation and plain SDK and attach the list here.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hRMkC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/644,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hRVZ-,eclipse.jdt.ui,1631934078,644,NA,laeubi,1331477,Christoph Läubrich,,NA,2023-07-12T06:37:51Z,2023-07-12T06:37:51Z,"Okay here is the minimal steps to reproduce the problem:

1. Download https://www.eclipse.org/downloads/packages/release/2023-06/r/eclipse-ide-rcp-and-rap-developers
2. choose an empty workspace
3. create a new Java project
4. add a Class that implements `Runnable`
5. focus runnable and press `F4`
![grafik](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1331477/37e6fd7a-68c2-4e17-b906-3b4431ffe7b6)

Example project: [test.zip](https://github.com/eclipse-jdt/eclipse.jdt.ui/files/12024568/test.zip)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hRVZ-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/644,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hRiCF,eclipse.jdt.ui,1631985797,644,NA,HannesWell,44067969,Hannes Wellmann,,NA,2023-07-12T07:23:32Z,2023-07-12T07:23:32Z,"I have the same issue with my Eclipse-SDK provided by Oomph plus full m2e and egit.
But I have also noticed this with Eclipse-modelling.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hRiCF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/644,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hRlCi,eclipse.jdt.ui,1631998114,644,NA,Wittmaxi,16443184,Maximilian Wittmer,maximilian.wittmer@gmx.de,NA,2023-07-12T07:33:02Z,2023-07-12T07:33:02Z,"This also happens for my build of Eclipse.
With Eclipse SDK
Version: 2023-09 (4.29)
Build id: I20230711-0440

Notably, the ""show key binding when command is invoked through mouse click/keypress"" still reliably displays the action when pressing either F4 or the popup-menu entry.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hRlCi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/644,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hTFiU,eclipse.jdt.ui,1632393364,644,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-07-12T11:55:01Z,2023-07-12T11:55:01Z,"> Can you please download https://download.eclipse.org/eclipse/downloads/drops4/I20230711-1800/ build manually, extract & start with a fresh workspace? This is what I do and I see no problems with SDK.

Since no one answers to that and I don't observe issue in the plain SDK, this issue is coming as a conflict with some other bundle that is not included in SDK.

Since I use egit since ever but never used m2e and I assume most of the ""packages"" include m2e, can anyone please try with SDK (only SDK please) + m2e?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hTFiU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/644,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hTlMf,eclipse.jdt.ui,1632523039,644,NA,Graou74,54896431,,,NA,2023-07-12T13:23:00Z,2023-07-12T13:23:00Z,"I downloaded the SDK version only :

<img width=""1380"" alt=""Capture d’écran 2023-07-12 à 15 13 37"" src=""https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/54896431/e0837c4c-9655-4a03-8b79-a0b6cd6cbadc"">

And indeed in this implementation the F4 is operational.

I am willing to try SDK+m2e if someone tells me how to proceed. How to install.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hTlMf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/644,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hULIl,eclipse.jdt.ui,1632678437,644,NA,shadogray,1366879,ThomasF,,NA,2023-07-12T14:50:51Z,2023-07-12T14:50:51Z,"I reproduced the problem by:
- download eclipse-SDK-I20230711-1800-linux-gtk-x86_64.tar.gz
- install Marketplace Client to 
- install M2e (I later found out, that simple ""Install new Software"" could have worked..)
- No import of existing project .. 
- create new test workspace
- create new test maven-project (simple, no archetype)
- create new java class Test.java
- open Test.java 
- mouse context click on class name: No F4 assigned!

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1366879/542d7d46-39f1-45b7-971b-f2471b5adecb)

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1366879/6abf2fbe-39c0-4b7c-b297-6be51c5e1b2e)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hULIl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/644,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hUPn7,eclipse.jdt.ui,1632696827,644,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-07-12T14:56:35Z,2023-07-12T14:56:35Z,@shadogray : many thanks. Would you please create issue in m2e project providing your steps?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hUPn7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/644,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hWNSx,eclipse.jdt.ui,1633211569,644,NA,HannesWell,44067969,Hannes Wellmann,,NA,2023-07-12T21:03:23Z,2023-07-12T21:03:23Z,"It would be interesting to know if this issue occures if the M2E LemMinX Editor is not installed?
Because my first guess would be that this is related to the language-server used for that. Since I'm not aware of a change in that regard directly in M2E.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hWNSx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/644,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hnT_T,eclipse.jdt.ui,1637695443,644,NA,HeikoKlare,755472,Heiko Klare,heiko.klare@vector.com,NA,2023-07-17T09:36:05Z,2023-07-17T09:36:05Z,"To me it seems @HannesWell is right and the issue occurs due to the LemMinX editor. It brings in the LSP4E feature, which defines a conflicting F4 key binding.

I use an Oomph-based setup for platform development. In that installation it is as follows:

> The LemMinX feature comes into the IDE via Oomph setup:
https://github.com/eclipse-platform/eclipse.platform.releng.aggregator/blob/8417d0b6ea35ee3684c892b9c8791be0adcf614d/oomph/Platform.setup#L778-L779

> The LemMinX editor uses LSP4E:
https://github.com/eclipse-m2e/m2e-core/blob/435548b9f86ee18b63bc6884a4cbad2887491832/org.eclipse.m2e.editor.lemminx/META-INF/MANIFEST.MF#L12

> And LSP4E defines the ""F4"" shortcut for ""Show Type Hierarchy"" in the ""textEditor"" context.
https://github.com/eclipse/lsp4e/blob/860896bd75ebf36c11df59f1e0db10ea8468f565/org.eclipse.lsp4e/plugin.xml#L394-L399

> Since the ""javaEditor"" context is a subcontext of the ""textEditor"" context, the binding is inherited.
https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/0be597216d091c97c557ed2f3e2d9756bf9f55d9/org.eclipse.jdt.ui/plugin.xml#L3615-L3620

What could be done to proceed?
1. The conflicting key binding is not detected as tracked here: https://github.com/eclipse-platform/eclipse.platform.ui/issues/846
2. Since every other plugin could define an F4 key binding on the generic ""textEditor"" context while it might be unlikely that someone defines a binding for the specific ""javaEditor"" context used by JDT, it might make sense to add the binding for the ""javaEditor"" context in JDT as well.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hnT_T/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/644,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hpDzU,eclipse.jdt.ui,1638153428,644,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2023-07-17T13:32:30Z,2023-07-17T13:32:30Z,"Can you please enable Window > Preferences > General > Keys > Show key binding when command is invoked > through keyboard, and then report whether some command is at least detected or displayed or not?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hpDzU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/644,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hpG7w,eclipse.jdt.ui,1638166256,644,NA,laeubi,1331477,Christoph Läubrich,,NA,2023-07-17T13:38:57Z,2023-07-17T13:38:57Z,"This shows 
![grafik](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1331477/26ac72dc-77dc-4b07-b971-d9beb598aa87)

but nothing happens...","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hpG7w/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/644,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hpJOB,eclipse.jdt.ui,1638175617,644,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2023-07-17T13:43:14Z,2023-07-17T13:43:14Z,"OK, so the command is found but either the handler is not resolved, or the handler does nothing.
I will try to investigate as I suspect like @HannesWell it can be the handler for the generic editor/LSP4E which conflicts here (however, even if conflicting, it shouldn't disable another handler...).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hpJOB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/644,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hpPGi,eclipse.jdt.ui,1638199714,644,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2023-07-17T13:55:37Z,2023-07-17T13:55:37Z,"Both are actually different commands but same shortcut (they're expected to have different context, so no real conflict should happen in practice, but maybe this approach has glitches).
There are multiple place where some `removeBinding` methods are called. One of them is probably too aggressive.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hpPGi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/644,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hqbDl,eclipse.jdt.ui,1638510821,644,NA,HeikoKlare,755472,Heiko Klare,heiko.klare@vector.com,NA,2023-07-17T16:49:39Z,2023-07-17T16:49:39Z,"From my understanding, the current behavior is as intended because:
- ""Open Type Hierarchy"" is registered by JDT for the ""window"" context
- ""Show Type Hierarchy"" is registered by LSP4E for the ""textEditors"" context
- ""textEditors"" is a child context of the ""window"" context
- The Java editor has the ""javaEditors"" context, which is a child context of ""textEditors""

For ""textEditors"" contexts and its child contexts, this will result in ""Show Type Hierarchy"" being registered for the F4 shortcut. Since ""javaEditors"" is a child context of ""textEditors"", the shortcut is ""correctly"" bound to ""Show Type Hierarchy"" when being in some text editor (like the Java source code editor).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hqbDl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/644,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hqmed,eclipse.jdt.ui,1638557597,644,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2023-07-17T17:17:54Z,2023-07-17T17:17:54Z,"While it can make sense to prefer the shortcut from the most specialized content, it doesn't make sense to automatically unset it if we have heuristic to choose one or the other. Note that additionally to the context criterion (which IIRC is correctly used), the binding resolution also looks at command enablement and other things that are often finely tuned, to prevent from actual conflicts.
JDT's binding context could be ""javaEditors"", that would be fine. But then, would that mean that the F4 from LSP4E would be sometimes removed automatically? I believe we need to reconsider how Platform interprets similar conflicting bindings; warning seems fair, but removing 1 of them randoml-ish is less nice.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hqmed/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/644,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hqqM3,eclipse.jdt.ui,1638572855,644,NA,laeubi,1331477,Christoph Läubrich,,NA,2023-07-17T17:28:06Z,2023-07-17T17:28:06Z,I think the idea is that the more specific binding can override any global one (including doing nothing).,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hqqM3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/644,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5kWj8z,eclipse.jdt.ui,1683636019,644,NA,laeubi,1331477,Christoph Läubrich,,NA,2023-08-18T09:32:16Z,2023-08-18T09:32:16Z,@mickaelistria any chance this can be investigated? This is really annoying and degrades user experience for completely unrelated to lsp4e editors....,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5kWj8z/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/644,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ke55c,eclipse.jdt.ui,1685823068,644,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2023-08-21T07:47:28Z,2023-08-21T07:47:28Z,"After a week, I'm still trying to recover from all the mails that I received during my 2 weeks of holidays. I don't yet have a clear view over my backlog to commit to anything.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ke55c/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/644,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52Vr4H,eclipse.jdt.ui,1985396231,644,NA,walterlaan,162692187,,,NA,2024-03-08T09:59:34Z,2024-03-08T09:59:34Z,"To make it explicit, the workaround to get it working for Java editors again, is to unbind the command for the language server:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/162692187/392a3818-faf2-4b52-8a1f-a0eb8063f763)

This will disable it for language server editors (which seems to be any 'Generic Text Editor'), which doesn't even have the open type hierarchy option anyway when I use it for (pom.)xml or xsd files which launch a XML language server in the background.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52Vr4H/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1151,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1151,eclipse.jdt.ui,2109705262,1151,Open method implementation hierarchy,jonbarril,20114096,,,OPEN,2023-06-27T15:44:58Z,2024-01-31T09:53:44Z,"If I right click on a method, in an interface or class, I'd like to be able to see where that method is overridden/implemented. As with other ""show hierarchy"" menu items, the scope can be project, workspace, etc., and the result would be ordered from super type (what class/method the specific target method is overriding) to subtype (what class/method is overriding the specific target method).

In the past some have suggested that this can be done using the existing ""open type hierarchy"", but that is clearly not the same often I find of little help for the use cases I am talking about. With open type hierarchy I have to hunt down all the possible subtypes that may override the target method and then mentally aggregate the results to form a mental hierarchy of what I am requesting, ""open implementation hierarchy"".

I have used eclipse for many many years and this is something that I always felt was lacking and would greatly simplify my life as a developer, especially where generous use of interfaces is made. Often while debugging or trying to understand old software I click through to the interface or a high level override of a method, and then have to spend time, sometimes a lot, trying to track down all the implementations of that method to figure out which one might be doing the actual work.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1151/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1151,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5yXfTQ,eclipse.jdt.ui,1918760144,1151,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-31T09:53:43Z,2024-01-31T09:53:43Z,a PR would be welcome,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5yXfTQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/653,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/653,eclipse.jdt.ui,1786175714,653,"Opening the dialog ""Run configurations..."" for the first time takes too long --> UI freeze",fedejeanne,2205684,Federico Jeanne,,CLOSED,2023-07-03T13:21:13Z,2024-03-26T12:10:07Z,"It sometimes takes a while to open the dialog *Run configurations...* for the first time:

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/2205684/cdf1489c-e94c-4b06-9d08-6864022a35af)

This is the sum of several smaller delays, some of which can be seen in the attached snapshot:
[open-run-configurations-dialog.zip](https://github.com/eclipse-jdt/eclipse.jdt.ui/files/11937105/open-run-configurations-dialog.zip)

## Related tasks
- [x] eclipse-jdt/eclipse.jdt.core#1214 
- [x] https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/683","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/653/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/653,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hR_JT,eclipse.jdt.ui,1632105043,653,NA,fedejeanne,2205684,Federico Jeanne,,NA,2023-07-12T08:48:14Z,2023-07-12T08:48:14Z,"One possible explanation would be the changes introduced in https://github.com/eclipse-jdt/eclipse.jdt.ui/commit/815287b20b0e86d27692b953e6e275b977f8c2b5, specifically the newly introduced call to `collectMethodNames` which ends up resolving the hierarchy of several classes.

It all starts here: 
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/2205684/ce2ab563-fe6c-46cc-9ade-170ec1ff07b4)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hR_JT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/655,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/655,eclipse.jdt.ui,1787741929,655,Context-based Automated Name Recommendation For The Extract Local Variable Refactoring,Michaelll123,33093740,Michaelll123,,CLOSED,2023-07-04T11:26:14Z,2023-07-25T01:17:30Z,"### Context-based Automated Name Recommendation For The Extract Local Variable Refactoring
---
**Description**
---
We propose a context-based rule to automatically recommend names for the extracted local variables. We believe that this rule can make the existing recommendation strategy of Eclipse more accurate and effective. 
Here we first post an example to illustrate how this rule works. This example is taken from the commit of Ignite of Apache (914ca301b6520d49d4f06784594f4c75bf215e65, apache_ignite/modules/configuration/src/main/java/org/apache/ignite/internal/configuration/tree/NamedListNode.java)
```java
/* CS1: Real Case of Extract Local Variable Refactoring */
    public NamedListChange<N, N> delete(String key) {
        Objects.requireNonNull(key, ""key"");

-       if (map.containsKey(key)) {
-           map.get(key).value = null;
+       ElementDescriptor element = map.get(key);
+
+       if (element != null) {
+           element.value = null;
       }

        return this;
    }
```
The actual name developer assigned to the extracted expression, i.e., `map.get(key)` (line 7 in CS1) is ""element"". 
However, if we select the expression `map.get(key)` and conduct refactoring ""extract local variable"" in Eclipse, we will get the following code snippet:
```java
/* CS2: Code Snippet After Refactoring in Eclipse*/
    public NamedListChange<N, N> delete(String key) {
        Objects.requireNonNull(key, ""key"");

        ElementDescriptor elementDescriptor = map.get(key);

        if (elementDescriptor != null) {
            elementDescriptor.value = null;
        }

        return this;
    }
```

The name recommended for the extracted variable is ""elementDescriptor"", which is substantially different from what the developers manually coined. 



**What We Can Do**
---
For the posted example,  we notice that there are quite a few (five in total) variable declarations with the same assignment expression (i.e., ""map.get(key)"") in other methods of the same Java file.
We also notice that all such variables share the same variable name ""element"". Consequently, it is natural to recommend ""element"" as the name for the extracted expression ""map.get(key)"".

Here is the related context code:
```java
public final class NamedListNode<N> implements NamedListChange<N, N>, TraversableTreeNode, ConstructableTreeNode {
	
	……
	
    private final OrderedMap<ElementDescriptor> map;

	……
	
    /**
     * Returns {@link InnerNode} associated with the passed key.
     *
     * @param key Key string.
     * @return Requested value.
     */
    @Nullable
    public InnerNode getInnerNode(String key) {
        ElementDescriptor element = map.get(key);

        return element == null ? null : element.value;
    }

	……

    /** {@inheritDoc} */
    @Override
    public NamedListChange<N, N> createOrUpdate(String key, Consumer<N> valConsumer) {
        Objects.requireNonNull(key, ""key"");
        Objects.requireNonNull(valConsumer, ""valConsumer"");

        if (map.containsKey(key) && map.get(key).value == null) {
            throw new IllegalArgumentException(""You can't create entity that has just been deleted [key="" + key + ']');
        }

        ElementDescriptor element = map.get(key);

        if (element == null) {
            element = newElementDescriptor();

            reverseIdMap.put(element.internalId, key);
        } else {
            element = element.copy();
        }

        map.put(key, element);

        valConsumer.accept((N) element.value);

        return this;
    }

	……

	// This is the method containing the expression that will be extracted. See CS1.
    /** {@inheritDoc} */
    @Override
    public NamedListChange<N, N> delete(String key) {
        Objects.requireNonNull(key, ""key"");

        if (map.containsKey(key)) {
            map.get(key).value = null;
        }

        return this;
    }
	
	……

    /**
     * Sets an internal id for the value associated with the passed key. Should not be used in arbitrary code. Refer to {@link
     * ConfigurationUtil#fillFromPrefixMap} for further details on the usage.
     *
     * @param key        Key to update. Should be present in the named list. Nothing will happen if the key is missing.
     * @param internalId New id to associate with the key.
     */
    public void setInternalId(String key, String internalId) {
        ElementDescriptor element = map.get(key);

        if (element != null) {
            reverseIdMap.remove(element.internalId);

            element.internalId = internalId;

            reverseIdMap.put(internalId, key);
        }
    }

	……

    /**
     * Returns internal id for the value associated with the passed key.
     *
     * @param key Key.
     * @return Internal id.
     * @throws IllegalArgumentException If {@code key} is not found in the named list.
     */
    public String internalId(String key) {
        ElementDescriptor element = map.get(key);

        if (element == null) {
            throw new IllegalArgumentException(""Element with name '"" + key + ""' does not exist."");
        }

        return element.internalId;
    }

	……

    /** {@inheritDoc} */
    @Override
    public void construct(String key, ConfigurationSource src, boolean includeInternal) {
        Objects.requireNonNull(key, ""key"");

        if (src == null) {
            delete(key);
        } else {
            if (map.containsKey(key) && map.get(key).value == null) {
                throw new IllegalArgumentException(""You can't create entity that has just been deleted [key="" + key + ']');
            }

            ElementDescriptor element = map.get(key);

            if (element == null) {
                element = newElementDescriptor();

                reverseIdMap.put(element.internalId, key);

                if (typeIdFieldName != null) {
                    InnerNode polymorphicInnerNode = element.value;

                    String polymorphicTypeId = src.polymorphicTypeId(typeIdFieldName);

                    if (polymorphicTypeId != null) {
                        polymorphicInnerNode.construct(typeIdFieldName, new LeafConfigurationSource(polymorphicTypeId), true);
                    } else if (polymorphicInnerNode.traverseChild(typeIdFieldName, leafNodeVisitor(), true) == null) {
                        throw new IllegalStateException(""Polymorphic configuration type is not defined: ""
                                + polymorphicInnerNode.getClass().getName());
                    }
                }
            } else {
                element = element.copy();

                if (typeIdFieldName != null) {
                    InnerNode polymorphicInnerNode = element.value;

                    String polymorphicTypeId = src.polymorphicTypeId(typeIdFieldName);

                    if (polymorphicTypeId != null) {
                        polymorphicInnerNode.construct(typeIdFieldName, new LeafConfigurationSource(polymorphicTypeId), true);
                    }
                }
            }

            map.put(key, element);

            src.descend(element.value);
        }
    }



}
```

**Genetic Solution**
---
We propose a new context-based rule for recommending names for extracted variables. Our intuition is that if variable names with the same assigned expression have ever been used in the context, we should recommend these names for the extracted variables in the first place.

The precondition for applying this rule is specified as follows:

1. Collect all variable declarations with the same assignment expression (i.e., initializer) in the other methods of the same Java file. All such declarations are noted as a set **C**. If **C** is empty, terminate. Otherwise, turn to the next step. 
2. If more than 70% of the variables in **C** share the same variable name **N**, recommend **N** as the suggested variable name for the new extracted variable. 


To validate the effectiveness of the proposed rule, we identified real-world extracted variables refactorings by mining commit histories of projects on GitHub.  
Evaluation results suggest that this heuristics rule made recommendations on 3,224 out of the 41,602 real-world extract variable refactorings, and on 1,972 out of the 3,224 cases, the recommended names were exactly identical to the names coined by the original developers. That is, the heuristics rule achieves a precision of 61.2% and a recall of 4.7%


**The pull request that implements the new rule has also been submitted.**


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/655/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/655,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5gkIFY,eclipse.jdt.ui,1620083032,655,NA,Michaelll123,33093740,Michaelll123,,NA,2023-07-04T11:36:34Z,2023-07-04T11:36:34Z,@jjohnstn Please kindly have a look at the issue and the solution. Thanks.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5gkIFY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/660,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/660,eclipse.jdt.ui,1790692021,660,[Feature Request] Add refactoring proposal from if-return to ternary,nlisker,37422899,,,CLOSED,2023-07-05T21:10:15Z,2023-07-13T22:05:06Z,"Given the code
```java
if (b) {
    return X;
}
return Y;
```
If I select it and press `ctrl+1`, I would like to see an option to refactor it into a ternary (conditional) form:
```java
return b ? X : Y;
```
This already works with an explicit `else` branch:
```java
if (b) {
    return X;
} else {
    return Y;
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/660/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/657,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/657,eclipse.jdt.ui,1790482025,657,Bug 573327 - invalid suggestions for loop variable missing type,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2023-07-05T23:03:29Z,2023-07-14T16:50:10Z,"From: https://bugs.eclipse.org/bugs/show_bug.cgi?id=573327

For the following snippet taken from UnresolvedTypesQuickFixTest.testForEachMissingType()

```
import java.util.*;

public class E {
    
public void foo(ArrayList<? extends HashSet<? super Integer>> list) {
    for (element: list) {
    }
}

}
```

A number of quick fix suggestions are made.  The first one:

Create loop variable 'element' seems to be the only valid one.

Among others are:

Create enum element
Create class element
Create interface element
Change to ElementType (java.annotation)
Change to Statement (java.sql)
Fix project setup...

There can be many more class suggestions when running in a typical Eclipse.  All of them but the first one are invalid choices.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/657/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/659,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/659,eclipse.jdt.ui,1790626235,659,No possibility to have jar name per project + annoying JAR generation,andreasdc,82218780,,,OPEN,2023-07-06T01:43:17Z,2023-07-06T01:43:17Z,"When you have multiple projects, it's hard to type jar name for every one, especially when they change after restart or you have even more project that the suggestion list can hold.
Having a way to quickly generate the jar to saved jar name would be a lot faster, also option to always override jar file. After that another window shows that you JAR was generated without warning.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/659/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/661,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/661,eclipse.jdt.ui,1791408826,661,Field Name Recommendation Based on Program-Specific Naming Conventions,DongChunHao,77560508,DongChunHao,,OPEN,2023-07-06T11:53:26Z,2023-12-07T21:56:17Z,"Here we present the second heuristics to improve the name recommendation for Rename Field refactorings. Detailed explanations are provided below through examples.

The following code snippet comes from the apache/pinot (pinot-integration tests/src/test/java/com/linkedin/pinot/integration/tests/ HybridScanBasedCommandLineTestRunner.java, commit:31a6b95200cc5845706d27304fc2ed4767ec2aab). In this example, the original developers renamed the field ""**multiThreaded**"" to a new name ""**_multiThreaded**"" (Line 101) because all fields within the same class are named with common prefix **""_""** except for the original name of this field. 

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/77560508/b9e7adbc-f84d-4709-bfd8-df6045ad5a21)

For the given example, IntelliJ IDEA recommends “**aBoolean**” instead, that is substantially different from the one chosen by the original developers. 

As a generic rule, we recommend to append the common prefix to the original name (e.g., _multiThreded for multiThreded). We also suggest to remove the prefix of the original name if other fields within the same class do not contain the prefix. 

We have validated the heuristic on **8489** field renamings actually conducted by the original developers in open-source applications. In total, the heuristic recommended **239** names where **512** were exactly the same as what the original developers finally used. That is , the precision is **47%**, substantially higher than that of IntelliJ IDEA.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/661/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/661,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5gxs1N,eclipse.jdt.ui,1623641421,661,NA,DongChunHao,77560508,DongChunHao,,NA,2023-07-06T13:01:27Z,2023-07-06T13:01:27Z,@jjohnstn Please kindly have a look at the issue and the solution. Thanks.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5gxs1N/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/661,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5pOEXi,eclipse.jdt.ui,1765295586,661,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-10-16T21:19:54Z,2023-10-16T21:19:54Z,"Hi @DongChunHao I think this change is very specific to a scenario you experienced but I don't feel it adds functionality to Eclipse JDT that would be useful to general users.  For example, hitting CTRL+1 on B1 using your change:

```
public class TestRenaming {
	
	public int A1;
	public int A2;
	public int B1;

}
```

it recommends renaming B1 to AB1.  That doesn't really make any sense.  This clearly isn't a case of a naming convention.  It is just a coincidence that most fields start with A.

Each quick-fix/assist needs to do calculations to determine if it is relevant and if a change can be created and this takes resources that ultimately adds up.  Thus, we want quick-fixes/assists to provide value to general users, not just for a one-off scenario.  A project-specific naming convention is just that: project-specific and doesn't apply to other projects/users.  If a particular project wants all fields to be prefixed with a special prefix it can add scripts to verify code check-ins (e.g. github actions) or the project could run verification scripts occasionally that are published to the development team.  To infer a naming convention by looking at code is a leap and isn't really feasible using frequency as shown by my simple example above.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5pOEXi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/661,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uClWP,eclipse.jdt.ui,1846171023,661,NA,robstryker,630383,Rob Stryker,,NA,2023-12-07T21:56:15Z,2023-12-07T21:56:15Z,"I could forsee a situation where a particular coding convention were set in a .settings file or property page, and then the quick fix only needs to check if this feature is enabled or not. This would certainly speed up the calculations for users who don't want to use the feature (a simple property check on the file) while allowing the logic to run for those who want it. A discussion on whether thats even advisable is at least worth something. 

But I agree that in its current form it provides limited utility with a possible performance hit. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uClWP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/665,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/665,eclipse.jdt.ui,1797207317,665,UI freezes when showing large numbers of annotations in Java files,HeikoKlare,755472,Heiko Klare,heiko.klare@vector.com,CLOSED,2023-07-10T17:25:35Z,2023-08-02T23:20:01Z,"## Description
The Java editor uses the `AnnotationModel` to show different types of annotations, such as the occurrences of the currently selected element. In case a file is quite large, this calculation can take quite long, for example, when changing the text selection to a different method.

## Reproduction
As an example, you can open the Java file in the attachment below and change the text selection between the `oftenCalledMethod` and other elements. This is an artificial and really extreme case, just for demonstration purposes. In our actual project, we experience the same problem (with even more performance problems) in large generated files with complex type and call hierarchies. 
[Test.zip](https://github.com/eclipse-jdt/eclipse.jdt.ui/files/12004611/Test.zip)

## Expected Behavior
The Java code editor should still be responsive when showing large source code files. In particular, navigation through the file should still happen in a responsive way.

## Reasons
The reason for the behavior is an inefficient implementation of the replacement of annotations in combination with the fact that the update of the annotation model requires a lock that blocks the UI, even though it is executed in a background job.
The replacement of annotations in the `AnnotationModel` (as done when changing the selection in an editor) processes every single annotation to be removed and added on its own. The Java-specific `CompilationUnitAnnotationModel` in the `CompilationUnitDocumentProvider` uses a `ReverseMap` that relies on an inefficient lookup within an `ArrayList` for every annotation to be added, removed or retrieved. The effort grows super-linear with the number of annotations to process.

## Possible Improvement
When performing a replacement of annotations, they should not be treated as individual removals and additions but as a batch operation. Then a temporary hash-based lookup structure can be created during the annotation model update to avoid the inefficient lookups in the currently used `ArrayList`.

I will propose a fix that implements such an improved annotation replacement.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/665/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/665,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hTJUY,eclipse.jdt.ui,1632408856,665,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-07-12T12:06:20Z,2023-07-12T12:06:20Z,"> I will propose a fix that implements such an improved annotation replacement.

- Are we talking about `org.eclipse.jface.text.source.AnnotationModel` ? If yes, shouldn't the fix / the issue be reported in platform?
- Is this same as https://github.com/eclipse-platform/eclipse.platform.ui/issues/892 ? See discussion on **reverted** [fix for that](https://github.com/eclipse-platform/eclipse.platform.text/pull/22).
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hTJUY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/665,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hUvOn,eclipse.jdt.ui,1632826279,665,NA,HeikoKlare,755472,Heiko Klare,heiko.klare@vector.com,NA,2023-07-12T16:12:04Z,2023-07-12T16:12:04Z,"It is related, but not the same. JDT uses a subclass of `org.eclipse.jface.text.source.AnnotationModel` and has a custom implementation called `ReverseMap` for assigning values (in this case annotations) to positions in text (i.e., the reverse of the annotation map within the annotation model) . It implements a rather inefficient lookup of annotations since positions can change over time while editing the file.
The reason that this perform so bad is rooted in the platform implementation of `AnnotationModel.replaceAnnotations`, which is realized by processing every single addition and removal of annotations to replace. I also tried to improve that behavior with a batch replacement, but it is so intrusive that I gave up on that path and worked on a downstream patch.
In addition, the platform behavior is totally valid and the reason for the issue reported here is that the JDT-specific implementation performs so bad due to the custom map that is so inefficient in handling growing numbers of annotations.

Still, thanks for pointing to the fix you tried for the platform UI! It is at least related and may give some valuable insights for this issue.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hUvOn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/666,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/666,eclipse.jdt.ui,1798221121,666,UI lag JavaInformationProvider / BestMatchHover,jukzi,51790620,Jörg Kubitz,,OPEN,2023-07-11T06:41:31Z,2023-07-11T06:41:31Z,"Today my OOmphed Platform workspace started straight into an UI freeze for ~20 sec before even showing anything but the eclipse IDE window.
i sampled a bit:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/6bd30c93-d576-4562-b32d-d1690bfc67dc)

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/3b4c68de-4a4d-495c-8279-c314044b2510)

org.eclipse.jdt.internal.ui.text.java.hover.JavaInformationProvider.getInformation2()
org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2()
org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2()
org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo()
org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST()

which was probably waiting for this initialization:

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/81129364-fc2e-485d-a295-b83ab7b0410e)

jdt init always took some time but it should at least not totally freeze UI.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/666/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/667,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/667,eclipse.jdt.ui,1798443418,667, [Coding conventions] Using brackets for blocks of code with only 1 line of code,fedejeanne,2205684,Federico Jeanne,,CLOSED,2023-07-11T08:50:48Z,2023-09-11T18:15:51Z,"_(Copied from https://github.com/eclipse-platform/eclipse.platform.ui/issues/928 based on suggestion from @mickaelistria)_

The issue was raised by @HeikoKlare in https://github.com/eclipse-platform/eclipse.platform.ui/pull/755#discussion_r1256321294

The easiest way to make sure this always happens is by setting it in the preferences:

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/2205684/91f0ad31-128a-45fb-9bfa-90b4684ad454)

What do you guys think:

1. Are you in favor of adding this as a coding convention? (I'm in favor so 👍 from my side)
2. If yes, do you see any other way of doing it besides setting this property in each and every project?

Any hints on the second question would be highly appreciated since setting the property in each project is a load of work and it can easily be forgotten when setting new projects (also, setting only that property on 1 project added like 30+ changed lines in the properties file).

Thank you in advance for your participation!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/667/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/667,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hLxqh,eclipse.jdt.ui,1630476961,667,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2023-07-11T09:28:03Z,2023-07-11T09:28:03Z,"I believe that brackets in such case are almost unanimously considered a good practice, so it makes sense to change default JDT settings to encourage this good practice by default.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5hLxqh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/668,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/668,eclipse.jdt.ui,1800613858,668,JavadocHover logs Java Model Exception,jukzi,51790620,Jörg Kubitz,,CLOSED,2023-07-12T09:56:33Z,2024-03-12T15:54:48Z,"Logged while editing sourcecode - i think a Hover should be more silent:
```
Java Model Exception: Error in Java Model (code 1006): <module:java.xml> is not on its project's build path
	at org.eclipse.jdt.internal.core.PackageFragmentRoot.getResolvedClasspathEntry(PackageFragmentRoot.java:630)
	at org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations.getJavadocBaseLocation(JavaDocLocations.java:203)
	at org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations.getJavadocLocation(JavaDocLocations.java:222)
	at org.eclipse.jdt.ui.JavaUI.getJavadocLocation(JavaUI.java:1080)
	at org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations.getBaseURL(JavaDocLocations.java:546)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:759)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:671)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:663)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
eclipse.buildId=4.29.0.I20230709-1800
java.version=17.0.7
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=de_DE
Command-line arguments:  -os win32 -ws win32 -arch x86_64
```
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/ce8c6d8d-83ed-4dc0-a930-546e2bafd463)

On the other hand i wonder why there was no compiler error visible at the same time.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/668/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/668,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52u2Uo,eclipse.jdt.ui,1991992616,668,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-03-12T15:54:47Z,2024-03-12T15:54:47Z,closing: do not know how to reproduce.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52u2Uo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/671,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/671,eclipse.jdt.ui,1807332139,671,"Refactor ""extract method"" false negative",Alberth289346,3254232,,,CLOSED,2023-07-17T09:14:33Z,2023-07-20T00:57:31Z,"Trying to refactor a block didn't work as expected. After reducing the code, I ended with
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/3254232/3d059134-0ab8-4668-b50e-0bac8851c32a)


This is a false conclusion, only the `plcTableType` is used again as you can see.
If I delete the ""line"" code, it works (`line` isn't even used in that code, although in the original code it was for getting a string):
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/3254232/160d51b9-d4ce-49a8-9a1d-4309b3f60740)

If you replace `break` by `return` twice iit also works.

Installed JDT (Eclipse version 2023-03:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/3254232/e66ee0c0-4528-4140-beb4-6a7ea8dfcc6a)
Also tried 2023-06, with the same result.

And the code:
``` java
import java.io.IOException;
import java.util.List;

public class RefactorFalseNegative {
    private void hacking() throws IOException {
        while (true) {
            List<String> line = List.of();
            if (line == null) { break; }

            //-----
            MyType plcTableType;
            String plcTableTypeText = """";
            if (!plcTableTypeText.isEmpty()) {
                plcTableType = new MyType();
            } else {
                plcTableType = null;
            }
            // ----

            if (plcTableType == null) { break; }
        }
    }

    public static class MyType { }
}
```


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/671/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/674,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/674,eclipse.jdt.ui,1811905627,674,Random failure of TreeContentProviderTestWrapper.testSimpleAdd(),fedejeanne,2205684,Federico Jeanne,,CLOSED,2023-07-19T13:05:00Z,2023-07-19T13:23:35Z,"Failed on [this build](https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/669/checks?check_run_id=14979538917) of #669 

```
org.eclipse.jdt.ui.tests.search.TreeContentProviderTestWrapper.testSimpleAdd -- Time elapsed: 0.070 s <<< ERROR!
  java.lang.NullPointerException: Cannot invoke ""org.eclipse.swt.widgets.Control.setRedraw(boolean)"" because ""control"" is null
  at org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:1418)
  at org.eclipse.jdt.internal.ui.search.LevelTreeContentProvider.setLevel(LevelTreeContentProvider.java:276)
  at org.eclipse.jdt.ui.tests.search.TreeContentProviderTest.testSimpleAdd(TreeContentProviderTest.java:169)
  at org.eclipse.jdt.ui.tests.search.TreeContentProviderTestWrapper.testSimpleAdd(TreeContentProviderTestWrapper.java:52)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/674/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/678,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/678,eclipse.jdt.ui,1816493096,678,Can't update,andreasdc,82218780,,,CLOSED,2023-07-22T00:06:30Z,2023-08-02T23:18:10Z,"Cannot complete the install because of a conflicting dependency.
  Software being installed: Tip of the Day UI Feature 0.4.0.v20230429-1617 (org.eclipse.tips.feature.feature.group 0.4.0.v20230429-1617)
  Software currently installed: Tip of the Day UI Feature Developer Resources 0.4.0.v20230317-0802 (org.eclipse.tips.feature.source.feature.group 0.4.0.v20230317-0802)
  Only one of the following can be installed at once: 
    IDE Enablement for Tip of the Day 0.3.0.v20230315-0554 (org.eclipse.tips.ide 0.3.0.v20230315-0554)
    IDE Enablement for Tip of the Day 0.3.0.v20230429-1617 (org.eclipse.tips.ide 0.3.0.v20230429-1617)
  Cannot satisfy dependency:
    From: Tip of the Day UI Feature 0.4.0.v20230317-0802 (org.eclipse.tips.feature.feature.group 0.4.0.v20230317-0802)
    To: org.eclipse.equinox.p2.iu; org.eclipse.tips.ide [0.3.0.v20230315-0554,0.3.0.v20230315-0554]
  Cannot satisfy dependency:
    From: Tip of the Day UI Feature 0.4.0.v20230429-1617 (org.eclipse.tips.feature.feature.group 0.4.0.v20230429-1617)
    To: org.eclipse.equinox.p2.iu; org.eclipse.tips.ide [0.3.0.v20230429-1617,0.3.0.v20230429-1617]
  Cannot satisfy dependency:
    From: Tip of the Day UI Feature Developer Resources 0.4.0.v20230317-0802 (org.eclipse.tips.feature.source.feature.group 0.4.0.v20230317-0802)
    To: org.eclipse.equinox.p2.iu; org.eclipse.tips.feature.feature.group [0.4.0.v20230317-0802,0.4.0.v20230317-0802]","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/678/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/678,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5i6fEX,eclipse.jdt.ui,1659498775,678,NA,andreasdc,82218780,,,NA,2023-08-01T03:12:21Z,2023-08-01T03:12:21Z,nice,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5i6fEX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/678,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5jGtjj,eclipse.jdt.ui,1662703843,678,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-08-02T18:00:42Z,2023-08-02T18:00:42Z,"Hi @andreasdc This issue is against the wrong repo.  JDT UI doesn't supply or maintain the org.eclipse.tips.feature or plug-ins.  Unfortunately, there is no way to transfer this issue to non-JDT repos.  The code is in eclipse.platform.ua which AFAICT has moved into: https://github.com/eclipse-platform/eclipse.platform.releng.aggregator  I have opened an issue on your behalf which you can supply details regarding your set-up.  https://github.com/eclipse-platform/eclipse.platform.releng.aggregator/issues/1242","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5jGtjj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/678,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5jILQY,eclipse.jdt.ui,1663087640,678,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-08-02T23:18:09Z,2023-08-02T23:18:09Z,Closing this as issue has been moved over to platform.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5jILQY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/679,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/679,eclipse.jdt.ui,1817027250,679,Leveraging Users' Local Refactoring History to Recommend Names For The Extracted Local Variable,Michaelll123,33093740,Michaelll123,,CLOSED,2023-07-23T07:45:03Z,2023-09-14T07:50:51Z,"### Leveraging Users' Local Refactoring History to Recommend Names For The Extracted Local Variable
---
**Description**
---
We propose a new approach leveraging users' local refactoring history to recommend names for extracted local variables, and we believe that this rule can make the existing recommendation strategy of Eclipse more accurate and effective. 
According to our analysis of the real-world extract variable refactorings, we make the following observations: 
- Developers tend to perform a series of extract variable refactorings instead of a single one in a commit. 
- Multiple refactorings could be performed to extract the same expression that occurs in different **Block** (even different files).
- Developers tend to assign the same variable name to these extracted local variables.

Our intuition is that if a developer has recently extracted a local variable and assigned a name to it, we can leverage this local refactoring history to recommend names for later extract local variable refactorings if they share identical ""expressions"".

Here we first post a series of extract variable refactorings to illustrate how this rule works. These refactorings are all taken from a single commit (d9a81b88ad561e7e4ceae93e805e0d7a53a7f1a) of the calcite of Apache.
```java
/* CS1: Real Case of Extract Local Variable Refactoring From apache_calcite/core/src/main/java/org/apache/calcite/adapter/enumerable/EnumerableWindow.java */
- @Override public RelOptCost computeSelfCost(RelOptPlanner planner, RelMetadataQuery mq) {
-   return super.computeSelfCost(planner, mq)
-       .multiplyBy(EnumerableConvention.COST_MULTIPLIER);
+ @Override public @Nullable RelOptCost computeSelfCost(RelOptPlanner planner,
+    RelMetadataQuery mq) {
+   RelOptCost cost = super.computeSelfCost(planner, mq);
+   if (cost == null) {
+     return null;
+   }
+   return cost.multiplyBy(EnumerableConvention.COST_MULTIPLIER);
  }
```

```java
/* CS2: Real Case of Extract Local Variable Refactoring From apache_calcite/core/src/main/java/org/apache/calcite/adapter/enumerable/EnumerableInterpreter.java */
- @Override public RelOptCost computeSelfCost(RelOptPlanner planner,
+ @Override public @Nullable RelOptCost computeSelfCost(RelOptPlanner planner,
      RelMetadataQuery mq) {
-   return super.computeSelfCost(planner, mq).multiplyBy(factor);
+   RelOptCost cost = super.computeSelfCost(planner, mq);
+   if (cost == null) {
+     return null;
+   }
+   return cost.multiplyBy(factor);
  }
```

```java
/* CS3: Real Case of Extract Local Variable Refactoring From apache_calcite/core/src/main/java/org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter.java */
- @Override public RelOptCost computeSelfCost(RelOptPlanner planner,
+ @Override public @Nullable RelOptCost computeSelfCost(RelOptPlanner planner,
      RelMetadataQuery mq) {
-   return super.computeSelfCost(planner, mq).multiplyBy(.1);
+   RelOptCost cost = super.computeSelfCost(planner, mq);
+   if (cost == null) {
+     return null;
+   }
+   return cost.multiplyBy(.1);
  }
```

```java
/* CS4: Real Case of Extract Local Variable Refactoring From apache_calcite/core/src/main/java/org/apache/calcite/adapter/jdbc/JdbcRules.java */
// in org.apache.calcite.adapter.jdbc.JdbcRules.JdbcUnion
- @Override public RelOptCost computeSelfCost(RelOptPlanner planner,
+ @Override public @Nullable RelOptCost computeSelfCost(RelOptPlanner planner,
      RelMetadataQuery mq) {
-   return super.computeSelfCost(planner, mq).multiplyBy(.1);
+   RelOptCost cost = super.computeSelfCost(planner, mq);
+   if (cost == null) {
+     return null;
+   }
+   return cost.multiplyBy(.1);
  }
// in org.apache.calcite.adapter.jdbc.JdbcRules.JdbcSort
- @Override public RelOptCost computeSelfCost(RelOptPlanner planner,
+ @Override public @Nullable RelOptCost computeSelfCost(RelOptPlanner planner,
      RelMetadataQuery mq) {
-   return super.computeSelfCost(planner, mq).multiplyBy(0.9);
+   RelOptCost cost = super.computeSelfCost(planner, mq);
+   if (cost == null) {
+     return null;
+   }
+   return cost.multiplyBy(0.9);
  }
// in org.apache.calcite.adapter.jdbc.JdbcRules.JdbcProject
- @Override public RelOptCost computeSelfCost(RelOptPlanner planner,
+ @Override public @Nullable RelOptCost computeSelfCost(RelOptPlanner planner,
      RelMetadataQuery mq) {
-   return super.computeSelfCost(planner, mq).multiplyBy(JdbcConvention.COST_MULTIPLIER));
+   RelOptCost cost = super.computeSelfCost(planner, mq);
+   if (cost == null) {
+     return null;
+   }
+   return cost.multiplyBy(JdbcConvention.COST_MULTIPLIER));
  }
// in org.apache.calcite.adapter.jdbc.JdbcRules.JdbcTableModify
- @Override public RelOptCost computeSelfCost(RelOptPlanner planner,
+ @Override public @Nullable RelOptCost computeSelfCost(RelOptPlanner planner,
      RelMetadataQuery mq) {
-   return super.computeSelfCost(planner, mq).multiplyBy(.1);
+   RelOptCost cost = super.computeSelfCost(planner, mq);
+   if (cost == null) {
+     return null;
+   }
+   return cost.multiplyBy(.1);
  }
```

From these refactorings we can see that the actual name developer assigned to the extracted expression, i.e., `super.computeSelfCost(planner, mq)` (line 7 in CS1) is ""cost"". 
However, if we select the expression `super.computeSelfCost(planner, mq)` and conduct refactoring ""extract local variable"" in Eclipse, we will get the following code snippet:
```java
/* CS5: Code Snippet After Refactoring in Eclipse*/

  @Override public @Nullable RelOptCost computeSelfCost(RelOptPlanner planner,
      RelMetadataQuery mq) {
    RelOptCost computeSelfCost = super.computeSelfCost(planner, mq);
    if (computeSelfCost == null) {
      return null;
    }
    return computeSelfCost.multiplyBy(.1);
  }
```

The name recommended by Eclipse for the extracted variable is ""computeSelfCost"", which is substantially different from what the developers manually coined. 



**What We Can Do**
---
For the posted example,  we notice that there are quite a few (seven in total) extract local variable refactorings performed on the same expression (i.e., ""super.computeSelfCost(planner, mq)"") in a single commit.
We also notice that all these variables share the same variable name ""cost"". Consequently, it is natural to recommend ""cost"" as the name for the extracted expression ""super.computeSelfCost(planner, mq)"".


**Genetic Solution**
---
We propose a new rule leveraging refactoring history for recommending names for extracted local variables. 

The precondition for applying this rule is specified as follows:

1. Collect all the ""Extract Local Variable"" refactoring history performed on the last 12 (it is a tradeoff ) hours (Eclipse has already provided the refactoring histories).
2. If we can find a refactoring history that is ever performed on the selected expression, we recommend the used names in this refactoring for the selected expression.


To validate the effectiveness of the proposed rule, we identified real-world extracted variables refactorings by mining commit histories of projects on GitHub.  
Evaluation results suggest that this heuristics rule made recommendations on 9,783 out of the 36,735 real-world extract variable refactorings. On 8,234 out of the 9,783 cases, the recommended names were exactly identical to the names coined by the original developers. That is, the heuristics rule achieves a precision of 84.2% and a recall of 22.4%


**The pull request that implements the new rule has also been submitted.**


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/679/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/679,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5iLL0d,eclipse.jdt.ui,1647099165,679,NA,Michaelll123,33093740,Michaelll123,,NA,2023-07-24T02:17:26Z,2023-07-24T02:17:26Z,@jjohnstn  Please kindly have a look at the issue and the solution. Thanks for your precious time.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5iLL0d/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/683,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/683,eclipse.jdt.ui,1822475221,683,[Run configurations... dialog] Opening a JUnit configuration takes too long (UI freeze),fedejeanne,2205684,Federico Jeanne,,CLOSED,2023-07-26T13:54:35Z,2023-08-12T01:18:03Z,"Selecting a JUnit configuration for the first time in the dialog _Run configurations..._ takes too long (same thing if the dialog is first opened and a JUnit configuration is selected by default).

## Expected behavior
Opening a JUnit configuration should be faster or at least there should be a progress indicator to let the user know _why_ is it taking so long to open the configuration.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/683/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/684,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/684,eclipse.jdt.ui,1822491895,684,Recommend variable name for Extracted Local Variable Refactoring when the extracted expression is a method invocation,Michaelll123,33093740,Michaelll123,,CLOSED,2023-07-26T14:03:31Z,2023-09-25T09:58:01Z,"### Recommend variable name for **Extracted Local Variable** Refactoring when the extracted expression is a method invocation
---
**Description**
---
In this case, Eclipse first retrieves the simple name of the invoked method, e.g., ""getValue"" for the extracted expression ""descriptor.getValue(CLASSNAME)"", and replaces specific verbs (i.e., ""get"", ""is"", and ""to"") if they appear in the first place of the simple method name. Consequently, in the above example, ""value"" is recommended as the new name for the extracted variable.

However, we observe some instances such simple rules may not work. Consequently, here we propose a novel approach to improve it.

Except for ""get"", ""is"", and ""to"", we further collect a set of frequently used verbs that should be removed from variable names: {""create"", ""load"", ""find"",  ""build"", ""generate"", ""prepare"", ""parse"", ""current"", ""read"", ""resolve"", ""retrieve"", ""make"", ""add"", ""extract""}
```java
/* CS1: Real Case of Extract Local Variable Refactoring From the jmeter of Apache. (1708f277f112e608cd48e5c9eabd8f10bb44778b/apache_jmeter/src/protocol/tcp/org/apache/jmeter/protocol/tcp/config/gui/TCPConfigGui.java) */
private void init() {
        setLayout(new BorderLayout(0, 5));
        if (displayName) {
            setBorder(makeBorder());
            add(makeTitlePanel(), BorderLayout.NORTH);
        }
		
        VerticalPanel mainPanel = new VerticalPanel();
-       mainPanel.add(createServerPanel());
+       classname = new JLabeledTextField(JMeterUtils.getResString(""tcp_classname""));
+       mainPanel.add(classname);
+       final JPanel serverPanel = createServerPanel();
+       serverPanel.add(createPortPanel(), BorderLayout.EAST);
+       mainPanel.add(serverPanel);
        mainPanel.add(createClosePortPanel());
-       mainPanel.add(createPortPanel());
        mainPanel.add(createTimeoutPanel());
        mainPanel.add(createNoDelayPanel());
        mainPanel.add(createRequestPanel());
```
For this example, when the expression ""createServerPanel()"" is extracted, Eclipse recommends ""createServerPanel"" as the new name for the variable. However, ""serverPanel"" should be much better. In general, we believe that all verbs in the base form should be removed from the recommended variable names if they are the first tokens of the names. Or at least, remove the verbs in our list.

**Genetic Solution**
---
The precondition for applying these three improved rules is specified as follows:

	- The extracted expression is a method invocation
	- The simple name of the invoked method starts with verbs in their base form (in our predefined collection).
	- We remove the vers from the method name, and the resulting string is recommended as the variable name.

These additional rules can improve the performance of Eclipse substantially (precision from 28.8% to 34.0%, and recall from 21.3% to 25.0%).

The pull request that implements the new rule has also been submitted.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/684/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/684,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5iiAU0,eclipse.jdt.ui,1653081396,684,NA,liuhuigmail,10864327,HUI LIU,liuhui08@bit.edu.cn,NA,2023-07-27T07:49:12Z,2023-07-27T07:49:12Z,@jjohnstn   please kindly have a look. Thanks.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5iiAU0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/686,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/686,eclipse.jdt.ui,1822543308,686,"""Run"" button is still active when selecting an invalid test in a Run Configuration for JUnit",fedejeanne,2205684,Federico Jeanne,,CLOSED,2023-07-26T14:28:49Z,2023-08-03T00:32:28Z,"If I open the _Run Configurations_ and edit a valid configuration for a JUnit test, I can set the **Test method** to some non-existing method and the **Run** button remains activated (I can click on it).

![Image](https://user-images.githubusercontent.com/2205684/252965162-1cdd2007-283e-4df5-9fb9-4d9315ff7184.png)

## Expected behavior
The **Run** button should be deactivated, just as it is deactivated when I set an invalid **Test class** / **Project**
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/686/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/687,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/687,eclipse.jdt.ui,1822813825,687,Create quick assist to change simple cases of deprecated calls to non-deprecated calls,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2023-07-26T16:57:55Z,2023-08-11T21:05:45Z,"In the following snippet:

```
public void func(String a, String b) {
   System.out.println(a + b);
}

/**
  * @deprecated use {@link #foo(String, String)
  */
@Deprecated
public void foo(String a, String b, Object c) {
   func(a, b);
}

public void foo2(String x, String y, Object z) {
   foo(x, y, z);
}
```

It should be straightforward to add a quick assist for the foo() call in foo2 to change it to the non-deprecated func() call.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/687/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/687,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5j3Juj,eclipse.jdt.ui,1675402147,687,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-08-11T21:05:45Z,2023-08-11T21:05:45Z,Fixed by #704,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5j3Juj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/691,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/691,eclipse.jdt.ui,1833859735,691,Remove all references to com.ibm.icu.text in jdt.ui and replace with java.text,robstryker,630383,Rob Stryker,,CLOSED,2023-08-02T20:25:31Z,2023-08-12T04:28:18Z,Remove dependency on com.ibm.icu as it is not necessary. ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/691/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/693,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/693,eclipse.jdt.ui,1833981126,693,Problems opening an editor,andreasdc,82218780,,,OPEN,2023-08-02T22:27:42Z,2023-08-02T22:27:42Z,"![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/82218780/6e218773-ca30-4a08-aa61-7001ec49424d)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/693/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/695,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/695,eclipse.jdt.ui,1835421843,695,"Have ""jdt.ui/core refactoring"" use core interfaces or core base classes whenever possible",robstryker,630383,Rob Stryker,,CLOSED,2023-08-03T17:00:00Z,2023-09-15T20:55:25Z,"Many times, when getting a string representation of a java element, often just for error logging, jdt.ui is using the class JavaElementLabels or BindingLabelProvider  instead of the JavaElementLabelsCore or BindingLabelProviderCore classes. 

The core classes live in jdt.core.manipulation or sometimes in jdt.core. Pushing non-UI logic down the stack, and migrating usage to favor the lower level classes, will serve to unify logic and make more of the code accessible to headless plugins or headless consumers in the long run, specifically for clients like jdt.ls. 

While migrating non-UI code to lower level plugins may be a desirable long term goal, the task should be performed slowly and carefully. Migrating usage to non-UI bundles is a good incremental step to prepare for the day when much of the main logic currently in jdt.ui can be moved down. It also is just good code maintenance. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/695/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/696,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/696,eclipse.jdt.ui,1837894724,696,With Eclipse 2023-06 (4.28.0) running entire test plugin project as JUnit test cause UI freeze,frankbenoit,8962790,Frank Benoit,,CLOSED,2023-08-05T18:44:53Z,2023-09-15T16:23:35Z,"I have seen this now several times in the last weeks.

Single unit tests run, OK.

When running the whole plugin with 500 unit tests, which takes around 1 minute: Then the UI freezes until all execution is completed.
Or it also happens that the UI does not come back, only option is to accept the ""End process"" from Windows.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/696/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/696,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mnKdt,eclipse.jdt.ui,1721542509,696,NA,frankbenoit,8962790,Frank Benoit,,NA,2023-09-15T16:23:35Z,2023-09-15T16:23:35Z,"I was able to find a workaround, by making the console view visible first.
It seems to be a problem in the console view, I created this bug instead: https://github.com/eclipse-platform/eclipse.platform.ui/issues/1298","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mnKdt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/698,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/698,eclipse.jdt.ui,1840143119,698,Junit shortcut Alt+Shift+X T not working ,samgabriel,3934515,Sam Gabriel,,OPEN,2023-08-07T20:13:51Z,2023-08-07T20:13:51Z,"Hi All, 
Recently may be a year ago this shortcut stopped working. Not sure if this is the right place or I should add it to bugs.eclipse.org . I searched up and down for any hints that might help but can't find a workaround anywhere. On the error log you see this stack trace:

Seems that this handler is added twice. Few oddities: Alt + Shift + D  T works. Just not Alt + Shift + X T Also Alt + Shift +X + J works.

One thing to note that might be important here is that I am working on the Debug view.

java.lang.IllegalStateException: Conflicting handlers: {[org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension$LaunchCommandHandler@3500af30,  for 'org.eclipse.jdt.junit.junitShortcut.run',  in WorkbenchContext, active=true, sourcePriority=0, participating=true]} vs {[org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension$LaunchCommandHandler@4d4b0c5e,  for 'org.eclipse.jdt.junit.junitShortcut.run',  in WorkbenchContext, active=true, sourcePriority=0, participating=true]} in: PartImpl (org.eclipse.e4.ui.compatibility.editor)  removeOnHide org.eclipse.jdt.ui.CompilationUnitEditor active activeOnClose (LookupManagerTest.java) Context
	at org.eclipse.ui.internal.handlers.LegacyHandlerService$HandlerSelectionFunction.compute(LegacyHandlerService.java:145)
	at org.eclipse.e4.core.internal.contexts.ValueComputation.get(ValueComputation.java:70)
	at org.eclipse.e4.core.internal.contexts.EclipseContext.internalGet(EclipseContext.java:265)
	at org.eclipse.e4.core.internal.contexts.EclipseContext.internalGet(EclipseContext.java:276)
	at org.eclipse.e4.core.internal.contexts.EclipseContext.internalGet(EclipseContext.java:276)
	at org.eclipse.e4.core.internal.contexts.EclipseContext.internalGet(EclipseContext.java:276)
	at org.eclipse.e4.core.internal.contexts.EclipseContext.get(EclipseContext.java:230)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.lookUpHandler(HandlerServiceImpl.java:103)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:294)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:655)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1286)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1594)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4865)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4743)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5040)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/698/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/699,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/699,eclipse.jdt.ui,1840900293,699,Failure of test FatJarExportTests.exportInternalLib,fedejeanne,2205684,Federico Jeanne,,CLOSED,2023-08-08T09:08:49Z,2023-09-21T19:30:11Z,"The test just failed in [this CI-Build](https://ci.eclipse.org/jdt/job/eclipse.jdt.ui-github/job/PR-675/5/testReport/AutomatedSuite%20org.eclipse.jdt.ui.tests.jarexport.JarExportTests%20org.eclipse.jdt.ui.tests.jarexport/FatJarExportTests/exportInternalLib/) of #675 .

It seems to be unrelated to the changes in the PR since it happened after a rebase (no changes were made to the code).

Stack-Trace:
```java
org.eclipse.core.runtime.CoreException: Process did not terminate within timeout
	at org.eclipse.jdt.ui.tests.jarexport.FatJarExportTests.runJar(FatJarExportTests.java:434)
	at org.eclipse.jdt.ui.tests.jarexport.FatJarExportTests.createAndRunFatJar(FatJarExportTests.java:193)
	at org.eclipse.jdt.ui.tests.jarexport.FatJarExportTests.exportInternalLib(FatJarExportTests.java:819)
...
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/699/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/700,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/700,eclipse.jdt.ui,1843504475,700,[cleanup] all functions in StubUtility2 could be done by StubUtility2Core,robstryker,630383,Rob Stryker,,CLOSED,2023-08-09T15:22:51Z,2023-08-09T19:45:37Z,"StubUtility2 has 1 fairly large function not available in StubUtility2Core.  However, this function could easily be done in the lower .manipulations plugin. 

The file has 3 imports which appear facially to be UI classes:

```
import org.eclipse.jdt.internal.corext.util.JDTUIHelperClasses;
import org.eclipse.jdt.internal.corext.util.JavaModelUtil;
import org.eclipse.jdt.internal.ui.preferences.formatter.FormatterProfileManager;
```

JDTUIHelperClasses is imported and referenced merely as part of an `@see` annotation and does not need to be imported. 

JavaModelUtil now lives in the .manipulation plugin

FormatterProfileManager is being used only for its `getProjectSettings` method, which is also available in `FormatterProfileManagerCore`

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/700/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/705,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/705,eclipse.jdt.ui,1847336428,705,Support for either org.hamcrest.core 1.x or org.hamcrest/org.hamcrest.core 2.x,merks,208716,Ed Merks,,CLOSED,2023-08-11T19:43:17Z,2023-08-15T13:04:32Z,"This constant was changed to accommodate org.hamcrest.core 2.x

https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/7e18055320a51cb8bd946156952b610824951ffd/org.eclipse.jdt.junit.core/src/org/eclipse/jdt/internal/junit/buildpath/BuildPathSupport.java#L307-L308

but now it excludes org.hamcrest.core 1.x from the range.  But org.hamcrest.core alone 1.x is sufficient to satisfy org.junit's bundle require.

On the other hand, org.hamcrest.core 2.x is just a wrapper and has a bundle require on org.hamcrest 2.x, so this constant was added because without this bundle, the org.hamcrest.core bundle 2.x is effectively useless:

https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/7e18055320a51cb8bd946156952b610824951ffd/org.eclipse.jdt.junit.core/src/org/eclipse/jdt/internal/junit/buildpath/BuildPathSupport.java#L310-L311

I.e., the org.hamcrest.core bundle 2.x provides nothing of significance so it doesn't actually need to be on the classpath...

We could change the lower bound of the range of HAMCREST_CORE_PLUGIN here to 1.x:

https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/7e18055320a51cb8bd946156952b610824951ffd/org.eclipse.jdt.junit.core/src/org/eclipse/jdt/internal/junit/buildpath/BuildPathSupport.java#L307-L308

However, if 1.x, rather than 2.x, actually resolves for HAMCREST_CORE_PLUGIN's range, then the org.hamcrest plugin 2.x is no longer needed to make org.junit happy.

But the following ""new"" logic diagnoses an error for any range that doesn't resolve:

https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/7e18055320a51cb8bd946156952b610824951ffd/org.eclipse.jdt.junit.core/src/org/eclipse/jdt/internal/junit/buildpath/BuildPathSupport.java#L235-L236

So it's not clear how we can require org.hamcrest.core 1.x, **or** require org.hamcrest.core 2.x **and** org.hamcrest 2.x, without errors being logged.  And, as mentioned, the org.hamcrest.core bundle 2.x is actually useless and provides nothing that needs to be on a plain-old-java classpath.

@HannesWell 

Is the issue clear from this description?  Do you have any good ideas for how best to implement this in a minimal and correct way?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/705/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/705,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5j2uWg,eclipse.jdt.ui,1675290016,705,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-08-11T19:49:24Z,2023-08-11T19:49:24Z,"> without errors being logged.

Ed, I've added this to avoid ""silent"" fails like with the recent build. It is not written in stone that for optional bundles this error should be logged too, but **if** we fail to compute **any of mandatory** bundles we should at least log something useful.

So assuming we have an idea what is the best solution to deal with hamcrest, this error should be logged only if we would be unable to reach ""satisfiable"" state.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5j2uWg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/705,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5j4X66,eclipse.jdt.ui,1675722426,705,NA,HannesWell,44067969,Hannes Wellmann,,NA,2023-08-12T05:47:05Z,2023-08-12T05:47:05Z,"Ed, your descriptions look totally correct, but I'm not familiar with the JDT code in that area.

> > without errors being logged.
> 
> Ed, I've added this to avoid ""silent"" fails like with the recent build. It is not written in stone that for optional bundles this error should be logged too, but **if** we fail to compute **any of mandatory** bundles we should at least log something useful.

Sounds also reasonable. But I cannot see a way to declare a PluginDescription optional, so probably this has to be added? But hamcrest.core 2 is actually not even optional, it is actually a redirect as Ed said. So instead of adding an `optional` option it might be better to implement some kind of re-direct that requires the redirected plugin and removes the initial plugin from the set of required ones.

And of course you can also log warnings and infos, not only errors.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5j4X66/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/705,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5j4pNX,eclipse.jdt.ui,1675793239,705,NA,merks,208716,Ed Merks,,NA,2023-08-12T08:37:01Z,2023-08-12T08:37:01Z,"@iloveeclipse 

I think this is a better way to address the issue of needing either org.hamcrest.core 1.x or org.hamcrest 2.x and providing compatibility such that either one will work.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5j4pNX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/707,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/707,eclipse.jdt.ui,1848017089,707,"Enhance add option ""Ignore Java text block"" to Spell Checker",,,,,CLOSED,2023-08-12T13:33:28Z,2023-09-11T23:56:18Z,"In the current Eclipse IDE 2023‑06 Java code editor
with spell checking enabled and option ""Ignore Java string literals"" ticked I get:

```
String jdbcString = ""jdbc""; // spelling ignored

String jdbcBlock = """"""
    jdbc"""""";                // tagged as misspelled
```
Add option to ignore spelling in Java text block.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/707/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/707,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5kS6mF,eclipse.jdt.ui,1682680197,707,NA,,,,,NA,2023-08-17T17:23:56Z,2023-08-17T17:23:56Z,"Hi, it turns out to be fairly simple to add this enhancement only four files need patches.
Unfortunatly I lack the infrastructure to manage a pull request. Hoping that someone might have the time to have a look. The following patches successfully enable the requested enhancement in my R202306 Eclipse Java IDE.

```
org.eclipse.jdt.ui/ui/org/eclipse/jdt/internal/ui/text/spelling/JavaSpellingEngine.java

 	protected void check(IDocument document, IRegion[] regions, ISpellChecker checker, ISpellingProblemCollector collector, IProgressMonitor monitor) {
 		SpellEventListener listener= new SpellEventListener(collector, document);
 		boolean isIgnoringJavaStrings= PreferenceConstants.getPreferenceStore().getBoolean(PreferenceConstants.SPELLING_IGNORE_JAVA_STRINGS);
+		boolean isIgnoringJavaMultiLineStrings= PreferenceConstants.getPreferenceStore().getBoolean(PreferenceConstants.SPELLING_IGNORE_JAVA_MULTI_LINE_STRINGS);
 		try {
 			for (IRegion region : regions) {
 				for (ITypedRegion partition : TextUtilities.computePartitioning(document, IJavaPartitions.JAVA_PARTITIONING, region.getOffset(), region.getLength(), false)) {
 					final String type= partition.getType();
 					if (isIgnoringJavaStrings && IJavaPartitions.JAVA_STRING.equals(type))
 						continue;
+					if (isIgnoringJavaMultiLineStrings && IJavaPartitions.JAVA_MULTI_LINE_STRING.equals(type))
+						continue;
 					if (!IDocument.DEFAULT_CONTENT_TYPE.equals(type) && !IJavaPartitions.JAVA_CHARACTER.equals(type))
 						checker.execute(listener, new SpellCheckIterator(document, partition, checker.getLocale(), monitor));
 				}
 				
 				
org.eclipse.jdt.ui/ui/org/eclipse/jdt/ui/PreferenceConstants.java
 
+ 	/**
+	 * A named preference that controls whether Java multiline strings
+	 * should be ignored during spell checking.
+	 * <p>
+	 * Value is of type <code>Boolean</code>.
+	 * </p>
+	 *
+	 * @since 3.30
+	 */
+	public static final String SPELLING_IGNORE_JAVA_MULTI_LINE_STRINGS= ""spelling_ignore_java_multi_line_strings""; //$NON-NLS-1$;

 	 
 	 
org.eclipse.jdt.ui/ui/org/eclipse/jdt/internal/ui/preferences/PreferencesMessages.java

+	public static String SpellingPreferencePage_ignore_java_multi_line_strings_label;

 	
 	
 	
org.eclipse.jdt.ui/ui/org/eclipse/jdt/internal/ui/preferences/PreferencesMessages.properties

+SpellingPreferencePage_ignore_java_multi_line_strings_label=Ignore Java &text block literals

 
 
/org.eclipse.jdt.ui/ui/org/eclipse/jdt/internal/ui/preferences/SpellingConfigurationBlock.java

+	private static final Key PREF_SPELLING_IGNORE_JAVA_MULTI_LINE_STRINGS= getJDTUIKey(PreferenceConstants.SPELLING_IGNORE_JAVA_MULTI_LINE_STRINGS);

 
+		label= PreferencesMessages.SpellingPreferencePage_ignore_java_multi_line_strings_label;
+		slave= addCheckBox(user, label, PREF_SPELLING_IGNORE_JAVA_MULTI_LINE_STRINGS, trueFalse, 0);
+		allControls.add(slave);
+
 
 	private static Key[] getAllKeys() {
 		if (SUPPORT_CONTENT_ASSIST_PROPOSALS)
-			return new Key[] { PREF_SPELLING_USER_DICTIONARY, PREF_SPELLING_USER_DICTIONARY_ENCODING, PREF_SPELLING_IGNORE_DIGITS, PREF_SPELLING_IGNORE_MIXED, PREF_SPELLING_IGNORE_SENTENCE, PREF_SPELLING_IGNORE_UPPER, PREF_SPELLING_IGNORE_URLS, PREF_SPELLING_IGNORE_AMPERSAND_IN_PROPERTIES, PREF_SPELLING_IGNORE_NON_LETTERS, PREF_SPELLING_IGNORE_SINGLE_LETTERS, PREF_SPELLING_LOCALE, PREF_SPELLING_PROPOSAL_THRESHOLD, PREF_SPELLING_PROBLEMS_THRESHOLD, PREF_SPELLING_ENABLE_CONTENTASSIST, PREF_SPELLING_IGNORE_JAVA_STRINGS };
+			return new Key[] { PREF_SPELLING_USER_DICTIONARY, PREF_SPELLING_USER_DICTIONARY_ENCODING, PREF_SPELLING_IGNORE_DIGITS, PREF_SPELLING_IGNORE_MIXED, PREF_SPELLING_IGNORE_SENTENCE, PREF_SPELLING_IGNORE_UPPER, PREF_SPELLING_IGNORE_URLS, PREF_SPELLING_IGNORE_AMPERSAND_IN_PROPERTIES, PREF_SPELLING_IGNORE_NON_LETTERS, PREF_SPELLING_IGNORE_SINGLE_LETTERS, PREF_SPELLING_LOCALE, PREF_SPELLING_PROPOSAL_THRESHOLD, PREF_SPELLING_PROBLEMS_THRESHOLD, PREF_SPELLING_ENABLE_CONTENTASSIST, PREF_SPELLING_IGNORE_JAVA_STRINGS, PREF_SPELLING_IGNORE_JAVA_MULTI_LINE_STRINGS };
 		else
-			return new Key[] { PREF_SPELLING_USER_DICTIONARY, PREF_SPELLING_USER_DICTIONARY_ENCODING, PREF_SPELLING_IGNORE_DIGITS, PREF_SPELLING_IGNORE_MIXED, PREF_SPELLING_IGNORE_SENTENCE, PREF_SPELLING_IGNORE_UPPER, PREF_SPELLING_IGNORE_URLS, PREF_SPELLING_IGNORE_AMPERSAND_IN_PROPERTIES, PREF_SPELLING_IGNORE_NON_LETTERS, PREF_SPELLING_IGNORE_SINGLE_LETTERS, PREF_SPELLING_LOCALE, PREF_SPELLING_PROPOSAL_THRESHOLD, PREF_SPELLING_PROBLEMS_THRESHOLD, PREF_SPELLING_IGNORE_JAVA_STRINGS };
+			return new Key[] { PREF_SPELLING_USER_DICTIONARY, PREF_SPELLING_USER_DICTIONARY_ENCODING, PREF_SPELLING_IGNORE_DIGITS, PREF_SPELLING_IGNORE_MIXED, PREF_SPELLING_IGNORE_SENTENCE, PREF_SPELLING_IGNORE_UPPER, PREF_SPELLING_IGNORE_URLS, PREF_SPELLING_IGNORE_AMPERSAND_IN_PROPERTIES, PREF_SPELLING_IGNORE_NON_LETTERS, PREF_SPELLING_IGNORE_SINGLE_LETTERS, PREF_SPELLING_LOCALE, PREF_SPELLING_PROPOSAL_THRESHOLD, PREF_SPELLING_PROBLEMS_THRESHOLD, PREF_SPELLING_IGNORE_JAVA_STRINGS, PREF_SPELLING_IGNORE_JAVA_MULTI_LINE_STRINGS };
 	}

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5kS6mF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/707,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5kTeXb,eclipse.jdt.ui,1682826715,707,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-08-17T19:15:17Z,2023-08-17T19:15:17Z,"Hi @illustrare-opera Thanks for the report and potential fix.  Actually, a new option is not needed.  A text block is a Java String and so the original ignore option should apply in that case as well so just the check needs to be added.  I can easily create a patch.  It may have to wait until 4.30 M1 to be merged as the 4.29 deadline for minor issues has passed.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5kTeXb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/707,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mNSm-,eclipse.jdt.ui,1714760126,707,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-09-11T23:56:13Z,2023-09-11T23:56:13Z,Closing this as it has been replaced by #771  Thanks @illustrare-opera for pointing this bug out.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mNSm-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/708,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/708,eclipse.jdt.ui,1849908074,708,JavaStackTracePageParticipant: Conflicting handlers,jukzi,51790620,Jörg Kubitz,,CLOSED,2023-08-14T14:31:54Z,2024-03-12T15:59:14Z,"In Console when i first click on 
`	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708)
`
and then click on

`	at org.eclipse.jdt.internal.compiler.util.JrtFileSystem.getFileBytes(JRTUtil.java:667)
`

the error log shows:
```
Conflicting handlers for org.eclipse.jdt.ui.edit.text.java.format: {org.eclipse.jdt.internal.debug.ui.console.JavaStackTracePageParticipant$1@5947cf18} vs {org.eclipse.jdt.internal.debug.ui.console.JavaStackTracePageParticipant$1@367caa26} in: PartImpl (org.eclipse.e4.ui.compatibility.editor)  removeOnHide org.eclipse.jdt.ui.ClassFileEditorContext

java.lang.IllegalStateException: Conflicting handlers: 
    {[org.eclipse.jdt.internal.debug.ui.console.JavaStackTracePageParticipant$1@5947cf18,  for 'org.eclipse.jdt.ui.edit.text.java.format',  in WorkbenchContext, active=true, sourcePriority=0, participating=true]}
 vs {[org.eclipse.jdt.internal.debug.ui.console.JavaStackTracePageParticipant$1@367caa26,  for 'org.eclipse.jdt.ui.edit.text.java.format',  in WorkbenchContext, active=true, sourcePriority=0, participating=true]}
 in: PartImpl (org.eclipse.e4.ui.compatibility.editor)  removeOnHide org.eclipse.jdt.ui.ClassFileEditorContext
	at org.eclipse.ui.internal.handlers.LegacyHandlerService$HandlerSelectionFunction.compute(LegacyHandlerService.java:145)
	at org.eclipse.e4.core.internal.contexts.ValueComputation.get(ValueComputation.java:70)
	at org.eclipse.e4.core.internal.contexts.EclipseContext.internalGet(EclipseContext.java:265)
	at org.eclipse.e4.core.internal.contexts.EclipseContext.internalGet(EclipseContext.java:276)
	at org.eclipse.e4.core.internal.contexts.EclipseContext.internalGet(EclipseContext.java:276)
	at org.eclipse.e4.core.internal.contexts.EclipseContext.get(EclipseContext.java:230)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.lookUpHandler(HandlerServiceImpl.java:103)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.handlerChanged(E4HandlerProxy.java:114)
	at org.eclipse.core.commands.AbstractHandler.fireHandlerChanged(AbstractHandler.java:77)
	at org.eclipse.jface.commands.ActionHandler.lambda$0(ActionHandler.java:81)
	at org.eclipse.jface.action.AbstractAction.firePropertyChange(AbstractAction.java:52)
	at org.eclipse.jface.action.AbstractAction.firePropertyChange(AbstractAction.java:75)
	at org.eclipse.jface.action.Action.setEnabled(Action.java:541)
	at org.eclipse.jdt.ui.actions.FormatAllAction.selectionChanged(FormatAllAction.java:94)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchSelectionChanged(SelectionDispatchAction.java:262)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.selectionChanged(SelectionDispatchAction.java:257)
	at org.eclipse.jface.viewers.Viewer$1.run(Viewer.java:151)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:148)
	at org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:2137)
	at org.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:1669)
	at org.eclipse.jface.viewers.TreeViewer.setSelection(TreeViewer.java:1090)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.showInput(PackageExplorerPart.java:1061)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.editorActivated(PackageExplorerPart.java:1010)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$1.partActivated(PackageExplorerPart.java:230)
	at org.eclipse.ui.internal.WorkbenchPage$3.run(WorkbenchPage.java:4905)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.WorkbenchPage.firePartActivated(WorkbenchPage.java:4902)
	at org.eclipse.ui.internal.WorkbenchPage$E4PartListener.partActivated(WorkbenchPage.java:214)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl$2.run(PartServiceImpl.java:250)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.firePartActivated(PartServiceImpl.java:247)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.activate(PartServiceImpl.java:777)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.activate(PartServiceImpl.java:683)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.activate(PartServiceImpl.java:678)
	at org.eclipse.ui.internal.WorkbenchPage.activate(WorkbenchPage.java:957)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:3195)
	at org.eclipse.ui.internal.WorkbenchPage.lambda$11(WorkbenchPage.java:3123)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:3121)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:3091)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:3074)
	at org.eclipse.jdt.internal.debug.ui.console.JavaStackTraceHyperlink.processSearchResult(JavaStackTraceHyperlink.java:220)
	at org.eclipse.jdt.internal.debug.ui.console.JavaStackTraceHyperlink$3.runInUIThread(JavaStackTraceHyperlink.java:197)
	at org.eclipse.ui.progress.UIJob.lambda$0(UIJob.java:148)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4047)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3663)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:645)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:552)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/708/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/708,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52u4og,eclipse.jdt.ui,1992002080,708,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-03-12T15:59:13Z,2024-03-12T15:59:13Z,can not reproduce,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52u4og/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/717,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/717,eclipse.jdt.ui,1851985404,717,Propose import for missing types in single member and normal annotations,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2023-08-15T19:16:32Z,2023-09-12T19:15:37Z,"From https://bugs.eclipse.org/bugs/show_bug.cgi?id=421693

```
Given:

// --
import java.lang.annotation.Documented;
import java.lang.annotation.Retention;
import java.lang.annotation.Target;
// import java.lang.annotation.ElementType;
// import java.lang.annotation.RetentionPolicy;


@Target(ElementType.TYPE_USE)
@Retention(RetentionPolicy.RUNTIME)
@Documented
@interface NonCritical { }

I don't get any quick fix to import ElementType and RetentionPolicy. All I
see is Rename in file.
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/717/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/719,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/719,eclipse.jdt.ui,1852264461,719,Removing .p2 folder makes Eclipse unlaunchable,andreasdc,82218780,,,CLOSED,2023-08-15T23:07:19Z,2023-08-17T22:15:37Z,"I wanted to delete .p2 folder, but it gives me this error. This folder is 3gb in size for me and looks weird, I want to free up my space.
Eclipse executable launcher error: Unable to locate companion shared library","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/719/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/719,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5kH0Ms,eclipse.jdt.ui,1679770412,719,NA,andreasdc,82218780,,,NA,2023-08-15T23:49:26Z,2023-08-15T23:49:26Z,"I see most of it is pool/plugins folder, which has ton of old files and folders.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5kH0Ms/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/719,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5kUQUt,eclipse.jdt.ui,1683031341,719,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-08-17T21:56:44Z,2023-08-17T21:56:44Z,"Hi @andreasdc You cannot remove that folder.  Please see: https://stackoverflow.com/questions/62230297/what-are-m2-and-p2-folders-and-can-i-delete-them

I'm closing this issue.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5kUQUt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/719,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5kUSQp,eclipse.jdt.ui,1683039273,719,NA,andreasdc,82218780,,,NA,2023-08-17T22:06:09Z,2023-08-17T22:06:09Z,"All good, running the Eclipse installer and cleaning there fixed the problem. :) Some kind of warning or similar that you have big folder would be nice, thanks! 🥇 ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5kUSQp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/720,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/720,eclipse.jdt.ui,1852905792,720,"""Java editor - sometimes refuses to format code""",daniel-matheis-vivavis,117902694,Daniel Matheis @ VIVAVIS,,CLOSED,2023-08-16T09:58:23Z,2023-09-27T11:53:42Z,"Originally this bug report was used to report the problem: 
https://bugs.eclipse.org/bugs/show_bug.cgi?id=582110 
[Bug 582110](https://bugs.eclipse.org/bugs/show_bug.cgi?id=582110) - Java editor - sometimes refuses to format code

I assume that this location here is hopefully the right one to report about it.
In the linked issue I have attached a demo project to reproduce the problem (https://bugs.eclipse.org/bugs/attachment.cgi?id=289150).
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/720/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/720,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ni78d,eclipse.jdt.ui,1737211677,720,NA,Madjosz,28844868,,,NA,2023-09-27T11:28:40Z,2023-09-27T11:28:40Z,Duplicate of https://github.com/eclipse-jdt/eclipse.jdt.core/issues/609,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ni78d/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/725,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/725,eclipse.jdt.ui,1854594567,725,NullAnnotationsRewriteOperations: OutOfBoundsException: Index 1 out of bounds for length 1,jukzi,51790620,Jörg Kubitz,,CLOSED,2023-08-16T12:24:20Z,2023-09-17T12:35:06Z,"according to the stacktrace this was logged when Hovering org.eclipse.egit.ui.internal.ValidationUtils line 41
![image](https://github.com/eclipse-jdt/eclipse.jdt.core/assets/51790620/38186a72-e895-43f5-80c8-374bb852807a)

```
java.lang.IndexOutOfBoundsException: Index 1 out of bounds for length 1
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)
	at java.base/java.util.Objects.checkIndex(Objects.java:361)
	at java.base/java.util.ArrayList.get(ArrayList.java:427)
	at org.eclipse.jdt.core.dom.ASTNode$NodeList.get(ASTNode.java:1583)
	at org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$ParameterAnnotationRewriteOperation.<init>(NullAnnotationsRewriteOperations.java:278)
	at org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$ParameterAnnotationRewriteOperation.<init>(NullAnnotationsRewriteOperations.java:272)
	at org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$Builder.createAddAnnotationOperation(NullAnnotationsRewriteOperations.java:621)
	at org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$Builder.createAddAnnotationOperation(NullAnnotationsRewriteOperations.java:507)
	at org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix.createNullAnnotationInSignatureFix(NullAnnotationsFix.java:142)
	at org.eclipse.jdt.internal.ui.text.correction.NullAnnotationsCorrectionProcessor.addNullAnnotationInSignatureProposal(NullAnnotationsCorrectionProcessor.java:76)
	at org.eclipse.jdt.internal.ui.text.correction.NullAnnotationsCorrectionProcessor.addReturnAndArgumentTypeProposal(NullAnnotationsCorrectionProcessor.java:71)
	at org.eclipse.jdt.internal.ui.text.correction.QuickFixProcessor.process(QuickFixProcessor.java:826)
	at org.eclipse.jdt.internal.ui.text.correction.QuickFixProcessor.getCorrections(QuickFixProcessor.java:361)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionCollector.safeRun(JavaCorrectionProcessor.java:381)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.run(JavaCorrectionProcessor.java:341)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.process(JavaCorrectionProcessor.java:336)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectCorrections(JavaCorrectionProcessor.java:465)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:115)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.computeCompletionProposals(ProblemHover.java:89)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.<init>(ProblemHover.java:74)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover.createAnnotationInfo(ProblemHover.java:178)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover.getHoverInfo2(AbstractAnnotationHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

```

```
eclipse.buildId=4.29.0.I20230815-1800
java.version=17.0.8
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=de_DE
Framework arguments:  -product org.eclipse.epp.package.committers.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.committers.product -data file:/C:/Users/jkubitz/egit-2023-08-16/ws/

```
@jjohnstn don't know if this is a core or ui problem","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/725/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/725,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5kQCqe,eclipse.jdt.ui,1681926814,725,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-08-16T12:29:20Z,2023-08-16T12:29:20Z,@stephan-herrmann looks like you wrote the code,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5kQCqe/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/725,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5kQCqh,eclipse.jdt.ui,1681926817,725,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2023-08-17T08:48:15Z,2023-08-17T08:48:15Z,"> @stephan-herrmann looks like you wrote the code

Indeed so. :)

Thanks for the hint and for reproducing steps!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5kQCqh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/725,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5kQCqm,eclipse.jdt.ui,1681926822,725,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2023-08-17T08:53:45Z,2023-08-17T08:53:45Z,"> @jjohnstn don't know if this is a core or ui problem

The bug is in jdt.ui. Does github support moving an issue to a different component?

Obviously linking to the PR didn't work, here it is: https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/724","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5kQCqm/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/725,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5kQCqq,eclipse.jdt.ui,1681926826,725,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-08-17T09:06:04Z,2023-08-17T09:06:04Z,"> Does github support moving an issue to a different component?

Yes. See the box on the upper right side of the ticket: 
![image](https://github.com/eclipse-jdt/eclipse.jdt.core/assets/964108/4b4ce816-f5c9-45b9-9c96-bbc53a1e8548)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5kQCqq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/725,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5kQCqu,eclipse.jdt.ui,1681926830,725,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-08-17T09:07:01Z,2023-08-17T09:07:01Z,"If you click on it and select repo you will see following screen:
![image](https://github.com/eclipse-jdt/eclipse.jdt.core/assets/964108/e00ef1a5-d505-4d47-b735-a87daaa108de)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5kQCqu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/725,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5kogRF,eclipse.jdt.ui,1688339525,725,NA,Bananeweizen,406876,Michael Keppler,,NA,2023-08-22T14:49:30Z,2023-08-22T14:49:30Z,"The previous Github comment about me pushing a commit referencing this issue is wrong, so please ignore it.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5kogRF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/721,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/721,eclipse.jdt.ui,1853888661,721,Make deprecated quick assist also a quick fix,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2023-08-16T20:50:49Z,2023-09-12T18:21:43Z,The new quick assist for deprecated methods that inlines the deprecated call if the deprecated method calls the replacement method it recommends in its Javadoc should also be a quick fix for when the deprecated call is flagged as warning or error.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/721/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/722,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/722,eclipse.jdt.ui,1853896422,722,Add new cleanup to change deprecated calls as prescribed by Javadoc,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2023-08-16T20:57:44Z,2023-09-25T03:16:13Z,"A new quick assist has been added to change a deprecated call to the inlined implementation of that deprecated call if the deprecated method has Javadoc that specifies what to call instead and that method uses that prescribed alternative.

Create a new cleanup to discover these calls and make all possible changes.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/722/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/722,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nSQt1,eclipse.jdt.ui,1732840309,722,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-09-25T03:16:08Z,2023-09-25T03:16:08Z,This has been fixed by #804,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nSQt1/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/727,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/727,eclipse.jdt.ui,1855463131,727,NPE if CTRL+1 used on deprecated method call when deprecated method has no Javadoc,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2023-08-17T17:58:49Z,2023-08-21T21:11:09Z,"The new quick assist for deprecated methods can log an NPE if deprecated method does not have any Javadoc.

```
package tests;

public class E1 {
	public int foo(int a, int b) {
		return a + b;
	}

	@Deprecated
	public int foo(int x, int y, int z) {
		int k = 2 * y + 3 * z;
		return foo(x, k);
	}
}

package tests;

class E {

	public int callfoo(int a, int b, int c) {
		E1 e1 = new E1();
		return e1.foo(a, b, c);
	}
}

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/727/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/729,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/729,eclipse.jdt.ui,1855555224,729,Preserve preceding comments for cast expression removed in instanceof pattern cleanup,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2023-08-17T19:08:17Z,2023-09-11T22:26:07Z,"For the following code:

if (o instanceof Double) {
  // we need to do double math
  Double d = (Double)o;
   ....

a cleanup exists to convert it to:

if (o instanceof Double d) {
   ...
}

Presently, cleanups that remove statements also remove their owned comments as it is not known whether the comment belongs only to the statement or whether it is a logic comment so in the previous case, the comment ""we need to do double math"" is removed.

In the case of this cleanup, it is a reasonable assumption that a simple cast statement will unlikely to have a comment specific to that statement and thus, preserving the comment will benefit more users than require them to remove it manually.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/729/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/731,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/731,eclipse.jdt.ui,1859557624,731,bullet point list in preferences/properties grows to screen height,Bananeweizen,406876,Michael Keppler,,OPEN,2023-08-21T14:56:44Z,2023-08-21T14:56:44Z,"Having a cleanup profile with many cleanups enabled leads to the preference dialog growing as high as the screen, because the bullet point list doesn't limit its size. Looks like this on my screen (shrinked to 25%):
![grafik](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/406876/5a0b7db7-2930-4e05-b816-73e30f73f4e2)

Note the scrollbar of the bullet point list itself! The bullet point list should limit its size.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/731/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/735,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/735,eclipse.jdt.ui,1865348046,735,"46 Random failing test CodeCompletionTest, JavadocCompletionTest, TypeCompletionTest since I20230824-0400",iloveeclipse,964108,Andrey Loskutov,,OPEN,2023-08-24T14:57:31Z,2024-08-19T10:27:03Z,"https://download.eclipse.org/eclipse/downloads/drops4/I20230824-0400/testresults/html/org.eclipse.jdt.text.tests_ep429I-unit-cen64-gtk3-java17_linux.gtk.x86_64_17.html

All are very similar, is if they are unable to find JDK classes

I wonder if that has relationship to the ""DetectVMInstallationsJob"" job / similar to https://github.com/eclipse-jdt/eclipse.jdt.core/issues/1190

```
no proposal starting with ""{@link DateFormat}""

java.lang.AssertionError: no proposal starting with ""{@link DateFormat}""
at org.junit.Assert.fail(Assert.java:89)
at org.junit.Assert.assertTrue(Assert.java:42)
at org.junit.Assert.assertNotNull(Assert.java:713)
at org.eclipse.jdt.text.tests.contentassist.AbstractCompletionTest.findNonNullProposal(AbstractCompletionTest.java:555)
at org.eclipse.jdt.text.tests.contentassist.AbstractCompletionTest.assertProposal(AbstractCompletionTest.java:357)
at org.eclipse.jdt.text.tests.contentassist.AbstractCompletionTest.assertTypeJavadocProposal(AbstractCompletionTest.java:331)
at org.eclipse.jdt.text.tests.contentassist.JavadocCompletionTest.testDirectLinkImportsOnExistingImportCamelCase(JavadocCompletionTest.java:201)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
```

```
no proposal starting with ""List ""

java.lang.AssertionError: no proposal starting with ""List ""
at org.junit.Assert.fail(Assert.java:89)
at org.junit.Assert.assertTrue(Assert.java:42)
at org.junit.Assert.assertNotNull(Assert.java:713)
at org.eclipse.jdt.text.tests.contentassist.AbstractCompletionTest.findNonNullProposal(AbstractCompletionTest.java:555)
at org.eclipse.jdt.text.tests.contentassist.AbstractCompletionTest.assertProposal(AbstractCompletionTest.java:357)
at org.eclipse.jdt.text.tests.contentassist.AbstractCompletionTest.assertTypeJavadocProposal(AbstractCompletionTest.java:331)
at org.eclipse.jdt.text.tests.contentassist.JavadocCompletionTest.testLinkType(JavadocCompletionTest.java:148)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
```

```
no proposal starting with ""Random ""

java.lang.AssertionError: no proposal starting with ""Random ""
at org.junit.Assert.fail(Assert.java:89)
at org.junit.Assert.assertTrue(Assert.java:42)
at org.junit.Assert.assertNotNull(Assert.java:713)
at org.eclipse.jdt.text.tests.contentassist.AbstractCompletionTest.findNonNullProposal(AbstractCompletionTest.java:555)
at org.eclipse.jdt.text.tests.contentassist.AbstractCompletionTest.assertProposal(AbstractCompletionTest.java:357)
at org.eclipse.jdt.text.tests.contentassist.AbstractCompletionTest.assertMethodBodyProposal(AbstractCompletionTest.java:242)
at org.eclipse.jdt.text.tests.contentassist.TypeCompletionTest.testNoQualifierRemovalWithImport(TypeCompletionTest.java:88)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/735/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/735,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mWEuE,eclipse.jdt.ui,1717062532,735,NA,noopur2507,8749449,Noopur Gupta,,NA,2023-09-13T07:04:33Z,2023-09-13T07:04:33Z,These haven't failed since then. The issue can be reopened if it repeats.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mWEuE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/735,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6BuJwM,eclipse.jdt.ui,2176359436,735,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-06-18T15:16:14Z,2024-06-18T15:16:14Z,"Saw it more often again:
https://download.eclipse.org/eclipse/downloads/drops4/I20240614-1800/testresults/html/org.eclipse.jdt.text.tests_ep433I-unit-mac64-java17_macosx.cocoa.x86_64_17.html
https://download.eclipse.org/eclipse/downloads/drops4/I20240617-1800/testresults/html/org.eclipse.jdt.text.tests_ep433I-unit-cen64-gtk3-java21_linux.gtk.x86_64_21.html
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6BuJwM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/735,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6I3ciz,eclipse.jdt.ui,2296236211,735,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-08-19T10:27:02Z,2024-08-19T10:27:02Z,"According to https://bugs.eclipse.org/bugs/show_bug.cgi?id=186554 such errors can be worked around with org.eclipse.jdt.text.tests.contentassist.AbstractCompletionTest.waitBeforeCoreCompletion() to sleep longer. However i would rather love to see the sleep replaced with a condition to wait on. 
Locally i can not reproduce the error even when the sleep is totally removed. So i don't know which condition to wait for.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6I3ciz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/736,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/736,eclipse.jdt.ui,1865713957,736,AnnotateAssistTest1d8 test failed ,noopur2507,8749449,Noopur Gupta,,OPEN,2023-08-24T18:56:54Z,2024-12-17T20:41:23Z,"AnnotateAssistTest1d8.testAnnotateParameter_Varargs2 test failed on mac in I20230824-0400.

```java
java.lang.NullPointerException
at java.base/java.util.Objects.requireNonNull(Objects.java:208)
at java.base/java.util.Arrays$ArrayList.<init>(Arrays.java:4137)
at java.base/java.util.Arrays.asList(Arrays.java:4122)
at org.eclipse.jdt.ui.tests.quickfix.AbstractAnnotateAssistTests.collectAnnotateProposals(AbstractAnnotateAssistTests.java:82)
at org.eclipse.jdt.ui.tests.quickfix.AnnotateAssistTest1d8.testAnnotateParameter_Varargs2(AnnotateAssistTest1d8.java:895)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
``` ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/736/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/736,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5sPDIm,eclipse.jdt.ui,1815884326,736,NA,noopur2507,8749449,Noopur Gupta,,NA,2023-11-17T07:45:09Z,2023-11-17T07:45:09Z,"org.eclipse.jdt.ui.tests.quickfix.AnnotateAssistTest1d8.testAnnotateParameter_WildcardBound failed in I20231115-1800, macosx.cocoa.x86_64 java17.

```
java.lang.NullPointerException
at java.base/java.util.Objects.requireNonNull(Objects.java:208)
at java.base/java.util.Arrays$ArrayList.<init>(Arrays.java:4137)
at java.base/java.util.Arrays.asList(Arrays.java:4122)
at org.eclipse.jdt.ui.tests.quickfix.AbstractAnnotateAssistTests.collectAnnotateProposals(AbstractAnnotateAssistTests.java:82)
at org.eclipse.jdt.ui.tests.quickfix.AnnotateAssistTest1d8.testAnnotateParameter_WildcardBound(AnnotateAssistTest1d8.java:303)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5sPDIm/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/736,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xs_3S,eclipse.jdt.ui,1907621330,736,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-24T08:22:53Z,2024-01-24T08:22:53Z,"AnnotateAssistTest1d8 frequentl fails on I-Build I20240123-1800 on all platforms with various exceptions for example NPE or ""Wrong number of proposals""
https://download.eclipse.org/eclipse/downloads/drops4/I20240123-1800/testresults/html/org.eclipse.jdt.ui.tests_ep431I-unit-mac64-java17_macosx.cocoa.x86_64_17.html","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xs_3S/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/736,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x2BZp,eclipse.jdt.ui,1909986921,736,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-25T11:34:38Z,2024-01-25T11:34:38Z,"also frequently fails on CI jenkins
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x2BZp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/736,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5-4xUc,eclipse.jdt.ui,2128811292,736,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-05-24T07:38:07Z,2024-05-24T07:38:07Z,"org.eclipse.jdt.ui.tests.quickfix.AnnotateAssistTest1d8
testAnnotateParameter_Varargs1

Failed on I20240522-1800, java17_macosx.

```
java.lang.NullPointerException
at java.base/java.util.Objects.requireNonNull(Objects.java:208)
at java.base/java.util.Arrays$ArrayList.<init>(Arrays.java:4137)
at java.base/java.util.Arrays.asList(Arrays.java:4122)
at org.eclipse.jdt.ui.tests.quickfix.AbstractAnnotateAssistTests.collectAnnotateProposals(AbstractAnnotateAssistTests.java:82)
at org.eclipse.jdt.ui.tests.quickfix.AnnotateAssistTest1d8.testAnnotateParameter_Varargs1(AnnotateAssistTest1d8.java:872)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5-4xUc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/736,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6BcNDF,eclipse.jdt.ui,2171654341,736,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-06-16T13:34:25Z,2024-06-16T13:34:25Z,"> org.eclipse.jdt.ui.tests.quickfix.AnnotateAssistTest1d8.testAnnotateParameter_WildcardBound failed in I20231115-1800, macosx.cocoa.x86_64 java17.
> 
> ```
> java.lang.NullPointerException
> at java.base/java.util.Objects.requireNonNull(Objects.java:208)
> at java.base/java.util.Arrays$ArrayList.<init>(Arrays.java:4137)
> at java.base/java.util.Arrays.asList(Arrays.java:4122)
> at org.eclipse.jdt.ui.tests.quickfix.AbstractAnnotateAssistTests.collectAnnotateProposals(AbstractAnnotateAssistTests.java:82)
> at org.eclipse.jdt.ui.tests.quickfix.AnnotateAssistTest1d8.testAnnotateParameter_WildcardBound(AnnotateAssistTest1d8.java:303)
> at java.base/java.lang.reflect.Method.invoke(Method.java:568)
> ```

This suggests a problem in this code section of ExternalNullAnnotationQuickAssistProcessor.computeQuickAssistProposals()
```
	IClassFile classFile= ((IClassFileEditorInput) part.getEditorInput()).getClassFile();
	cu= classFile.getWorkingCopy((WorkingCopyOwner) null, null);
	if (cu == null || classFile.getSource() == null)
		return null;
...
} catch (JavaModelException e) {
	fErrorMessage= e.getMessage();
	JavaPlugin.log(e);
	return null;
}
```
Candidates:
* JavaModelException in `getWorkingCopy()` or `getSource()`
  * when this happens the exception is logged, has this been observed?
* null return from `getWorkingCopy()` -- _can `PerWorkingCopyInfo.getWorkingCopy()` possibly return nul??_
* null return from `getSource()`
   * this could be a result from a problem with a source mapper, or other reasons why no buffer could be accessed

At the bottom line this doesn't look like a problem specific to the functionality being tested, but more like a problem in general handling of buffers for a classfile.

As I'm unable to reproduce locally, I don't think I can help much to resolve this.

Anyway, please let me know if ever a JavaModelException is logged by this test.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6BcNDF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/736,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6BjbZ4,eclipse.jdt.ui,2173548152,736,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-06-17T14:17:19Z,2024-06-17T14:17:19Z,I plan to review that Buffer code.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6BjbZ4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/736,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Cl6gl,eclipse.jdt.ui,2190977061,736,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-06-26T07:09:17Z,2024-06-26T07:09:17Z,"failed again with updated error message - @stephan-herrmann does that help?
https://download.eclipse.org/eclipse/downloads/drops4/I20240625-1800/testresults/html/org.eclipse.jdt.ui.tests_ep433I-unit-mac64-java17_macosx.cocoa.x86_64_17.html

```
java.lang.AssertionError: cu=[Working copy] X.class [in pack.age [in lib.jar [in TestSetupProject1d8]]]
package pack.age
interface X
java.lang.String test(java.util.List<java.lang.String>, java.lang.String ...) source=null
at org.junit.Assert.fail(Assert.java:89)
at org.junit.Assert.assertTrue(Assert.java:42)
at org.junit.Assert.assertNotNull(Assert.java:713)
at org.eclipse.jdt.ui.tests.quickfix.AbstractAnnotateAssistTests.collectAnnotateProposals(AbstractAnnotateAssistTests.java:90)
at org.eclipse.jdt.ui.tests.quickfix.AnnotateAssistTest1d8.testAnnotateParameter_Varargs3(AnnotateAssistTest1d8.java:1032)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
```

```
java.lang.ClassCastException: class bndtools.jareditor.internal.JAREditor cannot be cast to class org.eclipse.jdt.internal.ui.javaeditor.JavaEditor (bndtools.jareditor.internal.JAREditor is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @8e689d4; org.eclipse.jdt.internal.ui.javaeditor.JavaEditor is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @336f7e67)
at org.eclipse.jdt.ui.tests.quickfix.AnnotateAssistTest1d8.testAnnotateParameter_WildcardBound(AnnotateAssistTest1d8.java:310)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Cl6gl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/736,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6CmDB0,eclipse.jdt.ui,2191011956,736,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-06-26T07:30:04Z,2024-06-26T07:30:04Z,"The logfile 
https://download.eclipse.org/eclipse/downloads/drops4/I20240625-1800/testresults/ep433I-unit-mac64-java17_macosx.cocoa.x86_64_17/org.eclipse.jdt.ui.tests.AutomatedSuite.txt starts with an indexer error and follows up with other exceptions like https://github.com/eclipse-platform/eclipse.platform.ui/issues/2004
```
!ENTRY org.eclipse.jdt.core 4 4 2024-06-26 01:38:28.817
!MESSAGE Error checking whether PackageFragmentRoot is on module path!
!STACK 1
Java Model Exception: Error in Java Model (code 1006): /Users/genie.releng/workspace/AutomatedTests/ep433I-unit-mac64-java17/workarea/I20240625-1800/eclipse-testing/test-eclipse/Eclipse.app/Contents/Eclipse/plugins/org.eclipse.jdt.ui.tests_3.15.500.v20240621-0244/testresources/rtstubs13.jar is not on its project's build path
	at org.eclipse.jdt.internal.core.PackageFragmentRoot.getRawClasspathEntry(PackageFragmentRoot.java:616)
	at org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.computeModuleFor(JavaSearchNameEnvironment.java:611)
	at org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.mapToClassPathLocation(JavaSearchNameEnvironment.java:303)
	at org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.computeClasspathLocations(JavaSearchNameEnvironment.java:216)
	at org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.computeClasspathLocations(JavaSearchNameEnvironment.java:188)
	at org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment.<init>(JavaSearchNameEnvironment.java:96)
	at org.eclipse.jdt.internal.core.search.indexing.SourceIndexer.resolveDocument(SourceIndexer.java:167)
	at org.eclipse.jdt.internal.core.search.JavaSearchParticipant.resolveDocument(JavaSearchParticipant.java:116)
	at org.eclipse.jdt.internal.core.search.indexing.IndexManager.indexResolvedDocument(IndexManager.java:679)
	at org.eclipse.jdt.internal.core.search.indexing.IndexManager$2.execute(IndexManager.java:1283)
	at org.eclipse.jdt.internal.core.search.processing.JobManager.indexerLoop(JobManager.java:542)
	at java.base/java.lang.Thread.run(Thread.java:833)
!SUBENTRY 1 org.eclipse.jdt.core 4 1006 2024-06-26 01:38:28.819
!MESSAGE /Users/genie.releng/workspace/AutomatedTests/ep433I-unit-mac64-java17/workarea/I20240625-1800/eclipse-testing/test-eclipse/Eclipse.app/Contents/Eclipse/plugins/org.eclipse.jdt.ui.tests_3.15.500.v20240621-0244/testresources/rtstubs13.jar is not on its project's build path
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6CmDB0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/736,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6CnDFB,eclipse.jdt.ui,2191274305,736,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-06-26T09:48:00Z,2024-06-26T09:48:00Z,"> bndtools.jareditor.internal.JAREditor cannot be cast to class org.eclipse.jdt.internal.ui.javaeditor.JavaEditor 

Sounds wrong that org.eclipse.jdt.ui.JavaUI.openInEditor(IJavaElement) for a .class file returns  Editor from bndtools which is registered for .jar files.
@iloveeclipse any idea?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6CnDFB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/736,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6CnYrQ,eclipse.jdt.ui,2191362768,736,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-06-26T10:33:50Z,2024-06-26T10:33:50Z,"> > bndtools.jareditor.internal.JAREditor cannot be cast to class org.eclipse.jdt.internal.ui.javaeditor.JavaEditor
> 
> Sounds wrong that org.eclipse.jdt.ui.JavaUI.openInEditor(IJavaElement) for a .class file returns Editor from bndtools which is registered for .jar files.

I agree, this looks weird.

In the good case, `org.eclipse.ui.ide.IDE.getEditorDescriptor(String, boolean, boolean)` determines the content type for ""X.class"" to ""org.eclipse.jdt.core.javaClass"" for which a default editor is found as `EditorDescriptor(id=org.eclipse.jdt.ui.ClassFileEditor, label=Class File Viewer)`.

If another editor is registered for `.class`, then either
* one is selected as default in the preferences, or
* the *first* editor is selected, i.e., selection is order-dependent.

The failing cast happens in the test class, not in productive code, so we could get away in tests by either 
* ensuring that no other editor is registered for .class during tests (how das bndtools enter the picture during tests anyway?)
* setting a preference to select the JDT classfile editor as the default. **this looks like the simplest solution**

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6CnYrQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/736,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6CqBjK,eclipse.jdt.ui,2192054474,736,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-06-26T15:55:13Z,2024-06-26T15:55:13Z,"I hope the ClassCastException will no longer occur after #1478 

Seeing also changes in Buffer synchronization (https://github.com/eclipse-jdt/eclipse.jdt.core/pull/2596) let's keep fingers crossed.

To be re-opened if the problem persists.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6CqBjK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/736,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Cw-6f,eclipse.jdt.ui,2193878687,736,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-06-27T06:10:37Z,2024-06-27T06:10:37Z,"still happens:
https://download.eclipse.org/eclipse/downloads/drops4/I20240626-1800/testresults/html/org.eclipse.jdt.ui.tests_ep433I-unit-mac64-java17_macosx.cocoa.x86_64_17.html
(Jun 26, 2024, 6:54:29 PM)
```
java.lang.ClassCastException: class bndtools.jareditor.internal.JAREditor cannot be cast to class org.eclipse.jdt.internal.ui.javaeditor.JavaEditor (bndtools.jareditor.internal.JAREditor is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @8e689d4; org.eclipse.jdt.internal.ui.javaeditor.JavaEditor is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @336f7e67)
at org.eclipse.jdt.ui.tests.quickfix.AnnotateAssistTest1d8.testAnnotateParameter_Array4(AnnotateAssistTest1d8.java:551)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Cw-6f/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/736,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6C6p1n,eclipse.jdt.ui,2196413799,736,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-06-28T08:36:03Z,2024-06-28T08:36:03Z,"now fails every day on macos?!
https://download.eclipse.org/eclipse/downloads/drops4/I20240627-1800/testresults/html/org.eclipse.jdt.ui.tests_ep433I-unit-mac64-java17_macosx.cocoa.x86_64_17.html

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6C6p1n/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/736,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6DTf5P,eclipse.jdt.ui,2202926671,736,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-07-02T11:41:31Z,2024-07-02T11:41:31Z,"Previous theory was, that a ""foreign"" editor for .class (from bndtools) was selected randomly (which would have been fixed by making JDT's editor the default in preferences).

In #1486 I'm short-cutting the selection of an editor ID, by directly requesting an editor for ID `JavaUI.ID_CF_EDITOR`. This might give a clue if that editor is in fact unavailable. (Perhaps on MacOS initializing the editor throws an exception?).
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6DTf5P/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/736,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6D6nk6,eclipse.jdt.ui,2213181754,736,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-07-08T06:54:11Z,2024-07-08T06:54:11Z,"the error message changed to:
```
java.lang.ClassCastException: class org.eclipse.ui.internal.ErrorEditorPart cannot be cast to class org.eclipse.jdt.internal.ui.javaeditor.JavaEditor (org.eclipse.ui.internal.ErrorEditorPart is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @6887886a; org.eclipse.jdt.internal.ui.javaeditor.JavaEditor is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @2fd9dc97)
at org.eclipse.jdt.ui.tests.quickfix.AbstractAnnotateAssistTests.openInClassfileEditor(AbstractAnnotateAssistTests.java:104)
at org.eclipse.jdt.ui.tests.quickfix.AnnotateAssistTest1d8.testAnnotateParameter_Array3(AnnotateAssistTest1d8.java:471)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)

```
https://download.eclipse.org/eclipse/downloads/drops4/I20240707-1800/testresults/html/org.eclipse.jdt.ui.tests_ep433I-unit-mac64-java17_macosx.cocoa.x86_64_17.html","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6D6nk6/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/736,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6D6r-O,eclipse.jdt.ui,2213199758,736,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-07-08T07:06:12Z,2024-07-08T07:06:12Z,"ErrorEditorPart means Java editor failed to initialize, this is reported to the log:
https://download.eclipse.org/eclipse/downloads/drops4/I20240707-1800/testresults/ep433I-unit-mac64-java17_macosx.cocoa.x86_64_17/org.eclipse.jdt.ui.tests.AutomatedSuite.txt
```
!ENTRY org.eclipse.ui 4 4 2024-07-07 21:53:37.790
!MESSAGE Unable to create part
!STACK 1
org.eclipse.ui.PartInitException: The Class File Viewer cannot handle the given input ('org.eclipse.ui.part.FileEditorInput').
	at org.eclipse.ui.texteditor.AbstractTextEditor.internalInit(AbstractTextEditor.java:3202)
	at org.eclipse.ui.texteditor.AbstractTextEditor.init(AbstractTextEditor.java:3213)
	at org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor.lambda$0(ClassFileEditor.java:656)
	at org.eclipse.jdt.core.JavaCore.lambda$0(JavaCore.java:6196)
	at org.eclipse.jdt.internal.core.JavaModelManager.cacheZipFiles(JavaModelManager.java:5762)
	at org.eclipse.jdt.internal.core.JavaModelManager.callReadOnly(JavaModelManager.java:5751)
	at org.eclipse.jdt.core.JavaCore.callReadOnly(JavaCore.java:6180)
	at org.eclipse.jdt.core.JavaCore.runReadOnly(JavaCore.java:6195)
	at org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor.init(ClassFileEditor.java:656)
	at org.eclipse.ui.internal.EditorReference.initialize(EditorReference.java:353)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.create(CompatibilityPart.java:344)
	at jdk.internal.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:56)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:977)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:939)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalInject(InjectorImpl.java:139)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:386)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:312)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:203)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:90)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:59)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:42)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributedPartRenderer.createWidget(ContributedPartRenderer.java:132)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:991)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.lambda$0(PartServiceImpl.java:105)
	at org.eclipse.e4.ui.services.internal.events.UIEventHandler.lambda$0(UIEventHandler.java:38)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:183)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:5264)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.services.internal.events.UIEventHandler.handleEvent(UIEventHandler.java:38)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:206)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:201)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:131)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:73)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:60)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.ElementContainerImpl.setSelectedElementGen(ElementContainerImpl.java:168)
	at org.eclipse.e4.ui.model.application.ui.impl.ElementContainerImpl.setSelectedElement(ElementContainerImpl.java:187)
	at org.eclipse.e4.ui.internal.workbench.ModelServiceImpl.showElementInWindow(ModelServiceImpl.java:654)
	at org.eclipse.e4.ui.internal.workbench.ModelServiceImpl.bringToTop(ModelServiceImpl.java:618)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.delegateBringToTop(PartServiceImpl.java:796)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.bringToTop(PartServiceImpl.java:401)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.showPart(PartServiceImpl.java:1271)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:3228)
	at org.eclipse.ui.internal.WorkbenchPage.lambda$11(WorkbenchPage.java:3118)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:3116)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:3086)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:3077)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:390)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInSpecificEditor(EditorUtility.java:191)
	at org.eclipse.jdt.ui.tests.quickfix.AbstractAnnotateAssistTests.openInClassfileEditor(AbstractAnnotateAssistTests.java:100)
	at org.eclipse.jdt.ui.tests.quickfix.AnnotateAssistTest1d8.testAnnotateMethod_Array2(AnnotateAssistTest1d8.java:791)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6D6r-O/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/736,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ENB9t,eclipse.jdt.ui,2218008429,736,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-07-09T15:22:38Z,2024-07-09T15:22:38Z,"> org.eclipse.ui.PartInitException: The Class File Viewer cannot handle the given input ('org.eclipse.ui.part.FileEditorInput').

@iloveeclipse thanks for collecting this error output!

At first look this seems to imply, that `IJavaProject.findType()` answered a source compilation unit, although the type should be found in a jar file. 
Reasoning: there are only 2 ways that EditorUtil.getEditorInput() can produce a FileEditorInput:
* when input is an IFile, which is impossible in these tests (we know we have an IType, which is unrelated to IFile)
* when input is an ICompilationUnit (or contained within)

Next attempt in #1501: assert that the java element is indeed a child of a classfile, otherwise let failure report the actual element.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ENB9t/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/736,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6En2jz,eclipse.jdt.ui,2225039603,736,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-07-12T08:01:15Z,2024-07-12T08:01:15Z,"error changed to: 
```
java.lang.AssertionError: cu=[Working copy] X.class [in pack.age [in lib.jar [in TestSetupProject1d8]]]
package pack.age
interface X
java.lang.String test(int[][], java.util.List<java.lang.String>) source=null
at org.junit.Assert.fail(Assert.java:89)
at org.junit.Assert.assertTrue(Assert.java:42)
at org.junit.Assert.assertNotNull(Assert.java:713)
at org.eclipse.jdt.ui.tests.quickfix.AbstractAnnotateAssistTests.collectAnnotateProposals(AbstractAnnotateAssistTests.java:121)
at org.eclipse.jdt.ui.tests.quickfix.AnnotateAssistTest1d8.testAnnotateParameter_Array2(AnnotateAssistTest1d8.java:395)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
```

```
java.lang.AssertionError: Should be child of a classfile: interface X [in [Working copy] X.class [in pack.age [in lib.jar [in TestSetupProject1d8]]]]
java.lang.String test(int[][], java.util.List<java.lang.String>)
at org.junit.Assert.fail(Assert.java:89)
at org.junit.Assert.assertTrue(Assert.java:42)
at org.junit.Assert.assertNotNull(Assert.java:713)
at org.eclipse.jdt.ui.tests.quickfix.AbstractAnnotateAssistTests.openInClassfileEditor(AbstractAnnotateAssistTests.java:101)
at org.eclipse.jdt.ui.tests.quickfix.AnnotateAssistTest1d8.testAnnotateParameter_Array3(AnnotateAssistTest1d8.java:471)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
```

https://download.eclipse.org/eclipse/downloads/drops4/I20240711-1800/testresults/html/org.eclipse.jdt.ui.tests_ep433I-unit-mac64-java17_macosx.cocoa.x86_64_17.html","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6En2jz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/736,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6FAYOe,eclipse.jdt.ui,2231468958,736,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-07-16T17:38:57Z,2024-07-16T17:38:57Z,"> error changed to:
> ... `source=null`

So the first of 4 failures is caused by a missing buffer, only after that we get IJavaElements saying ""in [Working copy] X.class"" without having an IClassFile parent.

Missing buffer could be caused by a problem in `AbstractClassFile.validateClassFile()` or problem in buffer management.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6FAYOe/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/736,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6RXweP,eclipse.jdt.ui,2438924175,736,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-10-25T21:45:07Z,2024-10-25T21:45:07Z,"Interestingly, this test class previously exposed a bug in buffer management, see https://bugs.eclipse.org/bugs/show_bug.cgi?id=550180:

> By adding some tracing to org.eclipse.jdt.internal.core.AbstractClassFile.getSource() I could verify that buffers are re-used for files in jars that are re-created for each test.

Unfortunately, what could previously be observed also locally no longer occurs on my machine.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6RXweP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/736,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6R_AO0,eclipse.jdt.ui,2449212340,736,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-10-31T07:33:35Z,2024-10-31T07:33:35Z,"the ClassCastException still happens:

```
java.lang.ClassCastException: class bndtools.jareditor.internal.JAREditor cannot be cast to class org.eclipse.jdt.internal.ui.javaeditor.JavaEditor (bndtools.jareditor.internal.JAREditor is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @6a2aad1; org.eclipse.jdt.internal.ui.javaeditor.JavaEditor is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @6d280098)
at org.eclipse.jdt.ui.tests.quickfix.AnnotateAssistTest1d5.testAnnotateParameter_Array1(AnnotateAssistTest1d5.java:332)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)

```
https://download.eclipse.org/eclipse/downloads/drops4/I20241030-1630/testresults/html/org.eclipse.jdt.ui.tests_ep434I-unit-macosx-x86_64-java17_macosx.cocoa.x86_64_17.html","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6R_AO0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/736,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6XcXnC,eclipse.jdt.ui,2540796354,736,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-12-13T07:44:48Z,2024-12-13T07:44:48Z,"failed again with 

```
java.lang.AssertionError: Should be child of a classfile: interface X [in [Working copy] X.class [in pack.age [in lib.jar [in TestSetupProject1d8]]]]
java.lang.String[] test()
at org.junit.Assert.assertNotNull(Assert.java:713)
at org.eclipse.jdt.ui.tests.quickfix.AbstractAnnotateAssistTests.openInClassfileEditor(AbstractAnnotateAssistTests.java:101)
at org.eclipse.jdt.ui.tests.quickfix.AnnotateAssistTest1d8.testAnnotateParameter_Array3(AnnotateAssistTest1d8.java:471)
```
https://download.eclipse.org/eclipse/downloads/drops4/I20241212-1800/testresults/html/org.eclipse.jdt.ui.tests_ep435I-unit-linux-x86_64-java17_linux.gtk.x86_64_17.html","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6XcXnC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/736,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6X2usM,eclipse.jdt.ui,2547706636,736,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-12-17T07:40:30Z,2024-12-17T07:40:30Z,"failing really often, with alternating errors
```
java.lang.AssertionError: cu=[Working copy] X.class [in pack.age [in lib.jar [in TestSetupProject]]]
package pack.age
class X
X(java.lang.String) source=null
at org.junit.Assert.fail(Assert.java:89)
at org.junit.Assert.assertTrue(Assert.java:42)
at org.junit.Assert.assertNotNull(Assert.java:713)
at org.eclipse.jdt.ui.tests.quickfix.AbstractAnnotateAssistTests.collectAnnotateProposals(AbstractAnnotateAssistTests.java:121)
at org.eclipse.jdt.ui.tests.quickfix.AnnotateAssistTest1d5.testAnnotateConstructorParameter(AnnotateAssistTest1d5.java:493)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)

```

```
java.lang.ClassCastException: class bndtools.jareditor.internal.JAREditor cannot be cast to class org.eclipse.jdt.internal.ui.javaeditor.JavaEditor (bndtools.jareditor.internal.JAREditor is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @5484a560; org.eclipse.jdt.internal.ui.javaeditor.JavaEditor is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @2c51d048)
at org.eclipse.jdt.ui.tests.quickfix.AnnotateAssistTest1d5.testAnnotateParameter_Array1(AnnotateAssistTest1d5.java:332)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)

```

https://download.eclipse.org/eclipse/downloads/drops4/I20241215-1800/testresults/html/org.eclipse.jdt.ui.tests_ep435I-unit-macosx-x86_64-java17_macosx.cocoa.x86_64_17.html
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6X2usM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/736,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6X94I4,eclipse.jdt.ui,2549580344,736,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-12-17T20:41:22Z,2024-12-17T20:41:22Z,"> java.lang.ClassCastException: class bndtools.jareditor.internal.JAREditor cannot be cast to class org.eclipse.jdt.internal.ui.javaeditor.JavaEditor (bndtools.jareditor.internal.JAREditor is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @5484a560; org.eclipse.jdt.internal.ui.javaeditor.JavaEditor is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @2c51d048)

Previous theory was: if multiple editors for .class are registered, then setting JDT's class file editor as the **default** should ensure that we don't get bndtools' JAREditor instead. 

Thus #1478 made our classfile editor the default during this test.

Still we get the undesired editor, which cannot be used for the test.

Is it possible that bndtools *replaces* editors, i.e., *unregisters* the ""org.eclipse.jdt.ui.ClassFileEditor"" editor??","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6X94I4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/737,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/737,eclipse.jdt.ui,1866968201,737,RemoteTestRunner : Unsupported major.minor version 52.0,sbernard31,840294,Simon Bernard,code@simonbernard.eu,CLOSED,2023-08-25T12:26:54Z,2023-08-25T13:07:28Z,"I'm using **Java Development Tools UI**(org.eclipse.jdt.ui) v3.29.0.v20230525-0728

My project target Java7 as minimal version. 
(I know this is not maintain anymore but this is just the minimal version and there is good reason to keep to Java7 as minimal version)

When I launch my JUnit tests (based on JUnit 4 which is compatible with java 7) in eclipse, I get : 
```
Exception in thread ""main"" java.lang.UnsupportedClassVersionError: org/eclipse/jdt/internal/junit/runner/RemoteTestRunner : Unsupported major.minor version 52.0
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:803)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:442)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:64)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:354)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:348)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:347)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:312)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:482)
```

I know I can compile with more recent JVM and still target old JDK with [`-release`](https://openjdk.org/jeps/247) but at some time I need to check if my binary works with Java7 and so I need to launch my Junit tests with it. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/737/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/737,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5k7XSf,eclipse.jdt.ui,1693283487,737,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-08-25T12:30:42Z,2023-08-25T12:30:42Z,"> but at some time I need to check if my binary works with Java7 and so I need to launch my Junit tests with it.

Please use older Eclipse SDK to work with older Java versions. We can't keep support for Java 7 and Java 20+ at same time.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5k7XSf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/737,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5k7cpj,eclipse.jdt.ui,1693305443,737,NA,sbernard31,840294,Simon Bernard,code@simonbernard.eu,NA,2023-08-25T12:47:52Z,2023-08-25T12:47:52Z,"@iloveeclipse, thx for prompt answer. :pray: 

> Please use older Eclipse SDK to work with older Java versions. 

Just in case, do you know the last compatible version ? 


> We can't keep support for Java 7 and Java 20+ at same time.

Just for my knowledge, does it means there is incompatibility between those both Java version ? Do you have any information/ressources about it ? I did a quick research and didn't find anything. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5k7cpj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/737,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5k7iVX,eclipse.jdt.ui,1693328727,737,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-08-25T13:04:59Z,2023-08-25T13:04:59Z,"> Just for my knowledge, does it means there is incompatibility between those both Java version ? Do you have any information/ressources about it ?

There were breaking security manager related changes in one of 9+ JDK's if I remember it right, plus building all that code with the support of older & new API's is not trivial. Additionally we simply too short on resources to provide any reasonable support for older releases.

> Just in case, do you know the last compatible version ?

Have to look into source & have no time to do that, sorry, please find it by trial and error.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5k7iVX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/737,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5k7j4-,eclipse.jdt.ui,1693335102,737,NA,sbernard31,840294,Simon Bernard,code@simonbernard.eu,NA,2023-08-25T13:07:28Z,2023-08-25T13:07:28Z,"I understand, thx for your help.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5k7j4-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/738,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/738,eclipse.jdt.ui,1871163502,738,NPE in org.eclipse.jdt.internal.corext.util.JavaModelUtil.isEditable,jukzi,51790620,Jörg Kubitz,,CLOSED,2023-08-29T08:32:24Z,2023-09-12T13:29:21Z,"i have no clue how to reproduce but found it in my log:

Version: 2022-12 (4.26)
Build id: I20221123-1800
```
!ENTRY org.eclipse.jdt.core 4 2 2023-08-25 10:16:38.476
!MESSAGE Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.core"".
!STACK 0
java.lang.NullPointerException: Cannot invoke ""org.eclipse.core.resources.ResourceAttributes.isReadOnly()"" because the return value of ""org.eclipse.core.resources.IResource.getResourceAttributes()"" is null
	at org.eclipse.jdt.internal.corext.util.JavaModelUtil.isEditable(JavaModelUtil.java:532)
	at org.eclipse.jdt.internal.ui.compare.JavaStructureDiffViewer.isEditable(JavaStructureDiffViewer.java:318)
	at org.eclipse.jdt.internal.ui.compare.JavaStructureDiffViewer.addAffectedElement(JavaStructureDiffViewer.java:306)
	at org.eclipse.jdt.internal.ui.compare.JavaStructureDiffViewer.findAffectedElement(JavaStructureDiffViewer.java:290)
	at org.eclipse.jdt.internal.ui.compare.JavaStructureDiffViewer.elementChanged(JavaStructureDiffViewer.java:266)
	at org.eclipse.jdt.internal.core.DeltaProcessor$3.run(DeltaProcessor.java:1755)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.core.DeltaProcessor.notifyListeners(DeltaProcessor.java:1743)
	at org.eclipse.jdt.internal.core.DeltaProcessor.firePostChangeDelta(DeltaProcessor.java:1576)
	at org.eclipse.jdt.internal.core.DeltaProcessor.fire(DeltaProcessor.java:1552)
	at org.eclipse.jdt.internal.core.DeltaProcessor.notifyAndFire(DeltaProcessor.java:2273)
	at org.eclipse.jdt.internal.core.DeltaProcessor.resourceChanged(DeltaProcessor.java:2163)
	at org.eclipse.jdt.internal.core.DeltaProcessingState.resourceChanged(DeltaProcessingState.java:501)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:307)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:297)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:160)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:388)
	at org.eclipse.core.internal.resources.Workspace.checkpoint(Workspace.java:584)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.lambda$0(PerformChangeOperation.java:263)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2380)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2405)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation.java:295)
	at org.eclipse.ltk.internal.ui.refactoring.UIPerformChangeOperation.executeChange(UIPerformChangeOperation.java:94)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:219)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2380)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2405)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:89)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/738/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/738,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mDkXy,eclipse.jdt.ui,1712211442,738,NA,robstryker,630383,Rob Stryker,,NA,2023-09-08T20:54:25Z,2023-09-08T20:54:25Z,Looks reasonable. ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mDkXy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/740,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/740,eclipse.jdt.ui,1871200719,740,ArrayIndexOutOfBoundsException in QuickAssistProcessor.getAddMethodDeclaration,jukzi,51790620,Jörg Kubitz,,CLOSED,2023-08-29T08:55:38Z,2023-09-11T10:36:11Z,"don't know how to reproduce. 

found in logs of
Version: 2023-09 (4.29)
Build id: I20230827-1800

```
!ENTRY org.eclipse.jdt.ui 4 2 2023-08-25 13:01:01.177
!MESSAGE Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: Index 3 out of bounds for length 2
	at org.eclipse.jdt.internal.ui.text.correction.QuickAssistProcessor.getAddMethodDeclaration(QuickAssistProcessor.java:1683)
	at org.eclipse.jdt.internal.ui.text.correction.QuickAssistProcessor.getAssists(QuickAssistProcessor.java:363)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeAssistCollector.safeRun(JavaCorrectionProcessor.java:404)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.run(JavaCorrectionProcessor.java:341)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.process(JavaCorrectionProcessor.java:330)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectAssists(JavaCorrectionProcessor.java:506)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectProposals(JavaCorrectionProcessor.java:291)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.computeQuickAssistProposals(JavaCorrectionProcessor.java:247)
	at org.eclipse.jface.text.quickassist.QuickAssistAssistant$ContentAssistProcessor.computeCompletionProposals(QuickAssistAssistant.java:71)
	at org.eclipse.jface.text.contentassist.ContentAssistant$2.lambda$0(ContentAssistant.java:2063)
	at java.base/java.util.Collections$SingletonSet.forEach(Collections.java:4905)
	at org.eclipse.jface.text.contentassist.ContentAssistant$2.run(ContentAssistant.java:2062)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.ContentAssistant.computeCompletionProposals(ContentAssistant.java:2059)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.computeProposals(CompletionProposalPopup.java:577)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.lambda$0(CompletionProposalPopup.java:507)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:502)
	at org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1873)
	at org.eclipse.jface.text.quickassist.QuickAssistAssistant.showPossibleQuickAssists(QuickAssistAssistant.java:113)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionAssistant.showPossibleQuickAssists(JavaCorrectionAssistant.java:194)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:201)
	at org.eclipse.ui.texteditor.TextOperationAction.lambda$0(TextOperationAction.java:130)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.ui.texteditor.TextOperationAction.run(TextOperationAction.java:130)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1286)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmKeyDown(Widget.java:1840)
	at org.eclipse.swt.widgets.Control.WM_KEYDOWN(Control.java:5152)
	at org.eclipse.swt.widgets.Canvas.WM_KEYDOWN(Canvas.java:406)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4775)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5022)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3640)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/740/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/743,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/743,eclipse.jdt.ui,1875801957,743,Bug 178702 - [hovering] Javadoc hover does not translate unicode characters,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2023-08-31T15:47:54Z,2023-09-11T22:49:53Z,"From: https://bugs.eclipse.org/bugs/show_bug.cgi?id=178702

Build ID: I20070222-0951

Steps To Reproduce:
1.Create a method:
    /**
     * Javadoc special character \u00DF.
     */
    public static void main(String[] args) {}
2. Mouseover the word 'main' and wait for the javadoc tooltip.
3. The tooltip shows the literal characters '\u00DF', not the entity represented (the German character ß).

Correct behaviour would be to show the actual character; this is what you see if you run Sun's javadoc tool over the class.

(Comment)
Note that this is not merely a theoretical issue; there are lots of existing instances of this in the java.lang.Character and java.lang.String classes which display incorrectly in Eclipse's javadoc view. For example, according to Eclipse, Character.MAX_VALUE is '\u005CuFFFF'.

(Comment)
My favorite of them is isWhitespace(). Just try to make sense of this and note especially line feed, form feed and carriage return:

Determines if the specified character is white space according to Java. A character is a Java whitespace character if and only if it satisfies one of the following criteria: 
It is a Unicode space character (SPACE_SEPARATOR, LINE_SEPARATOR, or PARAGRAPH_SEPARATOR) but is not also a non-breaking space ('\u005Cu00A0', '\u005Cu2007', '\u005Cu202F'). 
It is '\u005Ct', U+0009 HORIZONTAL TABULATION. 
It is '\u005Cn', U+000A LINE FEED. 
It is '\u005Cu000B', U+000B VERTICAL TABULATION. 
It is '\u005Cf', U+000C FORM FEED. 
It is '\u005Cr', U+000D CARRIAGE RETURN. 
It is '\u005Cu001C', U+001C FILE SEPARATOR. 
It is '\u005Cu001D', U+001D GROUP SEPARATOR. 
It is '\u005Cu001E', U+001E RECORD SEPARATOR. 
It is '\u005Cu001F', U+001F UNIT SEPARATOR.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/743/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/745,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/745,eclipse.jdt.ui,1876984140,745,jdt.ui.tests.refactoring test failures in Y-build,noopur2507,8749449,Noopur Gupta,,CLOSED,2023-09-01T08:26:01Z,2023-09-16T02:11:01Z,"jdt.ui.tests.refactoring has 4 test failures in Y-build from:

org.eclipse.jdt.ui.tests.refactoring.SurroundWithTests16

and 

org.eclipse.jdt.ui.tests.refactoring.UseSupertypeWherePossibleTests16","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/745/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/745,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5leB-B,eclipse.jdt.ui,1702371201,745,NA,noopur2507,8749449,Noopur Gupta,,NA,2023-09-01T08:29:16Z,2023-09-01T08:29:16Z,"Y-build is created are from BETA_JAVA21 branch. 
https://download.eclipse.org/eclipse/downloads/drops4/Y20230831-1000/testResults.php

I am able to reproduce them locally.

@jjohnstn I see these tests were added by you. Can you please take a look? ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5leB-B/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/745,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5leEGu,eclipse.jdt.ui,1702379950,745,NA,noopur2507,8749449,Noopur Gupta,,NA,2023-09-01T08:36:07Z,2023-09-01T08:36:07Z,"Also, following test failure from jdt.ui.tests is reproducible locally:

org.eclipse.jdt.ui.tests.quickfix.CleanUpTest16#testPatternMatchingForInstanceof

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5leEGu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/745,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5leEXp,eclipse.jdt.ui,1702381033,745,NA,noopur2507,8749449,Noopur Gupta,,NA,2023-09-01T08:37:00Z,2023-09-01T08:37:00Z,Other JUnit related test failures in Y-build are passing locally for me.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5leEXp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/745,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ljMCQ,eclipse.jdt.ui,1703723152,745,NA,noopur2507,8749449,Noopur Gupta,,NA,2023-09-02T06:12:52Z,2023-09-02T06:12:52Z,"- https://github.com/eclipse-jdt/eclipse.jdt.core/pull/1316

This could be related.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ljMCQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/745,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mkxf4,eclipse.jdt.ui,1720915960,745,NA,noopur2507,8749449,Noopur Gupta,,NA,2023-09-15T08:52:18Z,2023-09-15T08:52:18Z,"@jjohnstn Would it be possible for you to look at these before Java 21 is released? Or else, I can disable the tests temporarily. 

Latest test results:
https://download.eclipse.org/eclipse/downloads/drops4/Y20230914-1000/testResults.php","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mkxf4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/745,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mm77s,eclipse.jdt.ui,1721482988,745,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-09-15T15:39:21Z,2023-09-15T15:39:21Z,Taking a look using the Y-build.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mm77s/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/746,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/746,eclipse.jdt.ui,1878378314,746,[21] Promote pattern switch and record patterns as standard features in UI,noopur2507,8749449,Noopur Gupta,,CLOSED,2023-09-02T05:55:19Z,2023-09-02T06:02:03Z,Promote pattern switch and record patterns as standard features in UI.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/746/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1152,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1152,eclipse.jdt.ui,2109707766,1152,Override covariant methods,jonbarril,20114096,,,CLOSED,2023-09-03T21:59:56Z,2024-01-31T14:51:07Z,"Add support to generate covariant return of methods. Currently, if you have a lot of methods this is a real pain, even using Source->Override/Implement methods -- lots of cleanup needed.

Perhaps there could be an additional option: Source->Override Covariant Return, or a checkbox on the Override/Implement dialog for Covariant Return. In any case, the selected methods would be overridden with the host class return type, a return cast to the type, and no TODO line.

Thanks
--jon","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1152/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1152,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5yXgAu,eclipse.jdt.ui,1918763054,1152,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-31T09:55:24Z,2024-01-31T09:55:24Z,If you could provide a PR it would be welcome - please reopen. otherwise its unlikey someone else will step in,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5yXgAu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1152,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5yZPPx,eclipse.jdt.ui,1919218673,1152,NA,jonbarril,20114096,,,NA,2024-01-31T14:30:02Z,2024-01-31T14:30:02Z,What is a PR?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5yZPPx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1152,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5yZZsR,eclipse.jdt.ui,1919261457,1152,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-31T14:51:06Z,2024-01-31T14:51:06Z,a Pull request. A code commit that we can change in eclipse IDE to improve it,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5yZZsR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/749,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/749,eclipse.jdt.ui,1881812213,749,Add quick assistance for field rename refactoring,DongChunHao,77560508,DongChunHao,,CLOSED,2023-09-05T11:47:27Z,2023-09-21T23:50:22Z,"- Renaming is one of the most frequently used features in IDEs (like Eclipse). However, we notice that their recommendation of new names during renames could be further improved. Here we present this issue to specify how we can improve the name recommendation for Rename Field refactorings.
- The following code snippet comes the well-known project OpenJDK. Line 44 of jdk/src/java.desktop/share/classes/sun/ java2d /marlin/Dasher.java. In this example, the original developers renamed the field ""recLimit"" to a new name ""REC_LIMIT"" because static and fine fields should follow the well-known ConstantNamingConvention (i.e., capitalizing all characters and connecting words with ‘_’).
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/77560508/80d837db-c4aa-44d9-ac67-f82d3e3126fc)

- A better choice here is to  quickly convert the old name to a new field name that conforms to constant naming conventions. As a generic rule, we propose the following heuristics:

   If (f.modifiers CONTAINS ‘Final’ ) and ( f.modifiers CONTAINS ‘Static’ ) and (f.name NOTFOLLOW ConstantNamingConvention) :
f.newName= Conver2ConstantNamingConvention(f.name)

- When the developers select the field ""recLimit"" and click ""CTRL+1"",  Eclipse will provide Quick Assistance for Converting to Constant Naming Conventions, the developers click ""Convert to Constant Naming Convention"" to automatically convert ""recLimit"" to ""Rec_Limit"". The test case and test results are as follows:
 ![1693913393509](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/77560508/0ea3278d-218a-44db-9252-9f4fcd227c7f)
![1693913416023](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/77560508/da96da44-a960-44d9-a35a-f62fedf61c3c)
- We have validated the heuristic on 10574 field renamings actually conducted by the original developers in open-source applications. In total, the heuristic recommend 1073 names where 922 are exactly the same as what the original developers finally used. That is , the precision is 86%.  We also submit the pull request to resolve this issue. 

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/749/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/754,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/754,eclipse.jdt.ui,1885438467,754,Feature request: Add a new option for breaking long parameter lists,pdolezal,8732998,Petr Doležal,,OPEN,2023-09-07T09:03:12Z,2023-09-07T09:03:12Z,"Currently, it is possible to achieve following easily for long parameter list to be wrapped:
```java
void foo(
    int bar,
    int baz) {
    // Body of the method
}
```

Or with a different indentation:
```java
void foo(
        int bar,
        int baz) {
    // Body of the method
}
```
However, AFAIK, it is not possible to configure the formatter to break lines before closing bracket in long parameter list declarations in such cases. This request proposes an option to allow breaking the line before the closing bracket *when the parameter list is wrapped*:
```
void foo(
    int bar,
    int baz
) {
    // Body of the method
}
```

This style separates the body and the parameter list quite nicely and naturally, which is probably the reason why for instance Rust language sources are formatted in this way (by the official `rustfmt` tool). Note that this option does not have to be restricted to method parameters only. It the case of long generic parameter list it might be useful as well, especially when line length is more restricted and such cases occur more frequently.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/754/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/756,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/756,eclipse.jdt.ui,1885928843,756,Java syntax colors and settings don't save,jonahgraham,679236,Jonah Graham,jonah@kichwacoders.com,OPEN,2023-09-07T13:43:28Z,2024-03-09T22:39:59Z,"_Originally reported in [Bug 486992](https://bugs.eclipse.org/bugs/show_bug.cgi?id=486992) and more recently in https://github.com/eclipse-packaging/packages/issues/54_

When in dark theme (but perhaps other cases too based on comments) when unchecking Bold in `Keywords, excluding 'return'` it's not maintaining the bold font I set.

@valmirserpa kindly made a screen recording in https://github.com/eclipse-packaging/packages/issues/54#issuecomment-1709163594 which I embed here as the original was not necessarily stored in a permanent location:


https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/679236/c7f8d445-6683-409e-b6f2-7df0febc5ab9



","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/756/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/756,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5l75Sb,eclipse.jdt.ui,1710199963,756,NA,jonahgraham,679236,Jonah Graham,jonah@kichwacoders.com,NA,2023-09-07T13:56:31Z,2023-09-07T13:56:31Z,"I assume the issue here is that the CSS for dark theme is overriding the settings in the UI:

https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/933e28615edb2cc306dbd531f76b89167b1d107c/org.eclipse.jdt.ui/css/e4-dark_jdt_syntaxhighlighting.css#L34","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5l75Sb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/756,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5l9Wmj,eclipse.jdt.ui,1710582179,756,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-09-07T18:12:27Z,2023-09-07T18:12:27Z,"Based on your observation, I posted a patch which removed all the bold settings, but there are other settings in that file that a user could also tweak.  I'm wondering if it should just specify colors.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5l9Wmj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/756,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mRqVL,eclipse.jdt.ui,1715905867,756,NA,valmirserpa,110781631,Valmir Conrado Serpa,,NA,2023-09-12T15:05:49Z,2023-09-12T15:05:49Z,"If I understood correctly, or maybe I wasn't clear, I believe the solution is not to remove the ability to make text bold, but to fix and allow the user the possibility to choose whether to use bold text or not. But if that's not possible, I'll understand. Thanks. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mRqVL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/756,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mRsLi,eclipse.jdt.ui,1715913442,756,NA,jonahgraham,679236,Jonah Graham,jonah@kichwacoders.com,NA,2023-09-12T15:10:11Z,2023-09-12T15:10:11Z,"What @jjohnstn's change does is remove the code that *forces* the text to be not-bold on restart. That means also by default the keywords won't change to non-bold when turning on dark mode.

>  I'm wondering if it should just specify colors.

I think so as a workaround - until (unless) the underlying issue of fixing CSS in this case can be resolved so that a user can override the CSS on non-colour attributes. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mRsLi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/756,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mR6Ri,eclipse.jdt.ui,1715971170,756,NA,valmirserpa,110781631,Valmir Conrado Serpa,,NA,2023-09-12T15:39:01Z,2023-09-12T15:39:01Z,"Alright, now I understand what he meant. Thanks!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mR6Ri/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/756,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mUZL8,eclipse.jdt.ui,1716622076,756,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-09-12T22:49:25Z,2023-09-12T22:49:25Z,@jonahgraham @valmirserpa I have revised the patch to remove all non-color settings.  I never use dark theme so wouldn't notice if something was missing.  It seems to work fine but could either of you try it out and comment if there is something you feel should be added back.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mUZL8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/756,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mYCIY,eclipse.jdt.ui,1717576216,756,NA,jonahgraham,679236,Jonah Graham,jonah@kichwacoders.com,NA,2023-09-13T12:55:10Z,2023-09-13T12:55:10Z,@jjohnstn I don't use bold theme as a matter of course - @vogella provided that initial theme so perhaps he is in a better position to comment. ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mYCIY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/756,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mYE7E,eclipse.jdt.ui,1717587652,756,NA,jonahgraham,679236,Jonah Graham,jonah@kichwacoders.com,NA,2023-09-13T13:00:33Z,2023-09-13T13:00:33Z,"> I don't use bold theme as a matter of course

*dark* theme","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mYE7E/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/756,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mYKZg,eclipse.jdt.ui,1717610080,756,NA,valmirserpa,110781631,Valmir Conrado Serpa,,NA,2023-09-13T13:11:50Z,2023-09-13T13:11:50Z,"@jjohnstn I will perform some tests and I will return with the results. Thanks
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mYKZg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/756,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50-QfL,eclipse.jdt.ui,1962477515,756,NA,pbodnar,12137106,Petr Bodnár,,NA,2024-02-24T18:26:38Z,2024-02-24T18:26:38Z,"Hi there,

it's hard for me to believe this issue is actually about 10-years old [todo](https://bugs.eclipse.org/bugs/show_bug.cgi?id=443373#c1) from the CSS / platform team. 😮 If it helps, here are some remarks from my analysis so far:

This problem was firstly reported as [Bug 443373](https://bugs.eclipse.org/bugs/show_bug.cgi?id=443373) and then by 3 more duplicates, including aforementioned [Bug 486992](https://bugs.eclipse.org/bugs/show_bug.cgi?id=486992). From there, we can see it is not just Java syntax settings related, but a broader problem in the Eclipse ecosystem.

Apparently, the cause of the issue lies in the fact that **persisting the user modified settings to the ""*.prefs"" file doesn't work well**:

* it seems to incorrectly remove all _boolean-like_ properties which are specified in the Dark theme's CSS file,
* it seems to work correctly for _color_ properties.

So I guess that either the Dark Theme team does something wrong, or, more probably, there is something wrong in the core, namely in the eclipse-platform/eclipse-platform-ui project.

There are clues that the issue could be related, or even caused by how the ""dynamic and internal"" property ""overriddenByCSS"" is treated in the preferences engine.

Anyway, I wonder if just simply debugging the Eclipse shutdown procedure, while putting a breakpoint say somewhere to the [EclipsePreferencesHelper](https://github.com/eclipse-platform/eclipse.platform.ui/blob/master/bundles/org.eclipse.e4.ui.css.swt/src/org/eclipse/e4/ui/css/swt/helpers/EclipsePreferencesHelper.java) for a start, could lead to finding the culprit. I guess if it would be so simple, some developer would already have done so...?

**WORKAROUND:** Finally, here is what I believe is a workaround for the issue (tested on my PC): If one uses the OOMPH preferences recorder, then all user modified settings from the Syntax Coloring page get successfully re-applied on another Eclipse start, even when they don't get properly persisted to the ""*.prefs"" file (because they are read from another file and recorded there, if not opted-out by the user).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50-QfL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/756,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52bzNy,eclipse.jdt.ui,1986999154,756,NA,pbodnar,12137106,Petr Bodnár,,NA,2024-03-09T22:39:58Z,2024-03-09T22:39:58Z,"Another interesting finding: changes seem to be correctly persisted even for the problematic boolean properties, when the settings get _imported_ (via ""File > Import > Preferences""). So it looks like there must be some trigger which causes the persistence to fail only when editing the settings manually...","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52bzNy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/757,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/757,eclipse.jdt.ui,1885943661,757,Inline produces wrong code when type hint is required,laeubi,1331477,Christoph Läubrich,,OPEN,2023-09-07T13:51:34Z,2023-09-07T13:51:34Z,"This was initially described here:

- https://github.com/eclipse-jdt/eclipse.jdt.core/issues/1342

Use the following code snippet:

```
public Optional<String> inlineme() {
    CompletableFuture<Optional<String>> future = CompletableFuture.completedFuture(Optional.empty());
    return future.join();
}
```

And choose the quickfix to inline `future` variables results in the following code:

```
public Optional<String> inlineme() {
    return CompletableFuture.completedFuture(Optional.empty()).join();
}
```

but this produces a compile error:

> Type mismatch: cannot convert from Optional<Object> to Optional<String>

the correct form would be

```
public Optional<String> inlineme() {
    return CompletableFuture.<Optional<String>> completedFuture(Optional.empty()).join();
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/757/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/758,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/758,eclipse.jdt.ui,1885952632,758,Code that needs a typehint produces not very helpful Quickfixes,laeubi,1331477,Christoph Läubrich,,OPEN,2023-09-07T13:56:28Z,2023-09-07T18:03:13Z,"This was first described here:

- https://github.com/eclipse-jdt/eclipse.jdt.core/issues/1342

Assume we have the following code:

```
public Optional<String> notWorking() {
    return CompletableFuture.completedFuture(Optional.empty()).join();
}
```

what results in an compile error: ""Type mismatch: cannot convert from Optional\<Object> to Optional\<String>""

the first suggestion for a quickfix is to change this to an empty optional:

![grafik](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1331477/cde1e488-e0ff-4d0c-97ab-6df0041fa8a4)

choosing that quickfix results in **the whole code deleted** and replaced with an empty Optional:

```
public Optional<String> notWorking() {
    return Optional.empty();
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/758/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/759,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/759,eclipse.jdt.ui,1885994724,759,Optional requiring a cast yields strange quickfixes,laeubi,1331477,Christoph Läubrich,,OPEN,2023-09-07T14:15:42Z,2023-09-08T04:18:32Z,"Assume the following code

```
public <T> T hmmmm(Callable<?> callme) throws Exception {
     return callme.call();
}
```

JDT offers me to cast the type to `T`:

![grafik](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1331477/f93347c0-c177-4594-8a7d-94dda93d0eec)

but as soon as this is wrapped in an `Optional` call this does not work anymore:

![grafik](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1331477/793e7190-1025-4010-9c60-a81e27398c2e)


Choosing then first or second quickfix simply wraps the optional but does not resolve the compile error

```
public <T> Optional<T> hmmmm(Callable<?> callme) {
	try {
		return Optional.ofNullable(Optional.of(callme.call()));
	} catch(Exception e) {
		return Optional.empty();
	}
}
```

Choosing the third option simply deletes all code an replace it with empty optional:

```
public <T> Optional<T> hmmmm(Callable<?> callme) {
	try {
		return Optional.empty();
	} catch(Exception e) {
		return Optional.empty();
	}
}
```

Choosing the last option cast the optional instead of the argument:

```
public <T> Optional<T> hmmmm(Callable<?> callme) {
	try {
		return (Optional<T>)Optional.of(callme.call());
	} catch(Exception e) {
		return Optional.empty();
	}
}
```


Instead something like this is desired:
```
public <T> Optional<T> hmmmm(Callable<?> callme) {

	try {
		return Optional.of((T)callme.call());
	} catch(Exception e) {
		return Optional.empty();
	}
}
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/759/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/759,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5l9XW4,eclipse.jdt.ui,1710585272,759,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2023-09-07T18:15:20Z,2023-09-07T18:15:20Z,"> Choosing the last option cast the optional instead of the argument:

Technically, the compile error affects the entire optional expression, which resolves to `Optional<captureof ?>`. Since this is not compatible to the return type `Optional<T>` it is the canonical solution to add the cast to the outer expression.

It requires extra knowledge to see that an inner cast would change the inferred type of that expression in the desired way. The algorithm to employ would be akin to reverse type inference (""assuming type inference would produce type X, what input would that algorithm need to come to that conclusion?"" - if inference is a hard nut, that's one magnitude harder, even).

Should JDT suppress the cast proposal, if it is not what the user needs? How would we recognize this situation where it's not helpful?

Or are you asking for special case proposals, that are geared only at improving the workflow wrt `Optional`?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5l9XW4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/759,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5l_G-u,eclipse.jdt.ui,1711042478,759,NA,laeubi,1331477,Christoph Läubrich,,NA,2023-09-08T04:02:21Z,2023-09-08T04:02:21Z,"For me it seems there are already special handling for optionals (even though I can't imagine when it is useful to delete the whole code and replace it with Optional.empty()), but the problem can be reproduced with other similar cases as well I think in general it is the following pattern:

1. I have a ""target type"" that could either be explicit (eg `String x = ... `) or implicit (eg like here `return ...` ) of course could also be generic.
2. I have some ""dynamic"" return type that is generic and this return type is deduced by one or more of the parameters of the function, e.g. `List.of(...)`, `Optional.of(...)`, `public <T> T whatever(Function<String, T> converter, String paramX)`, ... where the type is automatically inferred
3. Now the item that influences the value is wrong, needs a cast or itself depends on another dynamic type inference and everything goes bad

Of course my example here are simplified to the absolute minimum I can think of, but it can really drive you crazy in a larger expression as it often falls into two categories:

- JDT complains ""can't apply (large parameter list) to (large parameter list)""
- JDT complains about the return type

in both cases this usually marks the whole expression, that could span multiple lines and many function calls as errornours, autocompletion is completely disabled and most of the time quickfixes do either not work or do strange stuff.

In the end the user either happily ""see"" the missing pice or has to extract everything into local variables, convert lamdas to anonymous classes and so on to see what is really going on.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5l_G-u/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/759,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5l_JSJ,eclipse.jdt.ui,1711051913,759,NA,laeubi,1331477,Christoph Läubrich,,NA,2023-09-08T04:18:32Z,2023-09-08T04:18:32Z,"@stephan-herrmann I described another maybe related problem here:

- https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/764

even though JDT seem to know that a `Supplier< ..>` is required and its lamda variant has to return a value (even though it thinks its of type `U`) I get some kind of not helpful quickfixes that can even produce more errors.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5l_JSJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/760,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/760,eclipse.jdt.ui,1885999398,760,Revert apply of a Quick-Fix jumps to the top of the java sourcefile,laeubi,1331477,Christoph Läubrich,,OPEN,2023-09-07T14:18:22Z,2023-09-07T14:18:22Z,"While preparing examples for some bugreports I noticed the following anointing behavior:

1. Have some code that needs scrolling
2. create a new method at the bottom
3. paste some code that can be quick-fixed (e.g. https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/759)
4. Apply a quickfix
5. press STRG + Z to revert the quick-fix
6. Cursor jumps to the top of the file","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/760/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/762,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/762,eclipse.jdt.ui,1886030212,762,Static interface methods are not offered inside a lamda,laeubi,1331477,Christoph Läubrich,,OPEN,2023-09-07T14:35:54Z,2023-09-07T14:35:54Z,"Assume the following code:

```
public void nocomplete() {
    List<String> list = new ArrayList<>();
    CompletableFuture.runAsync(() -> {
	list.stream().forEach(str -> {
		List. <---cursor here
		System.out.println(str);
	});
    });
}
```
results in the following auto completion:

![grafik](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1331477/f0b674fe-4b09-4419-9bb3-7826f33307bf)

adding a `;` at the end make the thing work:

```
public void nocomplete() {
    List<String> list = new ArrayList<>();
    CompletableFuture.runAsync(() -> {
	list.stream().forEach(str -> {
		List. <---cursor here--> ;
		System.out.println(str);
	});
    });
}
```

![grafik](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1331477/986d0e7f-729c-4f4b-8e48-0bf44ed273c5)

in contrast for local variables it works without adding an extra `;` at the end:
![grafik](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1331477/0e0160e8-07ea-4323-82ff-32410c132996)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/762/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/764,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/764,eclipse.jdt.ui,1886905171,764,Missing return in lamdas confuses JDT,laeubi,1331477,Christoph Läubrich,,OPEN,2023-09-08T04:16:08Z,2024-06-20T11:46:44Z,"This is similar to a problem described already here:
- https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/759

Assume the following code:

```
CompletableFuture.supplyAsync(()->{
	
});
```

This results in these quick fixes:

![grafik](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1331477/9be17021-d7f2-46e5-98ac-5d165b604b43)

of course neither of those produce any useful results, the first results in

```
CompletableFuture.supplyAsync((Supplier<U>)()->{

});
```

the second (now with the same error):
```
CompletableFuture.thenApplyAsync(()->{
	
});
```

if one instead performs the refactoring ""Convert to anonymous class creation"", 

![grafik](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1331477/59ec1d0d-d199-4385-aa5f-02788256e7c3)

the problem becomes a bit more clear:

```
CompletableFuture.supplyAsync(new Supplier<U>() {
	@Override
	public U get() {
		
	}
});
```

even though `U` is not really a valid choice, so we replace `U` with `Object`:

```
CompletableFuture.supplyAsync(new Supplier<>() {

	@Override
	public Object get() {
		
	}
});
```
Finally we got what we would like have seen in the first place, **adding the missing return statement!**

![grafik](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1331477/c85eb5c0-3262-4840-9863-f2890ac3bd39)

Now one can choose to ""convert to lamda expression"" refactoring to get to a working state again...
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/764/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/764,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Bb73U,eclipse.jdt.ui,2171583956,764,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-06-16T13:13:20Z,2024-06-16T13:13:20Z,"This is a complex problem.

The error message is:
> The method supplyAsync(Supplier<U>) in the type CompletableFuture is not applicable for the arguments (() -> {})

IOW, type inference failed.

I'm not aware of any practical algorithm that could propose solutions for a failed type inference.

Hence, quickfixes would need to be implemented individually for very specific problem patterns.

I'm not even sure JDT/Core provides sufficient information that JDT/UI could readily use to recognize such patterns. Internally in the compiler we have a flag `LambdaExpression.valueCompatible=false` which signals that the lambda is *structurally* incompatible with a function type `T get()`. But this information is not available for clients. 

OTOH, perhaps JDT/UI already has some suitable analysis functions to compute the same information.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Bb73U/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/764,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6BcQSL,eclipse.jdt.ui,2171667595,764,NA,laeubi,1331477,Christoph Läubrich,,NA,2024-06-16T13:51:19Z,2024-06-16T13:51:19Z,"> This is a complex problem.

That's for sure :-)

> I'm not aware of any practical algorithm that could propose solutions for a failed type inference.

I'm far from understanding how the compiler works, that's why I have given the example how one could ""manually"" reveal the real cause and I often wonder if the compiler can do something similar (or JDT UI, or ...) in almost all cases where I get hard to understand errors and confusing if not wrong suggestions the problem can be found by looking at the ""outer"" construct and convert the lamda to an anonymous class and then I get useful suggestions. So *somewhere* in JDT there is some magic already that can solve the problem.

> I'm not even sure JDT/Core provides sufficient information that JDT/UI could readily use to recognize such patterns. 

Again maybe this is to simple minded from my side, but if I look at the lamda alone I see something that has a `void` return type. This ""something"" is tried to be applied to a method that only accept something that _returns a value_ (even though we can't infer the exact type) so at least it looks like that one can know that `something unknown` != `void` and that a return statement is missing.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6BcQSL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/764,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6BcSJZ,eclipse.jdt.ui,2171675225,764,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-06-16T13:59:10Z,2024-06-16T13:59:10Z,"> if I look at the lamda alone I see something that has a `void` return type.

How do you see that? I don't see the word `void` in the code.

Mind you, we certainly want the same effect regardless of a whether the lambda body is empty or contains arbitrarily complex code. The quickfix would need to re-implement what we call lambda shape analysis.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6BcSJZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/764,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6BcTdb,eclipse.jdt.ui,2171680603,764,NA,laeubi,1331477,Christoph Läubrich,,NA,2024-06-16T14:11:29Z,2024-06-16T14:11:29Z,"> How do you see that? I don't see the word void in the code.

I don't see any `return` either, as said I'm not an compiler expert but for me (as a programmer) a lamda that do not contain a return value has a result of `void`? 
And even JDT/Compiler seem to know that somehow:
![grafik](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1331477/efcd2c70-6297-4c61-8439-280034afa3e8)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6BcTdb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/764,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6BcUIs,eclipse.jdt.ui,2171683372,764,NA,laeubi,1331477,Christoph Läubrich,,NA,2024-06-16T14:15:57Z,2024-06-16T14:15:57Z,"So this code JDT knows that return is missing:

```
Supplier<?> x = () -> {
		};
CompletableFuture<?> async = CompletableFuture.supplyAsync(x);
```

![grafik](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1331477/3b6ca67b-e9fd-4f84-92ad-f66306c1dd28)

If I inline that it does not:

```
CompletableFuture<?> async = CompletableFuture.supplyAsync(() -> {
});
```

![grafik](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1331477/2f4ff304-d05f-43c8-b29e-10778bd37257)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6BcUIs/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/764,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6B9tLK,eclipse.jdt.ui,2180436682,764,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-06-20T11:23:31Z,2024-06-20T11:23:31Z,"> So this code JDT knows that return is missing:
> 
> ```
> Supplier<?> x = () -> {
> 		};
> ```

That's interesting, but unfortunately it doesn't help. The error on `supplyAsync` is reported during type inference, because the lambda (syntactically legal) does not allow type inference to find a solution. This is compile phase ""resolution"".

The lambda assigned to `x` does not involve type inference, and so we proceed to phase ""analyse"" (flow analysis), which detects the missing return value (a per code-branch analysis). Since `supplyAsync` already failed the ""resolution"" phase, we never even start flow analysis here.

All this only says: the information provided by the compiler differs per use case and hence in the unlucky case, JDT/UI would have to do its own analysis of the problem, in order to provide a more helpful quickfix.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6B9tLK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/764,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6B920z,eclipse.jdt.ui,2180476211,764,NA,laeubi,1331477,Christoph Läubrich,,NA,2024-06-20T11:46:43Z,2024-06-20T11:46:43Z,">  JDT/UI would have to do its own analysis of the problem, in order to provide a more helpful quickfix.

Do you think you can derive an issue for  JDT/UI (maybe reference this one) what ""additionally"" needs to be done, I sadly can only judge from user-perspective and not sure I can describe it accurately.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6B920z/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/765,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/765,eclipse.jdt.ui,1888092156,765,"""Add type arguments to 'var'"" quickfix leads to invalid code",Madjosz,28844868,,,CLOSED,2023-09-08T13:36:49Z,2023-09-12T07:40:18Z,"After fixing eclipse-jdt/eclipse.jdt.core#600 the quick fix which lead me into this syntax construct is still present. Consider the following code
```java
class MWE {
  void f() {
    var list = T.forClass(List.class);
    doSomethingWith(list.get()); // (1)
  }
  void doSomethingWith(List<Object> list) {}
  class T<A> {
    static <O> T<O> forClass(Class<O> clazz) { return null; }
    A get() { return null; }
  }
```
On (1) now we get the warning
`Type safety: The expression of type List needs unchecked conversion to conform to List<Object>`
together with a quick fix
`Add type arguments to 'var'`
and executing that quick fix results in the following code:
```java
var<List> list = T.forClass(List.class);
```
which is invalid according to JLS and gives the error
`'var' cannot be used with type arguments`

Furthermore (though that might be a separate issue) the following code and also the above code
```java
var list = new ArrayList();
h(list);
```
provide the quick fix
`Infer Generic Type Arguments...`
which when executed results in the code
```java
var<Object> list = new ArrayList<Object>();
```
which is also invalid.

**Tested with**
Eclipse SDK
Version: 2023-12 (4.30)
Build id: I20230907-1800

openjdk version ""20.0.1"" 2023-04-18
OpenJDK Runtime Environment Temurin-20.0.1+9 (build 20.0.1+9)
OpenJDK 64-Bit Server VM Temurin-20.0.1+9 (build 20.0.1+9, mixed mode, sharing)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/765/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/765,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mC3dZ,eclipse.jdt.ui,1712027481,765,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-09-08T17:48:56Z,2023-09-08T17:48:56Z,The quick fix should not be offered.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mC3dZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/765,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mO2aQ,eclipse.jdt.ui,1715168912,765,NA,Madjosz,28844868,,,NA,2023-09-12T07:40:18Z,2023-09-12T07:40:18Z,Confirmed fixed and working in I20230911-1800.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mO2aQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/767,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/767,eclipse.jdt.ui,1889739011,767,IllegalArgumentException in CleanUpTabPage,jukzi,51790620,Jörg Kubitz,,OPEN,2023-09-11T06:11:30Z,2024-01-18T10:42:48Z,"I disabled all cleanups (before adding a single one)
```
java.lang.IllegalArgumentException: 
	at org.eclipse.core.runtime.Assert.isLegal(Assert.java:66)
	at org.eclipse.core.runtime.Assert.isLegal(Assert.java:50)
	at org.eclipse.jdt.internal.ui.preferences.cleanup.CleanUpTabPage.setSelectedCleanUpCount(CleanUpTabPage.java:89)
	at org.eclipse.jdt.internal.ui.preferences.cleanup.CleanUpTabPage.lambda$3(CleanUpTabPage.java:206)
	at java.base/java.util.Observable.notifyObservers(Observable.java:173)
	at java.base/java.util.Observable.notifyObservers(Observable.java:129)
	at org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$ButtonPreference.checkboxChecked(ModifyDialogTabPage.java:195)
	at org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$ButtonPreference.setChecked(ModifyDialogTabPage.java:218)
	at org.eclipse.jdt.internal.ui.preferences.cleanup.CleanUpTabPage.doSetAll(CleanUpTabPage.java:130)
	at org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage.lambda$2(ModifyDialogTabPage.java:906)
	at org.eclipse.swt.events.SelectionListener$1.widgetSelected(SelectionListener.java:84)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4274)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4072)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3660)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.jdt.internal.ui.fix.CleanUpRefactoringWizard$CleanUpConfigurationPage$2.widgetSelected(CleanUpRefactoringWizard.java:365)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4274)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4072)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3660)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.lambda$0(RefactoringWizardOpenOperation.java:190)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:209)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:126)
	at org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:41)
	at org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter.startCleanupRefactoring(RefactoringExecutionStarter.java:257)
	at org.eclipse.jdt.internal.ui.actions.AllCleanUpsAction.performRefactoring(AllCleanUpsAction.java:71)
	at org.eclipse.jdt.internal.ui.actions.CleanUpAction.runOnMultiple(CleanUpAction.java:215)
	at org.eclipse.jdt.internal.ui.actions.CleanUpAction.run(CleanUpAction.java:119)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:274)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:252)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.ui.actions.RetargetAction.runWithEvent(RetargetAction.java:225)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:223)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4274)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4072)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3660)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:645)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:552)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/767/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/767,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nfiub,eclipse.jdt.ui,1736321947,767,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-09-26T21:22:42Z,2023-09-26T21:22:42Z,Fixed by your PR #807,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nfiub/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/767,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5roeF_,eclipse.jdt.ui,1805771135,767,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-11-10T13:53:51Z,2023-11-10T13:53:51Z,still happens,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5roeF_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/767,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xJK-s,eclipse.jdt.ui,1898229676,767,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-18T10:42:47Z,2024-01-18T10:42:47Z,"still happens, when i try to use ""custom profile""  and ""Deselect All"" in all tabs from left to right, but only the first time i do so.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xJK-s/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/769,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/769,eclipse.jdt.ui,1890673852,769,"Refactoring issue ""Add final modifier to private fields"" on lambdas",jukzi,51790620,Jörg Kubitz,,CLOSED,2023-09-11T14:41:27Z,2023-10-11T20:38:37Z,"""Add final modifier to private fields"" on org.eclipse.core.internal.databinding.observable.MapEntryObservableValue leads to compile error `The blank final field key may not have been initialized`.

Automated refactoring should not lead into compile time error
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/5788f55c-1e48-4bfa-83cd-b024048c877c)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/769/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/769,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mKjdJ,eclipse.jdt.ui,1714042697,769,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-09-11T14:48:10Z,2023-09-11T14:48:10Z,another example:  org.eclipse.jface.viewers.deferred.ConcurrentTableUpdator.uiRunnable - always lambdas involved.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mKjdJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/769,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nvjdK,eclipse.jdt.ui,1740519242,769,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-09-29T08:37:11Z,2023-09-29T08:37:11Z,"@jjohnstn  still happens with 	org.eclipse.jdt.ui 3.31.0.v20230926-0702	
on org.eclipse.core.internal.databinding.observable.MapEntryObservableValue
another example:
 org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/703c43b4-992d-49e2-9b63-612d0334fe17)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nvjdK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/769,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5o0JnW,eclipse.jdt.ui,1758501334,769,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-10-11T20:38:37Z,2023-10-11T20:38:37Z,"@jukzi The TypeInfoViewer failure had to do with a constructor using a lambda and writing to the field in question after the lambda references the field.  If you find another scenario, please open a separate issue.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5o0JnW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/770,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/770,eclipse.jdt.ui,1891381389,770,Ignore spelling in Java string literals should also apply to text blocks,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2023-09-11T22:45:33Z,2023-09-14T14:53:37Z,"Currently the following two strings have different markers when spell checking is enabled and ignore Java string literals is specified:

From #707

In the current Eclipse IDE 2023‑06 Java code editor
with spell checking enabled and option ""Ignore Java string literals"" ticked I get:

```
String jdbcString = ""jdbc""; // spelling ignored

String jdbcBlock = """"""
    jdbc"""""";                // tagged as misspelled

```

Both strings should ignore spelling.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/770/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/770,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mfzwk,eclipse.jdt.ui,1719614500,770,NA,,,,,NA,2023-09-14T14:53:36Z,2023-09-14T14:53:36Z,"Perfect.
Much appreciated.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mfzwk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/773,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/773,eclipse.jdt.ui,1891919774,773,Cannot open Java editor with I20230911-1800,noopur2507,8749449,Noopur Gupta,,CLOSED,2023-09-12T08:07:21Z,2023-09-14T07:22:54Z,"In I20230911-1800, trying to open any Java editor is giving this exception:

Editor could not be initialized.

`java.lang.IllegalStateException: beginTask must only be called once per instance
	at org.eclipse.jface.action.StatusLineManager$1.beginTask(StatusLineManager.java:157)
	at org.eclipse.core.runtime.SubMonitor.convert(SubMonitor.java:483)
	at org.eclipse.core.runtime.SubMonitor.convert(SubMonitor.java:428)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:731)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.becomeWorkingCopy(CompilationUnit.java:98)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.createFileInfo(CompilationUnitDocumentProvider.java:1015)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.connect(TextFileDocumentProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.connect(CompilationUnitDocumentProvider.java:1260)
	at org.eclipse.ui.texteditor.AbstractTextEditor.doSetInput(AbstractTextEditor.java:4177)
	at org.eclipse.ui.texteditor.StatusTextEditor.doSetInput(StatusTextEditor.java:262)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.doSetInput(AbstractDecoratedTextEditor.java:1474)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.internalDoSetInput(JavaEditor.java:2556)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.doSetInput(JavaEditor.java:2529)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSetInput(CompilationUnitEditor.java:1415)
	at org.eclipse.ui.texteditor.AbstractTextEditor.lambda$1(AbstractTextEditor.java:3167)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.ui.internal.WorkbenchWindow.lambda$7(WorkbenchWindow.java:2346)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2344)
	at org.eclipse.ui.texteditor.AbstractTextEditor.internalInit(AbstractTextEditor.java:3184)
	at org.eclipse.ui.texteditor.AbstractTextEditor.init(AbstractTextEditor.java:3209)
	at org.eclipse.ui.internal.EditorReference.initialize(EditorReference.java:353)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.create(CompatibilityPart.java:344)
...
`","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/773/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/773,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mPBsG,eclipse.jdt.ui,1715215110,773,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-09-12T08:08:40Z,2023-09-12T08:08:40Z,Regression from https://github.com/eclipse-platform/eclipse.platform.ui/pull/1077,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mPBsG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/773,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mPDS4,eclipse.jdt.ui,1715221688,773,NA,noopur2507,8749449,Noopur Gupta,,NA,2023-09-12T08:12:43Z,2023-09-12T08:12:43Z,"@MohananRahul 
[I20230911-1800](https://download.eclipse.org/eclipse/downloads/drops4/I20230911-1800/) should be marked as unstable as the build is not usable due to this regression.

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mPDS4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/773,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mdF69,eclipse.jdt.ui,1718902461,773,NA,noopur2507,8749449,Noopur Gupta,,NA,2023-09-14T07:22:47Z,2023-09-14T07:22:47Z,Editors are opening in I20230913-1800.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mdF69/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/774,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/774,eclipse.jdt.ui,1892132202,774,"""Infer Generic Type Arguments..."" with var leads to invalid code",Madjosz,28844868,,,CLOSED,2023-09-12T09:57:15Z,2023-10-18T11:12:30Z,"After fixing eclipse-jdt/eclipse.jdt.core#600 and already mentioned in #765 the quick fix ""Infer Generic Type Arguments..."" will produce invalid code when executed on a variable which was declared with `var`. Consider the following code
```java
package test1;
import java.util.List;
import java.util.ArrayList;

class E1 {
    void f() {
        var list = new ArrayList(); // (1)
        doSomethingWith(list);      // (2)
    }
    void doSomethingWith(List<Object> list) {}
}
```
We get the following warnings:
* `ArrayList` in (1): `ArrayList is a raw type. References to generic type ArrayList<E> should be parameterized`
* `list` in (2): `Type safety: The expression of type ArrayList needs unchecked conversion to conform to List<Object>`
and it offers the quick fix ""Infer Generic Type Arguments..."" which when executed results in the following code
```java
var<Object> list = new ArrayList<Object>();
```
which is invalid according to JLS and gives the error
`'var' cannot be used with type arguments`

On the other hand the provided quick fix on `ArrayList` ""Add type arguments to 'ArrayList'"" correctly changes to
```java
var list = new ArrayList<Object>();
```
but this is likely due to having only the `ArrayList` itself as target.

Without line (2) the quick fix ""Infer Generic Type Arguments..."" even does nothing.

While we are at it: Is there a special reason why this quickfix doesn't use the diamond operator on the RHS instead of duplicating the generics?

**Tested with**
Eclipse SDK
Version: 2023-12 (4.30)
Build id: I20230911-1800

openjdk version ""20.0.2"" 2023-07-18
OpenJDK Runtime Environment Temurin-20.0.2+9 (build 20.0.2+9)
OpenJDK 64-Bit Server VM Temurin-20.0.2+9 (build 20.0.2+9, mixed mode, sharing)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/774/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/774,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nfhUB,eclipse.jdt.ui,1736316161,774,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-09-26T21:19:08Z,2023-09-26T21:19:08Z,This was fixed via #766,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nfhUB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/774,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5njHix,eclipse.jdt.ui,1737259185,774,NA,Madjosz,28844868,,,NA,2023-09-27T12:03:51Z,2023-09-27T12:03:51Z,"No, this bug is not fixed. #765 was about `org.eclipse.jdt.internal.corext.fix.Java50FixCore`; this issue is about `org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring`.
Problem is still present in latest Eclipse SDK Version: 2023-12 (4.30), Build id: I20230926-1800","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5njHix/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/774,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5pZQKM,eclipse.jdt.ui,1768227468,774,NA,Madjosz,28844868,,,NA,2023-10-18T11:12:29Z,2023-10-18T11:12:29Z,"Confirmed works in 2023-12 (4.30), build id: I20231018-0110
Thank you for your efforts!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5pZQKM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/779,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/779,eclipse.jdt.ui,1893832254,779,TextBlock Clean Up: NPE in StringConcatToTextBlockFix,jukzi,51790620,Jörg Kubitz,,CLOSED,2023-09-13T06:26:36Z,2023-09-15T21:16:57Z,"i tried ""Convert String/StringBuffer/StringBuilder concatenation to Text Block"" on Eclipse platform workspace =>
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/0d8ea86a-4d39-452d-9f01-63328139841d)


```
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:395)
	at org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:1038)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizard.createChange(RefactoringWizard.java:662)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizard.computeUserInputSuccessorPage(RefactoringWizard.java:504)
	at org.eclipse.ltk.ui.refactoring.UserInputWizardPage.computeSuccessorPage(UserInputWizardPage.java:77)
	at org.eclipse.ltk.ui.refactoring.UserInputWizardPage.getNextPage(UserInputWizardPage.java:113)
	at org.eclipse.jdt.internal.ui.fix.CleanUpRefactoringWizard$CleanUpConfigurationPage.getNextPage(CleanUpRefactoringWizard.java:437)
	at org.eclipse.jface.wizard.WizardDialog.nextPressed(WizardDialog.java:915)
	at org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:469)
	at org.eclipse.jface.dialogs.Dialog.lambda$0(Dialog.java:619)
	at org.eclipse.swt.events.SelectionListener$1.widgetSelected(SelectionListener.java:84)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4274)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4072)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3660)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.lambda$0(RefactoringWizardOpenOperation.java:190)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:209)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:126)
	at org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:41)
	at org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter.startCleanupRefactoring(RefactoringExecutionStarter.java:257)
	at org.eclipse.jdt.internal.ui.actions.AllCleanUpsAction.performRefactoring(AllCleanUpsAction.java:71)
	at org.eclipse.jdt.internal.ui.actions.CleanUpAction.runOnMultiple(CleanUpAction.java:215)
	at org.eclipse.jdt.internal.ui.actions.CleanUpAction.run(CleanUpAction.java:119)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:274)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:252)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.ui.actions.RetargetAction.runWithEvent(RetargetAction.java:225)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:223)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4274)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4072)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3660)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:645)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:552)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)
Caused by: java.lang.NullPointerException: Cannot invoke ""org.eclipse.jdt.core.dom.Statement.getStartPosition()"" because ""stmt"" is null
	at org.eclipse.jdt.internal.corext.fix.StringConcatToTextBlockFixCore$ChangeStringConcatToTextBlock.rewriteAST(StringConcatToTextBlockFixCore.java:295)
	at org.eclipse.jdt.internal.corext.fix.CompilationUnitRewriteOperationsFixCore.createChange(CompilationUnitRewriteOperationsFixCore.java:98)
	at org.eclipse.jdt.internal.ui.fix.CleanUpFixWrapper.createChange(CleanUpFixWrapper.java:46)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.calculateChange(CleanUpRefactoring.java:775)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor.calculateSolutions(CleanUpRefactoring.java:301)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor.acceptAST(CleanUpRefactoring.java:279)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1008)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:692)
	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:954)
	at org.eclipse.jdt.internal.corext.dom.ASTBatchParser.createASTs(ASTBatchParser.java:82)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpFixpointIterator.next(CleanUpRefactoring.java:399)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.cleanUpProject(CleanUpRefactoring.java:682)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.checkFinalConditions(CleanUpRefactoring.java:642)
	at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:86)
	at org.eclipse.ltk.core.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:122)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2453)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2478)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:89)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/779/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/780,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/780,eclipse.jdt.ui,1893874527,780,Pattern matching Clean Up: compilation error if import not used,jukzi,51790620,Jörg Kubitz,,CLOSED,2023-09-13T06:58:37Z,2023-10-03T00:02:00Z,"I tried ""Use pattern matching for instanceof"" on Platform workspace and it ended up in compilation error on
`org.eclipse.pde.api.tools.ui.internal.actions.TreeViewerNavigator`
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/ee165046-aa63-478e-b42c-65ea066e6283)

`The import org.eclipse.pde.api.tools.ui.internal.actions.DeltaSession.TreeNode is never used`


A Clean Up should not produce code with compilation Errors. i.e. the import statement should have been automatically removed.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/780/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/783,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/783,eclipse.jdt.ui,1895947624,783,[21][quick fix] Provide quick fix to add default case for exhaustive enhanced switch statement,noopur2507,8749449,Noopur Gupta,,CLOSED,2023-09-14T07:46:53Z,2024-02-27T15:24:35Z,"`package pkg;

public class Snippet {
	
	int m1(R<X> c) {
		return switch (c) { // [1]
		case R<X>(X x, Y y) -> 1;
		case R<X>(Y y, X x) -> 2;
		
		};
	}
}

class X {}
class Y extends X {}
record R<T> (T x, T y) {}`

[1] has an error: An enhanced switch statement should be exhaustive; a default label expected

A quick fix should be provided to add the missing default case.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/783/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/783,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM51OyBQ,eclipse.jdt.ui,1966809168,783,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-02-27T15:24:34Z,2024-02-27T15:24:34Z,"> Documenting [eclipse-jdt/eclipse.jdt.ui#783](https://github.com/stephan-herrmann/eclipse.platform.releng.aggregator/commit/b9ccb9adfbeac971cd1fee18941c3a83bddb0602) 

wrong reference, sorry.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM51OyBQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/784,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/784,eclipse.jdt.ui,1895951781,784,click LaunchBar's edit button in the toolbars to open the junit testcase show an error dialog,MrLiuzy,17588331,Liuzy,,CLOSED,2023-09-14T07:48:28Z,2023-09-15T01:12:48Z,"The LaunchBar's edit button cannot open a junit launch configuration dialog, but can open the Java Application and Maven launch configuartion dialog. Error Log record some errors.

version: eclipse-jee-2023-09-R-win32-x86_64
os: windows11

```
null
org.eclipse.ui
Error
Thu Sep 14 15:37:03 CST 2023
Unhandled event loop exception

java.lang.NullPointerException: Cannot invoke ""org.eclipse.swt.widgets.Button.setEnabled(boolean)"" because the return value of ""org.eclipse.launchbar.ui.internal.LaunchBarLaunchConfigDialog.getButton(int)"" is null
	at org.eclipse.launchbar.ui.internal.LaunchBarLaunchConfigDialog.run(LaunchBarLaunchConfigDialog.java:332)
	at org.eclipse.jdt.internal.junit.util.TestSearchEngine.findTestMethods(TestSearchEngine.java:77)
	at org.eclipse.jdt.junit.launcher.JUnitLaunchConfigurationTab.calculateMethodsCache(JUnitLaunchConfigurationTab.java:802)
	at org.eclipse.jdt.junit.launcher.JUnitLaunchConfigurationTab.initializeFrom(JUnitLaunchConfigurationTab.java:490)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTabGroup.initializeFrom(AbstractLaunchConfigurationTabGroup.java:93)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupWrapper.initializeFrom(LaunchConfigurationTabGroupWrapper.java:182)
	at org.eclipse.launchbar.ui.internal.LaunchBarLaunchConfigDialog.createDialogArea(LaunchBarLaunchConfigDialog.java:191)
	at org.eclipse.jface.dialogs.TitleAreaDialog.createContents(TitleAreaDialog.java:166)
	at org.eclipse.jface.window.Window.create(Window.java:431)
	at org.eclipse.jface.dialogs.Dialog.create(Dialog.java:1094)
	at org.eclipse.jface.window.Window.open(Window.java:788)
	at org.eclipse.launchbar.ui.internal.LaunchBarUIManager.openConfigurationEditor(LaunchBarUIManager.java:134)
	at org.eclipse.launchbar.ui.controls.internal.ConfigSelector.handleEdit(ConfigSelector.java:156)
	at org.eclipse.launchbar.ui.controls.internal.CSelector$5.lambda$0(CSelector.java:265)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4047)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3663)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:645)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:552)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)


```
```
null
org.eclipse.jface
Error
Thu Sep 14 15:37:03 CST 2023
Problems occurred when invoking code from plug-in: ""org.eclipse.jface"".

java.lang.NullPointerException: Cannot invoke ""org.eclipse.swt.widgets.Button.setEnabled(boolean)"" because the return value of ""org.eclipse.launchbar.ui.internal.LaunchBarLaunchConfigDialog.getButton(int)"" is null
	at org.eclipse.launchbar.ui.internal.LaunchBarLaunchConfigDialog.run(LaunchBarLaunchConfigDialog.java:332)
	at org.eclipse.jdt.internal.junit.util.TestSearchEngine.findTestMethods(TestSearchEngine.java:77)
	at org.eclipse.jdt.junit.launcher.JUnitLaunchConfigurationTab.calculateMethodsCache(JUnitLaunchConfigurationTab.java:802)
	at org.eclipse.jdt.junit.launcher.JUnitLaunchConfigurationTab.lambda$0(JUnitLaunchConfigurationTab.java:269)
	at org.eclipse.jface.viewers.Viewer$1.run(Viewer.java:159)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:156)
	at org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:2143)
	at org.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:1675)
	at org.eclipse.jface.viewers.Viewer.setSelection(Viewer.java:384)
	at org.eclipse.jdt.junit.launcher.JUnitLaunchConfigurationTab.updateTestLoaderFromConfig(JUnitLaunchConfigurationTab.java:507)
	at org.eclipse.jdt.junit.launcher.JUnitLaunchConfigurationTab.initializeFrom(JUnitLaunchConfigurationTab.java:488)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTabGroup.initializeFrom(AbstractLaunchConfigurationTabGroup.java:93)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupWrapper.initializeFrom(LaunchConfigurationTabGroupWrapper.java:182)
	at org.eclipse.launchbar.ui.internal.LaunchBarLaunchConfigDialog.createDialogArea(LaunchBarLaunchConfigDialog.java:191)
	at org.eclipse.jface.dialogs.TitleAreaDialog.createContents(TitleAreaDialog.java:166)
	at org.eclipse.jface.window.Window.create(Window.java:431)
	at org.eclipse.jface.dialogs.Dialog.create(Dialog.java:1094)
	at org.eclipse.jface.window.Window.open(Window.java:788)
	at org.eclipse.launchbar.ui.internal.LaunchBarUIManager.openConfigurationEditor(LaunchBarUIManager.java:134)
	at org.eclipse.launchbar.ui.controls.internal.ConfigSelector.handleEdit(ConfigSelector.java:156)
	at org.eclipse.launchbar.ui.controls.internal.CSelector$5.lambda$0(CSelector.java:265)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4047)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3663)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:645)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:552)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/784/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/784,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mdjFy,eclipse.jdt.ui,1719021938,784,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2023-09-14T08:44:19Z,2023-09-14T08:44:19Z,Launchbar comes from https://github.com/eclipse-cdt/cdt so please report there.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mdjFy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/784,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5minI8,eclipse.jdt.ui,1720349244,784,NA,MrLiuzy,17588331,Liuzy,,NA,2023-09-15T01:12:48Z,2023-09-15T01:12:48Z,reported [https://github.com/eclipse-cdt/cdt/issues/555](url),"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5minI8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/785,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/785,eclipse.jdt.ui,1895955237,785,Extract Similar Expression in All Methods If End-Users Want,Michaelll123,33093740,Michaelll123,,CLOSED,2023-09-14T07:49:55Z,2023-09-21T16:45:21Z,"### Extract Similar Expression in All Methods If End-Users Want
---
**Description**
--
According to our analysis of the real-world extract variable refactorings, we make the following observations: 
- Developers tend to perform a series of extract variable refactorings instead of a single one in a commit. 
- Multiple refactorings could be performed to extract the same expression that occurs in different **Block** (even different files).
- Developers tend to assign the same variable name to these extracted local variables.

Here we first post a series of extract variable refactorings to illustrate how this rule works. These refactorings are all taken from a single commit (d9a81b88ad561e7e4ceae93e805e0d7a53a7f1a) of the calcite of Apache.
```java
/* CS1: Real Case of Extract Local Variable Refactoring From apache_calcite/core/src/main/java/org/apache/calcite/adapter/enumerable/EnumerableWindow.java */
- @Override public RelOptCost computeSelfCost(RelOptPlanner planner, RelMetadataQuery mq) {
-   return super.computeSelfCost(planner, mq)
-       .multiplyBy(EnumerableConvention.COST_MULTIPLIER);
+ @Override public @Nullable RelOptCost computeSelfCost(RelOptPlanner planner,
+    RelMetadataQuery mq) {
+   RelOptCost cost = super.computeSelfCost(planner, mq);
+   if (cost == null) {
+     return null;
+   }
+   return cost.multiplyBy(EnumerableConvention.COST_MULTIPLIER);
  }
```

```java
/* CS2: Real Case of Extract Local Variable Refactoring From apache_calcite/core/src/main/java/org/apache/calcite/adapter/enumerable/EnumerableInterpreter.java */
- @Override public RelOptCost computeSelfCost(RelOptPlanner planner,
+ @Override public @Nullable RelOptCost computeSelfCost(RelOptPlanner planner,
      RelMetadataQuery mq) {
-   return super.computeSelfCost(planner, mq).multiplyBy(factor);
+   RelOptCost cost = super.computeSelfCost(planner, mq);
+   if (cost == null) {
+     return null;
+   }
+   return cost.multiplyBy(factor);
  }
```

```java
/* CS3: Real Case of Extract Local Variable Refactoring From apache_calcite/core/src/main/java/org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter.java */
- @Override public RelOptCost computeSelfCost(RelOptPlanner planner,
+ @Override public @Nullable RelOptCost computeSelfCost(RelOptPlanner planner,
      RelMetadataQuery mq) {
-   return super.computeSelfCost(planner, mq).multiplyBy(.1);
+   RelOptCost cost = super.computeSelfCost(planner, mq);
+   if (cost == null) {
+     return null;
+   }
+   return cost.multiplyBy(.1);
  }
```

```java
/* CS4: Real Case of Extract Local Variable Refactoring From apache_calcite/core/src/main/java/org/apache/calcite/adapter/jdbc/JdbcRules.java */
// in org.apache.calcite.adapter.jdbc.JdbcRules.JdbcUnion
- @Override public RelOptCost computeSelfCost(RelOptPlanner planner,
+ @Override public @Nullable RelOptCost computeSelfCost(RelOptPlanner planner,
      RelMetadataQuery mq) {
-   return super.computeSelfCost(planner, mq).multiplyBy(.1);
+   RelOptCost cost = super.computeSelfCost(planner, mq);
+   if (cost == null) {
+     return null;
+   }
+   return cost.multiplyBy(.1);
  }
// in org.apache.calcite.adapter.jdbc.JdbcRules.JdbcSort
- @Override public RelOptCost computeSelfCost(RelOptPlanner planner,
+ @Override public @Nullable RelOptCost computeSelfCost(RelOptPlanner planner,
      RelMetadataQuery mq) {
-   return super.computeSelfCost(planner, mq).multiplyBy(0.9);
+   RelOptCost cost = super.computeSelfCost(planner, mq);
+   if (cost == null) {
+     return null;
+   }
+   return cost.multiplyBy(0.9);
  }
// in org.apache.calcite.adapter.jdbc.JdbcRules.JdbcProject
- @Override public RelOptCost computeSelfCost(RelOptPlanner planner,
+ @Override public @Nullable RelOptCost computeSelfCost(RelOptPlanner planner,
      RelMetadataQuery mq) {
-   return super.computeSelfCost(planner, mq).multiplyBy(JdbcConvention.COST_MULTIPLIER));
+   RelOptCost cost = super.computeSelfCost(planner, mq);
+   if (cost == null) {
+     return null;
+   }
+   return cost.multiplyBy(JdbcConvention.COST_MULTIPLIER));
  }
// in org.apache.calcite.adapter.jdbc.JdbcRules.JdbcTableModify
- @Override public RelOptCost computeSelfCost(RelOptPlanner planner,
+ @Override public @Nullable RelOptCost computeSelfCost(RelOptPlanner planner,
      RelMetadataQuery mq) {
-   return super.computeSelfCost(planner, mq).multiplyBy(.1);
+   RelOptCost cost = super.computeSelfCost(planner, mq);
+   if (cost == null) {
+     return null;
+   }
+   return cost.multiplyBy(.1);
  }
```

If a developer wants to extract multiple expressions in different **Block** like the above code snippets (even different files), existing Eclipse can not support this functionality. 


**What We Can Do**
---
We plan to add a checkbox in the Extract Local Variable dialog to do multiple extracts (extract similar expressions in all methods). If end-users want to have a multiple extract temp for all usages of similar expressions in a file, they can select this option to save time.

**The pull request that implements the new rule has also been submitted.**


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/785/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/791,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/791,eclipse.jdt.ui,1899551772,791,"""Project > Clean..."" does not selects current project(s) with Git Staging view open.",garretwilson,627125,Garret Wilson,,OPEN,2023-09-16T19:59:49Z,2023-09-16T20:10:38Z,"I have many projects in my workspace. Most of the projects are multi-level aggregated projects imported from Maven.

For as long as I can remember (many years) I have been able to select ""Project > Clean..."" to clean the current project and rebuild. If ""Clean all projects"" is checked, then all projects are immediately selected upon opening the dialog. Otherwise, the currently selected project is/are selected.

In other words, if I have `FooBar.java` open in the editor, the `foo-project` is automatically selected. If I select `foo-project` and `bar-project` in the Project Explorer, then ""Project > Clean..."" will bring up a dialog with `foo-project` and `bar-project` already selected.

However **as of Eclipse 2023-09, no matter what I do, the ""Clean"" dialog that appears for ""Project > Clean..."" will _never_ have any projects selected for cleaning**. It doesn't matter what files I have open in the editor, nor what projects I have selected in Project Explorer. Instead, I have to search and manually select the specific projects I wanted. This is more onerous than it sounds, because although I may have a large project selected with many subprojects, the ""Clean"" dialog ignores project hierarchy and lists all possible projects in a flattened, alphabetized list.

I'm using Windows 10 with Eclipse EE 2023-09 and OpenJDK 17.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/791/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/791,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mqFBG,eclipse.jdt.ui,1722306630,791,NA,garretwilson,627125,Garret Wilson,,NA,2023-09-16T20:10:07Z,2023-09-16T20:10:07Z,"Ah, interesting. This bug seems to appear _only when the Git Staging view is open_! If I'm in another tab (e.g. Console or Error Log), the ""Clean"" dialog correctly preselects the selected project(s). If I try to use ""Project > Clean"" with the Git Staging view open, it behaves as per the description above.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5mqFBG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/792,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/792,eclipse.jdt.ui,1899583946,792,StringIndexOutOfBoundsException from proposal on javadoc {@link ,stephan-herrmann,24587985,Stephan Herrmann,,OPEN,2023-09-16T22:22:15Z,2023-09-18T18:48:37Z,"Given you want to type (within javadoc) `{@link #`, but instead of `#` you hit `@` once more, then jdt.ui will log this error
```
Error retrieving proposal text.
Display string:
link}
Pattern:
link @
```
with this stack trace:
```
java.lang.StringIndexOutOfBoundsException: begin 0, end 6, length 5
	at java.base/java.lang.String.checkBoundsBeginEnd(String.java:4602)
	at java.base/java.lang.String.substring(String.java:2705)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:929)
	at org.eclipse.jdt.internal.ui.text.javadoc.JavadocInlineTagCompletionProposal.getStyledDisplayString(JavadocInlineTagCompletionProposal.java:103)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:879)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:5855)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1529)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1555)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1538)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:289)
	at org.eclipse.swt.widgets.Table.cellDataProc(Table.java:227)
	at org.eclipse.swt.widgets.Display.cellDataProc(Display.java:994)
	at org.eclipse.swt.internal.gtk3.GTK3.gtk_main_iteration_do(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4514)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:645)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:552)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1432)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/792/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/795,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/795,eclipse.jdt.ui,1900660787,795,"Hover for Java hex, octal, and binary constants: minor signed vs. unsigned issues",howlger,5197918,Holger Voormann,,CLOSED,2023-09-18T10:45:01Z,2023-09-19T16:48:07Z,"In the Java editor, **hover for number literals**: minor  issues regarding signed vs. unsigned numbers and with vs. without `-` and `+` signs in the currently latest integration build (`eclipse-SDK-I20230917-1800`: 4.29 with https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/742):

```java
class Sample {
	public static void main(String[] args) {

		// int: hover shows positive unsigned value instead of negative signed value
		System.out.println(0x7fff_ffff); // okay (2147483647)
		System.out.println(0x8000_0000); // hover shows 2147483648 instead of -2147483648
		System.out.println(0xffff_ffff); // hover shows 4294967295 instead of -1

		// long: missing hover for negative long values
		System.out.println(0x7fff_ffff_ffff_ffffL); // okay (9223372036854775807)
		System.out.println(0x8000_0000_0000_0000l); // missing hover (expected: -9223372036854775808)
		System.out.println(0xffff_ffff_ffff_ffffl); // missing hover (expected: -1)
		System.out.println(0b10000000_00000000_00000000_00000000_00000000_00000000_00000000_00000000L); // missing hover (expected: -9223372036854775808)
		System.out.println(0b11111111_11111111_11111111_11111111_11111111_11111111_11111111_11111111L); // missing hover (expected: -1)

		// double: hover shows value without minus sign
		System.out.println(-0xffp0d); // hover shows 255.0 instead of -255.0
		System.out.println(-0xffp2d); // hover shows 1020.0 instead of -1020.0

		// double: missing hover when binary exponent has '+' or '-' sign; see https://docs.oracle.com/javase/specs/jls/se17/html/jls-3.html#jls-HexadecimalFloatingPointLiteral
		System.out.println(0x1p-2d); // missing hover (expected: 0.25)
		System.out.println(0x1p+2d); // missing hover (expected: 4.0)

		// double: missing hover if there are underscores ('_')
		System.out.println(0xffffp0d); // okay (65535.0)
		System.out.println(0xff_ffp0d); // missing hover (expected: 65535.0)

	}
}
```

See also:
- Initial implementation: https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/640
- Improvements: https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/742","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/795/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/797,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/797,eclipse.jdt.ui,1900905466,797,Clean up Dialog: number of Cleanups wrong,jukzi,51790620,Jörg Kubitz,,CLOSED,2023-09-18T13:08:26Z,2023-09-22T07:31:45Z,"Some cleanups count two times. Example:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/87511049-8415-4e85-a16c-d5a221225ed0)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/797/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/797,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5m8LPP,eclipse.jdt.ui,1727050703,797,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-09-20T06:30:40Z,2023-09-20T06:30:40Z,"Also note there is an exception logged when pressing ""Deselect All"" some times
```
!ENTRY org.eclipse.ui 4 0 2023-09-20 08:29:07.588
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException: 
	at org.eclipse.core.runtime.Assert.isLegal(Assert.java:66)
	at org.eclipse.core.runtime.Assert.isLegal(Assert.java:50)
	at org.eclipse.jdt.internal.ui.preferences.cleanup.CleanUpTabPage.setSelectedCleanUpCount(CleanUpTabPage.java:89)
	at org.eclipse.jdt.internal.ui.preferences.cleanup.CleanUpTabPage.lambda$3(CleanUpTabPage.java:206)
	at java.base/java.util.Observable.notifyObservers(Observable.java:173)
	at java.base/java.util.Observable.notifyObservers(Observable.java:129)
	at org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$ButtonPreference.checkboxChecked(ModifyDialogTabPage.java:195)
	at org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$ButtonPreference.setChecked(ModifyDialogTabPage.java:218)
	at org.eclipse.jdt.internal.ui.preferences.cleanup.CleanUpTabPage.doSetAll(CleanUpTabPage.java:130)
	at org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage.lambda$2(ModifyDialogTabPage.java:906)
	at org.eclipse.swt.events.SelectionListener$1.widgetSelected(SelectionListener.java:84)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4274)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4072)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3660)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.jdt.internal.ui.fix.CleanUpRefactoringWizard$CleanUpConfigurationPage$2.widgetSelected(CleanUpRefactoringWizard.java:365)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4274)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4072)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3660)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.lambda$0(RefactoringWizardOpenOperation.java:190)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:209)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:126)
	at org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:41)
	at org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter.startCleanupRefactoring(RefactoringExecutionStarter.java:257)
	at org.eclipse.jdt.internal.ui.actions.AllCleanUpsAction.performRefactoring(AllCleanUpsAction.java:71)
	at org.eclipse.jdt.internal.ui.actions.CleanUpAction.run(CleanUpAction.java:186)
	at org.eclipse.jdt.internal.ui.actions.CleanUpAction.run(CleanUpAction.java:104)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:278)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:252)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.ui.actions.RetargetAction.runWithEvent(RetargetAction.java:225)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:223)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4274)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4072)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3660)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:645)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:552)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1432)

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5m8LPP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/797,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5m8UxK,eclipse.jdt.ui,1727089738,797,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-09-20T07:02:53Z,2023-09-20T07:02:53Z,"@jjohnstn this a defect from da93a6e1c106416849259b4d2f65a42b2345b882
in registerSlavePreference you register master even if it was already registered - adding two observers each doing ++/--","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5m8UxK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/798,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/798,eclipse.jdt.ui,1900977405,798,"Clean Up: ""Convert to enhanced 'for' loops"" produces wrong code",jukzi,51790620,Jörg Kubitz,,CLOSED,2023-09-18T13:43:29Z,2023-10-04T22:24:03Z,"using the cleanup on jdt.core leads to many compilation errors.
""Duplicate local variable""
""The import is never used"" 
...

Most notably on org.eclipse.pde.internal.core.builders.ExtensionsErrorReporter.validateMaxElementMult(Element, ISchemaElement)
where using the the same variable name twice would perform a wrong call:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/21314bad-a5de-480f-a3ab-25d5c2aea796)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/798/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/798,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nUr1b,eclipse.jdt.ui,1733475675,798,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2023-09-25T11:25:55Z,2023-09-25T11:25:55Z,IIRC from an earlier discussion with @jjohnstn the clean-up of import is not include in each and every cleanup but available as separate clean-up. Not sure if you tick both clean-ups if that does the right thing or if you need to run the clean-up of imports after the other one.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nUr1b/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/798,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5n81rY,eclipse.jdt.ui,1744001752,798,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-10-03T01:05:29Z,2023-10-03T01:05:29Z,Please open a separate issue regarding the imports.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5n81rY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/805,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/805,eclipse.jdt.ui,1904189310,805,[21] Merge Java 21 Support to master,mpalat,4507939,Manoj  N Palat,manoj.palat@in.ibm.com,CLOSED,2023-09-20T05:37:53Z,2023-09-20T10:49:18Z,"Alongwith the resolultion of https://github.com/eclipse-jdt/eclipse.jdt.core/issues/1396, jdt.ui also to be merged from BETA_JAVA21 to master","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/805/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/809,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/809,eclipse.jdt.ui,1904720162,809,Show deprecation notice in deprecation warnings,HannesWell,44067969,Hannes Wellmann,,OPEN,2023-09-20T10:49:21Z,2024-06-18T21:40:11Z,"If deprecated elements (methods, classes, fields, etc.) are referenced a deprecation warning is created (by default) and the info-box that pops up when one hovers over the element shows generic information:
![grafik](https://github.com/eclipse-jdt/eclipse.jdt.core/assets/44067969/844c307d-2cb1-4a17-a637-ce6b8ba00af6)

The deprecation notice (the value of the `@deprecated` tag in the java-doc), which usually contains more details about the replacement and reasoning for the deprecation, is currently only accessible when opening the java-doc of the deprecated element:
![grafik](https://github.com/eclipse-jdt/eclipse.jdt.core/assets/44067969/349da56e-5843-4650-b8ca-7131c80ed3ba)

It would be convenient if the deprecation notice (the value of the `@deprecated` tag in the java-doc) would also be displayed directly in that info box when one hovers over the deprecation warning in the next paragraph. Usually it contains information about possible replacements.

Since the warning is probably issued by the compiler and shouldn't contain the deprecation notice when building from the CLI, this probably should only be done in jdt.ui.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/809/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/809,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Bb7C3,eclipse.jdt.ui,2171580599,809,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-06-16T13:03:48Z,2024-06-16T13:03:48Z,"Here's a more generic proposal:

Perhaps any error hover should have a button ""Show Javadoc"". This would also help the many situations where users hover to see the javadoc in the first place, not being interested in any warnings or even infos. How many users know that Shift+Alt+Hover gives the javadoc over a code location with an error marker?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Bb7C3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/809,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Bw7af,eclipse.jdt.ui,2177087135,809,NA,HannesWell,44067969,Hannes Wellmann,,NA,2024-06-18T21:40:10Z,2024-06-18T21:40:10Z,"> Here's a more generic proposal:
> 
> Perhaps any error hover should have a button ""Show Javadoc"". This would also help the many situations where users hover to see the javadoc in the first place, not being interested in any warnings or even infos. 

That sounds good for general errors. But if a special handling of deprecation warnings is ok, a special handling would still be great to even save that extra click and get the info on first sight. Showing the entire java-doc directly is in the general case probably too much.

> How many users know that Shift+Alt+Hover gives the javadoc over a code location with an error marker?

At least I don't knew this.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Bw7af/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/811,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/811,eclipse.jdt.ui,1906989373,811,Failure of test AnnotateAssistTest1d5.testAnnotateConstructorParameter,fedejeanne,2205684,Federico Jeanne,,CLOSED,2023-09-21T13:28:09Z,2024-12-10T12:31:18Z,"Failed on [this check](https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/808/checks?check_run_id=16954822326) of #808 

```java
java.lang.NullPointerException
	at java.base/java.util.Objects.requireNonNull(Objects.java:208)
	at java.base/java.util.Arrays$ArrayList.<init>(Arrays.java:4137)
	at java.base/java.util.Arrays.asList(Arrays.java:4122)
	at org.eclipse.jdt.ui.tests.quickfix.AbstractAnnotateAssistTests.collectAnnotateProposals(AbstractAnnotateAssistTests.java:82)
	at org.eclipse.jdt.ui.tests.quickfix.AnnotateAssistTest1d5.testAnnotateConstructorParameter(AnnotateAssistTest1d5.java:460)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/811/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/811,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uFTGd,eclipse.jdt.ui,1846882717,811,NA,fedejeanne,2205684,Federico Jeanne,,NA,2023-12-08T09:54:36Z,2023-12-08T09:54:36Z,"Could someone with enough permissions please add the ""help wanted"" and ""test"" tags here? I'm working on some other stuff right now so I won't be able to work on this any time soon.
Thank you.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uFTGd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/811,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6W48YI,eclipse.jdt.ui,2531509768,811,NA,fedejeanne,2205684,Federico Jeanne,,NA,2024-12-10T12:31:17Z,2024-12-10T12:31:17Z,No reported failures in 1+ years. Closing.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6W48YI/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/817,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/817,eclipse.jdt.ui,1908454680,817,Add N&N entry for #783,noopur2507,8749449,Noopur Gupta,,CLOSED,2023-09-22T08:38:58Z,2023-09-22T08:46:43Z,"Add N&N entry for 
- https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/783","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/817/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/817,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nLbXr,eclipse.jdt.ui,1731048939,817,NA,noopur2507,8749449,Noopur Gupta,,NA,2023-09-22T08:46:42Z,2023-09-22T08:46:42Z,Added https://eclipse.dev/eclipse/news/4.30/jdt.php.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nLbXr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/818,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/818,eclipse.jdt.ui,1908469500,818,Add N&N entry for Java 21 support,noopur2507,8749449,Noopur Gupta,,CLOSED,2023-09-22T08:48:21Z,2023-09-22T09:03:55Z,Add N&N entry for Java 21 support in 4.30.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/818/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/818,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nLhL5,eclipse.jdt.ui,1731072761,818,NA,noopur2507,8749449,Noopur Gupta,,NA,2023-09-22T09:03:46Z,2023-09-22T09:03:46Z,Added here - https://eclipse.dev/eclipse/news/4.30/jdt.php,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nLhL5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/819,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/819,eclipse.jdt.ui,1908604189,819,Unexpected runtime error while computing a text hover,GiacomoCau,89840744,,,CLOSED,2023-09-22T10:02:06Z,2023-09-22T15:30:32Z,"eclipse.buildId=4.29.0.20230907-1200
java.version=17.0.8.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=it_IT
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

org.eclipse.jface.text
Error
Fri Sep 22 11:08:39 CEST 2023
Unexpected runtime error while computing a text hover

java.lang.ClassCastException: class org.eclipse.jdt.internal.compiler.ast.LocalDeclaration cannot be cast to class org.eclipse.jdt.internal.compiler.ast.MethodDeclaration (org.eclipse.jdt.internal.compiler.ast.LocalDeclaration and org.eclipse.jdt.internal.compiler.ast.MethodDeclaration are in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @26393026)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeMethodDeclaration(Parser.java:5247)
	at org.eclipse.jdt.internal.codeassist.impl.AssistParser.consumeMethodDeclaration(AssistParser.java:822)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13145)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13400)
	at org.eclipse.jdt.internal.codeassist.select.SelectionParser.parse(SelectionParser.java:1665)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13357)
	at org.eclipse.jdt.internal.compiler.parser.Parser.dietParse(Parser.java:11743)
	at org.eclipse.jdt.internal.codeassist.select.SelectionParser.dietParse(SelectionParser.java:1489)
	at org.eclipse.jdt.internal.codeassist.SelectionEngine.select(SelectionEngine.java:994)
	at org.eclipse.jdt.internal.core.Openable.codeSelect(Openable.java:167)
	at org.eclipse.jdt.internal.core.CompilationUnit.codeSelect(CompilationUnit.java:389)
	at org.eclipse.jdt.internal.core.CompilationUnit.codeSelect(CompilationUnit.java:382)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractJavaEditorTextHover.getJavaElementsAt(AbstractJavaEditorTextHover.java:121)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:667)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:663)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/819/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/819,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nL-az,eclipse.jdt.ui,1731192499,819,NA,GiacomoCau,89840744,,,NA,2023-09-22T10:33:33Z,2023-09-22T10:33:33Z,"Occurs when you hover over most comments, method parameters and local declarations with the mouse only by editing this project's [java file](https://github.com/GiacomoCau/Wat/blob/main/src/Wat/Vm.java)
I was unable to understand what triggers the problem and build a reduced example.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nL-az/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/819,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nL_Y1,eclipse.jdt.ui,1731196469,819,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-09-22T10:36:59Z,2023-09-22T10:36:59Z,"Just in case, could you please try latest 4.30 nightly build: https://download.eclipse.org/eclipse/downloads/drops4/I20230922-0140 ?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nL_Y1/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/819,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nMeI0,eclipse.jdt.ui,1731322420,819,NA,GiacomoCau,89840744,,,NA,2023-09-22T12:19:55Z,2023-09-22T12:19:55Z,"Thanks Andrey,
It seems that the problem has been resolved on this version.
I tried again after recompiling the project with java 21 and javaCC 7 and there are no reports whatsoever in the Error log.
Do you have any idea when it will be released?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nMeI0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/819,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nM_Fv,eclipse.jdt.ui,1731457391,819,NA,GiacomoCau,89840744,,,NA,2023-09-22T13:50:33Z,2023-09-22T13:50:33Z,"or rather, if the fixes will end up in a new release of 4.29?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nM_Fv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/819,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nNg6R,eclipse.jdt.ui,1731595921,819,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-09-22T15:16:17Z,2023-09-22T15:16:17Z,"> or rather, if the fixes will end up in a new release of 4.29?

No. Eclipse doesn't provide maintenance releases, but we ship a new version every 3 months.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nNg6R/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/819,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nNmWg,eclipse.jdt.ui,1731618208,819,NA,GiacomoCau,89840744,,,NA,2023-09-22T15:30:32Z,2023-09-22T15:30:32Z,thanks anyway and good work,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nNmWg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/820,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/820,eclipse.jdt.ui,1909072200,820,Errors invoking content assist in almost every place,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2023-09-22T14:59:58Z,2023-09-22T15:33:54Z,"Regression from a62962e109581776291756d6181b079980ebf9eb.

Simple example below, try to use ""Ctrl+1"" on any type name, method call, method arguments, just almost everywhere - errors will be reported to the log.

```
public class Bug {
	public static void main(String[] args) throws Exception {
		System.out.println(""OMG"");
	}
}
```

Error log shows
```
eclipse.buildId=4.30.0.I20230922-0140
java.version=21
java.vendor=Oracle Corporation
BootLoader constants: OS=linux, ARCH=x86_64, WS=gtk, NL=en_US
Command-line arguments:  -data /data/4x_platform_workspace -os linux -ws gtk -arch x86_64

org.eclipse.jdt.ui
Error
Fri Sep 22 16:56:34 CEST 2023
Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".

java.lang.ClassCastException: class org.eclipse.jdt.core.dom.TypeBinding cannot be cast to class org.eclipse.jdt.core.dom.IVariableBinding (org.eclipse.jdt.core.dom.TypeBinding and org.eclipse.jdt.core.dom.IVariableBinding are in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @2beb5cf8)
	at org.eclipse.jdt.internal.ui.text.correction.QuickAssistProcessor.getConvertFieldNamingConventionProposal(QuickAssistProcessor.java:4552)
	at org.eclipse.jdt.internal.ui.text.correction.QuickAssistProcessor.getAssists(QuickAssistProcessor.java:399)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeAssistCollector.safeRun(JavaCorrectionProcessor.java:409)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.run(JavaCorrectionProcessor.java:342)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.process(JavaCorrectionProcessor.java:331)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectAssists(JavaCorrectionProcessor.java:511)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectProposals(JavaCorrectionProcessor.java:292)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.computeQuickAssistProposals(JavaCorrectionProcessor.java:248)
	at org.eclipse.jface.text.quickassist.QuickAssistAssistant$ContentAssistProcessor.computeCompletionProposals(QuickAssistAssistant.java:71)
	at org.eclipse.jface.text.contentassist.ContentAssistant$2.lambda$0(ContentAssistant.java:2064)
	at java.base/java.util.Collections$SingletonSet.forEach(Collections.java:5125)
	at org.eclipse.jface.text.contentassist.ContentAssistant$2.run(ContentAssistant.java:2063)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.ContentAssistant.computeCompletionProposals(ContentAssistant.java:2060)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.computeProposals(CompletionProposalPopup.java:577)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.lambda$0(CompletionProposalPopup.java:507)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:502)
	at org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1874)
	at org.eclipse.jface.text.quickassist.QuickAssistAssistant.showPossibleQuickAssists(QuickAssistAssistant.java:113)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionAssistant.showPossibleQuickAssists(JavaCorrectionAssistant.java:194)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:201)
	at org.eclipse.ui.texteditor.TextOperationAction.lambda$0(TextOperationAction.java:130)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/820/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/820,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nNdLP,eclipse.jdt.ui,1731580623,820,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-09-22T15:06:46Z,2023-09-22T15:06:46Z,Working on it.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nNdLP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/820,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nNhNZ,eclipse.jdt.ui,1731597145,820,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-09-22T15:17:06Z,2023-09-22T15:17:06Z,Thanks Jeff.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nNhNZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/823,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/823,eclipse.jdt.ui,1909826450,823,Wrong code minings for method with generic parameter,humphreygao,52394598,,,OPEN,2023-09-23T10:55:47Z,2023-09-23T10:55:47Z,"```java
public class Service<T> {
    public void wrongCodelensMethod(T object) {
    }
}
```

```java
public class NewServiceImpl extends Service<Object> {
    @Override
    public void wrongCodelensMethod(Object obj) {
    }
}
```

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/52394598/3f742e33-b56e-4f9c-89c1-51474d1c30d2)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/823/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1258,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1258,eclipse.jdt.ui,2182204230,1258,Projects Java Complier Options are forgotten,jukzi,51790620,Jörg Kubitz,,CLOSED,2023-09-25T07:01:46Z,2024-10-01T15:40:52Z,"When i uncheck ""Use compliance ..."" from the compiler options, apply and close, and open the dialog again, then the option is checked again.
![image](https://github.com/eclipse-jdt/eclipse.jdt.core/assets/51790620/7c64627f-b130-47a4-a32b-a6b4913576aa)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1258/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1258,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6NN_Yf,eclipse.jdt.ui,2369254943,1258,NA,opcoach,1716878,Olivier Prouvost,olivier.prouvost@opcoach.com,NA,2024-09-23T20:00:55Z,2024-09-23T20:00:55Z,"Actually this is not a bug... 
if the compliance compiler level is set to 16 in this case, the checkbox will not be checked again when the dialog is reopened.  But if you select again '17' in the combo box, close the dialog and open it again, java 17 is detected from this combo and it selects the checkbox... this is the nominal behavior... 

For this issue, we can either close it or remove the first choice in the combo box which is the compliance level proposed by the checkbox. 

I also tried with other java version, and this is correct.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6NN_Yf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1258,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6N9CdB,eclipse.jdt.ui,2381588289,1258,NA,nettozahler,106603198,,,NA,2024-09-29T20:14:20Z,2024-09-29T20:14:20Z,"I saw the answer of @opcoach too late so I also investigated this bug report. My result is the same: not a bug but ""works as designed"". Each preference setting is backed up by a 

`org.eclipse.jdt.internal.ui.preferences.OptionsConfigurationBlock.Key`
or its subclass
`org.eclipse.jdt.internal.ui.preferences.OptionsConfigurationBlock.LocalKey`

The JavaDoc explains:
```
/**
 * Key that is only managed locally and not part of preference store.
 */
private static class LocalKey extends Key {
```

And the key for the affected checkbox is such a `LocalKey`:
`org.eclipse.jdt.internal.ui.preferences.ComplianceConfigurationBlock.INTR_COMPLIANCE_FOLLOWS_EE= getLocalKey(""internal.compliance.follows.ee""); //$NON-NLS-1$`

The state of the affected checkbox is computed dynamically during opening of the settings page in
`org.eclipse.jdt.internal.ui.preferences.ComplianceConfigurationBlock.getComplianceFollowsEE(IExecutionEnvironment)`

So if one unchecks ""Use compliance ..."" and afterwards no UI option for compiler settings is changed then on reopening this dialog page the ""Use compliance ..."" will be checked again because no deviation from current execution env can be found.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6N9CdB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1258,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6OPPQB,eclipse.jdt.ui,2386359297,1258,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-10-01T15:40:52Z,2024-10-01T15:40:52Z,this issue is not any important. lets close it.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6OPPQB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/824,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/824,eclipse.jdt.ui,1911083556,824,"Save action ""Convert String concatenation to Text Block"" fails for multi-line string in annotation if followed by a comment.",jezovuk,1548456,,,CLOSED,2023-09-25T09:17:36Z,2023-09-26T07:54:59Z,"Reproduced with Eclipse versions 2023-06 and 2023-09 (both running on Adoptium Temurin JDK 17.0.8.1, project compiled with same JDK).

Save actions config:

![image](https://github.com/eclipse-jdt/eclipse.jdt.core/assets/1548456/b565fcc0-f236-4d2c-8197-1398354efe3f)


Example class for reproducing the problem:
```
package test;

import jakarta.persistence.NamedNativeQueries;
import jakarta.persistence.NamedNativeQuery;

@NamedNativeQueries({
 @NamedNativeQuery(name = ""testQuery"",
 query = ""select * "" +
 ""from test_entities "" +
 ""where test = :test"" ) // comment1
 })
public class TestEntity {
    public static void main(String[] args) {
        final String foo =
            (""Line1""+
            ""Line2""+
            ""Line3""+
            ""Line4"");//comment2
    }
}
```

Resulting problem when save is performed:

![image](https://github.com/eclipse-jdt/eclipse.jdt.core/assets/1548456/7cbfc123-2fd5-4e59-8c51-0d35959faa76)

Any of the following changes causes the problem to disappear:

- Disabling ""Convert String concatenation to Text Block"" save action
- Removing the comment after the annotation (""comment1"")
- Moving ""comment1"" comment to next line
- Removing/commenting-out the annotations

Note that ""similar"" string in method body (even with surrounding parens) does not cause the problem (conversion to text block works as expected).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/824/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/824,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nUGFH,eclipse.jdt.ui,1733321031,824,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-09-25T09:43:04Z,2023-09-25T09:43:04Z,@jezovuk : can you please attach workspace log with the exception stack trace **as text**?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nUGFH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/824,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nUNHC,eclipse.jdt.ui,1733349826,824,NA,jezovuk,1548456,,,NA,2023-09-25T10:01:38Z,2023-09-25T10:01:38Z,"There are two errors in log:

1. Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".

Trace:

```
java.lang.NullPointerException: Cannot invoke ""org.eclipse.jdt.internal.corext.refactoring.nls.NLSLine.getElements()"" because ""nlsLine"" is null
	at org.eclipse.jdt.internal.corext.fix.StringConcatToTextBlockFixCore$StringConcatFinder.visit(StringConcatToTextBlockFixCore.java:188)
	at org.eclipse.jdt.core.dom.InfixExpression.accept0(InfixExpression.java:353)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3254)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:3302)
	at org.eclipse.jdt.core.dom.MemberValuePair.accept0(MemberValuePair.java:157)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3254)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3325)
	at org.eclipse.jdt.core.dom.NormalAnnotation.accept0(NormalAnnotation.java:153)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3254)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3325)
	at org.eclipse.jdt.core.dom.ArrayInitializer.accept0(ArrayInitializer.java:124)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3254)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:3302)
	at org.eclipse.jdt.core.dom.SingleMemberAnnotation.accept0(SingleMemberAnnotation.java:155)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3254)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3325)
	at org.eclipse.jdt.core.dom.TypeDeclaration.accept0(TypeDeclaration.java:494)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3254)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3325)
	at org.eclipse.jdt.core.dom.CompilationUnit.accept0(CompilationUnit.java:258)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3254)
	at org.eclipse.jdt.internal.corext.fix.StringConcatToTextBlockFixCore.createCleanUp(StringConcatToTextBlockFixCore.java:790)
	at org.eclipse.jdt.internal.ui.fix.StringConcatToTextBlockCleanUpCore.createFixCore(StringConcatToTextBlockCleanUpCore.java:54)
	at org.eclipse.jdt.internal.ui.fix.AbstractCleanUpCoreWrapper.createFix(AbstractCleanUpCoreWrapper.java:53)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.calculateChange(CleanUpRefactoring.java:768)
	at org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener.saved(CleanUpPostSaveListener.java:384)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$4.run(CompilationUnitDocumentProvider.java:1618)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.notifyPostSaveListeners(CompilationUnitDocumentProvider.java:1612)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.commitWorkingCopy(CompilationUnitDocumentProvider.java:1396)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$3.execute(CompilationUnitDocumentProvider.java:1471)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider$DocumentProviderOperation.run(TextFileDocumentProvider.java:133)
	at org.eclipse.ui.actions.WorkspaceModifyDelegatingOperation.execute(WorkspaceModifyDelegatingOperation.java:71)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.lambda$0(WorkspaceModifyOperation.java:110)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2453)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2478)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:131)
	at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:76)
	at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:66)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.executeOperation(TextFileDocumentProvider.java:461)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.saveDocument(TextFileDocumentProvider.java:764)
	at org.eclipse.ui.texteditor.AbstractTextEditor.performSave(AbstractTextEditor.java:5009)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSave(CompilationUnitEditor.java:1267)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(CompilationUnitEditor.java:1321)
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.doSave(AbstractTextEditor.java:7185)
	at org.eclipse.ui.Saveable.doSave(Saveable.java:213)
	at org.eclipse.ui.internal.SaveableHelper.doSaveModel(SaveableHelper.java:333)
	at org.eclipse.ui.internal.SaveableHelper.lambda$1(SaveableHelper.java:196)
	at org.eclipse.ui.internal.SaveableHelper.lambda$3(SaveableHelper.java:271)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.ui.internal.WorkbenchWindow.lambda$7(WorkbenchWindow.java:2346)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2344)
	at org.eclipse.ui.internal.SaveableHelper.runProgressMonitorOperation(SaveableHelper.java:278)
	at org.eclipse.ui.internal.SaveableHelper.runProgressMonitorOperation(SaveableHelper.java:260)
	at org.eclipse.ui.internal.SaveableHelper.saveModels(SaveableHelper.java:207)
	at org.eclipse.ui.internal.SaveableHelper.savePart(SaveableHelper.java:150)
	at org.eclipse.ui.internal.WorkbenchPage.saveSaveable(WorkbenchPage.java:3825)
	at org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:3838)
	at org.eclipse.ui.internal.handlers.SaveHandler.execute(SaveHandler.java:82)
	at org.eclipse.ui.internal.handlers.HandlerProxy.execute(HandlerProxy.java:283)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:300)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:234)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:655)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1286)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1594)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4866)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4744)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5040)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:645)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:552)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)
```

2. The save participant 'org.eclipse.jdt.ui.postsavelistener.cleanup' caused an exception: java.lang.NullPointerException: Cannot invoke ""org.eclipse.jdt.internal.corext.refactoring.nls.NLSLine.getElements()"" because ""nlsLine"" is null

Trace:

```
java.lang.NullPointerException: Cannot invoke ""org.eclipse.jdt.internal.corext.refactoring.nls.NLSLine.getElements()"" because ""nlsLine"" is null
	at org.eclipse.jdt.internal.corext.fix.StringConcatToTextBlockFixCore$StringConcatFinder.visit(StringConcatToTextBlockFixCore.java:188)
	at org.eclipse.jdt.core.dom.InfixExpression.accept0(InfixExpression.java:353)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3254)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:3302)
	at org.eclipse.jdt.core.dom.MemberValuePair.accept0(MemberValuePair.java:157)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3254)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3325)
	at org.eclipse.jdt.core.dom.NormalAnnotation.accept0(NormalAnnotation.java:153)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3254)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3325)
	at org.eclipse.jdt.core.dom.ArrayInitializer.accept0(ArrayInitializer.java:124)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3254)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:3302)
	at org.eclipse.jdt.core.dom.SingleMemberAnnotation.accept0(SingleMemberAnnotation.java:155)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3254)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3325)
	at org.eclipse.jdt.core.dom.TypeDeclaration.accept0(TypeDeclaration.java:494)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3254)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3325)
	at org.eclipse.jdt.core.dom.CompilationUnit.accept0(CompilationUnit.java:258)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3254)
	at org.eclipse.jdt.internal.corext.fix.StringConcatToTextBlockFixCore.createCleanUp(StringConcatToTextBlockFixCore.java:790)
	at org.eclipse.jdt.internal.ui.fix.StringConcatToTextBlockCleanUpCore.createFixCore(StringConcatToTextBlockCleanUpCore.java:54)
	at org.eclipse.jdt.internal.ui.fix.AbstractCleanUpCoreWrapper.createFix(AbstractCleanUpCoreWrapper.java:53)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.calculateChange(CleanUpRefactoring.java:768)
	at org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener.saved(CleanUpPostSaveListener.java:384)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$4.run(CompilationUnitDocumentProvider.java:1618)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.notifyPostSaveListeners(CompilationUnitDocumentProvider.java:1612)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.commitWorkingCopy(CompilationUnitDocumentProvider.java:1396)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$3.execute(CompilationUnitDocumentProvider.java:1471)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider$DocumentProviderOperation.run(TextFileDocumentProvider.java:133)
	at org.eclipse.ui.actions.WorkspaceModifyDelegatingOperation.execute(WorkspaceModifyDelegatingOperation.java:71)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.lambda$0(WorkspaceModifyOperation.java:110)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2453)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2478)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:131)
	at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:76)
	at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:66)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.executeOperation(TextFileDocumentProvider.java:461)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.saveDocument(TextFileDocumentProvider.java:764)
	at org.eclipse.ui.texteditor.AbstractTextEditor.performSave(AbstractTextEditor.java:5009)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSave(CompilationUnitEditor.java:1267)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(CompilationUnitEditor.java:1321)
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.doSave(AbstractTextEditor.java:7185)
	at org.eclipse.ui.Saveable.doSave(Saveable.java:213)
	at org.eclipse.ui.internal.SaveableHelper.doSaveModel(SaveableHelper.java:333)
	at org.eclipse.ui.internal.SaveableHelper.lambda$1(SaveableHelper.java:196)
	at org.eclipse.ui.internal.SaveableHelper.lambda$3(SaveableHelper.java:271)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.ui.internal.WorkbenchWindow.lambda$7(WorkbenchWindow.java:2346)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2344)
	at org.eclipse.ui.internal.SaveableHelper.runProgressMonitorOperation(SaveableHelper.java:278)
	at org.eclipse.ui.internal.SaveableHelper.runProgressMonitorOperation(SaveableHelper.java:260)
	at org.eclipse.ui.internal.SaveableHelper.saveModels(SaveableHelper.java:207)
	at org.eclipse.ui.internal.SaveableHelper.savePart(SaveableHelper.java:150)
	at org.eclipse.ui.internal.WorkbenchPage.saveSaveable(WorkbenchPage.java:3825)
	at org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:3838)
	at org.eclipse.ui.internal.handlers.SaveHandler.execute(SaveHandler.java:82)
	at org.eclipse.ui.internal.handlers.HandlerProxy.execute(HandlerProxy.java:283)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:300)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:234)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:655)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1286)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1594)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4866)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4744)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5040)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:645)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:552)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nUNHC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/824,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nUlGw,eclipse.jdt.ui,1733448112,824,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-09-25T11:07:06Z,2023-09-25T11:07:06Z,"@jjohnstn : I see NP in `org.eclipse.jdt.internal.corext.fix.StringConcatToTextBlockFixCore.StringConcatFinder.visit(InfixExpression)` is because `NLSUtil.scanCurrentLine()` can return null (and does it).

Can you please check? Seem to be coming from 0023b8495a219c0f9a143f1bcb522b24deea95a0.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nUlGw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/824,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nYw55,eclipse.jdt.ui,1734545017,824,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-09-25T22:22:25Z,2023-09-25T22:22:25Z,@iloveeclipse Will fix.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nYw55/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/824,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5naknq,eclipse.jdt.ui,1735018986,824,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-09-26T07:54:59Z,2023-09-26T07:54:59Z,Thanks Jeff!,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5naknq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/826,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/826,eclipse.jdt.ui,1912102229,826,StringConcatToTextBlock proposal failing with rewrite not initialized,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2023-09-25T18:55:40Z,2023-09-25T20:50:42Z,This occurs after the refactoring of proposals to jdt.core.manipulation,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/826/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/828,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/828,eclipse.jdt.ui,1912270852,828,Multiple NLS additions proposal not shown if hovering over a missing NLS tag since proposals refactoring,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2023-09-25T20:56:27Z,2023-09-26T21:13:39Z,"With the following class:

```
public class E {
    	String a = ""abc"";
	String b = ""def"";
}

```
       
when missing NLS markers are warning or error, hovering over ""abc"" should offer to also fix 2 problems of the same type in the file.  This does not occur and only fixing the one string is offered.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/828/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/828,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nff7L,eclipse.jdt.ui,1736310475,828,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-09-26T21:13:39Z,2023-09-26T21:13:39Z,Fixed via #829,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nff7L/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/832,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/832,eclipse.jdt.ui,1913193260,832,Code completion adds incorrect parameter,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,OPEN,2023-09-26T10:23:20Z,2023-09-26T10:32:19Z,"A client of mine reported an issue with JDT code completion, I could reproduce and it is really annoying.

To replicate: Create a plug-in with depedencies to the JFace plug-in and use the WidgetFactory fluent API.

Create a class similar to the following:

```
public class TodoOverviewPart {

	@Inject
	public TodoOverviewPart(Composite parent) {
		WidgetFactory.label(SWT.NONE)[CURSOR HERE].
}
```

Now place the cursor at cursor here and type ""."". Afterwards delete the . with the backspace button, type the ""."" again and you end up with:

```
@Inject
	public TodoOverviewPart(Composite parent) {
		WidgetFactory.label(SWT.NONE)parent.
}

```

This is obviously wrong and I think a new issue.

cc @jjohnstn ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/832/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/832,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nbhn9,eclipse.jdt.ui,1735268861,832,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2023-09-26T10:32:19Z,2023-09-26T10:32:19Z,"![example](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/139910/0aab6e3a-af1e-4930-8868-61f2d0e9cb43)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nbhn9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/834,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/834,eclipse.jdt.ui,1915905760,834,[debug] show more advanced thread state,laeubi,1331477,Christoph Läubrich,,OPEN,2023-09-27T16:08:01Z,2024-09-17T06:10:23Z,"Currently the Debug view shows only quite basic thread state e.g running / suspended.

What I often encounter when I want to analyze some kind of blocking/slowness is that I need to suspend all threads and then look at the thread-dump and identify if the thread is currently in some kind of waiting mode or actually doing something useful.

One example is `EPoll.wait(int, long, int, int)` or `Unsafe.park(boolean, long)` and alike that usually indicate that the thread is NOT running but waiting for some events.

JProfiler has a nice ""Thread History"" view that shows Threads in different states here is one example:

![grafik](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1331477/e7e2fd3b-8e99-4f1a-ad65-b7809a82d4ca)

Here are all supported states:
![grafik](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1331477/69edd894-0aa0-413a-b225-fa292b9c1fc3)

It would be great if JDT could also show these (as it seems to be supported somehow) maybe even using different icons so one gets a faster overview about what the Thread is currently doing.

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/834/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/835,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/835,eclipse.jdt.ui,1916477250,835,Multiple quick assists are failing after split,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2023-09-27T23:26:47Z,2023-09-28T00:41:16Z,"In the following, clicking on 5 and selecting to Extract to local will result in failure announcing that rewrite() is uninitialized.  Clicking on ""h"" if warnings enabled for NLS and selecting add NLS marker gets an internal error.

```
public class TestExtract2 {
	
	public void foo() {
		int i = 5 + 7;
		while (--i > 0) {
			System.out.println(""h"");
		}
	}

}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/835/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/835,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nm-Wm,eclipse.jdt.ui,1738270118,835,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-09-28T00:17:32Z,2023-09-28T00:17:32Z,"The uninitialized rewrite problem is easily fixed by adding back all original overridden methods back to non-core proposals and having them call the delegate's corresponding method (e.g. getRewrite() is overridden in some proposals).  While this fixed a large number of issues, this exposed a problem with tracking positions (e.g. see Extract to local proposal above) whereby a BadLocationException occurs after applying some assists due to checks occurring as part of LinkedProposalModelPresenter.enterLinkedMode()","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nm-Wm/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/835,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nnCVB,eclipse.jdt.ui,1738286401,835,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-09-28T00:41:16Z,2023-09-28T00:41:16Z,@iloveeclipse @robstryker Reverted the split for the time-being.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5nnCVB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/837,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/837,eclipse.jdt.ui,1916860271,837,[junit] provide a pure JUnit5 classpath container,laeubi,1331477,Christoph Läubrich,,OPEN,2023-09-28T07:13:20Z,2024-05-31T05:27:59Z,"Currently JDT provides a JUNIT5 classpath container that uses the [junit-vintage](https://junit.org/junit5/docs/current/user-guide/#migrating-from-junit4) engine allowing to run Junit5 in parallel to JUnit 3/4:

![grafik](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1331477/f38475ef-6cde-4402-b635-0fbb036c2da6)

for project that want to go pure JUnit5 it would be good to strip away the vintage stuff and only have the new JUnit5 items so for example the don't get suggestions from JUnit3/4 API anymore.

To make this non intrusive I would suggest to allow adding an attribute to the container like this:

```
<classpathentry kind=""con"" path=""org.eclipse.jdt.junit.JUNIT_CONTAINER/5"">
  <attributes>
	  <attribute name=""vintage"" value=""false""/>
  </attributes>
</classpathentry>
```

If no attribute is given it should assume `true` so existing setups are not affected.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/837/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/837,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_oP3z,eclipse.jdt.ui,2141257203,837,NA,laeubi,1331477,Christoph Läubrich,,NA,2024-05-31T05:27:58Z,2024-05-31T05:27:58Z,"Tycho now has also support for this:
- https://github.com/eclipse-tycho/tycho/pull/3896","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_oP3z/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/841,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/841,eclipse.jdt.ui,1921889211,841,Support automatic installation of JustJ,laeubi,1331477,Christoph Läubrich,,OPEN,2023-10-02T13:08:21Z,2023-10-02T13:48:29Z,"JustJ provides JDKs as installable units it would be great if the adding of JustJ as JDKs would be possible here:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1331477/7a6410a3-ba05-4bcc-941e-c4dc67105b32)

The dialog then should show all VMs available here:

- https://download.eclipse.org/justj/jres/

and the user should be able to select one that is the fetched and for example placed in the bundle-area and then automatically added.

FYI @merks @mickaelistria ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/841/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/841,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5n5Fse,eclipse.jdt.ui,1743018782,841,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2023-10-02T13:28:34Z,2023-10-02T13:28:34Z,"I'm not sure more JustJ fits well as an additional JVM target in a usual developer workflow. In the vast majority of cases, we have
* users using the last released version of Eclipse IDE, which would embed the last release of JustJ and underlying Java/Temurin
* users also using CLI tools, such as Maven, gradle,... and needing the Java installations available not only to Eclipse IDE, but to their whole development environment. JustJ doesn't target fixing that.

Also, we may assume that:
* older versions of JustJ may not be as well maintained as soon as Platform starts requiring newer ones
* JustJ or Temurin may one day miss a Java version (as it's happening currently with Java 21)
* so the catalog of JVMs shipped by JustJ may not be ""state of art for Java development""

So I think it's overall more helpful to just let people install some Java version in their environment if they want another one and find it with ""Search"". Adding such responsibility to JustJ can be disservice to users, and to JustJ itself which would get some extra responsability without a clean plan/resource to cope with it.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5n5Fse/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/841,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5n5N4u,eclipse.jdt.ui,1743052334,841,NA,laeubi,1331477,Christoph Läubrich,,NA,2023-10-02T13:48:28Z,2023-10-02T13:48:28Z,"I just noticed this when working on a project that needs are more recent JVM I have to look for the download extract it somewhere go back to the dialog finde the location again... and that JDK is independent from that what is running eclipse or what other tools might need (gradle, maven ...) ...","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5n5N4u/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/843,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/843,eclipse.jdt.ui,1925483825,843,"[junit] junit result view, support stacktrace copy of single line",col-panic,1679857,Marco Descher,,OPEN,2023-10-04T06:20:10Z,2023-10-04T06:20:10Z,"At the moment, in the Junit View one may (despite being able to select a single line) only copy the whole stacktrace by using `Copy Trace`. An additional option to `Copy selected line` would be nice.

![grafik](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1679857/39dbd714-aec8-4c3b-984f-51500b0dac9a)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/843/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/845,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/845,eclipse.jdt.ui,1926272581,845,[code mining] Annotations are replaced with empty space (regression in 2023-09),jubax,10562923,Juergen Baier,baier@semedy.com,CLOSED,2023-10-04T13:52:30Z,2023-10-04T17:19:36Z,"I encountered a problem with code mining which might be a regression for Eclipse 2023-09. The only code mining annotation I'm using is ""Show method parameter names"".

The effect: I open a class and the parameter names are shown correctly. Then I scroll up and down a bit while working and suddenly some annotations are no longer shown. Instead empty space is shown instead:

Good:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/10562923/3351a1ae-a3d7-4ecf-9fa8-dd633931c046)

Bad:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/10562923/ac55f612-f54a-4011-939c-f62dd11715b8)

Note that this happens on all classes after a while. After this became annoying I downloaded 2023-06 again to verify and it seems that this is only a problem with 2023-09.

I'm using a M2 MacBook with Sonoma. I downloaded the AArch64 version for 06 and 09.

Any ideas or hints?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/845/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/845,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5oIB82,eclipse.jdt.ui,1746935606,845,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-10-04T13:57:59Z,2023-10-04T13:57:59Z,"@jubax : can you see it on Windows or Linux, and could you please provide a simple Java file showing the problem?

@mickaelistria : probably this should be moved to platform UI? Looks like a generic code mining drawing issue (on Mac)?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5oIB82/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/845,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5oIJ98,eclipse.jdt.ui,1746968444,845,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2023-10-04T14:15:03Z,2023-10-04T14:15:03Z,This was most likely fixed with https://github.com/eclipse-platform/eclipse.platform.ui/commit/f2e78a87fb99e17d4c19cb5d95bf80fbf1296eeb ; please try latest I-Build from download.eclipse.org/eclipse/ to verify.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5oIJ98/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/845,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5oJVcf,eclipse.jdt.ui,1747277599,845,NA,jubax,10562923,Juergen Baier,baier@semedy.com,NA,2023-10-04T16:44:29Z,2023-10-04T16:44:29Z,"> This was most likely fixed with [eclipse-platform/eclipse.platform.ui@f2e78a8](https://github.com/eclipse-platform/eclipse.platform.ui/commit/f2e78a87fb99e17d4c19cb5d95bf80fbf1296eeb) ; please try latest I-Build from download.eclipse.org/eclipse/ to verify.

I downloaded eclipse-SDK-I20231004-0750-macosx-cocoa-aarch64 and the problem seems to be fixed. Thank you!

@mickaelistria As this is a very inconvenient bug for me: What is the best way to get this bug fixed locally for 2023-09 (J2EE)? Just replace the .class files from the JAR file or replace a plug-in/library with a new version? What would you recommend? Thanks again.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5oJVcf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/845,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5oJWcj,eclipse.jdt.ui,1747281699,845,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-10-04T16:47:30Z,2023-10-04T16:47:30Z,Closing as duplicate of https://github.com/eclipse-platform/eclipse.platform.ui/issues/1170,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5oJWcj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/845,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5oJggG,eclipse.jdt.ui,1747322886,845,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2023-10-04T17:14:13Z,2023-10-04T17:14:13Z,">  What is the best way to get this bug fixed locally for 2023-09 (J2EE)? Just replace the .class files from the JAR file or replace a plug-in/library with a new version? What would you recommend?

You basically cannot do it easily because the release block a certain version of the Platform.
The best approach is more to start from an I-Build of Platform, install what you need into it. Then you could just run updates from time to time to get fixes between releases.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5oJggG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/845,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5oJiVj,eclipse.jdt.ui,1747330403,845,NA,jubax,10562923,Juergen Baier,baier@semedy.com,NA,2023-10-04T17:19:36Z,2023-10-04T17:19:36Z,"> > What is the best way to get this bug fixed locally for 2023-09 (J2EE)? Just replace the .class files from the JAR file or replace a plug-in/library with a new version? What would you recommend?
> 
> You basically cannot do it easily because the release block a certain version of the Platform. The best approach is more to start from an I-Build of Platform, install what you need into it. Then you could just run updates from time to time to get fixes between releases.

Thank you, I will try that. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5oJiVj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/848,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/848,eclipse.jdt.ui,1928043861,848,[Code Folding] opening of collapsed anonymous class doesn't work ,Wittmaxi,16443184,Maximilian Wittmer,maximilian.wittmer@gmx.de,OPEN,2023-10-05T11:21:59Z,2023-10-05T11:21:59Z,"**Description**
I cannot open a collapsed anonymous class after collapsing all. Works fine with methods.
The ""+""-icon that indicates code folding correctly changes to ""-""

![grafik](https://github.com/eclipse-platform/eclipse.platform.ui/assets/16443184/38fa2430-ca2c-4abb-9094-4ce3f1c071de)
![grafik](https://github.com/eclipse-platform/eclipse.platform.ui/assets/16443184/8d638a80-b0a6-4462-b25a-2f2807d3ce77)
![grafik](https://github.com/eclipse-platform/eclipse.platform.ui/assets/16443184/47ec39b2-f9ea-4479-a85e-3afcc23d828d)

Copy of https://github.com/eclipse-platform/eclipse.platform.ui/issues/1182
**Reproduce**
In a File with anonymous classes, use ""Folding -> Collapse All"". Try to uncollapse the anonymous class

**Expected behaviour**
I expect the anonymous class to unfold like any other folded block.

**My system**
Eclipse SDK

Version: 2023-12 (4.30)
Build id: I20230913-1800","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/848/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/850,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/850,eclipse.jdt.ui,1929632549,850,Add quick fix to remove default case when present with unconditional pattern in switch,noopur2507,8749449,Noopur Gupta,,CLOSED,2023-10-06T07:54:12Z,2023-10-13T07:53:40Z,"```
public class ZZ {
	public static boolean foo(Integer n) {
		return switch (n) {
		case Integer x when x.equals(10) -> {
			yield true;
		}
		case Comparable<?> y -> {
			yield false;
		}
		default -> {       // [1]
			yield false;
		}
		};
	}

	public static void main(String[] argv) {
		System.out.println(foo(Integer.valueOf(0)));
		System.out.println(foo(Integer.valueOf(10)));
	}
}
```

Here, [1] has compile error - ""Switch case cannot have both unconditional pattern and default label""

A quick fix can be provided to remove the default case to fix the compile error.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/850/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/851,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/851,eclipse.jdt.ui,1929897532,851,Move LTK from JDT to Platform?,mickaelistria,469058,Mickael Istria,mistria@redhat.com,CLOSED,2023-10-06T10:44:23Z,2023-10-11T14:19:05Z,"I think the LTK bundle would reach more of their target audience if being moved into eclipse.platform.ui GitHub repo.
Would it be OK for JDT project to get rid of those?
If there is consensus, I volunteer in taking care of this refactoring.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/851/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/851,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5oVYeJ,eclipse.jdt.ui,1750435721,851,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2023-10-06T11:13:15Z,2023-10-06T11:13:15Z,"IIRC this was already planned and agreed upon in the past in the PMC but no one did the actual work. Same for the spell checker in JDT.

I think CDT has made copies of the spell checker and maybe also of LTK, cc @jonahgraham maybe also PDT? cc @zulus ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5oVYeJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/851,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5oVqcu,eclipse.jdt.ui,1750509358,851,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2023-10-06T11:50:22Z,2023-10-06T11:50:22Z,"I didn't find any reference to that topic in https://github.com/eclipse-platform/.github/wiki/PMC-Meeting-minutes or earlier wiki PMC meeting notes after 2017 (I didn't find later). I searched for ""LTK"" and ""refact"" without a clear hit. Do you think you can find a note about it?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5oVqcu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/851,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5oV2EQ,eclipse.jdt.ui,1750556944,851,NA,jonahgraham,679236,Jonah Graham,jonah@kichwacoders.com,NA,2023-10-06T12:21:48Z,2023-10-06T12:21:48Z,"> I think CDT has made copies of the spell checker and maybe also of LTK

CDT does [have a copy of spell checker](https://github.com/eclipse-cdt/cdt/tree/main/core/org.eclipse.cdt.ui/src/org/eclipse/cdt/internal/ui/text/spelling) - but AFAIK we use LTK provided by JDT: ([require org.eclipse.ltk.core in our manifests](https://github.com/eclipse-cdt/cdt/blob/a92b90a4c8f50a0c435a51c6f9e13971d0beeaf3/core/org.eclipse.cdt.core/META-INF/MANIFEST.MF#L142)) - that isn't to say we haven't copied parts of it as I am sure over time we have. CDT has copied lots of JDT stuff in the past.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5oV2EQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/851,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5oWWBW,eclipse.jdt.ui,1750687830,851,NA,zulus,549039,Dawid Pakuła,zulus@w3des.net,NA,2023-10-06T13:31:18Z,2023-10-06T13:31:18Z,"> I think CDT has made copies of the spell checker and maybe also of LTK, cc @jonahgraham maybe also PDT? cc @zulus

Only small (engine integration parts) from JDT are copied (in WTP SSE and DLTK) for now we just rely on available ISpellingEngine, so PHP EPP package haven't any

LTK is used directly from JDT, Long time ago I was surprised when realize it isn't part of platform ;)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5oWWBW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/851,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5oWWNM,eclipse.jdt.ui,1750688588,851,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2023-10-06T13:31:48Z,2023-10-06T13:31:48Z,At least Dani gave his OK for this move based on your request from 2017 :-) https://www.eclipse.org/lists/eclipse-dev/msg10519.html,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5oWWNM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/851,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5oWbsN,eclipse.jdt.ui,1750711053,851,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2023-10-06T13:47:03Z,2023-10-06T13:47:03Z,"Thanks, that's enough support to let me start this task.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5oWbsN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/851,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5oXPnL,eclipse.jdt.ui,1750923723,851,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2023-10-06T15:35:05Z,2023-10-06T15:35:05Z,Work ongoing at https://github.com/eclipse-platform/eclipse.platform.ui/pull/1197,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5oXPnL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/853,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/853,eclipse.jdt.ui,1932418167,853,"Static imports are removed if the source contains ""break label;""",NathanSweet,434010,Nathan Sweet,nathan.sweet@gmail.com,CLOSED,2023-10-09T01:14:02Z,2023-11-04T01:06:53Z,"I have struggled with `Organize Imports` removing static imports for a long time. I finally narrowed it down to the repro case below. Please note that while the repro case may be a little odd, it very often happens in real code.

Reproduced with:
Eclipse Platform 4.30.0.I20230929-1810
Eclipse Java Development Tools: 3.19.300.v20230929-1810

```
package test;

import static test.StaticImportBug.Test.*;

// Repro: Organize Imports (ctrl+shift+O) and note the static import is incorrectly removed.
public class StaticImportBug {
	static public void methodWithBreakOuter () {
		// Does not fail if these 3 lines are commented out.
		outer:
		while (true)
			break outer;
	}

	// Does not fail if main is moved above methodWithBreakOuter.
	static public void main (String[] args) throws Throwable {
		System.out.println(field);
	}

	static public class Test {
		static public boolean field;
	}
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/853/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/853,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5odBUC,eclipse.jdt.ui,1752438018,853,NA,srikanth-sankaran,131454720,Srikanth Sankaran,,NA,2023-10-09T06:56:34Z,2023-10-09T06:56:34Z,@noopur2507 - Please take a look and pass it back if we have a finger somewhere in the pie ;-),"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5odBUC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/853,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5o-NU0,eclipse.jdt.ui,1761137972,853,NA,noopur2507,8749449,Noopur Gupta,,NA,2023-10-13T08:38:59Z,2023-10-13T08:38:59Z,"@NathanSweet I tried your code with Eclipse build I20231011-1800 taken from https://download.eclipse.org/eclipse/downloads/index.html but I could not reproduce the issue.

In the static import, Test.* is replaced with Test.field which is a preference setting in Organize imports preferences.

Please check again with the latest I-build if you are still seeing the issue.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5o-NU0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/853,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5pFBC6,eclipse.jdt.ui,1762922682,853,NA,NathanSweet,434010,Nathan Sweet,nathan.sweet@gmail.com,NA,2023-10-14T13:54:41Z,2023-10-14T13:54:41Z,"@noopur2507 Thanks for taking a look. It still happens for me in I20231011-1800. There must be something different about my setup or configuration compared to yours.

To setup Eclipse, I first install the `Platform Runtime Binary` for the I-build, then I run Eclipse and use the update site for that same I-build to install `Eclipse JDT`. This gives me a minimal Eclipse without a bunch of stuff I don't need/want. I then create a new Java project, paste in the code above, `ctrl+shift+O`, and the import disappears. I do these steps on Windows 10, FWIW.

Could it be your Eclipse has more stuff installed and that is hiding this issue? Or possibly your preferences are hiding this issue?

Note that in the steps above I never configured any preferences -- everything is the defaults, so I don't think my preferences are involved in the problem. Normally I do change [my Organize Import preferences](http://n4te.com/x/8535-0Jm6.png), but resetting them to the defaults doesn't fix it, and again the steps above use only default preferences.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5pFBC6/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/853,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5pFBO2,eclipse.jdt.ui,1762923446,853,NA,NathanSweet,434010,Nathan Sweet,nathan.sweet@gmail.com,NA,2023-10-14T13:58:17Z,2023-10-14T13:58:17Z,"One more data point: I looked in my chat logs and found that I first complained to a friend about this problem on October 14, 2022. That is coincidentally exactly one year ago from today, so the problem has been around at least that long.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5pFBO2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/853,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5pIomp,eclipse.jdt.ui,1763871145,853,NA,noopur2507,8749449,Noopur Gupta,,NA,2023-10-16T07:17:06Z,2023-10-16T07:17:06Z,"I have the plain SDK downloaded from https://download.eclipse.org/eclipse/downloads/index.html. There is no additional plugin installed and all the settings are also default. I am using JDK-21 for the Java project. I am on macOS but that should not impact this issue.

Do you have any project-specific preference settings for the project where you are trying to reproduce it?

Please download the latest I-build from this link, create a new workspace and project, and try reproducing this issue. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5pIomp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/853,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5pLMNK,eclipse.jdt.ui,1764541258,853,NA,NathanSweet,434010,Nathan Sweet,nathan.sweet@gmail.com,NA,2023-10-16T13:57:12Z,2023-10-16T13:57:12Z,"I have no project specific settings.

At this link:
https://download.eclipse.org/eclipse/downloads/drops4/I20231015-1800/
Under `Eclipse SDK` I click the `Windows (64 bit version)` link:
[eclipse-SDK-I20231015-1800-win32-x86_64.zip](https://download.eclipse.org/eclipse/downloads/drops4/I20231015-1800/download.php?dropFile=eclipse-SDK-I20231015-1800-win32-x86_64.zip)
I unzip, run Eclipse, click `Create a new Java project`, type the name `project`, press enter, select `src` in Package Explorer, paste the code above, press `ctrl+shift+O`, and the static import is removed.

Next if I press `ctrl+Z` to undo, then `ctrl+shift+O` again, the static import is not removed (it is changed to `.field`, which is correct). It seems I can no longer reproduce the problem after it happened the first time.

I deleted the workspace, did all the steps again, and again the first time the static import is removed, after that it works correctly.

Next I import all [my preferences](http://n4te.com/x/8539-nate-eclipse.epf), restart Eclipse, press `ctrl+shift+O`, and the import is removed. `ctrl+Z` and then `ctrl+shift+O` still remove the import.

To recap: with a brand new workspace and all default preferences, I reproduce the problem only one time. If I then load my preferences, I can reproduce the problem every time.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5pLMNK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/853,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ps6Pl,eclipse.jdt.ui,1773380581,853,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-10-20T20:53:55Z,2023-10-20T20:53:55Z,"I am able to reproduce and know what is happening.  The bug occurs when there is no static import favorites preference set.  This occurs on the first open of the workspace so that is why it normally only happens once.  When the preferences from @NathanSweet are imported, this list is then permanently empty.  There is a bug in the Organize Imports code whereby an internal method when presented an empty static import favorites list from preferences caused it to return when it should have continued though the list of static references.  This only happens because it was trying to process the ""outer"" reference before ""field"".  This premature return caused it to never process ""field"" and store that it needed an import.  It then removed the import later because according to its checks it was unused.  I will prepare a patch shortly.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ps6Pl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/853,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5q40uF,eclipse.jdt.ui,1793280901,853,NA,NathanSweet,434010,Nathan Sweet,nathan.sweet@gmail.com,NA,2023-11-04T01:06:52Z,2023-11-04T01:06:52Z,"Confirmed fixed in `4.30-I-builds/I20231103-1800`. Tested against many of the real source files that had the issue before, no imports are lost now. Thanks! Love you guys! <3","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5q40uF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/858,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/858,eclipse.jdt.ui,1941414829,858,Add N&N entry for quick fix to remove default case,noopur2507,8749449,Noopur Gupta,,CLOSED,2023-10-13T07:39:11Z,2023-10-13T08:29:18Z,"Add N&N entry for

- https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/850","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/858/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/858,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5o-KFE,eclipse.jdt.ui,1761124676,858,NA,noopur2507,8749449,Noopur Gupta,,NA,2023-10-13T08:29:18Z,2023-10-13T08:29:18Z,Added https://eclipse.dev/eclipse/news/4.30/jdt.php.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5o-KFE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/860,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/860,eclipse.jdt.ui,1943746340,860,Eclipse deadlocks when closing an editor among more than 10 when Breadcrumbs are enabled.,Sciuriware,121790387,Joop,,OPEN,2023-10-15T06:34:49Z,2023-10-15T06:34:49Z,"Refer to Eclipse.platform.ui/1079.
Deadlocks in Eclipse almost certainly are associated to having lots of editors open
and closing one, while Breadcrump display is enabled.
After disabling the latter option, with more than 20 editors open no lock down could be provoked any more.

The lock (no response, beach ball, had to force quit) occurred last on:
APPLE Mac Studio / Monterey 12.7 / JAVA 20.0.2 / Eclipse 4.29,
APPLE iMac 27'Rt / BigSur 11.7.10 / JAVA 20.0.2 / Eclipse 4.30M1
;JOOP!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/860/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/863,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/863,eclipse.jdt.ui,1947470058,863,Add unimplemented methods generates too many methods for generics,dreichart,12225148,,,CLOSED,2023-10-17T09:16:44Z,2023-10-19T21:50:20Z,"Consider the following classes/interfaces:
```java
abstract class C1<T> {
  public void a(T x) {}
}
interface I1 {
  void a(String x);
}
abstract class C2 extends C1<String> implements I1 {
  abstract void b();
}
class C3 extends C2 {}
```
Only Method b needs to be implemented on C3. But if you use the quickfix ""Add unimplemented methods"" both methods a and b are generated.

Tested on Eclipse 2023-03 and 2023-09.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/863/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/863,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5pSdwv,eclipse.jdt.ui,1766448175,863,NA,dreichart,12225148,,,NA,2023-10-17T13:41:49Z,2023-10-17T13:41:49Z,In Eclipse 2020-06 it worked correct.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5pSdwv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/863,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5pSfiy,eclipse.jdt.ui,1766455474,863,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-10-17T13:46:40Z,2023-10-17T13:46:40Z,"Still on master. 
Removing generics produces expected result:
```
abstract class C1 {
  public void a(String x) {}
}
interface I1 {
  void a(String x);
}
abstract class C2 extends C1 implements I1 {
  abstract void b();
}
class C3 extends C2 {}
```
=> 
```
abstract class C1 {
  public void a(String x) {}
}
interface I1 {
  void a(String x);
}
abstract class C2 extends C1 implements I1 {
  abstract void b();
}
class C3 extends C2 {

	@Override
	void b() {
		// TODO Auto-generated method stub
		
	}}
```

@jjohnstn : could you please check?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5pSfiy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/862,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/862,eclipse.jdt.ui,1947337122,862,[Feature Request] Refactoring for record constructor: change signature,LorenzoBettini,1202254,Lorenzo Bettini,,OPEN,2023-10-17T12:43:27Z,2024-03-19T17:56:57Z,"It would be nice to have a refactoring for changing the signature of a record constructor: this should change all the occurrences of the ""new"" instructions instantiating the record.

For example

```java
record MyRecord(String name, int age) { ... }
...
new MyRecord(""name"", 30);
```

refactored to

```java
record MyRecord(int age, String name) { ... }
...
new MyRecord(30, ""name"");
```

Of course, as with the standard ""Change method signature"", this should allow for new parameters (with the default value in new statements) or the removal of parameters (with the corresponding removal of the argument in new statements).

Do you think it would make sense?
For sure, it would be useful to me right now ;)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/862/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/862,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53rLnn,eclipse.jdt.ui,2007808487,862,NA,erik-brangs,9282509,Erik Brangs,,NA,2024-03-19T17:56:55Z,2024-03-19T17:56:55Z,"I also want this feature. Additionally, it would be nice if the default hotkey for the refactoring would be the same as the one for changing method signatures.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53rLnn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/864,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/864,eclipse.jdt.ui,1950127834,864,From: Nested records have unneeded import,arithauth,100252514,arithauth,,CLOSED,2023-10-18T16:10:44Z,2023-11-01T20:02:35Z,"Nested class in record has unneeded import. eclipse-jdt/eclipse.jdt.ui#890

This is because the organizing import cannot find record components' parent nodes.

[Bindings.java](https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/9930873f5d437241a7654e96cd51cc1aeb8a90f8/org.eclipse.jdt.core.manipulation/core%20extension/org/eclipse/jdt/internal/corext/dom/Bindings.java#L1218-L1220) is in charge of finding a parent. If the parent was not found from its child, the child is considered not declared in the scope of parent and child requests unneeded import.
```
if (lastLocation == decl.getBodyDeclarationsProperty()
    || lastLocation == decl.getJavadocProperty()
    || (decl instanceof EnumDeclaration && lastLocation == EnumDeclaration.ENUM_CONSTANTS_PROPERTY)) {
```
The third line would be for this situation:
```
enum A {
    X(new B());

    A(Object o) {}
    class B {}
}
```
It is necessary to find it also in this place:
```
record A(B b) {
    class B {}
}
```
So I need to add this condition to the if statement.
`|| (decl instanceof RecordDeclaration && lastLocation == RecordDeclaration.RECORD_COMPONENTS_PROPERTY)`

However I don't  know how to make pr. Could someone please make it?

I wrote test codes: [eclipse.jdt.ui-master/org.eclipse.jdt.ui.tests/ui/org/eclipse/jdt/ui/tests/core/ImportOrganizeTest16.java](https://github.com/eclipse-jdt/eclipse.jdt.ui/files/13030806/ImportOrganizeTest16.txt)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/864/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/864,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qjXEp,eclipse.jdt.ui,1787654441,864,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-10-31T17:21:23Z,2023-10-31T17:21:23Z,"Hi @arithauth Thanks.  I can make the PR but I would suggest you sign the ECA (Eclipse Contributor Agreement) as you are submitting a new test which has no licensing info in it.  I would assume that you merged code from ImportOrganizeTest and ImportOrganizeTest1d8 but you would need to confirm that.  If you do confirm that, the license can be attributed to IBM, the original implementors that the code was based on and then have a single copyright year of 2023 since it is a brand new file.  If you can't/won't sign the ECA, then I'll create a test from scratch.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qjXEp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/864,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qmvqn,eclipse.jdt.ui,1788541607,864,NA,arithauth,100252514,arithauth,,NA,2023-11-01T07:41:29Z,2023-11-01T07:41:29Z,"@jjohnstn I read Eclipse Contributor Agreement but I don't want to create eclipse profile by my real name. I am sorry; Can you make PR and tests sometime, since my test code is almost the copy of ""ImportOrganizeTest""s. Thank you for your time and help.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qmvqn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/864,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qqwI2,eclipse.jdt.ui,1789592118,864,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-11-01T20:02:35Z,2023-11-01T20:02:35Z,"No problem @arithauth , I created #892  This PR can be closed.  Thanks for looking into it.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qqwI2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/865,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/865,eclipse.jdt.ui,1952252340,865,UI Error when a generated Field (lombok) is used on annotation,c-koell,4134346,Claus Köll,c.koell@gmail.com,CLOSED,2023-10-19T13:22:45Z,2023-11-16T12:37:26Z,"We are using lombok 1.18.30 within eclipse 2023-09.

If we use the @FieldNameConstants Annotation a InnerClass with static final Fields will be generated.

There is no Compile Error but we see a Error on the Classs itself
![Eclipse IDE](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/4134346/8453bd6c-6bf8-470b-b4cf-83b77892aff6)


The Problems View is empty, and the code works if you run it ...

You will find a sample eclipse project here
[Sample-Project.zip](https://github.com/eclipse-jdt/eclipse.jdt.ui/files/13043088/Sample-Project.zip)

You must start eclipse with lombok installed
Sample eclipse.ini
```
-javaagent:C:/Temp/lombok-1.18.30.jar
-Xbootclasspath/a:C:/Temp/lombok-1.18.30.jar
```
You will also find [here](https://projectlombok.org/setup/eclipse) the docu regarding installation.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/865/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/865,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5pkMVv,eclipse.jdt.ui,1771095407,865,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-10-19T14:21:41Z,2023-10-19T14:21:41Z,"I assume Lombock rewrites class files ""under der hood"" and JDT UI isn't notified about that or uses what AST sees in the source of the Person.java which doesn't contain any ""Fields"" inner class. Not sure if that can be fixed in JDT UI.
Probably you should open an issue at Lombock tracker https://github.com/projectlombok/lombok/issues for the Eclipse integration part of Lombok.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5pkMVv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/865,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5p5swg,eclipse.jdt.ui,1776733216,865,NA,c-koell,4134346,Claus Köll,c.koell@gmail.com,NA,2023-10-24T08:13:26Z,2023-10-24T08:13:26Z,Created a issue in lombok project https://github.com/projectlombok/lombok/issues/3529,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5p5swg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/865,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5sJO7c,eclipse.jdt.ui,1814359772,865,NA,c-koell,4134346,Claus Köll,c.koell@gmail.com,NA,2023-11-16T12:37:26Z,2023-11-16T12:37:26Z,This Bug will be fixed in Lombok .. thanks,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5sJO7c/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/869,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/869,eclipse.jdt.ui,1955030232,869,StringBuffer to StringBuilder cleanup failure,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2023-10-20T21:24:53Z,2023-10-25T22:45:02Z,"The following scenario:

```
import java.io.StringWriter;

public class TestStringBufferCleanup {
	
	public void foo() {
		StringWriter stringWriter = new StringWriter();
		StringBuffer buffer = stringWriter.getBuffer();
		System.out.println(buffer.toString());
	}

}
```

when the StringBuffer to StringBuilder cleanup is applied creates a failure because buffer is converted to StringBuilder even though StringWriter.getBuffer() returns a StringBuffer.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/869/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/870,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/870,eclipse.jdt.ui,1955587261,870,Support generation of open rewrite snippet when performing refactorings,laeubi,1331477,Christoph Läubrich,,OPEN,2023-10-21T17:20:00Z,2023-10-21T17:22:24Z,"[OpenRewrite](https://docs.openrewrite.org/) allows to refactor large code bases ""offline"" from the actual refactoring happen.

It would be great if JDT has an option to generate an [OpenRewrite recipe](https://docs.openrewrite.org/recipes/java) whenever one performs a refactoring (for example add a method parameter). This can then be saved inside the project under [`META-INF/rewrite/my-recipes.yml`](https://docs.openrewrite.org/concepts-explanations/environment) to be shipped with the artifact so it can be applied afterwards to code bases using that library.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/870/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/871,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/871,eclipse.jdt.ui,1955590137,871,Support discovery / apply of OpenRewrite recipes,laeubi,1331477,Christoph Läubrich,,OPEN,2023-10-21T17:26:33Z,2023-10-21T17:26:33Z,"It would be cool if JDT contains a way to automatically discover [OpenRewrite](https://docs.openrewrite.org/) recipes as described here:

https://docs.openrewrite.org/concepts-explanations/environment

a user then could be provided with an option to apply this recipes to the current project or the whole workspace. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/871/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/874,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/874,eclipse.jdt.ui,1956904643,874,"Cleanup ""Add final modifier to private fields"" => blank final field entries may not have been initialized",jukzi,51790620,Jörg Kubitz,,CLOSED,2023-10-23T11:02:21Z,2023-10-23T11:05:33Z,"on org.eclipse.jface.tests.labelProviders.DecoratingStyledCellLabelProviderTest.entries the cleanup produces compilation error:

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/6efed643-aebc-4fe7-8737-f9811ad9b3b7)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/874/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/874,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5py6DV,eclipse.jdt.ui,1774952661,874,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-10-23T11:05:32Z,2023-10-23T11:05:32Z,only cause by rebase and a refactoring meanwhile: [324afa52fa82826130babf5ec30f14290461028c](https://github.com/eclipse-platform/eclipse.platform.ui/commit/324afa52fa82826130babf5ec30f14290461028c#diff-0e0734569a30a15ec31a87c1a2415b49c24256f9a67271048168d2e48378dde7L135),"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5py6DV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/876,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/876,eclipse.jdt.ui,1960998782,876,IllegalArgumentException: Invalid identifier : >capture#<,jukzi,51790620,Jörg Kubitz,,CLOSED,2023-10-25T09:53:20Z,2023-11-20T10:28:34Z,"Found this error in my error log 2 times. don't remember under which condition it appeared

eclipse.buildId=4.30.0.I20231022-1800
java.version=20.0.1

```
java.lang.IllegalArgumentException: Invalid identifier : >capture#<
	at org.eclipse.jdt.core.dom.SimpleName.setIdentifier(SimpleName.java:247)
	at org.eclipse.jdt.core.dom.AST.newSimpleName(AST.java:2874)
	at org.eclipse.jdt.core.dom.AST.newName(AST.java:2512)
	at org.eclipse.jdt.core.dom.rewrite.ImportRewrite.createBaseType(ImportRewrite.java:1535)
	at org.eclipse.jdt.core.dom.rewrite.ImportRewrite.internalAddImport(ImportRewrite.java:1590)
	at org.eclipse.jdt.core.dom.rewrite.ImportRewrite.addImport(ImportRewrite.java:1030)
	at org.eclipse.jdt.core.dom.rewrite.ImportRewrite.internalAddImport(ImportRewrite.java:1606)
	at org.eclipse.jdt.core.dom.rewrite.ImportRewrite.addImport(ImportRewrite.java:1030)
	at org.eclipse.jdt.internal.ui.text.correction.TypeMismatchSubProcessor.addTypeMismatchProposals(TypeMismatchSubProcessor.java:225)
	at org.eclipse.jdt.internal.ui.text.correction.QuickFixProcessor.process(QuickFixProcessor.java:459)
	at org.eclipse.jdt.internal.ui.text.correction.QuickFixProcessor.getCorrections(QuickFixProcessor.java:378)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionCollector.safeRun(JavaCorrectionProcessor.java:384)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.run(JavaCorrectionProcessor.java:342)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.process(JavaCorrectionProcessor.java:337)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectCorrections(JavaCorrectionProcessor.java:470)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:115)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.computeCompletionProposals(ProblemHover.java:89)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.<init>(ProblemHover.java:74)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover.createAnnotationInfo(ProblemHover.java:178)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover.getHoverInfo2(AbstractAnnotationHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/876/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/876,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qist8,eclipse.jdt.ui,1787480956,876,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-10-31T15:42:32Z,2023-10-31T15:42:32Z,"Hi @jukzi I tried a number of wildcard scenarios that caused a type mismatch and couldn't reproduce.  If you run into it again or remember what caused it initially, please add it here.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qist8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/876,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5sUHoO,eclipse.jdt.ui,1817213454,876,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-11-17T22:43:02Z,2023-11-17T22:43:02Z,"Hi @jukzi I added a check in the code to get the wildcard for a capture binding so if you are never able to reproduce, it should prevent the problem in the future.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5sUHoO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/876,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5saFQD,eclipse.jdt.ui,1818776579,876,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-11-20T10:28:34Z,2023-11-20T10:28:34Z,@jjohnstn  I close this issue based on your comment.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5saFQD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/884,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/884,eclipse.jdt.ui,1966975759,884,NLS @NonNull keys and the link towards messages.properties,frankbenoit,8962790,Frank Benoit,,OPEN,2023-10-26T09:11:24Z,2024-06-16T12:53:03Z,"In my project, we want to use the externalized strings and NLS mechanisms.
And we want the string constants to be non-null annotated, so it is not needed to use a 

````
var msg = MessageFormat.format(requireNonNull(Messages.mykey), value );
````

To achieve this, we tried to have a Builder, that patches the Messages class to be like

````
@NonNullByDefault
class Messages {
    public static String myKey = """"; //$NON-NLS-1$
}
var msg = MessageFormat.format(Messages.mykey, value );
````

The initialization with empty string avoid to get errors from the null-analysis.

However, with this initialization, the feature that you can Ctrl-Click on the constant and it jumps to the properties file location does no more work.

Is this a Bug or missing feature? Or is there a completely different approach I can go?


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/884/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/884,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qVylr,eclipse.jdt.ui,1784097131,884,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2023-10-29T12:44:45Z,2023-10-29T12:44:45Z,"Moved the issue to JDT/UI where Ctrl+Click is implemented. Feel free to move back to core, if SelectionEngine is actually the place where this could/should be fixed ...","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qVylr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/884,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5scJuj,eclipse.jdt.ui,1819319203,884,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-11-20T15:46:39Z,2023-11-20T15:46:39Z,Hi @frankbenoit An NLS static key string cannot have an initializer.  The code specifically looks for this.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5scJuj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/884,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5scQoi,eclipse.jdt.ui,1819347490,884,NA,frankbenoit,8962790,Frank Benoit,,NA,2023-11-20T16:02:24Z,2023-11-20T16:02:24Z,"@jjohnstn @stephan-herrmann is there a solution to combine the 2 wishes?
- Have NLS string constants be @NonNull, to avoid verbose null-checks when having null-annotation analysis activated
- Have NLS string constant be navigatable via Ctrl-Click","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5scQoi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/884,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5siglh,eclipse.jdt.ui,1820985697,884,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2023-11-21T14:03:05Z,2023-11-21T14:03:05Z,"> Hi @frankbenoit An NLS static key string cannot have an initializer. The code specifically looks for this.

@jjohnstn is that check essential? Could it be disabled (guarded by a preference)? Where is this check implemented?

@frankbenoit  thinking more about this conflict, I wonder if the trick using initialization to `""""` is actually the best approach. If the Messages class is fully controlled by you / your builder, would it be an option to just say:
```
@NonNullByDefault @SuppressWarnings(""null"")
```

This might be used to express: even though the compiler doesn't understand the logic of initialization, ""we know"" that all contained fields will never be null at runtime (provided that init didn't throw an exception already). I.e., the guarantee about non-null-ness in this class is not given by the compiler, but by you. Would that be acceptable?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5siglh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/884,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5sjQEg,eclipse.jdt.ui,1821180192,884,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-11-21T15:46:18Z,2023-11-21T15:46:18Z,"@stephan-herrmann The code is found in NLSHintHelper.getAccessorClassReference()

```
		if (accessorBinding == null) {

			if (parent instanceof MethodInvocation) {
				MethodInvocation methodInvocation= (MethodInvocation) parent;
				List<Expression> args= methodInvocation.arguments();
				if (args.size() != 1 && args.indexOf(nlsStringLiteral) != 0) {
					return null; // must be the only argument in lookup method
				}

				Expression firstArgument= args.get(0);
				ITypeBinding argumentBinding= firstArgument.resolveTypeBinding();
				if (argumentBinding == null || !""java.lang.String"".equals(argumentBinding.getQualifiedName())) { //$NON-NLS-1$
					return null;
				}

				ITypeBinding typeBinding= methodInvocation.resolveTypeBinding();
				if (typeBinding == null || !""java.lang.String"".equals(typeBinding.getQualifiedName())) { //$NON-NLS-1$
					return null;
				}

				IMethodBinding methodBinding= methodInvocation.resolveMethodBinding();
				if (methodBinding == null || !Modifier.isStatic(methodBinding.getModifiers())) {
					return null; // only static methods qualify
				}

				accessorBinding= methodBinding.getDeclaringClass();
			} else if (parent instanceof VariableDeclarationFragment) {
				VariableDeclarationFragment decl= (VariableDeclarationFragment)parent;
				if (decl.getInitializer() != null)
					return null;

				IVariableBinding variableBinding= decl.resolveBinding();
				if (variableBinding == null)
					return null;

				if (!Modifier.isStatic(variableBinding.getModifiers()))
					return null;

				accessorBinding= variableBinding.getDeclaringClass();
			}
		}

```

It kind of makes sense.  Any other string literal might be for appending to a message or specifying the bundle name.  They should not be searched for in the properties file.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5sjQEg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/884,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5skKyW,eclipse.jdt.ui,1821420694,884,NA,frankbenoit,8962790,Frank Benoit,,NA,2023-11-21T18:12:59Z,2023-11-21T18:12:59Z,"@stephan-herrmann the suppress warning does not help.
This creates a warning at the suppress annotation: At least one of the problems in category 'null' is not analysed due to a compiler option being ignored
And an error on the field: The @NonNull field abc may not have been initialized

@jjohnstn On the other hand, the NLS initializer code does not have any trouble with the initializer. 



","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5skKyW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/879,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/879,eclipse.jdt.ui,1963957888,879,Javadocs tag completions do not show up when JDK 21 compliance is selected,agentgt,567706,Adam Gent,,CLOSED,2023-10-26T16:46:57Z,2023-11-16T16:48:39Z,"To reproduce:

1. Create project with JDK 21 compile
2. Go to a method with and create a javadoc comment
3. Type `@` and do ctrl+space (completion) nothing will show up.
4. Switch the project to anything below JDK 21 and completion will come back.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/879/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/879,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5sLDCY,eclipse.jdt.ui,1814835352,879,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2023-11-16T16:48:39Z,2023-11-16T16:48:39Z,This one is fixed.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5sLDCY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/881,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/881,eclipse.jdt.ui,1965006307,881,[quick fix] Provide quick fix for illegal fall-through to a pattern in switch statement,noopur2507,8749449,Noopur Gupta,,CLOSED,2023-10-27T08:15:12Z,2023-11-06T06:43:47Z,"```
	private static void foo(Object o) {
		switch (o) {
		case Integer I:
			System.out.println(""Integer"");
			System.out.println(I);
		case String s when s.length() > 1:
			System.out.println(""String s && s.length()>1"");
			System.out.println(s);
			break;
		case Snippet x:
			System.out.println(""X"");
			System.out.println(x);
			break;
		default:
			System.out.println(""Object"");
		}
	}

	static void foo1(Object o, Number n) {
		switch (o) {
		case Integer s:
			System.out.println(""Integer"");
		case String s1:
			System.out.println(""String "");
		default:
			System.out.println(""Object"");
		}

		switch (n) {
		case Integer i:
			System.out.println(i);
		case Float f:
			System.out.println(f);
		case Object oo:
			break;
		}

		switch (n) {
		case Integer i:
		case Float f:
			System.out.println(f);
			break;
		default:
			break;
		}
	}
```

The above code has compile errors ""Illegal fall-through to a pattern"" at several locations. A quick fix can be provided to add the break statement above the case statement having error.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/881/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/882,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/882,eclipse.jdt.ui,1966059287,882,Convert String concatenation to Text block quick fix is missing,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,CLOSED,2023-10-27T19:12:19Z,2023-11-28T21:27:17Z,While there is save/cleanup action to do the conversion for the whole file it would be nice to have it as quick fix and be able to do the conversion explicitly on given code only during editing.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/882/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/887,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/887,eclipse.jdt.ui,1968527399,887,Eclipse sometimes throws Exception on simple quick fix,Sciuriware,121790387,Joop,,CLOSED,2023-10-30T14:35:53Z,2023-10-31T18:41:34Z,"Refer to attachments:
1) very simple method head with one parameter and return type,
2) result of CMD/1 (quick fix),
3) I clicked 'details' (nothing new shown).
![EclipseException1](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/121790387/0e9794f2-9b9c-40ae-8383-d84396ce02c6)
![EclipseException2](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/121790387/31afa8b2-9f6a-44c8-82d9-12ee21618c4c)
![EclipseException3](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/121790387/86a4b301-d885-4591-a18c-03f5add3c933)

No source was lost, however ... not yet.
;JOOP!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/887/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/887,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qanfj,eclipse.jdt.ui,1785362403,887,NA,Sciuriware,121790387,Joop,,NA,2023-10-30T14:39:56Z,2023-10-30T14:39:56Z,"P.S.: Eclipse version 4.30M1 running on APPLE iMac running MacOS 11.7.10 (Big Sur), with JDK 20.0.2 library.
;JOOP!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qanfj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/887,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qbHR4,eclipse.jdt.ui,1785492600,887,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-10-30T15:41:16Z,2023-10-30T15:41:16Z,"Please provide **full stack trace** of the reported error (you will find it in the Error Log view), and ideally isolated code that shows the problem. Screenshots of both are not very helpful.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qbHR4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/887,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qbQtt,eclipse.jdt.ui,1785531245,887,NA,Sciuriware,121790387,Joop,,NA,2023-10-30T15:59:51Z,2023-10-30T15:59:51Z,"Contents of the log.
[ErrorLog.txt](https://github.com/eclipse-jdt/eclipse.jdt.ui/files/13207247/ErrorLog.txt)

Trying to isolate the code into a new source file.
;JOOP!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qbQtt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/887,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qbV6N,eclipse.jdt.ui,1785552525,887,NA,Sciuriware,121790387,Joop,,NA,2023-10-30T16:10:15Z,2023-10-30T16:10:15Z,"Jstack output.
[JstackOutput.txt](https://github.com/eclipse-jdt/eclipse.jdt.ui/files/13207315/JstackOutput.txt)
;JOOP!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qbV6N/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/887,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qbZCZ,eclipse.jdt.ui,1785565337,887,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-10-30T16:17:02Z,2023-10-30T16:17:02Z,"OK, relevant part is:

```
eclipse.buildId=4.30.0.I20230927-1800
java.version=20.0.2
```

```
!ENTRY org.eclipse.jdt.ui 4 10001 2023-10-30 16:54:48.058
!MESSAGE Internal Error
!STACK 1
org.eclipse.core.runtime.CoreException: org.eclipse.jface.text.BadLocationException
	at org.eclipse.jdt.internal.ui.text.correction.proposals.LinkedCorrectionProposal.performChange(LinkedCorrectionProposal.java:175)
	at org.eclipse.jdt.ui.text.java.correction.CUCorrectionProposal.apply(CUCorrectionProposal.java:200)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.insertProposal(CompletionProposalPopup.java:1004)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.insertSelectedProposalWithMask(CompletionProposalPopup.java:951)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.widgetDefaultSelected(CompletionProposalPopup.java:697)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:123)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4646)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1524)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1547)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1532)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1325)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4413)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3989)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:645)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:552)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)
Caused by: org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.link.LinkedPositionGroup.enforceDisjoint(LinkedPositionGroup.java:162)
	at org.eclipse.jface.text.link.LinkedPositionGroup.enforceDisjoint(LinkedPositionGroup.java:175)
	at org.eclipse.jface.text.link.LinkedModeModel.enforceDisjoint(LinkedModeModel.java:305)
	at org.eclipse.jface.text.link.LinkedModeModel.addGroup(LinkedModeModel.java:415)
	at org.eclipse.jdt.internal.ui.viewsupport.LinkedProposalModelPresenter.enterLinkedMode(LinkedProposalModelPresenter.java:104)
	at org.eclipse.jdt.internal.ui.text.correction.proposals.LinkedCorrectionProposal.performChange(LinkedCorrectionProposal.java:164)
	... 32 more
!SUBENTRY 1 org.eclipse.jdt.ui 4 4 2023-10-30 16:54:48.059
!MESSAGE org.eclipse.jface.text.BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.link.LinkedPositionGroup.enforceDisjoint(LinkedPositionGroup.java:162)
	at org.eclipse.jface.text.link.LinkedPositionGroup.enforceDisjoint(LinkedPositionGroup.java:175)
	at org.eclipse.jface.text.link.LinkedModeModel.enforceDisjoint(LinkedModeModel.java:305)
	at org.eclipse.jface.text.link.LinkedModeModel.addGroup(LinkedModeModel.java:415)
	at org.eclipse.jdt.internal.ui.viewsupport.LinkedProposalModelPresenter.enterLinkedMode(LinkedProposalModelPresenter.java:104)
	at org.eclipse.jdt.internal.ui.text.correction.proposals.LinkedCorrectionProposal.performChange(LinkedCorrectionProposal.java:164)
	at org.eclipse.jdt.ui.text.java.correction.CUCorrectionProposal.apply(CUCorrectionProposal.java:200)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.insertProposal(CompletionProposalPopup.java:1004)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.insertSelectedProposalWithMask(CompletionProposalPopup.java:951)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.widgetDefaultSelected(CompletionProposalPopup.java:697)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:123)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4646)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1524)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1547)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1532)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1325)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4413)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3989)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:645)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:552)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)
```

I honestly don't see anything obvious in this stack, but I'm not familiar with the code in question.

@robstryker : I see that you've changed few things in LinkedProposalModel & Co code in the past, might be you have an idea what is going on here.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qbZCZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/887,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qdOh0,eclipse.jdt.ui,1786046580,887,NA,robstryker,630383,Rob Stryker,,NA,2023-10-30T21:07:30Z,2023-10-30T21:07:30Z,"I'll have a look at this tomorrow and see if there's anything obvious. I must admit I'm not an expert on this part of the code, but I did poke around it so it's worth it for me to dive a bit. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qdOh0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/887,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qiZYw,eclipse.jdt.ui,1787401776,887,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-10-31T15:04:15Z,2023-10-31T15:04:15Z,@Sciuriware Could you please try a recent I-build?  On 09-27 we reverted some changes to refactor proposal code which caused a BadLocation exception due to duplicated text edits.  We have since replaced that refactoring and it should all work fine now.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qiZYw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/887,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qid7v,eclipse.jdt.ui,1787420399,887,NA,robstryker,630383,Rob Stryker,,NA,2023-10-31T15:12:04Z,2023-10-31T15:12:04Z,"So I've tried to replicate, but I can't.  I'm using linux, and don't have access to a mac. 

I've attempted to replicate with an m1 installation, as well as running eclipse.jdt.ui from the m1 tag and eclipse.jdt.core from my best guess of what the m1 tag was (because eclipse.jdt.core doesn't seem to tag much at all...)

I see no exceptions or anything in the error log and have been unable to replicate. 

There was a BadLocation exception issue occurring on the day we tagged m1 for release (9/27), and a reversion of the commit at fault, but it's not clear to me whether the reversion made it into the release, because the m1 tag was the commit before the reversion. I strongly suspect the reversion DID make it into the release and thus m1 shouldn't be having any such issues. If M1 is still displaying issues like this, even though the faulty code was reverted before (we think) release, then it could be a new or unique issue. 

But as @jjohnstn  says, we did end up fixing all of the issues and so recent ibuilds should provide a better indication as to what the current state is. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qid7v/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/887,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qjXAc,eclipse.jdt.ui,1787654172,887,NA,Sciuriware,121790387,Joop,,NA,2023-10-31T17:21:15Z,2023-10-31T17:21:15Z,"@jjohnstn :: downloaded I20231031-0530,
Replayed the problem ..... NO Exception thrown.
Is it risky to continue my development with that version?
Looking out for the next major release.
Thanks for your effort.
;JOOP!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qjXAc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/887,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qjaii,eclipse.jdt.ui,1787668642,887,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-10-31T17:30:15Z,2023-10-31T17:30:15Z,"Hi @Sciuriware Using any I-build is not without its risks as new features/fixes are being added and not necessarily exposed to the rigorous testing once released, however, bugs are discovered even in major releases.  If you use I-builds for development, it is recommended to update to the latest I-build when you run into any problem as it is entirely possible the problem is already fixed as in this case.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qjaii/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/888,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/888,eclipse.jdt.ui,1968655895,888,"Errors hovering, opening declaration, type hierarchy and call hierarchy",SodiumZH,46860829,,,CLOSED,2023-10-30T15:32:18Z,2023-10-31T16:40:55Z,"The hovering features, opening declaration, type hierarchy and call hierarchy stopped working simutaneously on a specific project. On hovering it reported `ClassCastException`, while other operations reported `InvocationTargetException` caused by the same `ClassCastException`.
This problem occured only on a specific (Gradle) project. On other projects it worked correctly. Rebooting Eclipse and rebooting PC didn't work. Deleting then reimporting the project temporarily fixed it **only once** but after some editing operations the problem reoccured, after which deleting & reimporting again did never fix it anymore. Deleting the `.settings` and `.gradle` folders in the project root directory and reimporting the project temporarily fixed it one more time, but similarly it reoccured after some editing, and repeating the operation above did no longer work.

Eclipse version: 2023-09
JDK version: Java 17
====================================

Error information on hovering:

```
eclipse.buildId=4.29.0.20230907-1200
java.version=19.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

org.eclipse.jface.text
Error
Sun Oct 29 16:53:58 CST 2023
Unexpected runtime error while computing a text hover

java.lang.ClassCastException: class org.eclipse.jdt.internal.compiler.ast.LocalDeclaration cannot be cast to class org.eclipse.jdt.internal.compiler.ast.LambdaExpression (org.eclipse.jdt.internal.compiler.ast.LocalDeclaration and org.eclipse.jdt.internal.compiler.ast.LambdaExpression are in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @240ef200)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeLambdaExpression(Parser.java:9132)
	at org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeLambdaExpression(SelectionParser.java:874)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7927)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13145)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13400)
	at org.eclipse.jdt.internal.codeassist.select.SelectionParser.parse(SelectionParser.java:1665)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13357)
	at org.eclipse.jdt.internal.compiler.parser.Parser.dietParse(Parser.java:11743)
	at org.eclipse.jdt.internal.codeassist.select.SelectionParser.dietParse(SelectionParser.java:1489)
	at org.eclipse.jdt.internal.codeassist.SelectionEngine.select(SelectionEngine.java:994)
	at org.eclipse.jdt.internal.core.Openable.codeSelect(Openable.java:167)
	at org.eclipse.jdt.internal.core.CompilationUnit.codeSelect(CompilationUnit.java:389)
	at org.eclipse.jdt.internal.core.CompilationUnit.codeSelect(CompilationUnit.java:382)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractJavaEditorTextHover.getJavaElementsAt(AbstractJavaEditorTextHover.java:121)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:667)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:663)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
```


====================

Error opening declaration, type hierarchy and call hierarchy:
```
eclipse.buildId=4.29.0.20230907-1200
java.version=19.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

org.eclipse.jdt.ui
Error
Sun Oct 29 17:12:47 CST 2023
Internal Error

java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:395)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.ui.internal.progress.ProgressMonitorJobsDialog.run(ProgressMonitorJobsDialog.java:230)
	at org.eclipse.ui.internal.progress.ProgressManager.lambda$26(ProgressManager.java:836)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile(ProgressManager.java:869)
	at org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile(ProgressManager.java:845)
	at org.eclipse.jdt.internal.ui.actions.SelectionConverter.performForkedCodeResolve(SelectionConverter.java:261)
	at org.eclipse.jdt.internal.ui.actions.SelectionConverter.codeResolveOrInputForked(SelectionConverter.java:124)
	at org.eclipse.jdt.internal.ui.callhierarchy.OpenCallHierarchyAction.run(OpenCallHierarchyAction.java:98)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:278)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:252)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4274)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4072)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3660)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:645)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:552)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)
Caused by: java.lang.ClassCastException: class org.eclipse.jdt.internal.compiler.ast.LocalDeclaration cannot be cast to class org.eclipse.jdt.internal.compiler.ast.LambdaExpression (org.eclipse.jdt.internal.compiler.ast.LocalDeclaration and org.eclipse.jdt.internal.compiler.ast.LambdaExpression are in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @240ef200)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeLambdaExpression(Parser.java:9132)
	at org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeLambdaExpression(SelectionParser.java:874)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7927)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13145)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13400)
	at org.eclipse.jdt.internal.codeassist.select.SelectionParser.parse(SelectionParser.java:1665)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13357)
	at org.eclipse.jdt.internal.compiler.parser.Parser.dietParse(Parser.java:11743)
	at org.eclipse.jdt.internal.codeassist.select.SelectionParser.dietParse(SelectionParser.java:1489)
	at org.eclipse.jdt.internal.codeassist.SelectionEngine.select(SelectionEngine.java:994)
	at org.eclipse.jdt.internal.core.Openable.codeSelect(Openable.java:167)
	at org.eclipse.jdt.internal.core.CompilationUnit.codeSelect(CompilationUnit.java:389)
	at org.eclipse.jdt.internal.core.CompilationUnit.codeSelect(CompilationUnit.java:382)
	at org.eclipse.jdt.internal.ui.actions.SelectionConverter.codeResolve(SelectionConverter.java:270)
	at org.eclipse.jdt.internal.ui.actions.SelectionConverter$1CodeResolveRunnable.run(SelectionConverter.java:254)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/888/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/888,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qbeo5,eclipse.jdt.ui,1785588281,888,NA,SodiumZH,46860829,,,NA,2023-10-30T16:29:29Z,2023-10-30T16:29:29Z,"Also it often spams `Unhandled event loop exception` with the same `ClassCastException`, which has already begun to happen before the hovering problem occured.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qbeo5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/888,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qdFzg,eclipse.jdt.ui,1786010848,888,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2023-10-30T20:46:03Z,2023-10-30T20:46:03Z,Hi @SodiumZH This is a duplicate of:  https://github.com/eclipse-jdt/eclipse.jdt.core/issues/1195 which has been fixed as of 4.30 M1 and will be released in the up-coming 2023-12 release.  You can try out the latest milestone 4.30 M2 via: https://www.eclipse.org/downloads/packages/release/2023-12/m2,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qdFzg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/888,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qjG6W,eclipse.jdt.ui,1787588246,888,NA,SodiumZH,46860829,,,NA,2023-10-31T16:40:54Z,2023-10-31T16:40:54Z,"> Hi @SodiumZH This is a duplicate of: [eclipse-jdt/eclipse.jdt.core#1195](https://github.com/eclipse-jdt/eclipse.jdt.core/issues/1195) which has been fixed as of 4.30 M1 and will be released in the up-coming 2023-12 release. You can try out the latest milestone 4.30 M2 via: https://www.eclipse.org/downloads/packages/release/2023-12/m2

It worked. Thanks!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qjG6W/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/889,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/889,eclipse.jdt.ui,1968759531,889,Cannot stop JUnit 5 tests execution,trancexpress,24752155,Simeon Andreev,,CLOSED,2023-10-30T16:22:18Z,2024-02-15T12:12:15Z,"To reproduce, run a JUnit 5 test case and try to stop the tests execution via the JUnit view stop button. E.g. import the project from the attached archive: 
[TestJunit5Abort.zip](https://github.com/eclipse-jdt/eclipse.jdt.ui/files/13207440/TestJunit5Abort.zip)

See also this screen recording: 

https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/24752155/ec6f6b73-37db-4c8b-b2c7-bf87042e464f

Judging from this, maybe its not possible to stop the JUnit 5 tests using JUnit 5 API? https://github.com/junit-team/junit5/issues/1880


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/889/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/889,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qbbxi,eclipse.jdt.ui,1785576546,889,NA,trancexpress,24752155,Simeon Andreev,,NA,2023-10-30T16:23:03Z,2023-10-30T16:23:03Z,"Originally opened at the PDE repository: https://github.com/eclipse-pde/eclipse.pde/issues/832

There already is some discussion on the issue, see the link above.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qbbxi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/889,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qbf65,eclipse.jdt.ui,1785593529,889,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-10-30T16:32:22Z,2023-10-30T16:32:22Z,"Seeing the ""progress"" on https://github.com/junit-team/junit5/issues/1880 I wonder if we can ""skip"" test execution in the `org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(TestExecution)` if we ""see"" the IDE requested test stop.

To ""see"" the cancellation from the IDE we might simply poll for some temp file etc.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qbf65/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/889,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qbtCa,eclipse.jdt.ui,1785647258,889,NA,trancexpress,24752155,Simeon Andreev,,NA,2023-10-30T16:48:56Z,2023-10-30T16:48:56Z,"Looks like `org.eclipse.jdt.internal.junit.runner.TestExecution.fStopListeners` is empty for JUnit 5 launches.

For JUnit 4, there is a listener registered in `org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(TestExecution)`:

```
	@Override
	public void run(TestExecution execution) {
		final RunNotifier notifier= new RunNotifier();
		notifier.addListener(new JUnit4TestListener(execution.getListener()));
		execution.addStopListener(new IStopListener() {
			@Override
			public void stop() {
				notifier.pleaseStop();
			}
		});
```

It calls `org.junit.runner.notification.RunNotifier.pleaseStop()`, which is what is supposed to be implemented in: https://github.com/junit-team/junit5/issues/1880","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qbtCa/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/889,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qbtz_,eclipse.jdt.ui,1785650431,889,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-10-30T16:50:42Z,2023-10-30T16:50:42Z,"Yes, I see... Actually I've just re-invented the wheel :-) 
`org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.ReaderThread.run()` reads from system.in to get the ""stop"".

So I'm open for (dirty) proposals how we can pass ""please stop"" to the JUnit5, even if we have to override something in the JUnit 5 framewor as proposed in [this comment](https://github.com/junit-team/junit5/issues/1880#issuecomment-716554922).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qbtz_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/889,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qqAQA,eclipse.jdt.ui,1789395968,889,NA,trancexpress,24752155,Simeon Andreev,,NA,2023-11-01T17:50:26Z,2023-11-01T17:50:26Z,"I've set a PR which sets a VM property if the stop is requested during JUnit 5 tests: https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/891

The stop command is sent over a socket, so its not possible to know from a custom JUnit 5 test framework, when the JUnit view requested a stop.

A custom JUnit 5 test framework can use this property to stop test execution. This doesn't help with the problem here, but potentially enables users to stop the test execution via their own test framework code.

Before https://github.com/junit-team/junit5/issues/1880 is fixed, I don't know if we can do anything about the issue here. And it doesn't look like the JUnit 5 issue is going to be fixed. Apparently implementing the stop is ""bad"" when combined with design decisions made for JUnit 5 (...):  https://github.com/junit-team/junit5/issues/1880#issuecomment-572935329","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qqAQA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/889,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5quUWp,eclipse.jdt.ui,1790526889,889,NA,trancexpress,24752155,Simeon Andreev,,NA,2023-11-02T11:11:14Z,2023-11-02T11:11:14Z,"With the integration of #891, the VM property `JDT_JUNIT5_RUNNER_STOP_REQUESTED` can be used to detect a stopped JUnit 5 test execution, assuming each test has either a custom (user) test template annotation, or a base class, or some common code ran when setting up the test.

E.g. a base class with a `@BeforeEach` method:

```
	@BeforeEach
	public void setUp() {
		assumeTrue(System.getProperty(JUnit5TestReference.STOP_REQUESTED_VM_PROPERTY_NAME) == null);
	}
```

Or a custom `@TestTemplate` annotation:

```
    @Override
    public boolean supportsTestTemplate(ExtensionContext context) {
        return System.getProperty(JUnit5TestReference.STOP_REQUESTED_VM_PROPERTY_NAME) == null;
    }
```

(or just hard-code the property name)

In the tests supported by us, we have both, which is why we opted for the change. It doesn't fix the problem in this issue, so we are keeping the issue open - until we can stop JUnit 5 test execution, either with the help of some JUnit 5 API or due to some hack in the JDT UI code.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5quUWp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/889,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qv87u,eclipse.jdt.ui,1790955246,889,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-11-02T15:26:29Z,2023-11-02T15:26:29Z,"> With the integration of #891, the VM property `JDT_JUNIT5_RUNNER_STOP_REQUESTED` can be used to detect a stopped JUnit 5 test execution

**Update**: with https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/893, the property is removed. Simeon found a workaround that we can use to stop tests on JUnit5. See details in the PR. Not nice, but should work out of the box for everyone.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5qv87u/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/897,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/897,eclipse.jdt.ui,1975693821,897,CPListElement does not take existing attributes into account,laeubi,1331477,Christoph Läubrich,,OPEN,2023-11-03T08:44:24Z,2023-11-03T08:44:24Z,"`LibrariesWorkbookPage` calls `org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement.CPListElement(Object, IJavaProject, IClasspathEntry, int, IPath, IModuleDescription, boolean, IResource, IPath)` but in the case of an edited classpath entry every custom attribute is not updated because `CPListElement` ignores the `IClasspathEntry` supplied extra attributes.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/897/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/900,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/900,eclipse.jdt.ui,1975778272,900,Add N&N for quick fix to insert break statement ,noopur2507,8749449,Noopur Gupta,,CLOSED,2023-11-03T09:30:13Z,2023-11-06T06:44:09Z,Add N&N entry for https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/881.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/900/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/903,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/903,eclipse.jdt.ui,1976958734,903,"Test projects are being imported when using the ""official"" Oomph installation",fedejeanne,2205684,Federico Jeanne,,CLOSED,2023-11-03T21:33:07Z,2023-11-07T06:12:17Z,"See https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/902#discussion_r1382210377

When using this installer, some Test projects are being added to the WS (see [this other comment](https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/902#discussion_r1382172743))

@merks fyi

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/903/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/903,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5q5I9v,eclipse.jdt.ui,1793363823,903,NA,merks,208716,Ed Merks,,NA,2023-11-04T06:54:59Z,2023-11-04T06:54:59Z,"The assertion of the issue title does not appear to be true.  In my SDK workspace, which includes the JDT setup, you can see that the source locator property is set to not consider nested projects and a manual ""import projects"" on the clone shows that a bunch of nested projects are not yet imported into the workspace.

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/208716/f3b53230-764c-4ffc-8e60-83253648cf16)

So I don't think it is the Oomph setup that did the importing of those projects.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5q5I9v/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/903,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5q97lN,eclipse.jdt.ui,1794619725,903,NA,fedejeanne,2205684,Federico Jeanne,,NA,2023-11-06T11:32:52Z,2023-11-06T11:32:52Z,"I tested again in **Windows** and the configuration seems fine: the folders are checked out from GH but they are not added as projects so I don't get any findings in the _Problems_ view 👍 
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/2205684/b5edc420-2a39-4c6b-a70a-be39e2c8e723)

But still, I would like to test it out on **Mac** before we close this issue (I don't have it on me right now) since that's where the error happened. 

@merks do you think this could be related to some kind of caching issue? I usually don't develop on my Mac so chances are that the caches there are totally outdated. BTW I followed [your instructions](https://github.com/eclipse-equinox/p2/pull/349#discussion_r1373044370) when I installed the (faulty) Eclipse in my Mac and I will do so tomorrow when I test it again :)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5q97lN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/903,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5rKX1s,eclipse.jdt.ui,1797881196,903,NA,fedejeanne,2205684,Federico Jeanne,,NA,2023-11-07T06:12:17Z,2023-11-07T06:12:17Z,"Same thing in my Mac, the error is not reproducible...

I don't know how I got those ""projects"" imported into my WS, I must have cloned the Git Repos after the installation and wrongly searched for nested projects and forgotten about it.

@merks sorry for the confusion and thank you for your support! ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5rKX1s/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/906,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/906,eclipse.jdt.ui,1980714069,906,Externalize Strings does not supporting Java text-blocks,frankbenoit,8962790,Frank Benoit,,CLOSED,2023-11-07T07:25:52Z,2023-11-28T22:22:07Z,"Given this string literal:
````
return """"""
    some content
    """""";
````


If I use the dialog to add a Java text block as externalized string, it puts the string literal including 2 double-quotes at the beginning and end, all the indentation of the literal, the \r\n from the source file.
Instead I expect that it only puts in the real string content only.

Generated value:

````
mykey=""""\r\n    some content\r\n    """"
````

I expect the value to be:

````
mykey=some content\n
````

I searched in the code and found that the implementation
org.eclipse.jdt.internal.corext.refactoring.nls.NLSHint.stripQuotes(String)
is not good enough for text block.
Like removing the quotes, removing the indentation, stripping trailing spaces, handling backslash in last character of line ...
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/906/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/908,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/908,eclipse.jdt.ui,1983399502,908,9 JavaLeakTest failed in I20231107-1800,jukzi,51790620,Jörg Kubitz,,CLOSED,2023-11-08T11:37:57Z,2023-11-08T15:19:46Z,"https://download.eclipse.org/eclipse/downloads/drops4/I20231107-1800/testResults.php
for example
```
java.lang.AssertionError: Expected instance count: 1, actual: 2
Element 0
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor
org.eclipse.jdt.internal.ui.javaeditor.ASTProvider#fActiveEditor -> org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor@71c87181
org.eclipse.jdt.internal.ui.JavaPlugin#fASTProvider -> org.eclipse.jdt.internal.ui.javaeditor.ASTProvider@22881b1c
org.eclipse.osgi.internal.serviceregistry.ServiceRegistrationImpl#service -> org.eclipse.jdt.ui
java.lang.Object[289] -> {org.eclipse.osgi.service.debug.DebugOptionsListener}={listener.symbolic.name=org.eclipse.jdt.ui, s
java.util.ArrayList#elementData -> [Ljava.lang.Object;@498d7c57
org.eclipse.osgi.internal.serviceregistry.ServiceRegistry#allPublishedServices -> [{org.eclipse.osgi.framework.log.FrameworkLog}={service.id=4, service.bundleid=0, service.scope=bun
org.eclipse.osgi.internal.framework.EquinoxContainer#serviceRegistry -> org.eclipse.osgi.internal.serviceregistry.ServiceRegistry@1400984b
org.eclipse.osgi.internal.loader.BundleLoader#container -> Equinox Container: 133b45d6-7b15-4608-8c5d-5b237fa707e5
org.eclipse.osgi.internal.loader.EquinoxClassLoader#delegate -> org.eclipse.jdt.ui.tests_3.15.200.v20231101-2346
org.eclipse.osgi.internal.loader.EquinoxClassLoader -> org.eclipse.osgi.internal.loader.EquinoxClassLoader@728b62f1[org.eclipse.jdt.ui.tests:3.15.200.v202

Element 1
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor
org.eclipse.ui.texteditor.TextEditorAction#fTextEditor -> org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor@47fe61bc
org.eclipse.jface.commands.ActionHandler#action -> org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction@1f51040d
org.eclipse.ui.internal.handlers.E4HandlerProxy#handler -> ActionHandler(org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction@1f51040d)
org.eclipse.e4.core.commands.internal.HandlerServiceHandler#currentStateHandler -> E4HandlerProxy [handler=ActionHandler(org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationActi
org.eclipse.core.commands.Command#handler -> WorkbenchHandlerServiceHandler(""org.eclipse.ui.edit.cut"")
org.eclipse.core.commands.ParameterizedCommand#command -> Command(org.eclipse.ui.edit.cut,Cut,
Cut the selection to the clipboard,
Category(org.eclipse.u
org.eclipse.jface.bindings.Binding#command -> ParameterizedCommand(Command(org.eclipse.ui.edit.cut,Cut,
Cut the selection to the clipboard,
C
org.eclipse.jface.bindings.Binding[140] -> Binding(COMMAND+X,
ParameterizedCommand(Command(org.eclipse.ui.edit.cut,Cut,
Cut the selection t
org.eclipse.jface.bindings.BindingManager#bindings -> [Lorg.eclipse.jface.bindings.Binding;@cfef34
org.eclipse.ui.internal.Workbench#bindingManager -> org.eclipse.jface.bindings.BindingManager@3667faa8
org.eclipse.osgi.internal.serviceregistry.ServiceRegistrationImpl#service -> org.eclipse.ui.internal.Workbench@320bfc61
java.lang.Object[228] -> {org.eclipse.ui.IWorkbench}={service.id=234, service.bundleid=283, service.scope=singleton, id=9b95
java.util.ArrayList#elementData -> [Ljava.lang.Object;@498d7c57
org.eclipse.osgi.internal.serviceregistry.ServiceRegistry#allPublishedServices -> [{org.eclipse.osgi.framework.log.FrameworkLog}={service.id=4, service.bundleid=0, service.scope=bun
org.eclipse.osgi.internal.framework.EquinoxContainer#serviceRegistry -> org.eclipse.osgi.internal.serviceregistry.ServiceRegistry@1400984b
org.eclipse.osgi.internal.loader.BundleLoader#container -> Equinox Container: 133b45d6-7b15-4608-8c5d-5b237fa707e5
org.eclipse.osgi.internal.loader.EquinoxClassLoader#delegate -> org.eclipse.jdt.ui.tests_3.15.200.v20231101-2346
org.eclipse.osgi.internal.loader.EquinoxClassLoader -> org.eclipse.osgi.internal.loader.EquinoxClassLoader@728b62f1[org.eclipse.jdt.ui.tests:3.15.200.v202

. Actual: 0
at org.junit.Assert.fail(Assert.java:89)
at org.junit.Assert.failEquals(Assert.java:187)
at org.junit.Assert.assertNotEquals(Assert.java:201)
at org.eclipse.jdt.ui.leaktest.LeakTestCase.assertInstanceCount(LeakTestCase.java:129)
at org.eclipse.jdt.ui.tests.leaks.JavaLeakTest.testJavaEditorBreadcrumbCloseOneOfTwo2(JavaLeakTest.java:263)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
```

i can not run the test locally .. failing with

```
java.lang.RuntimeException: JVM settings for --add-modules, --add-opens, and --illegal-access are probably missing.
Exception : 
Unable to make field transient java.util.HashMap$Node[] java.util.HashMap.table accessible: module java.base does not ""opens java.util"" to unnamed module @13edc1bc
	at org.eclipse.jdt.ui.leaktest.reftracker.ReferenceTracker.setAccessible(ReferenceTracker.java:113)
	at org.eclipse.jdt.ui.leaktest.reftracker.ReferenceTracker.followFieldReference(ReferenceTracker.java:70)
	at org.eclipse.jdt.ui.leaktest.reftracker.ReferenceTracker.visit(ReferenceTracker.java:151)
	at org.eclipse.jdt.ui.leaktest.reftracker.ReferenceTracker.start(ReferenceTracker.java:175)
	at org.eclipse.jdt.ui.leaktest.LeakTestCase.collect(LeakTestCase.java:58)
	at org.eclipse.jdt.ui.leaktest.LeakTestCase.assertInstanceCount(LeakTestCase.java:123)
	at org.eclipse.jdt.ui.tests.leaks.JavaLeakTest.testJavaEditorBreadcrumbCloseOneOfTwo2(JavaLeakTest.java:252)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make field transient java.util.HashMap$Node[] java.util.HashMap.table accessible: module java.base does not ""opens java.util"" to unnamed module @13edc1bc
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:354)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:297)
	at java.base/java.lang.reflect.Field.checkCanSetAccessible(Field.java:178)
	at java.base/java.lang.reflect.Field.setAccessible(Field.java:172)
	at org.eclipse.jdt.ui.leaktest.reftracker.ReferenceTracker.setAccessible(ReferenceTracker.java:109)
	... 7 more
```

the error message is not explicit about what parameters to add","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/908/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/908,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5rZced,eclipse.jdt.ui,1801832349,908,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-11-08T12:51:28Z,2023-11-08T12:51:28Z,Should be fixed by https://github.com/eclipse-platform/eclipse.platform.ui/pull/1291,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5rZced/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/908,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5raAv8,eclipse.jdt.ui,1801980924,908,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-11-08T14:17:41Z,2023-11-08T14:17:41Z,The tests tries to walk the heap to see if there are leaks. We may need to remove the test in future as it is not possible to access private members with new JDKs anymore. Also there is no guarantee to garbage collection in time. Or rework by creating heapdumps and parsing them. But that seems to be an overkill.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5raAv8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/908,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5raer5,eclipse.jdt.ui,1802103545,908,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-11-08T15:19:46Z,2023-11-08T15:19:46Z,"Sure. Feel free to contribute :-) But so far the test works with Java 21, so it is good to have it.

BTW the test is green again, see https://download.eclipse.org/eclipse/downloads/drops4/I20231108-0600/testResults.php.

Closing.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5raer5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/911,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/911,eclipse.jdt.ui,1984393366,911,"Switch back to ""Completion inserts"" instead of ""Completion overrides"" as default",vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,CLOSED,2023-11-08T21:02:15Z,2023-11-09T04:14:36Z,"I used to be one of or THE driver (don't remember exactly) to switch code completion to ""Completion overrides"".

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/139910/1cb02906-5a20-4e05-8362-41c1e4c8a7f4)

IIRC @rgrunber said somewhere at a later point that he preferred the old setting. Not sure if @jjohnstn issued an opinion on this in the past. (Please correct me if I remember wrong).

These days I find the replacement highly annoying, maybe because I use more and more builder API, like we have in Jface. I also see my IDE trainees struggling with the current code completion behavior and it is not intuitive that you can toogle this with holder CNTR to new users.

WDYT? Could / should we switch back to the old setting?

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/139910/6aa55a40-824b-4772-976f-f4cd18b7993c)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/911/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/911,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5rcqEV,eclipse.jdt.ui,1802674453,911,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2023-11-08T21:07:03Z,2023-11-08T21:07:03Z,"I stand corrected, both behaviors are similar annoying.

I frequently have to change a method name using the same parameters, e.g. I have

```
				partService.createPart(detail, EPartService.PartState.ACTIVATE);
```
which I want to change to 

```
				partService.showPart(detail, EPartService.PartState.ACTIVATE);

```

So I move to `partService.` start typing show hit code completion and get ""broken"" output. 

With override:

```
				partService.showPart(detail, null)
```
With insert

```
				partService.showPart(detail, null)(detail, EPartService.PartState.ACTIVATE);

```

So I close this one, both proposals are not want I would like to have.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5rcqEV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/911,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5reaus,eclipse.jdt.ui,1803135916,911,NA,humphreygao,52394598,,,NA,2023-11-09T04:14:36Z,2023-11-09T04:14:36Z,It would be good if the Java Editor choose the correct behavior automatically.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5reaus/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/915,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/915,eclipse.jdt.ui,1987387887,915,"Exception in ""Use Comparator.comparing()"" cleanup",SimplyDanny,16365760,Danny Mösch,,CLOSED,2023-11-10T10:51:47Z,2024-03-14T09:35:09Z,"Triggering cleanups on a class like

```java
package abc;

import java.util.Map.Entry;
import java.util.stream.Stream;

class C {

    void sort() {
        Stream.<Entry<String, String>>of().sorted((entry1, entry2) -> entry1.getKey().compareTo(entry2.getKey()));
    }

    void doNothing(final Entry<String, String> entry) {
        // Nothing
    }
}
```

causes an exception:

```
java.lang.IllegalArgumentException: Invalid identifier : >Entry<String,String><
	at org.eclipse.jdt.core.dom.SimpleName.setIdentifier(SimpleName.java:247)
	at org.eclipse.jdt.core.dom.AST.newSimpleName(AST.java:2853)
	at org.eclipse.jdt.core.dom.AST.newName(AST.java:2491)
	at org.eclipse.jdt.internal.corext.dom.ASTNodeFactory.newName(ASTNodeFactory.java:327)
	at org.eclipse.jdt.internal.ui.fix.ComparingOnCriteriaCleanUp$ComparingOnCriteriaOperation.buildMethod(ComparingOnCriteriaCleanUp.java:552)
	at org.eclipse.jdt.internal.ui.fix.ComparingOnCriteriaCleanUp$ComparingOnCriteriaOperation.rewriteAST(ComparingOnCriteriaCleanUp.java:520)
	at org.eclipse.jdt.internal.corext.fix.CompilationUnitRewriteOperationsFix$CompilationUnitRewriteOperation.rewriteAST(CompilationUnitRewriteOperationsFix.java:45)
	at org.eclipse.jdt.internal.corext.fix.CompilationUnitRewriteOperationsFixCore.createChange(CompilationUnitRewriteOperationsFixCore.java:98)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.calculateChange(CleanUpRefactoring.java:775)
	at org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener.saved(CleanUpPostSaveListener.java:384)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$4.run(CompilationUnitDocumentProvider.java:1618)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.notifyPostSaveListeners(CompilationUnitDocumentProvider.java:1612)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.commitWorkingCopy(CompilationUnitDocumentProvider.java:1396)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$3.execute(CompilationUnitDocumentProvider.java:1471)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider$DocumentProviderOperation.run(TextFileDocumentProvider.java:133)
	at org.eclipse.ui.actions.WorkspaceModifyDelegatingOperation.execute(WorkspaceModifyDelegatingOperation.java:71)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.lambda$0(WorkspaceModifyOperation.java:110)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2453)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2478)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:131)
	at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:76)
	at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:66)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.executeOperation(TextFileDocumentProvider.java:461)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.saveDocument(TextFileDocumentProvider.java:764)
	at org.eclipse.ui.texteditor.AbstractTextEditor.performSave(AbstractTextEditor.java:5009)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSave(CompilationUnitEditor.java:1267)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(CompilationUnitEditor.java:1321)
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.doSave(AbstractTextEditor.java:7185)
	at org.eclipse.ui.Saveable.doSave(Saveable.java:213)
	at org.eclipse.ui.internal.SaveableHelper.doSaveModel(SaveableHelper.java:333)
	at org.eclipse.ui.internal.SaveableHelper.lambda$1(SaveableHelper.java:196)
	at org.eclipse.ui.internal.SaveableHelper.lambda$3(SaveableHelper.java:271)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.ui.internal.WorkbenchWindow.lambda$7(WorkbenchWindow.java:2346)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2344)
	at org.eclipse.ui.internal.SaveableHelper.runProgressMonitorOperation(SaveableHelper.java:278)
	at org.eclipse.ui.internal.SaveableHelper.runProgressMonitorOperation(SaveableHelper.java:260)
	at org.eclipse.ui.internal.SaveableHelper.saveModels(SaveableHelper.java:207)
	at org.eclipse.ui.internal.SaveableHelper.savePart(SaveableHelper.java:150)
	at org.eclipse.ui.internal.WorkbenchPage.saveSaveable(WorkbenchPage.java:3825)
	at org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:3838)
	at org.eclipse.ui.internal.handlers.SaveHandler.execute(SaveHandler.java:82)
	at org.eclipse.ui.internal.handlers.HandlerProxy.execute(HandlerProxy.java:283)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:300)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:234)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:655)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1286)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1594)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4866)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4744)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5040)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:645)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:552)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)
```

The specific cleanup that causes the error is `sp_cleanup.comparing_on_criteria`. Disabling it makes everything work well again.

Version details:

```
Version: 2023-09 (4.29.0)
Build id: 20230907-1323
Java: 20.0.2
Platform: Windows
```

According to the exception, this might rather be a parser issue. Since it happens during a cleanup, I create the issue here first.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/915/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/915,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5rncc_,eclipse.jdt.ui,1805502271,915,NA,SimplyDanny,16365760,Danny Mösch,,NA,2023-11-10T10:52:55Z,2023-11-10T10:52:55Z,Might be related to #174.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5rncc_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/915,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x2og2,eclipse.jdt.ui,1910147126,915,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-25T12:54:19Z,2024-01-25T12:54:19Z,"174 was fixed, is this still an issue?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x2og2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/915,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x6Hyq,eclipse.jdt.ui,1911061674,915,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-01-25T21:55:32Z,2024-01-25T21:55:32Z,@jukzi It appears to still be occurring.  i'll fix it for M3,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x6Hyq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/915,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53CCj7,eclipse.jdt.ui,1997023483,915,NA,SimplyDanny,16365760,Danny Mösch,,NA,2024-03-14T09:35:08Z,2024-03-14T09:35:08Z,@jjohnstn: I still get the same error in Eclipse 2024-03 (4.31.0).,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53CCj7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/916,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/916,eclipse.jdt.ui,1987605231,916,CleanUpTabPag: IllegalArgumentException,jukzi,51790620,Jörg Kubitz,,CLOSED,2023-11-10T13:14:17Z,2023-11-10T13:53:40Z,"```
java.lang.IllegalArgumentException: 
	at org.eclipse.core.runtime.Assert.isLegal(Assert.java:68)
	at org.eclipse.core.runtime.Assert.isLegal(Assert.java:52)
	at org.eclipse.jdt.internal.ui.preferences.cleanup.CleanUpTabPage.setSelectedCleanUpCount(CleanUpTabPage.java:93)
	at org.eclipse.jdt.internal.ui.preferences.cleanup.CleanUpTabPage.lambda$3(CleanUpTabPage.java:215)
	at java.base/java.util.Observable.notifyObservers(Observable.java:174)
	at java.base/java.util.Observable.notifyObservers(Observable.java:130)
	at org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$ButtonPreference.checkboxChecked(ModifyDialogTabPage.java:195)
	at org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage$ButtonPreference.setChecked(ModifyDialogTabPage.java:218)
	at org.eclipse.jdt.internal.ui.preferences.cleanup.CleanUpTabPage.doSetAll(CleanUpTabPage.java:137)
	at org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage.lambda$2(ModifyDialogTabPage.java:906)
	at org.eclipse.swt.events.SelectionListener$1.widgetSelected(SelectionListener.java:84)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4273)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4071)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3659)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.jdt.internal.ui.fix.CleanUpRefactoringWizard$CleanUpConfigurationPage$2.widgetSelected(CleanUpRefactoringWizard.java:365)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4273)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4071)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3659)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.lambda$0(RefactoringWizardOpenOperation.java:190)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:209)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:126)
	at org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:41)
	at org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter.startCleanupRefactoring(RefactoringExecutionStarter.java:257)
	at org.eclipse.jdt.internal.ui.actions.AllCleanUpsAction.performRefactoring(AllCleanUpsAction.java:71)
	at org.eclipse.jdt.internal.ui.actions.CleanUpAction.runOnMultiple(CleanUpAction.java:215)
	at org.eclipse.jdt.internal.ui.actions.CleanUpAction.run(CleanUpAction.java:119)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:274)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:252)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.ui.actions.RetargetAction.runWithEvent(RetargetAction.java:225)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:223)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4273)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4071)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:645)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:552)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)
```
eclipse.buildId=4.30.0.I20231109-0710
java.version=21
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/916/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/916,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5roU58,eclipse.jdt.ui,1805733500,916,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-11-10T13:33:53Z,2023-11-10T13:33:53Z,Regression from e3c8d0c7e5584ba144bbf493def77f0de941766b?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5roU58/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/916,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5roWIK,eclipse.jdt.ui,1805738506,916,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-11-10T13:37:37Z,2023-11-10T13:37:37Z,"no - see https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/767
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5roWIK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/916,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5rodk_,eclipse.jdt.ui,1805769023,916,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-11-10T13:52:15Z,2023-11-10T13:52:15Z,"> no - see #767

But then  #767 should be reopened?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5rodk_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/916,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5roeAW,eclipse.jdt.ui,1805770774,916,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-11-10T13:53:33Z,2023-11-10T13:53:33Z,duplicate,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5roeAW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/917,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/917,eclipse.jdt.ui,1987805272,917,NPE in QuickAssistProcessorUtil isDeprecatedMethodCallWithReplacement,jukzi,51790620,Jörg Kubitz,,CLOSED,2023-11-10T15:07:57Z,2023-11-16T20:00:17Z,"i was editing ` src\org\eclipse\core\tests\resources\IFileTest.java`
```
java.lang.NullPointerException: Cannot invoke ""String.equals(Object)"" because the return value of ""org.eclipse.jdt.core.dom.TagElement.getTagName()"" is null
	at org.eclipse.jdt.internal.ui.text.correction.QuickAssistProcessorUtil.isDeprecatedMethodCallWithReplacement(QuickAssistProcessorUtil.java:535)
	at org.eclipse.jdt.internal.ui.text.correction.QuickFixProcessor.process(QuickFixProcessor.java:784)
	at org.eclipse.jdt.internal.ui.text.correction.QuickFixProcessor.getCorrections(QuickFixProcessor.java:379)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionCollector.safeRun(JavaCorrectionProcessor.java:384)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.run(JavaCorrectionProcessor.java:342)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.process(JavaCorrectionProcessor.java:337)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectCorrections(JavaCorrectionProcessor.java:470)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:115)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.computeCompletionProposals(ProblemHover.java:89)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.<init>(ProblemHover.java:74)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover.createAnnotationInfo(ProblemHover.java:178)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover.getHoverInfo2(AbstractAnnotationHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/917/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/917,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ro_iz,eclipse.jdt.ui,1805908147,917,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-11-10T15:09:39Z,2023-11-10T15:09:39Z,@jjohnstn that code was commited 7 weeks ago,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ro_iz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/917,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5sMifw,eclipse.jdt.ui,1815226352,917,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-11-16T20:00:16Z,2023-11-16T20:00:16Z,thanks @jjohnstn ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5sMifw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/920,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/920,eclipse.jdt.ui,1989370455,920,Test runner runs more than selected,Bananeweizen,406876,Michael Keppler,,CLOSED,2023-11-12T11:55:08Z,2024-03-06T10:27:17Z,"Originally raised as https://github.com/eclipse-platform/eclipse.platform/issues/848: If multiple source folders exists and contain the same package, then launching one of the source folders as test results in the tests from _all_ source folders to be launched (only for packages that are contained in the first source folder).
Root cause is that we send only the package name to the remote runner process, see https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/34f6473dbf659c47714111393ea2b085902af54f/org.eclipse.jdt.junit.core/src/org/eclipse/jdt/junit/launcher/JUnitLaunchConfigurationDelegate.java#L466. We would need to collect all test classes instead, if multiple source folders exist (like done some lines deeper in the code).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/920/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/920,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52DM7w,eclipse.jdt.ui,1980550896,920,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-03-06T10:27:17Z,2024-03-06T10:27:17Z,@erik-brangs thanks for contributing to the Eclipse IDE,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52DM7w/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/922,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/922,eclipse.jdt.ui,1990900653,922,Code Minings disappear at certain scroll positions,MahatmaFatalError,776825,Mahatma_Fatal_Error,,CLOSED,2023-11-13T15:30:53Z,2023-11-13T19:36:24Z,"Regression since Eclipse 2023-09 (4.29).

The inline code mining labels disappear at random scroll positions.

Please see gif
![Screen Recording 2023-11-13 at 16 16 08](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/776825/957e4caa-151f-4776-8533-5682d7b86bf4)


Version:  / STS 4.20.1.RELEASE
Build Id: 202310260003
org.eclipse.jdt.feature.group 3.19.200.v20230903-1000","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/922/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/922,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ryfmq,eclipse.jdt.ui,1808398762,922,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-11-13T15:37:32Z,2023-11-13T15:37:32Z,"Should be already fixed in 4.30, can't find right now the right ticket to link","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ryfmq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/923,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/923,eclipse.jdt.ui,1991152608,923,Export file - Active profile file is empty,alexei-28,303539,a_subscriber,a_subscriber@mail.ru,OPEN,2023-11-13T17:47:30Z,2023-11-13T19:31:55Z,"Eclipse 2023

I want to use one java editor format for all members of team. I want to share ONE file format between members of team.
So I try this:

`Windows->Preference->Java->Code style->Formatter->Export All`
![Screenshot from 2023-11-12 17-55-01](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/303539/64246974-f1de-44d5-882e-d2203b57d195)

Here result of exported xml file:
```

<?xml version=""1.0"" encoding=""UTF-8"" standalone=""no""?>
<profiles version=""23""/>
```
Why file is empty?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/923/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/923,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5rz8i2,eclipse.jdt.ui,1808779446,923,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-11-13T18:37:38Z,2023-11-13T18:37:38Z,I guess because the selected profile is unchanged and is built in?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5rz8i2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/923,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5r0YVp,eclipse.jdt.ui,1808893289,923,NA,alexei-28,303539,a_subscriber,a_subscriber@mail.ru,NA,2023-11-13T19:31:55Z,2023-11-13T19:31:55Z,"> want to share ONE file format between members of team

I want to share ONE file format between members of team. How I can do this?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5r0YVp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/924,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/924,eclipse.jdt.ui,1992245865,924,Module Properties viewer doesn't show *open* modules,mickaelistria,469058,Mickael Istria,mistria@redhat.com,OPEN,2023-11-14T08:38:15Z,2023-11-14T08:38:15Z,"To reproduce:
* From a java project,
* Go to *Build Path* Configuration
* Set *modular* on the Module Path entry and click ""Edit"" to open the Module Properties viewer
* In *Details* tab, click *Add...* beside the *Added exports* viewer
* Add an internal JDK package (eg `jdk.compiler`) and one of its package (eg `com.sun.source.tree`); and set it as *opens* (instead of *exports*).
* Click OK.

Expected: something visible
Got: blank line in the viewer

Here is a video showcasing this reproducer.
[Screencast from 2023-11-14 09-29-07.webm](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/469058/ca364b36-0f23-4113-a3db-71e0d06271c6)
This is also happening with 4.29 (ie not a regression in 4.30)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/924/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/929,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/929,eclipse.jdt.ui,2003831744,929,NPE in ComplianceConfigurationBlock,jukzi,51790620,Jörg Kubitz,,CLOSED,2023-11-21T09:27:51Z,2023-11-30T14:14:35Z,"check and uncheck ""--release"" option
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/92f4c1bb-ecde-4746-a2dd-7690f845c930)

```
java.lang.NullPointerException: Cannot invoke ""org.eclipse.jdt.core.IJavaProject.getRawClasspath()"" because the return value of ""org.eclipse.jdt.core.JavaCore.create(org.eclipse.core.resources.IProject)"" is null
	at org.eclipse.jdt.internal.ui.preferences.ComplianceConfigurationBlock.addsExportToSystemModule(ComplianceConfigurationBlock.java:867)
	at org.eclipse.jdt.internal.ui.preferences.ComplianceConfigurationBlock.validateSettings(ComplianceConfigurationBlock.java:652)
	at org.eclipse.jdt.internal.ui.preferences.OptionsConfigurationBlock.controlChanged(OptionsConfigurationBlock.java:866)
	at org.eclipse.jdt.internal.ui.preferences.OptionsConfigurationBlock$6.widgetSelected(OptionsConfigurationBlock.java:841)

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/929/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/929,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5shbTf,eclipse.jdt.ui,1820701919,929,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-11-21T11:04:53Z,2023-11-21T11:04:53Z,regression from 1bc6d924a977cff5faf6ff6abab7e51a622b1162,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5shbTf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/931,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/931,eclipse.jdt.ui,2004058733,931,JavaDoc for record components should show @param from the record definition,Madjosz,28844868,,,OPEN,2023-11-21T11:23:47Z,2023-11-21T11:23:47Z,"# Problem
When defining a record with `record Foo(int value)` the autogenerated method `new Foo(4).value()` does not show any JavaDoc on hovering `value()` or in the linked `JavadocView`.
# Workaround
It works to put the JavaDoc directly into the constructor like
```java
record Foo(/** my Value */ int value) {}
```
or to explicitly override the accessor method
```java
record Foo(int value) {
    /** my Value */
    @Override public int value{ return value; }
}
```
but this should not be the preferred way to document record parameters. Also variant 1 heavily messes with the formatter.
# Expected behaviour
[JDK-8225055](https://bugs.openjdk.org/browse/JDK-8225055) expanded the `@param` tag to also be used for record parameters in the JavaDoc of the record definition. The JavaDoc when hovering `foo.value` and `foo.value()` should thus be extracted from this location.
# Additional Context
IntelliJ IDEA also uses this behaviour. JavaDocs on parameters directly are ignored. Only explicit JavaDocs on overriden methods have precendence and are shown only on the method, not on the field access.
# Versions
Eclipse SDK
Version: 2023-12 (4.30)
Build id: I20231120-1800

openjdk version ""21"" 2023-09-19 LTS
OpenJDK Runtime Environment Temurin-21+35 (build 21+35-LTS)
OpenJDK 64-Bit Server VM Temurin-21+35 (build 21+35-LTS, mixed mode, sharing)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/931/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/935,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/935,eclipse.jdt.ui,2008323967,935,[15] Textblock cleanup does not blockify every possibility,jukzi,51790620,Jörg Kubitz,,CLOSED,2023-11-23T14:19:29Z,2023-12-06T06:55:35Z,"""Convert String concatenation to Text Block"" should for example also blockify the Strings in 
org.eclipse.jdt.core.tests.model.JavaSearchBugs16Tests.testBug570246_002()
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/30902922-9692-4891-9ea3-2ac99ed4ea07)

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/5ad1c484-a971-4c04-baf1-e70d5325e948)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/935/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/935,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ttP4R,eclipse.jdt.ui,1840578065,935,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2023-12-05T11:32:04Z,2023-12-05T11:32:04Z,I also get an NPE trying to run this clean-up see #950,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ttP4R/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/935,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tza5D,eclipse.jdt.ui,1842196035,935,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-12-06T06:55:34Z,2023-12-06T06:55:34Z,thanks @jjohnstn ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tza5D/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/936,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/936,eclipse.jdt.ui,2011141755,936,Java source hover viewer not displayed from ClassFileEditor,RedeemerSK,36334098,Jozef Tomek,,CLOSED,2023-11-26T18:06:35Z,2023-11-28T21:03:00Z,"In my contribution #438 merged to become part of 4.30 I introduced a bug causing Java source hover viewer to not be shown when hovering on elements when inside ClassFileEditor (NPE in event loop).

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/936/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/936,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5s46zT,eclipse.jdt.ui,1826860243,936,NA,RedeemerSK,36334098,Jozef Tomek,,NA,2023-11-26T18:20:58Z,2023-11-26T18:20:58Z,https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/937,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5s46zT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/945,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/945,eclipse.jdt.ui,2014515896,945,Dont show children for JUnit 5 @TestTemplate tests that ran only once,trancexpress,24752155,Simeon Andreev,,CLOSED,2023-11-28T14:03:07Z,2024-03-29T09:22:15Z,"The JUnit view displays `@TestTemplate` JUnit 5 tests with an extra `TestSuiteElement`, that contains the template executions.

E.g. the following test code:

```
public class TestTemplatesJunit5 {

	@RepeatedTest(value = 1)
	public void test1() throws Exception {
		Thread.sleep(500);
	}

	@RepeatedTest(value = 2)
	public void test2() throws Exception {
		Thread.sleep(500);
	}

	@Test
	public void test3() throws Exception {
		Thread.sleep(500);
	}
}
```

Results in this JUnit view state: 

![junit_view_repeated_test_single_run](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/24752155/966ba0f1-d093-4c08-9f98-32f91915309a)

For `test.TestTemplatesJunit5.test1()` this extra `TestSuiteElement` results in only noise. E.g. when repeating failed tests (see https://github.com/artsok/rerunner-jupiter), often there will be many (or all) tests in a test case that have this structure single child in a test suite.

Ideally we hide such `TestSuiteElement` tree elements with only a single `TestCaseElement` child. E.g. the view could look like this:

![junit_view_repeated_test_improvement](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/24752155/a0dc3626-5719-4c18-a47c-5d8f6110bd08)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/945/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/945,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50dklQ,eclipse.jdt.ui,1953909072,945,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-02-20T10:27:22Z,2024-02-20T10:27:22Z,"Fix was reverted via https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1203, reopening.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50dklQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/947,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/947,eclipse.jdt.ui,2015077083,947,"Externalize Strings Wizard fails with ""Entry is missing in property file""",Phillipus,600504,Phil Beauvoir,,OPEN,2023-11-28T18:39:11Z,2024-02-02T15:35:37Z,"1. Import the attached project into your workspace - [testproject.zip](https://github.com/eclipse-jdt/eclipse.jdt.ui/files/13491787/testproject.zip)
2. Open the `Foo.java` file
3. Select from menu ""Source -> Externalize Strings...""

The wizard cannot find the existing property strings with the error ""Entry is missing in property file"":

![Image 001](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/600504/59deb721-ddc8-4f2b-a125-0436be37efe4)

Pressing ""Next"" on the wizard results in duplicate message declarations, so not possible to add new strings.

Eclipse 4.29
Java 17
All platforms
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/947/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/947,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tKeRj,eclipse.jdt.ui,1831461987,947,NA,Phillipus,600504,Phil Beauvoir,,NA,2023-11-29T08:48:05Z,2023-11-29T08:48:05Z,"This error occurs when the `Messages.java` file contains the BUNDLE_NAME declaration in this format:

`private static final String BUNDLE_NAME = Messages.class.getPackageName() + "".messages"";`

If the BUNDLE_NAME is declared as a full string it is OK:

`private static final String BUNDLE_NAME = ""com.foo.bar.messages"";`

It means that adding new externalised strings to an already existing messages file is not possible.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tKeRj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/947,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tNUqd,eclipse.jdt.ui,1832209053,947,NA,Phillipus,600504,Phil Beauvoir,,NA,2023-11-29T16:08:15Z,2023-11-29T16:08:15Z,"Seems that something strange is happening when initializing `BUNDLE_NAME` with String concatenation.

If we do the following, the wizard finds the messages correctly:

1. Rename the `messages.properties` file to `Messages.properties`
2. Change the initialization of `BUNDLE_NAME` in the `Messages.java` file to:
`private static final String BUNDLE_NAME = Messages.class.getName();`

Now, if we edit that line to the following (concatenating an empty String), the wizard fails to find the messages:

`private static final String BUNDLE_NAME = Messages.class.getName() + """";`

In fact, the following doesn't work, either:

`private static final String BUNDLE_NAME = ""com.foo.bar.messages"" + """";`

or

`private static final String BUNDLE_NAME = ""com.foo.bar"" + "".messages"";`","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tNUqd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/947,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tTnCc,eclipse.jdt.ui,1833857180,947,NA,Phillipus,600504,Phil Beauvoir,,NA,2023-11-30T14:12:28Z,2023-11-30T14:12:28Z,"I'm by no means familiar with this code, but I've been tracing and debugging this issue and I think I've narrowed it down to `NLSHintHelper` method `getResourceBundleName(CompilationUnit astRoot)` and these lines in the anonymous `ASTVIsitor`:

https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/4b92b5752577e070650c0d15d096ddd8c55c82b5/org.eclipse.jdt.core.manipulation/refactoring/org/eclipse/jdt/internal/corext/refactoring/nls/NLSHintHelper.java#L282-L299

When the messages bundle is declared using String concatenation the method parameter `initializer` can be of type `InfixExpression` and this is not handled.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tTnCc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/947,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tVajA,eclipse.jdt.ui,1834330304,947,NA,Phillipus,600504,Phil Beauvoir,,NA,2023-11-30T18:31:14Z,2023-11-30T18:31:14Z,"One more finding. The `getResourceBundleName` method seems to return the `Messages` class name regardless of the actual method declaration.

So all of the following declarations result in the same bundle name:

`private static final String BUNDLE_NAME = Messages.class.getName();`

`private static final String BUNDLE_NAME = Messages.class.getPackageName();`

`private static final String BUNDLE_NAME = Messages.class.getTypeName();`


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tVajA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/947,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tb3K_,eclipse.jdt.ui,1836020415,947,NA,Phillipus,600504,Phil Beauvoir,,NA,2023-12-01T12:12:51Z,2023-12-01T12:12:51Z,"The following is a POC ""fix"" in `NLSHintHelper` line 282:

```java
private String getBundleName(Expression initializer) {
	if (initializer instanceof StringLiteral)
		return ((StringLiteral)initializer).getLiteralValue();

	if (initializer instanceof MethodInvocation) {
		MethodInvocation methInvocation= (MethodInvocation)initializer;
		Expression exp= methInvocation.getExpression();
		if ((exp != null) && (exp instanceof TypeLiteral)) {
			SimpleType simple= (SimpleType)((TypeLiteral) exp).getType();
			ITypeBinding typeBinding= simple.resolveBinding();
			if (typeBinding != null) {
				if(""getPackageName"".equals(methInvocation.getName().getIdentifier()))
					return typeBinding.getPackage().getName(); 
				return typeBinding.getQualifiedName();
			}
		}
	}
	
	if (initializer instanceof InfixExpression ex)
		return getBundleName(ex.getLeftOperand()) + getBundleName(ex.getRightOperand());
	
	return null;
}
```

Original lines:

https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/4b92b5752577e070650c0d15d096ddd8c55c82b5/org.eclipse.jdt.core.manipulation/refactoring/org/eclipse/jdt/internal/corext/refactoring/nls/NLSHintHelper.java#L282-L300
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tb3K_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/947,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5yr2pM,eclipse.jdt.ui,1924098636,947,NA,kysmith-csg,136501322,Kyle Smith,,NA,2024-02-02T15:26:15Z,2024-02-02T15:26:15Z,"Maybe similar bug to https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/553? Sometimes when I get this bug, I guess maybe if the names don't conflict, it will actually blank out the warning ones so the wizard isn't really usable in that case.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5yr2pM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/947,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5yr6Wi,eclipse.jdt.ui,1924113826,947,NA,Phillipus,600504,Phil Beauvoir,,NA,2024-02-02T15:35:35Z,2024-02-02T15:35:35Z,"> Maybe similar bug to https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/553?

That would be a side-effect of this one.

Effectively the use of `class.getPackageName()` makes the wizard unusable when you need to edit/add more strings. I've had to go back and change all instances to the fully qualified class string.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5yr6Wi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/948,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/948,eclipse.jdt.ui,2016067526,948,request: pomless builds,jukzi,51790620,Jörg Kubitz,,CLOSED,2023-11-29T08:29:46Z,2024-03-05T18:37:33Z,"Is it possible to make the JDT plugins pomless so that i don't need to increase version in pom.xml too? 
Any Volunteer?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/948/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/948,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tUd65,eclipse.jdt.ui,1834081977,948,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2023-11-30T16:13:04Z,2023-11-30T16:13:04Z,"Sure, I think I tried this in past but got no reviews. I might be wrong but if you would help with the review I can do the work.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tUd65/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/948,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tUeha,eclipse.jdt.ui,1834084442,948,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-11-30T16:14:33Z,2023-11-30T16:14:33Z,i'll sponsor review,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tUeha/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/948,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tbLC8,eclipse.jdt.ui,1835839676,948,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2023-12-01T10:23:32Z,2023-12-01T10:23:32Z,"Interested in getting the same for JDT.core @jukzi?
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tbLC8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/948,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tbLLM,eclipse.jdt.ui,1835840204,948,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2023-12-01T10:23:51Z,2023-12-01T10:23:51Z,"Please core this issue,  I cannot close it.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tbLLM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/948,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tbNm8,eclipse.jdt.ui,1835850172,948,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-12-01T10:30:55Z,2023-12-01T10:30:55Z,"Thanks @vogella, would be good on `debug `and `core `as well. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tbNm8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/948,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tbOzK,eclipse.jdt.ui,1835855050,948,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2023-12-01T10:34:23Z,2023-12-01T10:34:23Z,@jukzi now I'm happy to help with releng simplications in JDT... ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tbOzK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/948,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM517EDS,eclipse.jdt.ui,1978417362,948,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-03-05T10:18:40Z,2024-03-05T10:18:40Z,"@vogella i still have to update some poms
for example org.eclipse.jdt.core.tests.builder/pom.xml - is it possible to get rid of all poms, please?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM517EDS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/948,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM51-2iB,eclipse.jdt.ui,1979410561,948,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2024-03-05T18:37:32Z,2024-03-05T18:37:32Z,"@jukzi I currently do not plan to work on JDT for various personal reasons, most of them I discussed with you already via private email.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM51-2iB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/950,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/950,eclipse.jdt.ui,2019006162,950,NPE in Convert String contenation to Text Block,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,CLOSED,2023-11-30T16:15:12Z,2023-12-06T01:24:51Z,"Example:

Import jdt.core and run the Convert String contenation to Text Block clean-up on org.eclipse.jdt.core


![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/139910/56c84bae-58e2-4088-9516-3bf0145cf20e)


Strack trace:

```
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:397)
	at org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:1038)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizard.createChange(RefactoringWizard.java:662)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizard.computeUserInputSuccessorPage(RefactoringWizard.java:504)
	at org.eclipse.ltk.ui.refactoring.UserInputWizardPage.computeSuccessorPage(UserInputWizardPage.java:77)
	at org.eclipse.ltk.ui.refactoring.UserInputWizardPage.getNextPage(UserInputWizardPage.java:113)
	at org.eclipse.jdt.internal.ui.fix.CleanUpRefactoringWizard$CleanUpConfigurationPage.getNextPage(CleanUpRefactoringWizard.java:437)
	at org.eclipse.jface.wizard.WizardDialog.nextPressed(WizardDialog.java:915)
	at org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:469)
	at org.eclipse.jface.dialogs.Dialog.lambda$0(Dialog.java:619)
	at org.eclipse.swt.events.SelectionListener$1.widgetSelected(SelectionListener.java:84)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:5854)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1529)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:5064)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4516)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.lambda$0(RefactoringWizardOpenOperation.java:190)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:209)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:126)
	at org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:41)
	at org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter.startCleanupRefactoring(RefactoringExecutionStarter.java:257)
	at org.eclipse.jdt.internal.ui.actions.AllCleanUpsAction.performRefactoring(AllCleanUpsAction.java:71)
	at org.eclipse.jdt.internal.ui.actions.CleanUpAction.runOnMultiple(CleanUpAction.java:215)
	at org.eclipse.jdt.internal.ui.actions.CleanUpAction.run(CleanUpAction.java:119)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:274)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:252)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:5854)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1529)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:5064)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4516)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:645)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:552)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1432)
Caused by: java.lang.NullPointerException: Cannot invoke ""org.eclipse.jdt.core.dom.SimpleName.resolveBinding()"" because ""this.originalVarName"" is null
	at org.eclipse.jdt.internal.corext.fix.StringConcatToTextBlockFixCore$StringBufferFinder.visit(StringConcatToTextBlockFixCore.java:551)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:293)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3269)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:3317)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:223)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3269)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:3317)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:223)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3269)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3340)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:228)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3269)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:3317)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3269)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3340)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:128)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3269)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:3317)
	at org.eclipse.jdt.core.dom.IfStatement.accept0(IfStatement.java:183)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3269)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3340)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:128)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3269)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:3317)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:677)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3269)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3340)
	at org.eclipse.jdt.core.dom.TypeDeclaration.accept0(TypeDeclaration.java:498)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3269)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3340)
	at org.eclipse.jdt.core.dom.CompilationUnit.accept0(CompilationUnit.java:258)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3269)
	at org.eclipse.jdt.internal.corext.fix.StringConcatToTextBlockFixCore.createCleanUp(StringConcatToTextBlockFixCore.java:802)
	at org.eclipse.jdt.internal.ui.fix.StringConcatToTextBlockCleanUpCore.createFixCore(StringConcatToTextBlockCleanUpCore.java:54)
	at org.eclipse.jdt.internal.ui.fix.AbstractCleanUpCoreWrapper.createFix(AbstractCleanUpCoreWrapper.java:53)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.calculateChange(CleanUpRefactoring.java:772)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor.calculateSolutions(CleanUpRefactoring.java:301)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor.acceptAST(CleanUpRefactoring.java:279)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1008)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:692)
	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:954)
	at org.eclipse.jdt.internal.corext.dom.ASTBatchParser.createASTs(ASTBatchParser.java:91)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpFixpointIterator.next(CleanUpRefactoring.java:399)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.cleanUpProject(CleanUpRefactoring.java:682)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.checkFinalConditions(CleanUpRefactoring.java:642)
	at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:86)
	at org.eclipse.ltk.core.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:122)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2453)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2478)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:89)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)


```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/950/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/952,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/952,eclipse.jdt.ui,2019345046,952,"[JUnit5] Export ""Ant Buildfiles"": some Test Launch Configurations are not added to the resulting build.xml",fedejeanne,2205684,Federico Jeanne,,CLOSED,2023-11-30T19:16:16Z,2023-12-11T15:59:48Z,"When exporting the ""Ant Buildfiles"" via _File > Export > General > Ant Buildfiles_, some JUnit5 launch configurations might not be added to the resulting `build.xml`. 

For example: [@Nested](https://junit.org/junit5/docs/current/user-guide/#writing-tests-nested) tests","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/952/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/957,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/957,eclipse.jdt.ui,2022142183,957,Projects with `:` in their name break JUnit test execution on MacOS (and probably all Unix/Linux OSes),guw,191472,Gunnar Wagenknecht,,OPEN,2023-12-02T17:47:59Z,2023-12-02T17:48:17Z,"Steps to reproduce:
1. Create Java project with name ""`foo:bar`""
2. Create JUnit test `some.JUnitTestClass` inside project
3. Right click JUnit test and select _Run As > JUnit Test_

Observe the following error in Console:
```
Class not found some.JUnitTestClass
java.lang.ClassNotFoundException: some.JUnitTestClass
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.loadClass(RemoteTestRunner.java:766)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.loadClasses(RemoteTestRunner.java:490)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:513)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:756)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:452)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)
```

The reason is that on these platforms the path separator jar is a colon `:`.

If you look into the generated command line call you can see that the `-classpath` is setup with these colons:
```
-classpath ""/Users/.../workspace/foo:bar/bin:...
```

To the JVM these are separate classpath entries.

I think to continue supporting `:` in project names the classpath must be provided by a classpath jar.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/957/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/959,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/959,eclipse.jdt.ui,2022244622,959,Search scope is prepared in UI thread and may cause UI freeze,guw,191472,Gunnar Wagenknecht,,OPEN,2023-12-02T22:54:59Z,2023-12-05T16:19:04Z,"In projects with long classpath or workspaces with lots of projects the calculation of the search scope can be expensive. Maybe it should be moved to the search job as well?

The UI freezes in my workspace on a M1 Mac are typically 18-20s.

From the log:

```
Stack Trace
	at org.eclipse.jdt.internal.core.search.JavaSearchScope.addEnclosingProjectOrJar(JavaSearchScope.java:88)
	at org.eclipse.jdt.internal.core.search.JavaSearchScope.add(JavaSearchScope.java:191)
	at org.eclipse.jdt.internal.core.search.JavaSearchScope.add(JavaSearchScope.java:105)
	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.createJavaSearchScope(BasicSearchEngine.java:169)
	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.createJavaSearchScope(BasicSearchEngine.java:150)
	at org.eclipse.jdt.core.search.SearchEngine.createJavaSearchScope(SearchEngine.java:357)
	at org.eclipse.jdt.internal.ui.search.JavaSearchScopeFactory.createWorkspaceScope(JavaSearchScopeFactory.java:442)
	at org.eclipse.jdt.internal.ui.search.JavaSearchScopeFactory.createWorkspaceScope(JavaSearchScopeFactory.java:435)
	at org.eclipse.jdt.ui.actions.FindReferencesAction.createQuery(FindReferencesAction.java:103)
	at org.eclipse.jdt.ui.actions.FindAction.run(FindAction.java:314)
	at org.eclipse.jdt.ui.actions.FindAction.run(FindAction.java:297)
	at org.eclipse.jdt.ui.actions.FindReferencesAction.run(FindReferencesAction.java:111)
	at org.eclipse.jdt.ui.actions.FindAction.run(FindAction.java:260)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:278)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:252)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor134.invoke(Unknown Source)
	at java.base@17.0.9/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@17.0.9/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:300)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:234)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:655)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1217)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4641)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1524)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1547)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1532)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1561)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1557)
	at org.eclipse.swt.widgets.Canvas.sendKeyEvent(Canvas.java:522)
	at org.eclipse.swt.widgets.Control.doCommandBySelector(Control.java:1101)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:6492)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSResponder.interpretKeyEvents(NSResponder.java:59)
	at org.eclipse.swt.widgets.Composite.keyDown(Composite.java:607)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:6324)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:236)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2264)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2511)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:6444)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5692)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5831)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:117)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3986)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:645)
	at org.eclipse.ui.internal.Workbench$$Lambda$199/0x0000000800293780.run(Unknown Source)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:552)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base@17.0.9/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@17.0.9/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base@17.0.9/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@17.0.9/java.lang.reflect.Method.invoke(Method.java:568)
	at app//org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at app//org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at app//org.eclipse.equinox.launcher.Main.run(Main.java:1459)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/959/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/959,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ttPK5,eclipse.jdt.ui,1840575161,959,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2023-12-05T11:31:04Z,2023-12-05T11:31:04Z,Can you suggest a PR for this?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ttPK5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/959,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tvWFE,eclipse.jdt.ui,1841127748,959,NA,guw,191472,Gunnar Wagenknecht,,NA,2023-12-05T16:19:03Z,2023-12-05T16:19:03Z,I'll try to find some time. I think search is already a background job. Possibly the scope computation needs to be moved into this as well.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tvWFE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/960,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/960,eclipse.jdt.ui,2022402760,960,[javadoc] Replace < > in pre/code tags automatically,laeubi,1331477,Christoph Läubrich,,OPEN,2023-12-03T07:18:37Z,2023-12-04T08:21:35Z,"Today I noticed that JD replaces `@` in javadoc code/pre tags automatically to `&#64;` as these needs to be escaped on save the file that is great help already :+1: .

Sadly it seem to not do the same for `<` (=`&lt;`)  and `>` (=`&gt;`) leading to even JDT is suffering from such faulty javadoc:
- https://github.com/eclipse-jdt/eclipse.jdt.core/issues/1582

a similar issue seem to exits with `&` (=`&amp;`)

FYI @jukzi @akurtakov ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/960/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/960,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tjWIY,eclipse.jdt.ui,1837982232,960,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-12-04T07:30:25Z,2023-12-04T07:30:25Z,Do you mean `<code>mytext</code>` or `{@code mytext}` blocks? Please give a reference to a specification what should be done.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tjWIY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/960,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tjW-2,eclipse.jdt.ui,1837985718,960,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-12-04T07:33:30Z,2023-12-04T07:33:30Z,if https://github.com/eclipse-jdt/eclipse.jdt.core/issues/1583 is fixed the javdoc should use `{@snippet ` instead of `code `and `pre`,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tjW-2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/960,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tjXaf,eclipse.jdt.ui,1837987487,960,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2023-12-04T07:35:08Z,2023-12-04T07:35:08Z,"Snippet is added in Java 18 which means our builds will have to start using Java 21 (first LTS that has support for snippet). IMHO, it's something we should done ASAP.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tjXaf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/960,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tjmAP,eclipse.jdt.ui,1838047247,960,NA,laeubi,1331477,Christoph Läubrich,,NA,2023-12-04T08:21:34Z,2023-12-04T08:21:34Z,"I dont understnad what you mean by ""specification"" maybe something like that that also mention that @, < > and & are special: https://blogs.oracle.com/javamagazine/post/java-javadoc-snippet.

Migration to `@snippet` might be nice but does not solve the issue for older jvms, to reproduce do the following:

Create a new class, maybe like this:
```
/**
 * Hello JavaDoc
 *
 * <pre>
 *
 * </pre>
 */
public class JavaDocTest {

}
```

now add inside the pre tags `@HelloEscape` like this

```
/**
 * Hello JavaDoc
 *
 * <pre>
 *  @HelloEscape
 * </pre>
 */
public class JavaDocTest {

}
```

on save (**for equinox not sure how /what they enabled in the settings to do so!**)

I end up with:
```
/**
 * Hello JavaDoc
 *
 * <pre>
 *  &#64;HelloEscape
 * </pre>
 */
public class JavaDocTest {

}
```

(see for example https://github.com/eclipse-equinox/equinox/pull/415/files#diff-4ebbd2f0859833c456d338ad6a4afbe98e876ac305ed74b93336c0cb5a1f73fb )

but using

```
/**
 * Hello JavaDoc
 *
 * <pre>
 *  @HelloEscape
 * <ThisIsNotEscaped>
 * And & not as well
 * </pre>
 */
public class JavaDocTest {

}
```

results in

```
/**
 * Hello JavaDoc
 *
 * <pre>
 *  &#64;HelloEscape
 * <ThisIsNotEscaped>
 * And & not as well
 * </pre>
 */
public class JavaDocTest {

}
```

Actually I think regardless of settings special char should always be escaped and of course all of them...","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tjmAP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/961,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/961,eclipse.jdt.ui,2022437691,961,2023-12 RC2 AbortSearchException on save,frankbenoit,8962790,Frank Benoit,,CLOSED,2023-12-03T09:24:33Z,2023-12-06T18:32:04Z,"I get this a lot in every file when there is a change before save and the e.g. imports are to be added during save:

eclipse.buildId=4.30.0.20231123-1200
java.version=17.0.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en
Framework arguments:  -product org.eclipse.epp.package.committers.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.committers.product

This is a continuation of log file ...\ws\.metadata\.bak_0.log
Created Time: 2023-12-02 21:06:51.097

org.eclipse.jdt.ui
Error
Sun Dec 03 10:19:34 CET 2023
The save participant 'org.eclipse.jdt.ui.postsavelistener.cleanup' caused an exception: org.eclipse.jdt.internal.corext.dom.AbortSearchException

org.eclipse.jdt.internal.corext.dom.AbortSearchException
	at org.eclipse.jdt.internal.corext.fix.StringBufferToStringBuilderFixCore.isStringBufferType(StringBufferToStringBuilderFixCore.java:83)
	at org.eclipse.jdt.internal.corext.fix.StringBufferToStringBuilderFixCore$StringBufferFinder.visit(StringBufferToStringBuilderFixCore.java:130)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:220)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3269)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:3317)
	at org.eclipse.jdt.core.dom.ReturnStatement.accept0(ReturnStatement.java:128)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3269)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3340)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:128)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3269)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:3317)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:677)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3269)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3340)
	at org.eclipse.jdt.core.dom.TypeDeclaration.accept0(TypeDeclaration.java:498)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3269)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3340)
	at org.eclipse.jdt.core.dom.CompilationUnit.accept0(CompilationUnit.java:258)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3269)
	at org.eclipse.jdt.internal.corext.fix.StringBufferToStringBuilderFixCore.createCleanUp(StringBufferToStringBuilderFixCore.java:883)
	at org.eclipse.jdt.internal.ui.fix.StringBufferToStringBuilderCleanUpCore.createFixCore(StringBufferToStringBuilderCleanUpCore.java:54)
	at org.eclipse.jdt.internal.ui.fix.AbstractCleanUpCoreWrapper.createFix(AbstractCleanUpCoreWrapper.java:53)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.calculateChange(CleanUpRefactoring.java:768)
	at org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener.saved(CleanUpPostSaveListener.java:385)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$4.run(CompilationUnitDocumentProvider.java:1635)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.notifyPostSaveListeners(CompilationUnitDocumentProvider.java:1629)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.commitWorkingCopy(CompilationUnitDocumentProvider.java:1413)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$3.execute(CompilationUnitDocumentProvider.java:1488)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider$DocumentProviderOperation.run(TextFileDocumentProvider.java:133)
	at org.eclipse.ui.actions.WorkspaceModifyDelegatingOperation.execute(WorkspaceModifyDelegatingOperation.java:71)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.lambda$0(WorkspaceModifyOperation.java:110)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2453)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2478)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:131)
	at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:76)
	at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:66)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.executeOperation(TextFileDocumentProvider.java:461)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.saveDocument(TextFileDocumentProvider.java:783)
	at org.eclipse.ui.texteditor.AbstractTextEditor.performSave(AbstractTextEditor.java:5009)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSave(CompilationUnitEditor.java:1267)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(CompilationUnitEditor.java:1321)
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.doSave(AbstractTextEditor.java:7185)
	at org.eclipse.ui.Saveable.doSave(Saveable.java:213)
	at org.eclipse.ui.internal.SaveableHelper.doSaveModel(SaveableHelper.java:333)
	at org.eclipse.ui.internal.SaveableHelper.lambda$1(SaveableHelper.java:196)
	at org.eclipse.ui.internal.SaveableHelper.lambda$3(SaveableHelper.java:271)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:436)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.ui.internal.WorkbenchWindow.lambda$7(WorkbenchWindow.java:2348)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2345)
	at org.eclipse.ui.internal.SaveableHelper.runProgressMonitorOperation(SaveableHelper.java:278)
	at org.eclipse.ui.internal.SaveableHelper.runProgressMonitorOperation(SaveableHelper.java:260)
	at org.eclipse.ui.internal.SaveableHelper.saveModels(SaveableHelper.java:207)
	at org.eclipse.ui.internal.SaveableHelper.savePart(SaveableHelper.java:150)
	at org.eclipse.ui.internal.WorkbenchPage.saveSaveable(WorkbenchPage.java:3825)
	at org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:3838)
	at org.eclipse.ui.internal.handlers.SaveHandler.execute(SaveHandler.java:82)
	at org.eclipse.ui.internal.handlers.HandlerProxy.execute(HandlerProxy.java:283)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:99)
	at jdk.internal.reflect.GeneratedMethodAccessor196.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:298)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:232)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:174)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:165)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:655)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1286)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1594)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4866)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4744)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5039)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3657)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:645)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:552)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)
eclipse.buildId=4.30.0.20231123-1200
java.version=17.0.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en
Framework arguments:  -product org.eclipse.epp.package.committers.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.committers.product

This is a continuation of log file ...\ws\.metadata\.bak_0.log
Created Time: 2023-12-02 21:06:51.097

org.eclipse.jdt.ui
Error
Sun Dec 03 10:19:34 CET 2023
Problems occurred when invoking code from plug-in: ""org.eclipse.jdt.ui"".

org.eclipse.jdt.internal.corext.dom.AbortSearchException
	at org.eclipse.jdt.internal.corext.fix.StringBufferToStringBuilderFixCore.isStringBufferType(StringBufferToStringBuilderFixCore.java:83)
	at org.eclipse.jdt.internal.corext.fix.StringBufferToStringBuilderFixCore$StringBufferFinder.visit(StringBufferToStringBuilderFixCore.java:130)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:220)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3269)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:3317)
	at org.eclipse.jdt.core.dom.ReturnStatement.accept0(ReturnStatement.java:128)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3269)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3340)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:128)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3269)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:3317)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:677)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3269)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3340)
	at org.eclipse.jdt.core.dom.TypeDeclaration.accept0(TypeDeclaration.java:498)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3269)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3340)
	at org.eclipse.jdt.core.dom.CompilationUnit.accept0(CompilationUnit.java:258)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3269)
	at org.eclipse.jdt.internal.corext.fix.StringBufferToStringBuilderFixCore.createCleanUp(StringBufferToStringBuilderFixCore.java:883)
	at org.eclipse.jdt.internal.ui.fix.StringBufferToStringBuilderCleanUpCore.createFixCore(StringBufferToStringBuilderCleanUpCore.java:54)
	at org.eclipse.jdt.internal.ui.fix.AbstractCleanUpCoreWrapper.createFix(AbstractCleanUpCoreWrapper.java:53)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.calculateChange(CleanUpRefactoring.java:768)
	at org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener.saved(CleanUpPostSaveListener.java:385)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$4.run(CompilationUnitDocumentProvider.java:1635)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.notifyPostSaveListeners(CompilationUnitDocumentProvider.java:1629)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.commitWorkingCopy(CompilationUnitDocumentProvider.java:1413)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$3.execute(CompilationUnitDocumentProvider.java:1488)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider$DocumentProviderOperation.run(TextFileDocumentProvider.java:133)
	at org.eclipse.ui.actions.WorkspaceModifyDelegatingOperation.execute(WorkspaceModifyDelegatingOperation.java:71)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.lambda$0(WorkspaceModifyOperation.java:110)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2453)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2478)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:131)
	at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:76)
	at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:66)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.executeOperation(TextFileDocumentProvider.java:461)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.saveDocument(TextFileDocumentProvider.java:783)
	at org.eclipse.ui.texteditor.AbstractTextEditor.performSave(AbstractTextEditor.java:5009)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSave(CompilationUnitEditor.java:1267)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(CompilationUnitEditor.java:1321)
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.doSave(AbstractTextEditor.java:7185)
	at org.eclipse.ui.Saveable.doSave(Saveable.java:213)
	at org.eclipse.ui.internal.SaveableHelper.doSaveModel(SaveableHelper.java:333)
	at org.eclipse.ui.internal.SaveableHelper.lambda$1(SaveableHelper.java:196)
	at org.eclipse.ui.internal.SaveableHelper.lambda$3(SaveableHelper.java:271)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:436)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.ui.internal.WorkbenchWindow.lambda$7(WorkbenchWindow.java:2348)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2345)
	at org.eclipse.ui.internal.SaveableHelper.runProgressMonitorOperation(SaveableHelper.java:278)
	at org.eclipse.ui.internal.SaveableHelper.runProgressMonitorOperation(SaveableHelper.java:260)
	at org.eclipse.ui.internal.SaveableHelper.saveModels(SaveableHelper.java:207)
	at org.eclipse.ui.internal.SaveableHelper.savePart(SaveableHelper.java:150)
	at org.eclipse.ui.internal.WorkbenchPage.saveSaveable(WorkbenchPage.java:3825)
	at org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:3838)
	at org.eclipse.ui.internal.handlers.SaveHandler.execute(SaveHandler.java:82)
	at org.eclipse.ui.internal.handlers.HandlerProxy.execute(HandlerProxy.java:283)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:99)
	at jdk.internal.reflect.GeneratedMethodAccessor196.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:298)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:232)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:174)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:165)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:655)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1286)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1594)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4866)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4744)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5039)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3657)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:645)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:552)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/961/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/961,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5thOjW,eclipse.jdt.ui,1837426902,961,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-12-03T09:47:30Z,2023-12-03T09:47:30Z,@jjohnstn : could you please check?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5thOjW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/961,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5thOr9,eclipse.jdt.ui,1837427453,961,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-12-03T09:50:18Z,2023-12-03T09:50:18Z,"@frankbenoit : could you please attach a simple project with all settings and code that shows the problem? I assume you have some non default configuration for ""on save"" actions.I don't see this, but I've also not have many actions enabled.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5thOr9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/961,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5thaLL,eclipse.jdt.ui,1837474507,961,NA,frankbenoit,8962790,Frank Benoit,,NA,2023-12-03T13:03:18Z,2023-12-03T13:03:18Z,"[BugJdtUi961.zip](https://github.com/eclipse-jdt/eclipse.jdt.ui/files/13538988/BugJdtUi961.zip)
Edit the line `return requireNonNull("""");` then save, the error is triggered for me.
Normally I would expect the static import for `java.lang.Objects.requireNonNull` to be added and the file be free of errors.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5thaLL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/962,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/962,eclipse.jdt.ui,2022511583,962,Eclipse Splash picture upside-down on SONOMA,Sciuriware,121790387,Joop,,CLOSED,2023-12-03T13:05:09Z,2023-12-08T15:16:38Z,"![EclipseSplash](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/121790387/5d6bae6d-9954-4d05-a5de-d46ff339a9bb)

I just upgraded to SONOMA 14.1.2
While testing all applications I noticed that the Eclipse splash was upside down, 
while the IDE itself seems to work without a problem.

Is this intentional? If so, how did you do that?

;JOOP!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/962/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/962,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uF9KZ,eclipse.jdt.ui,1847055001,962,NA,Phillipus,600504,Phil Beauvoir,,NA,2023-12-08T11:59:14Z,2023-12-08T11:59:14Z,"Nothing to do with JDT UI

See:

https://github.com/eclipse-platform/eclipse.platform.swt/issues/837
https://github.com/eclipse-platform/eclipse.platform.swt/issues/830
https://github.com/eclipse-platform/eclipse.platform.swt/issues/772
https://github.com/eclipse-platform/eclipse.platform.swt/issues/751

and

https://github.com/eclipse-platform/eclipse.platform.ui/commit/f58b4e30718691b6304ecae6e3e577d2e5e010e8","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uF9KZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/962,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uHBv7,eclipse.jdt.ui,1847335931,962,NA,Sciuriware,121790387,Joop,,NA,2023-12-08T15:03:21Z,2023-12-08T15:03:21Z,"Can we call this an Easter- .... sorry, a Christmas-Egg?
;JOOP!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uHBv7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/962,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uHG3k,eclipse.jdt.ui,1847356900,962,NA,noopur2507,8749449,Noopur Gupta,,NA,2023-12-08T15:16:38Z,2023-12-08T15:16:38Z,This has been fixed for the Eclipse 4.30 release build. ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uHG3k/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/963,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/963,eclipse.jdt.ui,2023293091,963,Cleanup: Convert to enhanced 'for' loops creates not compilable code,jukzi,51790620,Jörg Kubitz,,CLOSED,2023-12-04T08:27:03Z,2024-02-05T15:51:15Z,"			Iterable<? extends File> files= null;			
			int count = 0;
			for (Iterator<? extends File> iterator = files.iterator(); iterator.hasNext(); ) {
				iterator.next();
				count++;
			}
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/3d7cce98-1f25-45d4-8ffa-3a7c6ccae0f7)
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/1bae95cf-da5c-469d-ba79-ed24fde4973c)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/963/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/963,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tjpJK,eclipse.jdt.ui,1838060106,963,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-12-04T08:30:20Z,2023-12-04T08:30:20Z,"source from org.eclipse.jdt.ui.tests.refactoring.infra.DebugUtils.dumpIMethodList(String, List<?>)
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/df09a0d1-31f6-4c4b-90db-f223e56b2a3b)
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/e66b0f21-83c4-4af9-8cd8-d383649e74f8)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5tjpJK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/972,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/972,eclipse.jdt.ui,2025913496,972,Javadoc view can not open,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,CLOSED,2023-12-05T10:58:26Z,2023-12-06T15:27:38Z,"Opening it shows broken state with the following details:
```
java.lang.NullPointerException: Cannot read field ""red"" because ""val"" is null
	at org.eclipse.jface.internal.text.html.HTMLPrinter.fromRGB(HTMLPrinter.java:66)
	at org.eclipse.jface.internal.text.html.HTMLPrinter.insertPageProlog(HTMLPrinter.java:140)
	at org.eclipse.jdt.internal.ui.infoviews.JavadocView.doSetInput(JavadocView.java:925)
	at org.eclipse.jdt.internal.ui.infoviews.JavadocView.refresh(JavadocView.java:767)
	at org.eclipse.jdt.internal.ui.infoviews.JavadocView.setForeground(JavadocView.java:748)
	at org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView.inititalizeColors(AbstractInfoView.java:377)
	at org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView.createPartControl(AbstractInfoView.java:235)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.createPartControl(CompatibilityPart.java:158)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityView.createPartControl(CompatibilityView.java:155)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.create(CompatibilityPart.java:365)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	....

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/972/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/972,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ttA1L,eclipse.jdt.ui,1840516427,972,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2023-12-05T10:59:08Z,2023-12-05T10:59:08Z,It is most likely caused by https://github.com/eclipse-platform/eclipse.platform.ui/pull/1334 . I'm looking into it.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ttA1L/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/972,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5t26vu,eclipse.jdt.ui,1843112942,972,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2023-12-06T15:27:38Z,2023-12-06T15:27:38Z,Verified working in  I20231206-0410.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5t26vu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/988,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/988,eclipse.jdt.ui,2030032237,988,Extract to local create duplicated assign with MISSING(),frankbenoit,8962790,Frank Benoit,,CLOSED,2023-12-07T06:53:38Z,2024-01-31T14:25:55Z,"

https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/8962790/f69733e2-8225-4c79-adc3-a41a906b2115

Version: 2023-12 (4.30.0)
Build id: 20231201-2043

I was not yet able to create a reproducer for this.

````
            var node = new GNodeBuilder()
                    .position(position)
                    .size(size)
                    .add(new GLabelBuilder()
                            .text(""switch"") //$NON-NLS-1$
                            .size(getSize(object))
                            .build())
                    .build();
````
This code has no compile errors.
Now I select the GLabelBuilder - all in the surrounding add() - and execute extract to local variable:

````
            GLabel child = MISSING();
            GLabel child = new GLabelBuilder()
                    .text(""switch"") //$NON-NLS-1$
                    .size(getSize(object))
                    .build();
            var node = new GNodeBuilder()
                    .position(position)
                    .size(size)
                    .add(child)
                    .build();
````
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/988/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/988,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5yZNNU,eclipse.jdt.ui,1919210324,988,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-31T14:25:42Z,2024-01-31T14:25:42Z,"thanks for the report, duplicates https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1136
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5yZNNU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/993,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/993,eclipse.jdt.ui,2032072603,993,Bug:   Renaming a method causes changes in other unrelated methods,DongChunHao,77560508,DongChunHao,,OPEN,2023-12-08T07:18:42Z,2023-12-25T08:30:17Z,"- In the example below, when selecting **m(**) within **super.m()**, **Refactor**, **Rename**.

```jsx
interface TestInterface {
	    void m(String argument);
	}
class TestClass {
         void m(String argument) {}
}
	
class MyClass extends TestClass implements TestInterface {
	 @Override
	 public void m(String argument) {
	     super.m(argument);  // rename m to n
	 }
}
```
The result after performing the renaming：
```jsx
interface TestInterface {
	 void n(String argument); // Rename change
}
class TestClass {
	 void n(String argument) {  // Rename change
	 }
	}
	
class MyClass extends TestClass implements TestInterface {
	 @Override
	 public void n(String argument) {  // Rename change
	     super.n(argument);  // Rename change
	 }
}
```
From the result, it can be seen that the refactoring performed four renaming changes. Due to the feature of the **super** keyword, when renaming the **super.m()** method, it is only necessary to change **m()**  with **super.m()** and the **m()** method in the parent class(**TestClass.m()**).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/993/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/993,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vZHCu,eclipse.jdt.ui,1868853422,993,NA,DongChunHao,77560508,DongChunHao,,NA,2023-12-25T08:30:16Z,2023-12-25T08:30:16Z,@jjohnstn  please take a look at this issue， and check whether it is a bug， and let me know about it.， thanks.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vZHCu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1038,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1038,eclipse.jdt.ui,2061464191,1038,Add support for code completion inside text block templates,srikanth-sankaran,131454720,Srikanth Sankaran,,CLOSED,2023-12-08T10:41:48Z,2024-01-10T07:03:48Z,"https://github.com/eclipse-jdt/eclipse.jdt.core/issues/1711 adds support inside String templates. The present ticket is for text block templates.

I think there are some differences between text block handling between Scanner and CompletionScanner that needs reconciling. It is best to simply use the scanner implementation via a super call and cover for any additional behaviors needed rather than duplicate the body. In comparing the scanForTextBlock between Scanner and CompletionScanner I already see 4-5 bug fixes that happened only in one place!

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1038/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1038,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vp7gs,eclipse.jdt.ui,1873262636,1038,NA,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,NA,2024-01-01T10:21:14Z,2024-01-01T10:21:14Z,"OK, it appears that there's this notion called partitions inside jdt.ui that needs to be updated in order to even invoke the CU.complete() in jdt.core. I found CompletionProposalComputerDescriptor to be one such place to add new partition for IJavaPartitions.JAVA_MULTI_LINE_STRING, but that's not all. Looks like this is more involved and only for a jdt.ui expert.

Once this is taken care of, all we will have to do in jdt.core is to get rid of the CompletionScanner#scanForTextBlock(). ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vp7gs/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1038,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vrQrp,eclipse.jdt.ui,1873611497,1038,NA,srikanth-sankaran,131454720,Srikanth Sankaran,,NA,2024-01-02T04:27:47Z,2024-01-02T04:27:47Z,"@noopur2507 @jjohnstn - FYI, this needs fixing before _any_ code completion will work for text block templates.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vrQrp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1038,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vrm5s,eclipse.jdt.ui,1873702508,1038,NA,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,NA,2024-01-02T07:48:54Z,2024-01-02T07:48:54Z,"> Once this is taken care of, all we will have to do in jdt.core is to get rid of the CompletionScanner#scanForTextBlock().

JDT Core changes are here - https://github.com/eclipse-jdt/eclipse.jdt.core/pull/1803
The tests test the jdt.core part alone. The completion won't work inside editor until this issue is resolved.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vrm5s/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1038,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5v8zui,eclipse.jdt.ui,1878211490,1038,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-01-05T06:49:49Z,2024-01-05T06:49:49Z,"Copying @ktatavarthi also who had worked on a similar feature earlier, to provide any hints for this one.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5v8zui/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/999,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/999,eclipse.jdt.ui,2037193787,999,Error in testInnerClassWithNestedAnnotationIsFound[JUnit4] since I20231211-1800,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2023-12-12T08:01:39Z,2024-01-02T11:50:43Z,"See https://download.eclipse.org/eclipse/downloads/drops4/I20231211-1800/testresults/html/org.eclipse.jdt.ui.tests_ep431I-unit-cen64-gtk3-java17_linux.gtk.x86_64_17.html

Regression from https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/953

The test is ""aborted"" but intention was that it should be marked as ""skipped"". I see other tests that also use ""assume"" but are don't marked as aborted. Probably the reason is that the test is parametrized. 
**We should make sure that this test does not show as an error if the intention was to skip it.**","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/999/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/999,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uW1Ni,eclipse.jdt.ui,1851478882,999,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-12-12T08:02:24Z,2023-12-12T08:02:24Z,@fedejeanne: could you please look at it?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uW1Ni/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/999,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uXF0i,eclipse.jdt.ui,1851546914,999,NA,fedejeanne,2205684,Federico Jeanne,,NA,2023-12-12T08:45:27Z,2023-12-12T08:45:27Z,"Makes sense, I just checked [these results](https://ci.eclipse.org/jdt/job/eclipse.jdt.ui-github/job/master/139/testReport/AutomatedSuite%20org.eclipse.jdt.junit.tests.JUnitJUnitTests%20org.eclipse.jdt.junit.tests/JUnitTestFinderTest/) and they look just fine.
I also saw that you provided a fix already in #1001 . 

I'll take a look again if that PR doesn't solve the problem, ok?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uXF0i/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/999,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uXOOU,eclipse.jdt.ui,1851581332,999,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-12-12T09:07:54Z,2023-12-12T09:07:54Z,"> I'll take a look again if that PR doesn't solve the problem, ok?

Sure. I'm however not sure **why** do we see such a difference between IDE / Jenkins / SDK...
Would be nice if you could check how one could reproduce the same ""aborted"" state in the IDE.
I guess might be this is not (only) because the test is parametrized but because PDE uses a different engine to run the tests in the IDE.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uXOOU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/999,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uXWT2,eclipse.jdt.ui,1851614454,999,NA,fedejeanne,2205684,Federico Jeanne,,NA,2023-12-12T09:22:43Z,2023-12-12T09:22:43Z,"I can check it, no problem. 

Maybe you can help me find the stack trace of the failed test in the nightly build? I looked around but couldn't find the right stack traces. If I could get my hands on those then I could at least see which runner is being used.

I looked around these places:
* https://download.eclipse.org/eclipse/downloads/drops4/I20231211-1800/logs.php#console
* https://ci.eclipse.org/jdt/
* https://ci.eclipse.org/releng/","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uXWT2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/999,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uXXav,eclipse.jdt.ui,1851618991,999,NA,fedejeanne,2205684,Federico Jeanne,,NA,2023-12-12T09:24:30Z,2023-12-12T09:24:30Z,Also here: https://download.eclipse.org/eclipse/downloads/drops4/I20231211-1800/buildlogs/mb060_run-maven-build_output.txt,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uXXav/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/999,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uXdRs,eclipse.jdt.ui,1851642988,999,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-12-12T09:33:59Z,2023-12-12T09:33:59Z,"The xml report is attached on this ticket but it doesn't contain stack trace, and I don't see any other output produced.

Workspace log also doesn't show anything useful: https://download.eclipse.org/eclipse/downloads/drops4/I20231211-1800/testresults/ep431I-unit-cen64-gtk3-java17_linux.gtk.x86_64_17/org.eclipse.jdt.ui.tests.AutomatedSuite.txt
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uXdRs/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/999,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uXgt9,eclipse.jdt.ui,1851657085,999,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-12-12T09:39:42Z,2023-12-12T09:39:42Z,"I've merged https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1001 now, but not closing this one yet, because I'm not sure if #1001 fixes **this** issue too. Will see tomorrow. I somehow have a feeling there lurks some JUnit result formatter in the platform aggregator build that also need to be adopted.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uXgt9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/999,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uXt8M,eclipse.jdt.ui,1851711244,999,NA,fedejeanne,2205684,Federico Jeanne,,NA,2023-12-12T09:59:32Z,2023-12-12T09:59:32Z,"Maybe @merks knows where the stack traces of the failed tests for the [nightly build](https://download.eclipse.org/eclipse/downloads/drops4/I20231211-1800/testresults/html/org.eclipse.jdt.ui.tests_ep431I-unit-cen64-gtk3-java17_linux.gtk.x86_64_17.html) could be found? Something that shows the stack of the ""skipped"" test `org.eclipse.jdt.junit.tests.JUnitTestFinderTest.testInnerClassWithNestedAnnotationIsFound()`","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uXt8M/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/999,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ueR-s,eclipse.jdt.ui,1853431724,999,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-12-13T08:00:40Z,2023-12-13T08:00:40Z,"> Will see tomorrow. I somehow have a feeling there lurks some JUnit result formatter in the platform aggregator build that also need to be adopted.

The change had no influence on what's reported during SDK build.
https://download.eclipse.org/eclipse/downloads/drops4/I20231212-1800/testresults/html/org.eclipse.jdt.ui.tests_ep431I-unit-cen64-gtk3-java17_linux.gtk.x86_64_17.html

There is code that generates html pages in releng, that must be found & fixed.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ueR-s/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/999,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uefcX,eclipse.jdt.ui,1853486871,999,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-12-13T08:41:44Z,2023-12-13T08:41:44Z,"> There is code that generates html pages in releng, that must be found & fixed.

see https://github.com/eclipse-platform/eclipse.platform.releng.buildtools/blob/master/bundles/org.eclipse.build.tools/src/org/eclipse/releng/generators/TestResultsGenerator.java","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uefcX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/999,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5utant,eclipse.jdt.ui,1857399277,999,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-12-15T07:24:43Z,2023-12-15T07:24:43Z,"i don't understand the build reports anymore: 
Errors=1 - but none shown?
https://download.eclipse.org/eclipse/downloads/drops4/I20231214-1800/testresults/html/org.eclipse.jdt.ui.tests_ep431I-unit-mac64-java17_macosx.cocoa.x86_64_17.html
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/d8bba87b-1130-4f89-9566-8f7c863ff01a)

jenkins says 3 errors but lists only 2:
https://ci.eclipse.org/releng/job/AutomatedTests/job/ep431I-unit-mac64-java17/34/
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/27aadac9-eec1-4680-acca-13c979a2c2f2)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5utant/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/999,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uuT1V,eclipse.jdt.ui,1857633621,999,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-12-15T10:27:44Z,2023-12-15T10:27:44Z,"> i don't understand the build reports anymore:

Looking at the generated xml files, I don't see ""error"" or ""aborted"" **test case** - the only mention of an abort & error is in the **testsuite** element itself, which makes me think the **XML reporter** configured in ant is to blame here, not the html report **generator**.

See here: this is only place in xml file that shows the problem
`<testsuite aborted=""1"" errors=""1"" failures=""0"" id=""0"" name=""AutomatedSuite"" package=""org.eclipse.jdt.ui.tests"" skipped=""6"" tests=""3513"" time=""1039.483"" timestamp=""2023-12-15T05:09:46"">` 

The question is: *who* generates this **xml** that is being processed by `TestResultsGenerator`? That one need to be fixed.

@sravanlakkimsetti , @akurtakov : I believe you could have an idea.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uuT1V/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/999,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uuqCV,eclipse.jdt.ui,1857724565,999,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2023-12-15T11:28:18Z,2023-12-15T11:28:18Z,"@iloveeclipse https://github.com/eclipse-platform/eclipse.platform.releng.aggregator/blob/master/eclipse.platform.releng/bundles/org.eclipse.test/src/org/eclipse/test/LegacyXmlResultFormatter.java should be a hint. Unfortunately, I don't remember much more. https://bugs.eclipse.org/bugs/show_bug.cgi?id=531057 should have more details but I believe this reporting is up for total revamp.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uuqCV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/999,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uwmcB,eclipse.jdt.ui,1858234113,999,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-12-15T17:29:16Z,2023-12-15T17:29:16Z,"@fedejeanne : could you please check if you could see anything suspicious in https://github.com/eclipse-platform/eclipse.platform.releng.aggregator/blob/master/eclipse.platform.releng/bundles/org.eclipse.test/src/org/eclipse/test/LegacyXmlResultFormatter.java ?

If not, could you please check if you can change your original test to avoid ""abort"" case?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uwmcB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/999,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5u6vGB,eclipse.jdt.ui,1860891009,999,NA,fedejeanne,2205684,Federico Jeanne,,NA,2023-12-18T15:57:53Z,2023-12-18T15:57:53Z,"Status update: It seems to be already known, that ""ABORTED"" == ""SKIPPED"", which is why some parts of the code already interpret it like that

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/2205684/bc1b5b2d-a9af-447e-9655-f2cd4fceb76f)

I'm currently doing some manual testing with some JUnit4/5 classes and looking at the generated XML. I'll provide a PR tomorrow.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5u6vGB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/999,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vAnSN,eclipse.jdt.ui,1862431885,999,NA,fedejeanne,2205684,Federico Jeanne,,NA,2023-12-19T09:43:36Z,2023-12-19T09:43:36Z,"I did some tests and a lot of reading and it turns out (almost) everything works as expected: the difference between _ABORTED_ and _SKIPPED_ is that an _aborted_ test starts but never finishes while a _skipped_ test never really starts.

This behavior is consistent across JUnit4 and JUnit5 and can be achieved in different ways:

## Skipping a test
* In JUnit4: annotate the test with `@Ignore`
* In JUnit5: annotate the test with `@Disabled` or some dynamic annotation like `@EnabledOn...`, `@DisabledOn...`, `@EnabledIf...` [etc.](https://www.baeldung.com/junit-5-conditional-test-execution)

## Aborting a test
* In JUnit4: use `org.junit.Assume` or throw an `org.junit.AssumptionViolatedException`
* In JUnit5: use `org.junit.jupiter.api.Assumptions` or throw a `org.opentest4j.TestAbortedException` /  `org.junit.AssumptionViolatedException`

## Summary
> The test is ""aborted"" but intention was that it should be marked as ""skipped"". 

Wrong: _aborted_ is correct

> I see other tests that also use ""assume"" but are don't marked as aborted. 

Where? Those are probably wrong and should be marked as _aborted_, not skipped.

> We should make sure that this test does not show as an error if the intention was to skip it.

I don't think that has anything to do with the _aborted_ / _skipped_ tests. Tests marked as _error_ are those which end up throwing an exception **other than `AssertionError`** (if an assertion fails then it's a _failed_ test). I'll look into it.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vAnSN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/999,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vUs56,eclipse.jdt.ui,1867697786,999,NA,fedejeanne,2205684,Federico Jeanne,,NA,2023-12-22T13:36:30Z,2023-12-22T13:36:30Z,"> I don't think that has anything to do with the aborted / skipped tests. Tests marked as error are those which end up throwing an exception other than AssertionError (if an assertion fails then it's a failed test). I'll look into it.

See https://github.com/eclipse-platform/eclipse.platform.releng.aggregator/issues/1689","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vUs56/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/999,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vnJyq,eclipse.jdt.ui,1872534698,999,NA,fedejeanne,2205684,Federico Jeanne,,NA,2023-12-30T14:08:00Z,2023-12-30T14:08:00Z,"Now that https://github.com/eclipse-platform/eclipse.platform.releng.aggregator/pull/1690 is merged, the real problem became visible: it's not the fact that a test is being aborted but a missing file in the test. I find it odd though that the tests work in GA (e.g. [here](https://ci.eclipse.org/jdt/job/eclipse.jdt.ui-github/view/change-requests/job/PR-1032/4/testReport/AutomatedSuite%20org.eclipse.jdt.junit.tests.JUnitJUnitTests%20org.eclipse.jdt.junit.tests/JUnit5TestFinderJupiterTest/)) but they fail in the nightly builds. The test resources are being packaged though, so they should be there.

![grafik](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/2205684/0aea0276-22ac-4ee5-9f71-7578af667be2)

Does anyone have an idea what are the nightly builds doing differently or why is the file not being found in them?

I apologize in advance for late responses. If someone else wants to take the lead on this one, I would appreciate it.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vnJyq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/999,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vnJ6N,eclipse.jdt.ui,1872535181,999,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-12-30T14:10:56Z,2023-12-30T14:10:56Z,Please add missing files (I assume folder) to the build.properties of the bundle.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vnJ6N/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/999,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vqKFk,eclipse.jdt.ui,1873322340,999,NA,fedejeanne,2205684,Federico Jeanne,,NA,2024-01-01T13:10:23Z,2024-01-01T13:10:23Z,"> Please add missing files (I assume folder) to the build.properties of the bundle.

It's already there: https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/master/org.eclipse.jdt.ui.tests/build.properties#L17","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vqKFk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/999,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vqMue,eclipse.jdt.ui,1873333150,999,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-01-01T13:41:14Z,2024-01-01T13:41:14Z,"1) Can you please check if the test bundle itself after the build contain the required files?
2) Which code is supposed to use these files, and how they are accessed?

I assume either the files are **not** packaged properly, or they are not properly fetched at runtime. Typical problem is that one tries to access files that (in SDK build) packaged inside a jar and that works for IDE tests where they are ""in place"", and doesn't in the final build.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vqMue/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/999,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vqp5z,eclipse.jdt.ui,1873452659,999,NA,fedejeanne,2205684,Federico Jeanne,,NA,2024-01-01T19:38:24Z,2024-01-01T19:38:24Z,"> 1. Can you please check if the test bundle itself after the build contain the required files?

I checked in the generated [repository (ZIP)](https://download.eclipse.org/eclipse/downloads/drops4/I20231231-2320/download.php?dropFile=repository-I20231231-2320.zip) and the file is there. It's being packaged inside a JAR though, so that might be a problem.

> 2. Which code is supposed to use these files, and how they are accessed?

The path to the file is specified like this:

https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/6cc39d9a5697dc92738aa7e9f24cb976e802f699/org.eclipse.jdt.ui.tests/ui/org/eclipse/jdt/junit/tests/JUnit5TestFinderJupiterTest.java#L60-L64

And its content is read like this:

https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/6cc39d9a5697dc92738aa7e9f24cb976e802f699/org.eclipse.jdt.ui.tests/ui/org/eclipse/jdt/junit/tests/JUnit5TestFinderJupiterTest.java#L144","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vqp5z/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1000,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1000,eclipse.jdt.ui,2037211392,1000,"JUnit view doesn't support ""aborted"" JUnit result",iloveeclipse,964108,Andrey Loskutov,,CLOSED,2023-12-12T08:13:38Z,2023-12-12T09:36:11Z,"See https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/999.

Please change this ""txt"" file to ""xml"" (github doesn't allow to add xml files to ticket)  and try to import into the JUnit view.
[org.eclipse.jdt.ui.tests_ep431I-unit-cen64-gtk3-java17_linux.gtk.x86_64_17.txt](https://github.com/eclipse-jdt/eclipse.jdt.ui/files/13645332/org.eclipse.jdt.ui.tests_ep431I-unit-cen64-gtk3-java17_linux.gtk.x86_64_17.txt)

An error will be reported:
```
eclipse.buildId=4.31.0.I20231211-1800
java.version=21.0.1
java.vendor=N/A
BootLoader constants: OS=linux, ARCH=x86_64, WS=gtk, NL=en_US
Command-line arguments:  -data /data/4x_platform_workspace -os linux -ws gtk -arch x86_64

org.eclipse.jdt.junit
Error
Tue Dec 12 08:41:29 CET 2023
Error

org.eclipse.core.runtime.CoreException: The test run could not be imported from file '/home/aloskuto/Downloads/org.eclipse.jdt.ui.tests_ep431I-unit-cen64-gtk3-java17_linux.gtk.x86_64_17.xml'.
	at org.eclipse.jdt.internal.junit.model.JUnitModel.throwImportError(JUnitModel.java:539)
	at org.eclipse.jdt.internal.junit.model.JUnitModel.importTestRunSession(JUnitModel.java:397)
	at org.eclipse.jdt.internal.junit.ui.TestRunnerViewPart$ImportTestRunSessionAction.run(TestRunnerViewPart.java:526)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:581)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:415)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:5854)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1529)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:5064)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4516)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1152)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1043)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:152)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:648)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:555)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1432)
Caused by: org.xml.sax.SAXParseException; systemId: file:/home/aloskuto/Downloads/org.eclipse.jdt.ui.tests_ep431I-unit-cen64-gtk3-java17_linux.gtk.x86_64_17.xml; lineNumber: 3199; columnNumber: 104; unknown node 'aborted'
	at org.eclipse.jdt.internal.junit.model.TestRunHandler.startElement(TestRunHandler.java:218)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.startElement(AbstractSAXParser.java:518)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.AbstractXMLDocumentParser.emptyElement(AbstractXMLDocumentParser.java:183)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanStartElement(XMLDocumentFragmentScannerImpl.java:1387)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2726)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:605)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:542)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:889)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:825)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1224)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:637)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl.parse(SAXParserImpl.java:326)
	at java.xml/javax.xml.parsers.SAXParser.parse(SAXParser.java:330)
	at org.eclipse.jdt.internal.junit.model.JUnitModel.importTestRunSession(JUnitModel.java:392)
	... 29 more
```

I see in JUnit 5 javadoc that there is ""ABORTED"" state : https://junit.org/junit5/docs/5.0.1/api/org/junit/platform/engine/TestExecutionResult.Status.html

However, in `org.eclipse.jdt.internal.junit.model.IXMLTags` and in the `org.eclipse.jdt.internal.junit.model.TestRunHandler` we don't ""know"" that state and fail.

We should support that. The simplest workaround is to declare ""aborted"" as ""skipped"" and the patch seem to be trivial.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1000/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1000,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uW55o,eclipse.jdt.ui,1851498088,1000,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-12-12T08:15:53Z,2023-12-12T08:15:53Z,"Interestingly, running the very same test from the IDE doesn't show ""aborted"" but ""skipped"" state. I guess it is because in the IDE it somehow goes over the vintage engine and that one **is probably remapping** ""aborted"" to ""skipped"".","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uW55o/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1000,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uXK7P,eclipse.jdt.ui,1851567823,1000,NA,fedejeanne,2205684,Federico Jeanne,,NA,2023-12-12T08:59:30Z,2023-12-12T08:59:30Z,"> I see in JUnit 5 javadoc that there is ""ABORTED"" state : https://junit.org/junit5/docs/5.0.1/api/org/junit/platform/engine/TestExecutionResult.Status.html
>
> However, in org.eclipse.jdt.internal.junit.model.IXMLTags and in the org.eclipse.jdt.internal.junit.model.TestRunHandler we don't ""know"" that state and fail.
>
> We should support that. The simplest workaround is to declare ""aborted"" as ""skipped"" and the patch seem to be trivial.

Makes sense since ""aborted"" doesn't seem to mean ""timeout exceeded"" (at least not in the IDE), I just tested this with a small test:

```java
@Test(timeout= 100)
public void testWithTimeout() throws Exception {
	Thread.sleep(1000);
}
```

This test **fails** (_i.e._ `org.junit.platform.engine.TestExecutionResult.Status.FAILED`) both with the `JUnit4` runner and with the `Parameterized` runner (at least in the IDE they do so)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uXK7P/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1002,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1002,eclipse.jdt.ui,2037357515,1002,`NoClassDefFoundError` when running JUnit tests with Spock,rbioteau,1768761,Romain Bioteau,romain.bioteau@bonitasoft.com,OPEN,2023-12-12T09:40:17Z,2023-12-12T09:40:17Z,"It appears that the wrong version of junit platform engine is resolved when running Spock tests from a Maven project.

Yields the following stacktrace:

```
java.lang.BootstrapMethodError: java.lang.NoClassDefFoundError: org/junit/platform/engine/support/store/NamespacedHierarchicalStore$CloseAction
	at org.junit.jupiter.engine.descriptor.AbstractExtensionContext.<clinit>(AbstractExtensionContext.java:43)
	at org.junit.jupiter.engine.descriptor.JupiterEngineDescriptor.prepare(JupiterEngineDescriptor.java:57)
	at org.junit.jupiter.engine.descriptor.JupiterEngineDescriptor.prepare(JupiterEngineDescriptor.java:31)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:95)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:91)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:60)
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:100)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:529)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:756)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:452)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)
Caused by: java.lang.NoClassDefFoundError: org/junit/platform/engine/support/store/NamespacedHierarchicalStore$CloseAction
	... 26 more
Caused by: java.lang.ClassNotFoundException: org.junit.platform.engine.support.store.NamespacedHierarchicalStore$CloseAction
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	... 26 more
```

![Unrooted Tests](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1768761/56302dd7-9c33-41a5-ba28-bf11b8f7bb6e)

Example to reproduce: [calculator_example.zip](https://github.com/eclipse-jdt/eclipse.jdt.ui/files/13646329/calculator_example.zip)

:notebook: Adding an explicit dependency to `org.junit.platform:junit-platform-engine:1.10.1` workaround the issue. By default, Spock depends on version `1.9.0`

```
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-engine</artifactId>
            <version>1.10.1</version>
            <scope>test</scope>
        </dependency>
```

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1002/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1003,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1003,eclipse.jdt.ui,2038112577,1003,postfixCompletion proposal computer did not complete normally,Madjosz,28844868,,,OPEN,2023-12-12T16:17:20Z,2024-01-25T13:00:00Z,"When having ""Java Postfix Template Proposals"" enabled, with the following code
```java
class MyClass {
    MyClass(Object o) {
    }
}
```
and the caret between `(` and `Object` of the `MyClass` constructor, when activating Content Assist the following exception is thrown:

> The 'org.eclipse.jdt.ui.postfixCompletion' proposal computer from the 'org.eclipse.jdt.ui' plug-in did not complete normally. The extension has thrown a runtime exception.

```stacktrace
java.lang.IllegalArgumentException: 
	at org.eclipse.jdt.core.Signature.createCharArrayTypeSignature(Signature.java:1105)
	at org.eclipse.jdt.core.Signature.createTypeSignature(Signature.java:1305)
	at org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.convertTypeNamesToSigs(CompilationUnitStructureRequestor.java:292)
	at org.eclipse.jdt.internal.codeassist.CompletionUnitStructureRequestor.createMethodHandle(CompletionUnitStructureRequestor.java:143)
	at org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.enterMethod(CompilationUnitStructureRequestor.java:419)
	at org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor.enterConstructor(CompilationUnitStructureRequestor.java:345)
	at org.eclipse.jdt.internal.compiler.SourceElementNotifier.notifySourceElementRequestor(SourceElementNotifier.java:334)
	at org.eclipse.jdt.internal.codeassist.CompletionElementNotifier.notifySourceElementRequestor(CompletionElementNotifier.java:197)
	at org.eclipse.jdt.internal.compiler.SourceElementNotifier.notifySourceElementRequestor(SourceElementNotifier.java:804)
	at org.eclipse.jdt.internal.codeassist.CompletionElementNotifier.notifySourceElementRequestor(CompletionElementNotifier.java:226)
	at org.eclipse.jdt.internal.compiler.SourceElementNotifier.notifySourceElementRequestor(SourceElementNotifier.java:488)
	at org.eclipse.jdt.internal.codeassist.CompletionElementNotifier.notifySourceElementRequestor(CompletionElementNotifier.java:202)
	at org.eclipse.jdt.internal.codeassist.InternalExtendedCompletionContext.computeEnclosingJavaElements(InternalExtendedCompletionContext.java:162)
	at org.eclipse.jdt.internal.codeassist.InternalExtendedCompletionContext.getEnclosingElement(InternalExtendedCompletionContext.java:255)
	at org.eclipse.jdt.internal.codeassist.InternalCompletionContext.getEnclosingElement(InternalCompletionContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.PostfixCompletionProposalComputer.updateTemplateEngine(PostfixCompletionProposalComputer.java:142)
	at org.eclipse.jdt.internal.ui.text.java.PostfixCompletionProposalComputer.analyzeCoreContext(PostfixCompletionProposalComputer.java:121)
	at org.eclipse.jdt.internal.ui.text.java.PostfixCompletionProposalComputer.computeCompletionEngine(PostfixCompletionProposalComputer.java:110)
	at org.eclipse.jdt.internal.ui.text.java.AbstractTemplateCompletionProposalComputer.computeCompletionProposals(AbstractTemplateCompletionProposalComputer.java:71)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalComputerDescriptor.computeCompletionProposals(CompletionProposalComputerDescriptor.java:348)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalCategory.computeCompletionProposals(CompletionProposalCategory.java:340)
	at org.eclipse.jdt.internal.ui.text.java.ContentAssistProcessor.collectProposals(ContentAssistProcessor.java:333)
	at org.eclipse.jdt.internal.ui.text.java.ContentAssistProcessor.computeCompletionProposals(ContentAssistProcessor.java:289)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
```
# System information
Eclipse SDK
Version: 2024-03 (4.31)
Build id: I20231212-0120

openjdk version ""21"" 2023-09-19 LTS
OpenJDK Runtime Environment Temurin-21+35 (build 21+35-LTS)
OpenJDK 64-Bit Server VM Temurin-21+35 (build 21+35-LTS, mixed mode, sharing)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1003/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1003,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x2ut3,eclipse.jdt.ui,1910172535,1003,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-25T12:59:29Z,2024-01-25T12:59:29Z,"can reproduce
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/829be27a-ad7c-47b8-b69b-6ecc621cafaa)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x2ut3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1005,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1005,eclipse.jdt.ui,2039260495,1005,IllegalStateException: Its not allow to modify JavaModel during ReadOnly action,jukzi,51790620,Jörg Kubitz,,CLOSED,2023-12-13T09:05:15Z,2024-01-08T18:17:45Z,"my own regression from https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/933
happened when in java editor i followed some link, don't remember the details

```
java.lang.IllegalStateException: Its not allow to modify JavaModel during ReadOnly action.
	at org.eclipse.jdt.internal.core.JavaModelManager.assertModelModifiable(JavaModelManager.java:5786)
	at org.eclipse.jdt.internal.core.DeltaProcessor.registerJavaModelDelta(DeltaProcessor.java:2037)
	at org.eclipse.jdt.internal.core.JavaModelOperation.addDelta(JavaModelOperation.java:176)
	at org.eclipse.jdt.internal.core.BecomeWorkingCopyOperation.executeOperation(BecomeWorkingCopyOperation.java:57)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:742)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:808)
	at org.eclipse.jdt.internal.core.CompilationUnit.becomeWorkingCopy(CompilationUnit.java:98)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.createFileInfo(CompilationUnitDocumentProvider.java:1015)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.connect(TextFileDocumentProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.connect(CompilationUnitDocumentProvider.java:1253)
	at org.eclipse.ui.texteditor.AbstractTextEditor.doSetInput(AbstractTextEditor.java:4186)
	at org.eclipse.ui.texteditor.StatusTextEditor.doSetInput(StatusTextEditor.java:262)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.doSetInput(AbstractDecoratedTextEditor.java:1474)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.internalDoSetInput(JavaEditor.java:2563)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.doSetInput(JavaEditor.java:2536)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSetInput(CompilationUnitEditor.java:1415)
	at org.eclipse.ui.texteditor.AbstractTextEditor.lambda$1(AbstractTextEditor.java:3171)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:354)
	at org.eclipse.ui.internal.WorkbenchWindow.lambda$7(WorkbenchWindow.java:2335)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2332)
	at org.eclipse.ui.texteditor.AbstractTextEditor.internalInit(AbstractTextEditor.java:3188)
	at org.eclipse.ui.texteditor.AbstractTextEditor.init(AbstractTextEditor.java:3213)
	at org.eclipse.ui.internal.EditorReference.initialize(EditorReference.java:353)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.create(CompatibilityPart.java:344)
	at jdk.internal.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:976)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:938)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalInject(InjectorImpl.java:138)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:385)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:311)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:203)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:91)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:60)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:42)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributedPartRenderer.createWidget(ContributedPartRenderer.java:132)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:992)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.lambda$0(PartServiceImpl.java:105)
	at org.eclipse.e4.ui.services.internal.events.UIEventHandler.lambda$0(UIEventHandler.java:38)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:183)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4802)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.services.internal.events.UIEventHandler.handleEvent(UIEventHandler.java:38)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:207)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:201)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:233)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:60)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.ElementContainerImpl.setSelectedElementGen(ElementContainerImpl.java:167)
	at org.eclipse.e4.ui.model.application.ui.impl.ElementContainerImpl.setSelectedElement(ElementContainerImpl.java:185)
	at org.eclipse.e4.ui.internal.workbench.ModelServiceImpl.showElementInWindow(ModelServiceImpl.java:654)
	at org.eclipse.e4.ui.internal.workbench.ModelServiceImpl.bringToTop(ModelServiceImpl.java:618)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.delegateBringToTop(PartServiceImpl.java:796)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.showPart(PartServiceImpl.java:1268)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:3228)
	at org.eclipse.ui.internal.WorkbenchPage.lambda$11(WorkbenchPage.java:3118)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:3116)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:3086)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:3077)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:380)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:184)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:289)
	at org.eclipse.jdt.ui.actions.OpenAction.lambda$0(OpenAction.java:255)
	at org.eclipse.jdt.core.JavaCore.lambda$0(JavaCore.java:6032)
	at org.eclipse.jdt.internal.core.JavaModelManager.cacheZipFiles(JavaModelManager.java:5821)
	at org.eclipse.jdt.internal.core.JavaModelManager.callReadOnlyUnchecked(JavaModelManager.java:5809)
	at org.eclipse.jdt.internal.core.JavaModelManager.callReadOnly(JavaModelManager.java:5797)
	at org.eclipse.jdt.core.JavaCore.callReadOnly(JavaCore.java:6016)
	at org.eclipse.jdt.core.JavaCore.runReadOnly(JavaCore.java:6031)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:255)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaElementHyperlink.open(JavaElementHyperlink.java:82)
	at org.eclipse.jface.text.hyperlink.HyperlinkManager.mouseUp(HyperlinkManager.java:426)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:224)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4273)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4071)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1152)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1043)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:152)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:648)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:555)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1005/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1005,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ufh4W,eclipse.jdt.ui,1853758998,1005,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-12-13T11:39:37Z,2023-12-13T11:39:37Z,"another stacktrace:
```
java.lang.IllegalStateException: Its not allow to modify JavaModel during ReadOnly action.
	at org.eclipse.jdt.internal.core.JavaModelManager.assertModelModifiable(JavaModelManager.java:5786)
	at org.eclipse.jdt.internal.core.DeltaProcessor.registerJavaModelDelta(DeltaProcessor.java:2037)
	at org.eclipse.jdt.internal.core.JavaModelOperation.addDelta(JavaModelOperation.java:176)
	at org.eclipse.jdt.internal.core.BecomeWorkingCopyOperation.executeOperation(BecomeWorkingCopyOperation.java:49)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:742)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:808)
	at org.eclipse.jdt.internal.core.CompilationUnit.getWorkingCopy(CompilationUnit.java:1048)
	at org.eclipse.jdt.internal.core.CompilationUnit.getWorkingCopy(CompilationUnit.java:1014)
	at org.eclipse.jdt.internal.corext.util.StaticImportFavoritesCompletionInvoker.getStaticImportFavorites(StaticImportFavoritesCompletionInvoker.java:50)
	at org.eclipse.jdt.internal.corext.util.JavaModelUtil.getStaticImportFavorites(JavaModelUtil.java:1331)
	at org.eclipse.jdt.internal.ui.text.correction.UnresolvedElementsSubProcessor.addStaticImportFavoriteProposals(UnresolvedElementsSubProcessor.java:1392)
	at org.eclipse.jdt.internal.ui.text.correction.UnresolvedElementsSubProcessor.getMethodProposals(UnresolvedElementsSubProcessor.java:1356)
	at org.eclipse.jdt.internal.ui.text.correction.QuickFixProcessor.process(QuickFixProcessor.java:405)
	at org.eclipse.jdt.internal.ui.text.correction.QuickFixProcessor.getCorrections(QuickFixProcessor.java:377)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionCollector.safeRun(JavaCorrectionProcessor.java:384)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.run(JavaCorrectionProcessor.java:342)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.process(JavaCorrectionProcessor.java:337)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectCorrections(JavaCorrectionProcessor.java:470)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:115)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.computeCompletionProposals(ProblemHover.java:89)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.<init>(ProblemHover.java:74)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover.createAnnotationInfo(ProblemHover.java:178)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover.getHoverInfo2(AbstractAnnotationHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.lambda$0(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.core.JavaModelManager.cacheZipFiles(JavaModelManager.java:5821)
	at org.eclipse.jdt.internal.core.JavaModelManager.callReadOnlyUnchecked(JavaModelManager.java:5809)
	at org.eclipse.jdt.internal.core.JavaModelManager.callReadOnly(JavaModelManager.java:5797)
	at org.eclipse.jdt.core.JavaCore.callReadOnly(JavaCore.java:6016)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ufh4W/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1005,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5wJuev,eclipse.jdt.ui,1881597871,1005,NA,rgrunber,1417342,Roland Grunberg,,NA,2024-01-08T18:17:44Z,2024-01-08T18:17:44Z,"Thanks for fixing this. It only seems to happen the first time, and then it works.

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1417342/5f0b9a72-0d6e-46d6-a803-f8ad6e875345)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5wJuev/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1008,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1008,eclipse.jdt.ui,2039714387,1008,Quickfix Converting to Enhanced For Loop Creates Invalid Code,amartya4256,46150646,Amartya Parijat,,CLOSED,2023-12-13T13:27:36Z,2023-12-13T19:25:23Z,"## Current Behavior

JDT provides a quickfix for converting classic `for` loops into enhanced for loops. When using a classic `for` loop to iterate through the elements of an iterator calling `next()` within the loop body but not using its result (such as when only counting the elements), applying the quickfix for converting into an enhanced `for` loop leads to syntactically incorrect code.

### Example

Original code:
```java
List<Object> list = new ArrayList<>();
int i = 0;
for (Iterator<Object> iterator = list.iterator(); iterator.hasNext();) {
	iterator.next();
	i++;
}
```

After applying the quickfix: 
```java
List<Object> list = new ArrayList<>();
int i = 0;
for (Object object : list) {
	object;
	i++;
}
```
`object;` is an invalid statement.

### Reproduction Environment

Happens with Eclipse 2023-09 and JDK 17.


## Expected Behavior

The quick fix should always produce syntactically (and semantically) correct code. For the given example, the quick fix should either not be provided or the result should look as follows:
```java
List<Object> list = new ArrayList<>();
int i = 0;
for (Object object : list) {
	i++;
}
```


## Additional Information

The invalid result only occurs when performing the `next()` call within the loop body. When performing it within the loop header, the refactoring result is correct, e.g.:

Original code:
```java
List<Object> list = new ArrayList<>();
int i = 0;
for (Iterator<Object> iterator = list.iterator(); iterator.hasNext(); iterator.next()) {
	i++;
}
```

After applying the quickfix: 
```java
List<Object> list = new ArrayList<>();
int i = 0;
for (Object object : list) {
	i++;
}
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1008/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1010,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1010,eclipse.jdt.ui,2040155697,1010,"""Internal Error"" reported on copy/paste or rename of a file in explorer",iloveeclipse,964108,Andrey Loskutov,,CLOSED,2023-12-13T17:17:25Z,2023-12-13T20:15:23Z,"- In any Java project
- In Package Explorer
- Select any file
- Copy via Ctrl+C
- Paste via Ctrl+V
- Error dialog
- Regression from https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/933

```
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:443)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:354)
	at org.eclipse.ui.internal.WorkbenchWindow.lambda$7(WorkbenchWindow.java:2335)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2332)
	at org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper.perform(RefactoringExecutionHelper.java:187)
	at org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper.perform(RefactoringExecutionHelper.java:151)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.ReorgCopyStarter.run(ReorgCopyStarter.java:71)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.PasteAction$JavaElementAndResourcePaster.paste(PasteAction.java:1368)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.PasteAction.run(PasteAction.java:270)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:276)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.lambda$0(SelectionDispatchAction.java:254)
	at org.eclipse.jdt.core.JavaCore.lambda$0(JavaCore.java:6032)
	at org.eclipse.jdt.internal.core.JavaModelManager.cacheZipFiles(JavaModelManager.java:5821)
	at org.eclipse.jdt.internal.core.JavaModelManager.callReadOnlyUnchecked(JavaModelManager.java:5809)
	at org.eclipse.jdt.internal.core.JavaModelManager.callReadOnly(JavaModelManager.java:5797)
	at org.eclipse.jdt.core.JavaCore.callReadOnly(JavaCore.java:6016)
	at org.eclipse.jdt.core.JavaCore.runReadOnly(JavaCore.java:6031)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:254)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:98)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:298)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:232)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:174)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:165)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:204)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:569)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:644)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
``` 

**Same code, different use case**

- In any Java project
- Open any java file
- Change anything **but not save**
- In Package Explorer
- Select any other file
- Hit F2 to rename
- Error reported in the log
- Regression from https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/933

```
java.lang.IllegalStateException: Its not allow to modify JavaModel during ReadOnly action.
	at org.eclipse.jdt.internal.core.JavaModelManager.assertModelModifiable(JavaModelManager.java:5786)
	at org.eclipse.jdt.internal.core.DeltaProcessor.registerJavaModelDelta(DeltaProcessor.java:2037)
	at org.eclipse.jdt.internal.core.DeltaProcessor.resourceChanged(DeltaProcessor.java:2163)
	at org.eclipse.jdt.internal.core.DeltaProcessingState.resourceChanged(DeltaProcessingState.java:503)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:321)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:311)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:174)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:458)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1586)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2462)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2473)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:131)
	at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:76)
	at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:66)
	at org.eclipse.ui.texteditor.AbstractDocumentProvider.executeOperation(AbstractDocumentProvider.java:539)
	at org.eclipse.ui.texteditor.AbstractDocumentProvider.saveDocument(AbstractDocumentProvider.java:614)
	at org.eclipse.ui.texteditor.AbstractTextEditor.performSave(AbstractTextEditor.java:5018)
	at de.jcup.basheditor.BashEditor.performSave(BashEditor.java:944)
	at org.eclipse.ui.texteditor.AbstractTextEditor.doSave(AbstractTextEditor.java:4814)
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.doSave(AbstractTextEditor.java:7233)
	at org.eclipse.ui.Saveable.doSave(Saveable.java:213)
	at org.eclipse.ui.internal.SaveableHelper.doSaveModel(SaveableHelper.java:326)
	at org.eclipse.ui.internal.SaveablesList.lambda$2(SaveablesList.java:804)
	at org.eclipse.ui.internal.SaveableHelper.lambda$3(SaveableHelper.java:270)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:354)
	at org.eclipse.ui.internal.WorkbenchWindow.lambda$7(WorkbenchWindow.java:2335)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2332)
	at org.eclipse.ui.internal.SaveableHelper.runProgressMonitorOperation(SaveableHelper.java:277)
	at org.eclipse.ui.internal.SaveablesList.saveModels(SaveablesList.java:812)
	at org.eclipse.ui.internal.WorkbenchPage.saveAll(WorkbenchPage.java:3615)
	at org.eclipse.ui.internal.Workbench.saveAllEditors(Workbench.java:1330)
	at org.eclipse.ui.internal.Workbench.saveAllEditors(Workbench.java:1309)
	at org.eclipse.jdt.ui.refactoring.RefactoringSaveHelper.saveEditors(RefactoringSaveHelper.java:139)
	at org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.canActivate(RefactoringStarter.java:59)
	at org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:36)
	at org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter.startRenameResourceRefactoring(RefactoringExecutionStarter.java:448)
	at org.eclipse.jdt.internal.ui.refactoring.actions.RenameResourceAction.run(RenameResourceAction.java:48)
	at org.eclipse.jdt.ui.actions.RenameAction.run(RenameAction.java:115)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:276)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.lambda$0(SelectionDispatchAction.java:254)
	at org.eclipse.jdt.core.JavaCore.lambda$0(JavaCore.java:6032)
	at org.eclipse.jdt.internal.core.JavaModelManager.cacheZipFiles(JavaModelManager.java:5821)
	at org.eclipse.jdt.internal.core.JavaModelManager.callReadOnlyUnchecked(JavaModelManager.java:5809)
	at org.eclipse.jdt.internal.core.JavaModelManager.callReadOnly(JavaModelManager.java:5797)
	at org.eclipse.jdt.core.JavaCore.callReadOnly(JavaCore.java:6016)
	at org.eclipse.jdt.core.JavaCore.runReadOnly(JavaCore.java:6031)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:254)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:98)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:298)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:232)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:174)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:165)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:204)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:569)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:644)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1953)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1528)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1555)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1538)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1577)
	at org.eclipse.swt.widgets.Widget.gtk_key_press_event(Widget.java:937)
	at org.eclipse.swt.widgets.Control.gtk_key_press_event(Control.java:4049)
	at org.eclipse.swt.widgets.Composite.gtk_key_press_event(Composite.java:931)
	at org.eclipse.swt.widgets.Tree.gtk_key_press_event(Tree.java:2375)
	at org.eclipse.swt.widgets.Widget.windowProc(Widget.java:2507)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:6883)
	at org.eclipse.swt.widgets.Tree.windowProc(Tree.java:4288)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:6162)
	at org.eclipse.swt.internal.gtk3.GTK3.gtk_main_do_event(Native Method)
	at org.eclipse.swt.widgets.Display.eventProc(Display.java:1597)
	at org.eclipse.swt.internal.gtk3.GTK3.gtk_main_iteration_do(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4513)
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1010/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1010,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uilLI,eclipse.jdt.ui,1854558920,1010,NA,jukzi,51790620,Jörg Kubitz,,NA,2023-12-13T19:12:53Z,2023-12-13T19:12:53Z,"can reproduce. full stacktrace:

```
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:443)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:354)
	at org.eclipse.ui.internal.WorkbenchWindow.lambda$7(WorkbenchWindow.java:2335)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2332)
	at org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper.perform(RefactoringExecutionHelper.java:187)
	at org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper.perform(RefactoringExecutionHelper.java:151)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.ReorgCopyStarter.run(ReorgCopyStarter.java:71)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.PasteAction$JavaElementAndResourcePaster.paste(PasteAction.java:1368)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.PasteAction.run(PasteAction.java:270)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:276)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.lambda$0(SelectionDispatchAction.java:254)
	at org.eclipse.jdt.core.JavaCore.lambda$0(JavaCore.java:6032)
	at org.eclipse.jdt.internal.core.JavaModelManager.cacheZipFiles(JavaModelManager.java:5821)
	at org.eclipse.jdt.internal.core.JavaModelManager.callReadOnlyUnchecked(JavaModelManager.java:5809)
	at org.eclipse.jdt.internal.core.JavaModelManager.callReadOnly(JavaModelManager.java:5797)
	at org.eclipse.jdt.core.JavaCore.callReadOnly(JavaCore.java:6016)
	at org.eclipse.jdt.core.JavaCore.runReadOnly(JavaCore.java:6031)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:254)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:98)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:298)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:232)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:174)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:165)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:204)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:569)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:644)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1286)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1594)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4866)
	at org.eclipse.swt.widgets.Tree.WM_CHAR(Tree.java:6147)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4744)
	at org.eclipse.swt.widgets.Tree.windowProc(Tree.java:6142)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5039)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3657)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1152)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1043)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:152)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:648)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:555)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)
Caused by: java.lang.IllegalStateException: Its not allow to modify JavaModel during ReadOnly action.
	at org.eclipse.jdt.internal.core.JavaModelManager.assertModelModifiable(JavaModelManager.java:5786)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5966)
	at org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:108)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	... 74 more
Root exception:
java.lang.IllegalStateException: Its not allow to modify JavaModel during ReadOnly action.
	at org.eclipse.jdt.internal.core.JavaModelManager.assertModelModifiable(JavaModelManager.java:5786)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5966)
	at org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:108)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:354)
	at org.eclipse.ui.internal.WorkbenchWindow.lambda$7(WorkbenchWindow.java:2335)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2332)
	at org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper.perform(RefactoringExecutionHelper.java:187)
	at org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper.perform(RefactoringExecutionHelper.java:151)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.ReorgCopyStarter.run(ReorgCopyStarter.java:71)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.PasteAction$JavaElementAndResourcePaster.paste(PasteAction.java:1368)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.PasteAction.run(PasteAction.java:270)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:276)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.lambda$0(SelectionDispatchAction.java:254)
	at org.eclipse.jdt.core.JavaCore.lambda$0(JavaCore.java:6032)
	at org.eclipse.jdt.internal.core.JavaModelManager.cacheZipFiles(JavaModelManager.java:5821)
	at org.eclipse.jdt.internal.core.JavaModelManager.callReadOnlyUnchecked(JavaModelManager.java:5809)
	at org.eclipse.jdt.internal.core.JavaModelManager.callReadOnly(JavaModelManager.java:5797)
	at org.eclipse.jdt.core.JavaCore.callReadOnly(JavaCore.java:6016)
	at org.eclipse.jdt.core.JavaCore.runReadOnly(JavaCore.java:6031)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:254)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:98)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:298)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:232)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:174)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:165)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:204)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:569)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:644)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1286)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1594)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4866)
	at org.eclipse.swt.widgets.Tree.WM_CHAR(Tree.java:6147)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4744)
	at org.eclipse.swt.widgets.Tree.windowProc(Tree.java:6142)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5039)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3657)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1152)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1043)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:152)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:648)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:555)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5uilLI/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1013,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1013,eclipse.jdt.ui,2041633608,1013,Quick Fix: Convert Iterable to Enhanced For Loop Omits Next Method for Any Class,amartya4256,46150646,Amartya Parijat,,CLOSED,2023-12-14T12:48:51Z,2023-12-14T21:39:54Z,"There's a bug currently on converting an iterable to enhanced for loop. When there is a statement like object.next(); The statement is omitted upon conversion even if the object belongs to a different class. 

The problem is that in the block there's is no check for the iterator variable before performing the operation and it must be added.

```java
public void foo() throws IOException {
	Test i = new Test();
	for (Iterator<String> iterator = c.iterator(); iterator.hasNext();) {
		i.next();
                iterator.next();
	}
}
```
```java
class Test {
	public Object next() {
		return null;
	}
}
```

Upon Conversion:

### Current Behavior
```java
public void foo() {
    Test i = new Test();
    for (String string: c) {
    }
}
```

### Expected Behavior
```java
public void foo() {
    Test i = new Test();
    for (String string: c) {
        i.next(); 
    }
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1013/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1018,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1018,eclipse.jdt.ui,2043642298,1018,EEA annotation preview shows corrupt formatting,frankbenoit,8962790,Frank Benoit,,OPEN,2023-12-15T12:27:37Z,2023-12-15T12:27:37Z,"Version: 2023-12 (4.30.0)
Build id: 20231201-2043

This example shows the apache lang3 StringUtils.removeEnd:

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/8962790/6e03f5ff-23b1-473e-a8e4-12b42fedf427)

The bold and strikethrough styles seems to be 2 characters shifted from the correct position.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1018/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1021,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1021,eclipse.jdt.ui,2044022172,1021,Missing stack traces of fails/errors for @TestTemplate with only 1 executed test,trancexpress,24752155,Simeon Andreev,,CLOSED,2023-12-15T16:33:17Z,2023-12-18T14:50:14Z,"A regression from: https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/946

We don't show the child that has the fail trace. Also double-clicking on the test suite (with no children) doesn't navigate to the failed line.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1021/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1021,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5u5-jF,eclipse.jdt.ui,1860692165,1021,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-12-18T14:46:38Z,2023-12-18T14:46:38Z,"JUnit 5 example to reproduce:

```
import static org.junit.jupiter.api.Assertions.assertEquals;

import org.junit.Assume;
import org.junit.jupiter.api.MethodOrderer.MethodName;
import org.junit.jupiter.api.RepeatedTest;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestMethodOrder;

@TestMethodOrder(MethodName.class)
public class TestTemplatesJunit5 {

	@Test
	public void testOkNoRepeats() throws Exception {
		Thread.sleep(500);
	}
	
	@RepeatedTest(value = 1)
	public void testOkOneRepeat() throws Exception {
		Thread.sleep(500);
	}

	@RepeatedTest(value = 2)
	public void testOkTwoRepeats() throws Exception {
		Thread.sleep(500);
	}
	
	@Test
	public void testWithErrorNoRepeats() throws Exception {
		doStupidThings(null);
	}
	
	@RepeatedTest(value = 1)
	public void testErrorOneRepeat() throws Exception {
		doStupidThings(null);
	}
	
	@RepeatedTest(value = 2)
	public void testErrorTwoRepeats() throws Exception {
		doStupidThings(null);
	}

	@Test
	public void testFailNoRepeats() throws Exception {
		assertEquals(""expected"", ""observed"");
	}
	
	@RepeatedTest(value = 1)
	public void testFailOneRepeat() throws Exception {
		assertEquals(""expected"", ""observed"");
	}

	@RepeatedTest(value = 2)
	public void testFailTwoRepeats() throws Exception {
		assertEquals(""expected"", ""observed"");
	}

	@RepeatedTest(value = 0)
	public void testWrongRepeat() throws Exception {
		Thread.sleep(500);
	}
	
	@Test
	public void testAssume() throws Exception {
		Assume.assumeFalse(true);
	}
	
	@RepeatedTest(value = 1)
	public void testAssumeOneRepeat() throws Exception {
		Assume.assumeFalse(true);
	}
	
	@RepeatedTest(value = 2)
	public void testAssumeTwoRepeats() throws Exception {
		Assume.assumeFalse(true);
	}
	
	private void doStupidThings(String arg) {
		arg.toString();
	}
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5u5-jF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1023,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1023,eclipse.jdt.ui,2048699741,1023,ExtractConstantRefactoring cannot handle a StringLiteral when not in type declaration,pkriens,200494,Peter Kriens,Peter.Kriens@aqute.biz,CLOSED,2023-12-19T13:48:57Z,2024-01-08T20:58:45Z,"Code:
```
@org.osgi.annotation.versioning.Version(""5.0.0"")
package foobar;
```
Place the cursor in the string ""5.0.0"", press control-1. This will throw an exception in the ExtractConstantRefactoring.

This throws an assertion in `getContainingTypeDeclarationNode(...)` because there is not type declaration in this case. The parents of the String are:
```
StringLiteral  ""5.0.0""
SingleMemberAnnotation
PackageDeclaration
CompilationUnit
```
Proposed changes:
```

	private boolean isInTypeDeclarationAnnotation(ASTNode node) throws JavaModelException {
		Annotation enclosingAnnotation= ASTNodes.getParent(node, Annotation.class);
		return enclosingAnnotation != null && enclosingAnnotation.getParent() == getContainingTypeDeclarationNode();
	}

>>>>>>

	private boolean isInTypeDeclarationAnnotation(ASTNode node) throws JavaModelException {
		Annotation enclosingAnnotation= ASTNodes.getParent(node, Annotation.class);
		AbstractTypeDeclaration result= ASTNodes.getParent(getSelectedExpression().getAssociatedNode(), AbstractTypeDeclaration.class);
		return enclosingAnnotation != null && enclosingAnnotation.getParent() == result;
	}
```








```
org.eclipse.core.runtime.AssertionFailedException: null argument:
	at org.eclipse.core.runtime.Assert.isNotNull(Assert.java:88)
	at org.eclipse.core.runtime.Assert.isNotNull(Assert.java:76)
	at org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring.getContainingTypeDeclarationNode(ExtractConstantRefactoring.java:837)
	at org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring.isInTypeDeclarationAnnotation(ExtractConstantRefactoring.java:627)
	at org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring.checkInitialConditions(ExtractConstantRefactoring.java:298)
	at org.eclipse.jdt.internal.ui.text.correction.QuickAssistProcessor.getExtractVariableProposal(QuickAssistProcessor.java:583)
	at org.eclipse.jdt.internal.ui.text.correction.QuickAssistProcessor.getAssists(QuickAssistProcessor.java:381)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeAssistCollector.safeRun(JavaCorrectionProcessor.java:404)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.run(JavaCorrectionProcessor.java:341)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.process(JavaCorrectionProcessor.java:330)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectAssists(JavaCorrectionProcessor.java:506)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectProposals(JavaCorrectionProcessor.java:291)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.computeQuickAssistProposals(JavaCorrectionProcessor.java:247)
	at org.eclipse.jface.text.quickassist.QuickAssistAssistant$ContentAssistProcessor.computeCompletionProposals(QuickAssistAssistant.java:71)
	at org.eclipse.jface.text.contentassist.ContentAssistant$2.lambda$0(ContentAssistant.java:2063)
	at java.base/java.util.Collections$SingletonSet.forEach(Collections.java:4905)
	at org.eclipse.jface.text.contentassist.ContentAssistant$2.run(ContentAssistant.java:2062)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.ContentAssistant.computeCompletionProposals(ContentAssistant.java:2059)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.computeProposals(CompletionProposalPopup.java:577)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.lambda$0(CompletionProposalPopup.java:507)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:502)
	at org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1873)
	at org.eclipse.jface.text.quickassist.QuickAssistAssistant.showPossibleQuickAssists(QuickAssistAssistant.java:113)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionAssistant.showPossibleQuickAssists(JavaCorrectionAssistant.java:194)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1023/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1023,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5wBSHU,eclipse.jdt.ui,1879384532,1023,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-01-05T23:42:04Z,2024-01-05T23:42:04Z,"Hi @pkriens Thanks for the report and suggested fix.  Unfortunately with the suggested fix, it still fails as there are other calls to the getContainingTypeDeclaration() call that will occur after.  I modified the code to add a check in checkInitialConditions() and to set the status code if no type is found.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5wBSHU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1024,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1024,eclipse.jdt.ui,2050248699,1024,Entries of JAR description files saved while exporting a JAR have non-deterministic order,HeikoKlare,755472,Heiko Klare,heiko.klare@vector.com,CLOSED,2023-12-20T10:15:00Z,2023-12-21T12:17:00Z,"## Current Behavior

The JAR Exporter allows to export JAR files from a selection of resources in the workspace. The description for such an export can be saved in JAR description files (*.jardesc). From these descriptions, an export can be started:

![Image](https://github.com/vi-eclipse/Eclipse-JDT/assets/755472/753d6150-7649-49fd-abd4-2f42dbf08b5a)

The export allows to save the description file, e.g., at the original location to update it with a modified selection of elements to be exported into the JAR:

![Image](https://github.com/vi-eclipse/Eclipse-JDT/assets/755472/68c4a269-1834-4616-9c43-824076081ee5)

The generated *.jardesc file is an XML file containing the selected elements, e.g.:
```xml
<selectedElements exportClassFiles=""true"" exportJavaFiles=""false"" exportOutputFolder=""false"">
    <javaElement handleIdentifier=""=JarDescriptionDemo/test=/test=/true=/""/>
    <javaElement handleIdentifier=""=JarDescriptionDemo/src""/>
</selectedElements>
```

These elements are in arbitrary order, which can change upon every export.


## Expected Behavior

In order to ease merging of these *.jardesc files, the order of the selected elements should be deterministic, e.g., by simply sorting them by their name.


## Additional Information

The `org.eclipse.jdt.internal.ui.jarpackager.JarPackageWizard` sets the elements to be exported via `JarPackageData` from 
`org.eclipse.jdt.internal.ui.jarpackager.JarPackageWizardPage#getSelectedElementsWithoutContainedChildren()`. This method converts a (hash) set of elements to an array, leading to different orders based on the element's hash values: 

https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/5c7d1a2b2690f9b7b34a7cf3a724c541c5c6c79d/org.eclipse.jdt.ui/ui/org/eclipse/jdt/internal/ui/jarpackager/JarPackageWizardPage.java#L663-L667

Sorting the array of returned elements would solve the issue. I will provide a PR for that.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1024/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1026,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1026,eclipse.jdt.ui,2050748057,1026,Unrelated errors reported during Jenkins build,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2023-12-20T15:11:16Z,2023-12-21T11:44:32Z,"Commit fa984a47a95926897cc104629262f4add3863615 / https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/996 enabled ""quality gate"".

Now it fails for no obvious reason in a PR #1025 that hasn't even changed code that is claimed to have new warnings.

I plan to revert part of the Jenkinsfile change for now to make sure no unrelated errors shown for commits.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1026/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1028,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1028,eclipse.jdt.ui,2050962447,1028,HierarchicalASTVisitorTest fails on master,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2023-12-20T17:11:37Z,2023-12-21T11:12:58Z,"Regression from https://github.com/eclipse-jdt/eclipse.jdt.core/pull/1684, JDT UI update needed.

https://download.eclipse.org/eclipse/downloads/drops4/I20231220-0500/testresults/html/org.eclipse.jdt.ui.tests_ep431I-unit-cen64-gtk3-java17_linux.gtk.x86_64_17.html

```
java.lang.AssertionError: HierarchicalASTVisitor must be updated to reflect a change in the ASTNode hierarchy.  No method visit(StringTemplateComponent) was found in HierarchicalASTVisitor.
	at org.junit.Assert.fail(Assert.java:89)
	at org.eclipse.jdt.ui.tests.core.HierarchicalASTVisitorTest.checkHierarchicalASTVisitorMethodExistsFor(HierarchicalASTVisitorTest.java:540)
	at org.eclipse.jdt.ui.tests.core.HierarchicalASTVisitorTest.checkAllMethodsForHierarchyExist(HierarchicalASTVisitorTest.java:513)
	at org.eclipse.jdt.ui.tests.core.HierarchicalASTVisitorTest.test(HierarchicalASTVisitorTest.java:489)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1028/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1028,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vJ0Lb,eclipse.jdt.ui,1864843995,1028,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-12-20T17:12:06Z,2023-12-20T17:12:06Z,@jarthana : could you please contribute required changes to JDT UI?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vJ0Lb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1028,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vN4MA,eclipse.jdt.ui,1865908992,1028,NA,noopur2507,8749449,Noopur Gupta,,NA,2023-12-21T09:11:17Z,2023-12-21T09:11:17Z,"I downloaded I20231220-0750 and pulled the latest master code. In manifest of org.eclipse.jdt.ui.tests, I am getting the error: Neither an available bundle nor the associated JRE export package 'org.assertj.core.api'.

@iloveeclipse: any hint to fix this?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vN4MA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1028,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vN67u,eclipse.jdt.ui,1865920238,1028,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-12-21T09:19:12Z,2023-12-21T09:19:12Z,"@noopur2507 : I don't know how old your SDK is and how do you setup it.

I do following:
1) Download latest nightly SDK build (currently https://download.eclipse.org/eclipse/downloads/drops4/I20231220-0750/)
2) Start with an empty workspace, File -> Import -> Install -> Install Software Items from File 
3) Select my local (latest) version of https://github.com/eclipse-platform/eclipse.platform.ui/blob/master/releng/org.eclipse.ui.releng/platformUiTools.p2f
4) Install everything
5) Restart and use my main workspace.

With that, I'm fine & see no errors in JDT UI.

Of course you can use Oomph, but I prefer the way above as it can also work if the last IBuild was unstable and does not depend on even more software layers that can fail...","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vN67u/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1028,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vOIao,eclipse.jdt.ui,1865975464,1028,NA,noopur2507,8749449,Noopur Gupta,,NA,2023-12-21T09:59:57Z,2023-12-21T09:59:57Z,"Thanks @iloveeclipse. I had the latest nightly SDK build but it didn't include assertj-core_3.24.2. I explicitly installed it using the .p2f file that you mentioned above to make the error go away.

Earlier (until 2 weeks back), it was not required to download anything explicitly in the SDK for JDT UI code setup.

I see the org.assertj.core.api dependency was added via https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/968/.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vOIao/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1028,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vOaKY,eclipse.jdt.ui,1866048152,1028,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2023-12-21T10:53:18Z,2023-12-21T10:53:18Z,"> Earlier (until 2 weeks back), it was not required to download anything explicitly in the SDK for JDT UI code setup.

Are you using Oomph? If so, I don't see a dedicated Oomph setup for JDT UI in https://github.com/eclipse-jdt/eclipse.jdt.ui, so  https://github.com/eclipse-platform/eclipse.platform.ui/blob/master/releng/org.eclipse.ui.releng/platformUi.setup may need to be adopted.

@merks ?

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vOaKY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1028,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vOgNF,eclipse.jdt.ui,1866072901,1028,NA,merks,208716,Ed Merks,,NA,2023-12-21T11:12:56Z,2023-12-21T11:12:56Z,"There is an Oomph setup for JDT:

https://github.com/eclipse-jdt/.github/blob/main/CONTRIBUTING.md#create-an-eclipse-development-environment

I tested it from scratch just now.  Everything looks fine and the test runs:

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/208716/7aef9981-a623-4731-b27e-5b2875cae2a9)

What is the problem? 

Note the if things are added to the *.target in the aggregator, those additions are visible only if you include that project's setup in the workspace.  Otherwise, additions are visible in the next I-Build repository after a successful build.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vOgNF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1030,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1030,eclipse.jdt.ui,2052790147,1030,"Javadoc for Parameters, Returns and Throws rendering is missalginged",HannesWell,44067969,Hannes Wellmann,,CLOSED,2023-12-21T17:07:54Z,2024-04-24T18:10:40Z,"I have the impression that the rendering of the `Parameters`, `Returns` and `Throws` section of (for example) a method has changed recently and does not look nice anymore:

![grafik](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/44067969/9bb5a6e2-2dc5-46b6-b12f-4f1fcaf1fbb4)

The 'headline' elements should be left aligned and for `Returns` there is IMHO no bullet point necessary since Java does not support multiple return types (yet, who knows what the future brings).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1030/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1030,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57tjsH,eclipse.jdt.ui,2075540231,1030,NA,RedeemerSK,36334098,Jozef Tomek,,NA,2024-04-24T18:07:08Z,2024-04-24T18:07:08Z,@iloveeclipse duplicate of #1346 ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57tjsH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1030,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57tlIG,eclipse.jdt.ui,2075546118,1030,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-24T18:10:40Z,2024-04-24T18:10:40Z,"> duplicate of #1346

Thanks! Don't know why I haven't seen this earlier.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57tlIG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1033,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1033,eclipse.jdt.ui,2057145364,1033,Outline view (Ctrl+O) is not on the center of the screen when running eclipse on Ubuntu 23.10(Wayland),s4gh,2587238,,,CLOSED,2023-12-22T10:04:25Z,2024-12-21T20:34:32Z,"Hello,

Version information:
Build id: 20231201-2043
Version: 2023-12 (4.30.0)

OS:
Ubuntu 23.10

Outline view (Ctrl+O) is misaligned. It is not in the center of the screen. See screenshot.
![image](https://github.com/eclipse-jdt/eclipse.jdt.core/assets/2587238/a44d4785-f666-4e9f-9aa5-86857dd6817a)

Similarly, Ctrl+F (Find and Replace) is also misaligned. While popup triggered by ""Ctrl+H"" is positioned correctly.

at the same time other popups e.g. Ctrl+N are correctly aligned
![image](https://github.com/eclipse-jdt/eclipse.jdt.core/assets/2587238/41602c3e-6a9f-44df-8d9c-41aefee291ec)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1033/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1033,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vd93m,eclipse.jdt.ui,1870126566,1033,NA,nlisker,37422899,,,NA,2023-12-23T18:38:33Z,2023-12-23T18:38:33Z,"If you click on the arrow dropdown menu next to the search box, you should have the option to remember the location. Does that not work after you drag it?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vd93m/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1033,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vtkmV,eclipse.jdt.ui,1874217365,1033,NA,s4gh,2587238,,,NA,2024-01-02T16:03:12Z,2024-01-02T16:03:12Z,"@nlisker  thank you for suggestion. Unfortunately this does not work and ""Remember Location"" does not actually remembers window position. I clicked ""down"" arrow next to search box, enabled ""Remember Location"" drag popup to the center of the scree, close it. Next time on ""Ctrl+O"" window is still misaligned.

This is a clean installation of Ubuntu and Eclipse. And on this fresh clean installation some popups are correctly aligned (Ctrl+H or Ctrl+P, Ctrl+L) but others (like Ctrl+O) are aligned incorrectly. And ""Remember Location"" does not work for misaligned popups.  And I think that moist people don't even know about option to remember location.

Serhiy","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vtkmV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1033,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vtrfg,eclipse.jdt.ui,1874245600,1033,NA,s4gh,2587238,,,NA,2024-01-02T16:23:36Z,2024-01-02T16:23:36Z,"There is difference in how popups produced by ""Ctrl+O"" and for example ""Ctrl+H"" behave. When I click ""Ctrl+H"" or ""Ctrl+L"" the IDE window below popup is grayed out. The popup is in the center of the screen and you cannot actually move it. 
However, outline popup triggered by ""Ctrl+O"" is movable and does not cause IDE window below popup to gray out. 

For me, personally, incorrect alignment of ""Ctrl+O"" popup is much bigger annoyance compared to the possibility of loosing ability to drag this popup. To be honest I never actually move ""outline view"" popup.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5vtrfg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1033,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Ye4vc,eclipse.jdt.ui,2558233564,1033,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2024-12-21T20:34:32Z,2024-12-21T20:34:32Z,This is SWT limitation https://github.com/eclipse-platform/eclipse.platform.swt/issues/790,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Ye4vc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1149,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1149,eclipse.jdt.ui,2109691101,1149,eclipse java formatter: auto-wrapped control statement indent broken,jonbarril,20114096,,,OPEN,2023-12-26T18:07:03Z,2024-01-31T09:46:31Z,"When compound control statements have a clause that is auto-wrapped the statement indentation is compounded instead of lining up. The expected behavior is for control statements and their blocks at the same control level to line up (statements line up, blocks line up but indented by one). Instead they all drift to the right.

Below is an example. Note how all control statements are at the ""same level"" of control, but subsequent statement and block indent is compounding, with the statements and their blocks drifting to the right instead of being aligned....

		Angle pdi; // same sense as drift
		if (_isAzimuthGyroOn && !_isBombsightEngaged && _isAutopilotEngaged) {
			// autopilot stabilized: PDI tracks only gyro,
			/// angle sense is stab to gyro angle
			Angle gyroAzi = _aziGyroHeading.subtract(_stabHeadingCont);
			/// angle sense is  gyro to auto clutch
			Angle autoAzi = gyroAzi.add(gyroAutoOffset); 
			pdi = autoAzi; // auto clutch is PDI
		} else if (_isAzimuthGyroOn && _isBombsightEngaged
			&& !_isAutopilotEngaged) {
				// sighthead stabilized: PDI tracks gyro + drift offsets
				/// angle sense is stab to sighthead
				Angle drift = computeSightDrift(gyroSightOffset, gyroAutoOffset,
					turnKnobOffset, driftKnobOffset); 
				/// angle sense is sighthead to PDI
				pdi = drift.add(driftKnobOffset); 
			} else if (_isAzimuthGyroOn && _isBombsightEngaged
				&& _isAutopilotEngaged) {
					// sighthead stabilized but auto clutch also engaged: PDI
					// tracks only gyro
					Angle gyroAzi = _aziGyroHeading.subtract(_stabHeadingCont);
					/// angle sense is gyro to auto clutch
					Angle autoAzi = gyroAzi.add(gyroAutoOffset);
					/// auto clutch is PDI
					pdi = autoAzi;
				} else {
					// unstabilized: PDI tracks manual turn knob ???
					/// angle sense is sighthead to PDI
					pdi = _driftAngle.add(driftKnobOffset);
				}

		return pdi;
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1149/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1040,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1040,eclipse.jdt.ui,2063033417,1040,String concat quick assists do not handle existing NON-NLS comments,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-01-02T22:37:41Z,2024-01-12T21:00:41Z,"The following code:

```
package tests;

public class TestStringConcat2 {
	
	public void foo(String y) {
		String x = ""abc"" + ""def"" + ""ghi""; //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
		System.out.println(x);
		String z = ""abc"" + y + ""def""; //$NON-NLS-1$ //$NON-NLS-2$
		System.out.println(z);
	}

}
```

when x or z is selected and CTRL+1 is used, the string concatenation proposals will not correctly move the NON-NLS comments.

```
package tests;

public class TestStringConcat2 {
	
	public void foo(String y) {
		StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.append(""abc"");
		stringBuilder.append(""def"");
		stringBuilder.append(""ghi"");
		String x = stringBuilder.toString(); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
		System.out.println(x);
		String z = ""abc"" + y + ""def""; //$NON-NLS-1$ //$NON-NLS-2$
		System.out.println(z);
	}

}

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1040/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1041,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1041,eclipse.jdt.ui,2063429622,1041,[22] Allow JDT to target Java 22 in compiler preferences,noopur2507,8749449,Noopur Gupta,,CLOSED,2024-01-03T07:50:42Z,2024-01-19T06:42:58Z,Allow JDT to target Java 22 in compiler preferences.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1041/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1043,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1043,eclipse.jdt.ui,2066927549,1043,"""Make Static"" refactoring adds new parameter documentation as first javdoc entry",HeikoKlare,755472,Heiko Klare,heiko.klare@vector.com,CLOSED,2024-01-05T08:26:20Z,2024-01-18T21:51:56Z,"The recently introduced ""Make Static"" refactoring (#689) adds the documentation of a new parameter for the `this` object at the beginning of the javadoc comment, although this is usually not the expected position of a parameter documentation.

This is a finding that has been made during verification of the original refactoring contribution: https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/689#discussion_r1428535735

### Expected Behavior

The refactoring should add the parameter documentation in javadoc at a ""reasonable"" position, such as between the general documentation and potentially existing other parameter and return value documentations.

I propose to reuse the behavior already implemented for the ""Change Method Signature"" refactoring, as it already places the documentation for added parameters at reasonable positions.

### How to Reproduce

The behavior can be reproduced when refactoring any method with an existing javadoc comment. 
The results when applying it to 
`org.eclipse.jdt.core.tests.compiler.regression.AbstractRegressionTest#getCompilerTestsPluginDirectoryPath()` with some extended documentation look as follows.

#### Before:
```java
/**
* Returns the OS path to the directory that contains this plugin.
*
* @return OS path of the plugin directory
* @author unknown
*/
```

#### After:
```java
/**
* @param abstractRegressionTest
* Returns the OS path to the directory that contains this plugin.
*
* @return OS path of the plugin directory
* @author unknown
*/
```

#### Result when a adding parameter with ""Change Method Signature"" refactoring:

```java
/**
* Returns the OS path to the directory that contains this plugin.
* @param newParameter TODO
*
* @return OS path of the plugin directory
* @author unknown
*/
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1043/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1044,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1044,eclipse.jdt.ui,2066930596,1044,"""Make Static"" refactoring adds unnecessary parameter",HeikoKlare,755472,Heiko Klare,heiko.klare@vector.com,CLOSED,2024-01-05T08:28:55Z,2024-01-16T19:16:27Z,"The recently introduced ""Make Static"" refactoring (#689) adds a parameter for the `this` object in some cases in which it is not unnecessary because no `this` reference is used within the method body.

This is a finding that has been made during verification of the original refactoring contribution: https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/689#issuecomment-1866869206

### Expected Behavior

The refactoring should only introduce a parameter for the original `this` object in case `this` is actually accessed in the original method body.

### How to Reproduce

The failure can, for example, be reproduced when applying the refactoring to `org.eclipse.jdt.core.tests.compiler.regression.AbstractRegressionTest#getCompilerTestsPluginDirectoryPath()`.
The refactoring introduces an unnecessary `AbstractRegressionTest` parameter.

#### Before:
```java
protected String getCompilerTestsPluginDirectoryPath() {
	try {
		URL platformURL = Platform.getBundle(""org.eclipse.jdt.core.tests.compiler"").getEntry(""/"");
		return new File(FileLocator.toFileURL(platformURL).getFile()).getAbsolutePath();
	} catch (IOException e) {
		e.printStackTrace();
	}
	return null;
}
```

#### After:
```java
protected static String getCompilerTestsPluginDirectoryPath(AbstractRegressionTest abstractRegressionTest) {
	try {
		URL platformURL = Platform.getBundle(""org.eclipse.jdt.core.tests.compiler"").getEntry(""/"");
		return new File(FileLocator.toFileURL(platformURL).getFile()).getAbsolutePath();
	} catch (IOException e) {
		e.printStackTrace();
	}
	return null;
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1044/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1045,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1045,eclipse.jdt.ui,2066930777,1045,"""Make Static"" refactoring failing because of overlapping text edits",HeikoKlare,755472,Heiko Klare,heiko.klare@vector.com,CLOSED,2024-01-05T08:29:04Z,2024-01-17T00:04:03Z,"The recently introduced ""Make Static"" refactoring (#689) fails to be applied because of ""overlapping text edits"" in some cases.

This is a finding that has been made during verification of the original refactoring contribution: https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/689#issuecomment-1866869206

### Expected Behavior

The refactoring should not fail because of producing overlapping text edits.

### How to Reproduce

The failure can, for example, be reproduced when applying the refactoring to `org.eclipse.jdt.internal.codeassist.CompletionEngine#checkCancel()`

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/755472/49cb952a-ef99-469f-bec3-f57495e739ce)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1045/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1047,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1047,eclipse.jdt.ui,2068480598,1047,cleanup results in non-compiling code,frankbenoit,8962790,Frank Benoit,,CLOSED,2024-01-06T09:07:47Z,2024-03-09T03:49:12Z,"When the cleanup: Code Style > Function interface instance > Simplify lambda expression and method reference syntax is activated

````
    void func( String ... args) {

    }
    void called( Runnable r ) {

    }
    void called( Supplier<Object> r ) {

    }
    void test() {
        called(() -> func()); // will be changed to below
        // called(this::func);  // but this is not compiling ""The method called(Runnable) is ambiguous for the type...""
    }
````

The cleanup should be avoided in this situation.

Workaround to prevent this specific clean: convert the lambda expression to a lambda block.

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1047/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1050,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1050,eclipse.jdt.ui,2069843042,1050,[22] Add AST level 22 to AST view,noopur2507,8749449,Noopur Gupta,,CLOSED,2024-01-08T07:00:35Z,2024-02-01T07:47:54Z,Add AST level 22 to AST view.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1050/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1051,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1051,eclipse.jdt.ui,2070789272,1051,"Can not save .java file, when opened with Open-Type Dialog",jukzi,51790620,Jörg Kubitz,,CLOSED,2024-01-08T16:15:22Z,2024-01-08T16:42:53Z,"Even After ""Save"" or ""Save All"" .java Editor keeps showing a '*' in front of the Name

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/1b06dde2-ef47-4191-bc57-5cfd4253bc44)

Regression from fc6a25a6a1d46627eae34f4aeab98cafb71a5f70

I wonder why nobody else complained yet. I also do not understand why it happens and  no error is logged.
I will revert the troubling part.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1051/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1054,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1054,eclipse.jdt.ui,2071844187,1054,How can I hide the Object and Enum methods from code completion?,ProperNovice,11249537,,,OPEN,2024-01-09T08:11:21Z,2024-01-09T08:11:21Z,"Hello everyone,

I am using Eclipse 23-12 (4.30.0) version and it seems that I can't hide anymore the Object and Enum default methods from code completion.

Up to now, I got it working by using the Type Filters preferences, adding the java.lang.Object and java.lang.Enum* filter names. It was working brilliantly, only showing the new methods I was adding in each class and enum.

But with the last couple updates this doesn't seem to work. I have included photos to have a visualization aspect as well.

Can you enlighten me?

Thank you

![q](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/11249537/f64c1b7f-c8fb-48e3-b337-7e85bfd72f20)
![qq](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/11249537/974bdc5a-5dd0-460a-b84f-d8bebd4cc4a4)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1054/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1056,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1056,eclipse.jdt.ui,2072026292,1056,Run As/Debug As context menu in java source editor very slow,tobiasmelcher,10373336,Tobias Melcher,,OPEN,2024-01-09T09:58:30Z,2024-04-18T14:09:18Z,"Hi experts,

opening the context menu ""Run As""->""JUnit Test"" on a TestSuite class takes quite a while on my machine. 

The profiler points me to JUnit4TestFinder#internalIsTest
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/10373336/ad01f051-d2c1-4cd7-9f75-f00fc35c12bf)

Is bug 156352 now fixed and can the slow parser call be replaced?
https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/1ddb4575d97e889590ab79693f17af85185a032b/org.eclipse.jdt.junit.core/src/org/eclipse/jdt/internal/junit/launcher/JUnit4TestFinder.java#L222

What do you think?

With best regards,
Tobias","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1056/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1056,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w_Q30,eclipse.jdt.ui,1895632372,1056,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-17T11:38:37Z,2024-01-17T11:38:37Z,https://bugs.eclipse.org/bugs/show_bug.cgi?id=156352 states it is fixed. suggest a PR please,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w_Q30/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1056,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM54HdJ5,eclipse.jdt.ui,2015220345,1056,NA,eric-milles,18193802,Eric Milles,,NA,2024-03-22T14:25:08Z,2024-03-22T14:25:08Z,"#302 discusses some of the issues with the test finders.  The tl;dr is that an expensive parsing and type hierarchy operation is executed for each type in the search scope.  If the `IType` that is passed all the way to `internalIsTest` could be inspected for `@Test` or `@RunWith` annotations, then you would not need to generate `ITypeBinding`.

One point that was raised is the notion of meta-annotations and that may be why it is done this way.  It may be possible for a two-phase/stage check where the `IType` is checked directly for `@Test` or `@RunWith` and if found, no further parsing or resolving is required.  If not found, continue with the existing parsing and checking.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM54HdJ5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1056,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM54JCJf,eclipse.jdt.ui,2015634015,1056,NA,eric-milles,18193802,Eric Milles,,NA,2024-03-22T17:59:50Z,2024-03-22T17:59:50Z,"I tried using the `IType` interface.  It can tell that a type is annotated, but the fully-qualified type of the annotation is not available.  This must be why the `ITypeBinding` is required.  I made some small clean up edits, added a public method check and moved the abstract check sooner (for JUnit 5).

I cannot get the plugin to deploy for my workspace at the moment, so I can't test the JUnit 4 path to look for more optimizations.

[JUnitTestFinder.zip](https://github.com/eclipse-jdt/eclipse.jdt.ui/files/14726748/JUnitTestFinder.zip)

@tobiasmelcher Without more detail on your test class, it is hard to say why it takes 1.5 ish seconds to check for test.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM54JCJf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1056,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM54QTBo,eclipse.jdt.ui,2017538152,1056,NA,tobiasmelcher,10373336,Tobias Melcher,,NA,2024-03-25T09:18:04Z,2024-03-25T09:18:04Z,"my test suite class looks like this

```
@RunWith(SubSubClassFromSuite.class)
@Suite.SuiteClasses({
  < around 200 test classes>
}) 
public final class MyTests {
  @AfterClass
  public static void teardown() {
	// some clean up logic
  }
}
```

I added a simple System.currentTimeMillis(); measurement in method call JUnit4TestFinder#internalIsTest(IType type, IProgressMonitor monitor) and retrieved the data listed below.
internalIsTest looks like this:
```
private boolean internalIsTest(IType type, IProgressMonitor monitor) throws JavaModelException {
  long start = System.currentTimeMillis();
  try {
  ... 	
  }finally {
    long diff = System.currentTimeMillis() - start;
    System.out.println(""internalIsTest: "" + diff);
  }
}
```

Running then the context menu ""Run As"" in the suite class of the target IDE with the current code of JUnit4TestFinder, the output is:
```
internalIsTest: 850
internalIsTest: 856
```
One can see that the method is called twice. I think the reason is that there are two sub menu entries ""Run As->JUnit Plug-in Test"" and ""Run As->JUnit Test"". No data is shared between the two sub menu entries and it looks like that the Java source needs to be parsed twice. What I can see is that the resolveBindings takes the most time.

Uncommenting the code block 
```
/* TODO: When bug 156352 is fixed:*/
	parser.setProject(type.getJavaProject());
	IBinding[] bindings1= parser.createBindings(new IJavaElement[] { type }, monitor);
	if (bindings1.length == 1 && bindings1[0] instanceof ITypeBinding) {
		System.out.println(""inside createBindings"");
		ITypeBinding binding= (ITypeBinding) bindings1[0];
		return isTest(binding);
	}
```
doesn't really improve the situation. Output is:
```
internalIsTest: 798
internalIsTest: 836
```

As I have seen, that resolveBindings takes the most time, I tried to find a solution for my simple suite class where extra parsing and resolveBindings is not necessary.
By adding following code snippet before call ```ASTParser.newParser```

```
IAnnotation anno = type.getAnnotation(""RunWith"");
if (anno!=null && anno.exists()) {
  IImportDeclaration im = type.getCompilationUnit().getImport(""org.junit.runner.RunWith"");
  if (im!=null && im.exists()) {
    return true;
   }
}
```
the timing output looks like this.
```
internalIsTest: 1
internalIsTest: 0
```

Performance problem is solved with this approach. I agree that this is not a general solution because the RunWith annotation might be located in the super class. But can't we add a shortcut for the simple test suite classes like mine? Is this not the 90% scenario?
What do you think?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM54QTBo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1056,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM544YSl,eclipse.jdt.ui,2028045477,1056,NA,eric-milles,18193802,Eric Milles,,NA,2024-03-30T12:56:07Z,2024-03-30T12:56:07Z,"I have a few classes like that: https://github.com/groovy/groovy-eclipse/blob/ab133444945a3b5504b32d2a8b7b7b60472c0741/ide-test/org.codehaus.groovy.alltests/src/org/codehaus/groovy/alltests/AllGroovyTests.groovy#L23

Indeed, parsing/resolving is very slow on such files.  Not sure why, but that's an `eclipse.jdt.core` issue for another day.

Your shortcut of looking for `@RunWith` plus a supporting import does make sense.  It would speed up such test suite classes.  For me, the more common case is a class with many `@Test` methods that uses the built-in test runner or changes it via super class or super interface or meta annotation.

I think I could work up a change that looks for the most common annotations with supporting import statements.  @jukzi Is that something for which you would entertain a PR?

-----

@tobiasmelcher One thing we do to reduce the time to start large suite classes is creating a launch config so it shows up in the run or debug toolbar.  See `*.launch` in this folder: https://github.com/groovy/groovy-eclipse/tree/master/ide-test/org.codehaus.groovy.alltests

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/18193802/d1d4ff81-dddf-4bcd-8c70-16e026362970)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM544YSl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1056,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56sHrK,eclipse.jdt.ui,2058386122,1056,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-04-16T07:08:35Z,2024-04-16T07:08:35Z,"> I think I could work up a change that looks for the most common annotations with supporting import statements. @jukzi Is that something for which you would entertain a PR?

I don't feel confident that adding special shortcuts will not have a negative impact somewhere else. How to know what is ""most common"" and will such measurement stay forever? I doubt.
Our developers reported RUN AS became slower from Eclipse 2022-12 to 2023-09. In their usecase most time is spend below ""Scope.findMethod()"". My intuition says it should not be necessary to find any method just to create a type hiearchy:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/ecffddc7-7cee-4a3a-931a-58d3123c0554)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56sHrK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1056,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5624ls,eclipse.jdt.ui,2061207916,1056,NA,eric-milles,18193802,Eric Milles,,NA,2024-04-17T13:00:27Z,2024-04-17T13:00:27Z,"> How to know what is ""most common""?

That would be `@Test` and maybe `@RunWith` (for JUnit 4) or `@ExtendWith` (for JUnit 5).  So glad I asked before spending time on this.

> most time is spend below ""Scope.findMethod()"". My intuition says it should not be necessary to find any method just to create a type hiearchy

I'm guessing that the type hierarchy includes local and anonymous inner classes.  These require method scanning to locate.  Is it possible to ask for a type hierarchy that does not include such classes?  Is there any scenario where JUnit gets test cases from such classes?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5624ls/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1056,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57BUTL,eclipse.jdt.ui,2063942859,1056,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-04-18T14:02:23Z,2024-04-18T14:02:23Z,"> I tried using the `IType` interface. It can tell that a type is annotated, but the fully-qualified type of the annotation is not available.

As far as i understand TestSearchEngine.isAnnotatedWithTestable(IMethod, IType, IJavaProject) the full qualified name of an annotation can be obtained with type.resolveType(unqualifiedname), see TestSearchEngine.getResolvedType(String, IType, IJavaProject). 
I have not tried if that is faster, but i guess so (cached) and it should be sufficient and even bring more likelyhood to the code in 
 TestSearchEngine. 
 Does somebody here has a reproducer where finding the annotation is costly so that he can try a measurement?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57BUTL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1056,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57BX7r,eclipse.jdt.ui,2063957739,1056,NA,eric-milles,18193802,Eric Milles,,NA,2024-04-18T14:09:16Z,2024-04-18T14:09:16Z,"#302 describes using an old version of RxJava, which has several thousand test classes.  It used to take about 20s.  Last time I worked with that sample project, it took about 13s to start running tests after choosing Run As > JUnit Test.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57BX7r/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1057,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1057,eclipse.jdt.ui,2073898903,1057,The `jar-in-jar` loader does not support multi-release JARs,ppkarwasz,12533274,Piotr P. Karwasz,piotr@github.copernik.eu,CLOSED,2024-01-10T09:00:24Z,2024-01-23T22:31:39Z,"To handle multi-release JARs, Java 9 extends the format of `jar:` URLs:

 * if the URL has a `#runtime` fragment, the JAR file is opened in multi-release mode,
 * otherwise the JAR file is opened in mono-release mode.

See, e.g.:

https://github.com/openjdk/jdk/blob/88378ed0584c7eb0849b6fc1e361fd8ea0698caf/src/java.base/share/classes/java/net/JarURLConnection.java#L178-L186

The `#runtime` fragment is propagated to the URL of the jar file to allow `JarUrlConnection` to open the file in multi-release mode.

The `jar-in-jar` loader strips this fragment from `rsrc:` URLs and therefore breaks multi-release JARs.

## Minimal reproducible example

You can find a minimal reproducible example here:

https://github.com/copernik-eu/bug-reproducibility/tree/main/eclipse-jar-in-jar","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1057/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1057,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5wUkX7,eclipse.jdt.ui,1884440059,1057,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-01-10T09:02:04Z,2024-01-10T09:02:04Z,Contributions are welcome.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5wUkX7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1059,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1059,eclipse.jdt.ui,2077695022,1059,New preferences for resource leak analysis,stephan-herrmann,24587985,Stephan Herrmann,,CLOSED,2024-01-11T22:15:27Z,2024-01-14T18:39:14Z,"New compiler options from https://github.com/eclipse-jdt/eclipse.jdt.core/pull/1716 will need to be presented in ProblemSeveritiesConfigurationBlock:
* master switch org.eclipse.jdt.core.JavaCore.COMPILER_ANNOTATION_RESOURCE_ANALYSIS
* two configurable annotation names (similar to `NullAnnotationsConfigurationDialog()`)
  * org.eclipse.jdt.core.JavaCore.COMPILER_OWNING_ANNOTATION_NAME
  * org.eclipse.jdt.core.JavaCore.COMPILER_NOTOWNING_ANNOTATION_NAME
* fine tuning via org.eclipse.jdt.core.JavaCore.COMPILER_PB_RECOMMENDED_RESOURCE_MANAGEMENT

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1059/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1061,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1061,eclipse.jdt.ui,2078274017,1061,[22] Run Gerrit builds for JDT UI BETA_JAVA22 branch with latest Y-build,noopur2507,8749449,Noopur Gupta,,CLOSED,2024-01-12T07:57:46Z,2024-01-16T07:50:16Z,Run Gerrit builds for JDT UI BETA_JAVA22 branch with latest Y-build.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1061/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1061,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w2EDM,eclipse.jdt.ui,1893220556,1061,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-01-16T07:50:16Z,2024-01-16T07:50:16Z,Released the changes.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w2EDM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1063,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1063,eclipse.jdt.ui,2079754785,1063,Bug 578162 - Quickfix for assigning an inner class definition to a local variable,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-01-12T21:32:33Z,2024-04-03T23:44:18Z,"Would be nice to have a quickfix for assigning an anonymousinner class to a local variable.

For example:

browser.addProgressListener(new ProgressListener() {

			@Override
			public void completed(ProgressEvent event) {

			}

			@Override
			public void changed(ProgressEvent event) {

			}
		});


Quickfix should result in:


ProgressListener prgsListener = new ProgressListener() {

			@Override
			public void completed(ProgressEvent event) {

			}

			@Override
			public void changed(ProgressEvent event) {

			}
		});

browser.addProgressListener(prgsListener );","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1063/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1065,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1065,eclipse.jdt.ui,2080808313,1065,Endless loop in RippleMethodFinder2.UnionFind.find,guw,191472,Gunnar Wagenknecht,,OPEN,2024-01-14T16:46:03Z,2024-01-15T10:50:18Z,"While working in a self-hosting session I attempted a method signature refactoring. This took a very long time and pausing the ModalContext thread and stepping through it I found an endless loop in the following code.

https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/756cca59703dbd314fdc10fd79f5ec1add7978ca/org.eclipse.jdt.core.manipulation/core%20extension/org/eclipse/jdt/internal/corext/refactoring/rename/RippleMethodFinder2.java#L101-L104

What happened was that the loop changed `root` and `rep` in each iteration.

- loop N: `rep =  ResolvedBinaryType (id=522)` and `root = ResolvedBinaryType (id=421)`
- loop N+1: `rep =  ResolvedBinaryType (id=421)` and `root = ResolvedBinaryType (id=522)`
- loop N+2: `rep =  ResolvedBinaryType (id=522)` and `root = ResolvedBinaryType (id=421)`

With the following types:
```
interface Builder {key=Lcom/google/protobuf/MessageLite$Builder;} [in MessageLite$Builder.class [in com.google.protobuf [in /Users/.../external/com_google_protobuf_protobuf_java/protobuf-java-3.22.3.jar]]]
```
```
interface Builder {key=Lcom/google/protobuf/Message$Builder;} [in Message$Builder.class [in com.google.protobuf [in /Users/.../external/com_google_protobuf_protobuf_java/protobuf-java-3.22.3.jar]]]
```

So somehow the `fElementToRepresentative` map contains a mapping for each other. This causes the endless loop. I don't know whether the `fElementToRepresentative` is invalid, i.e. it is never supposed to contain a recursive mapping, or whether the loop is incorrect, i.e. the loop is supposed to check for visited items.

Also, since this is a refactoring, I am confused by BinaryTypes are even processed.

The callstack to the `find` method is:
```
Thread [ModalContext] (Suspended)	
	RippleMethodFinder2$UnionFind.find(IType) line: 101	
	RippleMethodFinder2.uniteWithSupertypes(IType, IType) line: 518	
	RippleMethodFinder2.uniteWithSupertypes(IType, IType) line: 531	
	RippleMethodFinder2.uniteWithSupertypes(IType, IType) line: 521	
	RippleMethodFinder2.uniteWithSupertypes(IType, IType) line: 521	
	RippleMethodFinder2.createUnionFind() line: 505	
	RippleMethodFinder2.findAllRippleMethods(IProgressMonitor, WorkingCopyOwner) line: 222	
	RippleMethodFinder2.getAllRippleMethods(IProgressMonitor, WorkingCopyOwner) line: 187	
	RippleMethodFinder2.getRelatedMethods(IMethod, ReferencesInBinaryContext, IProgressMonitor, WorkingCopyOwner) line: 180	
	ChangeSignatureProcessor.checkFinalConditions(IProgressMonitor, CheckConditionsContext) line: 823	
	ProcessorBasedRefactoring.checkFinalConditions(IProgressMonitor) line: 227	
	CheckConditionsOperation.run(IProgressMonitor) line: 86	
	CreateChangeOperation.run(IProgressMonitor) line: 122	
	UIPerformChangeOperation(PerformChangeOperation).run(IProgressMonitor) line: 210	
	Workspace.run(ICoreRunnable, ISchedulingRule, int, IProgressMonitor) line: 2453	
	Workspace.run(IWorkspaceRunnable, ISchedulingRule, int, IProgressMonitor) line: 2478	
	WorkbenchRunnableAdapter.run(IProgressMonitor) line: 89	
	ModalContext$ModalContextThread.run() line: 122	
```

On a side note, `RippleMethodFinder2.getRelatedMethods` is ignoring the `IProgressMonitor`. Therefore the cancellation is a not working and Eclipse appears to hang.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1065/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1065,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5wwg2p,eclipse.jdt.ui,1891765673,1065,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-15T09:55:40Z,2024-01-15T09:55:40Z,Please give a minimal reproducer,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5wwg2p/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1065,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ww7uF,eclipse.jdt.ui,1891875717,1065,NA,guw,191472,Gunnar Wagenknecht,,NA,2024-01-15T10:50:16Z,2024-01-15T10:50:16Z,I can't this is closed source code base with many jars. I am able to collect more debug output if you need it.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ww7uF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1067,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1067,eclipse.jdt.ui,2081725673,1067,SemanticHighlightingPresenter:  org.eclipse.jface.text.BadPositionCategoryException,jukzi,51790620,Jörg Kubitz,,CLOSED,2024-01-15T10:27:38Z,2025-01-08T15:27:04Z,"upon obening a .java file editor: Got it two times today slightly different stacktrace, have not seen it ever before:

eclipse.buildId=4.31.0.I20240114-0450
java.version=21.0.1

```
org.eclipse.jface.text.BadPositionCategoryException
	at org.eclipse.jface.text.AbstractDocument.removePositionCategory(AbstractDocument.java:1046)
	at org.eclipse.jdt.internal.ui.javaeditor.SemanticHighlightingPresenter.releaseDocument(SemanticHighlightingPresenter.java:513)
	at org.eclipse.jdt.internal.ui.javaeditor.SemanticHighlightingPresenter.uninstall(SemanticHighlightingPresenter.java:423)
	at org.eclipse.jdt.internal.ui.javaeditor.SemanticHighlightingManager.disable(SemanticHighlightingManager.java:414)
	at org.eclipse.jdt.internal.ui.javaeditor.SemanticHighlightingManager.uninstall(SemanticHighlightingManager.java:389)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.uninstallSemanticHighlighting(JavaEditor.java:3592)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.dispose(JavaEditor.java:2634)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.dispose(CompilationUnitEditor.java:1517)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.invalidate(CompatibilityPart.java:264)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.destroy(CompatibilityPart.java:421)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:976)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:938)
	at org.eclipse.e4.core.internal.di.InjectorImpl.uninject(InjectorImpl.java:181)
	at org.eclipse.e4.core.internal.di.Requestor.uninject(Requestor.java:177)
	at org.eclipse.e4.core.internal.contexts.ContextObjectSupplier$ContextInjectionListener.update(ContextObjectSupplier.java:89)
	at org.eclipse.e4.core.internal.contexts.TrackableComputationExt.update(TrackableComputationExt.java:103)
	at org.eclipse.e4.core.internal.contexts.EclipseContext.removeListenersTo(EclipseContext.java:487)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.uninject(ContextInjectionFactory.java:185)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeRemoveGui(PartRenderingEngine.java:944)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:858)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.removeGui(PartRenderingEngine.java:842)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.subscribeTopicToBeRendered(PartRenderingEngine.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.di.internal.extensions.EventObjectSupplier$DIEventHandler.handleEvent(EventObjectSupplier.java:92)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:207)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:201)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:60)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setToBeRendered(UIElementImpl.java:316)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.hidePart(PartServiceImpl.java:1411)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.hidePart(PartServiceImpl.java:1341)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.closePart(StackRenderer.java:1352)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer$3.close(StackRenderer.java:1217)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1982)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:338)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4273)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4071)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3659)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.ui.internal.views.log.EventDetailsDialog.open(EventDetailsDialog.java:198)
	at org.eclipse.ui.internal.views.log.EventDetailsDialogAction.run(EventDetailsDialogAction.java:102)
	at org.eclipse.ui.internal.views.log.LogView.lambda$2(LogView.java:599)
	at org.eclipse.jface.viewers.StructuredViewer$1.run(StructuredViewer.java:779)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.StructuredViewer.fireDoubleClick(StructuredViewer.java:776)
	at org.eclipse.jface.viewers.AbstractTreeViewer.handleDoubleSelect(AbstractTreeViewer.java:1542)
	at org.eclipse.jface.viewers.StructuredViewer$4.widgetDefaultSelected(StructuredViewer.java:1205)
	at org.eclipse.jface.util.OpenStrategy.fireDefaultSelectionEvent(OpenStrategy.java:271)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:328)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4273)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4071)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1152)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1043)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:152)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:648)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:555)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)
```

```
org.eclipse.jface.text.BadPositionCategoryException
	at org.eclipse.jface.text.AbstractDocument.addPosition(AbstractDocument.java:348)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.addPosition(SynchronizableDocument.java:212)
	at org.eclipse.jdt.internal.ui.javaeditor.SemanticHighlightingPresenter.updatePresentation(SemanticHighlightingPresenter.java:214)
	at org.eclipse.jdt.internal.ui.javaeditor.SemanticHighlightingPresenter.lambda$0(SemanticHighlightingPresenter.java:149)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4046)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3662)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.ui.internal.views.log.EventDetailsDialog.open(EventDetailsDialog.java:198)
	at org.eclipse.ui.internal.views.log.EventDetailsDialogAction.run(EventDetailsDialogAction.java:102)
	at org.eclipse.ui.internal.views.log.LogView.lambda$2(LogView.java:599)
	at org.eclipse.jface.viewers.StructuredViewer$1.run(StructuredViewer.java:779)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.StructuredViewer.fireDoubleClick(StructuredViewer.java:776)
	at org.eclipse.jface.viewers.AbstractTreeViewer.handleDoubleSelect(AbstractTreeViewer.java:1542)
	at org.eclipse.jface.viewers.StructuredViewer$4.widgetDefaultSelected(StructuredViewer.java:1205)
	at org.eclipse.jface.util.OpenStrategy.fireDefaultSelectionEvent(OpenStrategy.java:271)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:328)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4273)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4071)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1152)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1043)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:152)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:648)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:555)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1067/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1067,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5wwusT,eclipse.jdt.ui,1891822355,1067,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-15T10:29:22Z,2024-01-15T10:29:22Z,"it's then followed by Widget is disposed
```
org.eclipse.swt.SWTException: Widget is disposed
	at org.eclipse.swt.SWT.error(SWT.java:4922)
	at org.eclipse.swt.SWT.error(SWT.java:4837)
	at org.eclipse.swt.SWT.error(SWT.java:4808)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:450)
	at org.eclipse.swt.widgets.Widget.checkWidget(Widget.java:369)
	at org.eclipse.swt.widgets.Widget.getData(Widget.java:544)
	at org.eclipse.jface.text.source.VisibleLinesTracker.untrack(VisibleLinesTracker.java:117)
	at org.eclipse.jface.text.source.AnnotationRulerColumn.handleDispose(AnnotationRulerColumn.java:484)
	at org.eclipse.jface.text.source.AnnotationRulerColumn.lambda$2(AnnotationRulerColumn.java:264)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:127)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4273)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1071)
	at org.eclipse.swt.widgets.Widget.release(Widget.java:814)
	at org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:925)
	at org.eclipse.swt.widgets.Canvas.releaseChildren(Canvas.java:168)
	at org.eclipse.swt.widgets.Widget.release(Widget.java:821)
	at org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:925)
	at org.eclipse.swt.widgets.Canvas.releaseChildren(Canvas.java:168)
	at org.eclipse.swt.widgets.Widget.release(Widget.java:821)
	at org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:925)
	at org.eclipse.swt.widgets.Widget.release(Widget.java:821)
	at org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:925)
	at org.eclipse.swt.widgets.Widget.release(Widget.java:821)
	at org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:925)
	at org.eclipse.swt.widgets.Widget.release(Widget.java:821)
	at org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:925)
	at org.eclipse.swt.widgets.Widget.release(Widget.java:821)
	at org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:925)
	at org.eclipse.swt.widgets.Widget.release(Widget.java:821)
	at org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:925)
	at org.eclipse.swt.widgets.Widget.release(Widget.java:821)
	at org.eclipse.swt.widgets.Widget.dispose(Widget.java:428)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.disposeWidget(SWTPartRenderer.java:183)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributedPartRenderer.disposeWidget(ContributedPartRenderer.java:282)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeRemoveGui(PartRenderingEngine.java:935)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:858)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.removeGui(PartRenderingEngine.java:842)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.subscribeTopicToBeRendered(PartRenderingEngine.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.di.internal.extensions.EventObjectSupplier$DIEventHandler.handleEvent(EventObjectSupplier.java:92)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:207)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:201)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:60)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setToBeRendered(UIElementImpl.java:316)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.hidePart(PartServiceImpl.java:1411)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.hidePart(PartServiceImpl.java:1341)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.closePart(StackRenderer.java:1352)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer$3.close(StackRenderer.java:1217)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1982)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:338)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4273)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4071)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3659)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.ui.internal.views.log.EventDetailsDialog.open(EventDetailsDialog.java:198)
	at org.eclipse.ui.internal.views.log.EventDetailsDialogAction.run(EventDetailsDialogAction.java:102)
	at org.eclipse.ui.internal.views.log.LogView.lambda$2(LogView.java:599)
	at org.eclipse.jface.viewers.StructuredViewer$1.run(StructuredViewer.java:779)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.StructuredViewer.fireDoubleClick(StructuredViewer.java:776)
	at org.eclipse.jface.viewers.AbstractTreeViewer.handleDoubleSelect(AbstractTreeViewer.java:1542)
	at org.eclipse.jface.viewers.StructuredViewer$4.widgetDefaultSelected(StructuredViewer.java:1205)
	at org.eclipse.jface.util.OpenStrategy.fireDefaultSelectionEvent(OpenStrategy.java:271)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:328)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4273)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4071)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1152)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1043)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:152)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:648)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:555)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5wwusT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1067,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Zo0HG,eclipse.jdt.ui,2577613254,1067,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-08T12:58:19Z,2025-01-08T12:58:19Z,already reported in https://bugs.eclipse.org/bugs/show_bug.cgi?id=561272,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Zo0HG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1067,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Zo3Sn,eclipse.jdt.ui,2577626279,1067,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-08T13:05:03Z,2025-01-08T13:05:03Z,"addPositionCategory is called in another thread and the implementation is not threadsafe :

```
Thread [Worker-7: Initializing Quick Diff] (Suspended (breakpoint at line 371 in org.eclipse.jface.text.AbstractDocument))	
	org.eclipse.jface.text.Document(org.eclipse.jface.text.AbstractDocument).addPositionCategory(java.lang.String) line: 371	
	org.eclipse.jface.text.Document(org.eclipse.jface.text.AbstractDocument).completeInitialization() line: 294	
	org.eclipse.jface.text.Document.<init>() line: 54	
	org.eclipse.ui.internal.editors.quickdiff.LastSaveReferenceProvider.readDocument(org.eclipse.core.runtime.IProgressMonitor, boolean) line: 210	
	org.eclipse.ui.internal.editors.quickdiff.LastSaveReferenceProvider.getReference(org.eclipse.core.runtime.IProgressMonitor) line: 125	
	org.eclipse.ui.internal.texteditor.quickdiff.DocumentLineDiffer$2.run(org.eclipse.core.runtime.IProgressMonitor) line: 541	
	org.eclipse.core.internal.jobs.Worker.run() line: 63	

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Zo3Sn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1067,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZpHxd,eclipse.jdt.ui,2577693789,1067,NA,laeubi,1331477,Christoph Läubrich,,NA,2025-01-08T13:38:04Z,2025-01-08T13:38:04Z,"> addPositionCategory is called in another thread and the implementation is not threadsafe

Maybe here it should simply use `Display.execute(...)` to ensure it is always called in the UI.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZpHxd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1067,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZqHbS,eclipse.jdt.ui,2577954514,1067,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-08T15:27:04Z,2025-01-08T15:27:04Z,should be fixed by https://github.com/eclipse-platform/eclipse.platform.ui/pull/2676,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZqHbS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1068,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1068,eclipse.jdt.ui,2081808946,1068,Run As/Debug As context menu in java source editor and package explorer does not show entries,LorenzoBettini,1202254,Lorenzo Bettini,,CLOSED,2024-01-15T11:11:18Z,2024-04-02T05:40:19Z,"With Eclipse (Linux)

```
Version: 2024-03 M1 (4.31.0 M1)
Build id: 20240111-1612
```

and  Eclipse Java Development Tools 3.19.400.v20240104-1800

the Run As/Debug As context menu in java source editor and package explorer does not show entries; at least, not in a usable way, see the screenshot:

![Screenshot_20240115_120955](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1202254/5dcbe3f2-8738-4cc4-8194-0f209791465b)


On the contrary, the ones in the toolbar and in the ""Run"" menu work as expected.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1068/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1068,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5wxSte,eclipse.jdt.ui,1891969886,1068,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-15T11:20:04Z,2024-01-15T11:20:04Z,"please have a look in the ""Error Log"" view if you find a related exception","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5wxSte/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1068,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5wxU55,eclipse.jdt.ui,1891978873,1068,NA,LorenzoBettini,1202254,Lorenzo Bettini,,NA,2024-01-15T11:23:09Z,2024-01-15T11:23:09Z,"@jukzi the error log doesn't show anything in that respect.

The terminal from where I started Eclipse shows (after using ""Run As""):

```
*** BUG ***
In pixman_region32_init_rect: Invalid rectangle passed
Set a breakpoint on '_pixman_log_error' to debug

*** BUG ***
In pixman_region32_init_rect: Invalid rectangle passed
Set a breakpoint on '_pixman_log_error' to debug

*** BUG ***
In pixman_region32_init_rect: Invalid rectangle passed
Set a breakpoint on '_pixman_log_error' to debug
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5wxU55/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1068,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5wybgi,eclipse.jdt.ui,1892268066,1068,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-01-15T14:22:45Z,2024-01-15T14:22:45Z,"I don't think this is JDT problem, most likely GTK / SWT issue on HiDPI monitors / Wayland.
Please try to either use X11 or switch to ""low"" DPi and see if the problem disappears.
If not, please provide SWT/GTK config lines you can find in Help->About->Installation Details->Configuration.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5wybgi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1068,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5wygZr,eclipse.jdt.ui,1892288107,1068,NA,LorenzoBettini,1202254,Lorenzo Bettini,,NA,2024-01-15T14:33:38Z,2024-01-15T14:33:38Z,"I'm on X11, not Wayland.
I'll try also lower DPI.
Concerning the config lines, is it enough to copy everything that ""Configuration"" provides if I type ""gtk"" in the search field?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5wygZr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1068,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5wzUoW,eclipse.jdt.ui,1892502038,1068,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-01-15T16:46:40Z,2024-01-15T16:46:40Z,"No, please provide these entries that shown for SWT **and** for GTK from ""*** System properties"" and ""*** System environment variables"" sections","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5wzUoW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1068,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w2NHe,eclipse.jdt.ui,1893257694,1068,NA,LorenzoBettini,1202254,Lorenzo Bettini,,NA,2024-01-16T08:19:22Z,2024-01-16T08:19:22Z,"@iloveeclipse I tried both with X11 and Wayland and I also switched to 100% HDPI (so, no scaling); the result is always the same, and so are the logged information in the terminal.

These are the entries you asked for:

```
*** System properties:
gtk
/home/bettini/eclipse/bundlepool/plugins/org.eclipse.equinox.launcher.gtk.linux.x86_64_1.2.800.v20231003-1442/eclipse_11802.so
org.eclipse.swt.internal.gtk.theme=Adwaita:light:dark
org.eclipse.swt.internal.gtk.version=3.24.39
osgi.ws=gtk

*** System environment variables:
GTK_THEME=Adwaita:light

*** System properties:
-Dorg.eclipse.swt.graphics.Resource.reportNonDisposed=true
org.eclipse.swt.graphics.Resource.reportNonDisposed=true
org.eclipse.swt.internal.deviceZoom=100
org.eclipse.swt.internal.gdk.backend=x11
org.eclipse.swt.internal.gtk.theme=Adwaita:light:dark
org.eclipse.swt.internal.gtk.version=3.24.39

*** System environment variables:
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w2NHe/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1068,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w_K0j,eclipse.jdt.ui,1895607587,1068,NA,LorenzoBettini,1202254,Lorenzo Bettini,,NA,2024-01-17T11:21:30Z,2024-01-17T11:21:30Z,"Some updates: the problem appears only the first time you select the Run As/Debug As menu in the context menu: if you get back to Run As/Debug As (without closing the context menu) the entries appear and can be selected. Unfortunately, it happens again if you close the context menu and open it again. When the problem appears, I can quickly spot something like ""Loading..."" in the small submenu. So, I wonder if this issue is a consequence of this other issue: https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1056","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w_K0j/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1068,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w_PhS,eclipse.jdt.ui,1895626834,1068,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-17T11:34:43Z,2024-01-17T11:34:43Z,"
@mickaelistria @fedejeanne  can this issue relate to the changes in run menu? for example  https://github.com/eclipse-platform/eclipse.platform/pull/1005","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w_PhS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1068,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w_eOU,eclipse.jdt.ui,1895687060,1068,NA,LorenzoBettini,1202254,Lorenzo Bettini,,NA,2024-01-17T12:14:15Z,2024-01-17T12:14:15Z,One new thing I noted (I'm pretty sure it wasn't there before) is that the context run menu now shows existing launch configurations associated to that file.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w_eOU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1068,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w_tOC,eclipse.jdt.ui,1895748482,1068,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2024-01-17T12:51:16Z,2024-01-17T12:51:16Z,@jukzi yes probably. @fedejeanne I suspect the issue is that the menu doesn't refresh its layout well and remains too small to show the entries.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w_tOC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1068,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xaAxl,eclipse.jdt.ui,1902644325,1068,NA,LorenzoBettini,1202254,Lorenzo Bettini,,NA,2024-01-21T14:20:11Z,2024-01-21T14:20:11Z,"But, just for curiosity, am I the only one seeing this problem? By the way, I can see that in all my Linux installations. Not on mac m1, though.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xaAxl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1068,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xaYM_,eclipse.jdt.ui,1902740287,1068,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2024-01-21T19:43:07Z,2024-01-21T19:43:07Z,"I noticed it yesterday on Linux as well. I think it's related to async computation of submenus/items which menu ignores when computing its size.
I see the same issue with async dynamic inputs in menus in LSP4E > Code Actions: the menu looks empty while is has some contents; here too, computation is async.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xaYM_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1068,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xdN59,eclipse.jdt.ui,1903484541,1068,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-22T08:30:12Z,2024-01-22T08:30:12Z,@fedejeanne pleae fix or revert,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xdN59/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1068,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xdOeo,eclipse.jdt.ui,1903486888,1068,NA,LorenzoBettini,1202254,Lorenzo Bettini,,NA,2024-01-22T08:31:46Z,2024-01-22T08:31:46Z,Unpopular opinion: life is much better with blocking operations and without concurrency/asynchronicity... ;),"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xdOeo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1068,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zrJJs,eclipse.jdt.ui,1940689516,1068,NA,LorenzoBettini,1202254,Lorenzo Bettini,,NA,2024-02-13T08:13:07Z,2024-02-13T08:13:07Z,"Sorry for the ping, but this bug is critical concerning usability...","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zrJJs/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1068,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zrzqk,eclipse.jdt.ui,1940863652,1068,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2024-02-13T09:16:52Z,2024-02-13T09:16:52Z,@LorenzoBettini Can you please submit a fix or revert PR?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zrzqk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1068,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zr4CS,eclipse.jdt.ui,1940881554,1068,NA,LorenzoBettini,1202254,Lorenzo Bettini,,NA,2024-02-13T09:22:55Z,2024-02-13T09:22:55Z,"@mickaelistria I think the original author should do the fix or, better, the revert of the PR. I don't know the internals of JDT; the original author should, and it should be a matter of minutes. For me, it would take ages...
I'm happy to help, but also time optimization is important ;)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zr4CS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1068,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zr7rC,eclipse.jdt.ui,1940896450,1068,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-13T09:27:55Z,2024-02-13T09:27:55Z,Please name the PR that causes the issue so that we can revert.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zr7rC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1068,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zsD3w,eclipse.jdt.ui,1940930032,1068,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2024-02-13T09:38:46Z,2024-02-13T09:38:46Z,"> I think the original author should do the fix or, better, the revert of the PR.

Sure, but in practice, this is not happening as you can see here. So someone else has to do the work.
The discussion has pointed to https://github.com/eclipse-platform/eclipse.platform/pull/1005 , please consider trying to revert it locally to ensure if fixes your issue, and if it does, submit a PR. There is no need for any JDT expertise here, just plain Git and Eclipse PDE usage.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zsD3w/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1068,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zsEV0,eclipse.jdt.ui,1940931956,1068,NA,LorenzoBettini,1202254,Lorenzo Bettini,,NA,2024-02-13T09:39:23Z,2024-02-13T09:39:23Z,"> @mickaelistria @fedejeanne can this issue relate to the changes in run menu? for example [eclipse-platform/eclipse.platform#1005](https://github.com/eclipse-platform/eclipse.platform/pull/1005)

@jukzi you mentioned the change","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zsEV0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1068,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zsFJu,eclipse.jdt.ui,1940935278,1068,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-13T09:40:29Z,2024-02-13T09:40:29Z,"> @jukzi you mentioned the change

that was a guess... did you verify a revert of that helps?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zsFJu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1068,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zv-d4,eclipse.jdt.ui,1941956472,1068,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-02-13T16:31:18Z,2024-02-13T16:31:18Z,"I've just reported another issue related to this code, see https://github.com/eclipse-platform/eclipse.platform/issues/1202.

I would propose to revert the **two** related commits as they both are part of same feature.
- https://github.com/eclipse-platform/eclipse.platform/commit/494483ea135ec22a0327ec4c9500c693555d710f
- https://github.com/eclipse-platform/eclipse.platform.ui/commit/771d0b405910c4971123ffb46b09b9693d10af4e
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zv-d4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1068,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zwBMB,eclipse.jdt.ui,1941967617,1068,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-13T16:36:21Z,2024-02-13T16:36:21Z,"please do, when you know that they cause this issues. @fedejeanne had enough time to repsond.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zwBMB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1068,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zw0Hb,eclipse.jdt.ui,1942176219,1068,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-02-13T18:45:41Z,2024-02-13T18:45:41Z,"@LorenzoBettini : please check next IBuild, I've reverted related commits.
At least https://github.com/eclipse-platform/eclipse.platform/issues/1202 is fixed by that.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zw0Hb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1068,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5z0z_C,eclipse.jdt.ui,1943224258,1068,NA,LorenzoBettini,1202254,Lorenzo Bettini,,NA,2024-02-14T07:38:25Z,2024-02-14T07:38:25Z,"@iloveeclipse I'm trying to use https://download.eclipse.org/eclipse/updates/4.31-I-builds/ for updating ""platform"", I guess the hopefully fixed version is [org.eclipse.platform_4.31.0.v20240213-2236.jar](https://www.eclipse.org/downloads/download.php?file=/eclipse/updates/4.31-I-builds/I20240213-1800/features/org.eclipse.platform_4.31.0.v20240213-2236.jar)

However, it refuses to update because of the conflict with the EPP package

```
Cannot complete the install because of a conflicting dependency.
  Software being installed: Eclipse Platform 4.31.0.I20240213-1800 (org.eclipse.platform.ide 4.31.0.I20240213-1800)
  Software currently installed: Eclipse Platform 4.31.0.v20240127-1800 (org.eclipse.platform.feature.group 4.31.0.v20240127-1800)
  Only one of the following can be installed at once: 
    Compare Support 3.9.300.v20231123-2204 (org.eclipse.compare 3.9.300.v20231123-2204)
    Compare Support 3.10.0.v20240104-0951 (org.eclipse.compare 3.10.0.v20240104-0951)
    Compare Support 3.10.0.v20240208-0728 (org.eclipse.compare 3.10.0.v20240208-0728)
    Compare Support 3.9.200.v20230726-0617 (org.eclipse.compare 3.9.200.v20230726-0617)
    Compare Support 3.10.0.v20240125-0912 (org.eclipse.compare 3.10.0.v20240125-0912)
  Cannot satisfy dependency:
    From: Eclipse Platform 4.31.0.v20240127-1800 (org.eclipse.platform.feature.group 4.31.0.v20240127-1800)
    To: org.eclipse.equinox.p2.iu; org.eclipse.compare [3.10.0.v20240125-0912,3.10.0.v20240125-0912]
  Cannot satisfy dependency:
    From: Eclipse Platform 4.31.0.v20240213-2236 (org.eclipse.platform.feature.group 4.31.0.v20240213-2236)
    To: org.eclipse.equinox.p2.iu; org.eclipse.compare [3.10.0.v20240208-0728,3.10.0.v20240208-0728]
  Cannot satisfy dependency:
    From: Eclipse Platform 4.31.0.I20240213-1800 (org.eclipse.platform.ide 4.31.0.I20240213-1800)
    To: org.eclipse.equinox.p2.iu; org.eclipse.platform.feature.group [4.31.0.v20240213-2236,4.31.0.v20240213-2236]
```

However, I could update my TP and start a new Eclipse workbench. I see the problem went away in the started workbench!
So it looks like it is fixed now.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5z0z_C/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1068,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5z050n,eclipse.jdt.ui,1943248167,1068,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-02-14T08:00:17Z,2024-02-14T08:00:17Z,"> So it looks like it is fixed now.

Perfect, thanks for confirmation. Closing as duplicate of https://github.com/eclipse-platform/eclipse.platform/issues/1202.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5z050n/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1068,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM55EG-s,eclipse.jdt.ui,2031120300,1068,NA,fedejeanne,2205684,Federico Jeanne,,NA,2024-04-02T05:39:33Z,2024-04-02T05:39:33Z,"Hello everyone,
I came back from a leave of several months just recently, hence the radio silence. Sorry to hear that my change brought some problems, thanks @LorenzoBettini for reporting it!

I've been looking into it and I couldn't find anything useful on the bug on `pixman_region32_init_rect` nor could I come up with a solution for Linux, so I guess there's no other choice besides leaving it out (thank you @iloveeclipse for reverting it).

> Unpopular opinion: life is much better with blocking operations and without concurrency/asynchronicity... ;)

I agree (sigh)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM55EG-s/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1073,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1073,eclipse.jdt.ui,2082734763,1073,Hard to read method signatures in Javadoc views,RedeemerSK,36334098,Jozef Tomek,,CLOSED,2024-01-15T22:08:25Z,2024-04-22T14:40:47Z,"Hello

as per [advice](https://www.eclipse.org/lists/jdt-dev/msg02304.html) via JDT mailing lists, I'm creating this issue to have a place to discuss my proposal for improvements to JavaDoc content styling and it's implementation.

### Problem I'm addressing
Hard to read method signatures in JavaDoc views, for example:
![javadoc_current](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/36334098/b93c3cca-f7be-4e84-978d-08dc982344ab)

### Enhancements proposal & prototype
My prototype changes the presentation into IMHO more readable format, example:
![javadoc_new](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/36334098/9fab23a2-ee1e-44ed-9ffa-a6514c33ae6d)
![javadoc_new_colored](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/36334098/b245d2d5-e7bc-4a95-bcf6-608dfd72e9f8)

New enhancements are fully configurable (when to apply them, what colors to use):
![preview_overlay](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/36334098/406c7ca5-96c9-487f-9f5e-29c0b5776dde)


### More info
Can be found at [Eclipse JDT forums topic](https://www.eclipse.org/forums/index.php?t=msg&th=1114002&goto=1862222&#msg_1862222) I created to communicate goals, approach, decisions taken and progress.

### Requesting
I would like to have somebody, preferably with some level of decision making weight in JDT codebase / project, to evaluate my prototype and provide feedback so that I can finalize it and hopefully have it accepted eventually.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1073/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1073,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w0nb6,eclipse.jdt.ui,1892841210,1073,NA,RedeemerSK,36334098,Jozef Tomek,,NA,2024-01-15T22:44:54Z,2024-01-15T22:44:54Z,PR for prototype created: https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1074,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w0nb6/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1076,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1076,eclipse.jdt.ui,2083585450,1076,memory leak: ITestElement,jukzi,51790620,Jörg Kubitz,,CLOSED,2024-01-16T10:32:23Z,2024-01-19T09:32:52Z,"Today my eclipse went into OOME

eclipse.buildId=4.31.0.I20240115-1800
java.version=21.0.1

HeapDump shows 1,5GB Data polluted with ITestElement. i have never seen that before - was there a recent change related?
i had executed for example org.eclipse.jdt.core.tests.compiler.regression.TestAll before.
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/e7af5575-c80f-4de1-9adc-81712fcaee2c)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1076/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1076,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w3TuB,eclipse.jdt.ui,1893546881,1076,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-16T11:21:01Z,2024-01-16T11:21:01Z,"memory consumption during org.eclipse.jdt.core.tests.compiler.regression.TestAll (137746 tests):
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/eb5d9a60-8133-4239-9232-e2bd27491b9e)

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/c67d9787-8c66-4f63-b965-f4f19d540d8e)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w3TuB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1076,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w3UT6,eclipse.jdt.ui,1893549306,1076,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-16T11:22:45Z,2024-01-16T11:22:45Z,"GC root of an example ITestElement []:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/7d60f74c-62a1-413f-9de4-d3d6b204040b)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w3UT6/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1076,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w4B-n,eclipse.jdt.ui,1893736359,1076,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-16T13:24:01Z,2024-01-16T13:24:01Z,"@iloveeclipse  @raghucssit this is probably a regression from [ee92e3de6f124b554ceca47135babea27831d04b](https://github.com/eclipse-platform/eclipse.platform.ui/pull/810)

as the org.eclipse.jdt.internal.junit.model.TestCaseElement is referenced by  org.eclipse.jface.viewers.internal.ExpandableNode.orginalArray multiple times:

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/50f65f71-d15c-42f2-bfc0-738233f6c054)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w4B-n/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1076,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w4eHb,eclipse.jdt.ui,1893851611,1076,NA,raghucssit,10301131,Raghunandana,,NA,2024-01-16T14:24:27Z,2024-01-16T14:24:27Z,"@iloveeclipse **we maintain this list of expandable nodes to select the expandable node in case of element to select is present inside it** 
An Expandable node is created only when children are expanded. JUnit view tries to expand all the nodes to select the failure. Getting this scenario manually is very rare. Either user should use **Expand All** or manually expand all the nodes(Which is almost rare case).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w4eHb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1076,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w4swM,eclipse.jdt.ui,1893911564,1076,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-01-16T14:55:31Z,2024-01-16T14:55:31Z,"> HeapDump shows 1,5GB Data polluted with ITestElement. i have never seen that before

With exact this test case? Note: the number of tests (and so required memory) depends on the JVM used to run tests, because JDT decides which test to run based on JVM version. So running this test on Java 17 results in less tests executed if running it on Java 21.

> as the org.eclipse.jdt.internal.junit.model.TestCaseElement is referenced by org.eclipse.jface.viewers.internal.ExpandableNode.orginalArray multiple times

Note, the data that is produced by test does not depend on the ""expandable"" feature enabled or not, the JFace always keeps the content elements linked to UI in memory. So you can switch the preference on/off and see *exact* same number of org.eclipse.jdt.internal.junit.model.TestCaseElement references kept in memory (I did it and see same number of objects on heap).

Just think / try: **every** node in the tree, if selected, shows you/gives you a link/reference to TestCaseElement. That's unavoidable.

> this is probably a regression from https://github.com/eclipse-platform/eclipse.platform.ui/pull/810

I don't think this is a regression at all, see above. The data produced by test and linked to elements in the tree **is always** in memory.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w4swM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1076,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w42kX,eclipse.jdt.ui,1893951767,1076,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-16T15:15:44Z,2024-01-16T15:15:44Z,"> With exact this test case? 

yes, and when i disable the feature (max=0) it runs fine, ends up in 0 (literally zero) ITestElement[] ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w42kX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1076,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w5NWz,eclipse.jdt.ui,1894045107,1076,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-01-16T16:03:57Z,2024-01-16T16:03:57Z,"ITestElement[] memory is only to store the ""hidden"" TestCaseElement's but their number is same.
So what you see is the effect of ""memory vs speed"" trade off, not a memory leak.
In order to avoid UI freezes (speed) we need extra data structures (memory), nothing is for free.

But beside this, which preference value have you set for the viewer limit & how many ExpandableNode instances are related to the JUnit view? In my case (default 1000 limit & 371907 TestCaseElement's) I see **one** instance of ExpandableNode and **one** instance of  ITestElement[], this is what the jcmd GC.class_histogram command says.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w5NWz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1076,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w5RGf,eclipse.jdt.ui,1894060447,1076,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-16T16:12:26Z,2024-01-16T16:12:26Z,"i had used the default values 
4614 ExpandableNode 
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/d64f7216-0eb0-4b7d-a56e-42b3a9f47d9b)
do you want the heap dump?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w5RGf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1076,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w5TvD,eclipse.jdt.ui,1894071235,1076,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-16T16:18:34Z,2024-01-16T16:18:34Z,"> So what you see is the effect of ""memory vs speed"" trade off, not a memory leak.

maybe not a leak but a huge waste of memory, especially since the node limit was never reached. 
I don't even understand why there are thousends of ITestElement[] with almost 137746 items EACH, when there are only 137746 in total.
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/1c4a4b5f-b52a-4978-aba9-4d1e91c70bd9)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w5TvD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1076,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w5kNS,eclipse.jdt.ui,1894138706,1076,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-01-16T16:55:38Z,2024-01-16T16:55:38Z,"Jörg, there must be 1:1 ExpandableNode / ITestElement[] relationship, so the question is more why are there so many  ExpandableNode created in your case. 

Just to make sure we are on same level of data: could you please run 
`jcmd <pid_of_Eclipse> GC.class_histogram` and check that the number of ExpandableNode / ITestElement[] instances matches what you see in the heap dump? So far I always trusted jcmd data, and I can only explain difference between your instances number and my with different OS / SWT implementation (Windows vs Linux).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w5kNS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1076,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w97f5,eclipse.jdt.ui,1895282681,1076,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-17T08:00:14Z,2024-01-17T08:00:14Z,"the jcmd output matches the VisualVm Data from a heapdump - both size and count:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/14d2194b-f773-461b-aa07-7ab496e867cd)
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/0a4f2ab2-7b93-43ac-b414-7e7aafb46d4c)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w97f5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1076,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w99xC,eclipse.jdt.ui,1895291970,1076,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-17T08:07:29Z,2024-01-17T08:07:29Z,"hey that jcmd is handy fast. That way i can monitor the object count. turns out the ExpandableNode count increases every Time i click on the ""Unrooted Tests"" Node. While the test is running that Node immediately collapses again (don't know why, feels like an error) an seems to leak 1 ExpandableNode
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/6d7af481-2208-4ca4-932c-288476bebbbc)
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/d5087218-4019-4447-94dc-f88599a56d3a)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w99xC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1076,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w9-in,eclipse.jdt.ui,1895295143,1076,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-17T08:10:06Z,2024-01-17T08:10:06Z,"When ""Scroll Lock"" is off the ExpandableNode count increases fast without manually clicking
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/74a6fcd0-8a0e-4904-984a-fdf81deedf39)
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/2aaba4f8-487e-49bb-b534-81ea4781f371)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w9-in/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1076,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w-4KJ,eclipse.jdt.ui,1895531145,1076,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-01-17T10:34:51Z,2024-01-17T10:34:51Z,"OMG. That looks like a memory leak in Windows / SWT port.
@raghucssit : we should check what happened with Windows. I assume the node element is not disposed properly.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w-4KJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1076,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w_mZr,eclipse.jdt.ui,1895720555,1076,NA,raghucssit,10301131,Raghunandana,,NA,2024-01-17T12:34:27Z,2024-01-17T12:34:27Z,I will check.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5w_mZr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1076,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xQJu8,eclipse.jdt.ui,1900059580,1076,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-01-19T09:32:52Z,2024-01-19T09:32:52Z,The fix is merged in platform UI repo via https://github.com/eclipse-platform/eclipse.platform.ui/pull/1521,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xQJu8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1080,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1080,eclipse.jdt.ui,2085742007,1080,Allow Batch Field Encapsulation for Multiple Fields,amartya4256,46150646,Amartya Parijat,,CLOSED,2024-01-17T09:13:14Z,2024-04-09T18:31:02Z,"## Current Situation
JDT provides two functionalities for the generation of getters and setters.
1. Apply the _Encapsulate Field_ refactoring, which generates getters and setters and, in particular, allows to replace references to the field with calls of the generated accessors.
![Image](https://github.com/vi-eclipse/Eclipse-JDT/assets/755472/ecc34de3-151f-4769-a323-de10a841b2ca)
2. Apply the _Generate Getters/Setters_ source modification, which allows to add getters and setters to the file.
![Image](https://github.com/vi-eclipse/Eclipse-JDT/assets/755472/82c72fe6-ba70-4669-ac2b-d084fbb6eda6)

While getter/setter generation can be applied in a batch operation for multiple fields of a class, the refactoring can only be applied to a single field at once.


## Expected Behavior
The user shall be able to perform a getter/setter generation together with field encapsulation (i.e., replacement of field access with calls of accessors) in batch mode to multiple fields of a class.

## Proposed Solution
Starting from the two existing functionalities, either the getter/setter generation may be extended by functionality to encapsulate the fields, or the field encapsulation refactoring may be enhanced with support for being applied to multiple fields as once.

I propose to follow to second approach, as performing field encapsulation actually is a refactoring that goes beyond source manipulation. I.e., in addition (or as a replacement for the) to the existing _Encapsulate Field_ refactoring, an _Encapsulate Fields_ refactoring should be provided. As a result, the options provided by getter/setter generation and field encapsulation should be aligned. The new refactoring should be capable of everything provided by the existing refactoring but along with a selection of all fiels to apply it to, i.e. :
- Selecting the fields to encapsulate (in case of a text selection or when triggered as a quick fix, may be restricted to the fields in the text selection)
- Per field:
  - Defining wheter a getter and/or setter shall be created along with their names
  - A selection where the method(s) shall be placed","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1080/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1082,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1082,eclipse.jdt.ui,2085867726,1082,[21] New Java Project Dialog too small,jukzi,51790620,Jörg Kubitz,,CLOSED,2024-01-17T10:20:42Z,2024-01-18T08:03:07Z,"""New Java Project Dialog"" shows scroll bars now
eclipse.buildId=4.31.0.I20240115-1800
java.version=21.0.1
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/5ffe4e8c-7eaf-4761-8df6-6c776ef4d523)

should be big enough by default:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/aba1d71b-ddff-4bdf-aa29-e37b587bf2ec)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1082/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1082,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xA_1K,eclipse.jdt.ui,1896086858,1082,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-01-17T15:47:35Z,2024-01-17T15:47:35Z,"Same problem on Linux:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/964108/64471693-e688-4411-8955-76d68043f8b5)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xA_1K/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1082,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xBAZc,eclipse.jdt.ui,1896089180,1082,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-01-17T15:48:46Z,2024-01-17T15:48:46Z,This looks like a regression in Eclipse 4.31.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xBAZc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1082,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xBv0K,eclipse.jdt.ui,1896283402,1082,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-01-17T17:36:03Z,2024-01-17T17:36:03Z,"I believe the regression is coming from https://github.com/eclipse-platform/eclipse.platform.ui/pull/1283, at least if I return `null` from `org.eclipse.jface.wizard.WizardDialog.getDialogBoundsSettings()` the dialog size changes to somewhat more acceptable. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xBv0K/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1082,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xH-vu,eclipse.jdt.ui,1897917422,1082,NA,marcushoepfner,29301444,,marcus.hoepfner@sap.com,NA,2024-01-18T07:04:13Z,2024-01-18T07:04:13Z,I will have a look.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xH-vu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1082,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xIMD7,eclipse.jdt.ui,1897971963,1082,NA,marcushoepfner,29301444,,marcus.hoepfner@sap.com,NA,2024-01-18T07:56:10Z,2024-01-18T07:56:10Z,"That does only happen if you select the exact wizard directly correct?
I can reproduce it with e.g. File-> new Java Project.
If I select File -> New -> Other (CMD/CTRL + N) and select a wizard, the dialog is resized to the correct size.

The dialog settings identifier is always ""wizard.dialogbounds"", no matter which wizard. I guess this needs to be changed.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xIMD7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1082,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xINuX,eclipse.jdt.ui,1897978775,1082,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-18T08:00:14Z,2024-01-18T08:00:14Z,Hard to say since the dialog seems to keep it't size after i used it once. i initially had the problem when i opened it from context menu in package explorer.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xINuX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1082,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xIN7O,eclipse.jdt.ui,1897979598,1082,NA,marcushoepfner,29301444,,marcus.hoepfner@sap.com,NA,2024-01-18T08:00:54Z,2024-01-18T08:00:54Z,"Issue in o.e.platform.ui has been created.
Refer to https://github.com/eclipse-platform/eclipse.platform.ui/issues/1511.

I think we can close this one.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xIN7O/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1082,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xIOhd,eclipse.jdt.ui,1897982045,1082,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-01-18T08:03:07Z,2024-01-18T08:03:07Z,@marcushoepfner : thanks for looking into.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xIOhd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1083,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1083,eclipse.jdt.ui,2086200179,1083,"""Make Static"" refactoring erroneously changes method call",HeikoKlare,755472,Heiko Klare,heiko.klare@vector.com,CLOSED,2024-01-17T13:30:29Z,2024-01-18T22:13:13Z,"The recently introduced ""Make Static"" refactoring (#689) erroneously interprets a method call within an anonymous class inside the refactored method as a call on `this` and thus changes the method invocation to be performed on the added input parameter of the method. This is (1) semantically incorrect and (2) leads to compile errors if the type of the added parameter does not provide the method.

### Expected Behavior

The refactoring should only replace call to methods that are actually performed on `this`.
To this end, the implementation of `InstanceUsageRewriter#isInsideAnonymousClass(...)` needs to be corrected.

### How to Reproduce

The behavior was found when refactoring the following method:
`org.eclipse.jdt.core.tests.compiler.regression.AbstractRegressionTest#findReferences(String)`

It can be reproduced with the following minimal examples:
### Incorrect Call
When calling a method inside an anonymous class that is provided by the encapsulating class, there will be a wrong method call.

```java
public class Foo {
	
	void toBeRefactored() {
		new Foo() {
			void toImplement() {
				toCall();
			}
		};
	}
	
	void toCall() { }
	
	void toImplement() { }
	
}
```

Refactoring `toBeRefactored()` produces:
```java
public class Foo {
	
	static void toBeRefactored(Foo foo) {
		new Foo() {
			void toImplement() {
				foo.toCall();
			}
		};
	}
	
	void toCall() { }
	
	void toImplement() { }
	
}
```
But actually the call to `toBeCalled()` was made on an instance of the anonymous inner class rather than the outer instance in the `toBeRefactored` method. So in this case the refactoring should only add the `static` keyword and nothing else.

### Compile Error
When calling a method inside an anonymous class that is not provided by the encapsulating class, there will be a compile error (for the same reason), also in case the anonymous class is nested:

```java
public class Foo {
	int j = 0;
	
	void toBeRefactored() {
		this.j = 1;
		new Other() {
			@Override
			void toImplement() {
				new Object() {
					@Override
					public boolean equals(Object obj) {
						toCall();
						return false;
					}
				};
			}
		};
	}
}

public abstract class Other {
	abstract void toImplement();
	void toCall() {
	}
}
```

Refactoring `toBeRefactored()` produces:
```java
public class Foo {
	int j = 0;
	
	void toBeRefactored(Foo foo) {
		foo.j = 1;
		new Other() {
			@Override
			void toImplement() {
				new Object() {
					@Override
					public boolean equals(Object obj) {
						foo.toCall();
						return false;
					}
				};
			}
		};
	}
}
```
This contains the same faulty `foo.toCall()` as in the first example.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1083/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1088,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1088,eclipse.jdt.ui,2087458690,1088,imports not sorted ascending anymore,jukzi,51790620,Jörg Kubitz,,CLOSED,2024-01-17T16:45:39Z,2024-01-24T08:50:53Z,"
When i organize imports on NewJavaProjectWizardPageOne 
""org.eclipse.jdt.launching."" is put in front of 
""org.eclipse.jdt.internal""

eclipse.buildId=4.31.0.I20240116-1800
java.version=21.0.1
i have not seen that before.
![image](https://github.com/eclipse-jdt/eclipse.jdt.core/assets/51790620/a3aa60f2-76e4-4e79-8ce0-7b8537329183)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1088/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1088,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xHZUF,eclipse.jdt.ui,1897764101,1088,NA,srikanth-sankaran,131454720,Srikanth Sankaran,,NA,2024-01-18T04:15:00Z,2024-01-18T04:15:00Z,"Organize imports happens in the UI is my understanding. @noopur2507, @jjohnstn - Please send it back if JDT/Core is responsible for the problem ultimately. TIA.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xHZUF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1088,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xqdlg,eclipse.jdt.ui,1906956640,1088,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-01-23T21:34:03Z,2024-01-23T21:34:03Z,"@jukzi This is working as set up by the project settings for the org.eclipse.jdt.ui project.  If you look at the Preferences you will find a page for Organize Imports where you can specify groups that organize imports is supposed to group imports into in the given order.  If you look at project specific settings, you will see a set of groups set up for org.eclipse.jdt.ui and that is what it is using to define how to sort the imports.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xqdlg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1088,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xqoQZ,eclipse.jdt.ui,1907000345,1088,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-01-23T22:07:14Z,2024-01-23T22:07:14Z,"BTW: according to git blame, the group ordering for o.e.jdt.ui was set by Dani Megert in 2008","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xqoQZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1088,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xtKL4,eclipse.jdt.ui,1907663608,1088,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-24T08:50:53Z,2024-01-24T08:50:53Z,"@jjohnstn thanks for analysis. I did not know that feature (and don't get its value). The configuration feels bad
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/69410ffc-2177-48f4-a9e9-0811cdfc8283), but we can close the issues as  ""works as configured""
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xtKL4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1093,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1093,eclipse.jdt.ui,2087924452,1093,TypeFilter: java.lang.IllegalArgumentException at shutdown,jukzi,51790620,Jörg Kubitz,,CLOSED,2024-01-18T09:57:06Z,2024-01-24T19:06:28Z,"logged at the end of QuickFixTestSuite:
```
java.lang.IllegalArgumentException
	at org.eclipse.core.internal.preferences.AbstractScope.getNode(AbstractScope.java:36)
	at org.eclipse.jdt.internal.corext.util.TypeFilter.getPreferenceStore(TypeFilter.java:107)
	at org.eclipse.jdt.internal.corext.util.TypeFilter.dispose(TypeFilter.java:140)
	at org.eclipse.jdt.internal.core.manipulation.JavaManipulationPlugin.stop(JavaManipulationPlugin.java:81)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:893)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:1)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.stop(BundleContextImpl.java:885)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.stopWorker0(EquinoxBundle.java:1071)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.stopWorker(EquinoxBundle.java:392)
	at org.eclipse.osgi.container.Module.doStop(Module.java:695)
	at org.eclipse.osgi.container.Module.stop(Module.java:554)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.decStartLevel(ModuleContainer.java:2111)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1981)
	at org.eclipse.osgi.container.SystemModule.stopWorker(SystemModule.java:278)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$SystemBundle$EquinoxSystemModule.stopWorker(EquinoxBundle.java:222)
	at org.eclipse.osgi.container.Module.doStop(Module.java:695)
	at org.eclipse.osgi.container.Module.stop(Module.java:554)
	at org.eclipse.osgi.container.SystemModule.stop(SystemModule.java:209)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$SystemBundle$EquinoxSystemModule$1.run(EquinoxBundle.java:240)
	at java.base/java.lang.Thread.run(Thread.java:833)

```
@robstryker regression from https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1053","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1093/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1093,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xhjUf,eclipse.jdt.ui,1904620831,1093,NA,robstryker,630383,Rob Stryker,,NA,2024-01-22T19:00:15Z,2024-01-22T19:00:15Z,Will investigate. ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xhjUf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1093,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xvT1Y,eclipse.jdt.ui,1908227416,1093,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-01-24T14:21:02Z,2024-01-24T14:21:02Z,"Not this appears in regular SDK based IDE on shutdown too. 
The error below is reported to log on shutdown:

```
eclipse.buildId=4.31.0.I20240123-1800
java.version=21.0.1
java.vendor=N/A
BootLoader constants: OS=linux, ARCH=x86_64, WS=gtk, NL=en_US
Command-line arguments:  -data /data/4x_platform_workspace -os linux -ws gtk -arch x86_64

org.eclipse.jdt.core.manipulation
Error
Wed Jan 24 15:13:31 CET 2024
FrameworkEvent ERROR

org.osgi.framework.BundleException: Exception in org.eclipse.jdt.internal.core.manipulation.JavaManipulationPlugin.stop() of bundle org.eclipse.jdt.core.manipulation.
	at org.eclipse.osgi.internal.framework.BundleContextImpl.stop(BundleContextImpl.java:913)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.stopWorker0(EquinoxBundle.java:1071)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.stopWorker(EquinoxBundle.java:392)
	at org.eclipse.osgi.container.Module.doStop(Module.java:695)
	at org.eclipse.osgi.container.Module.stop(Module.java:554)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.decStartLevel(ModuleContainer.java:2111)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1981)
	at org.eclipse.osgi.container.SystemModule.stopWorker(SystemModule.java:278)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$SystemBundle$EquinoxSystemModule.stopWorker(EquinoxBundle.java:222)
	at org.eclipse.osgi.container.Module.doStop(Module.java:695)
	at org.eclipse.osgi.container.Module.stop(Module.java:554)
	at org.eclipse.osgi.container.SystemModule.stop(SystemModule.java:209)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$SystemBundle$EquinoxSystemModule$1.run(EquinoxBundle.java:240)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.lang.IllegalArgumentException
	at org.eclipse.core.internal.preferences.AbstractScope.getNode(AbstractScope.java:36)
	at org.eclipse.jdt.internal.corext.util.TypeFilter.getPreferenceStore(TypeFilter.java:107)
	at org.eclipse.jdt.internal.corext.util.TypeFilter.dispose(TypeFilter.java:140)
	at org.eclipse.jdt.internal.core.manipulation.JavaManipulationPlugin.stop(JavaManipulationPlugin.java:81)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:893)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:1)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.stop(BundleContextImpl.java:885)
	... 13 more
Root exception:
java.lang.IllegalArgumentException
	at org.eclipse.core.internal.preferences.AbstractScope.getNode(AbstractScope.java:36)
	at org.eclipse.jdt.internal.corext.util.TypeFilter.getPreferenceStore(TypeFilter.java:107)
	at org.eclipse.jdt.internal.corext.util.TypeFilter.dispose(TypeFilter.java:140)
	at org.eclipse.jdt.internal.core.manipulation.JavaManipulationPlugin.stop(JavaManipulationPlugin.java:81)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:893)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:1)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.stop(BundleContextImpl.java:885)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.stopWorker0(EquinoxBundle.java:1071)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.stopWorker(EquinoxBundle.java:392)
	at org.eclipse.osgi.container.Module.doStop(Module.java:695)
	at org.eclipse.osgi.container.Module.stop(Module.java:554)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.decStartLevel(ModuleContainer.java:2111)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1981)
	at org.eclipse.osgi.container.SystemModule.stopWorker(SystemModule.java:278)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$SystemBundle$EquinoxSystemModule.stopWorker(EquinoxBundle.java:222)
	at org.eclipse.osgi.container.Module.doStop(Module.java:695)
	at org.eclipse.osgi.container.Module.stop(Module.java:554)
	at org.eclipse.osgi.container.SystemModule.stop(SystemModule.java:209)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$SystemBundle$EquinoxSystemModule$1.run(EquinoxBundle.java:240)
	at java.base/java.lang.Thread.run(Thread.java:1583)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xvT1Y/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1093,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xvW20,eclipse.jdt.ui,1908239796,1093,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-01-24T14:27:23Z,2024-01-24T14:27:23Z,"The problem is caused by the fact, that the `JavaManipulation.setPreferenceNodeId(null);` that clears the preference key `org.eclipse.jdt.core.manipulation.JavaManipulation.fgPreferenceNodeId` is called from `org.eclipse.jdt.internal.ui.JavaPlugin.stop(BundleContext)` **on shutdown of UI bundle**, which happens **before** shutdown of `org.eclipse.jdt.core.manipulation` bundle. The code in ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xvW20/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1093,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xveZR,eclipse.jdt.ui,1908270673,1093,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-01-24T14:42:50Z,2024-01-24T14:42:50Z,"I assume change in 27c0b5e57387d0df160a523e6315bdde431f2857 was not correct and should not clear the value of the preference on shutdown of org.eclipse.jdt.ui bundle. It would only make sense if someone would shutdown & restart UI bundle in same Eclipse instance, which is most likely not a valid use case (or I'm unaware why that should be valid for org.eclipse.jdt.ui).

I will push a PR fixing that.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xveZR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1093,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xwFgf,eclipse.jdt.ui,1908430879,1093,NA,rgrunber,1417342,Roland Grunberg,,NA,2024-01-24T16:01:54Z,2024-01-24T16:01:54Z,"It came from : https://git.eclipse.org/r/c/jdt/eclipse.jdt.ui/+/118209/4#message-e3959a57f82ab1373b13a2b77bd39756383954c5.
> JavaPlugin.stop(BundleContext) should set the pref node id to 'null'.

My guess would be that if JDT UI is shut down, then it should relinquish control of the node and allow other clients to take over. When the node is set, its value cannot be changed unless set to `null` first, and that clients would check whether the node is set before setting it.

Realistically, I can't think of a case where JDT UI would shutdown and other clients would want to set the value themselves. **Update:** Even so, clients could always do it in a non-cooperative way like at https://github.com/eclipse-jdtls/eclipse.jdt.ls/blob/d6ebdd8fff34039b51d9fec7d26a61fcea7a6c1a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/JavaLanguageServerPlugin.java#L188-L202 .

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xwFgf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1094,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1094,eclipse.jdt.ui,2087937173,1094,OwningAnnotationsConfigurationDialog_title missing,jukzi,51790620,Jörg Kubitz,,CLOSED,2024-01-18T10:04:00Z,2024-01-18T16:58:38Z,"logged  for example during MarkOccurrenceTest
`Warning: NLS missing message: OwningAnnotationsConfigurationDialog_title in: org.eclipse.jdt.internal.ui.preferences.PreferencesMessages
`
@stephan-herrmann  regression from 417ba9ad1af488d8b40ab87445cb45130c98550d","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1094/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1094,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xLmfz,eclipse.jdt.ui,1898866675,1094,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-01-18T16:58:36Z,2024-01-18T16:58:36Z,"Thanks, @jukzi ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xLmfz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1095,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1095,eclipse.jdt.ui,2087990010,1095,Random failing MarkOccurrenceTest.markOccurrencesAfterEditorReuse,jukzi,51790620,Jörg Kubitz,,OPEN,2024-01-18T10:32:26Z,2024-11-05T10:14:33Z,"```
java.lang.AssertionError: expected:<1> but was:<0>
	at org.junit.Assert.fail(Assert.java:89)
	at org.junit.Assert.failNotEquals(Assert.java:835)
	at org.junit.Assert.assertEquals(Assert.java:647)
	at org.junit.Assert.assertEquals(Assert.java:633)
	at org.eclipse.jdt.text.tests.MarkOccurrenceTest$2.condition(MarkOccurrenceTest.java:414)
	at org.eclipse.jdt.text.tests.performance.DisplayHelper.waitForCondition(DisplayHelper.java:79)
	at org.eclipse.jdt.text.tests.MarkOccurrenceTest.assertOccurrences(MarkOccurrenceTest.java:421)
	at org.eclipse.jdt.text.tests.MarkOccurrenceTest.markOccurrencesAfterEditorReuse(MarkOccurrenceTest.java:210)
```
https://ci.eclipse.org/jdt/job/eclipse.jdt.ui-github/job/PR-1086/3/testReport/junit/JdtTextTestSuite%20org.eclipse.jdt.text.tests/MarkOccurrenceTest/markOccurrencesAfterEditorReuse/","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1095/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1095,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xJHl9,eclipse.jdt.ui,1898215805,1095,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-18T10:33:43Z,2024-01-18T10:33:43Z,may relate to https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/80,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xJHl9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1095,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50cVGw,eclipse.jdt.ui,1953583536,1095,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-20T06:49:35Z,2024-02-20T06:49:35Z,can not reproduce locally.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50cVGw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1095,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Sb08k,eclipse.jdt.ui,2456768292,1095,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-11-05T10:14:32Z,2024-11-05T10:14:32Z,Seen in a Y-build with exact same symptom: https://ci.eclipse.org/releng/job/YPBuilds/job/ep434Y-unit-cen64-gtk3-java24/8/testReport/org.eclipse.jdt.text.tests/MarkOccurrenceTest/markOccurrencesAfterEditorReuse/,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Sb08k/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1097,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1097,eclipse.jdt.ui,2088186019,1097,NPE in AddMissingMethodDeclarationFixCore,jukzi,51790620,Jörg Kubitz,,CLOSED,2024-01-18T12:15:08Z,2024-01-19T08:05:45Z,"eclipse.buildId=4.31.0.I20240117-1800
java.version=21.0.1
press crtl+1 in org.eclipse.jdt.internal.corext.fix.UpdateProperty:80
![image](https://github.com/eclipse-jdt/eclipse.jdt.core/assets/51790620/e9d01ae3-33b2-484b-bcc7-d86d6edd344d)

```
java.lang.NullPointerException: Cannot invoke ""org.eclipse.jdt.core.dom.TypeDeclaration.getName()"" because ""typeDeclaration"" is null
	at org.eclipse.jdt.internal.corext.fix.AddMissingMethodDeclarationFixCore.createAddMissingMethodDeclaration(AddMissingMethodDeclarationFixCore.java:69)
	at org.eclipse.jdt.internal.ui.text.correction.QuickAssistProcessor.getAddMethodDeclaration(QuickAssistProcessor.java:982)
	at org.eclipse.jdt.internal.ui.text.correction.QuickAssistProcessor.getAssists(QuickAssistProcessor.java:367)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeAssistCollector.safeRun(JavaCorrectionProcessor.java:409)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.run(JavaCorrectionProcessor.java:342)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.process(JavaCorrectionProcessor.java:331)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectAssists(JavaCorrectionProcessor.java:511)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectProposals(JavaCorrectionProcessor.java:292)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.computeQuickAssistProposals(JavaCorrectionProcessor.java:248)
	at org.eclipse.jface.text.quickassist.QuickAssistAssistant$ContentAssistProcessor.computeCompletionProposals(QuickAssistAssistant.java:71)
	at org.eclipse.jface.text.contentassist.ContentAssistant$2.lambda$0(ContentAssistant.java:2064)
	at java.base/java.util.Collections$SingletonSet.forEach(Collections.java:5125)
	at org.eclipse.jface.text.contentassist.ContentAssistant$2.run(ContentAssistant.java:2063)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.jface.text.contentassist.ContentAssistant.computeCompletionProposals(ContentAssistant.java:2060)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.computeProposals(CompletionProposalPopup.java:577)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.lambda$0(CompletionProposalPopup.java:507)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:502)
	at org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1874)
	at org.eclipse.jface.text.quickassist.QuickAssistAssistant.showPossibleQuickAssists(QuickAssistAssistant.java:113)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionAssistant.showPossibleQuickAssists(JavaCorrectionAssistant.java:194)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:201)
	at org.eclipse.ui.texteditor.TextOperationAction.lambda$0(TextOperationAction.java:130)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ui.texteditor.TextOperationAction.run(TextOperationAction.java:130)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:98)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:298)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:232)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:174)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:165)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:204)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:569)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:644)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1286)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmKeyDown(Widget.java:1840)
	at org.eclipse.swt.widgets.Control.WM_KEYDOWN(Control.java:5153)
	at org.eclipse.swt.widgets.Canvas.WM_KEYDOWN(Canvas.java:406)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4776)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5039)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3657)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.ui.internal.views.log.EventDetailsDialog.open(EventDetailsDialog.java:198)
	at org.eclipse.ui.internal.views.log.EventDetailsDialogAction.run(EventDetailsDialogAction.java:102)
	at org.eclipse.ui.internal.views.log.LogView.lambda$2(LogView.java:599)
	at org.eclipse.jface.viewers.StructuredViewer$1.run(StructuredViewer.java:779)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.StructuredViewer.fireDoubleClick(StructuredViewer.java:776)
	at org.eclipse.jface.viewers.AbstractTreeViewer.handleDoubleSelect(AbstractTreeViewer.java:1542)
	at org.eclipse.jface.viewers.StructuredViewer$4.widgetDefaultSelected(StructuredViewer.java:1205)
	at org.eclipse.jface.util.OpenStrategy.fireDefaultSelectionEvent(OpenStrategy.java:271)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:328)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4273)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4071)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1152)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1043)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:152)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:648)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:555)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1097/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1097,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xJxoq,eclipse.jdt.ui,1898388010,1097,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-18T12:27:49Z,2024-01-18T12:27:49Z,@gayanper  regression from f995109a0ba41124f185722a6e6a01d834fbf90c ?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xJxoq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1097,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xMICi,eclipse.jdt.ui,1899004066,1097,NA,gayanper,7471994,Gayan Perera,,NA,2024-01-18T18:30:26Z,2024-01-18T18:30:26Z,"Its hard to see how this scenario could pass in original code before the commit https://github.com/eclipse-jdt/eclipse.jdt.ui/commit/f995109a0ba41124f185722a6e6a01d834fbf90c , But I will provide a quick check for this.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xMICi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1097,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xMPOr,eclipse.jdt.ui,1899033515,1097,NA,gayanper,7471994,Gayan Perera,,NA,2024-01-18T18:52:09Z,2024-01-18T18:52:09Z,"I pushed a quick fix to avoid the NPE, basically when type decoration cannot be resolved the quick fix will not be provided.

 Since I'm not able to put too much time these days, I would recommend we report an issue to improve this particular scenario where a method ref is a enum literal. My fear is we might endup needed to fix something at the parser level to get the resolution fix. So I suggest we handle it separately in a different issues, unless someone find it to be a trivial fix.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xMPOr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1097,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xPsnj,eclipse.jdt.ui,1899940323,1097,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-19T08:05:43Z,2024-01-19T08:05:43Z,As long as i don't get an error i am happy. We can let stay the missing functionality if any,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xPsnj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1096,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1096,eclipse.jdt.ui,2088170346,1096,ClassCastException in QuickAssistProcessor,jukzi,51790620,Jörg Kubitz,,CLOSED,2024-01-18T12:18:16Z,2024-01-19T08:06:19Z,"eclipse.buildId=4.31.0.I20240117-1800
java.version=21.0.1

press CRTL+1 in org.eclipse.jdt.internal.corext.fix.UpdateProperty:73:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/5dff4b98-91a8-4d0d-b276-03c37b349747)

```
java.lang.ClassCastException: class org.eclipse.jdt.core.dom.EnumConstantDeclaration cannot be cast to class org.eclipse.jdt.core.dom.VariableDeclarationFragment (org.eclipse.jdt.core.dom.EnumConstantDeclaration and org.eclipse.jdt.core.dom.VariableDeclarationFragment are in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @1c997757)
	at org.eclipse.jdt.internal.ui.text.correction.QuickAssistProcessor.getConvertFieldNamingConventionProposal(QuickAssistProcessor.java:3707)
	at org.eclipse.jdt.internal.ui.text.correction.QuickAssistProcessor.getAssists(QuickAssistProcessor.java:390)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeAssistCollector.safeRun(JavaCorrectionProcessor.java:409)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.run(JavaCorrectionProcessor.java:342)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.process(JavaCorrectionProcessor.java:331)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectAssists(JavaCorrectionProcessor.java:511)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectProposals(JavaCorrectionProcessor.java:292)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.computeQuickAssistProposals(JavaCorrectionProcessor.java:248)
	at org.eclipse.jface.text.quickassist.QuickAssistAssistant$ContentAssistProcessor.computeCompletionProposals(QuickAssistAssistant.java:71)
	at org.eclipse.jface.text.contentassist.ContentAssistant$2.lambda$0(ContentAssistant.java:2064)
	at java.base/java.util.Collections$SingletonSet.forEach(Collections.java:5125)
	at org.eclipse.jface.text.contentassist.ContentAssistant$2.run(ContentAssistant.java:2063)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.jface.text.contentassist.ContentAssistant.computeCompletionProposals(ContentAssistant.java:2060)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.computeProposals(CompletionProposalPopup.java:577)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.lambda$0(CompletionProposalPopup.java:507)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:502)
	at org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1874)
	at org.eclipse.jface.text.quickassist.QuickAssistAssistant.showPossibleQuickAssists(QuickAssistAssistant.java:113)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionAssistant.showPossibleQuickAssists(JavaCorrectionAssistant.java:194)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:201)
	at org.eclipse.ui.texteditor.TextOperationAction.lambda$0(TextOperationAction.java:130)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ui.texteditor.TextOperationAction.run(TextOperationAction.java:130)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:98)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:298)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:232)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:174)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:165)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:204)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:569)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:644)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1286)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmKeyDown(Widget.java:1840)
	at org.eclipse.swt.widgets.Control.WM_KEYDOWN(Control.java:5153)
	at org.eclipse.swt.widgets.Canvas.WM_KEYDOWN(Canvas.java:406)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4776)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5039)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3657)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.ui.internal.views.log.EventDetailsDialog.open(EventDetailsDialog.java:198)
	at org.eclipse.ui.internal.views.log.EventDetailsDialogAction.run(EventDetailsDialogAction.java:102)
	at org.eclipse.ui.internal.views.log.LogView.lambda$2(LogView.java:599)
	at org.eclipse.jface.viewers.StructuredViewer$1.run(StructuredViewer.java:779)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.StructuredViewer.fireDoubleClick(StructuredViewer.java:776)
	at org.eclipse.jface.viewers.AbstractTreeViewer.handleDoubleSelect(AbstractTreeViewer.java:1542)
	at org.eclipse.jface.viewers.StructuredViewer$4.widgetDefaultSelected(StructuredViewer.java:1205)
	at org.eclipse.jface.util.OpenStrategy.fireDefaultSelectionEvent(OpenStrategy.java:271)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:328)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4273)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4071)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1152)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1043)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:152)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:648)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:555)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1096/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1096,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xJwVF,eclipse.jdt.ui,1898382661,1096,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-18T12:24:09Z,2024-01-18T12:24:09Z,@DongChunHao regression from a62962e109581776291756d6181b079980ebf9eb,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xJwVF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1096,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xM11e,eclipse.jdt.ui,1899191646,1096,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-01-18T20:56:26Z,2024-01-18T20:56:26Z,@jukzi @DongChunHao I've posted a fix.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xM11e/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1096,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xPsyc,eclipse.jdt.ui,1899941020,1096,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-19T08:06:18Z,2024-01-19T08:06:18Z,thanks,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xPsyc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1098,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1098,eclipse.jdt.ui,2088337710,1098,Callhierarchy: errors when clicking a method that is gone,jukzi,51790620,Jörg Kubitz,,CLOSED,2024-01-18T13:52:56Z,2024-01-19T15:21:52Z,"eclipse.buildId=4.31.0.I20240117-1800
java.version=21.0.1

i refactored code and still had a method in the callhierarchy. Clicking on the removed method opened:
1. Error Popup
2. Error Log with two Exceptions (i.e. sending call hierarchy view away)

That's an user unfriendly overkill. With IJavaModelStatusConstants.ELEMENT_DOES_NOT_EXIST It should just say ""Method % no longer exists""
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/4a3a3639-3f60-4c19-ae5c-7e97542d4754)

```
Java Model Exception: Error in Java Model (code 969): indentLine(IDocument, int, JavaIndenter, JavaHeuristicScanner, boolean[], int, int) [in IndentUtil [in [Working copy] IndentUtil.java [in org.eclipse.jdt.internal.ui.javaeditor [in ui [in org.eclipse.jdt.ui]]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:551)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:594)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:305)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:291)
	at org.eclipse.jdt.internal.core.Member.getNameRange(Member.java:363)
	at org.eclipse.jdt.internal.ui.callhierarchy.CallHierarchyUI.openInEditor(CallHierarchyUI.java:155)
	at org.eclipse.jdt.internal.ui.callhierarchy.CallHierarchyViewPart$CallHierarchyOpenEditorHelper.open(CallHierarchyViewPart.java:179)
	at org.eclipse.ui.OpenAndLinkWithEditorHelper$InternalListener.open(OpenAndLinkWithEditorHelper.java:48)
	at org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:799)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:796)
	at org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:1110)
	at org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:295)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:330)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4273)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4071)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1152)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1043)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:152)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:648)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:555)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1098/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1111,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1111,eclipse.jdt.ui,2091054520,1111,Convert to text block save action formatting is strange,rkeen-siemens,46196614,Rangi Keen,,CLOSED,2024-01-19T16:02:08Z,2024-01-22T22:40:35Z,"The save action ""Convert String concatenation to Text Block"" under the Java Feature tab results in strange formatting. As an example, if you start with the following:

```java
var s = ""a "" +
    ""b "" +
    ""c"";
```

you end up with this:
```java
var s3 = """"""
	a\s\
	b\s\
	c"""""";
```

While the end result is correct, there are a couple things that could be improved:
1. The `\s` is unnecessary and should just be a literal space
2. Tabs are inserted even when using spaces for indentation

I would expect the refactoring to look more like this when using spaces for indentation:

```java
var s2 = """"""
    a \
    b \
    c"""""";
```

In all cases, the output should be the single line

```text
a b c
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1111/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1117,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1117,eclipse.jdt.ui,2095619133,1117," Javadoc code font not covered by Eclipse's ""Colors and Fonts"" preferences",hippie68,65259318,,,OPEN,2024-01-23T09:20:11Z,2024-01-23T09:20:11Z,"**Preferences - General - Appearance - Colors and Fonts**

You can select all kinds of different fonts for different areas, but for Javadoc pop-ups there is one font area that is not appearing in the Eclipse font settings list, so I believe this is an oversight by the developers who are responsible for the font selection:

![eclipse_unchangeable_fonts](https://github.com/eclipse-platform/.github/assets/65259318/657b47b9-38c3-4672-b249-5e71ff854390)

In the Eclipse font settings there is no entry and no term for this, so I am calling it ""Javadoc Code Font"" and have highlighted it in red circles in the attached picture.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1117/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1118,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1118,eclipse.jdt.ui,2095738122,1118,"Can not save dirty .java editor, when opened programmatically",LorenzoBettini,1202254,Lorenzo Bettini,,CLOSED,2024-01-23T10:20:19Z,2024-01-29T10:13:09Z,"I know that https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1051 has been fixed and with the latest i-build, org.eclipse.jdt.ui_3.32.0.v20240122-1112.jar, I cannot reproduce that bug anymore in my development environment.

However, we still found something similar in some of our Xtext UI tests (https://github.com/eclipse/xtext/issues/2895), even with the latest i-build in the target platform (the JDT UI is the same as above). In those tests, we programmatically open Java editors, do some changes and its contents and the editor correctly becomes dirty; then, we programmatically save a dirty editor with org.eclipse.ui.IWorkbenchPage.saveEditor(IEditorPart, boolean), passing false. The call succeeds but the editor stays open (and dirty). This happens rarely, but it happens:

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1202254/92b7eadb-7e1c-4729-9808-25ef40e37904)

In the screenshot above, the ""Foo.java"" editor was saved, while the ""Bar.java"" editor was not, although the programmatic call succeeded also for that editor.

Trying to save the dirty editor when that UI test fails, i.e., interacting with the running test workbench, still does not save it. 

So I wondered if the fix of #1051 has effectively reverted all the problematic code or if something related remained.

As a final note, #1051 says ""Even After ""Save"" or ""Save All"" .java Editor keeps showing a '*' in front of the Name"" but the problem was much worse. It was not only the editor was still dirty: the file contents were not saved at all. Even if you closed the dirty editor and accepted the dialog proposal to save the file, the file was not saved at all.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1118/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1118,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xl34X,eclipse.jdt.ui,1905753623,1118,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-01-23T10:33:28Z,2024-01-23T10:33:28Z,@jukzi : could you please check?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xl34X/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1118,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xmDSY,eclipse.jdt.ui,1905800344,1118,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-23T11:00:41Z,2024-01-23T11:00:41Z,"@LorenzoBettini i need more info to reproduce it within platform. A Junit would be nice. You could also please try yourself which commit broke it - or if it is related to `callReadOnly` by replacing org.eclipse.jdt.internal.core.JavaModelManager.callReadOnlyUnchecked(JavaCallable<T, E>) with 

```
	private <T, E extends Exception> T callReadOnlyUnchecked(JavaCallable<T, E> callable) throws E {
		return callable.call();
	}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xmDSY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1118,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xmHOX,eclipse.jdt.ui,1905816471,1118,NA,LorenzoBettini,1202254,Lorenzo Bettini,,NA,2024-01-23T11:10:54Z,2024-01-23T11:10:54Z,"@jukzi as I said, it is not systematically reproducible even in our UI tests, so it's hard to provide a test for that.

I can try what you suggest. If I understand correctly, I should have in my workspace jdt.core and try to change that call right?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xmHOX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1118,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xmLG9,eclipse.jdt.ui,1905832381,1118,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-23T11:20:40Z,2024-01-23T11:20:40Z,"> I can try what you suggest. If I understand correctly, I should have in my workspace jdt.core and try to change that call right?

yes, and then launch your Junit or a debugee so that the change is used","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xmLG9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1118,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xm1EJ,eclipse.jdt.ui,1906004233,1118,NA,LorenzoBettini,1202254,Lorenzo Bettini,,NA,2024-01-23T12:57:32Z,2024-01-23T12:57:32Z,"@jukzi So I did what follows:

imported jdt.core sources in my workspace

changed this method (`org.eclipse.jdt.internal.core.JavaModelManager.callReadOnlyUnchecked(JavaCallable<T, E>)`):

```java
	private <T, E extends Exception> T callReadOnlyUnchecked(JavaCallable<T, E> callable) throws E {
		boolean hadTemporaryCache = hasTemporaryCache();
		try {
			getTemporaryCache();

			return cacheZipFiles(callable);
		} finally {
			if (!hadTemporaryCache) {
				resetTemporaryCache();
			}
		}
	}
```

into this one

```java
	private <T, E extends Exception> T callReadOnlyUnchecked(JavaCallable<T, E> callable) throws E {
		return callable.call();
	}
```

With the debugger I made sure this source code is effectively used.

I then ran our UI tests over and over again. I made 6 suite executions. Each suite execution runs the same tests over and over again about 100 times. I did not see the problem anymore! (previously, after about 50 executed tests the problem showed up).

So I'd be tempted to say that the culprit was exactly that method :)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xm1EJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1118,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xm294,eclipse.jdt.ui,1906012024,1118,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-23T13:00:42Z,2024-01-23T13:00:42Z,please give stacktrace(s) when that method is called and error occured. i.e. add `new RuntimeException().printStackTrace();` reproduce the error and post the result.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xm294/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1118,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xm50S,eclipse.jdt.ui,1906023698,1118,NA,LorenzoBettini,1202254,Lorenzo Bettini,,NA,2024-01-23T13:06:25Z,2024-01-23T13:06:25Z,"Sorry, I'm not sure I understand, could you please be more specific?

I should revert to the original method in jdt.core and then put the `new RuntimeException().printStackTrace();` where?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xm50S/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1118,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xm_A0,eclipse.jdt.ui,1906044980,1118,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-23T13:19:39Z,2024-01-23T13:19:39Z,"> I should revert to the original method in jdt.core

yea put it at the start of  `callReadOnlyUnchecked`","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xm_A0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1118,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xnyfo,eclipse.jdt.ui,1906255848,1118,NA,LorenzoBettini,1202254,Lorenzo Bettini,,NA,2024-01-23T15:11:24Z,2024-01-23T15:11:24Z,"@jukzi I tried and I don't think it's gonna work: everything is so slowed down because of the print of the exception that the tests take ages to execute and makes Eclipse unresponsive.

I only managed to take this screenshot (I couldn't select anything from Eclipse because it was locked), but I'm not sure this represents a situation where the problem would have occurred or simply everything hanged:

![Screenshot_20240123_154657](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1202254/5ea34436-88d3-4405-99db-918ff2c6f961)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xnyfo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1118,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xn20p,eclipse.jdt.ui,1906273577,1118,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-23T15:20:18Z,2024-01-23T15:20:18Z,"@LorenzoBettini that stacktrace looks like https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1119 would repair it, please try that","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xn20p/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1118,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xorEe,eclipse.jdt.ui,1906487582,1118,NA,LorenzoBettini,1202254,Lorenzo Bettini,,NA,2024-01-23T16:47:52Z,2024-01-23T16:47:52Z,"@jukzi I've just tried that (I removed jdt.core from workspace, imported jdt.ui and applied the patch, made sure it is executed) but the problem comes back again :'(

So, only the changed of https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1118#issuecomment-1905800344 solved the problem","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xorEe/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1118,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x1TYz,eclipse.jdt.ui,1909798451,1118,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-25T10:02:30Z,2024-01-25T10:02:30Z,"@LorenzoBettini i will need the offending stacktrace - it should be possible to log the stacktraces - just only enable output short before you try to save the file. (use a trigger-breakpoint point + printStackTrace in another breakpoint)
Or you could try to disable readonly-cache one by one - there are not many possibilites that are actually used in you scenario:

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/20313e1e-66d9-4561-baa4-9bd64caf38ce)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x1TYz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1118,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x1p7R,eclipse.jdt.ui,1909890769,1118,NA,LorenzoBettini,1202254,Lorenzo Bettini,,NA,2024-01-25T10:43:01Z,2024-01-25T10:43:01Z,"@jukzi I don't understand the first part. If I put the `new RuntimeException().printStackTrace` before saving, would that be helpful even when the problem does not occur?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x1p7R/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1118,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x1yI7,eclipse.jdt.ui,1909924411,1118,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-25T11:01:59Z,2024-01-25T11:01:59Z,"i mean if  ""new RuntimeException().printStackTrace();"" slows you down too much, you can put it in a break point condition and have that breakpoint disabled until you need it. 
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/6e0a5926-23fb-4e21-8626-270a58e17036)

Breakpoints can even be automatically disabled until another Triggerpoint is reached:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/46b86926-a458-4b17-bb0f-541b93e403e1)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x1yI7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1118,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x10IW,eclipse.jdt.ui,1909932566,1118,NA,LorenzoBettini,1202254,Lorenzo Bettini,,NA,2024-01-25T11:07:29Z,2024-01-25T11:07:29Z,"But if the programmatic call to save always succeeds, even when the editor is not closed, how can I enable that breakpoint? In any case, the call to save has already returned.

concerning this part, which seems to be more feasible

> Or you could try to disable readonly-cache one by one - there are not many possibilites that are actually used in you scenario:

what should I disable one by one?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x10IW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1118,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x18F-,eclipse.jdt.ui,1909965182,1118,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-25T11:26:06Z,2024-01-25T11:26:06Z,"instead of using ""JavaCore.callReadOnly"" / ""JavaCore.runReadOnly"" in jdt.ui you could call() / run() only the argument and see which use of readOnly fixes your issue.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x18F-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1118,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x2xco,eclipse.jdt.ui,1910183720,1118,NA,LorenzoBettini,1202254,Lorenzo Bettini,,NA,2024-01-25T13:04:17Z,2024-01-25T13:04:17Z,@jukzi maybe it's early to celebrate but with these two commits **together** I cannot seem to reproduce the problem anymore https://github.com/LorenzoBettini/eclipse.jdt.ui/commit/fb4934f08520c18c84324cf157f1e8cacda1bdd3 https://github.com/LorenzoBettini/eclipse.jdt.ui/commit/11c4f69ebf7723f0746dd8656e19ebf1c89778b8 does it make sense to you? ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x2xco/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1118,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x2yDU,eclipse.jdt.ui,1910186196,1118,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-01-25T13:05:52Z,2024-01-25T13:05:52Z,"Hmm, https://github.com/LorenzoBettini/eclipse.jdt.ui/commit/fb4934f08520c18c84324cf157f1e8cacda1bdd3 alome is not enough?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x2yDU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1118,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x2y4O,eclipse.jdt.ui,1910189582,1118,NA,LorenzoBettini,1202254,Lorenzo Bettini,,NA,2024-01-25T13:08:01Z,2024-01-25T13:08:01Z,"> Hmm, [LorenzoBettini@fb4934f](https://github.com/LorenzoBettini/eclipse.jdt.ui/commit/fb4934f08520c18c84324cf157f1e8cacda1bdd3) alome is not enough?

No, I confirm: it is NOT enough (that's the first experiment I made, because it looked like a good candidate); just like the other one alone is NOT enough. They are both needed.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x2y4O/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1118,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x209Y,eclipse.jdt.ui,1910198104,1118,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-25T13:13:39Z,2024-01-25T13:13:39Z,can you please post the stacktrace of the offending computeAdornmentFlags? i really wonder how that can be an issue,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x209Y/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1118,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x5BmL,eclipse.jdt.ui,1910774155,1118,NA,LorenzoBettini,1202254,Lorenzo Bettini,,NA,2024-01-25T18:37:25Z,2024-01-25T18:37:25Z,"OK, let's see if I understand correctly.
I placed my jdt.ui on current master (so, not with my commits), https://github.com/eclipse-jdt/eclipse.jdt.ui/commit/6a8301e7125a7b1a3e93294ea9e8601b006c6477.

I put a `new RuntimeException().printStackTrace();` at the beginning of `org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(Object)`.

I run my tests and this is what I see (NOTE: this is the printed stack trace on a normal run, NOT when the problem occurs, as I said, it's hard to do that in that occasion):

```
java.lang.RuntimeException
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:129)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:267)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:345)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:410)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
```

If I understand correctly, that takes place asynchronously, in fact, there's nothing from our tests.

I pasted only one, since the other ones look the same.

Is that what you asked?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x5BmL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1118,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x9c1f,eclipse.jdt.ui,1911934303,1118,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-26T11:35:40Z,2024-01-26T11:35:40Z,"@LorenzoBettini please try this: https://github.com/eclipse-jdt/eclipse.jdt.core/pull/1914
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x9c1f/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1118,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x-m82,eclipse.jdt.ui,1912237878,1118,NA,LorenzoBettini,1202254,Lorenzo Bettini,,NA,2024-01-26T15:19:44Z,2024-01-26T15:19:44Z,"@jukzi I've just tests your branch (to be clear, I have NOT used my commits on jdt.ui, only imported jdt.core after cloning your branch from your fork); tested it on Linux and macOS and the problem is GONE! :)

Just for curiosity, how is the above stack trace on that method from jdt.ui related? ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x-m82/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1118,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x-pH1,eclipse.jdt.ui,1912246773,1118,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-26T15:25:26Z,2024-01-26T15:25:26Z,"> Just for curiosity, how is the above stack trace on that method from jdt.ui related?

i don't know. i just gave up using that cache, because i could not figure out what exactly gone wrong.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x-pH1/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1118,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5yFkf2,eclipse.jdt.ui,1914062838,1118,NA,LorenzoBettini,1202254,Lorenzo Bettini,,NA,2024-01-29T06:47:27Z,2024-01-29T06:47:27Z,@jukzi will https://github.com/eclipse-jdt/eclipse.jdt.core/pull/1914 be merged?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5yFkf2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1123,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1123,eclipse.jdt.ui,2098434416,1123,Quick fix for duplicate constructors produces invalid source,eric-milles,18193802,Eric Milles,,CLOSED,2024-01-24T14:48:27Z,2024-01-29T23:17:00Z,"Consider the following:
```java
class C {
  C() {}
  C() {}
}
```

JDT correctly indicates that the constructors duplicate each other.  However the proposal to fix -- as of Eclipse 4.27 -- is to rename one to ""C1"" which results in the invalid java source:
```java
class C {
  C() {}
  C1() {}
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1123/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1125,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1125,eclipse.jdt.ui,2098750503,1125,Selecting different template proposal doesn't update proposal preview,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2024-01-24T17:27:05Z,2024-01-25T08:23:18Z,"In any Java file, type `for` and hit Ctrl+Space to get template proposals.
The list with multiple ""for"" templates is shown (and also some classes starting with ""for""), but selecting any of the **template** proposals doesn't update proposal preview on the right side.
1) Note: clicking inside the preview area reveals ""expected"" content.
2) There are no issues with non-template proposals.

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/964108/50df9861-c318-49b0-8194-277a387ff6fa)

This is regression in 4.30. I'm bisecting where exactly.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1125/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1125,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xw4dl,eclipse.jdt.ui,1908639589,1125,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-01-24T17:51:37Z,2024-01-24T17:51:37Z,"I've bisected that regression to the 7c51007d443a2381a528644c0f6105f214bc8dd3 / https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/438.

@RedeemerSK : could you please check?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5xw4dl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1125,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x0skW,eclipse.jdt.ui,1909639446,1125,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-01-25T08:22:56Z,2024-01-25T08:22:56Z,@RedeemerSK : many thanks for fast & clear fix! If only all contributors would be like you...,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x0skW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1131,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1131,eclipse.jdt.ui,2101871240,1131,SemanticHighlightingPresenter: BadLocationException,jukzi,51790620,Jörg Kubitz,,CLOSED,2024-01-26T09:23:11Z,2024-01-29T10:18:11Z,"open all files in org.eclipse.jdt.internal.compiler.ast at once 
->
```
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.addPosition(AbstractDocument.java:341)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.addPosition(SynchronizableDocument.java:212)
	at org.eclipse.jdt.internal.ui.javaeditor.SemanticHighlightingPresenter.updatePresentation(SemanticHighlightingPresenter.java:214)
	at org.eclipse.jdt.internal.ui.javaeditor.SemanticHighlightingPresenter.lambda$0(SemanticHighlightingPresenter.java:149)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4046)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3662)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.ui.internal.views.log.EventDetailsDialog.open(EventDetailsDialog.java:198)
	at org.eclipse.ui.internal.views.log.EventDetailsDialogAction.run(EventDetailsDialogAction.java:102)
	at org.eclipse.ui.internal.views.log.LogView.lambda$2(LogView.java:599)
	at org.eclipse.jface.viewers.StructuredViewer$1.run(StructuredViewer.java:779)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.StructuredViewer.fireDoubleClick(StructuredViewer.java:776)
	at org.eclipse.jface.viewers.AbstractTreeViewer.handleDoubleSelect(AbstractTreeViewer.java:1542)
	at org.eclipse.jface.viewers.StructuredViewer$4.widgetDefaultSelected(StructuredViewer.java:1205)
	at org.eclipse.jface.util.OpenStrategy.fireDefaultSelectionEvent(OpenStrategy.java:271)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:328)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4273)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4071)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1151)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:152)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:648)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:555)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)

```
![image](https://github.com/eclipse-platform/eclipse.platform.ui/assets/51790620/a6e27e26-d3f4-4003-81cb-30726ab865d6)

_Originally posted by @jukzi in https://github.com/eclipse-platform/eclipse.platform.ui/issues/1570#issuecomment-1911664404_

the SemanticHighlightingPresenter is done asynchronous and needs to check if the editor is not meanwhile reused for another file","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1131/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1132,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1132,eclipse.jdt.ui,2101891348,1132,OpenCallHierarchyAction: NullPointerException,jukzi,51790620,Jörg Kubitz,,CLOSED,2024-01-26T09:37:08Z,2024-01-29T10:21:14Z,"happend once after clicking in callhierarchy while many editors open (and some reused), i could not reproduce again.

```
Unhandled event loop exception

java.lang.NullPointerException: Cannot invoke ""org.eclipse.jdt.core.ITypeRoot.getElementAt(int)"" because ""input"" is null
	at org.eclipse.jdt.internal.ui.callhierarchy.OpenCallHierarchyAction.getEnclosingMethod(OpenCallHierarchyAction.java:126)
	at org.eclipse.jdt.internal.ui.callhierarchy.OpenCallHierarchyAction.run(OpenCallHierarchyAction.java:108)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:278)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:252)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:583)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:417)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4273)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4071)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1151)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:152)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:648)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:555)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)
```

eclipse.buildId=4.31.0.I20240124-1800
java.version=21.0.2","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1132/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1136,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1136,eclipse.jdt.ui,2102179818,1136,"Quickfix ""Extract to local Variable"": sometimes creates ""MISSING()""",jukzi,51790620,Jörg Kubitz,,CLOSED,2024-01-26T13:00:56Z,2024-02-07T20:50:20Z,"i have seen such behavior multiple times in the last weeks.
here is a reproducer:
in org.eclipse.jdt.internal.core.JavaElement.hashCode() extract the value:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/a2c2a2a7-370c-43a8-aab8-aea884b81ecc)

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/2d2f8b61-4a9e-4ebd-a1f3-65fe5d7bfce8)

sometimes also paired with BadLocationException ( but i am more concerend about the wrong source code generated):

```
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.link.LinkedPositionGroup.enforceDisjoint(LinkedPositionGroup.java:162)
	at org.eclipse.jface.text.link.LinkedPositionGroup.addPosition(LinkedPositionGroup.java:127)
	at org.eclipse.jdt.internal.ui.viewsupport.LinkedProposalModelPresenter.enterLinkedMode(LinkedProposalModelPresenter.java:100)
	at org.eclipse.jdt.internal.ui.text.correction.proposals.LinkedCorrectionProposal.performChange(LinkedCorrectionProposal.java:186)
	at org.eclipse.jdt.ui.text.java.correction.CUCorrectionProposal.apply(CUCorrectionProposal.java:230)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.insertProposal(CompletionProposalPopup.java:1004)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.insertSelectedProposalWithMask(CompletionProposalPopup.java:951)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.verifyKey(CompletionProposalPopup.java:1395)
	at org.eclipse.jface.text.contentassist.ContentAssistant$InternalListener.verifyKey(ContentAssistant.java:829)
	at org.eclipse.jface.text.TextViewer$VerifyKeyListenersManager.verifyKey(TextViewer.java:480)
	at org.eclipse.swt.custom.StyledTextListener.handleEvent(StyledTextListener.java:68)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4273)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:778)
	at org.eclipse.swt.custom.StyledText.handleKeyDown(StyledText.java:5742)
	at org.eclipse.swt.custom.StyledText.lambda$28(StyledText.java:5426)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4273)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1594)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4866)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4744)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5039)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3657)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1151)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:152)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:648)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:555)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)
```

the source code generated also varies. I tried ""rebuild index"" and do it again while indexing resulted in  (UI freeze and) another order:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/54d44c47-2195-4e0e-9307-24f514b4ae39)

Then i tried it again - sucess:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/7a5afbec-0c31-4514-b193-c762874fc42c)

tried it again - error again (indexing did not help!):
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/941fa36c-aa43-4202-a4d5-689edbb138b0)

that hurts
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1136/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1136,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x91uI,eclipse.jdt.ui,1912036232,1136,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-26T13:02:32Z,2024-01-26T13:02:32Z,"eclipse.buildId=4.31.0.I20240124-1800
java.version=21.0.2","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x91uI/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1136,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x_LOl,eclipse.jdt.ui,1912386469,1136,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-01-26T17:01:34Z,2024-01-26T17:01:34Z,I'll look at it.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5x_LOl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1136,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5yZHmo,eclipse.jdt.ui,1919187368,1136,NA,laeubi,1331477,Christoph Läubrich,,NA,2024-01-31T14:14:25Z,2024-01-31T14:14:25Z,I noticed that as well but as described it sometimes works and sometimes not even for the same code....,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5yZHmo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1136,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5yZInK,eclipse.jdt.ui,1919191498,1136,NA,laeubi,1331477,Christoph Läubrich,,NA,2024-01-31T14:16:07Z,2024-01-31T14:16:07Z,"Here is even a video:

https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/988","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5yZInK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1136,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5yZMW-,eclipse.jdt.ui,1919206846,1136,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-01-31T14:23:58Z,2024-01-31T14:23:58Z,"Another variant where literally nothing is inserted instead (reproducible eclipse.buildId=4.31.0.I20240130-1800):
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/5892528d-05e8-4b40-80f9-3e22e8f38bbf)
=>
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/48b7e4b0-ebdd-4d93-9f41-fbf1f44cfbf5)

with another exception logged:
```
java.lang.IllegalStateException: must specify at least one linked position
	at org.eclipse.jface.text.link.LinkedModeModel.enforceNotEmpty(LinkedModeModel.java:530)
	at org.eclipse.jface.text.link.LinkedModeModel.install(LinkedModeModel.java:484)
	at org.eclipse.jface.text.link.LinkedModeModel.forceInstall(LinkedModeModel.java:441)
	at org.eclipse.jdt.internal.ui.viewsupport.LinkedProposalModelPresenter.enterLinkedMode(LinkedProposalModelPresenter.java:109)
	at org.eclipse.jdt.internal.ui.text.correction.proposals.LinkedCorrectionProposal.performChange(LinkedCorrectionProposal.java:191)
	at org.eclipse.jdt.ui.text.java.correction.CUCorrectionProposal.apply(CUCorrectionProposal.java:228)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.insertProposal(CompletionProposalPopup.java:1004)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.insertSelectedProposalWithMask(CompletionProposalPopup.java:951)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.widgetDefaultSelected(CompletionProposalPopup.java:697)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:123)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4273)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4071)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1151)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:152)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:645)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:552)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5yZMW-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1136,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ycDE4,eclipse.jdt.ui,1919955256,1136,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-01-31T21:04:07Z,2024-01-31T21:04:07Z,My research so far is frustrating.  The problem does not occur when I debug and appears to be a timing issue.  I can recreate in an I-build and via remote debugging I can catch the BadLocation being thrown.   The error is occurring adding the linked positions for the additional names that are offered for the new variable declaration (in LinkedProposalModelPresenter.enterLinkedMode()).,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ycDE4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1136,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5y7hSn,eclipse.jdt.ui,1928205479,1136,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-02-05T22:10:26Z,2024-02-05T22:10:26Z,"I believe this is fixed now.   I tested with I20240203 and was unable to create the problem.  Although the hashCode() method has changed from the original example, I restored it back to the original code for the test.  The error occurred for me when hitting enter quickly before the preview was calculated for the extract to local variable (replace all) or extract to local variable for the given method call.  If the clicking is delayed or the code debugged with breakpoints, the error did not occur.  There appears to be a significant time in calculating the extract to local variable (replace all) and this assist should have its relevance lowered below the single extract (in one instance I got a UI delay registered, but the assist worked successfully).  I am going to mark this closed and if a new example causes the BadLocationException, I suggest a new issue with a new scenario.  Fixed by #1162","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5y7hSn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1136,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5y-Lhg,eclipse.jdt.ui,1928902752,1136,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-06T07:06:47Z,2024-02-06T07:06:47Z,"With I20240204 i can still reproduce 
https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1136#issuecomment-1919206846
Either reopen this or duplicate that comment to new issue?
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5y-Lhg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1136,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zErzu,eclipse.jdt.ui,1930607854,1136,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-02-06T19:23:49Z,2024-02-06T19:23:49Z,@jukzi I can reproduce.  I think this is a separate issue with the code not prepared to handle a conditional statement.  I will investigate.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zErzu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1136,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zGRMB,eclipse.jdt.ui,1931023105,1136,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-02-07T00:34:03Z,2024-02-07T00:34:03Z,"@jukzi This is definitely a separate issue.  The ExtractTempRefactoring code will sometimes not be done because the expression should not be moved before the statement it is in.  For example, when you have a conditional, the method call in the false path moved before the conditional might change the result of the condition test.  The refactoring is figuring this out in final conditions.  The QuickAssistProcessor is only checking the initial conditions and creating a proposal that wraps the refactoring.  There needs to be a check so that the proposal is not offered to the end-user.  I have a patch for this but need to add the same logic for extract constant which also wraps a refactoring.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zGRMB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1136,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zGpzG,eclipse.jdt.ui,1931123910,1136,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-02-07T02:10:45Z,2024-02-07T02:10:45Z,See #1176 ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zGpzG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1136,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zNQXI,eclipse.jdt.ui,1932854728,1136,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-02-07T20:50:20Z,2024-02-07T20:50:20Z,Closing this with #1177 merged.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zNQXI/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1153,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1153,eclipse.jdt.ui,2110187864,1153,Refresh seems to do nothing for a classpath container,laeubi,1331477,Christoph Läubrich,,OPEN,2024-01-31T14:13:06Z,2024-01-31T14:13:06Z,"Today I have had the case that I found a classpath container needs an update so I right clicked on it and choose refresh

![grafik](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1331477/44a68554-71ca-4841-a097-c52747b8721d)

but this seem to have not any effect. If nothing can be done I think at least the menu item should be disabled in such case.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1153/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1165,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1165,eclipse.jdt.ui,2115173617,1165,Open Declaration: Overloaded constructors having same class name in arguments are buggy,kysmith-csg,136501322,Kyle Smith,,OPEN,2024-02-02T15:23:41Z,2024-02-15T12:42:22Z,"I saw this while working with [eclipse/gef-classic.](https://github.com/eclipse/gef-classic/).

The class `org.eclipse.draw2d.geometry.Rectangle` has two constructors of note, written as follows (comment added to the first one for clarity):

```java
public Rectangle(/*org.eclipse.draw2d.geometry.*/Rectangle rect) {
```

and
```java
public Rectangle(org.eclipse.swt.graphics.Rectangle rect) {
```

So far I have seen this lead to 3 buggy scenarios:
1. In code that calls the 2nd constructor (the SWT Rectangle), if you **Open Declaration** it will open the first one (draw2d Rectangle).

https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/136501322/ef096da2-dd4d-45c8-9750-5539ed99af42

2. The **Outline View** in the Rectangle class does not let you navigate to the SWT Rectangle constructor (note that it doesn't highlight it, if it wasn't visible already it wouldn't be scrolled to).

https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/136501322/29a2bf4d-e0ee-4137-9aff-7a6cc464e0e0

3. **Quick Outline** in the Rectangle class does not let you navigate to the SWT rectangle constructor (probably same bug as above)

Basically in all cases where you would want to see the SWT Rectangle constructor, you are always given the other one instead.

---

	Eclipse.org	Java Development Tools UI	3.31.0.v20231115-2128	org.eclipse.jdt.ui
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1165/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1165,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5y1vOe,eclipse.jdt.ui,1926689694,1165,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-05T10:42:28Z,2024-02-05T10:42:28Z,please provide a self containing minimal reproducer,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5y1vOe/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1165,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5y3R3a,eclipse.jdt.ui,1927093722,1165,NA,kysmith-csg,136501322,Kyle Smith,,NA,2024-02-05T14:09:31Z,2024-02-05T14:09:31Z,"[jdt-ui.issue.1165.zip](https://github.com/eclipse-jdt/eclipse.jdt.ui/files/14166664/jdt-ui.issue.1165.zip)

Projects attached. The main project is `jdt-ui.issue.1165.main`, the other ones are just the libraries. 
Steps:
1. Import `jdt-ui.issue.1165.main` into Eclipse
2. Add a classpath entry for `jdt-ui.issue.1165.1.jar` and `jdt-ui.issue.1165.2.jar`.
3. Add the corresponding source attachments.
4. In `Main.java` of your project, `Open Declaration` of the `MyClass` constructors and see that the classfile editor doesn't select the correct one (the outline view does).

So I guess this reproducer helps me to revise the issue. The issue seems to be with the `class file editor`. Having the other projects imported in the workspace cause the functionalities to behave without bugs as expected. It seems to be only when they are class files that the source editor has trouble selecting the correct one.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5y3R3a/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1165,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5y3S6m,eclipse.jdt.ui,1927098022,1165,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-05T14:11:47Z,2024-02-05T14:11:47Z,can you provide a junit test?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5y3S6m/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1165,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5y3UBc,eclipse.jdt.ui,1927102556,1165,NA,kysmith-csg,136501322,Kyle Smith,,NA,2024-02-05T14:14:09Z,2024-02-05T14:14:09Z,"@jukzi  I don't know how to do UI testing, and I don't really have much time at the moment due to my work. I can try to do it at some point but I have no idea when that would be. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5y3UBc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1168,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1168,eclipse.jdt.ui,2117795377,1168,Merge master branch into BETA_JAVA22,noopur2507,8749449,Noopur Gupta,,CLOSED,2024-02-05T06:42:37Z,2024-02-05T06:46:15Z,Merge master branch into BETA_JAVA22 periodically.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1168/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1168,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5y0Wsx,eclipse.jdt.ui,1926327089,1168,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-02-05T06:46:15Z,2024-02-05T06:46:15Z,Done via https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1164.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5y0Wsx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1169,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1169,eclipse.jdt.ui,2118297994,1169,Jenkins ECJ plugin detects way too less warnings,jukzi,51790620,Jörg Kubitz,,CLOSED,2024-02-05T11:29:41Z,2024-02-06T10:45:40Z,"My workspace shows 962 warnings for JDT.UI repo, but jenkins only shows two
https://ci.eclipse.org/jdt/job/eclipse.jdt.ui-Github/job/master/2/eclipse/
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/533faf8d-cdbe-469b-82fd-90cd2c21c389)
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/6f00821e-b30b-4264-99e3-fd66233bdf09)

 @laeubi any idea?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1169/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1169,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5y2ETN,eclipse.jdt.ui,1926776013,1169,NA,laeubi,1331477,Christoph Läubrich,,NA,2024-02-05T11:33:17Z,2024-02-05T11:33:17Z,"One thing I ave noticed in the past is that if one has some project specific preference and then there is a new preference key (not mentioned in the existing one) then it always uses the workspace default (what can differ).

So to analyze this one needs a reference to one project and one file there where a warning as shown that is configured in that project preference and is not shown at Jenkins.

To prove this one then could for example change it from warning > error in this project to see that it is actually picked up (e.g. fails the build).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5y2ETN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1169,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5y286G,eclipse.jdt.ui,1927007878,1169,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-05T13:26:34Z,2024-02-05T13:26:34Z,"with https://github.com/eclipse-platform/eclipse.platform.releng.aggregator/pull/1774
https://ci.eclipse.org/jdt/job/eclipse.jdt.ui-Github/job/master/5/ failed due to quality gate :
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/c1e0e69b-d70e-4870-9b8a-f98fe8db5116)

and 688 warnings are much more but still not exactly all i see in workspace:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/afc0ca61-dd17-47ad-9d3d-258c5c8244a0)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5y286G/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1173,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1173,eclipse.jdt.ui,2118968809,1173,Make SelectionConverter resolve all highlighted IJavaElements,amartya4256,46150646,Amartya Parijat,,OPEN,2024-02-05T16:33:40Z,2024-02-15T12:37:06Z,"## Current Situation
SelectionConverter can be used to highlight a piece of code and resolve it to get a context of all the IJavaElement in it. However, the method SelectionConverter.codeResolve returns an empty array if the highlighted section consists of more than one IJavaElement. This operation directly affects Self Encapsulate Fields and Create Getter and Setter operations, since the dialog opened for these operations should already have marked the highlighted fields .


## Expected Behavior
SelectionConverter.codeResolve should return an array consisting of all the IJavaElement which are highlighted by the user.

## Proposed Solution
TBD","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1173/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1174,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1174,eclipse.jdt.ui,2120629580,1174,How to set 'enable preview' for Java 22,MyhreAndersen,34220249,Øystein Myhre Andersen,,CLOSED,2024-02-06T12:10:54Z,2024-02-07T08:44:37Z,"Goto: Properties -> Java Compiler -> JDK Compliance
It is impossible to set level 22

I am using Eclipse 2024-3 ( Version: 2024-03 M2 (4.31.0 M2) ).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1174/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1174,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zDPZr,eclipse.jdt.ui,1930229355,1174,NA,robstryker,630383,Rob Stryker,,NA,2024-02-06T16:24:12Z,2024-02-06T16:24:12Z,Work on java-22 has not yet been merged into any milestone or nightly build at this time. ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zDPZr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1174,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zEp54,eclipse.jdt.ui,1930600056,1174,NA,MyhreAndersen,34220249,Øystein Myhre Andersen,,NA,2024-02-06T19:18:11Z,2024-02-06T19:18:11Z,Do you have an idea when java 22 will be in eclipse ?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zEp54/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1174,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zIOon,eclipse.jdt.ui,1931536935,1174,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-02-07T08:40:32Z,2024-02-07T08:40:32Z,"> Do you have an idea when java 22 will be in eclipse ?

Support for Java 22 will be available as a Marketplace entry and will be merged into nightly builds after Java 22 GA on 19th March. Currently, the work is in progress under BETA_JAVA22 branches. You can use the update site https://download.eclipse.org/eclipse/updates/4.31-Y-builds/ to try it out. Please check existing issues for the Java 22 items that are still under development before raising new ones for the same.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zIOon/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1174,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zIQQA,eclipse.jdt.ui,1931543552,1174,NA,mpalat,4507939,Manoj  N Palat,manoj.palat@in.ibm.com,NA,2024-02-07T08:44:36Z,2024-02-07T08:44:36Z,At this point there are no Java 22 features that are available in the branch and is still under development - only some infrastructure changes are available in that branch - you can track the progress of compiler part of the work here - https://github.com/eclipse-jdt/eclipse.jdt.core/issues/1397. I would strongly recommend to wait for the Marketplace entry rather than trying out the Y builds unless you want to experiment with a dev branch.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zIQQA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1176,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1176,eclipse.jdt.ui,2121966465,1176,Extract to local variable quick assist should not be offered when there is no change,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-02-07T01:13:27Z,2024-02-09T00:15:23Z,"In the following example:

    private class UtilClass {
        public static int combineHashCodes(int a, int b) {
            return a + b;
        }
    }
    @Override
    public int hashCode() {
        int k = this.parent == null ? super.hashCode() :
        UtilClass.combineHashCodes(getElementName().hashCode(), this.parent.hashCode());
        return k;
    }

Trying to extract the UtilClass.combineHashCodes() call in the conditional should not offer to put this into a local variable because the ExtractTempRefactoring code will not know whether moving the call in front of the conditional test will cause a logic change or possibly and exception to occur.  Currently, the assist is offered any way and clicking on it damages the code by removing the method call from the conditional.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1176/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1176,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zV79H,eclipse.jdt.ui,1935130439,1176,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-02-09T00:15:23Z,2024-02-09T00:15:23Z,Fixed by #1177,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zV79H/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1179,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1179,eclipse.jdt.ui,2123062254,1179,[test] junit show negative times for ClassFileReaderTest_1_8 tests,jukzi,51790620,Jörg Kubitz,,OPEN,2024-02-07T12:26:04Z,2024-02-07T13:39:20Z,"Negative times for org.eclipse.jdt.core.tests.compiler.regression.ClassFileReaderTest_1_8 - and only for that class.

For example I20240206-1800\eclipse-testing\results\ep431I-unit-win32-java17_win32.win32.x86_64_17\org.eclipse.jdt.core.tests.compiler.regression.TestAll.xml:

```
test001_classTypeParameter - 11 time=""-1.707278660457E9""
test001_classTypeParameter - 17 time=""-1.707278861728E9""
test001a_classTypeParameterDifferingRetentions - 11 time=""-1.707278660457E9""
test001a_classTypeParameterDifferingRetentions - 17 time=""-1.707278861728E9""
test002_methodTypeParameter - 11 time=""-1.707278660473E9""
test002_methodTypeParameter - 17 time=""-1.707278861743E9""
test003_classExtends - 11 time=""-1.707278660473E9""
test003_classExtends - 17 time=""-1.707278861743E9""
test004_classExtends - 11 time=""-1.707278660488E9""
test004_classExtends - 17 time=""-1.707278861759E9""
test005_classTypeParameterBound - 11 time=""-1.707278660504E9""
test005_classTypeParameterBound - 17 time=""-1.707278861775E9""
test006_methodTypeParameterBound - 11 time=""-1.707278660504E9""
test006_methodTypeParameterBound - 17 time=""-1.707278861775E9""
test007_field - 11 time=""-1.70727866052E9""
test007_field - 17 time=""-1.70727886179E9""
test008_methodReturn - 11 time=""-1.70727866052E9""
test008_methodReturn - 17 time=""-1.70727886179E9""
test009_methodReceiver - 11 time=""-1.707278660535E9""
test009_methodReceiver - 17 time=""-1.707278861806E9""
test010_methodFormalParameter - 11 time=""-1.707278660535E9""
test010_methodFormalParameter - 17 time=""-1.707278861822E9""
test011_throws - 11 time=""-1.707278660551E9""
test011_throws - 17 time=""-1.707278861822E9""
test012_annotationMethodReturn - 11 time=""-1.707278660551E9""
test012_annotationMethodReturn - 17 time=""-1.707278861837E9""
testBug548596 - 11 time=""-1.707278660567E9""
testBug548596 - 17 time=""-1.707278861837E9""
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1179/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1179,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zKRSs,eclipse.jdt.ui,1932072108,1179,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-07T12:37:06Z,2024-02-07T12:37:06Z,"happens only on I-Builds.
on master they are with normal times and dedicated class name 
 ""org.eclipse.jdt.core.tests.compiler.regression.ClassFileReaderTest_1_8"" instead of 
 ""org.eclipse.jdt.core.tests.compiler.regression.TestAll:
https://ci.eclipse.org/jdt/job/eclipse.jdt.core-Github/job/master/54/testReport/org.eclipse.jdt.core.tests.compiler.regression/ClassFileReaderTest_1_8/
![image](https://github.com/eclipse-jdt/eclipse.jdt.core/assets/51790620/92ddad29-0c48-4be6-9c0b-35081542570f)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zKRSs/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1179,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zKRbL,eclipse.jdt.ui,1932072651,1179,NA,srikanth-sankaran,131454720,Srikanth Sankaran,,NA,2024-02-07T13:39:18Z,2024-02-07T13:39:18Z,junit belongs in jdt.ui,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zKRbL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1180,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1180,eclipse.jdt.ui,2124674139,1180,"""Extract to constant"" quick assist should not be offered for non-constants",jukzi,51790620,Jörg Kubitz,,CLOSED,2024-02-08T09:10:26Z,2024-02-09T20:12:08Z,"![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/62e938d3-905a-4ac8-bf72-379551e56f01)
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/0a19fde7-a8bd-4819-be4d-175cf83ffd36)

@jjohnstn like https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1176
if an expression can not be extracted to a local value it can even less likely be a constant.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1180/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1181,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1181,eclipse.jdt.ui,2125222025,1181,"ContextMenue: ""References"" missing",jukzi,51790620,Jörg Kubitz,,CLOSED,2024-02-08T13:43:36Z,2024-02-08T13:54:29Z,"I badly miss Reference Search in the context menu
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/0fe8b9e2-0868-417b-8b10-6f51fc252c52)
seems like it moved into a submenu
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/11638b99-d7d8-409a-8ac2-d019f372402a)

but i am still confused and miss it at the ancient spot, because i was very much used to it

Also the key accelerator for""Occurrences in File/Identifier"" is at the wrong spot (and it seems dump to have a submenu for a single entry)
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/24d3c369-7722-45a3-a450-b66ac5a6d481)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1181/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1181,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zSO2R,eclipse.jdt.ui,1934159249,1181,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-02-08T13:47:32Z,2024-02-08T13:47:32Z,"Sorry, I'm not sure I understood if the state in screenshot is what you are expecting or what you are not expecting to see?
I see same menus in  I20240207-1800. So what's wrong?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zSO2R/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1181,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zSPtq,eclipse.jdt.ui,1934162794,1181,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-08T13:49:38Z,2024-02-08T13:49:38Z,"The first screenshot is from an old version.
The other screenshots are from my current worspace.
Seems to be changable with preference ""Use reduced search menu"" (but i can not remember i changed it manually)
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/6e68d2b5-3a58-49db-9dbe-7882c81bec8e)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zSPtq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1181,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zSQ6j,eclipse.jdt.ui,1934167715,1181,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-02-08T13:52:25Z,2024-02-08T13:52:25Z,Oomph did it for you may be? What happens if you reset to defaults?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zSQ6j/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1181,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zSR4F,eclipse.jdt.ui,1934171653,1181,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-08T13:54:28Z,2024-02-08T13:54:28Z,"defaults seem to be still ""reduced""","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zSR4F/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1185,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1185,eclipse.jdt.ui,2126686688,1185,UI lag: ChangedValueChecker.hasConflict(),jukzi,51790620,Jörg Kubitz,,CLOSED,2024-02-09T08:31:48Z,2024-02-12T10:24:25Z,"up to ~38sec UI lag when pressing STRG+1 at JDT.core's only line that contains a warning in platform workspace: AbstractCommentParser.java:1426

What's going on there?
 
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/94967169-b8fb-4179-a09f-39dea4f2b261)
Sampling Results:
UI Thread:
```
org.eclipse.jface.text.quickassist.QuickAssistAssistant$ContentAssistProcessor.computeCompletionProposals ()
...
org.eclipse.jdt.internal.corext.refactoring.util.ChangedValueChecker.hasConflict ()
java.util.concurrent.ThreadPoolExecutor.awaitTermination ()
```
...
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/5906ffb3-b122-471b-a16c-3a5b4e83e2ed)
Threadpool:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/5ef4fd3f-005c-4598-9901-176c184935f8)
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/c339aa02-3855-4dd3-8fef-4c9b5863f7e2)
no hotspots:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/7db38d9f-7812-4c5f-ba22-16a1d374f4cb)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1185/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1185,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zYIiW,eclipse.jdt.ui,1935706262,1185,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-09T10:52:59Z,2024-02-09T10:52:59Z,that code is from https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/439,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zYIiW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1185,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zYWEx,eclipse.jdt.ui,1935761713,1185,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-09T11:31:13Z,2024-02-09T11:31:13Z,"stacktrace:
```
Thread [main] (Suspended (breakpoint at line 124 in org.eclipse.jdt.internal.corext.refactoring.util.ChangedValueChecker))	
	org.eclipse.jdt.internal.corext.refactoring.util.ChangedValueChecker.hasConflict() line: 124	
	org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring.evalStartAndEnd(org.eclipse.jdt.internal.corext.dom.fragments.IASTFragment[], int, java.lang.Integer) line: 1222	
	org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring.createAndInsertTempDeclaration() line: 1171	
	org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring.createTempDeclaration() line: 1372	
	org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring.processSelectedExpression() line: 880	
	org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring.doCreateChange(org.eclipse.core.runtime.IProgressMonitor) line: 825	
	org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring.checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) line: 736	
	org.eclipse.jdt.internal.ui.text.correction.QuickAssistProcessor.getExtractVariableProposal(org.eclipse.jdt.ui.text.java.IInvocationContext, boolean, java.util.Collection<org.eclipse.jdt.ui.text.java.correction.ICommandAccess>) line: 580	
	org.eclipse.jdt.internal.ui.text.correction.QuickAssistProcessor.getAssists(org.eclipse.jdt.ui.text.java.IInvocationContext, org.eclipse.jdt.ui.text.java.IProblemLocation[]) line: 387	
	org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeAssistCollector.safeRun(org.eclipse.jdt.internal.ui.text.correction.ContributedProcessorDescriptor) line: 404	
	org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeAssistCollector(org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess).run() line: 341	
	org.eclipse.core.runtime.SafeRunner.run(org.eclipse.core.runtime.ISafeRunnable) line: 47	
	org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeAssistCollector(org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess).process(org.eclipse.jdt.internal.ui.text.correction.ContributedProcessorDescriptor[]) line: 330	
	org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectAssists(org.eclipse.jdt.ui.text.java.IInvocationContext, org.eclipse.jdt.ui.text.java.IProblemLocation[], java.util.Collection<org.eclipse.jdt.ui.text.java.IJavaCompletionProposal>) line: 506	
	org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectProposals(org.eclipse.jdt.ui.text.java.IInvocationContext, org.eclipse.jface.text.source.IAnnotationModel, org.eclipse.jface.text.source.Annotation[], boolean, boolean, java.util.Collection<org.eclipse.jdt.ui.text.java.IJavaCompletionProposal>) line: 291	
	org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.computeQuickAssistProposals(org.eclipse.jface.text.quickassist.IQuickAssistInvocationContext) line: 247	
	org.eclipse.jface.text.quickassist.QuickAssistAssistant$ContentAssistProcessor.computeCompletionProposals(org.eclipse.jface.text.ITextViewer, int) line: 71	
	org.eclipse.jface.text.contentassist.ContentAssistant$2.lambda$0(org.eclipse.jface.text.ITextViewer, int, java.util.List, org.eclipse.jface.text.contentassist.IContentAssistProcessor) line: 2064	
	org.eclipse.jface.text.contentassist.ContentAssistant$2$$Lambda.0x00000173d1a09560.accept(java.lang.Object) line: not available	
	java.util.Collections$SingletonSet<E>.forEach(java.util.function.Consumer<? super E>) line: 5125	
	org.eclipse.jface.text.contentassist.ContentAssistant$2.run() line: 2063	
	org.eclipse.core.runtime.SafeRunner.run(org.eclipse.core.runtime.ISafeRunnable) line: 47	
	org.eclipse.jface.text.quickassist.QuickAssistAssistant$QuickAssistAssistantImpl(org.eclipse.jface.text.contentassist.ContentAssistant).computeCompletionProposals(org.eclipse.jface.text.ITextViewer, int) line: 2060	
	org.eclipse.jface.text.contentassist.CompletionProposalPopup.computeProposals(int) line: 577	
	org.eclipse.jface.text.contentassist.CompletionProposalPopup.lambda$0(boolean) line: 507	
	org.eclipse.jface.text.contentassist.CompletionProposalPopup$$Lambda.0x00000173d1a08ec8.run() line: not available	
	org.eclipse.swt.custom.BusyIndicator.showWhile(org.eclipse.swt.widgets.Display, java.lang.Runnable) line: 67	
	org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(boolean) line: 502	
	org.eclipse.jface.text.quickassist.QuickAssistAssistant$QuickAssistAssistantImpl(org.eclipse.jface.text.contentassist.ContentAssistant).showPossibleCompletions() line: 1874	
	org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionAssistant(org.eclipse.jface.text.quickassist.QuickAssistAssistant).showPossibleQuickAssists() line: 113	
	org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionAssistant.showPossibleQuickAssists() line: 194	
	org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(int) line: 201	
	org.eclipse.ui.texteditor.TextOperationAction.lambda$0() line: 130	
	org.eclipse.ui.texteditor.TextOperationAction$$Lambda.0x00000173d19dcb98.run() line: not available	
	org.eclipse.swt.custom.BusyIndicator.showWhile(org.eclipse.swt.widgets.Display, java.lang.Runnable) line: 67	
	org.eclipse.ui.texteditor.TextOperationAction.run() line: 130	
	org.eclipse.ui.texteditor.TextOperationAction(org.eclipse.jface.action.Action).runWithEvent(org.eclipse.swt.widgets.Event) line: 474	
	org.eclipse.jface.commands.ActionHandler.execute(org.eclipse.core.commands.ExecutionEvent) line: 124	
	org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(org.eclipse.e4.core.contexts.IEclipseContext, java.util.Map, org.eclipse.swt.widgets.Event, org.eclipse.core.expressions.IEvaluationContext) line: 98	
	java.lang.invoke.LambdaForm$DMH.0x00000173d1a10400.invokeVirtual(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object) line: not available	
	java.lang.invoke.LambdaForm$MH.0x00000173d1a11c00.invoke(java.lang.Object, java.lang.Object, java.lang.Object) line: not available	
	java.lang.invoke.Invokers$Holder.invokeExact_MT(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object) line: not available	
	jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl(java.lang.Object, java.lang.Object[]) line: 157	
	jdk.internal.reflect.DirectMethodHandleAccessor.invoke(java.lang.Object, java.lang.Object[]) line: 103	
	java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object...) line: 580	
	org.eclipse.e4.core.internal.di.MethodRequestor.execute() line: 58	
	org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(java.lang.Object, java.lang.Class<?>, java.lang.Class<? extends java.lang.annotation.Annotation>, java.lang.Object, org.eclipse.e4.core.di.suppliers.PrimaryObjectSupplier, org.eclipse.e4.core.di.suppliers.PrimaryObjectSupplier, boolean, boolean, boolean) line: 298	
	org.eclipse.e4.core.internal.di.InjectorImpl.invoke(java.lang.Object, java.lang.Class<? extends java.lang.annotation.Annotation>, java.lang.Object, org.eclipse.e4.core.di.suppliers.PrimaryObjectSupplier, org.eclipse.e4.core.di.suppliers.PrimaryObjectSupplier) line: 232	
	org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(java.lang.Object, java.lang.Class<? extends java.lang.annotation.Annotation>, org.eclipse.e4.core.contexts.IEclipseContext, org.eclipse.e4.core.contexts.IEclipseContext, java.lang.Object) line: 174	
	org.eclipse.ui.internal.WorkbenchHandlerServiceHandler(org.eclipse.e4.core.commands.internal.HandlerServiceHandler).execute(org.eclipse.core.commands.ExecutionEvent) line: 165	
	org.eclipse.core.commands.Command.executeWithChecks(org.eclipse.core.commands.ExecutionEvent) line: 488	
	org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(java.lang.Object, java.lang.Object) line: 485	
	org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(org.eclipse.core.commands.ParameterizedCommand, org.eclipse.e4.core.contexts.IEclipseContext) line: 204	
	org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(org.eclipse.core.commands.ParameterizedCommand, org.eclipse.swt.widgets.Event) line: 308	
	org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(java.util.List<org.eclipse.jface.bindings.keys.KeyStroke>, org.eclipse.swt.widgets.Event) line: 569	
	org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(java.util.List<org.eclipse.jface.bindings.keys.KeyStroke>, org.eclipse.swt.widgets.Event) line: 644	
	org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(org.eclipse.swt.widgets.Event) line: 439	
	org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(org.eclipse.swt.widgets.Event) line: 96	
	org.eclipse.swt.widgets.EventTable.sendEvent(org.eclipse.swt.widgets.Event) line: 89	
	org.eclipse.swt.widgets.Display.filterEvent(org.eclipse.swt.widgets.Event) line: 1287	
	org.eclipse.swt.custom.StyledText(org.eclipse.swt.widgets.Widget).sendEvent(org.eclipse.swt.widgets.Event) line: 1065	
	org.eclipse.swt.custom.StyledText(org.eclipse.swt.widgets.Widget).sendEvent(int, org.eclipse.swt.widgets.Event, boolean) line: 1090	
	org.eclipse.swt.custom.StyledText(org.eclipse.swt.widgets.Widget).sendEvent(int, org.eclipse.swt.widgets.Event) line: 1075	
	org.eclipse.swt.custom.StyledText(org.eclipse.swt.widgets.Widget).sendKeyEvent(int, int, long, long, org.eclipse.swt.widgets.Event) line: 1117	
	org.eclipse.swt.custom.StyledText(org.eclipse.swt.widgets.Widget).sendKeyEvent(int, int, long, long) line: 1113	
	org.eclipse.swt.custom.StyledText(org.eclipse.swt.widgets.Widget).wmKeyDown(long, long, long) line: 1840	
	org.eclipse.swt.custom.StyledText(org.eclipse.swt.widgets.Control).WM_KEYDOWN(long, long) line: 5153	
	org.eclipse.swt.custom.StyledText(org.eclipse.swt.widgets.Canvas).WM_KEYDOWN(long, long) line: 406	
	org.eclipse.swt.custom.StyledText(org.eclipse.swt.widgets.Control).windowProc(long, int, long, long) line: 4776	
	org.eclipse.swt.custom.StyledText(org.eclipse.swt.widgets.Canvas).windowProc(long, int, long, long) line: 340	
	org.eclipse.swt.widgets.Display.windowProc(long, long, long, long) line: 5039	
	org.eclipse.swt.internal.win32.OS.DispatchMessage(org.eclipse.swt.internal.win32.MSG) line: not available [native method]	
	org.eclipse.swt.widgets.Display.readAndDispatch() line: 3658	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run() line: 1151	
	org.eclipse.core.databinding.observable.Realm.runWithDefault(org.eclipse.core.databinding.observable.Realm, java.lang.Runnable) line: 339	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(org.eclipse.e4.ui.model.application.MApplicationElement, org.eclipse.e4.core.contexts.IEclipseContext) line: 1042	
	org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(org.eclipse.e4.ui.model.application.MApplicationElement) line: 152	
	org.eclipse.ui.internal.Workbench.lambda$3(org.eclipse.swt.widgets.Display, org.eclipse.ui.application.WorkbenchAdvisor, int[]) line: 639	
	org.eclipse.ui.internal.Workbench$$Lambda.0x00000173d11c7968.run() line: not available	
	org.eclipse.core.databinding.observable.Realm.runWithDefault(org.eclipse.core.databinding.observable.Realm, java.lang.Runnable) line: 339	
	org.eclipse.ui.internal.Workbench.createAndRunWorkbench(org.eclipse.swt.widgets.Display, org.eclipse.ui.application.WorkbenchAdvisor) line: 546	
	org.eclipse.ui.PlatformUI.createAndRunWorkbench(org.eclipse.swt.widgets.Display, org.eclipse.ui.application.WorkbenchAdvisor) line: 173	
	org.eclipse.ui.internal.ide.application.IDEApplication.start(org.eclipse.equinox.app.IApplicationContext) line: 152	
	org.eclipse.equinox.internal.app.EclipseAppHandle.run(java.lang.Object) line: 208	
	org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(java.lang.Object) line: 143	
	org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(java.lang.Object) line: 109	
	org.eclipse.core.runtime.adaptor.EclipseStarter.run(java.lang.Object) line: 439	
	org.eclipse.core.runtime.adaptor.EclipseStarter.run(java.lang.String[], java.lang.Runnable) line: 271	
	java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(java.lang.Object, java.lang.Object, java.lang.Object) line: not available	
	java.lang.invoke.LambdaForm$MH.0x00000173d1005c00.invoke(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object) line: not available	
	java.lang.invoke.LambdaForm$MH.0x00000173d1006000.invokeExact_MT(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object) line: not available	
	jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl(java.lang.Object, java.lang.Object[]) line: 155	
	jdk.internal.reflect.DirectMethodHandleAccessor.invoke(java.lang.Object, java.lang.Object[]) line: 103	
	java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object...) line: 580	
	org.eclipse.equinox.launcher.Main.invokeFramework(java.lang.String[], java.net.URL[]) line: 651	
	org.eclipse.equinox.launcher.Main.basicRun(java.lang.String[]) line: 588	
	org.eclipse.equinox.launcher.Main.run(java.lang.String[]) line: 1459	
	org.eclipse.equinox.launcher.Main.main(java.lang.String[]) line: 1432	

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zYWEx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1185,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zaJvx,eclipse.jdt.ui,1936235505,1185,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-09T16:33:31Z,2024-02-09T16:33:31Z,"@jjohnstn @chixiaye i don't have a clue what this code is all about, but it feels inappropriate that a ""Quickfix"" takes more then 3sec

My observation:
There are nested loops in 

-  ExtractTempRefactoring.processSelectedExpression() ,
-  ExtractTempRefactoring.evalStartAndEnd(IASTFragment[], int, Integer) ,
-  ChangedValueChecker.hasConflict()

totally calling node.accept(UpdateVisitor) 15 times but almost sequential.
only some calls to node.accept(UpdateVisitor) are slow.


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zaJvx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1185,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zaxJ5,eclipse.jdt.ui,1936396921,1185,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-02-09T18:17:01Z,2024-02-09T18:17:01Z,"@jukzi This is partly caused by my latest change to not offer invalid extract to variable proposals.  The logic in question is verifying that there isn't a conflict created by moving the selected expression in front of the current statement (e.g. moving a call that will access a field that we are checking for null in a conditional).  There is a ThreadPool used to determine if a conflict occurs and it uses an awaitTermination call that has an upper limit of 5 seconds which is definitely part of the problem.   Maybe it would be better in some cases to simply run the visits directly if the number of statements is small.  The logic that uses the ThreadPool gets run when creating the actual change and happens when previewing or if the user chooses the proposal.  I had noticed recently there was a noticeable lag in the preview.  If the change cannot be made, the internal code bails with a status error and the edit formed ends up being invalid (e.g. the conditional you noticed that was removing the expression).  In the refactoring case, it catches this and does nothing.  I added code in QuickAssistProcessor to call checkFinalConditions() to create the change and determine it it was valid so the proposal would not be made in the first place.  Making the check code faster would definitely help, but I could do a couple things as well.  1. remove the unconditional checkFinalConditions() call and have an aborted change create a dummy edit which inserts nothing so clicking on it won't destroy the user's code 2. replace the preview with a message like some other refactoring proposals do and say something like (extract to temp if possible).  This should fix the problem and the work won't occur unless the user selects the change.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5zaxJ5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1185,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ziaOV,eclipse.jdt.ui,1938400149,1185,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-12T10:24:24Z,2024-02-12T10:24:24Z,"thanks, @jjohnstn must faster now.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5ziaOV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1197,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1197,eclipse.jdt.ui,2137178523,1197,Clean Up... bad code generated,gnl42,66577321,George Lindholm,,CLOSED,2024-02-14T08:33:57Z,2024-03-09T05:54:51Z,"While cleaning up the code in mylyn I came across a number of code snippets that would not compile after being cleaned up.

[cleanUpErrors.zip](https://github.com/eclipse-jdt/eclipse.jdt.core/files/14277056/cleanUpErrors.zip)

George
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1197/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1197,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50Czyk,eclipse.jdt.ui,1946893476,1197,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-14T11:49:07Z,2024-02-14T11:49:07Z,"Hi George, the issue description is not sufficient. Please file separate issues for every distinct error together with a minimal reproducer (inlined sourcecode), a description how to exactly reproduce (which cleanup to run?), the actual error message. And add a description what you expect. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50Czyk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1197,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50Czyv,eclipse.jdt.ui,1946893487,1197,NA,gnl42,66577321,George Lindholm,,NA,2024-02-15T05:02:40Z,2024-02-15T05:02:40Z,"The zip file (updated here) contains a self contained project with six classes, each representing a different clean up issue.
All that is needed is to do is select 'Source -> Clean Up..."" on a class or the whole project

In all cases, a invalid java file is ""created"". I was expecting a valid java file.
Or in one case, a eclipse exception

[cleanUpErrors.zip](https://github.com/eclipse-jdt/eclipse.jdt.core/files/14291688/cleanUpErrors.zip)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50Czyv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1197,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50Czy2,eclipse.jdt.ui,1946893494,1197,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-15T07:15:27Z,2024-02-15T07:15:27Z,"Please boil it down: 
1. which cleanup does cause an issue?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50Czy2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1197,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50CzzB,eclipse.jdt.ui,1946893505,1197,NA,gnl42,66577321,George Lindholm,,NA,2024-02-15T07:27:14Z,2024-02-15T07:27:14Z,I don't understand what you mean? Each code snippet results in a different clean up problem,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50CzzB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1197,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50CzzN,eclipse.jdt.ui,1946893517,1197,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-15T07:29:04Z,2024-02-15T07:29:04Z,"there are a 120 distinct cleanups: which of them do you mean? if multiple please create on issue per cleanup
![image](https://github.com/eclipse-jdt/eclipse.jdt.core/assets/51790620/37dd8ab8-59de-451d-8407-e2bcf7a1a4fe)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50CzzN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1197,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50Czza,eclipse.jdt.ui,1946893530,1197,NA,gnl42,66577321,George Lindholm,,NA,2024-02-15T07:31:31Z,2024-02-15T07:31:31Z,"I have no idea which combination of clean up options triggers the errors.
All I know is that the clean up options selected for the project cause various types of errors.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50Czza/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1197,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50Czzf,eclipse.jdt.ui,1946893535,1197,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-15T07:35:08Z,2024-02-15T07:35:08Z,"eclipse ide is free to use if you want to have your problems solved you need to work on it. You will need to start with sufficient detailed information.
see https://github.com/eclipse-platform/.github/blob/main/CONTRIBUTING.md ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50Czzf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1197,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50Czzo,eclipse.jdt.ui,1946893544,1197,NA,gnl42,66577321,George Lindholm,,NA,2024-02-15T07:38:15Z,2024-02-15T07:38:15Z,"I spent a lot of time isolating/recreating the code snippets so each problem would be clear.
All you need to diagnose the problems is in the project. Try doing a  clean up  yourself and see what happens","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50Czzo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1197,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50Czzu,eclipse.jdt.ui,1946893550,1197,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-15T07:41:12Z,2024-02-15T07:41:12Z,This project does not support any service. Contributions are welcome though.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50Czzu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1197,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50Czz2,eclipse.jdt.ui,1946893558,1197,NA,gnl42,66577321,George Lindholm,,NA,2024-02-15T07:44:12Z,2024-02-15T07:44:12Z,"I don't have the knowledge on how to even tackle the issues.
All I wanted to do was report that the clean up process has some problems with it. 
I was hoping someone who understood the process would be able to fix the issues.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50Czz2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1197,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50Czz8,eclipse.jdt.ui,1946893564,1197,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-15T07:45:31Z,2024-02-15T07:45:31Z,you could disable all cleanups and enable one by one until you get an error to track the error down.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50Czz8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1197,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50Cz0E,eclipse.jdt.ui,1946893572,1197,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-02-15T18:32:41Z,2024-02-15T18:32:41Z,@jukzi @gnl42 I can examine and open individual issues.  I am able to reproduce the problems and can do the paring down of the cleanup selection easily enough.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50Cz0E/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1197,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50EkXZ,eclipse.jdt.ui,1947354585,1197,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-02-15T21:17:33Z,2024-02-15T21:17:33Z,"Hi @gnl42 In one of your tests: BadInstanceOfExpression, you are using the wrong AND operator.  You should have used && instead of &.  There is still a compiler bug I will open, but switching to the proper AND before using the cleanup will fix your problem.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50EkXZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1197,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50ElQZ,eclipse.jdt.ui,1947358233,1197,NA,gnl42,66577321,George Lindholm,,NA,2024-02-15T21:20:35Z,2024-02-15T21:20:35Z,@jjohnstn Thanks. It's existing code that I was cleaning up,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50ElQZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1197,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50LynJ,eclipse.jdt.ui,1949247945,1197,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-02-16T20:04:52Z,2024-02-16T20:04:52Z,"> @jjohnstn Thanks. It's existing code that I was cleaning up

Ok, I'll open a compiler issue about the parsing, but you or somebody who is a committer should still fix the original code - it is not a valid place for a bit-wise and","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50LynJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1197,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52a0ls,eclipse.jdt.ui,1986742636,1197,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-03-09T05:54:51Z,2024-03-09T05:54:51Z,"With all the PRs merged, I am closing this as completed.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52a0ls/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1189,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1189,eclipse.jdt.ui,2133876827,1189,NPE in SemanticHighlightingReconciler,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2024-02-14T09:13:23Z,2024-02-14T09:46:56Z,"One of our tests fails on 4.31 with the following error:

```
!ENTRY org.eclipse.ui 4 0 2024-02-13 17:28:53.210
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.NullPointerException: Cannot invoke ""org.eclipse.jface.text.source.ISourceViewer.getDocument()"" because ""this.fSourceViewer"" is null
	at org.eclipse.jdt.internal.ui.javaeditor.SemanticHighlightingReconciler.lambda$0(SemanticHighlightingReconciler.java:515)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:5040)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4520)
```

Side effect of the fix for another issue https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1134
The problem is that `fSourceViewer` might be already uninstalled & set to null while the task was waiting to be dispatched.

I will push a fix in a moment.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1189/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1192,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1192,eclipse.jdt.ui,2134199089,1192,Refactor rename of method named 'copy' freezes Eclipse,jukzi,51790620,Jörg Kubitz,,CLOSED,2024-02-14T11:59:24Z,2024-02-14T20:27:47Z,"To reproduce:
- Define a method: `void copy() {}`.
- Rename it through refactoring.

Result:
- Eclipse freezes.

It does not happen when the method has arguments.
It happens in both version 2023-03 and 2023-12.

_Originally posted by @WJSchakel in https://github.com/eclipse-platform/eclipse.platform.ui/issues/1675#issuecomment-1941559886_

some sampling:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/e24a6c57-c59b-45b8-b876-886ab1f18096)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1192/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1192,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5z2dxg,eclipse.jdt.ui,1943657568,1192,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-14T12:17:13Z,2024-02-14T12:17:13Z,"I can reproduce it in some projects, for example in the package org.eclipse.jdt.unittest.junit - but not in a trival project or package org.eclipse.jdt.ui.tests.refactoring.actions.

```
public class A {
	// refactor the name:
	void copy() {}
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5z2dxg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1192,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5z2eU2,eclipse.jdt.ui,1943659830,1192,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-14T12:18:40Z,2024-02-14T12:18:40Z,"stacktrace:

```
Thread [ModalContext] (Suspended (breakpoint at line 686 in org.eclipse.core.runtime.Path))	
	org.eclipse.core.runtime.Path.equals(java.lang.Object) line: 686	
	org.eclipse.jdt.internal.core.JrtPackageFragmentRoot.equals(java.lang.Object) line: 118	
	org.eclipse.jdt.internal.core.JarPackageFragment(org.eclipse.jdt.internal.core.PackageFragment).equals(java.lang.Object) line: 188	
	org.eclipse.jdt.internal.core.ClassFile(org.eclipse.jdt.internal.core.AbstractClassFile).equals(java.lang.Object) line: 132	
	org.eclipse.jdt.internal.core.ResolvedBinaryType(org.eclipse.jdt.internal.core.JavaElement).equals(java.lang.Object) line: 189	
	org.eclipse.jdt.internal.core.ResolvedBinaryType(org.eclipse.jdt.internal.core.SourceRefElement).equals(java.lang.Object) line: 98	
	org.eclipse.jdt.internal.core.ResolvedBinaryType(org.eclipse.jdt.internal.core.BinaryType).equals(java.lang.Object) line: 174	
	java.util.HashMap<K,V>.getNode(java.lang.Object) line: 577	
	java.util.HashMap<K,V>.get(java.lang.Object) line: 556	
	org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2$UnionFind.find(org.eclipse.jdt.core.IType) line: 103	
	org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2.uniteWithSupertypes(org.eclipse.jdt.core.IType, org.eclipse.jdt.core.IType) line: 519	
	org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2.uniteWithSupertypes(org.eclipse.jdt.core.IType, org.eclipse.jdt.core.IType) line: 532	
	org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2.uniteWithSupertypes(org.eclipse.jdt.core.IType, org.eclipse.jdt.core.IType) line: 532	
	org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2.createUnionFind() line: 506	
	org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2.findAllRippleMethods(org.eclipse.core.runtime.IProgressMonitor, org.eclipse.jdt.core.WorkingCopyOwner) line: 223	
	org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2.getAllRippleMethods(org.eclipse.core.runtime.IProgressMonitor, org.eclipse.jdt.core.WorkingCopyOwner) line: 188	
	org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2.getRelatedMethods(org.eclipse.jdt.core.IMethod, org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext, org.eclipse.core.runtime.IProgressMonitor, org.eclipse.jdt.core.WorkingCopyOwner) line: 181	
	org.eclipse.jdt.internal.corext.refactoring.rename.RenameVirtualMethodProcessor(org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor).initializeMethodsToRename(org.eclipse.core.runtime.IProgressMonitor, org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext) line: 252	
	org.eclipse.jdt.internal.corext.refactoring.rename.RenameVirtualMethodProcessor(org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor).doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor, org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) line: 394	
	org.eclipse.jdt.internal.corext.refactoring.rename.RenameVirtualMethodProcessor.doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor, org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) line: 153	
	org.eclipse.jdt.internal.corext.refactoring.rename.RenameVirtualMethodProcessor(org.eclipse.jdt.internal.corext.refactoring.rename.JavaRenameProcessor).checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor, org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) line: 51	
	org.eclipse.ltk.core.refactoring.participants.RenameRefactoring(org.eclipse.ltk.core.refactoring.participants.ProcessorBasedRefactoring).checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) line: 227	
	org.eclipse.ltk.core.refactoring.participants.RenameRefactoring(org.eclipse.ltk.core.refactoring.Refactoring).checkAllConditions(org.eclipse.core.runtime.IProgressMonitor) line: 163	
	org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper$Operation.run(org.eclipse.core.runtime.IProgressMonitor) line: 84	
	org.eclipse.jdt.internal.core.BatchOperation.executeOperation() line: 41	
	org.eclipse.jdt.internal.core.BatchOperation(org.eclipse.jdt.internal.core.JavaModelOperation).run(org.eclipse.core.runtime.IProgressMonitor) line: 742	
	org.eclipse.core.internal.resources.Workspace.run(org.eclipse.core.runtime.ICoreRunnable, org.eclipse.core.runtime.jobs.ISchedulingRule, int, org.eclipse.core.runtime.IProgressMonitor) line: 2448	
	org.eclipse.core.internal.resources.Workspace.run(org.eclipse.core.resources.IWorkspaceRunnable, org.eclipse.core.runtime.jobs.ISchedulingRule, int, org.eclipse.core.runtime.IProgressMonitor) line: 2473	
	org.eclipse.jdt.core.JavaCore.run(org.eclipse.core.resources.IWorkspaceRunnable, org.eclipse.core.runtime.jobs.ISchedulingRule, org.eclipse.core.runtime.IProgressMonitor) line: 6082	
	org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run(org.eclipse.core.runtime.IProgressMonitor) line: 108	
	org.eclipse.jface.operation.ModalContext$ModalContextThread.run() line: 124	

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5z2eU2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1192,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5z2fN6,eclipse.jdt.ui,1943663482,1192,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-14T12:21:08Z,2024-02-14T12:21:08Z,endless while loop in org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2.UnionFind.find(IType):101,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5z2fN6/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1192,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5z2g0V,eclipse.jdt.ui,1943670037,1192,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-14T12:25:08Z,2024-02-14T12:25:08Z,"RippleMethodFinder2.UnionFind.fElementToRepresentative
contains a vicious circle between

```
interface LeapableGenerator {key=Ljava/util/random/RandomGenerator$LeapableGenerator;} [in RandomGenerator$LeapableGenerator.class [in java.util.random [in <module:java.base>]]]
interface JumpableGenerator {key=Ljava/util/random/RandomGenerator$JumpableGenerator;} [in RandomGenerator$JumpableGenerator.class [in java.util.random [in <module:java.base>]]]

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5z2g0V/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1192,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5z2kJw,eclipse.jdt.ui,1943683696,1192,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-14T12:34:06Z,2024-02-14T12:34:06Z,"LeapableGenerator and JumpableGenerator both have a copy() method:
```
java.util.random.RandomGenerator.LeapableGenerator.copy()
java.util.random.RandomGenerator.JumpableGenerator.copy()
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5z2kJw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1194,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1194,eclipse.jdt.ui,2135031050,1194,Bug 401089 - [extract local][1.7] Extract local variable in try-with-resource leaves the statement ,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-02-14T19:18:51Z,2024-02-14T22:35:04Z,"From Bug 401089: https://bugs.eclipse.org/bugs/show_bug.cgi?id=401089

If is use extract local variable (Alt+Shift+L) on the FileReader in this example:

```
try (BufferedReader r = new BufferedReader(new FileReader(""myfile.txt""))) {
}
catch (IOException e1) {
  e1.printStackTrace();
}

it will result in FileReader leaving the try-statement and going before the block:

FileReader fileReader = new FileReader(""myfile.txt"");
try (BufferedReader r = new BufferedReader(fileReader)) {
}
catch (IOException e1) {
  e1.printStackTrace();
}

Expected behavior is:
try (FileReader fileReader = new FileReader(""myfile.txt"");
    BufferedReader r = new BufferedReader(fileReader)) {
}
catch (IOException e1) {
  e1.printStackTrace();
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1194/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1198,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1198,eclipse.jdt.ui,2137469160,1198,Lambda clean up should not occur when the method is only defined as generic,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-02-15T21:20:26Z,2024-03-09T05:53:33Z,"Applying Use lambda where possible cleanup to the following code creates invalid code because getAdapter() is generic.  The cleanup should have left the code as-is.  Part of #1197

```
public class BadLambda {
	public interface IInteractionContext {
	}

	public interface IAdaptable {
		public <T> T getAdapter(Class<T> adapter);
	}

	private IAdaptable asAdaptable(final IInteractionContext result) {
		return new IAdaptable() {
			public Object getAdapter(Class adapter) {
				if (adapter == IInteractionContext.class) {
					return result;
				}
				return null;
			}
		};
	}
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1198/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1200,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1200,eclipse.jdt.ui,2137578069,1200,Single if cleanup should not concatenate instanceofs that use pattern matching,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-02-15T22:51:18Z,2025-01-14T00:25:04Z,"Running Single if cleanup on the following:

```
public class BadInstanceOfMerge {
	protected String getTipWidget(Number number) {

		if (number instanceof Long n) {
			return n.toString();
		}
		if (number instanceof Float n) {
			return n.toString();
		}
		if (number instanceof Double n) {
			return n.toString();
		}

		return """";
	}
}
```

results in:

```
public class BadInstanceOfMerge {
	protected String getTipWidget(Number number) {

		if ((number instanceof Long n) || (number instanceof Float n) || (number instanceof Double n)) {
			return n.toString();
		}

		return """";
	}
}
```

part of #1197","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1200/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1200,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6aGVrS,eclipse.jdt.ui,2585352914,1200,NA,dg444,165050571,,,NA,2025-01-11T17:39:01Z,2025-01-11T17:39:01Z,"This issue is not fixed in Eclipse 4.34.0 2024-12.
Example1:
        if (number instanceof Long n) {
            return n.toString();
        }
        else if (number instanceof Float n) {
            return n.toString();
        }
        else if (number instanceof Double n) {
            return n.toString();
        }
=> fails to compile:
        if ((number instanceof Long n) || (number instanceof Float n) || (number instanceof Double n)) {
            return n.toString();
        }
Example 2:
        if (e instanceof IOException io)
            throw io;
        else if (e.getCause() instanceof IOException io)
            throw io;
=> fails to compile:
      f ((e instanceof IOException io) || (e.getCause() instanceof IOException io))
            throw io;
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6aGVrS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1200,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6aSB2M,eclipse.jdt.ui,2588417420,1200,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2025-01-13T23:08:36Z,2025-01-13T23:08:36Z,There are actually 2 cleanups referenced here.  One cleanup combines the multiple ifs as mentioned in the original description.   That cleanup was fixed.  The other cleanup merges conditions of an if/else if/else.  That issue (Bugzilla 570171) should not have been closed.  I will post a fix shortly for 2025-03 M2,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6aSB2M/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1209,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1209,eclipse.jdt.ui,2139304230,1209,Conversion to Lambda results in exception due to invalid lambda body,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-02-16T19:40:15Z,2024-02-21T04:06:57Z,"The following code:

```
public class ConstructorLambda {

	interface IOverwriteQuery {
		String ALL = ""ALL"";

		String queryOverwrite(String pathString);
	}

	class ImportOperation {
		public ImportOperation(IOverwriteQuery query) {
		}
	}

	public ConstructorLambda() {
		ImportOperation io = new ImportOperation(new IOverwriteQuery() {

			@Override
			public String queryOverwrite(String pathString) {
				return ALL;
			}

		});
	}
}
```

results in an exception when the Convert functional interfaces and Use Lambda cleanup preferences are used.

This is part of #1197","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1209/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1211,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1211,eclipse.jdt.ui,2139347597,1211,Do not remove this for lambda forward field reference,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-02-16T20:00:37Z,2024-03-09T03:49:43Z,"For the following code:

```
import java.beans.PropertyChangeEvent;

public class FinalNeeded {
	public interface PropertyChangeListener extends java.util.EventListener {
		void propertyChange(PropertyChangeEvent evt);

	}

	private final PropertyChangeListener listener = evt -> {
		this.clientCache.get();
	};

	interface Cache<V> {
		V get();
	}

	final Cache<String> clientCache = new Cache<>() {
		@Override
		public String get() {
			listener.propertyChange(null);
			return """";
		}
	};
}
```

running the use this only if necessary cleanup results in:

```
import java.beans.PropertyChangeEvent;

public class FinalNeeded {
	public interface PropertyChangeListener extends java.util.EventListener {
		void propertyChange(PropertyChangeEvent evt);

	}

	private final PropertyChangeListener listener = evt -> {
		clientCache.get();
	};

	interface Cache<V> {
		V get();
	}

	final Cache<String> clientCache = new Cache<>() {
		@Override
		public String get() {
			listener.propertyChange(null);
			return """";
		}
	};
}
```

which causes a compile error due to the clientCache field being referenced before it is defined.  The ""this"" needs to be preserved.

Part of #1197","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1211/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1213,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1213,eclipse.jdt.ui,2139529569,1213,Remove unnecessary array creation for varargs doesn't handle non-NLS markers,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-02-16T21:44:47Z,2024-03-07T05:24:54Z,"The following code:

```
import java.util.Arrays;
import java.util.List;

public class NLS {
	private static final List<String> WHITELISTED_IDS = Arrays
			.asList(new String[] { ""org.eclipse.search.text.FileSearchResultPage"", //$NON-NLS-1$
					""org.eclipse.jdt.ui.JavaSearchResultPage"" //$NON-NLS-1$
			});
}
```

when the ""remove unnecessary array creation for varargs"" cleanup is applied ends up with:

```
import java.util.Arrays;
import java.util.List;

public class NLS {
	private static final List<String> WHITELISTED_IDS = Arrays
			.asList(""org.eclipse.search.text.FileSearchResultPage"", ""org.eclipse.jdt.ui.JavaSearchResultPage"" //$NON-NLS-1$);
}
```

which has removed the second non-NLS tag.

Part of #1197 
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1213/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1215,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1215,eclipse.jdt.ui,2141323996,1215,"Bugzilla 570171 - Code cleanup ""merge conditions of if / else"" does not handle instanceof pattern matching ",srikanth-sankaran,131454720,Srikanth Sankaran,,CLOSED,2024-02-19T01:41:26Z,2024-02-21T22:44:57Z,"Source > Cleanup ... with ""merge conditions of if / else"" does not handle instanceof pattern correctly. 

Example code:

    Exception e = new IOException();
    if (e instanceof IOException io)
        throw io;
    else if (e.getCause() instanceof IOException io)
        throw io;

After cleanup the code does not compile:

    if ((e instanceof IOException io) || (e.getCause() instanceof IOException io))
        throw io;


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1215/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1215,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50t8XA,eclipse.jdt.ui,1958200768,1215,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-02-21T22:44:57Z,2024-02-21T22:44:57Z,Closed as duplicate of #1200 which has patch waiting for 4.32 M1 to open,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50t8XA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1216,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1216,eclipse.jdt.ui,2142234928,1216,JUnit view issues with filtered repeated test results,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2024-02-19T12:15:14Z,2024-02-20T09:50:06Z,"Follow up on https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/946 and https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1022.

There are (still) problems we see with the current state:

1) The stack traces of ""filtered"" elements from templates are lost for the ""Run History"". The root cause is that the UI elements are serialized (and restored later) and if we filter children with stack traces in UI, we also don't serialize them and so on restore there is nothing... Stack for that (where `getFailureTrace()` returns null and there are no children):
```
Thread [main] (Suspended (breakpoint at line 268 in TestElement))	
	TestSuiteElement(TestElement).getFailureTrace() line: 268	
	TestRunSessionSerializer.addFailure(TestElement) line: 176	
	TestRunSessionSerializer.handleTestElement(ITestElement) line: 130	
	TestRunSessionSerializer.handleTestElement(ITestElement) line: 134	
	TestRunSessionSerializer.handleTestRun() line: 101	
	TestRunSessionSerializer.parse(InputSource) line: 73	
	TransformerImpl.transformIdentity(Source, SerializationHandler) line: 694	
	TransformerImpl.transform(Source, SerializationHandler, String) line: 781	
	TransformerImpl.transform(Source, Result) line: 395	
	JUnitModel.exportTestRunSession(TestRunSession, OutputStream) line: 528	
	JUnitModel.exportTestRunSession(TestRunSession, File) line: 499	
	TestRunSession.swapOut() line: 373	
```
2) The ""diff"" (`CompareResultDialog`) dialog shown if the test fails comparing results is not shown for the ""filtered out"" template test results, because the code that asks for the diff checks `org.eclipse.jdt.internal.junit.model.TestElement.isComparisonFailure()` which is not true for the ""parent"" node that shows the fail after filtering out children.

The fixes in  https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/946 and https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1022 were unfortunately not complete.

One possibility to fix them would be replace parent `TestSuiteElement` element with one of the failed child elements instead of filtering children, or fully mimic ""I'm not a suite, I'm a test"" behavior by overriding some testsuite methods.

For the later, I will propose a PR in a moment, which will fix observed issues.

For 4.31 we can either take that or revert changes as proposed in https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1203.

As before, the test case to play with is following:

```
import static org.junit.jupiter.api.Assertions.assertEquals;

import org.junit.Assume;
import org.junit.jupiter.api.MethodOrderer.MethodName;
import org.junit.jupiter.api.RepeatedTest;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestMethodOrder;

@TestMethodOrder(MethodName.class)
public class TestTemplatesJunit5 {

	@Test
	public void testOkNoRepeats() throws Exception {
		Thread.sleep(500);
	}
	
	@RepeatedTest(value = 1)
	public void testOkOneRepeat() throws Exception {
		Thread.sleep(500);
	}

	@RepeatedTest(value = 2)
	public void testOkTwoRepeats() throws Exception {
		Thread.sleep(500);
	}
	
	@Test
	public void testWithErrorNoRepeats() throws Exception {
		doStupidThings(null);
	}
	
	@RepeatedTest(value = 1)
	public void testErrorOneRepeat() throws Exception {
		doStupidThings(null);
	}
	
	@RepeatedTest(value = 2)
	public void testErrorTwoRepeats() throws Exception {
		doStupidThings(null);
	}

	@Test
	public void testFailNoRepeats() throws Exception {
		assertEquals(""expected"", ""observed"");
	}
	
	@RepeatedTest(value = 1)
	public void testFailOneRepeat() throws Exception {
		assertEquals(""expected"", ""observed"");
	}

	@RepeatedTest(value = 2)
	public void testFailTwoRepeats() throws Exception {
		assertEquals(""expected"", ""observed"");
	}


	@RepeatedTest(value = 0)
	public void testWrongRepeat() throws Exception {
		Thread.sleep(500);
	}
	
	@Test
	public void testAssume() throws Exception {
		Assume.assumeFalse(true);
	}
	
	@RepeatedTest(value = 1)
	public void testAssumeOneRepeat() throws Exception {
		Assume.assumeFalse(true);
	}
	
	@RepeatedTest(value = 2)
	public void testAssumeTwoRepeats() throws Exception {
		Assume.assumeFalse(true);
	}
	
	private void doStupidThings(String arg) {
		arg.toString();
	}
	
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1216/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1216,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50dT-v,eclipse.jdt.ui,1953841071,1216,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-02-20T09:49:49Z,2024-02-20T09:49:49Z,Fixed by reverting new code via https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1203,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM50dT-v/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1218,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1218,eclipse.jdt.ui,2145440140,1218,Don't apply instanceof pattern cleanup when bit-wise operators are used,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-02-20T23:05:06Z,2024-03-06T22:51:53Z,"For the following code:

```
public class BadInstanceOfExpression {
	public void func(boolean exp, boolean useStrikethroughForCompleted, Object data) {
		if (data instanceof Long & useStrikethroughForCompleted) {
                        Long task = (Long)data;
			if (task.intValue() == 0) {
				int i = 0;
			}
		}
	}
}
```

applying the use pattern instanceof cleanup results in:

```
public class BadInstanceOfExpression {
	public void func(boolean exp, boolean useStrikethroughForCompleted, Object data) {
		if (data instanceof Long task  & useStrikethroughForCompleted) {
			if (task.intValue() == 0) {
				int i = 0;
			}
		}
	}
}
```

which is an error.  Part of #1197","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1218/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1220,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1220,eclipse.jdt.ui,2147015450,1220,Bug 530208 - [quick fix] Split composite try-with-resources into two nested ones,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-02-21T15:18:12Z,2024-03-09T15:30:15Z,"From Bug 530208:

When working with JDBC, I often have this situation:

------------------------------------------
```
try (Connection c = getConnection();
    Statement s = c.createStatement()) {
    // ...
}
```
------------------------------------------

Now, sometimes, I want to reuse the connection for several statements. Ideally, I'd love to have a quick fix that is active on the semi-colon (or on any whitespace between the two statements) allowing to split the single try-with-resources statement into two nested ones:

------------------------------------------
```
try (Connection c = getConnection()) {
    try (Statement s = c.createStatement()) {
        // ...
    }
}
```
------------------------------------------

This should work with any number of statements in the resources block. E.g. this:

------------------------------------------
```
try (X x1 = getX();
    X x2 = getX(); // Quick fix here
    X x3 = getX();
    X x4 = getX()) {
    // ...
}
```
------------------------------------------

would result in:

------------------------------------------
```
try (X x1 = getX();
    X x2 = getX()) {
    try (X x3 = getX();
        X x4 = getX()) {
        // ...
    }
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1220/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1221,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1221,eclipse.jdt.ui,2154958808,1221,Remove internal class AddImportCorrectionProposal,robstryker,630383,Rob Stryker,,CLOSED,2024-02-26T19:31:56Z,2024-03-08T15:51:03Z,"See https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1120#discussion_r1499579000

AddImportCorrectionProposal appears to have no clients and is causing an IllegalAccessError in some setups. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1221/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1223,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1223,eclipse.jdt.ui,2154987603,1223,Remove AddImportCorrectionProposal.java as it is no longer used and can cause a compiler error if used,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-02-26T19:43:40Z,2024-02-26T19:55:19Z,,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1223/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1223,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM51Ia7n,eclipse.jdt.ui,1965141735,1223,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-02-26T19:55:19Z,2024-02-26T19:55:19Z,Duplicate of #1222 ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM51Ia7n/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1224,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1224,eclipse.jdt.ui,2158803009,1224,MAKE_VARIABLE_DECLARATION_FINAL doesn't work for multi-catch,lbrayner,5733531,Leonardo,,CLOSED,2024-02-28T12:02:12Z,2024-03-04T14:58:18Z,"Consider the following code:

```java
public class FinalExceptions {

  public static void main(String[] args) {
    Object token = new Object();

    try {
      token.wait();
    } catch (InterruptedException e) {
      e.printStackTrace();
    }

    try {
      token.wait();
    } catch (IllegalMonitorStateException | InterruptedException e) {
      e.printStackTrace();
    }
  }
}
```

IProposalRelevance.MAKE_VARIABLE_DECLARATION_FINAL has no effect on the multi-catch form.

https://github.com/eclipse-jdtls/eclipse.jdt.ls/issues/3075","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1224/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1224,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM51dMMB,eclipse.jdt.ui,1970586369,1224,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-02-29T07:47:18Z,2024-02-29T07:47:18Z,The description misses steps to reproduce. Please add information how to reprdouce and what the expectation is.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM51dMMB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1224,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM510zAu,eclipse.jdt.ui,1976774702,1224,NA,lbrayner,5733531,Leonardo,,NA,2024-03-04T14:58:18Z,2024-03-04T14:58:18Z,My mistake: **The parameter e of a multi-catch block cannot be assigned**. Closing this.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM510zAu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1225,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1225,eclipse.jdt.ui,2159703256,1225,Bug 560674 - [14] Propose explicit accessors (returning the corresponding field),jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-02-28T19:36:01Z,2024-03-07T16:56:23Z,"For the following code:

```
package tests;

public record X1(int abcd) {
    abc 
}
```

applying completion on the abc string should offer to create the record accessor int abcd()
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1225/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1229,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1229,eclipse.jdt.ui,2163775798,1229,[BUG] Doing quick fixes crashes the IDE,Monniasza,37037712,,,CLOSED,2024-03-01T16:41:53Z,2024-03-01T17:24:08Z,"I'm unable to import any other class via the quick fix. I'm having Eclipse crash when I import a class via the quick fix.
To reproduce, paste the following code, hover over the JButton and import the suggested class:
```
public class ImportBug {
	public static JButton button;
}
```
This works with any quick fix.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1229/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1229,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM51oa_d,eclipse.jdt.ui,1973530589,1229,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-03-01T16:49:55Z,2024-03-01T16:49:55Z,"Which OS / Eclipse versions? 
Have you tried latest build from 4.31 https://download.eclipse.org/eclipse/downloads/drops4/S-4.31RC2-202402290520/?

I can't reproduce on latest 4.31 / RHEL 7.9.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM51oa_d/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1229,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM51ob-G,eclipse.jdt.ui,1973534598,1229,NA,Monniasza,37037712,,,NA,2024-03-01T16:52:18Z,2024-03-01T16:52:18Z,I use Linux Mint 21.23 Cinnamon and Eclipse 2023-09 via Flatpak.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM51ob-G/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1229,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM51oder,eclipse.jdt.ui,1973540779,1229,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-03-01T16:56:04Z,2024-03-01T16:56:04Z,"- Please attach crash error printed to console & crash dump file if it mentioned on crash report.
- AFAIK Cinnamon uses some kind of patched GTK, also attach here version of gtk3 libraries they ship.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM51oder/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1229,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM51ogMz,eclipse.jdt.ui,1973551923,1229,NA,Monniasza,37037712,,,NA,2024-03-01T17:02:25Z,2024-03-01T17:02:25Z,"I've got a core dump.
Here's the core dump: [hs_err_pid25.log](https://github.com/eclipse-jdt/eclipse.jdt.ui/files/14463813/hs_err_pid25.log)
And the console log: [console log.txt](https://github.com/eclipse-jdt/eclipse.jdt.ui/files/14463830/console.log.txt)
And my system information: https://termbin.com/kx5t","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM51ogMz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1229,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM51oiUo,eclipse.jdt.ui,1973560616,1229,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-03-01T17:06:23Z,2024-03-01T17:06:23Z,"I see some accessibility code running - can you try to export
`export GTK_IM_MODULE=ibus` and start Eclipse from that shell?

```
#
# A fatal error has been detected by the Java Runtime Environment:
#
#  SIGSEGV (0xb) at pc=0x00007fd07853a9d6, pid=25, tid=26
#
# JRE version: OpenJDK Runtime Environment Temurin-17.0.9+9 (17.0.9+9) (build 17.0.9+9)
# Java VM: OpenJDK 64-Bit Server VM Temurin-17.0.9+9 (17.0.9+9, mixed mode, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)
# Problematic frame:
# C  [libgtk-3.so.0+0x3899d6]  gtk_widget_get_allocation+0x26
#
# Core dump will be written. Default location: Core dumps may be processed with ""/lib/systemd/systemd-coredump %P %u %g %s %t 9223372036854775808 %h"" (or dumping to /home/oskar/core.25)
#
# If you would like to submit a bug report, please visit:
#   https://github.com/adoptium/adoptium-support/issues
# The crash happened outside the Java Virtual Machine in native code.
# See problematic frame for where to report the bug.
#

---------------  S U M M A R Y ------------

Command Line: -Dorg.eclipse.ecf.provider.filetransfer.excludeContributors=org.eclipse.ecf.provider.filetransfer.httpclientjava -Dosgi.requiredJavaVersion=17 -Dosgi.instance.area.default=@user.home/eclipse-workspace -Dosgi.dataAreaRequiresExplicitInit=true -Dorg.eclipse.swt.graphics.Resource.reportNonDisposed=true -Declipse.e4.inject.javax.warning=false -Xms256m -Xmx2048m -XX:+UseG1GC -XX:+UseStringDeduplication --add-modules=ALL-SYSTEM -Djava.security.manager=allow -Dosgi.configuration.area=@user.home/.var/app/org.eclipse.Java/eclipse/configuration --patch-module=java.base=/app/eclipse/flatpak-dev-shim.jar -Dsun.boot.library.path=/app/lib /app/eclipse//plugins/org.eclipse.equinox.launcher_1.6.600.v20231106-1826.jar -os linux -ws gtk -arch x86_64 -showsplash /app/eclipse//plugins/org.eclipse.epp.package.common_4.30.0.20231201-1200/splash.bmp -launcher /app/eclipse/eclipse -name Eclipse --launcher.library /app/eclipse//plugins/org.eclipse.equinox.launcher.gtk.linux.x86_64_1.2.800.v20231003-1442/eclipse_11802.so -startup /app/eclipse//plugins/org.eclipse.equinox.launcher_1.6.600.v20231106-1826.jar --launcher.appendVmargs -exitdata 4802e -product org.eclipse.epp.package.java.product -vm /app/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.linux.x86_64_17.0.9.v20231028-0858/jre/bin/java -vmargs -Dorg.eclipse.ecf.provider.filetransfer.excludeContributors=org.eclipse.ecf.provider.filetransfer.httpclientjava -Dosgi.requiredJavaVersion=17 -Dosgi.instance.area.default=@user.home/eclipse-workspace -Dosgi.dataAreaRequiresExplicitInit=true -Dorg.eclipse.swt.graphics.Resource.reportNonDisposed=true -Declipse.e4.inject.javax.warning=false -Dsun.java.command=Eclipse -Xms256m -Xmx2048m -XX:+UseG1GC -XX:+UseStringDeduplication --add-modules=ALL-SYSTEM -Djava.security.manager=allow -Dosgi.configuration.area=@user.home/.var/app/org.eclipse.Java/eclipse/configuration --patch-module=java.base=/app/eclipse/flatpak-dev-shim.jar -Dsun.boot.library.path=/app/lib -jar /app/eclipse//plugins/org.eclipse.equinox.launcher_1.6.600.v20231106-1826.jar

Host: Intel(R) Core(TM) i5-7300HQ CPU @ 2.50GHz, 4 cores, 15G, GNOME 45 (Flatpak runtime)
Time: Fri Mar  1 17:57:57 2024 CET elapsed time: 40.938012 seconds (0d 0h 0m 40s)

---------------  T H R E A D  ---------------

Current thread (0x00007fd0900274c0):  JavaThread ""main"" [_thread_in_native, id=26, stack(0x00007fd097099000,0x00007fd097199000)]

Stack: [0x00007fd097099000,0x00007fd097199000],  sp=0x00007fd097195bc0,  free space=1010k
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
C  [libgtk-3.so.0+0x3899d6]  gtk_widget_get_allocation+0x26
C  [libgtk-3.so.0+0x441fdd]
C  [libswt-pi3-gtk-4963r5.so+0x493a4]  Java_org_eclipse_swt_internal_gtk_OS_call__JJJJJJJ+0x27
j  org.eclipse.swt.accessibility.AccessibleObject.atkComponent_get_extents(JJJJJJ)J+85
v  ~StubRoutines::call_stub
V  [libjvm.so+0x829765]  JavaCalls::call_helper(JavaValue*, methodHandle const&, JavaCallArguments*, JavaThread*)+0x315
V  [libjvm.so+0x8c272b]  jni_invoke_static(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, JavaThread*) [clone .constprop.1]+0x38b
V  [libjvm.so+0x8c4b55]  jni_CallStaticLongMethodV+0x205

Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)
j  org.eclipse.swt.internal.gtk.OS.call(JJJJJJJ)J+0
j  org.eclipse.swt.accessibility.AccessibleObject.atkComponent_get_extents(JJJJJJ)J+85
v  ~StubRoutines::call_stub
J 14569  org.eclipse.swt.internal.gtk3.GTK3.gtk_main_iteration_do(Z)Z (0 bytes) @ 0x00007fd0859a9ce1 [0x00007fd0859a9ca0+0x0000000000000041]
J 17417 c1 org.eclipse.swt.widgets.Display.readAndDispatch()Z (88 bytes) @ 0x00007fd07f423c2c [0x00007fd07f423a60+0x00000000000001cc]
j  org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run()V+564
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM51oiUo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1229,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM51okIq,eclipse.jdt.ui,1973568042,1229,NA,Monniasza,37037712,,,NA,2024-03-01T17:11:00Z,2024-03-01T17:11:00Z,"Eclipse still crashes with your export.
Core dump: [hs_err_pid25.log](https://github.com/eclipse-jdt/eclipse.jdt.ui/files/14463898/hs_err_pid25.log)
Console log: [console log 2.txt](https://github.com/eclipse-jdt/eclipse.jdt.ui/files/14463906/console.log.2.txt)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM51okIq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1229,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM51ooKw,eclipse.jdt.ui,1973584560,1229,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-03-01T17:21:44Z,2024-03-01T17:21:44Z,"OK, my ""usual"" points checked, and I have no knowledge about native GTK code.
This is not related to JDT UI in any way, it's pure SWT / GTK issue.

Please open a bug with all the data here at https://github.com/eclipse-platform/eclipse.platform.swt/issues","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM51ooKw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1229,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM51opDP,eclipse.jdt.ui,1973588175,1229,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-03-01T17:24:07Z,2024-03-01T17:24:07Z,"One last point: you can load your core dump in gdb and print backtrace
```
$ gdb /home/oskar/core.25
bt
```

Attach the output to the new bug report please. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM51opDP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1230,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1230,eclipse.jdt.ui,2168701408,1230,DefaultCodeFormatter: IllegalArgumentException on save,jukzi,51790620,Jörg Kubitz,,OPEN,2024-03-05T09:20:45Z,2024-03-05T09:27:38Z,"eclipse.buildId=4.31.0.I20240220-1800
java.version=21.0.2

while i had a noncompiling java code i ran into error on save:

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/92590cbd-ae06-4ce2-bb36-f7ff4eeefc83)

The last Logentry is:
```
!ENTRY org.eclipse.jdt.ui 4 10006 2024-03-05 10:14:55.558
!MESSAGE The save participant 'org.eclipse.jdt.ui.postsavelistener.cleanup' caused an exception: java.lang.RuntimeException: Error formating /org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/about/AboutPluginsPage.java
!STACK 0
java.lang.RuntimeException: Error formating /org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/about/AboutPluginsPage.java
	at org.eclipse.jdt.internal.ui.fix.CodeFormatCleanUp.createFix(CodeFormatCleanUp.java:74)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.calculateChange(CleanUpRefactoring.java:769)
	at org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener.saved(CleanUpPostSaveListener.java:385)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$4.run(CompilationUnitDocumentProvider.java:1611)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.notifyPostSaveListeners(CompilationUnitDocumentProvider.java:1605)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.commitWorkingCopy(CompilationUnitDocumentProvider.java:1389)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$3.execute(CompilationUnitDocumentProvider.java:1464)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider$DocumentProviderOperation.run(TextFileDocumentProvider.java:133)
	at org.eclipse.ui.actions.WorkspaceModifyDelegatingOperation.execute(WorkspaceModifyDelegatingOperation.java:71)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.lambda$0(WorkspaceModifyOperation.java:112)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2448)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2473)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:131)
	at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:76)
	at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:66)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.executeOperation(TextFileDocumentProvider.java:461)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.saveDocument(TextFileDocumentProvider.java:783)
	at org.eclipse.ui.texteditor.AbstractTextEditor.performSave(AbstractTextEditor.java:5019)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSave(CompilationUnitEditor.java:1267)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(CompilationUnitEditor.java:1321)
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.doSave(AbstractTextEditor.java:7234)
	at org.eclipse.ui.Saveable.doSave(Saveable.java:213)
	at org.eclipse.ui.internal.SaveableHelper.doSaveModel(SaveableHelper.java:317)
	at org.eclipse.ui.internal.SaveableHelper.lambda$1(SaveableHelper.java:195)
	at org.eclipse.ui.internal.SaveableHelper.lambda$3(SaveableHelper.java:261)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:354)
	at org.eclipse.ui.internal.WorkbenchWindow.lambda$7(WorkbenchWindow.java:2335)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2332)
	at org.eclipse.ui.internal.SaveableHelper.runProgressMonitorOperation(SaveableHelper.java:268)
	at org.eclipse.ui.internal.SaveableHelper.saveModels(SaveableHelper.java:206)
	at org.eclipse.ui.internal.SaveableHelper.savePart(SaveableHelper.java:150)
	at org.eclipse.ui.internal.WorkbenchPage.saveSaveable(WorkbenchPage.java:3819)
	at org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:3832)
	at org.eclipse.ui.internal.handlers.SaveHandler.execute(SaveHandler.java:81)
	at org.eclipse.ui.internal.handlers.HandlerProxy.execute(HandlerProxy.java:277)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:98)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:298)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:232)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:174)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:165)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:204)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:569)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:644)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1287)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1594)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4866)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4744)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5039)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1151)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:152)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:639)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:546)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)
Caused by: java.lang.IllegalArgumentException: range exceeded:24004[off:21950length:-1], [off:22569length:5], [off:23048length:2]
	at org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.assertRegionPreconditions(DefaultCodeFormatter.java:479)
	at org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.format(DefaultCodeFormatter.java:176)
	at org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.reformat(CodeFormatterUtil.java:396)
	at org.eclipse.jdt.internal.corext.fix.CodeFormatFix.createCleanUp(CodeFormatFix.java:81)
	at org.eclipse.jdt.internal.ui.fix.CodeFormatCleanUp.createFix(CodeFormatCleanUp.java:65)
	... 87 more
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1230/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1230,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM516pdW,eclipse.jdt.ui,1978308438,1230,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-03-05T09:25:23Z,2024-03-05T09:25:23Z,"it may have started with this errors logged before:
```
!ENTRY org.eclipse.ui 4 0 2024-03-05 10:12:49.177
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalStateException: startLine (621) does not match endLine (620)
	at org.eclipse.jface.text.projection.ProjectionMapping.toImageLine(ProjectionMapping.java:463)
	at org.eclipse.jface.text.TextViewer.modelLine2WidgetLine(TextViewer.java:5208)
	at org.eclipse.jface.text.JFaceTextUtil.modelLineToWidgetLine(JFaceTextUtil.java:250)
	at org.eclipse.jface.text.source.LineNumberRulerColumn.doubleBufferPaint(LineNumberRulerColumn.java:698)
	at org.eclipse.jface.text.source.LineNumberRulerColumn.redraw(LineNumberRulerColumn.java:964)
	at org.eclipse.jface.text.source.LineNumberRulerColumn.lambda$0(LineNumberRulerColumn.java:407)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4047)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3663)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1151)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:152)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:639)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:546)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)

!ENTRY org.eclipse.jdt.ui 4 10001 2024-03-05 10:13:33.017
!MESSAGE Internal Error
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:958)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.jdt.internal.ui.text.LineComparator.getHash(LineComparator.java:89)
	at org.eclipse.jdt.internal.ui.text.LineComparator.rangesEqual(LineComparator.java:65)
	at org.eclipse.compare.rangedifferencer.RangeComparatorLCS.isRangeEqual(RangeComparatorLCS.java:62)
	at org.eclipse.compare.internal.core.LCS.find_middle_snake(LCS.java:263)
	at org.eclipse.compare.internal.core.LCS.lcs_rec(LCS.java:134)
	at org.eclipse.compare.internal.core.LCS.longestCommonSubsequence(LCS.java:93)
	at org.eclipse.compare.rangedifferencer.RangeComparatorLCS.longestCommonSubsequence(RangeComparatorLCS.java:190)
	at org.eclipse.compare.rangedifferencer.RangeComparatorLCS.findDifferences(RangeComparatorLCS.java:32)
	at org.eclipse.compare.rangedifferencer.RangeDifferencer.findDifferences(RangeDifferencer.java:100)
	at org.eclipse.compare.rangedifferencer.RangeDifferencer.findDifferences(RangeDifferencer.java:84)
	at org.eclipse.compare.rangedifferencer.RangeDifferencer.findDifferences(RangeDifferencer.java:69)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility$2.getChangedLineRegions(EditorUtility.java:832)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility$2.run(EditorUtility.java:806)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.calculateChangedLineRegions(EditorUtility.java:779)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.commitWorkingCopy(CompilationUnitDocumentProvider.java:1378)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$3.execute(CompilationUnitDocumentProvider.java:1464)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider$DocumentProviderOperation.run(TextFileDocumentProvider.java:133)
	at org.eclipse.ui.actions.WorkspaceModifyDelegatingOperation.execute(WorkspaceModifyDelegatingOperation.java:71)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.lambda$0(WorkspaceModifyOperation.java:112)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2448)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2473)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:131)
	at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:76)
	at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:66)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.executeOperation(TextFileDocumentProvider.java:461)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.saveDocument(TextFileDocumentProvider.java:783)
	at org.eclipse.ui.texteditor.AbstractTextEditor.performSave(AbstractTextEditor.java:5019)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSave(CompilationUnitEditor.java:1267)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(CompilationUnitEditor.java:1321)
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.doSave(AbstractTextEditor.java:7234)
	at org.eclipse.ui.Saveable.doSave(Saveable.java:213)
	at org.eclipse.ui.internal.SaveableHelper.doSaveModel(SaveableHelper.java:317)
	at org.eclipse.ui.internal.SaveableHelper.lambda$1(SaveableHelper.java:195)
	at org.eclipse.ui.internal.SaveableHelper.lambda$3(SaveableHelper.java:261)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:354)
	at org.eclipse.ui.internal.WorkbenchWindow.lambda$7(WorkbenchWindow.java:2335)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2332)
	at org.eclipse.ui.internal.SaveableHelper.runProgressMonitorOperation(SaveableHelper.java:268)
	at org.eclipse.ui.internal.SaveableHelper.saveModels(SaveableHelper.java:206)
	at org.eclipse.ui.internal.SaveableHelper.savePart(SaveableHelper.java:150)
	at org.eclipse.ui.internal.WorkbenchPage.saveSaveable(WorkbenchPage.java:3819)
	at org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:3832)
	at org.eclipse.ui.internal.handlers.SaveHandler.execute(SaveHandler.java:81)
	at org.eclipse.ui.internal.handlers.HandlerProxy.execute(HandlerProxy.java:277)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:98)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:298)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:232)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:174)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:165)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:204)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:569)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:644)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1287)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1594)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4866)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4744)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5039)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1151)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:152)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:639)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:546)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM516pdW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1230,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM516qf5,eclipse.jdt.ui,1978312697,1230,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-03-05T09:27:36Z,2024-03-05T09:27:36Z,"there is also a non disposed warning:
```
!ENTRY org.eclipse.ui.ide 4 4 2024-03-05 10:22:27.669
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:113)
	at org.eclipse.swt.graphics.GC.<init>(GC.java:167)
	at org.eclipse.swt.graphics.GC.<init>(GC.java:135)
	at org.eclipse.jface.text.source.LineNumberRulerColumn.redraw(LineNumberRulerColumn.java:963)
	at org.eclipse.jface.internal.text.source.DiffPainter.redraw(DiffPainter.java:374)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4047)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3663)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1151)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:152)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:639)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:546)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM516qf5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1231,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1231,eclipse.jdt.ui,2169270445,1231,"Add CTRL+Click ""Open Call Hierarchy"" Action on classes",flori-schwa,17676856,Florian Schwabe,,CLOSED,2024-03-05T13:42:25Z,2024-05-08T16:01:46Z,"In #575 new functionality was implemented, that adds a quick way of opening the call hierarchy on methods and fields via CTRL+Click. However this functionality is missing on classes, where the Call hierarchy shows the call hierarchy of all constructors (or the default constructor).

CTRL+Hover on Constructor: The ""Open Call Hierarchy"" Action is properly displayed
![grafik](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/17676856/0408da22-53ab-4a94-886d-ae92c8233c11)

CTRL+Hover on Class Declaration: The ""Open Call Hierarchy"" Action is missing
![grafik](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/17676856/42901e67-5cb6-4341-9352-adbfc4ec3f91)

Call Hierarchy View when opened via Right Click -> Open Call Hierarchy on Class Declaration: In my opinion, this view should also be openable using CTRL+Click ""Open Call Hierarchy"" on classes.
![grafik](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/17676856/4cfb9b98-abbf-48c9-9502-425b9c35186d)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1231/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1231,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5191Am,eclipse.jdt.ui,1979142182,1231,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-03-05T16:17:28Z,2024-03-05T16:17:28Z,Contributions are welcome.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5191Am/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1231,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57uPAb,eclipse.jdt.ui,2075717659,1231,NA,RedeemerSK,36334098,Jozef Tomek,,NA,2024-04-24T19:46:05Z,2024-04-24T19:46:05Z,#1367,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57uPAb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1231,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM58j97q,eclipse.jdt.ui,2089803498,1231,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-05-02T07:33:33Z,2024-05-02T07:33:33Z,"@RedeemerSK : thanks for the patch!

Could you please create a PR with a N&N entry for this, repository is https://github.com/eclipse-platform/www.eclipse.org-eclipse and an example of such entry is https://github.com/eclipse-platform/www.eclipse.org-eclipse/pull/163/","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM58j97q/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1231,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM59OViK,eclipse.jdt.ui,2100910218,1231,NA,RedeemerSK,36334098,Jozef Tomek,,NA,2024-05-08T16:01:44Z,2024-05-08T16:01:44Z,"> @RedeemerSK : thanks for the patch!
> 
> Could you please create a PR with a N&N entry for this, repository is https://github.com/eclipse-platform/www.eclipse.org-eclipse and an example of such entry is [eclipse-platform/www.eclipse.org-eclipse#163](https://github.com/eclipse-platform/www.eclipse.org-eclipse/pull/163)

Sorry for delay.
https://github.com/eclipse-platform/www.eclipse.org-eclipse/pull/167","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM59OViK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1234,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1234,eclipse.jdt.ui,2171632002,1234,[21] Paste action does not preserve Unnamed classes,rgrunber,1417342,Roland Grunberg,,OPEN,2024-03-06T14:23:17Z,2024-03-06T15:41:09Z,"This is probably a lower priority issue as it mostly works. Also, detecting that Java 21 should apply there seems ambiguous where no project exists.

**Copied Text**
```
String greeting = ""Hello, World!"";

void main() {
    System.out.println(greeting);
}
```

![paste-action-unnamed-class](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1417342/ad9b491e-7843-4d0b-bb38-f9c71b4ad770)

The `Snippet` class was probably a great idea for pasting statements with no parent but now certain kinds of code blocks with no parent class will be valid.

If we want to fix it, the logic at https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/508ab962aacc6408588d3f78ab71bf74a43c4468/org.eclipse.jdt.ui/ui%20refactoring/org/eclipse/jdt/internal/ui/refactoring/reorg/PasteAction.java#L818-L830 probably needs some improvement or maybe there's more information at https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/508ab962aacc6408588d3f78ab71bf74a43c4468/org.eclipse.jdt.ui/ui%20refactoring/org/eclipse/jdt/internal/ui/refactoring/reorg/PasteAction.java#L767 about an unnamed class being valid for the pasted text.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1234/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1234,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52Fiyk,eclipse.jdt.ui,1981164708,1234,NA,rgrunber,1417342,Roland Grunberg,,NA,2024-03-06T15:41:08Z,2024-03-06T15:41:08Z,"Nevermind, this is premature for now. Still needs https://github.com/eclipse-jdt/eclipse.jdt.core/pull/1521.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52Fiyk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1236,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1236,eclipse.jdt.ui,2173232403,1236,ParameterNamesCodeMiningTest fails on I Builds,jukzi,51790620,Jörg Kubitz,,CLOSED,2024-03-07T08:04:56Z,2024-03-08T12:24:00Z,"on most platforms
for example https://download.eclipse.org/eclipse/downloads/drops4/I20240306-1800/testresults/html/org.eclipse.jdt.text.tests_ep432I-unit-cen64-gtk3-java21_linux.gtk.x86_64_21.html
```
java.lang.AssertionError: Occurence annotation not added

at org.junit.Assert.fail(Assert.java:89)
at org.junit.Assert.assertTrue(Assert.java:42)
at org.eclipse.jdt.text.tests.codemining.ParameterNamesCodeMiningTest.testCollapsedFoldingAndToggleHighlight(ParameterNamesCodeMiningTest.java:272)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1236/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1236,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52MHO3,eclipse.jdt.ui,1982886839,1236,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-03-07T08:18:31Z,2024-03-07T08:18:31Z,"This is a regression from https://github.com/eclipse-platform/eclipse.platform.ui/pull/1703.

Please check whether the change or the test need to be fixed.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52MHO3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1236,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52N4cl,eclipse.jdt.ui,1983350565,1236,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-03-07T11:52:59Z,2024-03-07T11:52:59Z,"I can reproduce it, but don't know yet how to fix. The firePostSelectionChanged is send (immediatly instead of after a delay ini this case), but somehow that does not work in this case. May be some concurrency issue that was just did show up yet. i will investigate.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52N4cl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1236,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52OP6D,eclipse.jdt.ui,1983446659,1236,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-03-07T12:52:52Z,2024-03-07T12:52:52Z,to be fixed by https://github.com/eclipse-platform/eclipse.platform.ui/pull/1738,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52OP6D/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1236,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52WeWT,eclipse.jdt.ui,1985602963,1236,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-03-08T12:23:59Z,2024-03-08T12:23:59Z,Fixed in https://download.eclipse.org/eclipse/downloads/drops4/I20240307-1800/testResults.php,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52WeWT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1237,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1237,eclipse.jdt.ui,2173288772,1237,"Cleanup: ""Convert String to TextBlock"" super slow",jukzi,51790620,Jörg Kubitz,,CLOSED,2024-03-07T08:35:26Z,2024-03-11T09:39:07Z,"cleaning up jdt.ui itself hangs at CleanUpTest.java:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/34d6c468-c388-48ad-b96a-d0ad863c6842)![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/b151b5dd-79cf-47a3-bbd2-7eaeb6c930f6)

jstack:

```
ModalContext"" #30732 [2868] prio=6 os_prio=0 cpu=192796.88ms elapsed=196.60s tid=0x000001bf828d37a0 nid=2868 runnable  [0x00000089a20fd000]
   java.lang.Thread.State: RUNNABLE
        at org.eclipse.jdt.internal.compiler.parser.Scanner.scanForStringLiteral(Scanner.java:1964)
        at org.eclipse.jdt.internal.compiler.parser.Scanner.getNextToken0(Scanner.java:1505)
        at org.eclipse.jdt.internal.compiler.parser.Scanner.getNextToken(Scanner.java:1233)
        at org.eclipse.jdt.internal.core.util.PublicScanner.getNextToken(PublicScanner.java:117)
        at org.eclipse.jdt.internal.corext.refactoring.nls.NLSScanner.scan(NLSScanner.java:202)
        at org.eclipse.jdt.internal.corext.refactoring.nls.NLSScanner.scan(NLSScanner.java:56)
        at org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil.scanCurrentLine(NLSUtil.java:158)
        at org.eclipse.jdt.internal.corext.fix.StringConcatToTextBlockFixCore$StringConcatFinder.visit(StringConcatToTextBlockFixCore.java:170)
        at org.eclipse.jdt.core.dom.InfixExpression.accept0(InfixExpression.java:353)
        at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3300)
        at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:3348)
        at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:238)
        at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3300)
        at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3371)
        at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:254)
        at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3300)
        at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3371)
        at org.eclipse.jdt.core.dom.Block.accept0(Block.java:128)
        at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3300)
        at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:3348)
        at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:677)
        at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3300)
        at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3371)
        at org.eclipse.jdt.core.dom.TypeDeclaration.accept0(TypeDeclaration.java:498)
        at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3300)
        at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3371)
        at org.eclipse.jdt.core.dom.CompilationUnit.accept0(CompilationUnit.java:258)
        at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3300)
        at org.eclipse.jdt.internal.corext.fix.StringConcatToTextBlockFixCore.createCleanUp(StringConcatToTextBlockFixCore.java:792)
        at org.eclipse.jdt.internal.ui.fix.StringConcatToTextBlockCleanUpCore.createFix(StringConcatToTextBlockCleanUpCore.java:55)
        at org.eclipse.jdt.internal.ui.fix.AbstractCleanUpCoreWrapper.createFix(AbstractCleanUpCoreWrapper.java:52)
        at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.calculateChange(CleanUpRefactoring.java:773)
        at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor.calculateSolutions(CleanUpRefactoring.java:302)
        at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor.acceptAST(CleanUpRefactoring.java:280)
        at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1009)
        at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:692)
        at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:954)
        at org.eclipse.jdt.internal.corext.dom.ASTBatchParser.createASTs(ASTBatchParser.java:83)
        at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpFixpointIterator.next(CleanUpRefactoring.java:400)
        at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.cleanUpProject(CleanUpRefactoring.java:683)
        at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.checkFinalConditions(CleanUpRefactoring.java:643)
        at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:86)
        at org.eclipse.ltk.core.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:116)
        at org.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:207)
        at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2448)
        at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2473)
        at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:89)
        at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:124)
```

the CleanUp can also not be stopped at that state, i have to kill the JVM","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1237/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1237,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52MZsc,eclipse.jdt.ui,1982962460,1237,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-03-07T08:40:55Z,2024-03-07T08:40:55Z,"same happens when i try to clean up jdt.core  it hangs at GenericTypeTest.java
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/979506ca-4279-4167-a225-fe0c8dc89bdd)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52MZsc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1237,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52McY2,eclipse.jdt.ui,1982973494,1237,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-03-07T08:44:35Z,2024-03-07T08:44:35Z,"Could be a recent regression?
@jukzi : can you try to go back on JDT UI changes to 4.31 and test?
Same for JDT core.

@jjohnstn : could you please check?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52McY2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1237,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52Mqof,eclipse.jdt.ui,1983031839,1237,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-03-07T09:03:44Z,2024-03-07T09:03:44Z,"turns out it is only super slow: ~8 min for the single class
org.eclipse.jdt.ui.tests.quickfix.CleanUpTest
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/ea727a3d-7f60-4840-bbd6-fabe3dd935f8)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52Mqof/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1237,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52Qznv,eclipse.jdt.ui,1984117231,1237,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-03-07T17:51:38Z,2024-03-07T17:51:38Z,@iloveeclipse Looking into it,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52Qznv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1237,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52RRru,eclipse.jdt.ui,1984240366,1237,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-03-07T19:07:52Z,2024-03-07T19:07:52Z,"This one, https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1240 and https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1238 probably are one issue, I guess some offsets are not properly computed, so it loops too much and produces some bad artifacts.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52RRru/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1237,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52RfqR,eclipse.jdt.ui,1984297617,1237,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-03-07T19:40:59Z,2024-03-07T19:40:59Z,"I've got a fix to remove the NLS checking when none of the comments have NLS markers in them.  Currently, it looks for evidence of trailing comments and then does the NLS parsing.  That should make it run faster.  In CleanUpTest, all the strings have empty line comments.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52RfqR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1237,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52Sgo5,eclipse.jdt.ui,1984563769,1237,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-03-07T21:51:57Z,2024-03-07T21:51:57Z,"I also found that the NLSUtil.scanCurrentLine() actually scans the entire compilation unit and then finds the NLSLine with the given position.  This means that a full scan is performed for each StringLiteral in the concatenation.  As the CleanUpTest.java file is very large, this really lags.  I have posted a fix which also stops using NLSUtil.scanCurrentLine() and only scans the text of the line.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52Sgo5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1237,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52fkjS,eclipse.jdt.ui,1987987666,1237,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-03-11T09:39:06Z,2024-03-11T09:39:06Z,"I confirm the performance i much better now, thanks  @jjohnstn !","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52fkjS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1238,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1238,eclipse.jdt.ui,2173307001,1238,"Cleanup: ""Convert String to TextBlock"" breaks code",jukzi,51790620,Jörg Kubitz,,CLOSED,2024-03-07T08:45:30Z,2024-03-19T01:17:18Z,"for example on org.eclipse.jdt.core.tests.rewrite.describing.ImportRewriteTest.testAddImports6() it produces
`buf cannot be resolved`
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/f5b216d3-ab84-4d02-bd1a-d55e02ad142d)
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/de179bf4-3352-41c2-bd3d-f562f0b1dcd4)
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/7548a66d-0384-43ef-82a1-8f0f8e150d9e)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1238/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1238,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52MeJy,eclipse.jdt.ui,1982980722,1238,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-03-07T08:47:06Z,2024-03-07T08:47:06Z,"on org.eclipse.jdt.core.tests.compiler.regression.TextBlockTest.testBug565639_6()
`Syntax error on token """""""", delete this token`
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/6466c628-b197-4fea-ab56-ba42e0183f3c)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52MeJy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1238,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52e3BN,eclipse.jdt.ui,1987801165,1238,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-03-11T07:46:19Z,2024-03-11T07:46:19Z,"Reopening because cleanup still not working on ImportRewriteTest with org.eclipse.jdt.ui 3.32.100.v20240309-1530
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/b18733c9-f77c-4b24-8d9c-7935a9625920)

Note that there are still multiple issues left when applying this cleanup to jdt.ui tests:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/9fdfc628-5130-440f-b95c-7ca0902fa526)
for example:
org.eclipse.jdt.ui.tests.core.ImportOrganizeTest.testStaticImports1(): str86 cannot be resolved to a variable 
org.eclipse.jdt.text.tests.contentassist.CodeCompletionTest.testOverrideCompletion4(): Duplicate local variable str
org.eclipse.jdt.ui.tests.quickfix.AssistQuickFixTest1d8.testSurroundWithTryWithResource_05(): bufOrg cannot be resolved
...
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52e3BN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1238,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52uax4,eclipse.jdt.ui,1991879800,1238,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-03-12T15:09:58Z,2024-03-12T15:09:58Z,There is still a problem with name collision (where the function uses str).,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52uax4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1238,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52wJBy,eclipse.jdt.ui,1992331378,1238,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-03-12T18:51:36Z,2024-03-12T18:51:36Z,"Ok, all tests mentioned above in last comment convert correctly and I verified they ran successfully.  If you find something in another test, please open a new issue.  Thanks for submitting as there were multiple issues found.  I saw you had a partial text block conversion PR for the tests.  I might recommend re-running as some of the later fixes have made the conversion better (e.g. name choices of variables - not continuously incrementing over multiple methods and also use of single escape character for trailing white-space).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52wJBy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1238,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53Jvnt,eclipse.jdt.ui,1999043053,1238,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-03-15T06:51:13Z,2024-03-15T06:51:13Z,"I am sorry to say cleanup still fails with `Duplicate local variable buf` on cleaning up
```
org.eclipse.jdt.ui.tests.quickfix.LocalCorrectionsQuickFixTest.testCreateNewObjectProposal_6(),
org.eclipse.jdt.ui.tests.quickfix.NullAnnotationsQuickFixTest1d8.runBug531511Test(boolean, String, boolean, boolean),
org.eclipse.jdt.ui.tests.quickfix.UnresolvedTypesQuickFixTest.createSomeAmbiguity(boolean, boolean)
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53Jvnt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1238,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53Jw0-,eclipse.jdt.ui,1999047998,1238,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-03-15T06:56:35Z,2024-03-15T06:56:35Z,"And minor warning ""The value of the local variable buf is not used""  (code was not good before) in 
org.eclipse.jdt.ui.tests.quickfix.UnresolvedVariablesQuickFixTest.testVarWithGenericType()
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/5b2f426a-48dc-4e37-9d60-2fee0b83a129)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53Jw0-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1238,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53PLcy,eclipse.jdt.ui,2000467762,1238,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-03-15T21:31:20Z,2024-03-15T21:31:20Z,This is caused by the duplicate call to the constructor after the declaration.  The code supports finding a new constructor and all of its subsequent statements so it finds this on the 2nd constructor and the declaration gets untouched.  Will fix.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53PLcy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1238,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53T4Wu,eclipse.jdt.ui,2001700270,1238,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-03-16T05:09:15Z,2024-03-16T05:09:15Z,"Ok, another set of issues found.  Duplicate constructors are now ignored if none of them adds an initial string and their statements are grouped into only one conversion (i.e. they never start a new conversion opportunity).  Look-ahead for converting subsequent constructor Assignments to VariableDeclarationStatements has been made smarter to recognize when the initial declaration is not removed due to something not correct with converting the first concatenation.  I converted all 3 of the files in the last comment posted successfully.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53T4Wu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1238,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53ZXrl,eclipse.jdt.ui,2003139301,1238,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-03-18T07:59:10Z,2024-03-18T07:59:10Z,"Somehow there are still ""buf cannot be resolved"" after cleanup jdt.ui tests
Namely cleaning org.eclipse.jdt.junit.tests.JUnitTestFinderTest.testTestCase() 
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/0880ca9f-ce07-4387-9480-e40d5267f6b7)
and org.eclipse.jdt.ui.tests.core.AddImportTest.testAddImportStaticForSubclassReference()
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/a811e597-6ea7-4a65-ad71-e7f26b21c69e)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53ZXrl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1238,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53hV-A,eclipse.jdt.ui,2005229440,1238,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-03-18T23:02:31Z,2024-03-18T23:02:31Z,This is a regression caused by my support of redundant constructors.  The next constructor is not being saved to be changed into a VariableDeclarationStatement.  Will fix shortly.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53hV-A/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1240,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1240,eclipse.jdt.ui,2173523481,1240,"Cleanup: ""Convert String to TextBlock"" changes whitespaces!!",jukzi,51790620,Jörg Kubitz,,CLOSED,2024-03-07T10:28:14Z,2024-03-22T20:13:09Z,"See many failing tests after cleaning up some files:
https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1239

for example
```
JdtTextTestSuite org.eclipse.jdt.text.tests.JavaAutoIndentStrategyTest.testSmartIndentAfterNewLine6
expected:<...esult {
    Good{
 [    ]
    }, Bad
}> but was:<...esult {
    Good{
 [    ]
    }, Bad
}>
```
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/d5612778-791a-4596-8ae2-d643d1dc8931)


```
JdtTextTestSuite org.eclipse.jdt.text.tests.JavaHeuristicScannerTest.testIndentation24
expected:< [ ]> but was:< []>
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1240/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1240,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52NW48,eclipse.jdt.ui,1983213116,1240,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-03-07T10:30:53Z,2024-03-07T10:30:53Z,"maybe a problem with `\t` tabs ?
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/fd03dc68-08f7-499b-a226-e8c1871dead7)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52NW48/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1240,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52fjoG,eclipse.jdt.ui,1987983878,1240,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-03-11T09:37:00Z,2024-03-11T09:37:00Z,"reopening because i updated the dogfooding PR with a new run of the textblock cleanup and it still fails with multiple tests for probably various reasons:
https://ci.eclipse.org/jdt/job/eclipse.jdt.ui-github/job/PR-1239/2/testReport/

for example CodeFormatterUtilTest.testJavadoc2
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/60321c8f-11f0-4fa9-a1df-b6c0812984d7)
```
Content not as expected: is
    /** bar
     * foo
     */
Differs at pos 0: ^    /*
expected:
/** bar
 * foo
 */ expected:<[/** bar
 * foo
] */> but was:<[    /** bar
     * foo
    ] */>
```
or JavaAutoIndentStrategyTest.testPasteAndIndentOfLongStringWithContinuations1

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/bb72fe4a-db25-424d-9058-576be3ff097e)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52fjoG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1240,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52k_Fq,eclipse.jdt.ui,1989407082,1240,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-03-11T20:42:02Z,2024-03-11T20:42:02Z,Thanks @jukzi This is a separate case from the others.  The input strings don't end with a newline but there is a special indent needed for the closing text block quotes.  The logic for no newline was adding the end block quotes at the end of the last line.  This has to be handled by adding a line-continuation for the last line and then placing the closing text block quotes on a separate line so that all the previous lines are indented properly.  Will post PR shortly.  I converted both files above and verified they ran successfully.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52k_Fq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1240,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52wzgs,eclipse.jdt.ui,1992505388,1240,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-03-12T20:17:12Z,2024-03-12T20:17:12Z,Closing as completed.  Both tests have been converted and run successfully with latest patches.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52wzgs/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1240,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53KEQv,eclipse.jdt.ui,1999127599,1240,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-03-15T08:05:59Z,2024-03-15T08:05:59Z,"I am sorry to say there are still failing tests after cleanup. See
https://ci.eclipse.org/jdt/job/eclipse.jdt.ui-github/job/PR-1239/3/testReport/
For example:
https://ci.eclipse.org/jdt/job/eclipse.jdt.ui-github/job/PR-1239/3/testReport/junit/JdtTextTestSuite%20org.eclipse.jdt.text.tests/ArrayWithTempVarForLoopJavaContextTest/proposalsWithFieldAndParam/
```
expected:<[	for (int i = 0; i < strings.length; i++) {
		String string = strings[i];
		
	]}> but was:<[for (int i = 0; i < strings.length; i++) {
	String string = strings[i];
	
]}>
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53KEQv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1240,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53Mypj,eclipse.jdt.ui,1999841891,1240,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-03-15T14:55:14Z,2024-03-15T14:55:14Z,Sigh..I'll look into it.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53Mypj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1240,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53NGgd,eclipse.jdt.ui,1999923229,1240,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-03-15T15:35:18Z,2024-03-15T15:35:18Z,Hi @jukzi I did a manual cleanup on the file and ran proposalsWithFieldAndParam and it works fine for me.  I also copied and pasted from your patch into the test file and again it worked for me locally.   Can you confirm by running the test locally to verify if you are seeing the same?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53NGgd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1240,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53NJZE,eclipse.jdt.ui,1999935044,1240,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-03-15T15:41:17Z,2024-03-15T15:41:17Z,"confirmed. thats strange!
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/0746eb08-53af-43bc-aa1a-1605ccfd79a4)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53NJZE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1240,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53NLk6,eclipse.jdt.ui,1999943994,1240,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-03-15T15:45:33Z,2024-03-15T15:45:33Z,Maybe a bug in ECJ version used in the build?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53NLk6/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1240,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53NPG1,eclipse.jdt.ui,1999958453,1240,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-03-15T15:53:32Z,2024-03-15T15:53:32Z,"no. You have to run the cleanup on the whole bundle, then i ccan reproduce the error locally. May be a wrong string in any helper method","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53NPG1/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1240,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53NQtk,eclipse.jdt.ui,1999965028,1240,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-03-15T15:57:07Z,2024-03-15T15:57:07Z,"The error happens in ~~formating~~ cleaning org.eclipse.jdt.text.tests.AbstractForLoopJavaContextTest.CU_POSTFIX
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/3fb7b900-7b42-44fb-9f42-c5ff6422ed11)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53NQtk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1240,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53N-_p,eclipse.jdt.ui,2000154601,1240,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-03-15T17:48:26Z,2024-03-15T17:48:26Z,"Ok, thx.  There is a \s missing.  Will investigate.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53N-_p/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1240,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53OxuU,eclipse.jdt.ui,2000362388,1240,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-03-15T19:55:49Z,2024-03-15T19:55:49Z,"Alright, all errors verified.  There was a new unicode support error in JavadocTest.TestUnicode() where it was using \u005cn to represent a newline.   I think you don't want to convert that test because the only way to convert that string to a text block is to strip those unicode newlines (i.e. end newlines don't exist in the transformed string so the test itself won't have to handle them).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53OxuU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1240,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53bIPW,eclipse.jdt.ui,2003600342,1240,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-03-18T10:56:43Z,2024-03-18T10:56:43Z,"Thank you, @jjohnstn, i can confirm the jdt.ui tests pass now in https://ci.eclipse.org/jdt/job/eclipse.jdt.ui-github/job/PR-1239/6/","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53bIPW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1240,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53wSpA,eclipse.jdt.ui,2009147968,1240,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-03-20T09:45:59Z,2024-03-20T09:45:59Z,"The jdt.ui tests pass now, but there are 73 jdt.core tests that now fail after cleanup. See https://ci.eclipse.org/jdt/job/eclipse.jdt.core-Github/job/PR-2182/1/#showFailuresLink
For example org.eclipse.jdt.core.tests.compiler.regression.ScannerTest.test030() because it's complicated escape sequence is converted wrong:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/8385c2b3-145c-4067-8ac8-8d0fa2e2797e)

```

junit.framework.ComparisonFailure: Unexpected failure.
----------- Expected ------------

------------ but was ------------
----------\n
1. ERROR in Test.java (at line 6)\r\n
	System.out.print(C.charAt(0) == '\n
');\r\n
	                                ^^\n
Invalid character constant\n
----------\n

---------------------- ----------
 expected:<[]> but was:<[----------\n
1. ERROR in Test.java (at line 6)\r\n
	System.out.print(C.charAt(0) == '\n
');\r\n
	                                ^^\n
Invalid character constant\n
----------\n
]>
	at org.eclipse.jdt.core.tests.junit.extension.TestCase.assertStringEquals(TestCase.java:267)
	at org.eclipse.jdt.core.tests.junit.extension.TestCase.assertEquals(TestCase.java:242)
	at org.eclipse.jdt.core.tests.compiler.regression.AbstractRegressionTest.runTest(AbstractRegressionTest.java:3563)
	at org.eclipse.jdt.core.tests.compiler.regression.AbstractRegressionTest.runTest(AbstractRegressionTest.java:3253)
	at org.eclipse.jdt.core.tests.compiler.regression.AbstractRegressionTest.runConformTest(AbstractRegressionTest.java:1974)
	at org.eclipse.jdt.core.tests.compiler.regression.AbstractRegressionTest.runConformTest(AbstractRegressionTest.java:1971)
	at org.eclipse.jdt.core.tests.compiler.regression.ScannerTest.test030(ScannerTest.java:637)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53wSpA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1240,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM54JEtc,eclipse.jdt.ui,2015644508,1240,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-03-22T18:06:59Z,2024-03-22T18:06:59Z,"@jukzi This last problem was due to text blocks treatment of single quotes.  They were escaped in the original strings but should not be escaped in the text block, similar to double quotes.  I made a fix and verified the failing tests.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM54JEtc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1241,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1241,eclipse.jdt.ui,2174666303,1241,IndexOutOfBoundsException when @throws in javadoc doesn't have anything after it,jonahgraham,679236,Jonah Graham,jonah@kichwacoders.com,CLOSED,2024-03-07T19:54:05Z,2024-03-08T10:59:54Z,"Consider a simple class like this:

```java
package my.simple;
public class Simple {
	/**
	 * @throws CoreException
	 * @throws
	 */
	public void method() throws Exception {
		
	}
}
```

and click on `Exception` or `CoreException` and a pop-up is displayed like this: 
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/679236/ec9e4851-3126-4afc-8b6b-615b23ccdd39) (full stack trace of the error in the below details block)

I think the error is in this line that assumes there is at least one fragment after the `@throws`:

https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/058aa866e3ea31dd9848bfcb00070c3037b01860/org.eclipse.jdt.core.manipulation/core%20extension/org/eclipse/jdt/internal/core/manipulation/search/ExceptionOccurrencesFinder.java#L288

I reproduced this with 4.32 I-build SDK-I20240307-0940.

<details><summary>Full Stack Trace</summary>
<p>

```
java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)
	at java.base/java.util.Objects.checkIndex(Objects.java:361)
	at java.base/java.util.ArrayList.get(ArrayList.java:427)
	at org.eclipse.jdt.core.dom.ASTNode$NodeList.get(ASTNode.java:1583)
	at org.eclipse.jdt.internal.core.manipulation.search.ExceptionOccurrencesFinder.visit(ExceptionOccurrencesFinder.java:288)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:653)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3269)
	at org.eclipse.jdt.internal.core.manipulation.search.ExceptionOccurrencesFinder.performSearch(ExceptionOccurrencesFinder.java:144)
	at org.eclipse.jdt.internal.core.manipulation.search.ExceptionOccurrencesFinder.getOccurrences(ExceptionOccurrencesFinder.java:202)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.updateOccurrenceAnnotations(JavaEditor.java:3312)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor$ActivationListener.windowActivated(JavaEditor.java:1218)
	at org.eclipse.ui.internal.Workbench$8.run(Workbench.java:1031)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.ui.internal.Workbench.fireWindowActivated(Workbench.java:1028)
	at org.eclipse.ui.internal.WorkbenchWindow$6.shellActivated(WorkbenchWindow.java:2462)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:92)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:5854)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1529)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1555)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1534)
	at org.eclipse.swt.widgets.Shell.gtk_focus_in_event(Shell.java:1602)
	at org.eclipse.swt.widgets.Widget.windowProc(Widget.java:2505)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:6883)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:6162)
	at org.eclipse.swt.internal.gtk3.GTK3.gtk_main_do_event(Native Method)
	at org.eclipse.swt.widgets.Display.eventProc(Display.java:1597)
	at org.eclipse.swt.internal.gtk3.GTK3.gtk_main_iteration_do(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4513)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:648)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:555)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1432)

``` 

</p>
</details> ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1241/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1241,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52VMCK,eclipse.jdt.ui,1985265802,1241,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-03-08T08:33:57Z,2024-03-08T08:33:57Z,i will take a look,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52VMCK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1241,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52VUp-,eclipse.jdt.ui,1985301118,1241,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-03-08T08:55:40Z,2024-03-08T08:55:40Z,"the most annoying thing about the bug is, that when i click ""OK"" the popups open again. endless.
workaround: click into another window while the dialog is open, before pressing OK","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52VUp-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1241,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52WCzt,eclipse.jdt.ui,1985490157,1241,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-03-08T10:59:52Z,2024-03-08T10:59:52Z,@jonahgraham Thanks for the high quality bug report.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52WCzt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1248,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1248,eclipse.jdt.ui,2178470530,1248,AdvancedJUnitLaunchConfigurationDelegateTest fails on win,jukzi,51790620,Jörg Kubitz,,CLOSED,2024-03-11T07:56:04Z,2025-01-08T14:22:57Z,"
```
Illegal char <""> at index 0: ""C:\Users\GENIE~1.REL\AppData\Local\Temp\testNames927039289642177752.txt""

java.nio.file.InvalidPathException: Illegal char <""> at index 0: ""C:\Users\GENIE~1.REL\AppData\Local\Temp\testNames927039289642177752.txt""
at java.base/sun.nio.fs.WindowsPathParser.normalize(WindowsPathParser.java:182)
at java.base/sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:153)
at java.base/sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:77)
at java.base/sun.nio.fs.WindowsPath.parse(WindowsPath.java:92)
at java.base/sun.nio.fs.WindowsFileSystem.getPath(WindowsFileSystem.java:232)
at java.base/java.nio.file.Path.of(Path.java:147)
at java.base/java.nio.file.Paths.get(Paths.java:69)
at org.eclipse.jdt.junit.launcher.AdvancedJUnitLaunchConfigurationDelegateTest.showCommandLineAndExtractContentOfTestNameFile(AdvancedJUnitLaunchConfigurationDelegateTest.java:196)
at org.eclipse.jdt.junit.launcher.AdvancedJUnitLaunchConfigurationDelegateTest.runTestsInSourceFolderOnlyUsesTopLevelClasses(AdvancedJUnitLaunchConfigurationDelegateTest.java:170)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
```
see https://download.eclipse.org/eclipse/downloads/drops4/I20240310-1800/testresults/html/org.eclipse.jdt.ui.tests_ep432I-unit-win32-java17_win32.win32.x86_64_17.html

regression from https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1066
@erik-brangs can you please take a look?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1248/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1248,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52glyY,eclipse.jdt.ui,1988254872,1248,NA,erik-brangs,9282509,Erik Brangs,,NA,2024-03-11T11:46:21Z,2024-03-11T11:46:21Z,"Yes, I will take a look.

I suppose the easiest approach would be to just remove the `""` from the start and the end when parsing the argument file in the test on Windows. The `""` seem to be added unconditionally in `exec` in `AbstractVMRunner`.

I will try this out when I have a dev environment Windows. I tried the Oomph setup but it failed with some exceptions about a missing instance variable so I'll have to do it by hand. Edit: Oomph setup worked after upgrading the installer.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52glyY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1248,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52kZyN,eclipse.jdt.ui,1989254285,1248,NA,erik-brangs,9282509,Erik Brangs,,NA,2024-03-11T19:22:26Z,2024-03-11T19:22:26Z,@jukzi I've opened #1250 to fix the failures on Windows.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52kZyN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1249,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1249,eclipse.jdt.ui,2178475136,1249,Error restoring opened class file editor,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2024-03-11T07:58:56Z,2024-05-17T05:19:06Z,"Regression from fc6a25a6a1d46627eae34f4aeab98cafb71a5f70.
`ClassFileEditor.doSetInput(IEditorInput)` calls `JavaCore.runReadOnly()` and that runs into assertion.
Saw this error on startup of the IDE in the log:

```
eclipse.buildId=4.32.0.I20240310-1800
java.version=21.0.2-13
java.vendor=N/A
BootLoader constants: OS=linux, ARCH=x86_64, WS=gtk, NL=en_US
Command-line arguments:  -os linux -ws gtk -arch x86_64 -data /data/4x_platform_workspace

org.eclipse.core.resources
Error
Mon Mar 11 08:35:01 CET 2024
Problems occurred when invoking code from plug-in: ""org.eclipse.core.resources"".

java.lang.IllegalStateException: Its not allow to modify JavaModel during ReadOnly action.
	at org.eclipse.jdt.internal.core.JavaModelManager.assertModelModifiable(JavaModelManager.java:5740)
	at org.eclipse.jdt.internal.core.DeltaProcessor.registerJavaModelDelta(DeltaProcessor.java:2025)
	at org.eclipse.jdt.internal.core.DeltaProcessor.resourceChanged(DeltaProcessor.java:2143)
	at org.eclipse.jdt.internal.core.DeltaProcessingState.resourceChanged(DeltaProcessingState.java:501)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:321)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:311)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:174)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:458)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1586)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2462)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2473)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:810)
	at org.eclipse.jdt.internal.core.JavaModelManager.getClasspathContainer(JavaModelManager.java:2209)
	at org.eclipse.jdt.core.JavaCore.getClasspathContainer(JavaCore.java:3938)
	at org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:3151)
	at org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:3315)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:2429)
	at org.eclipse.jdt.internal.core.JavaProject.getClasspathEntryFor(JavaProject.java:1802)
	at org.eclipse.jdt.internal.core.PackageFragmentRoot.findSourceAttachmentRecommendation(PackageFragmentRoot.java:386)
	at org.eclipse.jdt.internal.core.PackageFragmentRoot.getSourceAttachmentPath(PackageFragmentRoot.java:681)
	at org.eclipse.jdt.internal.core.PackageFragmentRoot.getSourceMapper(PackageFragmentRoot.java:744)
	at org.eclipse.jdt.internal.core.JavaElement.getSourceMapper(JavaElement.java:464)
	at org.eclipse.jdt.internal.core.JavaElement.getSourceMapper(JavaElement.java:464)
	at org.eclipse.jdt.internal.core.ClassFile.openBuffer(ClassFile.java:475)
	at org.eclipse.jdt.internal.core.Openable.getBuffer(Openable.java:279)
	at org.eclipse.jdt.internal.core.AbstractClassFile.getBuffer(AbstractClassFile.java:248)
	at org.eclipse.jdt.internal.core.AbstractClassFile.getSourceRange(AbstractClassFile.java:374)
	at org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor.probeInputForSource(ClassFileEditor.java:791)
	at org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor.doSetInputCached(ClassFileEditor.java:678)
	at org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor.lambda$1(ClassFileEditor.java:663)
	at org.eclipse.jdt.core.JavaCore.lambda$0(JavaCore.java:6134)
	at org.eclipse.jdt.internal.core.JavaModelManager.callReadOnly(JavaModelManager.java:5747)
	at org.eclipse.jdt.core.JavaCore.callReadOnly(JavaCore.java:6118)
	at org.eclipse.jdt.core.JavaCore.runReadOnly(JavaCore.java:6133)
	at org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor.doSetInput(ClassFileEditor.java:663)
	at org.eclipse.ui.texteditor.AbstractTextEditor.lambda$1(AbstractTextEditor.java:3171)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2279)
	at org.eclipse.ui.texteditor.AbstractTextEditor.internalInit(AbstractTextEditor.java:3188)
	at org.eclipse.ui.texteditor.AbstractTextEditor.init(AbstractTextEditor.java:3213)
	at org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor.lambda$0(ClassFileEditor.java:656)
	at org.eclipse.jdt.core.JavaCore.lambda$0(JavaCore.java:6134)
	at org.eclipse.jdt.internal.core.JavaModelManager.cacheZipFiles(JavaModelManager.java:5762)
	at org.eclipse.jdt.internal.core.JavaModelManager.callReadOnly(JavaModelManager.java:5751)
	at org.eclipse.jdt.core.JavaCore.callReadOnly(JavaCore.java:6118)
	at org.eclipse.jdt.core.JavaCore.runReadOnly(JavaCore.java:6133)
	at org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor.init(ClassFileEditor.java:656)
	at org.eclipse.ui.internal.EditorReference.initialize(EditorReference.java:353)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.create(CompatibilityPart.java:344)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:976)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:938)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalInject(InjectorImpl.java:138)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:385)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:311)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:203)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:90)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:59)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:42)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributedPartRenderer.createWidget(ContributedPartRenderer.java:132)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:991)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.showTab(StackRenderer.java:1379)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:114)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:676)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:672)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run(PartRenderingEngine.java:543)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:527)
	at org.eclipse.e4.ui.workbench.renderers.swt.ElementReferenceRenderer.createWidget(ElementReferenceRenderer.java:73)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:991)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:147)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:672)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:147)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:672)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:147)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:672)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:48)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:672)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:79)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:114)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:61)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:676)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:147)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:672)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:660)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:672)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1079)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:152)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:639)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:546)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:681)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:618)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1494)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1467)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1249/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1249,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52fCDi,eclipse.jdt.ui,1987846370,1249,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-03-11T08:17:38Z,2024-03-11T08:17:38Z,"When getters act like a setter (SetContainerOperation)... i have no clue yet why JavaCore.getClasspathContainer(IPath, IJavaProject) modifies resources and how it can be mitigated. ideas welcome","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52fCDi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1249,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52gKu6,eclipse.jdt.ui,1988144058,1249,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-03-11T10:45:31Z,2024-03-11T10:45:31Z,"I have no time to look into this. Since that was a recent regression, I would simply propose to revert change in `ClassFileEditor.doSetInput(IEditorInput)`.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52gKu6/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1249,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52gL50,eclipse.jdt.ui,1988148852,1249,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-03-11T10:48:12Z,2024-03-11T10:48:12Z,Also ClassFileEditor.init() pops up in the stacktrace. i will think about revert.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52gL50/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1251,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1251,eclipse.jdt.ui,2180022371,1251,Consider to add support to create multiple types at once through the Dialog Window,manueljordan,2552795,Manuel Jordan Elera,,OPEN,2024-03-11T19:18:29Z,2024-04-17T05:59:43Z,"Hello 

At the `src/main/java` location for any custom package, when we arrive to the `New Java Class` dialog window we can put the name of the class in the `Name` field. Could you consider to enable to put multiple names to create a set of classes together at once? I mean something like:

```
Car,Computer,Airplane,Book
```

It to avoid open 3 more times the mentioned dialog window. Currently is not possible through neither `,` nor `;`

Consider the same request for Interfaces, Enums and .properties (it at `src/main/resources` and `src/test/resources`)

Of course considering that all these types should be created within the same package.

Thanks for your understanding.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1251/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1251,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56z8wd,eclipse.jdt.ui,2060438557,1251,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-04-17T05:59:42Z,2024-04-17T05:59:42Z,"I have never missed such feature, but it would not hurt anyone either. So if you want it please propose a PR.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56z8wd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1252,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1252,eclipse.jdt.ui,2180199854,1252,javadoc does not work for public fields,bildechinger,13014910,,,CLOSED,2024-03-11T20:47:56Z,2024-04-23T16:42:59Z,"Using Eclipse IDE for Java Developers version 4.30.0.20231201-1200.

Javadoc-View does not work on public fields of external jars on the classpath. Javadoc is configured to read from a doc-jar-file.

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/13014910/c8818d12-47cf-48f5-a788-8d311400a51a)
[JavadocIssue.zip](https://github.com/eclipse-jdt/eclipse.jdt.ui/files/14564411/JavadocIssue.zip)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1252/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1252,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52lC7S,eclipse.jdt.ui,1989422802,1252,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-03-11T20:51:57Z,2024-03-11T20:51:57Z,"Is this a regression? If yes, in which release was it working?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52lC7S/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1252,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52lJXM,eclipse.jdt.ui,1989449164,1252,NA,bildechinger,13014910,,,NA,2024-03-11T21:09:22Z,2024-03-11T21:09:22Z,"Same behavior already in version ""2020-09 (4.17)"". I can't go back further.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52lJXM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1252,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52lPfN,eclipse.jdt.ui,1989474253,1252,NA,bildechinger,13014910,,,NA,2024-03-11T21:26:28Z,2024-03-11T21:26:28Z,"I think the javadoc-format changed and this is causing this issue. 
I went back to an older build of the library ""jackson-core-2.11.0-javadoc.jar"" and it works with this javadoc-package!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52lPfN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1252,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52lQY7,eclipse.jdt.ui,1989477947,1252,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-03-11T21:28:52Z,2024-03-11T21:28:52Z,Perfect. Now if you could point to the difference in format?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52lQY7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1252,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52lcDI,eclipse.jdt.ui,1989525704,1252,NA,bildechinger,13014910,,,NA,2024-03-11T22:04:10Z,2024-03-11T22:04:10Z,"Change is significant. I assume Eclipse parses the html-files but I don't know what html-tag is relevant.
Search for ""=== FIELD DETAIL =========== -->"" in both files and compare. 

[Base64Variant.html_2.11.txt](https://github.com/eclipse-jdt/eclipse.jdt.ui/files/14564945/Base64Variant.html_2.11.txt)
[Base64Variant.html_2.16.txt](https://github.com/eclipse-jdt/eclipse.jdt.ui/files/14564946/Base64Variant.html_2.16.txt)

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/13014910/fc635d69-c605-4343-8a4f-99406ee104f1)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52lcDI/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1252,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53pQVG,eclipse.jdt.ui,2007303494,1252,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-03-19T14:16:58Z,2024-03-19T14:16:58Z,See more details on https://github.com/eclipse-jdt/eclipse.jdt.core/issues/2368,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53pQVG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1252,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56_Ygq,eclipse.jdt.ui,2063435818,1252,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-18T09:30:41Z,2024-04-18T09:30:41Z,"Closing this one as duplicate of https://github.com/eclipse-jdt/eclipse.jdt.core/issues/2368, which is more generic (not only fields are missing unfortunately).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56_Ygq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1255,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1255,eclipse.jdt.ui,2180891815,1255,Merge R4_31_maintenance to BETA_JAVA22 branch,noopur2507,8749449,Noopur Gupta,,CLOSED,2024-03-12T07:11:02Z,2024-03-12T07:15:49Z,Merge R4_31_maintenance to BETA_JAVA22 branch.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1255/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1256,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1256,eclipse.jdt.ui,2181609373,1256,[Null analysis] Object.isNull causes dead code warnings when previously it did not,agentgt,567706,Adam Gent,,CLOSED,2024-03-12T13:20:35Z,2024-03-12T13:22:27Z,"@stephan-herrmann 

Prior to 3.37 ECJ doing the following with null analysis would NOT yield a dead code:

```java
void someMethod(@NonNull s) {
  if (Objects.isNull(s)) {
    // usually throw NPE
    // this block is now reported as dead code
  }
}
```

Basically ECJ is now equating the above as:

```java
void someMethod(@NonNull s) {
  if (s == null) {
    // this is correctly reported as dead code
  }
}
```

However the reason `Objects.isNull` is even used in the first place is defensive programming. While one could use `Objects.requireNonNull` in some cases that is not desired to have the stack one level deep from the actually method call and or a different exception is desired.

Furthermore I thought it was even documented (cannot seem to find the doc at the moment) that `Objects.isNull` is the way to avoid the dead code but maybe I'm misremembering.

Is there a configuration for that that I'm just missing?
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1256/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1256,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52tf--,eclipse.jdt.ui,1991638974,1256,NA,agentgt,567706,Adam Gent,,NA,2024-03-12T13:20:50Z,2024-03-12T13:20:50Z,"Woops meant to file this in core.

https://github.com/eclipse-jdt/eclipse.jdt.core/issues/2147","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM52tf--/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1261,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1261,eclipse.jdt.ui,2187557196,1261,Split Try with resources ends up with mis-formatted code,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-03-15T01:39:11Z,2024-03-28T17:19:25Z,"The new split try-with-resources quick assist results are mis-formatted.

```
public class TestTryWithResourceExtract {

    public void foo() throws IOException {
        try (Reader s = new BufferedReader(new FileReader(""c.d""));
                Reader r = new BufferedReader(new FileReader(""a.b""));
                Reader t = new BufferedReader(new FileReader(""e.f""))) {
            r.read();
            System.out.println(""abc"");
        } catch (FileNotFoundException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }
}
```
when split on Reader r gives:

```
public class TestTryWithResourceExtract {

    public void foo() throws IOException {
        try (Reader s = new BufferedReader(new FileReader(""c.d""))) {
            try (Reader r = new BufferedReader(new FileReader(""a.b""));
                    Reader t = new BufferedReader(new FileReader(""e.f""))){r.read();
                    System.out.println(""abc"");} 
        } catch (FileNotFoundException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }
}
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1261/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1265,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1265,eclipse.jdt.ui,2189895481,1265,Eclipse 4.31 line distance in Outline window etc.,Sciuriware,121790387,Joop,,CLOSED,2024-03-16T10:10:27Z,2024-03-16T10:12:24Z,"Hello all,
it occurred to me that 4.31 differs from 4.30 by a larger vertical line space in the windows:
Outline, Package Explorer, Search and Problems, but NOT in Console.
Is this fixed or is it settable by parameter somewhere.

The phenomenon is not very unpleasant, but space consuming, particularly on my smaller laptop screen.
;JOOP!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1265/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1265,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53Uycg,eclipse.jdt.ui,2001938208,1265,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-03-16T10:12:24Z,2024-03-16T10:12:24Z,Duplicate of https://github.com/eclipse-platform/eclipse.platform.ui/issues/1674,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53Uycg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1267,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1267,eclipse.jdt.ui,2191502999,1267,"Cleanup: ""Convert String to TextBlock"" ignores StringBuilder constructor argument",jukzi,51790620,Jörg Kubitz,,CLOSED,2024-03-18T08:12:30Z,2024-03-18T21:13:04Z,"Cleaning up org.eclipse.jdt.core.tests.rewrite.describing.ASTRewritingTypeAnnotationsTest.testNameQualifiedTypeAnnotations()
results in ""The value of the local variable contents is not used""
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/64126273-a19a-4901-8588-37b2e5eebde1)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1267/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1267,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53geFw,eclipse.jdt.ui,2005000560,1267,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-03-18T21:13:03Z,2024-03-18T21:13:03Z,Closed as fixed via #1268,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM53geFw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1270,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1270,eclipse.jdt.ui,2195272484,1270,StringBuffer to text block cleanup fails to add literal from appends connected to constructor,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-03-19T15:22:01Z,2024-03-20T02:26:00Z,"The following:

```
public class TestStringBufferCleanup {
	
	public void foo() {
		StringWriter stringWriter = new StringWriter();
		StringBuffer buffer = stringWriter.getBuffer().append(""abc"");
		StringBuffer buffer2 = new StringBuffer().append(""abc"");
		StringBuffer buffer3 = buffer.append(""abc"");
		System.out.println(buffer2.toString());
	}

}
```

creates:

```
public class TestStringBufferCleanup {
	
	public void foo() {
		StringWriter stringWriter = new StringWriter();
		StringBuffer buffer = stringWriter.getBuffer().append(""abc"");
		String str = """"""
            """""";
		StringBuffer buffer3 = buffer.append(""abc"");
		System.out.println(str);
	}

}
```

from the StringBuffer to text block clean-up","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1270/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1273,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1273,eclipse.jdt.ui,2197113271,1273,"Cleanup: ""Convert String to TextBlock"" deletes comments",jukzi,51790620,Jörg Kubitz,,CLOSED,2024-03-20T09:54:40Z,2024-03-22T04:17:55Z,"Java TextBlocks can not contain comments
https://stackoverflow.com/questions/70198251/comments-inside-text-block-in-java-17-is-that-possible
But they should not be silently deleted.

Possibilites: completely skip the refactoring for that string or concat several Textblocks with comments.
Example:
org.eclipse.jdt.core.tests.model.SearchTests.testSearchPatternCreation37() (which also fails after cleanup)
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/474459e1-bdf2-43ec-bc55-d54efb6d0a3c)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1273/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1273,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM531rnt,eclipse.jdt.ui,2010561005,1273,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-03-20T20:25:42Z,2024-03-20T20:25:42Z,I think skipping the refactoring makes sense.  We could in the future add a preference to ignore line comments if they aren't non-NLS markers.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM531rnt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1273,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5310aY,eclipse.jdt.ui,2010597016,1273,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-03-20T20:48:37Z,2024-03-20T20:48:37Z,Bug occurs because code didn't escape the last space before the end quotes.  I will fix shortly and will add check for line comments.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5310aY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1286,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1286,eclipse.jdt.ui,2207237079,1286,Extract method in switch expression with yield keep yield in extracted method,NolwennD,32613839,,,CLOSED,2024-03-22T14:05:48Z,2024-04-03T02:02:24Z,"**Eclipse version**: 2024-03

Hello,

I have this method with a switch expression.

```java
    public double amount() {
      return switch (getMovie().getPriceCode()) {
        case Movie.REGULAR -> {
          if (daysRented > 2) {
            yield regularPenalty();
          }
          yield REGULAR_BASE_AMOUNT;
        }
        default -> 0; 
      };
    }
```

When I extract some logic into separate method, the refactoring keep `yield` as keyword for returning a value. It should be transform to `return` to keep a compiling state.

```java
    public double amount() {
      return switch (getMovie().getPriceCode()) {
        case Movie.REGULAR -> {
          regularRental();
        }
        default -> 0;
      };
    }

    private void regularRental() {
      if (daysRented > 2) {
        yield regularPenalty();
      }
      yield REGULAR_BASE_AMOUNT;
    }
```

Moreover, but less annoying, if I extract the whole block, the extracted method format is ugly.

```java
    public double amount() {
      return switch (getMovie().getPriceCode()) {
        case Movie.REGULAR -> regularRental();
        default -> 0;
      };
    }

    private void regularRental(){if (daysRented > 2) {
      yield regularPenalty();
    }yield REGULAR_BASE_AMOUNT;}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1286/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1458,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1458,eclipse.jdt.ui,2353076304,1458,Minor: Extract method from method in nested static class to outer class looses class variable,enexusde,6880636,Peter Rader,github@e-nexus.de,CLOSED,2024-03-23T11:54:17Z,2024-06-27T17:21:23Z,"Having this class:

	package test;
	
	public class Outer {
		public static class NestedStatic {
			private int i = 0;
			public void hello() {
				System.out.println(""Greetings"" + ++i);
				System.out.println(""Greetings"" + ++i); // extract this line to new method
				System.out.println(""Greetings"" + ++i);
			}
		}
	}

If you try to extract the second greeting to a new method **but target the Outer-class.**

![grafik](https://github.com/eclipse-jdt/eclipse.jdt.core/assets/6880636/083bd359-c7a7-4662-9ebb-4bee7e48afb5)

Will create this code: 

	package test;
	
	public class Outer {
		public static class NestedStatic {
			private int i = 0;
	
			public void hello() {
				System.out.println(""Greetings"" + ++i);
				extracted();
				System.out.println(""Greetings"" + ++i);
			}
		}
	
		private static void extracted() {
			System.out.println(""Greetings"" + ++i);
		}
	}

That is not compilable because `i` can not be referenced.

This is a very specific and seldom situation. Its not important and no blocker.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1458/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1284,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1284,eclipse.jdt.ui,2206651004,1284,Quick-fix string concat to text block should behave like clean-up and avoid concats with variables,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-03-25T20:30:45Z,2024-03-26T00:54:57Z,"The quick-fix version of string concat to text block will convert the following partially up to the y variable reference.  Though this ends up withl a valid equivalent string, it should not do the conversion at all as it makes it harder to read.

```
String y = ""something"";
String x = ""abc\n"" +
                ""def\n"" +
                ""ghi\n"" +
                y +
                 ""jkl\n""; 
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1284/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1287,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1287,eclipse.jdt.ui,2208526902,1287,Java code editor syntax highlighting isn't working properly,dg444,165050571,,,CLOSED,2024-03-26T15:08:02Z,2024-04-16T19:27:53Z,"Java code editor syntax highlighting isn't working properly since I installed Eclipse 2024-03.
The syntax highlighting comes and goes, usually with rows of black text on selected lines before normal hightlighting, and sometimes it is mix of black and colours for different words in same line (see 
![Java Syntax Highlight all black](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/165050571/9a1bde7d-2802-4ccd-9369-c473999b9534)
example screenshot). I cannot offer a way to reproduce, and can only note that there were no similar issues in Eclipse 2023-12 for same projects I'm currently working on. The java release version for my code is 21, today I have also tried ""Java 22"" support from Marketplace and same issue occurs.


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1287/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1287,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56vqyY,eclipse.jdt.ui,2059316376,1287,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-04-16T15:04:46Z,2024-04-16T15:04:46Z,need info how to reproduce,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56vqyY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1287,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56xWEt,eclipse.jdt.ui,2059755821,1287,NA,dg444,165050571,,,NA,2024-04-16T19:07:50Z,2024-04-16T19:07:50Z,"Sorry - as I said this issue comes and goes on a Windows 10 PC. Since I logged this issue, I've replaced my PC and use Windows 11. copying the eclipse and workspace folders from old to new PC but have not seen the problem on Windows 11.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56xWEt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1287,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56xdcZ,eclipse.jdt.ui,2059786009,1287,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-04-16T19:27:52Z,2024-04-16T19:27:52Z,closing as not reproducable,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56xdcZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1291,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1291,eclipse.jdt.ui,2214926313,1291,"Refactor ""extract method"" false negative on break in loop inside the refactored code",Alberth289346,3254232,,,CLOSED,2024-03-29T08:34:36Z,2024-06-06T15:10:01Z,"I was playing with eliminating left recursion in a grammar when JDT refused to extract a piece of code to a new method. I found this in Eclipse 2023-03, and confirmed it in 2024-03 as well.

There are two probably different refusals in the same original code, here I'll show the first one.

Reduced to a small example:
``` java
package completion2.grammar;

import java.util.List;

public class RefactorFalseNegativeBreakContinue {

    public static void falseNegativeBreakRefactor(List<List<String>> defs) {
        for (List<String> def: defs) {
            boolean isLeftRecursive = false;
            for (String rule: def) {
                if (!rule.isEmpty()) {
                    break;
                }
            }

            if (!isLeftRecursive) {
                continue;
            }
        }
    }
}
```
I want to refactor the body of the outer loop:

Message from Eclipse refactoring:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/3254232/055fc100-3220-47a6-8326-dfbcb8601cb3)

It looks asif JDT fails to see that the `break` is in an inner loop.

If either the `break` or the `continue` is removed, it works (although I haven't checked what it does then).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1291/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1291,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM540AtX,eclipse.jdt.ui,2026900311,1291,NA,Alberth289346,3254232,,,NA,2024-03-29T08:54:29Z,2024-03-29T08:54:29Z,"Changed title to also state ""extract method"" and added the second refactor bug in #1292","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM540AtX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1292,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1292,eclipse.jdt.ui,2214949165,1292,"Refactor ""extract method"" false negative on local variables in 'for'",Alberth289346,3254232,,,CLOSED,2024-03-29T08:52:15Z,2024-06-07T18:04:10Z,"This is the 2nd refactor bug in the same original code as #1291 after working around the first refusal.

Encountered in Eclipse 2023-03, and confirmed in 2024-03. It seems related to my previous bug report #671 except that was in `while` context.

I assumed the cause for both bugs are different, so I simplified the original code independent from what I did in #1291. That lead to
``` java
package completion2.grammar;

import java.util.ArrayList;
import java.util.List;

public class RefactorFalseNegativeLocalVars {

    public static void falseNegativeLocalVarsRefactor(List<String> defs) {
        List<String> newDefs = new ArrayList<>();

        for (String rule: defs) {
            boolean isLeftRecursive = false;
            if (!isLeftRecursive) {
                continue;
            }

            List<String> oldRules = new ArrayList<String>();
            List<String> newSuffixes = new ArrayList<String>();

            newDefs.addAll(oldRules);
            newDefs.addAll(newSuffixes);
        }
    }
}
```

When you try to extract the body of the loop to a new method, you get
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/3254232/b063c5b2-bd15-4eab-a7b0-f6c1d188ba80)

This is a wrong conclusion since the local variables are local to the extracted method, and cease to exist at the end of that body. If the code performs `continue`, I would hope the local `oldRules`  and `newSuffixes` variables are also created from scratch again, but even if they don't, they are initialized in the declaration after the `continue`, so any old data in them would be destroyed.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1292/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1293,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1293,eclipse.jdt.ui,2214949642,1293,IllegalAccessError - tried to access protected method in org.eclipse.ltk.core.refactoring.Change,noopur2507,8749449,Noopur Gupta,,CLOSED,2024-03-29T08:52:39Z,2024-04-19T15:45:54Z,"In a Java project having an empty module-info.java file, create a JUnit 5 test class like this:

```
package p1;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;

class CTest {

	@Test
	void test() {
		fail(""Not yet implemented"");
	}

}
```

The project has JUnit 5 container in its Modulepath (in Java Build Path).

In the above test, the comile error at @Test provides a quick fix: 
Add 'requires org.junit.jupiter.api' to module-info.java file

Apply the quick fix. We get the following error in Error Log view and the quick fix doesn't work:

```
java.lang.IllegalAccessError: class org.eclipse.jdt.internal.ui.text.correction.proposals.AddModuleRequiresCorrectionProposal tried to access protected method 'org.eclipse.ltk.core.refactoring.Change org.eclipse.jdt.internal.ui.text.correction.proposals.AddModuleRequiresCorrectionProposalCore.createChange()' (org.eclipse.jdt.internal.ui.text.correction.proposals.AddModuleRequiresCorrectionProposal is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @7f9fa387; org.eclipse.jdt.internal.ui.text.correction.proposals.AddModuleRequiresCorrectionProposalCore is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @16feb910)
	at org.eclipse.jdt.internal.ui.text.correction.proposals.AddModuleRequiresCorrectionProposal.createChange(AddModuleRequiresCorrectionProposal.java:42)
	at org.eclipse.jdt.ui.text.java.correction.ChangeCorrectionProposal.getChange(ChangeCorrectionProposal.java:339)
	at org.eclipse.jdt.ui.text.java.correction.ChangeCorrectionProposal.performChange(ChangeCorrectionProposal.java:132)
	at org.eclipse.jdt.ui.text.java.correction.ChangeCorrectionProposal.apply(ChangeCorrectionProposal.java:109)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.insertProposal(CompletionProposalPopup.java:1004)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.insertSelectedProposalWithMask(CompletionProposalPopup.java:951)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.widgetDefaultSelected(CompletionProposalPopup.java:697)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1293/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1293,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56byUt,eclipse.jdt.ui,2054104365,1293,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-14T15:51:59Z,2024-04-14T15:51:59Z,"@jjohnstn , @robstryker : seem to be regression from #1120. Could you please check?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56byUt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1293,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56p28T,eclipse.jdt.ui,2057793299,1293,NA,robstryker,630383,Rob Stryker,,NA,2024-04-15T20:56:58Z,2024-04-15T20:56:58Z,"Hrmm, not sure why this is not showing an error in the IDE.  The two classes are in the same package, visibility is set to 'protected' but it's not package-protected so it should show an error inside eclipse. 

Any ideas @jjohnstn ?  

Possible fixes are to change `return fCore.createChange();` to `return fCore.getChange()`, or, make a public but non-API method in the fcore that performs the same call effectively. 

I'm more curious why this isn't showing an error in the IDE or during build time, though. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56p28T/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1293,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56p89V,eclipse.jdt.ui,2057817941,1293,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-15T21:12:14Z,2024-04-15T21:12:14Z,"The error says about different classloaders, this is where we should look for. Classes with ""same"" package (with same name) are considered to be from different packages at runtime if loaded from different classloaders.
So the question is probably why two classes were loaded from different classloaders. This would mean there is a way to get different bundles to load classes in question separately instead of one bundle to get classes loaded by another. Missing ""export"" package? Wrong version constraints?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56p89V/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1293,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56u8kw,eclipse.jdt.ui,2059127088,1293,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-04-16T13:42:26Z,2024-04-16T13:42:26Z,"see https://nirmalsasidharan.wordpress.com/2010/09/02/split-packages-an-osgi-nightmare/
can you please just avoid split package?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56u8kw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1293,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56xFuU,eclipse.jdt.ui,2059688852,1293,NA,robstryker,630383,Rob Stryker,,NA,2024-04-16T18:22:42Z,2024-04-16T18:22:42Z,"
> see https://nirmalsasidharan.wordpress.com/2010/09/02/split-packages-an-osgi-nightmare/ can you please just avoid split package?

Unfortunately the changes here were a huge migration of code, some public, some internal but stable and consumed by others, from a UI plugin to a plugin that lacked UI dependencies. In many cases the split package existed before the migration even occurred, so the migration was not the cause of the split packages. But, because some of the code was API, simply changing the package was not a possibility. 

This is concerning though. This bug is evidence that the build tools and the API tools, as well as the test suite, appear to be insufficient to catch such issues at this time :( 
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56xFuU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1293,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56xHMR,eclipse.jdt.ui,2059694865,1293,NA,robstryker,630383,Rob Stryker,,NA,2024-04-16T18:26:52Z,2024-04-16T18:26:52Z,"Upon reflection, I'm not sure blaming this on split packages is compelling. 

The eclipse tooling should recognize the two objects have completely different heirarchies, and `AddModuleRequiresCorrectionProposal` should under no circumstances be allowed to access the regular protected (ie, not package-protected) `createChange` method in `AddModuleRequiresCorrectionProposalCore`.

The tooling should 100% be marking this as an error. The method is not package-protected. It is regular protected with very different heirarchies. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56xHMR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1293,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56xc2D,eclipse.jdt.ui,2059783555,1293,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-04-16T19:26:30Z,2024-04-16T19:26:30Z,"See https://docs.oracle.com/javase/tutorial/java/javaOO/accesscontrol.html
that protected allows any access from the same package.
See also https://bugs.eclipse.org/bugs/show_bug.cgi?id=152568 that JDT can not detect split package, and OSGi can not solve it either
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56xc2D/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1293,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56xvjX,eclipse.jdt.ui,2059860183,1293,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-04-16T20:20:35Z,2024-04-16T20:20:35Z,"> Hrmm, not sure why this is not showing an error in the IDE. The two classes are in the same package, visibility is set to 'protected' but it's not package-protected so it should show an error inside eclipse.
> 
> Any ideas @jjohnstn ?
> 
> Possible fixes are to change `return fCore.createChange();` to `return fCore.getChange()`, or, make a public but non-API method in the fcore that performs the same call effectively.
> 
I think your last idea is the best one: create a new public method.  I imagine this problem will need to be addressed in multiple spots.

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56xvjX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1293,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM567JVV,eclipse.jdt.ui,2062325077,1293,NA,robstryker,630383,Rob Stryker,,NA,2024-04-17T21:03:02Z,2024-04-17T21:03:02Z,The public method already exists. I'll make a PR to call it. ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM567JVV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1294,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1294,eclipse.jdt.ui,2215549177,1294,"Interrupted while waiting for CSS fragments cache lock, proceeding without using cache",iloveeclipse,964108,Andrey Loskutov,,CLOSED,2024-03-29T15:09:03Z,2024-04-04T19:46:39Z,"Using I20240327-1800 build I randomly get errors without stack trace while working in Java editor:

`Interrupted while waiting for CSS fragments cache lock, proceeding without using cache`

This is a regression from https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1074.

@RedeemerSK: please check. 
- First of all, if errors are logged, they should be logged with a stack trace.
- I assume the error is just caused by the fact that while editing or navigating inside Java file, mouse hover request may be cancelled because of some user actions that make the request obsolete. This is not an error and shouldn't be spamming the log.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1294/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1294,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM543QPV,eclipse.jdt.ui,2027750357,1294,NA,RedeemerSK,36334098,Jozef Tomek,,NA,2024-03-29T21:24:21Z,2024-03-29T21:24:21Z,@iloveeclipse fix in #1295,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM543QPV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1294,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM55eqCB,eclipse.jdt.ui,2038079617,1294,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-04T19:46:21Z,2024-04-04T19:46:21Z,">  fix in #1295

Thanks, I haven't seen this kind of errors in the log since the fix.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM55eqCB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1297,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1297,eclipse.jdt.ui,2217353278,1297,Bug:  move method causes compilation errors.,DongChunHao,77560508,DongChunHao,,CLOSED,2024-04-01T02:07:04Z,2024-06-07T21:41:11Z,"When moving the **dependentMethod** method to the **TargetClass** class, the use of private field **value** in **dependentMethod** resulted in compilation errors after move method refactoring.

class SourceClass {
    private int value;
    TargetClass c;
    public void setValue(int value) {
        this.value = value;
    }
    
     //move method dependentMethod to TargetClass
    public void dependentMethod() {
        System.out.println(""Dependent method: "" + value);
    }
}

class TargetClass {
    public void callDependentMethod() {
        SourceClass source = new SourceClass();
        source.dependentMethod(); 
    }
}

The refactorin results are as follows:

   
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/77560508/2102b230-42ac-4235-9c42-bebe8a1a9a60)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1297/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1297,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM548KBR,eclipse.jdt.ui,2029035601,1297,NA,DongChunHao,77560508,DongChunHao,,NA,2024-04-01T02:09:11Z,2024-04-01T02:09:11Z,@ jjohnstn  Please check if this is a bug and let me know. Thank you,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM548KBR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1298,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1298,eclipse.jdt.ui,2219397082,1298,Bug：Move method refactoring did not check for issues with calling private fields,DongChunHao,77560508,DongChunHao,,CLOSED,2024-04-02T01:35:13Z,2024-05-17T19:34:34Z,"Compilation error occurred when moving **_dependentMethod()_** to _**TargetClass**_ class

class SourceClass {
    private int value;
    TargetClass c;
    public void setValue(int value) {
        this.value = value;
    }

   // remove **dependentMethod()** to **TargetClass**
    public void dependentMethod() {
        System.out.println(""Dependent method: "" + value);
    }
}

class TargetClass {
    public void callDependentMethod() {
        SourceClass source = new SourceClass();
        source.dependentMethod(); 
    }
}

Refactoring results:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/77560508/4d3fe391-88e4-4a8b-8610-18af36be3a5d)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1298/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1298,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM59-7Wi,eclipse.jdt.ui,2113648034,1298,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-05-15T23:29:19Z,2024-05-15T23:29:19Z,"@DongChunHao This is not failing.  The move member actually issues a warning that ""The visibility of field ""tests.SourceClass.value"" will be changed to package.""  This change is made when you choose OK and makes the move work.  Is it possible this is a failure in jdt.ls or vscode?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM59-7Wi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1298,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5-QgDq,eclipse.jdt.ui,2118254826,1298,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-05-17T19:34:34Z,2024-05-17T19:34:34Z,Closing as not a bug in JDT.UI.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5-QgDq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1299,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1299,eclipse.jdt.ui,2219411967,1299,Bug：Move interface method causes compilation errors.,DongChunHao,77560508,DongChunHao,,CLOSED,2024-04-02T01:55:35Z,2024-05-16T18:03:16Z,"move  **_interfaceMethod()_** to **_MyClass_**  to classes causes compilation errors

interface MyInterface {
   // move **_interfaceMethod()_** to **_MyClass_**;
    void interfaceMethod();
}

class MyClass implements MyInterface {
    

	@Override
	public void interfaceMethod() {
		
	}
}

**Refactoring results：**
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/77560508/90594e29-c466-4205-9f4e-648ee7186be3)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1299/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1299,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM59_Dq_,eclipse.jdt.ui,2113682111,1299,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-05-16T00:12:46Z,2024-05-16T00:12:46Z,"@DongChunHao This move is a textual move which means it is a cut/paste operation without checking hierarchy, implementers, etc...  I have created a patch that will restrict moving an interface method to anything other than another interface (something a user may reasonably want to do).  IMO, this is a reasonable check as moving such a method declaration anywhere else makes no sense.  As mentioned, there is no additional checking done (e.g. verifying that there aren't any implementers out there that will be broken when the method is moved). ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM59_Dq_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1300,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1300,eclipse.jdt.ui,2219423163,1300,Bug：  Move method refactoring caused compilation errors due to method calls,DongChunHao,77560508,DongChunHao,,CLOSED,2024-04-02T02:10:16Z,2024-05-15T04:49:27Z,"Move **_moveMethod()_** to **_TargetClass_**

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/77560508/2234f5e9-5775-4d26-8882-5298c23c3f21)

Refactoring results:

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/77560508/ad41009e-93c1-4482-8b6b-d01cd36f2705)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1300/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1301,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1301,eclipse.jdt.ui,2219461919,1301,"Bug: Move method refactoring relies on internal interfaces, resulting in compilation errors",DongChunHao,77560508,DongChunHao,,CLOSED,2024-04-02T02:59:18Z,2024-06-05T18:17:13Z,"move **_myMethod()_** to **_TargetClass_**

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/77560508/05ab60f2-24ba-41a3-b317-b135241bcce7)

Refactoring result：

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/77560508/0e1c2592-92f0-4adf-8376-4d5f551baddc)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1301/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1302,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1302,eclipse.jdt.ui,2219464728,1302,Bug: Move method refactoring relies on instantiation and invocation of static internal interfaces,DongChunHao,77560508,DongChunHao,,CLOSED,2024-04-02T03:02:56Z,2024-05-17T19:33:06Z,"Move **_myMethod()_** to **_TargetClass_**

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/77560508/b196b0ef-bcc1-4f4b-a466-30ec5d07fd68)

Refactoring results：

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/77560508/166308ac-f1ba-470b-9326-2310e0c905d0)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1302/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1302,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5-Qfh_,eclipse.jdt.ui,2118252671,1302,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-05-17T19:33:06Z,2024-05-17T19:33:06Z,Closing as duplicate of #1301 (test works with #1412 applied),"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5-Qfh_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1303,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1303,eclipse.jdt.ui,2219475388,1303,Bug: move  methods rely on instantiation and invocation of protected inner classes,DongChunHao,77560508,DongChunHao,,CLOSED,2024-04-02T03:16:47Z,2024-06-05T18:20:17Z,"Move  **myMethod()** to **TargetClass**

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/77560508/1b6da53e-1f29-4313-8d39-1a0a053c782d)

Refactoring results:

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/77560508/3a446cd2-1bde-4fcc-8be4-81ab96595341)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1303/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1303,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5-QZ16,eclipse.jdt.ui,2118229370,1303,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-05-17T19:14:00Z,2024-05-17T19:14:00Z,This is fixed by #1412.  I have added new tests.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5-QZ16/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1303,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AMMze,eclipse.jdt.ui,2150681822,1303,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-06-05T18:20:16Z,2024-06-05T18:20:16Z,Closing as fixed by #1412,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AMMze/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1304,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1304,eclipse.jdt.ui,2219479756,1304,Bug:  methods rely on instantiation of private constructors,DongChunHao,77560508,DongChunHao,,CLOSED,2024-04-02T03:22:38Z,2024-06-05T19:48:45Z,"move  **methodUsingPrivateConstructor()** to **TargetClass**

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/77560508/31526995-3a62-4f2c-ba1c-4fe3a6936d3f)

Refactoring results:

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/77560508/3dcde10e-e37a-49f4-a270-acc794eb9a53)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1304/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1305,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1305,eclipse.jdt.ui,2219487173,1305,Bug：Move method depends on the static method of the original class and the static method of the inner class,DongChunHao,77560508,DongChunHao,,CLOSED,2024-04-02T03:32:47Z,2024-04-16T12:15:28Z,"![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/77560508/fca21e77-80ba-44d3-9f3e-e481400d912c)

Refactoring results:

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/77560508/08719b62-6406-42c2-9073-c8430a1e4e57)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1305/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1305,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56uRCF,eclipse.jdt.ui,2058948741,1305,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-04-16T12:15:27Z,2024-04-16T12:15:27Z,Duplicate of #1306,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56uRCF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1306,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1306,eclipse.jdt.ui,2219492567,1306,Bug:  Move methods rely on static inner classes,DongChunHao,77560508,DongChunHao,,CLOSED,2024-04-02T03:39:39Z,2024-06-07T15:25:05Z,"![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/77560508/aa6f2057-d751-4602-85bc-3f22c47369af)

Refactoring result:

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/77560508/94ef40fa-d28a-4e6e-b51b-5316a2efd044)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1306/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1306,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56uQed,eclipse.jdt.ui,2058946461,1306,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-04-16T12:14:11Z,2024-04-16T12:14:11Z,"@DongChunHao the bug description gives very few details. Please fully describe which actions are necessary to reproduce, what you expect and which version you used.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56uQed/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1306,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_bVs2,eclipse.jdt.ui,2137873206,1306,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-05-29T16:57:45Z,2024-05-29T16:57:45Z,This is fixed by #1412,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_bVs2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1306,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Ac6rj,eclipse.jdt.ui,2155064035,1306,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-06-07T15:25:04Z,2024-06-07T15:25:04Z,Closing since #1412 is merged.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Ac6rj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1309,eclipse.jdt.ui,2222598494,1309,Hello World tutorial on fresh Eclipse installation resulting in unnamed package in named module,danthe1st,34687786,dan1st,,CLOSED,2024-04-03T10:54:52Z,2024-04-16T20:41:55Z,"When following the ""Create a Hello World application"" interactive tutorial on the welcome screen of a new Eclipse IDE for Java Developers (2024-03) installation and a new workspace, one would create a Java project with a `module-info.java` and then create a class in the unnamed package in that project.
Since the unnamed package is not allowed in named modules, this results in an error after creating the class.

### Steps to reproduce
- Download and install `Eclipse IDE for Java Developers` (2024-03)
- Create a new Workspace
- From the Welcome screen, select the tutorial `Create a Hello World application` and follow it
- In the step `Create a Java project`, the option `Create module-info.java file` is ticked by default in the project creation dialog (since it's a new workspace).
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/34687786/b003fd80-ec65-48af-954b-072e83ef15e0)
- In the next step, it asks the user to create a class. This doesn't mention anything about setting a package which suggests using the default package.
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/34687786/651bff03-b652-454e-95f4-ed0d734a5347)
- After creating the class, an error occurs in the class file due to a class being created in the unnamed package of a named module.

### Suggestions
I suggest to change the to tutorial to mention that users should deselect the option `Create module-info.java` file when creating the project.

Aside from that, it may be a good idea to prevent creating any classes in the default package as long as the project is modularized in order to prevent confusion about the error happening after that. Instead of a warning saying the use of the default package would be discouraged, I suggest adding an error saying the default package cannot be used in a named module/project with a `module-info.java`.

---
I originally mentioned that [in the `eclipse-dev` mailing list](https://www.eclipse.org/lists/eclipse-dev/msg12250.html).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1309/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM55i90U,eclipse.jdt.ui,2039209236,1309,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2024-04-05T08:07:39Z,2024-04-05T08:07:39Z,"Thanks @danthe1st for the report. Could you maybe provide a PR for this update? Looks like @jjohnstn plans to look into it, but as you spend so much time to report it, you should also get the fame for fixing it.

Let me know if you want, this fix should be simple: Just fork repo, clone it, search for a text from the tutorial to find the correct place and change the text and provide PR.

Would be great to see you improving the documentation. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM55i90U/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM55lF4p,eclipse.jdt.ui,2039766569,1309,NA,danthe1st,34687786,dan1st,,NA,2024-04-05T13:08:54Z,2024-04-05T13:08:54Z,"I can try writing changing the tutorial. However, I don't want to do it if someone else is already at it and there's still my second suggestion of not allowing to create unnamed classes in named packages altogether (though that might be better as a separate issue?).

Also I didn't find the relevant text anyways.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM55lF4p/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1309,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56x23k,eclipse.jdt.ui,2059890148,1309,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-04-16T20:41:53Z,2024-04-16T20:41:53Z,"> I can try writing changing the tutorial. However, I don't want to do it if someone else is already at it and there's still my second suggestion of not allowing to create unnamed classes in named packages altogether (though that might be better as a separate issue?).

Hi @danthe1st I created #1328.

> 
> Also I didn't find the relevant text anyways.

They were in eclipse-jdt/eclipse.jdt

Thanks for reporting the issue.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56x23k/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1311,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1311,eclipse.jdt.ui,2226407532,1311,Convert string concat to Message.format or String.format should conserve line breaks and use text block,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-04-04T20:03:31Z,2024-04-24T19:27:15Z,"The current String concat to Message.format or String.format quick assist for the following:

```
		String contributors= "" *    IBM Corporation\n"";
		String copyright= 
		        ""/*******************************************************************************\n"" +
		        "" * Copyright (c) 2013, 2024 IBM Corporation and others.\n"" +
		        "" *\n"" +
		        "" * This program and the accompanying materials\n"" +
		        "" * are made available under the terms of the Eclipse Public License 2.0\n"" +
		        "" * which accompanies this distribution, and is available at\n"" +
		        "" * https://www.eclipse.org/legal/epl-2.0/\n"" +
		        "" *\n"" +
		        "" * SPDX-License-Identifier: EPL-2.0\n"" +
		        "" *\n"" +
		        contributors +
		        ""/*******************************************************************************\n"";

```

creates a Message.format string that is on one line and concats all sub-strings and replaces contributors with ""{0}"".

It would be easier to read if the code used a text block instead as the parameter to Message.format and included the {0} string in place of contributors.

```
		String contributors= "" *    IBM Corporation\n"";
		String copyright= MessageFormat.format(""""""
		        /*******************************************************************************
		         * Copyright (c) 2013, 2024 IBM Corporation and others.
		         *
		         * This program and the accompanying materials
		         * are made available under the terms of the Eclipse Public License 2.0
		         * which accompanies this distribution, and is available at
		         * https://www.eclipse.org/legal/epl-2.0/
		         *
		         * SPDX-License-Identifier: EPL-2.0
		         *
		        {0}\
		        /*******************************************************************************
		        """""", contributors);

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1311/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1315,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1315,eclipse.jdt.ui,2229118956,1315,jdt.ui.tests.refactoring DNF since I20240331-1800,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2024-04-06T07:17:13Z,2024-04-10T17:58:46Z,"See https://download.eclipse.org/eclipse/downloads/drops4/I20240331-1800/testResults.php and all following builds.

Note that the build logs for **all** JDT **UI** related bundles is multiple megabytes, while usually below one MB:

https://download.eclipse.org/eclipse/downloads/drops4/I20240404-1800/logs.php#console

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/964108/4a9b842c-ca65-4228-b1a2-aa4945233f46)

old log from https://download.eclipse.org/eclipse/downloads/drops4/I20240330-1800/logs.php#console

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/964108/820b6e02-4950-48fc-9f35-6889160cfae5)

In the logs I see no real errors, but tons (~ 15.000 times) of stack traces reported by UI freeze monitor on `JavaProjectHelper.delete()` that hangs in ` org.eclipse.swt.internal.ole.win32.ITaskbarList3.SetOverlayIcon(ITaskbarList3.java:31)` (why UI freeze monitor is not disabled during tests???):

```
!ENTRY org.eclipse.ui.monitoring 2 0 2024-04-01 05:27:24.168
!MESSAGE UI freeze of 0.84s at 05:27:23.329
!SUBENTRY 1 org.eclipse.ui.monitoring 1 0 2024-04-01 05:27:24.168
!MESSAGE Sample at 05:27:23.736 (+0.407s)
Thread 'main' tid=1 (RUNNABLE)
!STACK 0
Stack Trace
	at org.eclipse.swt.internal.ole.win32.COM.VtblCall(Native Method)
	at org.eclipse.swt.internal.ole.win32.ITaskbarList3.SetOverlayIcon(ITaskbarList3.java:31)
	at org.eclipse.swt.widgets.TaskItem.updateImageAndText(TaskItem.java:219)
	at org.eclipse.swt.widgets.TaskItem.setOverlayImage(TaskItem.java:330)
	at org.eclipse.ui.internal.progress.TaskBarProgressManager.updateImage(TaskBarProgressManager.java:162)
	at org.eclipse.ui.internal.progress.TaskBarProgressManager$1.runInUIThread(TaskBarProgressManager.java:120)
	at org.eclipse.ui.progress.UIJob.lambda$0(UIJob.java:148)
	at org.eclipse.ui.progress.UIJob$$Lambda$836/0x000000080132f6a0.run(Unknown Source)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4047)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3663)
	at org.eclipse.jdt.testplugin.JavaProjectHelper.emptyDisplayLoop(JavaProjectHelper.java:1225)
	at org.eclipse.jdt.testplugin.JavaProjectHelper.delete(JavaProjectHelper.java:572)
	at org.eclipse.jdt.ui.tests.refactoring.rules.RefactoringTestSetup.after(RefactoringTestSetup.java:88)
```

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1315/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1315,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM55p0oJ,eclipse.jdt.ui,2041006601,1315,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-06T07:46:37Z,2024-04-06T07:46:37Z,"I've checked stack traces, they all look ""innocent"" and doesn't point to any recent change in the code.
I assume Windows test machine is in some bad state and needs a restart.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM55p0oJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1315,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM55p6XC,eclipse.jdt.ui,2041030082,1315,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-06T09:29:56Z,2024-04-06T09:29:56Z,Pinged IT team at https://gitlab.eclipse.org/eclipsefdn/helpdesk/-/issues/4410,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM55p6XC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1315,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56FFau,eclipse.jdt.ui,2048153262,1315,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-10T17:58:32Z,2024-04-10T17:58:32Z,Fixed by machine restart,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56FFau/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1316,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1316,eclipse.jdt.ui,2230609986,1316,[22] Quick assist to convert String concat with String template,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,CLOSED,2024-04-08T08:41:56Z,2024-04-18T09:19:18Z,"Assuming that String template will become a standard Java feature, one might want to convert complex string concat expressions into string templates. It would be nice to have this assistance in the editor via a new quick assist","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1316/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1316,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56_TNz,eclipse.jdt.ui,2063414131,1316,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-04-18T09:19:18Z,2024-04-18T09:19:18Z,StringTemplate to be removed https://github.com/eclipse-jdt/eclipse.jdt.core/issues/2353,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56_TNz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1317,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1317,eclipse.jdt.ui,2230830401,1317,BadLocationException at org.eclipse.jface.text.link.LinkedPositionGroup.enforceDisjoint(LinkedPositionGroup.java:162),sorincarbunaru,10512384,Sorin Carbunaru,,CLOSED,2024-04-08T10:27:27Z,2024-04-22T15:34:18Z,"Sometimes extracting a variable and replacing all occurences either freezes, or give an exception like this:

````
org.eclipse.core.runtime.CoreException: org.eclipse.jface.text.BadLocationException
	at org.eclipse.jdt.internal.ui.text.correction.proposals.LinkedCorrectionProposal.performChange(LinkedCorrectionProposal.java:197)
	at org.eclipse.jdt.ui.text.java.correction.CUCorrectionProposal.apply(CUCorrectionProposal.java:230)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.insertProposal(CompletionProposalPopup.java:1004)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.insertSelectedProposalWithMask(CompletionProposalPopup.java:951)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.widgetDefaultSelected(CompletionProposalPopup.java:697)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:123)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4273)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4071)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:648)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:555)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)
Caused by: org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.link.LinkedPositionGroup.enforceDisjoint(LinkedPositionGroup.java:162)
	at org.eclipse.jface.text.link.LinkedPositionGroup.addPosition(LinkedPositionGroup.java:127)
	at org.eclipse.jdt.internal.ui.viewsupport.LinkedProposalModelPresenter.enterLinkedMode(LinkedProposalModelPresenter.java:100)
	at org.eclipse.jdt.internal.ui.text.correction.proposals.LinkedCorrectionProposal.performChange(LinkedCorrectionProposal.java:186)
	... 31 more
````

After trying the variable extraction operation, along with the BadLocationException, in the error log I also had a NullPointerException:

````
java.lang.NullPointerException: Cannot invoke ""org.eclipse.core.filebuffers.ITextFileBuffer.getDocument()"" because ""this.fBuffer"" is null
	at org.eclipse.ltk.core.refactoring.TextFileChange.acquireDocument(TextFileChange.java:211)
	at org.eclipse.jdt.core.refactoring.CompilationUnitChange.acquireDocument(CompilationUnitChange.java:85)
	at org.eclipse.ltk.core.refactoring.TextChange.getCurrentDocument(TextChange.java:313)
	at org.eclipse.ltk.core.refactoring.TextChange.getPreviewDocument(TextChange.java:520)
	at org.eclipse.ltk.core.refactoring.TextChange.getPreviewDocument(TextChange.java:401)
	at org.eclipse.jdt.core.manipulation.CUCorrectionProposalCore.getAdditionalProposalInfo(CUCorrectionProposalCore.java:135)
	at org.eclipse.jdt.internal.ui.text.correction.proposals.RefactoringCorrectionProposalCore.getAdditionalProposalInfo(RefactoringCorrectionProposalCore.java:77)
	at org.eclipse.jdt.ui.text.java.correction.CUCorrectionProposal.getAdditionalProposalInfo(CUCorrectionProposal.java:193)
	at org.eclipse.jface.text.contentassist.AdditionalInfoController$Timer$2$1.run(AdditionalInfoController.java:116)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
````

When Eclipse does not freeze, the result of the operation is something like this:
````
AuthorAccess authorAccess = MISSING();
AuthorAccess authorAccess = context.getAuthorAccess();
````

I have the following Eclipse:
````
Eclipse IDE for Java Developers (includes Incubating components)

Version: 2023-12 (4.30.0)
Build id: 20231201-2043
````

Version of `jdt.ui`: 	Eclipse.org	Java Development Tools UI	3.31.0.v20231115-2128	org.eclipse.jdt.ui.

An example of code that trigers a freeze is in the https://github.com/oxygenxml/oxygen-git-client-addon repo: in `ProjectMenuGitActionsProvider.doGitDiff()`, I tried to extract `pluginWS.getProjectManager()` as a variable (with the action that also replaces all occurences).

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1317/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1317,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56mRhX,eclipse.jdt.ui,2056853591,1317,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-15T13:26:24Z,2024-04-15T13:26:24Z,"Is it possible to provide steps to reproduce or a minimal test case?

@jjohnstn : does stack says anything useful to you?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56mRhX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1317,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56p_kO,eclipse.jdt.ui,2057828622,1317,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-04-15T21:19:46Z,2024-04-15T21:19:46Z,"@iloveeclipse The stack doesn't say much other than there is an overlapping edit generated.  Without a test, it is difficult to help debug.  There was a problem where an invalid edit may be proposed because the code wasn't cleaning up after finding errors in checkFinalConditions() but that was fixed in 2024-03.  I might suggest the user update to 2024-03 to see if that was indeed the problem.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56p_kO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1317,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56rodZ,eclipse.jdt.ui,2058258265,1317,NA,sorincarbunaru,10512384,Sorin Carbunaru,,NA,2024-04-16T05:28:51Z,2024-04-16T05:28:51Z,"Hi,

It's rather difficult to create a minimal test case... I noticed this does not happen for every variable extraction. I didn't figure out what causes the problem.

What I can tell for sure is that it still happens for the example I provided in the initial post:

> An example of code that trigers a freeze is in the https://github.com/oxygenxml/oxygen-git-client-addon repo: in `ProjectMenuGitActionsProvider.doGitDiff()`, I tried to extract `pluginWS.getProjectManager()` as a variable (with the action that also replaces all occurences).

I guess I will have to upgrade to 2024-03, but that will be quite tedious, because I will have to install quite a few of add-ons to make sure the environment is exactly as before and exactly what I actually need for my work.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56rodZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1317,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56rtkN,eclipse.jdt.ui,2058279181,1317,NA,sorincarbunaru,10512384,Sorin Carbunaru,,NA,2024-04-16T05:50:04Z,2024-04-16T05:50:04Z,"I've actually just tried the scenario mentioned above with a fresh clone of that Git project and with a fresh Eclipse (without any extra add-ons):
````
Eclipse IDE for Java Developers (includes Incubating components)

Version: 2024-03 (4.31.0)
Build id: 20240307-1437
````
Eclipse froze.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56rtkN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1317,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56skz7,eclipse.jdt.ui,2058505467,1317,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-16T08:15:12Z,2024-04-16T08:15:12Z,"> Eclipse froze.

Perfect (because you can reproduce). Please create jstack thread dump and attach here.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56skz7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1317,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56tZBr,eclipse.jdt.ui,2058719339,1317,NA,sorincarbunaru,10512384,Sorin Carbunaru,,NA,2024-04-16T10:05:51Z,2024-04-16T10:05:51Z,"I triggered the variable extraction and then ran `jstack -l -e <PID>`. Here is the dump file.

[jstack_thread_dump.txt](https://github.com/eclipse-jdt/eclipse.jdt.ui/files/14995152/jstack_thread_dump.txt)

Let me know if it's OK.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56tZBr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1317,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56uC5F,eclipse.jdt.ui,2058890821,1317,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-16T11:42:24Z,2024-04-16T11:42:24Z,"Relevant threads:

```
""main"" #1 prio=6 os_prio=0 cpu=10078.12ms elapsed=259.02s allocated=3142M defined_classes=13080 tid=0x00000214010c70c0 nid=0x39a8 waiting on condition  [0x000000b8ff30c000]
   java.lang.Thread.State: WAITING (parking)
        at jdk.internal.misc.Unsafe.park(java.base@17.0.10/Native Method)
        - parking to wait for  <0x00000000a2ac2bb0> (a java.util.concurrent.ForkJoinTask$AdaptedCallable)
        at java.util.concurrent.locks.LockSupport.park(java.base@17.0.10/LockSupport.java:341)
        at java.util.concurrent.ForkJoinTask.awaitDone(java.base@17.0.10/ForkJoinTask.java:468)
        at java.util.concurrent.ForkJoinTask.get(java.base@17.0.10/ForkJoinTask.java:979)
        at org.eclipse.jdt.internal.core.search.PatternSearchJob.performParallelSearch(PatternSearchJob.java:156)
        at org.eclipse.jdt.internal.core.search.PatternSearchJob.execute(PatternSearchJob.java:117)
        at org.eclipse.jdt.internal.core.search.processing.JobManager.performConcurrentJob(JobManager.java:384)
        at org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.legacySearchAllPossibleSubTypes(IndexBasedHierarchyBuilder.java:579)
        at org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.searchAllPossibleSubTypes(IndexBasedHierarchyBuilder.java:480)
        at org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.determinePossibleSubTypes(IndexBasedHierarchyBuilder.java:445)
        at org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.build(IndexBasedHierarchyBuilder.java:146)
        at org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.compute(TypeHierarchy.java:326)
        at org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.refresh(TypeHierarchy.java:1294)
        - locked <0x0000000088b80218> (a org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy)
        at org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.executeOperation(CreateTypeHierarchyOperation.java:94)
        at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:742)
        at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:808)
        at org.eclipse.jdt.internal.core.BinaryType.newTypeHierarchy(BinaryType.java:921)
        at org.eclipse.jdt.internal.core.BinaryType.newTypeHierarchy(BinaryType.java:892)
        at org.eclipse.jdt.internal.corext.refactoring.util.ChangedValueChecker.findFunctionDefinition(ChangedValueChecker.java:167)
        at org.eclipse.jdt.internal.corext.refactoring.util.ChangedValueChecker$ReadVisitor.visit(ChangedValueChecker.java:492)
        at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:220)
        at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3300)
        at org.eclipse.jdt.internal.corext.refactoring.util.ChangedValueChecker.analyzeSelectedExpression(ChangedValueChecker.java:115)
        at org.eclipse.jdt.internal.corext.refactoring.util.ChangedValueChecker.<init>(ChangedValueChecker.java:93)
        at org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring.evalStartAndEnd(ExtractTempRefactoring.java:1243)
        at org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring.createAndInsertTempDeclaration(ExtractTempRefactoring.java:1210)
        at org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring.createTempDeclaration(ExtractTempRefactoring.java:1434)
        at org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring.processSelectedExpression(ExtractTempRefactoring.java:885)
        at org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring.doCreateChange(ExtractTempRefactoring.java:830)
        at org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring.checkFinalConditions(ExtractTempRefactoring.java:736)
        at org.eclipse.jdt.internal.ui.text.correction.proposals.RefactoringCorrectionProposalCore.createTextChange(RefactoringCorrectionProposalCore.java:66)
        at org.eclipse.jdt.ui.text.java.correction.CUCorrectionProposal.createTextChangeViaDelegate(CUCorrectionProposal.java:288)
        at org.eclipse.jdt.ui.text.java.correction.CUCorrectionProposal.createTextChange(CUCorrectionProposal.java:255)
        - locked <0x0000000088b808e8> (a org.eclipse.jdt.internal.ui.text.correction.QuickAssistProcessor$RefactoringCorrectionProposalExtension)
        at org.eclipse.jdt.ui.text.java.correction.CUCorrectionProposal.createChange(CUCorrectionProposal.java:296)
        at org.eclipse.jdt.ui.text.java.correction.ChangeCorrectionProposal.getChange(ChangeCorrectionProposal.java:339)
        - locked <0x0000000088b808e8> (a org.eclipse.jdt.internal.ui.text.correction.QuickAssistProcessor$RefactoringCorrectionProposalExtension)
        at org.eclipse.jdt.ui.text.java.correction.ChangeCorrectionProposal.performChange(ChangeCorrectionProposal.java:132)
        at org.eclipse.jdt.internal.ui.text.correction.proposals.LinkedCorrectionProposal.performChange(LinkedCorrectionProposal.java:182)
        at org.eclipse.jdt.ui.text.java.correction.CUCorrectionProposal.apply(CUCorrectionProposal.java:228)
        at org.eclipse.jface.text.contentassist.CompletionProposalPopup.insertProposal(CompletionProposalPopup.java:1004)
        at org.eclipse.jface.text.contentassist.CompletionProposalPopup.insertSelectedProposalWithMask(CompletionProposalPopup.java:951)
        at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.widgetDefaultSelected(CompletionProposalPopup.java:697)
        at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:123)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
        at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4274)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
        at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4072)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3660)
```

```
""ForkJoinPool.commonPool-worker-4"" #72 daemon prio=5 os_prio=0 cpu=2718.75ms elapsed=24.15s allocated=881M defined_classes=1 tid=0x0000021425692280 nid=0x296c runnable  [0x000000b8827fe000]
   java.lang.Thread.State: RUNNABLE
        at org.eclipse.jdt.internal.core.index.Index.query(Index.java:172)
        - parking to wait for  <0x000000008190dc90> (a java.util.concurrent.ForkJoinPool)
        at org.eclipse.jdt.internal.core.search.matching.SuperTypeReferencePattern.queryIn(SuperTypeReferencePattern.java:280)
        at org.eclipse.jdt.core.search.SearchPattern.findIndexMatches(SearchPattern.java:2517)
        at org.eclipse.jdt.core.search.SearchPattern.findIndexMatches(SearchPattern.java:2489)
        at org.eclipse.jdt.internal.core.search.matching.MatchLocator.findIndexMatches(MatchLocator.java:309)
        at org.eclipse.jdt.internal.core.search.PatternSearchJob.search(PatternSearchJob.java:240)
        at org.eclipse.jdt.internal.core.search.SubTypeSearchJob.search(SubTypeSearchJob.java:63)
        at org.eclipse.jdt.internal.core.search.PatternSearchJob.search(PatternSearchJob.java:214)
        at org.eclipse.jdt.internal.core.search.PatternSearchJob.lambda$0(PatternSearchJob.java:150)
        at org.eclipse.jdt.internal.core.search.PatternSearchJob$$Lambda$1175/0x0000000100bc0928.call(Unknown Source)
        at java.util.concurrent.ForkJoinTask$AdaptedCallable.exec(java.base@17.0.10/ForkJoinTask.java:1428)
        at java.util.concurrent.ForkJoinTask.doExec(java.base@17.0.10/ForkJoinTask.java:373)
        at java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(java.base@17.0.10/ForkJoinPool.java:1182)
        at java.util.concurrent.ForkJoinPool.scan(java.base@17.0.10/ForkJoinPool.java:1655)
        at java.util.concurrent.ForkJoinPool.runWorker(java.base@17.0.10/ForkJoinPool.java:1622)
        at java.util.concurrent.ForkJoinWorkerThread.run(java.base@17.0.10/ForkJoinWorkerThread.java:165)

   Locked ownable synchronizers:
        - None
```

```
""Java indexing"" #35 daemon prio=4 os_prio=-1 cpu=0.00ms elapsed=253.24s allocated=208B defined_classes=0 tid=0x0000021422282a80 nid=0x7d4 in Object.wait()  [0x000000b880cff000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(java.base@17.0.10/Native Method)
        - waiting on <no object reference available>
        at java.lang.Object.wait(java.base@17.0.10/Object.java:338)
        at org.eclipse.jdt.internal.core.search.processing.JobManager.indexerLoop(JobManager.java:503)
        - locked <0x0000000082c00170> (a org.eclipse.jdt.internal.core.search.indexing.IndexManager)
        at org.eclipse.jdt.internal.core.search.processing.JobManager$$Lambda$754/0x000000010085aad8.run(Unknown Source)
        at java.lang.Thread.run(java.base@17.0.10/Thread.java:840)

   Locked ownable synchronizers:
        - None
```

@sorincarbunaru : are you sure it freezes **forever** or may be it will ""unfreeze"" in few minutes?
I see that a type hierarchy is created on main thread, which is not , let say, not optimal.

Seem to be added via c0e779e2349c0fe92e8961cfc8c8c4118cf6deb8  / #432","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56uC5F/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1317,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56ujBe,eclipse.jdt.ui,2059022430,1317,NA,sorincarbunaru,10512384,Sorin Carbunaru,,NA,2024-04-16T12:53:14Z,2024-04-16T12:53:14Z,"Um, I guess I will have to wait forever to see if it really freezes that long... Just kidding 😆...

I waited for 20 minutes and Eclipse was still frozen.

I would recommend you try the same scenario, so that you can also reproduce the issue consistently. You just need a fresh Eclipse, and a clone of this repo: https://github.com/oxygenxml/oxygen-git-client-addon. Then perform the variable extraction that I mentioned in a prevous comment, and you should have a frozen Eclipse. 😄 

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56ujBe/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1317,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56vKdN,eclipse.jdt.ui,2059183949,1317,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-16T14:06:47Z,2024-04-16T14:06:47Z,"> An example of code that trigers a freeze is in the https://github.com/oxygenxml/oxygen-git-client-addon repo: in ProjectMenuGitActionsProvider.doGitDiff(), I tried to extract pluginWS.getProjectManager() as a variable (with the action that also replaces all occurences).

@jjohnstn : could you try? I'm out, seeing the project in question uses maven :-)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56vKdN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1317,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56xSuk,eclipse.jdt.ui,2059742116,1317,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-04-16T18:58:23Z,2024-04-16T18:58:23Z,"@sorincarbunaru Could you provide some information about how to set up this plug-in for building within Eclipse?  I didn't see anything in the git repo.   For example, when trying to build this project, the pom.xml file is missing the parent pom and it complains about missing oxygen-sdk jar. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56xSuk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1317,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56z4da,eclipse.jdt.ui,2060420954,1317,NA,sorincarbunaru,10512384,Sorin Carbunaru,,NA,2024-04-17T05:43:57Z,2024-04-17T05:43:57Z,"@jjohnstn Sure. Try again with the POM file from the attached [pom.zip](https://github.com/eclipse-jdt/eclipse.jdt.ui/files/15006370/pom.zip). 


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56z4da/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1317,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM566aN0,eclipse.jdt.ui,2062132084,1317,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-04-17T20:07:42Z,2024-04-17T20:07:42Z,@sorincarbunaru Thanks.   I am able to reproduce now.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM566aN0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1317,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5683bV,eclipse.jdt.ui,2062776021,1317,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-04-18T00:32:57Z,2024-04-18T00:32:57Z,"Hi @sorincarbunaru When I go to: StandAlonePluginWorkspace and attempt to do an Open Type Hierarchy, Eclipse gets 95% of the way and then freezes for a very long time; so long a time I left home for a while and when I came back hours later it had finally finished.  The final hierarchy shows multiple trees based on various interfaces that lead to the given class.  I am going to look into tailoring a hierarchy call for the extract code to use as it is only interested in subtypes of the given type.  Either way, the length of time taken to do the hierarchy needs to be investigated.  Looking at the Extract logic itself, I can make it better so as to avoid doing an unnecessary type hierarchy call when the method declaration can be found easily, but in this case, the extraction would still cause the stall because the method in question is abstract.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5683bV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1317,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57OafD,eclipse.jdt.ui,2067376067,1317,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-04-19T23:01:41Z,2024-04-19T23:01:41Z,"@sorincarbunaru I have made a patch that removes the use of type hierarchy and replaces it with searching.  It works fast for the given scenario and addresses the freeze issue.  As mentioned, I believe that the BadLocation error should have been fixed by the recent version of Eclipse but if you have a scenario that causes the BadLocation without a freeze, please post.  If it isn't reproducible with current Eclipse or you can't remember the scenario, I would like to close this issue and you can either open a new issue or reopen this one when you are able to reproduce.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57OafD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1317,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57SuKU,eclipse.jdt.ui,2068505236,1317,NA,sorincarbunaru,10512384,Sorin Carbunaru,,NA,2024-04-22T05:14:15Z,2024-04-22T05:14:15Z,"@jjohnstn 

The `BadLocationException` indeed seems not to happen in Eclipse 2024-03 (4.31.0). So you can close this issue. Thanks!

I guess the fix for the freeze will most likely be available in v4.32 of Eclipse, right? Or is there a chance for some sort of a maintenance build for 4.31?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57SuKU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1317,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57YHKb,eclipse.jdt.ui,2069918363,1317,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-04-22T15:34:17Z,2024-04-22T15:34:17Z,"Thanks @sorincarbunaru Yes, the fix for the freeze will be available for 4.32 M2 and is already in the I20240421-1800 I-build and nightly I-builds from now on.  We do not do maintenance builds for non-catastrophic issues as there is always an up-coming I-build repo that can be used.  If you use the I-build specified above you will be between 4.32 M1 and 4.32 M2.  If you would rather wait for a milestone, there is the 4.32 M2 which is up-coming.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57YHKb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1318,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1318,eclipse.jdt.ui,2232158970,1318,"""No suggestions available"" for cast (should be import)",lbrayner,5733531,Leonardo,,CLOSED,2024-04-08T22:03:03Z,2024-07-15T18:27:27Z,"Consider the following code:

```java
import java.util.List;

public class CastImportCodeAction {

  @SuppressWarnings(""unchecked"")
  public static void main(String[] args) {
    List<String> languages = List.of(""Java"", ""Kotlin"");
    ((ArrayList<String>) languages).get(0);
  }
}
```

There are no fix suggestions available, where there should be a suggestion to `import java.util.ArrayList;`.

Eclipse
Version: 2023-12 (4.30.0)
Build id: 20231201-2043

![Screenshot from 2024-04-08 18-59-30](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/5733531/a70e461d-c2a8-4418-9d02-4534ba2fd181)

![Screenshot from 2024-04-08 19-00-00](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/5733531/064c9720-4df5-441f-9115-3c0f6423ff31)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1318/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1319,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1319,eclipse.jdt.ui,2233598388,1319,Save action removes necessary parentheses,Madjosz,28844868,,,CLOSED,2024-04-09T14:35:57Z,2024-04-12T21:35:14Z,"When activating the Save Action ""Code Style -> Expressions -> Use parentheses in expressions -> Only if necessary"" with the following code
```java
Integer i = 0;
(i++).toString();
```
the parentheses around `(i++)` will be removed leading to invalid code `i++.toString();`
> The left-hand side of an assignment must be a variable","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1319/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1321,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1321,eclipse.jdt.ui,2236875386,1321,[css themes] Floating Package Explorer view keeps blanking to white when clicking back and forth from the active source file and the code window,zhro,4738876,Matt D.,,CLOSED,2024-04-11T04:13:03Z,2024-04-11T14:22:17Z,"I don't know what the cause of this is, but the window keeps blanking to white when I click back and forth on the active source file between the IDE and Package Explorer. This only occurs when Package Explorer is a floating window.

I do not know how to provide a better example other than video or how to test this further. My workspace is large and I cannot reproduce this in a clean workspace.

This bug does NOT occur when the Project Explorer is docked. This is not ideal, as I use multiple monitors and prefer that my Project Explorer be floating and on a different screen.

https://youtu.be/nAi8kSye7Ug

I downloaded the latest Eclipse IDE for Java release (eclipse-java-2024-03-R-win32-x86_64.zip) with stock settings. All I did was import my workspace.

Version: 2024-03 (4.31.0)
Build id: 20240307-1437
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1321/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1321,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56KTkL,eclipse.jdt.ui,2049521931,1321,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-11T11:48:31Z,2024-04-11T11:48:31Z,"Looks like Windows or package specific, I haven't seen anything like this on Linux / plain SDK in any of SDK versions in the past.

This leads us to questions:
- is this a regression?
- if yes, in which version was it working?
- if not, can you disable Themes and try again?
- can you try latest SDK build from https://download.eclipse.org/eclipse/downloads/drops4/I20240410-1800/ is you see same issue?
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56KTkL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1321,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56LXtU,eclipse.jdt.ui,2049801044,1321,NA,zhro,4738876,Matt D.,,NA,2024-04-11T14:17:20Z,2024-04-11T14:17:20Z,"> is this a regression?
> if yes, in which version was it working?

I have actually experienced this issue for years. I just updated my Eclipse from a 2022 version to 2024, but I've had the problem before that. It wasn't until now that I filed a report. Because it is difficult to reproduce (I don't have this problem in a clean workspace), it's difficult to differentiate at which version this problem manifested, as the workspace may not have been in the right state to cause the problem.

> can you try latest SDK build 

I tried the latest SDK and the problem still exists.

> can you disable Themes and try again?

I can confirm that disabling themes solves the problem. This appears to be the cause or is at least link to the source.

Please let me know if there is any further testing that I can do.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56LXtU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1321,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56LY6i,eclipse.jdt.ui,2049805986,1321,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-11T14:19:43Z,2024-04-11T14:19:43Z,"> I can confirm that disabling themes solves the problem

With that I'm unfortunately out, I don't use them and therefore have no interest / free time to fixing them, sorry.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56LY6i/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1321,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56LaTg,eclipse.jdt.ui,2049811680,1321,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-11T14:22:16Z,2024-04-11T14:22:16Z,"Once more: since themes are provided by platform UI, please open the ticket here https://github.com/eclipse-platform/eclipse.platform.ui/issues and add the extra info from last comment that it is a long known issue and related to the css themes.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56LaTg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1323,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1323,eclipse.jdt.ui,2237090443,1323,"Cursor multi-select doesn't work with Ctrl+Shift when JDT ""smart caret"" feature is enabled",zhro,4738876,Matt D.,,OPEN,2024-04-11T07:29:58Z,2024-10-16T12:31:35Z,"The Eclipse multi-select feature breaks and drops back to single-cursor mode when using Ctrl+Shift with the ""smart caret"" feature enabled. This makes it largely useless, because I want to select either the whole variables or camel case portions at a time, not just a single character.

See here for an example video:

https://www.youtube.com/watch?v=lq-8kfnj8Ic

I am using the key bind ""Multi selection down relative to anchor selection"" to make my selection, placing the cursor on the right side of the variable, and then Ctrl+Shift+Left Arrow to try and select a larger portion of the variable. This drops back to single-cursor, instead of selecting across all cursors, as expected.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1323/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1323,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56Iv0l,eclipse.jdt.ui,2049113381,1323,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2024-04-11T07:40:11Z,2024-04-11T07:40:11Z,"Thanks. Would you be interested in trying to provide a PR that fixes it? I suspect it starts with finding the text symbol for ""Smart Caret"" in the properties file, then looking for usage of this symbol in the codebase and you'll probably find the preference symbol for it, and usage of this preference symbol should lead you to where the fix is to be applied.
I think it requires to handle the case of `textSelection instanceof MultiTextSelection` specifically.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56Iv0l/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1323,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6QDA3h,eclipse.jdt.ui,2416709089,1323,NA,Adrodoc55,168004630,Adrodoc,,NA,2024-10-16T12:31:33Z,2024-10-16T12:31:33Z,This seems like a duplicate of #301,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6QDA3h/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1328,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1328,eclipse.jdt.ui,2246843797,1328,Fix new class wizard to flag missing package name as error when module info exists,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-04-16T20:36:22Z,2024-04-18T22:55:24Z,"When creating a new Java project, the new default is to create a module-info.java file for the project.

Creating a new class for this project, only a warning is issued if the package name is missing but once created, the source marks the missing package as an error.

Change the wizard to flag the missing package name as an error instead of a warning in this case.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1328/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1328,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56x34D,eclipse.jdt.ui,2059894275,1328,NA,danthe1st,34687786,dan1st,,NA,2024-04-16T20:44:39Z,2024-04-16T20:44:39Z,Note: Even the warning is just because of the use of the unnamed package in general and it is unrelated to the module descriptor.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM56x34D/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1330,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1330,eclipse.jdt.ui,2246875028,1330,"Bug 572440 - [cleanup] Combine declaration and assignment of local variable during ""Remove overridden assignment""",jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-04-16T20:59:40Z,2024-04-18T20:07:53Z,"From: https://bugs.eclipse.org/bugs/show_bug.cgi?id=572440

==============================================================================================

Looking at https://git.eclipse.org/r/c/jdt/eclipse.jdt.debug/+/171078 it would be nice to have a clean-up which combines declaration and assignment of a local variable if both happen in two lines:

-----
Before:
BuildCommand result;
result = (BuildCommand) super.clone();
	
After:
BuildCommand result = (BuildCommand) super.clone();
------

IMHO this improves readability.

====================================================================================================

A further comment mentions that this functionality should be incorporated into ""Remove overridden assignment"".

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1330/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1332,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1332,eclipse.jdt.ui,2247455795,1332,Wrong code completion in template if a list of generic objects is used,laeubi,1331477,Christoph Läubrich,,OPEN,2024-04-17T06:05:35Z,2024-04-17T06:07:02Z,"Assume the following code:
```
package test;

import java.util.ArrayList;
import java.util.List;
import java.util.Map.Entry;

public class OfByOne {
	public static void main(String[] args) {
		List<Entry<String, String>> listOfEntryStrings = new ArrayList<>();
	}
}
```

if one performs a foreach template it looks like this:
```
public static void main(String[] args) {
	List<Entry<String, String>> listOfEntryStrings = new ArrayList<>();
	for (Entry<String, String> entry : listOfEntryStrings) {
		
	}
}
```
if one now cycles through to the `args` instead the result is the following invalid code (the type `String` has a extra `>` at the end):

```
public static void main(String[] args) {
	List<Entry<String, String>> listOfEntryStrings = new ArrayList<>();
	for (String> string : args) {
		
	}
}
```


https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1331477/1f4dd6d5-5040-4f73-8a8b-a570f62e3009

```
Eclipse SDK

Version: 2024-06 (4.32)
Build id: I20240401-1800
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1332/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1333,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1333,eclipse.jdt.ui,2248730723,1333,[JUnit] support launch configuration prototypes ,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,OPEN,2024-04-17T16:36:14Z,2024-04-19T14:01:49Z,"One use case is SWT development where I want multiple env variables controlling Gtk/Webkit/SWT/etc. switches to be done at once for a unit test I run.
This is continuation of https://bugs.eclipse.org/bugs/show_bug.cgi?id=536728","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1333/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1333,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM565L-W,eclipse.jdt.ui,2061811606,1333,NA,rgrunber,1417342,Roland Grunberg,,NA,2024-04-17T17:22:34Z,2024-04-17T17:22:34Z,I think we can salvage https://git.eclipse.org/r/c/jdt/eclipse.jdt.ui/+/157800/ and apply it. My comments from the initial review were addressed.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM565L-W/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1333,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM565UPi,eclipse.jdt.ui,2061845474,1333,NA,jabby,1883932,Gautier de Saint Martin Lacaze,gautier@jabby-techs.fr,NA,2024-04-17T17:34:18Z,2024-04-17T17:34:18Z,"I have no time to help here, but I'm happy that you opened this issue to continue on the previous work.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM565UPi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1333,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57KXWp,eclipse.jdt.ui,2066314665,1333,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2024-04-19T10:46:14Z,2024-04-19T10:46:14Z,https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1339 enables prototype support for the Generic Test view.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57KXWp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1336,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1336,eclipse.jdt.ui,2252377118,1336,[23] ImplicitTypeDeclaration cannot be resolved to a type,noopur2507,8749449,Noopur Gupta,,CLOSED,2024-04-19T08:14:37Z,2024-04-23T09:52:15Z,"Taking the latest code from BETA_JAVA23 branches of both jdt core and UI, I am getting the error ""ImplicitTypeDeclaration cannot be resolved to a type"" in HierarchicalASTVisitor. 

I can see ""org.eclipse.jdt.internal.compiler.ast.ImplicitTypeDeclaration"" but no API version in org.eclipse.jdt.core.dom.*.

@jarthana, any inputs?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1336/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1336,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57Smos,eclipse.jdt.ui,2068474412,1336,NA,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,NA,2024-04-22T04:38:55Z,2024-04-22T04:38:55Z,"I am not sure about the error. But looks like the DOM node is named `UnnamedClass`, which is not inline with the spec. I will fix this during the Java 23 work.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57Smos/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1336,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57dVLm,eclipse.jdt.ui,2071286502,1336,NA,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,NA,2024-04-23T02:18:34Z,2024-04-23T02:18:34Z,"OK, I see things have changed in the master branch wrt to the node name. I will do a merge.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57dVLm/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1336,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57e8ah,eclipse.jdt.ui,2071709345,1336,NA,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,NA,2024-04-23T08:22:16Z,2024-04-23T08:22:16Z,JDT Core in BETA_JAVA23 is now updated with master. The errors in the jdt.ui are gone now.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57e8ah/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1336,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57fn5j,eclipse.jdt.ui,2071887459,1336,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-04-23T09:52:15Z,2024-04-23T09:52:15Z,I have verified the same after pulling the latest code. Thanks.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57fn5j/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1337,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1337,eclipse.jdt.ui,2252449931,1337,Add Filter Mechanism for Target in Move Refactoring,ShahzaibIbrahim,49493944,Shahzaib Ibrahim,shahzaibibrahim96@gmail.com,OPEN,2024-04-19T08:53:35Z,2024-06-12T18:12:55Z,"## Current Behavior

The move refactoring provides a tree view in which the move target has to be selected. The target has to be searched manually within the complete project tree, as there is no search or filter mechanism, which is quite cumbersome when having a large number of projects.

![Image](https://github.com/vi-eclipse/Eclipse-JDT/assets/755472/8c6a850a-72c7-4708-b24d-2e6718904cd9)

## Expected Behavior

The target selection dialog for the move refactoring should provide a filtering mechanism, which at least allows to filter the project names or even the names of elements within the projects.

The filter should support common functionality like partial inputs and wildcards, i.e., `eclipse.*.tools` should, for example, match `org.eclipse.internal.tools`.

- [x] Provide a filter input box on top of the tree view that allows to filter for project name:
![Image](https://github.com/vi-eclipse/Eclipse-JDT/assets/755472/982d0481-12b9-4493-97a9-d3ff2be7e529)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1337/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1343,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1343,eclipse.jdt.ui,2255708223,1343,[23] Run Gerrit builds for JDT UI BETA_JAVA23 branch with latest Y-build,noopur2507,8749449,Noopur Gupta,,CLOSED,2024-04-22T06:40:09Z,2024-04-22T06:44:53Z,Run Gerrit builds for JDT UI BETA_JAVA23 branch with latest Y-build.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1343/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1346,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1346,eclipse.jdt.ui,2256626703,1346,Javadoc sections misaligned,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2024-04-22T14:03:40Z,2024-04-23T08:07:22Z,"Stumbled while looking at this code java doc: `FileSystems.newFileSystem((URI)null, null, null);`
Javadoc looks like on 4.30:

![image](https://github.com/eclipse-jdt/eclipse.jdt.core/assets/964108/b5eab38d-a059-4158-88ef-c49444801f50)

Javadoc looks like on 4.32:

![image](https://github.com/eclipse-jdt/eclipse.jdt.core/assets/964108/b94d18f0-ccb6-440c-8e98-2117278b1318)


Note the missing indentation of ""Parameters"", ""Returns"" and ""Throws"" section headers - this makes reading complex javadoc harder as it should be.  

The section headers should be aligned on left side, not on same column as the following content.

![image](https://github.com/eclipse-jdt/eclipse.jdt.core/assets/964108/814d6870-f386-442e-b9cd-2fb42e9e677c)

Also other headers (""Since"", ""See Also"") are now misaligned, like on `java.util.regex.Pattern.splitAsStream(CharSequence)`:

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/964108/1e847601-5b14-4065-a235-a9563a0f2238)

I assume all section headers are misaligned now :-(

This is a regression from https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/941","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1346/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1346,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57Wx6C,eclipse.jdt.ui,2069569154,1346,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-22T14:04:45Z,2024-04-22T14:04:45Z,@RedeemerSK : could you please check this one?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57Wx6C/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1346,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57cWHP,eclipse.jdt.ui,2071028175,1346,NA,RedeemerSK,36334098,Jozef Tomek,,NA,2024-04-22T22:04:01Z,2024-04-22T22:04:01Z,"@iloveeclipse  seems like it was broken in 4.31 already. Commit that broke it: https://github.com/eclipse-jdt/eclipse.jdt.ui/commit/cbc03c25f6059c774d8766bd7b02489c9df53acf

(I assume it's related to changes in JavadocContentAccess2.java )

Changing from using
`<dl> + <dd>`
HTML elements to
`<ul> + <li>`","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57cWHP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1346,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57eMTB,eclipse.jdt.ui,2071512257,1346,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-23T06:36:40Z,2024-04-23T06:36:40Z,@RedeemerSK : many thanks. I've created https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1351 for the fix.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57eMTB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1347,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1347,eclipse.jdt.ui,2256651922,1347,Eclipse gives up incremental build and goes systematically for full clean and rebuild,nbauma109,9403560,,,CLOSED,2024-04-22T14:13:06Z,2025-01-02T11:45:11Z,"Version :  Eclipse 2024-03

This issue seems to happen only on a large projects.

The following settings are activated :
- Windows -> Preferences -> Run/Debug -> Launching -> Build (if required) before launching
- Project -> Build Automatically

I experienced the following problems :
- The slightest edit on a file triggers a full clean and rebuild when I expect to take advantage of the incremental build.
- Launching a unit test or a main program triggers a full clean and rebuild even if nothing has been changed. Worse, once the build is done and the execution running, a new full clean and rebuild is triggered in background and causes NoClassDefFoundError random classes.
- The build happens to be to be stuck in an endless loop of clean and rebuild.

Important note: I do not use any integrated build tools such buildship (Gradle) or m2e (Maven).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1347/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1347,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57pGjv,eclipse.jdt.ui,2074372335,1347,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-24T08:22:05Z,2024-04-24T08:22:05Z,"Without steps to reproduce we can't help here. Obviously, you are not alone Eclipse user but we didn't had similar reports yet, so something is special in your case. Please try to understand what that ""special"" part is - extra Eclipse bundle installed, specific project structure, extra builders on the project, whatever...","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57pGjv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1347,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57q75a,eclipse.jdt.ui,2074852954,1347,NA,nbauma109,9403560,,,NA,2024-04-24T12:39:03Z,2024-04-24T12:39:03Z,"I have downloaded this version of Eclipse:

Eclipse IDE for Java Developers (includes Incubating components)

Version: 2024-03 (4.31.0)
Build id: 20240307-1437

Classpath file:
```xml
<?xml version=""1.0"" encoding=""UTF-8""?>
<classpath>
	<classpathentry including=""**/*"" kind=""src"" path=""src/main/java""/>
	<classpathentry including=""**/*"" kind=""src"" path=""src/main/resources/etc""/>
	<classpathentry excluding=""etc/**"" including=""**/*"" kind=""src"" path=""src/main/resources""/>
	<classpathentry kind=""src"" output=""build/classes/test"" path=""src/test/java"">
		<attributes>
			<attribute name=""test"" value=""true""/>
		</attributes>
	</classpathentry>
	<classpathentry kind=""src"" output=""build/classes/test"" path=""src/test/resources"">
		<attributes>
			<attribute name=""test"" value=""true""/>
		</attributes>
	</classpathentry>
	<classpathentry exported=""true"" kind=""con"" path=""org.eclipse.jdt.launching.JRE_CONTAINER""/>
	<classpathentry exported=""true"" kind=""lib"" path=""/path/to/some-library.jar"" sourcepath=""/path/to/some-library-sources.jar"">
		<attributes>
			<attribute name=""org.eclipse.jst.component.dependency"" value=""../""/>
		</attributes>
	</classpathentry>
        <!-- skipped other lib entries similar to this one -->
	<classpathentry kind=""output"" path=""build/classes/main""/>
</classpath>
```

Project file (builders) :

```xml
<?xml version=""1.0"" encoding=""UTF-8""?>
<projectDescription>
	<name>some-project</name>
	<comment/>
	<projects/>
	<natures>
		<nature>org.eclipse.jdt.core.javanature</nature>
		<nature>org.eclipse.wst.common.project.facet.core.nature</nature>
		<nature>org.eclipse.wst.common.modulecore.ModuleCoreNature</nature>
		<nature>org.eclipse.jem.workbench.JavaEMFNature</nature>
	</natures>
	<buildSpec>
		<buildCommand>
			<name>org.eclipse.jdt.core.javabuilder</name>
			<arguments/>
		</buildCommand>
		<buildCommand>
			<name>org.eclipse.wst.common.project.facet.core.builder</name>
			<arguments/>
		</buildCommand>
		<buildCommand>
			<name>org.eclipse.wst.validation.validationbuilder</name>
			<arguments/>
		</buildCommand>
	</buildSpec>
	<linkedResources/>
</projectDescription>
```

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57q75a/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1347,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57q82X,eclipse.jdt.ui,2074856855,1347,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-24T12:41:10Z,2024-04-24T12:41:10Z,"Could you please disable two `org.eclipse.wst` builders? If the problem disappears, please report to webtools project.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57q82X/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1347,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57rwhX,eclipse.jdt.ui,2075068503,1347,NA,nbauma109,9403560,,,NA,2024-04-24T14:20:14Z,2024-04-24T14:20:14Z,"Same issue without, unfortunately.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57rwhX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1347,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57rxgA,eclipse.jdt.ui,2075072512,1347,NA,nbauma109,9403560,,,NA,2024-04-24T14:22:01Z,2024-04-24T14:22:01Z,"Also, it appears that I have no component installed to deal with these configurations :

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/9403560/608d32c3-bdf6-4343-8d5f-f776268b5973)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57rxgA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1347,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5756Q1,eclipse.jdt.ui,2078778421,1347,NA,nbauma109,9403560,,,NA,2024-04-26T07:18:08Z,2024-04-26T07:18:08Z,"It has to do with the structure of the projects :
```
root
+---extensions
    +---projects
        +---some-project
```
All projects from the tree are General Projects except some-project which is a Java Project.

When I remove project root from workspace, the problem disappears.
When I add it back to the workspace, the problem reappears.

I could have only root as General Project and some-project as Java Project inside the workspace.
But even with these 2, I still have the issue.

Also, I tried to add a resource filter to exclude ""some-project"" from root, but it didn't help.
Even closing root project didn't help, only removing it helped.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5756Q1/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1347,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM577otz,eclipse.jdt.ui,2079230835,1347,NA,howlger,5197918,Holger Voormann,,NA,2024-04-26T11:47:51Z,2024-04-26T11:47:51Z,"It seems that your structure of projects causes **build cycles that need to be fixed on your side**.

When _Project > Build Automatically_ is enabled, a project builder is triggered by file changes. A build cycle occurs when a project builder _B_ is triggered by file changes made by a project builder _A_, and this in turn makes file changes that trigger again the project builder _A_ directly or via other project builders.

Especially if you have projects that depend on each other and/or are nested within each other, you must ensure that there are no build cycles. It is also possible to have a build cycle in a single project if there are more than one project builders, which does not apply in your case. Eclipse does not support nested Java projects.

In the **preferences _General > Workspace > Build_** you can specify the project build order and the maximum number of iterations when building with cycles. Changes in folders and files that have the attribute _Derived_ (right-click _Properties: Resource_) do not trigger project builders. In general, **avoid build cycles** and better also cyclical dependencies. It is the expected behavior and not a bug that a project builder is triggered by file changes, no matter if the changes are made in a project from inside or from outside the Eclipse IDE.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM577otz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1347,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM577pev,eclipse.jdt.ui,2079233967,1347,NA,howlger,5197918,Holger Voormann,,NA,2024-04-26T11:50:09Z,2024-04-26T11:50:09Z,This issue was [first asked on Stack Overflow](https://stackoverflow.com/q/78372771/6505250).,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM577pev/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1347,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57730U,eclipse.jdt.ui,2079292692,1347,NA,nbauma109,9403560,,,NA,2024-04-26T12:29:31Z,2024-04-26T12:29:31Z,"I'm not sure to follow you. You seem to imply that I have nested builders / nested Java projects.
That is not the case.

> All projects from the tree are General Projects except some-project which is a Java Project.

Below the project file of root project:

```xml
<?xml version=""1.0"" encoding=""UTF-8""?>
<projectDescription>
	<name>root</name>
	<comment></comment>
	<projects>
	</projects>
	<buildSpec>
	</buildSpec>
	<natures>
	</natures>
</projectDescription>
```


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57730U/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1347,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5777wE,eclipse.jdt.ui,2079308804,1347,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-26T12:39:42Z,2024-04-26T12:39:42Z,"If I understand your setup, the cycle is due the fact that root project includes every file from other projects. So after a build cycle every file touched by any other project is reported as changed in the root project, and I believe this could cause  the build to start yet another round.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5777wE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1347,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM578LR_,eclipse.jdt.ui,2079372415,1347,NA,nbauma109,9403560,,,NA,2024-04-26T13:12:50Z,2024-04-26T13:12:50Z,"I think that's excluded because:

- If I have these 2 as General Project (but not root) in the workspace, it causes no harm :
```
+---extensions
    +---projects
```
- If I have root project in the workspace, it causes harm even if it's closed","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM578LR_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1347,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM578Ord,eclipse.jdt.ui,2079386333,1347,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-26T13:20:53Z,2024-04-26T13:20:53Z,"If you could reduce your example to something that can be zipped and attached here, we could try to reproduce.

What you can do is to download latest I-Build from https://download.eclipse.org/eclipse/downloads/, create new workspace, add your projects there and check if anything changes. If not, try to remove content from projects till the problem disappears.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM578Ord/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1347,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM578S1P,eclipse.jdt.ui,2079403343,1347,NA,howlger,5197918,Holger Voormann,,NA,2024-04-26T13:30:57Z,2024-04-26T13:30:57Z,"@nbauma109 A plugin can also listen for file changes and then change files itself. It is therefore important that you test it with the Eclipse SDK without additionally installed plug-ins, and not with an Eclipse IDE package. (It happened to me once that a faulty plugin caused the effect you observed in a project with which this plugin was completely unrelated.)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM578S1P/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1347,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM578VL7,eclipse.jdt.ui,2079412987,1347,NA,nbauma109,9403560,,,NA,2024-04-26T13:36:32Z,2024-04-26T13:36:32Z,"I found the issue.

In root project, there's a classpath entry (sorry, I missed precisely that one in the classpath file) :

```xml
<classpathentry exported=""true"" kind=""lib"" path=""C:/root/client/resources"">
  <attributes>
    <attribute name=""org.eclipse.jst.component.nondependency"" value=""""/>
  </attributes>
</classpathentry>
```

If I change it to remove the `C:`, the issue disappears.:

```xml
<classpathentry exported=""true"" kind=""lib"" path=""/root/client/resources"">
  <attributes>
    <attribute name=""org.eclipse.jst.component.nondependency"" value=""""/>
  </attributes>
</classpathentry>
```

The downside is that root has to be in the workspace for that configuration to work, or the following error will show (expectedly):

`Project 'some-project' is missing required library: '\root\client\resources' `


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM578VL7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1347,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM578bBN,eclipse.jdt.ui,2079436877,1347,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-26T13:49:51Z,2024-04-26T13:49:51Z,"So `some-project` requires `root` project? Here is the cycle:  `some-project` builds, it updates the `root` project (because it includes everything), build is re-triggered to update `some-project` because of of it dependencies changed.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM578bBN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1347,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM578gRT,eclipse.jdt.ui,2079458387,1347,NA,nbauma109,9403560,,,NA,2024-04-26T14:01:48Z,2024-04-26T14:01:48Z,"That path `C:/root/client/resources` remains unchanged during the build. It can be used as long as `C:/root` is not introduced as a project into the workspace. Once it is introduced into the workspace, the classpath entry has to be changed from  `C:/root/client/resources` to `/root/client/resources`.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM578gRT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1347,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM58AMdG,eclipse.jdt.ui,2080425798,1347,NA,nbauma109,9403560,,,NA,2024-04-27T09:10:56Z,2024-04-27T09:10:56Z,"I couldn't reproduce with a sample project. I might have missed some other variable.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM58AMdG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1347,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZCz5t,eclipse.jdt.ui,2567650925,1347,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-02T11:45:11Z,2025-01-02T11:45:11Z,Closing after not enough information after months,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZCz5t/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1349,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1349,eclipse.jdt.ui,2258023932,1349,[23] Allow JDT to target Java 23 in compiler preferences,noopur2507,8749449,Noopur Gupta,,CLOSED,2024-04-23T06:07:04Z,2024-06-03T07:04:07Z,Allow JDT to target Java 23 in compiler preferences.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1349/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1349,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_wV_G,eclipse.jdt.ui,2143379398,1349,NA,howlger,5197918,Holger Voormann,,NA,2024-06-01T09:30:36Z,2024-06-01T09:30:36Z,"With this change, in the Eclipse SDK 4.32 RC2, in the **_New Java Project_** dialog, in the _Use an execution environment JRE:_ drop-down menu **`JavaSE-23` is offered as an option**. When in the preferences _Java > Installed JREs_, an [OpenJDK JDK 23 early-access build](https://jdk.java.net/23/) is configured, **creating a new Java project with `JRE System Library [JavaSE-23]` works fine** for me. **However**, the `.class` files generated by ecj in the `bin` folder will have the Java **class file version 66 (Java 22)** instead of 67 (Java 23).

Is this intended? If so, is there more information (what was the motivation to do this; why is this not labeled as beta; will this be done also for future versions; etc.)?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_wV_G/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1349,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_wWH7,eclipse.jdt.ui,2143379963,1349,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-06-01T09:32:38Z,2024-06-01T09:32:38Z,"It is a bug, it shouldn't be offered in 4.32.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_wWH7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1349,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_yI12,eclipse.jdt.ui,2143849846,1349,NA,howlger,5197918,Holger Voormann,,NA,2024-06-02T13:14:28Z,2024-06-02T13:14:28Z,"> It is a bug, it shouldn't be offered in 4.32.

Will it be fixed in the 4.32 release, or is it too late now?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_yI12/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1349,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_yLVs,eclipse.jdt.ui,2143860076,1349,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-06-02T13:45:36Z,2024-06-02T13:45:36Z,"> Will it be fixed in the 4.32 release, or is it too late now?

Too late.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_yLVs/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1349,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_0U9u,eclipse.jdt.ui,2144423790,1349,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-06-03T07:01:24Z,2024-06-03T07:01:24Z,"The PR with this issue was merged only in the BETA_JAVA23 branch and I don't see these code changes in the master branch either. Also, these changes should not have an impact on the New Java Project wizard and are only for the Compiler preferences.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_0U9u/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1349,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_0WBU,eclipse.jdt.ui,2144428116,1349,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-06-03T07:04:05Z,2024-06-03T07:04:05Z,"> With this change, in the Eclipse SDK 4.32 RC2, in the **_New Java Project_** dialog, in the _Use an execution environment JRE:_ drop-down menu **`JavaSE-23` is offered as an option**. When in the preferences _Java > Installed JREs_, an [OpenJDK JDK 23 early-access build](https://jdk.java.net/23/) is configured, **creating a new Java project with `JRE System Library [JavaSE-23]` works fine** for me. **However**, the `.class` files generated by ecj in the `bin` folder will have the Java **class file version 66 (Java 22)** instead of 67 (Java 23).
> 
> Is this intended? If so, is there more information (what was the motivation to do this; why is this not labeled as beta; will this be done also for future versions; etc.)?

Probably a result of https://github.com/eclipse-jdt/eclipse.jdt.debug/issues/419.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_0WBU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1352,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1352,eclipse.jdt.ui,2258103881,1352,API usage warning - ASTFlattener illegally references methods from RecordPattern,noopur2507,8749449,Noopur Gupta,,CLOSED,2024-04-23T06:55:35Z,2024-04-29T07:40:59Z,"org.eclipse.jdt.internal.corext.dom.ASTFlattener has API usage warnings - ASTFlattener illegally references method RecordPattern.getPatternType().

.api_filters file to be updated.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1352/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1352,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57eyax,eclipse.jdt.ui,2071668401,1352,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-04-23T08:00:13Z,2024-04-23T08:00:13Z,@jarthana - org.eclipse.jdt.core.dom.RecordPattern and its methods should be standard features now so @noreference should be removed from these API classes and methods. That should fix the API usage warnings in JDT UI.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57eyax/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1352,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57wtFg,eclipse.jdt.ui,2076365152,1352,NA,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,NA,2024-04-25T05:07:29Z,2024-04-25T05:07:29Z,"> @jarthana - org.eclipse.jdt.core.dom.RecordPattern and its methods should be standard features now so @noreference should be removed from these API classes and methods. That should fix the API usage warnings in JDT UI.

This was fixed via https://github.com/eclipse-jdt/eclipse.jdt.core/pull/2379","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57wtFg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1352,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57xVMv,eclipse.jdt.ui,2076529455,1352,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-04-25T07:17:18Z,2024-04-25T07:17:18Z,"> > @jarthana - org.eclipse.jdt.core.dom.RecordPattern and its methods should be standard features now so @noreference should be removed from these API classes and methods. That should fix the API usage warnings in JDT UI.
> 
> This was fixed via [eclipse-jdt/eclipse.jdt.core#2379](https://github.com/eclipse-jdt/eclipse.jdt.core/pull/2379)

What about TypePattern, GuardedPattern, or any other such APIs?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57xVMv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1353,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1353,eclipse.jdt.ui,2258168145,1353,Moving methods to interfaces causes syntax errors,DongChunHao,77560508,DongChunHao,,CLOSED,2024-04-23T07:33:31Z,2024-05-08T16:41:32Z,"Eclipse version：2023-9

Repeat the steps：
1. select “methodToMove”
2.  click “Refactor-move method”
3. tratget class ""TargetClass ""

class SourceClass {
 TargetClass target;
public SourceClass(TargetClass target) {
    this.target = target;
}
private final void methodToMove(TargetClass target) {
    // Method implementation
	 this.target = target;
}
}
interface TargetClass {
void methodInInterface();
}


Refactoring result:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/77560508/5a1fb6d9-5b2c-48ef-922d-0d332a5977e5)

Expected result： Check the method moved to the interface and issue a warning before refactoring if there are syntax errors","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1353/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1354,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1354,eclipse.jdt.ui,2258172216,1354,Move method dependency type conversion call causes syntax errors,DongChunHao,77560508,DongChunHao,,CLOSED,2024-04-23T07:35:50Z,2024-06-25T14:54:00Z,"Eclipse version：2023-9

Repeat the steps：

1. select “moveMethod”
2. click “Refactor-move method”
3. tratget class ""TargetClass ""

Refactoring result:

![Uploading image.png…]()

Expected result： Check the method moved to the interface and issue a warning before refactoring if there are syntax errors","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1354/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1354,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57eqFo,eclipse.jdt.ui,2071634280,1354,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-04-23T07:39:37Z,2024-04-23T07:39:37Z,@DongChunHao : please provide at least minimal code example that triggers the error and please explain **which** error do you observe.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57eqFo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1354,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6CfEAK,eclipse.jdt.ui,2189180938,1354,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-06-25T14:53:59Z,2024-06-25T14:53:59Z,Closing due to missing information,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6CfEAK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1355,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1355,eclipse.jdt.ui,2258179583,1355,Inconsistent behavior caused by refactoring extraction methods,DongChunHao,77560508,DongChunHao,,CLOSED,2024-04-23T07:39:42Z,2024-05-03T15:45:35Z,"Eclipse version：2023-9

Repeat the steps：

1. select “return;”
2. click “Refactor-extract method”


public class OriginalClass {
	public void foo() {
		Object runnable= null;
		Object[] disposeList= null;
		for (int i=0; i < disposeList.length; i++) {
			if (disposeList [i] == null) {
				disposeList [i] = runnable;
				// extract method
				return;
			}
		}
	}
}

refactoring result:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/77560508/cd7bd403-03a7-423b-a265-0e92a2a0a7b5)

Expected result：Missing ""return"" after refactoring, extracting a return statement should provide a warning prompt
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1355/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1355,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57eyOt,eclipse.jdt.ui,2071667629,1355,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2024-04-23T07:59:45Z,2024-04-23T07:59:45Z,It is recommended that you check whether the issue still appears with latest release (2024-03 now) as some of the things could have been fixed already (or not but if you check that you would ensure that committers look only at current issues).,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM57eyOt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1356,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1356,eclipse.jdt.ui,2258184140,1356,Extraction method causes syntax errors,DongChunHao,77560508,DongChunHao,,CLOSED,2024-04-23T07:42:20Z,2024-05-04T00:05:41Z,"Eclipse version：2023-9

Repeat the steps：

1. select “ this.value = value;”
2. click “Refactor-extract method”

class ExtractMethodTest {
	 private final int value;
	    public ExtractMethodTest(int value) {
	    	// extract method
	        this.value = value;
	    }
}

refactoring result:
![Uploading image.png…]()

Expected result: Check for grammar errors before and after refactoring for extraction method refactoring. If there are any grammar errors, issue a warning before refactoring
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1356/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1357,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1357,eclipse.jdt.ui,2258188743,1357,Inconsistent behavior caused by extraction methods,DongChunHao,77560508,DongChunHao,,CLOSED,2024-04-23T07:44:57Z,2024-05-10T14:57:39Z,"Eclipse version：2023-9

Repeat the steps：

1. select “switch (value) {....return result;”
2. click “Refactor-extract method”

class ExtractMethodTest {
    private final int value;

    public ExtractMethodTest(int value) {
        this.value = value;
    }

    public synchronized int calculate() {
        int result;
        switch (value) {
            case 1:
                result = value * 2;
                break;
            case 2:
                result = value * 3;
                break;
            default:
                result = value * 4;
                break;
        }
        return result;
    }
}

refactoring result：
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/77560508/c1b2b51b-44f3-46fb-816b-025e221704f1)

After extracting the method, if inline refactoring is performed, the code will be inconsistent with the original code and an additional local variable will be declared

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1357/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1358,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1358,eclipse.jdt.ui,2258192580,1358,Inline method refactoring leads to syntax errors,DongChunHao,77560508,DongChunHao,,CLOSED,2024-04-23T07:47:07Z,2024-05-02T16:23:11Z,"Eclipse version：2023-9

Repeat the steps：

1. select “staticMethod()”
2 . click “Refactor-inlinemethod”

class MyClass {
    private static int value = 10;
    public static void staticMethod() {
        System.out.println(""Value: "" + value);
    }
}

class AnotherClass {
    private int value = 20;
    public void callStaticMethod() {
        new MyClass().staticMethod(); 
    }
}

Refactoring result:

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/77560508/673cb4b5-e390-4912-b9c5-3972abba03ba)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1358/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1360,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1360,eclipse.jdt.ui,2258201736,1360,Inline method refactoring leads to changes in refactoring access permissions,DongChunHao,77560508,DongChunHao,,CLOSED,2024-04-23T07:52:19Z,2024-04-30T16:00:24Z,"Eclipse version：2023-9

Repeat the steps：

1. select “originalMethod() ”
2. click “Refactor-inlinemethod”

class OriginalClass {
	private boolean flag = false;
    public synchronized void originalMethod() throws InterruptedException {
        // Some logic here
        flag = true;
        notify();
    }

    public void callerMethod() throws InterruptedException {
            	originalMethod() ;
    }
	}

refactoring result:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/77560508/00e328b9-2db0-41d4-9046-155970a7c3ce)

Expected behavior: Before refactoring, inline methods contain access permissions for synchronization modifiers, but are missing after inlining; Synchronized block addition for inline method body code","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1360/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1361,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1361,eclipse.jdt.ui,2258210507,1361,Renaming method refactoring leads to changes in code behavior,DongChunHao,77560508,DongChunHao,,CLOSED,2024-04-23T07:57:04Z,2024-05-11T00:26:29Z,"Eclipse version：2023-9

Repeat the steps：

1. select “method”
2. click “Refactor-rename method”
3.  new name ""valueOf""

refactoring result:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/77560508/e06f20bb-322f-4f2d-90ba-3a1b2f2cf853)

Expected behavior: Check if the new method name conflicts with the imported method name and provide a prompt","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1361/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1362,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1362,eclipse.jdt.ui,2258430676,1362,[23] Remove String Template preview feature from JDT UI,noopur2507,8749449,Noopur Gupta,,CLOSED,2024-04-23T09:47:49Z,2024-05-03T05:47:13Z,See https://github.com/eclipse-jdt/eclipse.jdt.core/issues/2353.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1362/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1364,eclipse.jdt.ui,2258517796,1364,"add a ""sticky scroll"" feature",Madjosz,28844868,,,CLOSED,2024-04-23T10:30:11Z,2024-06-10T20:57:02Z,"[Monaco Editor](https://github.com/microsoft/monaco-editor) added ""sticky scroll"" feature with v0.35.0 somewhere around February 2023 and thus it is supported in VS Code, Eclipse Theia and the web editor of e.g. GitHub.

This feature lets the current code section stick to the top of the editor when it scrolls out of the viewport so that current class and method (and I think I even saw loops/ifs/try blocks in some languages) are still visible to the user:
![Sticky Scroll in Eclipse Theia](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/28844868/c8f0e230-407b-4fc3-8847-414b0d091d56)

It would be nice to have this feaure also in the Eclipse Java editor.

Maybe this needs to be implemented in Eclipse Platform UI first. I saw that there already is an issue which somewhat requests this feature: https://github.com/eclipse-platform/eclipse.platform.ui/issues/1719
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1364/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AspQ7,eclipse.jdt.ui,2159187003,1364,NA,Christopher-Hermann,79514265,Christopher Hermann,,NA,2024-06-10T20:03:10Z,2024-06-10T20:03:10Z,Implemented with https://github.com/eclipse-platform/eclipse.platform.ui/issues/1719. Issue can be closed in my opinion.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AspQ7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1364,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6As9ja,eclipse.jdt.ui,2159270106,1364,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-06-10T20:57:02Z,2024-06-10T20:57:02Z,Thanks @Christopher-Hermann,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6As9ja/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1366,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1366,eclipse.jdt.ui,2262051695,1366,Fix string concat to MessageFormat and String.format quick-fixes to escape necessary characters,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-04-24T19:42:05Z,2024-04-24T22:26:36Z,"When converting a string concat to MessageFormat or String.format, certain characters must be escaped properly.

For MessageFormat, single quotes must be represented by ''.  This is already done by the code.  Open and close parentheses ({ and }) must be escaped by surrounding them in single quotes ('{' and '}').  The sequence {} must be represented as '{}' as '{''}' is actual {'}.

For String.format, the % character must be escaped by a double %%.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1366/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1370,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1370,eclipse.jdt.ui,2264475459,1370,Refactor remove overridden assignment clean-up to jdt.core.manipulation for jdt.ls use,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-04-25T20:52:28Z,2024-04-30T01:05:29Z,"Refactor the ""Remove overrideen assignment clean-up"" so jdt.ls can use it.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1370/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1372,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1372,eclipse.jdt.ui,2265339371,1372,Code formatter: Suboptimal intent of method arguments ,jubax,10562923,Juergen Baier,baier@semedy.com,OPEN,2024-04-26T09:17:56Z,2024-05-13T12:01:27Z,"The String.formatted() method is not correctly intended for text blocks:
I want:
```
StringBuilder sql = new StringBuilder();
sql.append(""""""
        INSERT INTO %s (%s) SELECT DISTINCT %s FROM %s
        """""".formatted(
                ""1"",
                ""2"",
                ""3"",
                ""4""));
```
but I get
```
StringBuilder sql = new StringBuilder();
sql.append(""""""
        INSERT INTO %s (%s) SELECT DISTINCT %s FROM %s
        """""".formatted(
        ""1"",
        ""2"",
        ""3"",
        ""4""));
```
For regular strings the formatting is better. But I think it is wrong that the formatting does not add another indentation level.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1372/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1372,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM59nDJk,eclipse.jdt.ui,2107388516,1372,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-05-13T12:00:38Z,2024-05-13T12:00:38Z,"The ""problem"" is not specific to `.formatted()` but applies to all methods with argument. Example:
```
public class C {
	public static void main(String[] args) {
		new String(""""""
				hello
				"""""".formatted(
				""HalloVeryLongStringHalloVeryLongStringHalloVeryLongStringHalloVeryLongStringHalloVeryLongStringHalloVeryLongString""));
		new String(""hello"".formatted(
				""HalloVeryLongStringHalloVeryLongStringHalloVeryLongStringHalloVeryLongStringHalloVeryLongStringHalloVeryLongString""));
		new Integer(""""""
				hello
				"""""".indexOf(
				""HalloVeryLongStringHalloVeryLongStringHalloVeryLongStringHalloVeryLongStringHalloVeryLongStringHalloVeryLongString""));
		new Integer(""hello"".indexOf(
				""HalloVeryLongStringHalloVeryLongStringHalloVeryLongStringHalloVeryLongStringHalloVeryLongStringHalloVeryLongString""));
	}
}

```
however i don't see that regular Strings are any other in my simplified example.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM59nDJk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1373,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1373,eclipse.jdt.ui,2266439058,1373,Refactor elseif cleanup to jdt.core.manipulation for use by jdt.ls,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-04-26T20:11:10Z,2024-04-30T01:06:04Z,"The elseif cleanup which merges:

```
if (condition) {
  code
} else {
  if (condition2) {
     code
  }
}
```

into:

```
if (condition) {
  code
} else if (condition2) {
  code2
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1373/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1376,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1376,eclipse.jdt.ui,2268213594,1376,[23] Add AST level 23 to AST view,noopur2507,8749449,Noopur Gupta,,CLOSED,2024-04-29T06:17:17Z,2024-05-10T07:18:38Z,Add AST level 23 to AST view.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1376/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1377,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1377,eclipse.jdt.ui,2268354159,1377,Code completion feature error,xionggit,9440806,,,CLOSED,2024-04-29T07:48:29Z,2025-01-17T11:59:55Z,"""I'm using the latest version of Eclipse, version 202403, on Windows 10. My computer also has historical versions of Eclipse, 202206 and 202309. I'm using the DevStyle plugin.""
""I often find that when I'm writing code, the auto-suggested and auto-completed code often results in the deletion of carriage returns or line breaks, or selects additional characters such as ')' when code is automatically deleted. Please refer to the attached GIF recording, Pay attention to the mouse hovering position.""
![eclipse-error](https://github.com/eclipse-platform/eclipse.platform/assets/9440806/387afa41-d058-4c86-b11e-da231cc4af89)
Eclipse installation Destails 的Configuration（""Configuration option under 'Installation Details' in Eclipse""）
[config.zip](https://github.com/eclipse-platform/eclipse.platform/files/15090233/config.zip)


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1377/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1377,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM58HOpE,eclipse.jdt.ui,2082269764,1377,NA,humphreygao,52394598,,,NA,2024-04-29T09:30:04Z,2024-04-29T09:30:04Z,"Please study these two configurations. I guess you select **Completion overwrite**.
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/52394598/786f6ad7-9f32-4209-a244-d812cf507072)

Here are the suggestions I have come up with regarding this issue:
1. the IDE could automatically selects Completion inserts or completion overwrites according to the scenario.
2. It is not necessary to automatically fill in parameters, because they are basically not the parameters you want. Therefore, the IDE should not check **Fill method arguments and show guessed arguments** by default. Unless the code completion make a breakthrough -- the estimated method parameters are correct after statistics.

The above two points have inertia: it is estimated that many contributors or users disagree. In the first point, I don't know the difficulty of implementation, but VS Code is based on eclipse, and it does a good job.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM58HOpE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1377,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM58HTOi,eclipse.jdt.ui,2082288546,1377,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-04-29T09:40:30Z,2024-04-29T09:40:30Z,Please use english only.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM58HTOi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1377,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM58HV1y,eclipse.jdt.ui,2082299250,1377,NA,xionggit,9440806,,,NA,2024-04-29T09:46:08Z,2024-04-29T09:46:08Z,"> 你研究这两个配置就会了，你选择了Completion overwrites。 ![image](https://private-user-images.githubusercontent.com/52394598/326386736-786f6ad7-9f32-4209-a244-d812cf507072.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQzODQxOTQsIm5iZiI6MTcxNDM4Mzg5NCwicGF0aCI6Ii81MjM5NDU5OC8zMjYzODY3MzYtNzg2ZjZhZDctOWYzMi00MjA5LWEyNDQtZDgxMmNmNTA3MDcyLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA0MjklMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNDI5VDA5NDQ1NFomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWQwYzVlMDYyMjQ0MjQ1NTE1ZDk4MTlmZjE2OWY2MTc0ZThmMTk2NTgwZTdlNWJjZWM4OGI5YWI2ZWQ1MTQ0NWYmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.ystPkmiKoEHqXU4kGxG0F7i9QsJz85Mf_Yo_qtD3HnU)
> 
> 所以现在应该要求： 1.代码提示时，IDE根据场景，自动选择Completion inserts或者completion overwrites。 2.不需要在代码提示时，自动填充参数，因为基本都不是自己想要的参数。因此IDE应该默认不勾选 Fill method arguments and show guessed arguments，除非代码提示有所突破，猜出来的方法参数经过统计大概率都是对的。
> 
> 上述两点，都有惯性：估计有很多人贡献者或者用户不同意。其中，第1点不知道实现难度啊，但VS Code是基于eclipse的，它就做的蛮不错的，我估计Eclipse实现难度不算太大。

是最佳选择的字符多了。","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM58HV1y/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1377,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM58HXNt,eclipse.jdt.ui,2082304877,1377,NA,xionggit,9440806,,,NA,2024-04-29T09:49:28Z,2024-04-29T09:49:28Z,"> Please use english only.

""I'm using the latest version of Eclipse, version 202403, on Windows 10. My computer also has historical versions of Eclipse, 202206 and 202309. I'm using the DevStyle plugin.""

""I often find that when I'm writing code, the auto-suggested and auto-completed code often results in the deletion of carriage returns or line breaks, or selects additional characters such as ')' when code is automatically deleted. Please refer to the attached GIF recording, Pay attention to the mouse hovering position.""

""Inserting the best guess parameters sometimes selects a range of 1-2 characters too much, or automatically selects the next line of code, resulting in confusion.""","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM58HXNt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1377,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZC6yN,eclipse.jdt.ui,2567679117,1377,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-02T12:08:38Z,2025-01-02T12:08:38Z,"This issue does not give enough information  Please describe a single usecase as text. 1. how to reproduce, 2. what happens 3. what is expected to happen.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZC6yN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1382,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1382,eclipse.jdt.ui,2273940535,1382,Refactor MultiCatchCleanUp to jdt.core.manipulation for jdt.ls usage,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-05-01T18:05:14Z,2024-05-02T16:20:39Z,Refactor the MultiCatchCleanUp which merges catch clauses with common code into a multi-catch statement to jdt.core.manipulation so that jdt.ls can use it.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1382/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1384,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1384,eclipse.jdt.ui,2273973067,1384,Don't use text block when converting a single line concat to MessageFormat or String.format,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-05-01T18:30:17Z,2024-05-02T00:35:44Z,"When the following gets converted to MessageFormat it uses a text block, but should remain using a regular string to keep it on one line.

public void foo(String name, String profession) {
   String title = ""Name "" + name + "" Profession "" + profession;
   ...
}","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1384/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1394,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1394,eclipse.jdt.ui,2286397609,1394,"Spurious ""Unexpected runtime error while computing a text hover""",kohlschuetter,822690,Dr. Christian Kohlschütter,,CLOSED,2024-05-05T11:53:29Z,2024-05-08T22:18:29Z,"2024-06 M2
eclipse.buildId=4.32.0.20240502-0721
Temurin-21.0.3+9 on macOS 14.4.1 arm64

```
Unexpected runtime error while computing a text hover
java.lang.StringIndexOutOfBoundsException: Range [-1, 6) out of bounds for length 410
	at java.base/jdk.internal.util.Preconditions$1.apply(Preconditions.java:55)
	at java.base/jdk.internal.util.Preconditions$1.apply(Preconditions.java:52)
	at java.base/jdk.internal.util.Preconditions$4.apply(Preconditions.java:213)
	at java.base/jdk.internal.util.Preconditions$4.apply(Preconditions.java:210)
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:98)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckFromToIndex(Preconditions.java:112)
	at java.base/jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:349)
	at java.base/java.lang.AbstractStringBuilder.replace(AbstractStringBuilder.java:1015)
	at java.base/java.lang.StringBuffer.replace(StringBuffer.java:497)
	at org.eclipse.jdt.core.manipulation.internal.javadoc.CoreJavadocAccessImpl.handlePreCounter(CoreJavadocAccessImpl.java:811)
	at org.eclipse.jdt.core.manipulation.internal.javadoc.CoreJavadocAccessImpl.handleInLineTextElement(CoreJavadocAccessImpl.java:794)
	at org.eclipse.jdt.core.manipulation.internal.javadoc.CoreJavadocAccessImpl.handleContentElements(CoreJavadocAccessImpl.java:772)
	at org.eclipse.jdt.core.manipulation.internal.javadoc.CoreJavadocAccessImpl.handleContentElements(CoreJavadocAccessImpl.java:733)
	at org.eclipse.jdt.core.manipulation.internal.javadoc.CoreJavadocAccessImpl.elementToHTML(CoreJavadocAccessImpl.java:352)
	at org.eclipse.jdt.core.manipulation.internal.javadoc.CoreJavadocAccessImpl.toHTML(CoreJavadocAccessImpl.java:162)
	at org.eclipse.jdt.core.manipulation.internal.javadoc.CoreJavadocAccess.javadoc2HTML(CoreJavadocAccess.java:436)
	at org.eclipse.jdt.core.manipulation.internal.javadoc.CoreJavadocAccess.getHTMLContentFromSource(CoreJavadocAccess.java:369)
	at org.eclipse.jdt.core.manipulation.internal.javadoc.CoreJavadocAccess.getHTMLContent(CoreJavadocAccess.java:230)
	at org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2.getHTMLContent(JavadocContentAccess2.java:49)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:717)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:709)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
```

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1394/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1394,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM59QHYY,eclipse.jdt.ui,2101376536,1394,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-05-08T07:31:24Z,2024-05-08T07:31:24Z,"Regression from 9d30e80eb220b20f246d48f5d07a260fe8ac3f61.

@jjohnstn : could you please take a look? Seem that the new code (moved now to `CoreJavadocAccessImpl.handlePreCounter()`) can't deal with broken javadoc (missing `</code>` tag).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM59QHYY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1394,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM59QHYj,eclipse.jdt.ui,2101376547,1394,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-05-08T16:44:55Z,2024-05-08T16:44:55Z,"@iloveeclipse Will take a look
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM59QHYj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1390,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1390,eclipse.jdt.ui,2280288859,1390,Javadoc tooltips (hovering labels) are sometimes too small,vl-dp,169031120,,,OPEN,2024-05-06T08:02:29Z,2024-05-27T14:28:56Z,"The Javadoc tooltips (hovering labels) adapt to the amount of documentation that is provided for the Java declaration in question, but the way the size of the labels is calculated could be improved. More precisely, quite often it is too short and will cut off, for example, a ""@returns"" clause of a Javadoc snippet, even if enough screen space is available. I understand that those labels should not waste space but I personally would find it helpful when viewing a Java methods documentation to see most of the relevant documentation clauses, like parameters and return value, without resizing the label.

I have attached parts of three screenshots to illustrate what I mean.

The first image shows how even for a tiny Java method with only two parameters and a short introductory sentence the ""@return"" clause is omitted from the initially visible contents of the tooltip:
![javadoc_tooltip_returns_clause_cut_even_if_label_could_grow](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/169031120/23198f01-26b5-4b0b-9b6b-06068a93e254)

The second image confirms that the labels size does in fact adapt to the amount of documentation. But as the documentation has grown, the label still cuts out relevant content, even though just a few more pixels in height would suffice to render the whole Javadoc snippet:
![javadoc_tooltip_grown_but_now_throws_clause_is_cut](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/169031120/7197539f-0a34-4f66-95f3-b5e8d27a1ecf)

The final screenshot just shows, that if more elements of the same kind are added to a documentation snippet, the tooltip label also does grow, but a relevant ""@returns"" clause is still invisible:
![javadoc_tooltip_cuts_of_returns_clause](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/169031120/e9ac6b37-0981-4bea-81df-8d5e6f933ac6)

I observe this behavior on Windows 10 with all recent Eclipse releases up to and including 2024-03 (precisely
Version: 2024-03 (4.31.0)
Build id: 20240307-1437
).

Only if consensus exists for that, I do suggest to render the complete Javadoc snippet that is provided for a Java declaration within Eclipses documentation tooltip (hovering label) unless a maximum size would be exceeded.

I'd like to link three related comments about Eclipses Javadoc tooltips that were made outside of Eclipses issue-tracking, which resemble my issue. I am not involved there in any way.

https://stackoverflow.com/questions/1988920/how-to-increase-content-assist-tooltip-size-in-eclipse-pdt
https://stackoverflow.com/questions/41315314/changing-the-default-size-of-the-docstring-hover-tooltip-in-eclipse-pydev
https://stackoverflow.com/questions/9735022/how-to-adjust-the-default-size-of-the-javadoc-popup-window-in-eclipse?rq=4

For reference, I previously submitted this issue to the old Eclipse-Bugzilla, which is still linked in this sub-projects documentation: https://bugs.eclipse.org/bugs/show_bug.cgi?id=331344
(There is no additional information from my side there)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1390/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1390,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM59mio-,eclipse.jdt.ui,2107255358,1390,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-05-13T10:50:35Z,2024-05-13T10:50:35Z,@vl-dp can you provide a Pull request to make it any better?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM59mio-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1390,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM594Ec2,eclipse.jdt.ui,2111850294,1390,NA,vl-dp,169031120,,,NA,2024-05-15T08:08:50Z,2024-05-15T08:08:50Z,"> @vl-dp can you provide a Pull request to make it any better?

No, unfortunately for the foreseeable future I can't. I'd be be new to the Eclipse source code and at the moment I cannot even compile the project. My try to setup and build the project in ""Eclipse for Eclipse Committers"" failed - there are many errors pertaining to missing or incompatible declarations. Maybe that is because the Eclipse Git repositories are in transition.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM594Ec2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1390,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_LCMn,eclipse.jdt.ui,2133599015,1390,NA,XelaNimed,685832,XelaNimed,xela.nimed@gmail.com,NA,2024-05-27T14:28:22Z,2024-05-27T14:28:22Z,"@vl-dp In some cases, opening a JavaDoc in the browser helps me.
When the JavaDoc tooltip pops up, press `F2` to switch focus from the code editor to the tooltip. After this, an icon for opening the JavaDoc in the browser will appear at the bottom of the tooltip.

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/685832/44694c54-22a1-4e9a-a698-c5df336072eb)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_LCMn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1392,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1392,eclipse.jdt.ui,2282444860,1392,Remove unused API filters,noopur2507,8749449,Noopur Gupta,,CLOSED,2024-05-07T07:03:46Z,2024-05-07T08:21:23Z,Remove unused API filters.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1392/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1396,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1396,eclipse.jdt.ui,2286515240,1396,Refactor UnnecessaryArrayCreation cleanup/quick-assist to jdt.core.manipulation for use with jdt.ls,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-05-08T21:37:02Z,2024-05-10T20:14:39Z,See title,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1396/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1396,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM59ewO6,eclipse.jdt.ui,2105213882,1396,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-05-10T20:14:39Z,2024-05-10T20:14:39Z,Fixed by #1397,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM59ewO6/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1401,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1401,eclipse.jdt.ui,2289109838,1401,[23] Merge master branch into BETA_JAVA23 branch,noopur2507,8749449,Noopur Gupta,,CLOSED,2024-05-10T07:14:31Z,2024-05-10T07:15:36Z,Merge master branch into BETA_JAVA23 branch.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1401/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1401,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM59aRmm,eclipse.jdt.ui,2104039846,1401,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-05-10T07:15:32Z,2024-05-10T07:15:32Z,Done - https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1400.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM59aRmm/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1403,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1403,eclipse.jdt.ui,2290897545,1403,Some unicode characters in a String cause it to be rendered incorrectly,nlisker,37422899,,,CLOSED,2024-05-11T13:23:01Z,2024-05-13T07:54:40Z,"The character `\u2B73` (⭳) causes incorrect rendering in a string. Taking this string as a starting point:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/37422899/2b7b10f8-640e-40cb-9a3e-213e770f2eb0)
1. Adding that character at the start of the string changes its font:
  ![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/37422899/9a706a71-a3d6-4a04-a251-a6fb36a958db)
2. Adding it at the end causes it to be rendered incorrectly:
  ![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/37422899/93fdecb6-acd0-4946-bb89-22a1c91cd73a)
3. Adding it next to a non-bugged unicode character, like `\u2190` (←) allows it to be rendered correctly:
  ![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/37422899/550fa067-e670-4de8-a637-e0a048b9e3ee)
  but only if ordered correctly:
  ![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/37422899/509c07e7-a7cb-4e56-bea7-978073ef6d73)
  ![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/37422899/08d4ef02-04aa-4332-81f6-4b3f45d0fe41)

The same problem occurs with `\u2BA0` (⮠ ).

I assume it has to do with unicode extended characters and the codepoints handling of the text control.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1403/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1403,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM59lJqe,eclipse.jdt.ui,2106890910,1403,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-05-13T07:54:40Z,2024-05-13T07:54:40Z,"@nlisker the description misses information how to reproduce the issue.
However i can reproduce a changed font even with the plain ""text editor"" instead of java editor - so probably the error is unrelated to JDT and unrelated to use of a quotation mark:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/760ec537-98da-47c0-94b4-31b076d5f63f)
Please open a issue on https://github.com/eclipse-platform/eclipse.platform.swt with steps how to reproduce.
closing as NOT JDT.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM59lJqe/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1404,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1404,eclipse.jdt.ui,2296173775,1404,Move method may change accessor of field but does not check type is accessible,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-05-14T18:56:23Z,2024-05-15T21:37:52Z,"Consider the following:

```
package tests;
class InputClass2 extends InputClass {
    
}

public class InputClass {
    
    private InputClass2 class2;
     
    protected int protValue = 5;
   
    public int getProtValue() {
        return protValue;
    }
}

```

and if we also have 

```
package tests2;

import tests.InputClass;

public class TestAccess2 {
    
    public void foo() {
        InputClass cl = new InputClass();
        int l = cl.getProtValue();
    }

}

```

If we Refactor->move getProtValue() in InputClass, it will offer to move it to InputClass2.  It will then offer to make field: class2 public and then the user can continue.  This will modify TestAccess2 to use cl.class2.getProtValue(); which will be marked in error because the type of class2 is package-private and can't be accessed in the tests2 package.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1404/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1406,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1406,eclipse.jdt.ui,2298237102,1406,Quickfix: Text block used for single line string if split into multiple arguments,laeubi,1331477,Christoph Läubrich,,CLOSED,2024-05-15T04:52:51Z,2024-06-07T20:01:20Z,"Assume the following code:

```
try {
	project.getBuildConfig(""org.eclipse.pde.ManifestBuilder""); //$NON-NLS-1$
} catch (CoreException e) {
	ILog.get().error(
			""eclipse.pde/issues/1185: validateBuildPropertiesExists called for project without plugin nature: ""
					+ project.getName(),
			e);
	return;
}
```

I select the string + the concatenation with the project name and now activate the quickfix
![grafik](https://github.com/eclipse-jdt/eclipse.jdt.core/assets/1331477/69deeaec-60ad-4725-aec5-9ca60ce68651)

this now results in a textblock used:
```
try {
	project.getBuildConfig(""org.eclipse.pde.ManifestBuilder""); //$NON-NLS-1$
} catch (CoreException e) {
	ILog.get().error(
			String.format(""""""
			eclipse.pde/issues/1185: validateBuildPropertiesExists called for project without plugin nature: \
			%s"""""", project.getName()),
			e);
	return;
}
```

Now I put everything in one line:

```
try {
	project.getBuildConfig(""org.eclipse.pde.ManifestBuilder""); //$NON-NLS-1$
} catch (CoreException e) {
	ILog.get().error(
			""eclipse.pde/issues/1185: validateBuildPropertiesExists called for project without plugin nature: ""	+ project.getName(),
			e);
	return;
}
```

this results in the desired/correct new code:

```
try {
	project.getBuildConfig(""org.eclipse.pde.ManifestBuilder""); //$NON-NLS-1$
} catch (CoreException e) {
	ILog.get().error(
			String.format(""eclipse.pde/issues/1185: validateBuildPropertiesExists called for project without plugin nature: %s"", project.getName()),
			e);
	return;
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1406/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1406,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5977ns,eclipse.jdt.ui,2112862700,1406,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-05-15T06:20:30Z,2024-05-15T06:20:30Z,@jjohnstn is this .ui?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5977ns/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1406,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5978W7,eclipse.jdt.ui,2112865723,1406,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-05-15T15:30:40Z,2024-05-15T15:30:40Z,"@jukzi, Yes, transferred.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5978W7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1406,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM597_ia,eclipse.jdt.ui,2112878746,1406,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-05-15T15:36:53Z,2024-05-15T15:36:53Z,"@laeubi This is intentional behavior.  Strings that span multiple lines may be set up to indent and line up.  For example,

```
String x =
    ""/********************************"" +
    "" * Copyright Me +
    stuff;
```

In that case, the text block is desirable.  As well, putting this into a single line can make the code hard to read with a extremely long line.  There was an issue opened for this very situation.  However, for simple strings on a single line, indenting and lining up lines is not intended by the end-user so the text block is not needed and the simpler form is used.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM597_ia/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1406,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5-A2vP,eclipse.jdt.ui,2114153423,1406,NA,laeubi,1331477,Christoph Läubrich,,NA,2024-05-16T06:37:45Z,2024-05-16T06:37:45Z,"I don't agree (_as a user_) that this is intentional, this is simply not a multiline string (it is a one line string with one concatenation in the next line) and the result is hardly an improvement over the previous state as it requires an additional escape.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5-A2vP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1406,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5-iQpT,eclipse.jdt.ui,2122910291,1406,NA,laeubi,1331477,Christoph Läubrich,,NA,2024-05-21T15:37:58Z,2024-05-21T15:37:58Z,"This also results in a textblock and it is definitely **not** multiline;

```
public String getText() {

	if(label != null) {
		if(unit != null) {
			return label + "" ("" + unit + "")"";
		}
		return label;
	}
	return null;
}
```

result is

```
public String getText() {

	if(label != null) {
		if(unit != null) {
			return String.format(""""""
			%s\
			 (\
			%s\
			)"""""", label, unit);
		}
		return label;
	}
	return null;
}
```

what is completely unreadable compared to desired result:

```
public String getText() {

	if(label != null) {
		if(unit != null) {
			return String.format(""%s (%s)"", label, unit);
		}
		return label;
	}
	return null;
}
```

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5-iQpT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1406,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5-0ke6,eclipse.jdt.ui,2127710138,1406,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-05-23T17:36:29Z,2024-05-23T17:36:29Z,@laeubi Agreed.  It should have recognized that was on one line.  It was meant to distinguish concatenations over multiple lines so that is wrong.   I will look at it.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5-0ke6/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1406,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5-0qPG,eclipse.jdt.ui,2127733702,1406,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-05-23T17:50:56Z,2024-05-23T17:50:56Z,"@laeubi For the example given, if I select label or unit just after the return statement and select quickfix -> String format, I get one line as expected.  Do you have a recent I-build?  The fix was made on May 1st thereabouts commit: 87af14444e9eeb6847036a6655d7389d3350e9ff).

I am going to change the threshold to 3 lines or more to correspond with other cleanups like StringBuffer/StringBuilder to text block.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5-0qPG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1406,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5-0ruk,eclipse.jdt.ui,2127739812,1406,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-05-23T17:55:08Z,2024-05-23T17:55:08Z,"Addition: will also check number of chars in StringLiterals.  If they are < a limit, then will also use one line.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5-0ruk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1406,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5-1RbT,eclipse.jdt.ui,2127894227,1406,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-05-23T19:39:12Z,2024-05-23T19:39:12Z,Fix has been made.  Text block is only used if 3 or more lines AND number of string literal characters are > 80.  Your examples will never use a text block and the examples of copyright statements from the initial issue to add text block support work as expected.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5-1RbT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1408,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1408,eclipse.jdt.ui,2299545727,1408,Error part opened from type hierarchy,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2024-05-16T07:13:20Z,2024-05-16T12:08:22Z,"Tried to open type hierarchy on `IStatusHandler`and got this error part 

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/964108/43c0d789-90cc-4e1f-bbdf-b5df62f0cfe8)

```
eclipse.buildId=4.32.0.I20240515-1800
java.version=21.0.2-13
java.vendor=N/A
BootLoader constants: OS=linux, ARCH=x86_64, WS=gtk, NL=en_US
Command-line arguments:  -os linux -ws gtk -arch x86_64 -data /data/4x_platform_workspace

org.eclipse.ui.workbench.texteditor
Error
Thu May 16 09:07:26 CEST 2024
Editor could not be initialized.

java.lang.IllegalStateException: Its not allow to modify JavaModel during ReadOnly action. delta=Java Model[*]: {CHILDREN}
	org.eclipse.debug.core[*]: {CHILDREN}
		core[*]: {CHILDREN}
			org.eclipse.debug.core[*]: {CHILDREN}
				[Working copy] IStatusHandler.java[*]: {PRIMARY WORKING COPY}
	at org.eclipse.jdt.internal.core.DeltaProcessor.registerJavaModelDelta(DeltaProcessor.java:2026)
	at org.eclipse.jdt.internal.core.JavaModelOperation.addDelta(JavaModelOperation.java:176)
	at org.eclipse.jdt.internal.core.BecomeWorkingCopyOperation.executeOperation(BecomeWorkingCopyOperation.java:57)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:805)
	at org.eclipse.jdt.internal.core.CompilationUnit.becomeWorkingCopy(CompilationUnit.java:92)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.createFileInfo(CompilationUnitDocumentProvider.java:1015)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.connect(TextFileDocumentProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.connect(CompilationUnitDocumentProvider.java:1253)
	at org.eclipse.ui.texteditor.AbstractTextEditor.doSetInput(AbstractTextEditor.java:4187)
	at org.eclipse.ui.texteditor.StatusTextEditor.doSetInput(StatusTextEditor.java:262)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.doSetInput(AbstractDecoratedTextEditor.java:1483)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.internalDoSetInput(JavaEditor.java:2564)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.doSetInput(JavaEditor.java:2537)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSetInput(CompilationUnitEditor.java:1415)
	at org.eclipse.ui.texteditor.AbstractTextEditor.lambda$1(AbstractTextEditor.java:3171)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:354)
	at org.eclipse.ui.internal.WorkbenchWindow.lambda$7(WorkbenchWindow.java:2335)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2332)
	at org.eclipse.ui.texteditor.AbstractTextEditor.internalInit(AbstractTextEditor.java:3188)
	at org.eclipse.ui.texteditor.AbstractTextEditor.init(AbstractTextEditor.java:3213)
	at org.eclipse.ui.internal.EditorReference.initialize(EditorReference.java:353)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.create(CompatibilityPart.java:344)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:977)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:939)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalInject(InjectorImpl.java:139)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:386)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:312)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:203)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:90)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:59)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:42)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributedPartRenderer.createWidget(ContributedPartRenderer.java:132)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:991)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.createElement(PartServiceImpl.java:1314)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.showPart(PartServiceImpl.java:1275)
	at org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:395)
	at org.eclipse.ui.internal.EditorReference.getEditor(EditorReference.java:283)
	at org.eclipse.ui.internal.WorkbenchPage.findEditor(WorkbenchPage.java:2220)
	at org.eclipse.egit.ui.internal.EgitUiEditorUtils.findEditor(EgitUiEditorUtils.java:195)
	at org.eclipse.egit.ui.internal.repository.RepositoriesView.showEditor(RepositoriesView.java:1396)
	at org.eclipse.egit.ui.internal.repository.RepositoriesView.lambda$9(RepositoriesView.java:558)
	at org.eclipse.jface.viewers.StructuredViewer$3.run(StructuredViewer.java:820)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.StructuredViewer.firePostSelectionChanged(StructuredViewer.java:817)
	at org.eclipse.jface.viewers.ColumnViewer.firePostSelectionChanged(ColumnViewer.java:1065)
	at org.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:1665)
	at org.eclipse.jface.viewers.TreeViewer.setSelection(TreeViewer.java:1091)
	at org.eclipse.ui.navigator.CommonViewer.setSelection(CommonViewer.java:371)
	at org.eclipse.ui.navigator.CommonNavigator.selectReveal(CommonNavigator.java:385)
	at org.eclipse.egit.ui.internal.repository.RepositoriesView.selectAndReveal(RepositoriesView.java:1071)
	at org.eclipse.egit.ui.internal.repository.RepositoriesView.showPaths(RepositoriesView.java:1021)
	at org.eclipse.egit.ui.internal.repository.RepositoriesView.showResource(RepositoriesView.java:1000)
	at org.eclipse.egit.ui.internal.repository.RepositoriesView.reactOnSelection(RepositoriesView.java:1368)
	at org.eclipse.egit.ui.internal.repository.RepositoriesView.lambda$3(RepositoriesView.java:252)
	at org.eclipse.ui.internal.e4.compatibility.SelectionService.notifyListeners(SelectionService.java:266)
	at org.eclipse.ui.internal.e4.compatibility.SelectionService.handlePostSelectionChanged(SelectionService.java:123)
	at org.eclipse.ui.internal.e4.compatibility.SelectionService.lambda$2(SelectionService.java:78)
	at org.eclipse.e4.ui.internal.workbench.SelectionAggregator$3.run(SelectionAggregator.java:163)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.SelectionAggregator.notifyPostListeners(SelectionAggregator.java:160)
	at org.eclipse.e4.ui.internal.workbench.SelectionAggregator$6.lambda$0(SelectionAggregator.java:250)
	at org.eclipse.e4.core.contexts.RunAndTrack.runExternalCode(RunAndTrack.java:59)
	at org.eclipse.e4.ui.internal.workbench.SelectionAggregator$6.changed(SelectionAggregator.java:250)
	at org.eclipse.e4.core.internal.contexts.TrackableComputationExt.update(TrackableComputationExt.java:105)
	at org.eclipse.e4.core.internal.contexts.EclipseContext.processScheduled(EclipseContext.java:358)
	at org.eclipse.e4.core.internal.contexts.EclipseContext.set(EclipseContext.java:374)
	at org.eclipse.e4.ui.internal.workbench.SelectionServiceImpl.setPostSelection(SelectionServiceImpl.java:39)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.lambda$2(CompatibilityPart.java:132)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionProviderMediator.firePostSelectionChanged(SelectionProviderMediator.java:151)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionProviderMediator.doPostSelectionChanged(SelectionProviderMediator.java:113)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionProviderMediator$InternalPostSelectionListener.selectionChanged(SelectionProviderMediator.java:70)
	at org.eclipse.jface.viewers.StructuredViewer$3.run(StructuredViewer.java:820)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.StructuredViewer.firePostSelectionChanged(StructuredViewer.java:817)
	at org.eclipse.jface.viewers.ColumnViewer.firePostSelectionChanged(ColumnViewer.java:1065)
	at org.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:1665)
	at org.eclipse.jface.viewers.TreeViewer.setSelection(TreeViewer.java:1091)
	at org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyViewPart.internalSelectType(TypeHierarchyViewPart.java:1198)
	at org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyViewPart.updateViewers(TypeHierarchyViewPart.java:647)
	at org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyLifeCycle.lambda$2(TypeHierarchyLifeCycle.java:285)
	at org.eclipse.jdt.core.JavaCore.lambda$0(JavaCore.java:6146)
	at org.eclipse.jdt.internal.core.JavaModelManager.cacheZipFiles(JavaModelManager.java:5765)
	at org.eclipse.jdt.internal.core.JavaModelManager.callReadOnly(JavaModelManager.java:5754)
	at org.eclipse.jdt.core.JavaCore.callReadOnly(JavaCore.java:6130)
	at org.eclipse.jdt.core.JavaCore.runReadOnly(JavaCore.java:6145)
	at org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyLifeCycle.lambda$1(TypeHierarchyLifeCycle.java:283)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:5040)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4520)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1151)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:152)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:639)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:546)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:668)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:605)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1481)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1454)
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1408/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1408,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5-BMIA,eclipse.jdt.ui,2114241024,1408,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-05-16T07:13:36Z,2024-05-16T07:13:36Z,@jukzi : could you please check?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5-BMIA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1408,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5-BTnb,eclipse.jdt.ui,2114271707,1408,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-05-16T07:29:25Z,2024-05-16T07:29:25Z,"That needs a fix.
Sadly i can not reproduce. according to the stacktrace it has something todo with egit RepositoriesView - can you give instructions how to reproduce so ii can verify a fix?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5-BTnb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1408,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5-BXBU,eclipse.jdt.ui,2114285652,1408,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-05-16T07:37:40Z,2024-05-16T07:37:40Z,"- I **believe** I had IStatusHandler editor opened yesterday but not today (so tab was **probably** there but not initialized yet).
- Git repositories view is always in ""linked"" mode and was open/shown.
- Type Hierarchy view was not open.

So I was working in `Prompter` java editor from where I've opened Type Hierarchy on `IStatusHandler`. Kaboom.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5-BXBU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1408,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5-DZ7f,eclipse.jdt.ui,2114821855,1408,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-05-16T10:24:12Z,2024-05-16T10:24:12Z,reproducable with that steps.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5-DZ7f/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1414,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1414,eclipse.jdt.ui,2308617843,1414,Pasting snippet to Package Explorer does not work anymore,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2024-05-21T15:53:37Z,2024-05-22T13:51:47Z,"Just stumbled over this bug: copy text below into clipboard
```
	public static void main(String[] args) throws Exception {
		while(true) {
			Thread.sleep(500);
		}
	}
```
and try to paste it (`Ctrl+V`) into Package Explorer.

- In 4.31 a new Snippet.java class is created with this snippet.
- In 4.32 nothing happens, except an error is reported to the error log:
```
eclipse.buildId=4.32.0.I20240520-1800
java.version=21.0.2-13
java.vendor=N/A
BootLoader constants: OS=linux, ARCH=x86_64, WS=gtk, NL=en_US
Command-line arguments:  -os linux -ws gtk -arch x86_64

org.eclipse.e4.ui.workbench
Error
Tue May 21 17:46:48 CEST 2024
Execution exception for: ParameterizedCommand(Command(org.eclipse.ui.edit.paste,Paste,
		Paste from the clipboard,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		WorkbenchHandlerServiceHandler(""org.eclipse.ui.edit.paste""),
		,,true),null) in 
	context chain: WorkbenchContext -> TrimmedWindowImpl (IDEWindow) Context -> PerspectiveImpl (org.eclipse.jdt.ui.JavaPerspective) Context -> PartImpl (org.eclipse.jdt.ui.PackageExplorer) Context

org.eclipse.core.commands.ExecutionException: While executing the action, an exception occurred
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:129)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:98)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:299)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:233)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:174)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:165)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:204)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:569)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:644)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:91)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1954)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1616)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1643)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1626)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1665)
	at org.eclipse.swt.widgets.Widget.gtk_key_press_event(Widget.java:994)
	at org.eclipse.swt.widgets.Control.gtk_key_press_event(Control.java:3999)
	at org.eclipse.swt.widgets.Composite.gtk_key_press_event(Composite.java:931)
	at org.eclipse.swt.widgets.Tree.gtk_key_press_event(Tree.java:2359)
	at org.eclipse.swt.widgets.Widget.windowProc(Widget.java:2595)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:6833)
	at org.eclipse.swt.widgets.Tree.windowProc(Tree.java:4272)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:6162)
	at org.eclipse.swt.internal.gtk3.GTK3.gtk_main_do_event(Native Method)
	at org.eclipse.swt.widgets.Display.eventProc(Display.java:1598)
	at org.eclipse.swt.internal.gtk3.GTK3.gtk_main_iteration_do(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4514)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1151)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:152)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:639)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:546)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:668)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:605)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1481)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1454)
Caused by: java.lang.ClassCastException: class org.eclipse.jdt.core.dom.ImplicitTypeDeclaration cannot be cast to class org.eclipse.jdt.core.dom.AbstractTypeDeclaration (org.eclipse.jdt.core.dom.ImplicitTypeDeclaration and org.eclipse.jdt.core.dom.AbstractTypeDeclaration are in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @1745d77d)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.PasteAction$TextPaster$ParsedCu.parseAsTypes(PasteAction.java:438)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.PasteAction$TextPaster$ParsedCu.parseCus(PasteAction.java:381)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.PasteAction$TextPaster.parseCUs(PasteAction.java:1077)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.PasteAction$TextPaster.canPasteOn(PasteAction.java:588)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.PasteAction.run(PasteAction.java:269)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:274)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:252)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:124)
	... 54 more
```

I assume this is regression from https://github.com/eclipse-jdt/eclipse.jdt.core/pull/2066 and either `org.eclipse.jdt.internal.ui.refactoring.reorg.PasteAction` or JDT core needs a fix.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1414/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1414,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5-icCa,eclipse.jdt.ui,2122956954,1414,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-05-21T16:01:43Z,2024-05-21T16:01:43Z,"I see that the code in PasteAction casts `org.eclipse.jdt.core.dom.CompilationUnit.types()` to `List<AbstractTypeDeclaration>` because `CompilationUnit.types()` javadoc says `its element type is AbstractTypeDeclaration`.

This seem to be not the case anymore.

So **at least** javadoc in  `org.eclipse.jdt.core.dom.CompilationUnit` must be fixed, and most likely the code in `PasteAction` that uses `CompilationUnit.types()` result.

I also wonder if there are more clients assumed wrong type on the `CompilationUnit.types()` content?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5-icCa/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1414,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5-pUzX,eclipse.jdt.ui,2124762327,1414,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-05-22T13:10:21Z,2024-05-22T13:10:21Z,"Note, this issue must be fixed on UI side, as the logic changed not only around type of the element but also handling of ""snippet without type"" parsed as `K_COMPILATION_UNIT` and not more as `K_CLASS_BODY_DECLARATIONS`  => https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1416

The main underlined issue is separated to https://github.com/eclipse-jdt/eclipse.jdt.core/issues/2481","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5-pUzX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1419,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1419,eclipse.jdt.ui,2312641226,1419,Move to new file for static nested record throws NPE,stephan-herrmann,24587985,Stephan Herrmann,,CLOSED,2024-05-23T11:14:42Z,2024-06-17T14:05:52Z,"I had this rocket-science record defined as a nested type:
```
static record Pair<T> (T left, T right) {}
```
Then I decided this should be a util available for others too: **Refactor > Move to new file**:
```
java.lang.NullPointerException: Cannot invoke ""org.eclipse.jdt.core.dom.VariableDeclarationFragment.getParent()"" because ""fragment"" is null
	at org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor$IncomingMemberVisibilityAdjustment.rewriteVisibility(MemberVisibilityAdjustor.java:171)
	at org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor$IncomingMemberVisibilityAdjustment.rewriteVisibility(MemberVisibilityAdjustor.java:201)
	at org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor.rewriteVisibility(MemberVisibilityAdjustor.java:1064)
	at org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.createChangeManager(MoveInnerToTopRefactoring.java:840)
	at org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.checkFinalConditions(MoveInnerToTopRefactoring.java:731)
	at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:86)
	at org.eclipse.ltk.core.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:116)
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1419/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1419,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6A2wPz,eclipse.jdt.ui,2161837043,1419,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-06-12T00:22:54Z,2024-06-12T00:22:54Z,Hi @stephan-herrmann I realize it is quite late from when you opened the issue but do you happen to have a test scenario?  I tried a simple class which has the inner static record and moving to a new file works fine for me.  I can easily add a null check on the fragment variable but that is not the right solution as it is supposed to be changing the visibility of a member.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6A2wPz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1419,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6A66U2,eclipse.jdt.ui,2162926902,1419,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-06-12T12:49:18Z,2024-06-12T12:49:18Z,"@jjohnstn  please try this:
```java
package test;

public class Foo {
	static record Pair<T> (T left, T right) {}

	String test (Pair<String> p) {
		return p.left();
	}
}
```

When I tried this right now, I happened to be in Build id: I20231217-1800
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6A66U2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1419,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6A9aam,eclipse.jdt.ui,2163582630,1419,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-06-12T17:39:26Z,2024-06-12T17:39:26Z,Thanks @stephan-herrmann that did it.  My test is similar but I didn't access the record component.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6A9aam/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1424,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1424,eclipse.jdt.ui,2317564144,1424,Jump to the wrong method api[bug],TigerGod,34829719,,,CLOSED,2024-05-26T08:03:01Z,2024-05-31T15:49:22Z,"![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/34829719/ae310715-30cd-46de-ab37-97c77c9f9a60)
1, When I check the APi of the class, the actual parameter type passed is not the same as the parameter type that needs to be passed
2, When I click on open declaration, it jumps to the wrong method, he should actually jump to method 2.
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/34829719/fbc96796-02a0-4e54-aa46-1ebbc3b46773)
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/34829719/d27fa3a9-a192-4c44-b15d-896d50ffc5ba)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1424/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1424,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_Ha9N,eclipse.jdt.ui,2132651853,1424,NA,humphreygao,52394598,,,NA,2024-05-27T05:07:43Z,2024-05-27T05:07:43Z,cannot reproduce for eclipse 4.32 i-build  ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_Ha9N/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1424,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_HgE-,eclipse.jdt.ui,2132672830,1424,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-05-27T05:31:52Z,2024-05-27T05:31:52Z,"can not reproduce
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/da3f2051-2d04-46e4-96e7-1b1295d91f48)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_HgE-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1424,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_exVz,eclipse.jdt.ui,2138772851,1424,NA,TigerGod,34829719,,,NA,2024-05-30T06:26:42Z,2024-05-30T06:26:42Z,I'm using the eclipse sdk and this is the problem that shows up in the sdk,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_exVz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1424,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_exc-,eclipse.jdt.ui,2138773310,1424,NA,TigerGod,34829719,,,NA,2024-05-30T06:27:07Z,2024-05-30T06:27:07Z,version is 4.31,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_exc-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1424,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_exsY,eclipse.jdt.ui,2138774296,1424,NA,TigerGod,34829719,,,NA,2024-05-30T06:28:01Z,2024-05-30T06:28:01Z,even now i can rebuild the problem,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_exsY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1424,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_ey1p,eclipse.jdt.ui,2138778985,1424,NA,TigerGod,34829719,,,NA,2024-05-30T06:31:28Z,2024-05-30T06:31:28Z,"![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/34829719/1f449625-4d84-43b3-8ddd-9336d618aa2e)
you can see the time.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_ey1p/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1424,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_tIe3,eclipse.jdt.ui,2142537655,1424,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-05-31T15:49:21Z,2024-05-31T15:49:21Z,@TigerGod What @jukzi is telling you is that the problem is already fixed in the up-coming next release: 4.32.  You can download/update from an I-build (nightly build) or download the RC2 milestone (last milestone before release) now or you can wait until it is officially released on June 12th and update to 4.32.  Eclipse does not back-port minor fixes to previous releases - you are expected to either update from I-builds if you need the fix or update your Eclipse to latest release when it is available. ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_tIe3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1426,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1426,eclipse.jdt.ui,2319260014,1426,Folding block code,XelaNimed,685832,XelaNimed,xela.nimed@gmail.com,OPEN,2024-05-27T14:10:22Z,2025-02-14T00:03:12Z,"Eclipse IDE for Enterprise Java and Web Developers (includes Incubating components)
Version: 2024-03 (4.31.0)
Build id: 20240307-1437
Windows 11 23H2 x64

I was very surprised that code folding in Eclipse is poor compared to other Java IDEs, and in some cases it is non-existent.
Please add/implement collapsing code blocks in all parentheses, curly/square braces.
There is also no way to define a custom region for collapsing, as is implemented in VisualStudio.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1426/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1426,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_Nx6h,eclipse.jdt.ui,2134318753,1426,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-05-28T04:20:52Z,2024-05-28T04:20:52Z,This project is open source - feel free to suggest a change with a Pull Request.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_Nx6h/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1426,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_OM15,eclipse.jdt.ui,2134429049,1426,NA,XelaNimed,685832,XelaNimed,xela.nimed@gmail.com,NA,2024-05-28T06:21:11Z,2024-05-28T06:21:11Z,"@jukzi I do not know how. On the main page of the project, in the [Developer resources](https://github.com/eclipse-jdt/eclipse.jdt.ui#developer-resources) section, the [link](https://projects.eclipse.org/projects/eclipse.jdt.ui/developer) leads to a page without information (or I was looking in the wrong place). In any case, I'm not sure that I can understand the codebase and come up with a quality solution.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_OM15/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1426,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_PPAC,eclipse.jdt.ui,2134700034,1426,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-05-28T09:01:38Z,2024-05-28T09:01:38Z,please see https://wiki.eclipse.org/JDT_UI/How_to_Contribute,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_PPAC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1426,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ebT0b,eclipse.jdt.ui,2657959195,1426,NA,danthe1st,34687786,dan1st,,NA,2025-02-14T00:03:12Z,2025-02-14T00:03:12Z,I think this issue can be closed now since #1562 has been merged?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ebT0b/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1428,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1428,eclipse.jdt.ui,2320527814,1428,jdt.ui Readme outdated,jukzi,51790620,Jörg Kubitz,,OPEN,2024-05-28T09:06:09Z,2024-07-31T21:13:07Z,"https://github.com/eclipse-jdt/eclipse.jdt.ui/edit/master/README.md

              @jukzi I do not know how. On the main page of the project, in the [Developer resources](https://github.com/eclipse-jdt/eclipse.jdt.ui#developer-resources) section, the [link](https://projects.eclipse.org/projects/eclipse.jdt.ui/developer) leads to a page without information (or I was looking in the wrong place). In any case, I'm not sure that I can understand the codebase and come up with a quality solution.

_Originally posted by @XelaNimed in https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1426#issuecomment-2134429049_
           
Links to outdated wiki seem to be not helpful.  
Does UI need an own Readme? maybe just use https://github.com/eclipse-jdt/.github/blob/main/CONTRIBUTING.md","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1428/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1428,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Gy1Pj,eclipse.jdt.ui,2261472227,1428,NA,basilevs,650857,Vasili Gulevich,,NA,2024-07-31T21:13:05Z,2024-07-31T21:13:05Z,[It does](https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/master/CONTRIBUTING) but most of the links there are also broken,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Gy1Pj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1429,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1429,eclipse.jdt.ui,2322599878,1429,NPE in QuickFixProcessor.process(QuickFixProcessor.java:780),jukzi,51790620,Jörg Kubitz,,CLOSED,2024-05-29T07:39:05Z,2024-06-05T19:50:13Z,"```
java.lang.NullPointerException: Cannot invoke ""org.eclipse.jdt.core.dom.ASTNode.getParent()"" because ""deprecatedMethodNode"" is null
	at org.eclipse.jdt.internal.ui.text.correction.QuickFixProcessor.process(QuickFixProcessor.java:780)
	at org.eclipse.jdt.internal.ui.text.correction.QuickFixProcessor.getCorrections(QuickFixProcessor.java:378)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionCollector.safeRun(JavaCorrectionProcessor.java:381)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.run(JavaCorrectionProcessor.java:341)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.process(JavaCorrectionProcessor.java:336)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectCorrections(JavaCorrectionProcessor.java:465)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectProposals(JavaCorrectionProcessor.java:284)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getMarkerAnnotationFixes(ProblemHover.java:154)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.computeCompletionProposals(ProblemHover.java:95)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.<init>(ProblemHover.java:74)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover.createAnnotationInfo(ProblemHover.java:178)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover.getHoverInfo2(AbstractAnnotationHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
```
```

eclipse.buildId=4.32.0.I20240528-1800
java.version=21.0.2
```

happend while editing org.eclipse.core.tests.resources.LinkedResourceWithPathVariableTest.testProjectVariableChanged() line 928

@jjohnstn the code is from a72704d9c875f1a3f35189e3924e134823c6cb03","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1429/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1431,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1431,eclipse.jdt.ui,2324825331,1431,"In eclipse sdk 4,31, The wrong API method showed in UI",TigerGod,34829719,,,CLOSED,2024-05-30T06:35:29Z,2024-06-08T15:51:11Z,"![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/34829719/aa9d62fc-ce7c-491e-8518-84eb8d46bf12)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1431/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1431,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_hHCy,eclipse.jdt.ui,2139386034,1431,NA,humphreygao,52394598,,,NA,2024-05-30T11:50:30Z,2024-05-30T11:50:30Z,极少情况下会去给老版本打补丁。这个问题还是会被关闭的，因为新版本不可复现。,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM5_hHCy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1432,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1432,eclipse.jdt.ui,2326994632,1432,SemanticHighlightingTest.enumHighlighting test failed ,noopur2507,8749449,Noopur Gupta,,OPEN,2024-05-31T05:31:19Z,2024-12-17T07:51:13Z,"I20240529-1800
win32-java17

org.eclipse.jdt.text.tests.SemanticHighlightingTest
enumHighlighting

The above test failed with this exception:

```
expected:<1> but was:<2>

java.lang.AssertionError: expected:<1> but was:<2>
at org.junit.Assert.fail(Assert.java:89)
at org.junit.Assert.failNotEquals(Assert.java:835)
at org.junit.Assert.assertEquals(Assert.java:647)
at org.junit.Assert.assertEquals(Assert.java:633)
at org.eclipse.jdt.text.tests.AbstractSemanticHighlightingTest.assertEqualPositions(AbstractSemanticHighlightingTest.java:113)
at org.eclipse.jdt.text.tests.SemanticHighlightingTest.enumHighlighting(SemanticHighlightingTest.java:270)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1432/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1432,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6X2vL3,eclipse.jdt.ui,2547708663,1432,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-12-17T07:41:47Z,2024-12-17T07:41:47Z,"failed again
https://download.eclipse.org/eclipse/downloads/drops4/I20241215-1800/testresults/html/org.eclipse.jdt.text.tests_ep435I-unit-macosx-x86_64-java17_macosx.cocoa.x86_64_17.html","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6X2vL3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1432,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6X2vuc,eclipse.jdt.ui,2547710876,1432,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-12-17T07:43:12Z,2024-12-17T07:43:12Z,@BoykoAlex can you help with that? i guess you know that code a bit.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6X2vuc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1434,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1434,eclipse.jdt.ui,2328548230,1434,Bug 202162 - [JUnit] Rerun tests after failure first run still says failure first in message but does not run failures first,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-05-31T20:32:14Z,2024-06-08T01:37:10Z,"For the following test:

```
import static org.junit.jupiter.api.Assertions.fail;

import org.junit.jupiter.api.Test;

public class TryTest {

	@Test
	public void test1() throws Exception {

	}

	@Test
	public void test2() throws Exception {

	}

	@Test
	public void test3() throws Exception {
		fail();
	}

}
```

Run the test in a test plug-in as a JUnit plugin test.  The third test will fail.  Select the Run failed tests first button in the JUnit test view and run again.  The test3() will be run first and the message on the console will be something like TryTest (Failed Tests first).  If the regular Rerun button is used, the tests will be run in regular order (i.e. not test3 first) but the message on the console will still end in (Failed Tests first).

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1434/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1437,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1437,eclipse.jdt.ui,2332102480,1437,Bug 546311 - [code mining] Parameter name annotations not shown when parameter value contains it,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-06-03T21:40:25Z,2024-06-07T21:43:18Z,"Code mining parameters are skipped when the passed parameter name is a substring of the passed parameter.  For example,

```
public void foo(int a, int b, int c) {
}

public void foo2(int abc) {
   foo(abc, abc, abc); <== this line will show no parameter names because a, b, and c can be found in all the parameter names
}
```

The parameter name should only be dropped if it is an exact/lower-case match.  An option can be added to filter out partial name matches.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1437/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1688,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1688,eclipse.jdt.ui,2560700045,1688,[formatting][java] method with parameter annotation incorrectly formatted.,partner-pierre-vande-laar,171016967,,,OPEN,2024-06-04T11:48:43Z,2024-10-02T05:26:56Z,"Dear developers, 

I have the following formatting settings
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/171016967/cd7c0bfa-885b-44c6-ba33-b33b16d6b1be)

When I format the following code that uses [junit-pioneer](https://junit-pioneer.org/)'s [Cartesian product](https://junit-pioneer.org/docs/cartesian-product/):
```java
    @CartesianTest
    void test(@Values(booleans = {true, false}) boolean identical, @Values(ints = {2, 3, 4}) int low,
            @Values(ints =
            {4, 5}) int high) {
        fail(""todo"");
    }
```
nothing changes.

Yet since a wrap has occurred in my method declaration, I expected
```java
    @CartesianTest
    void test(@Values(booleans = {true, false}) boolean identical, @Values(ints = {2, 3, 4}) int low,
            @Values(ints =
            {4, 5}) int high)
    {
        fail(""todo"");
    }
```

My expectations are confirmed by checkstyle:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/171016967/28c7ad82-d48d-405a-bece-0c925c35eea6)

Can you confirm that this is indeed a bug.
If so, could you please fix it?

Thanks in advance for your answers!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1688/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1438,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1438,eclipse.jdt.ui,2333521313,1438,Javadoc: Missing links with @see to method with varargs,jukzi,51790620,Jörg Kubitz,,OPEN,2024-06-04T13:19:49Z,2024-07-04T20:14:54Z,"for example the constructor of `java.lang.Class.getConstructor(Class<?>...)` contains a 
`@see #getDeclaredConstructor(Class<?>[])` but does not show a link to getDeclaredConstructor(Class<?>[]) or the other way around as used in JDK:

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/396e9934-d614-457b-8f7e-7e13fa73b594)
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/dcbd8033-d361-4095-a163-63cff9323fef)

jdt only can find links to explicit vargargs reference - but format them wrong (elipses '...' missing):

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/e61dede1-717e-4440-a369-568a8b7e6319)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1438/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1439,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1439,eclipse.jdt.ui,2334464403,1439,Inline existing method in switch expression should not add yield keyword when case is without block,NolwennD,32613839,,,CLOSED,2024-06-04T22:19:14Z,2024-06-11T21:09:58Z,"Hello,

In the code below, when I inline the hello method, yield is added and syntax is not valid. Inline works well when there is a block.

```java
public class FailedInline {
  
  static String beforeInline(FizzBuzz fizzBuzz) {
    return switch (fizzBuzz) {
      case FIZZ -> hello();
      case BUZZ -> hello();
    };
  }
  
  static String afterInline(FizzBuzz fizzBuzz) {
    return switch (fizzBuzz) {
      case FIZZ -> hello();
      case BUZZ -> yield ""World""; 
      //case BUZZ -> ""World"";  <– expected result
    };
  }
  enum FizzBuzz {FIZZ, BUZZ}

  private static String hello() {
    return ""World"";
  }
}
```

Eclipse version :
Version: 2024-03 (4.31.0)
Build id: 20240307-1437","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1439/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1442,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1442,eclipse.jdt.ui,2339709673,1442,Javadoc Hover: Generic Types are hardly readable in light/default theme,laeubi,1331477,Christoph Läubrich,,CLOSED,2024-06-07T06:43:24Z,2024-07-09T14:29:37Z,"
![grafik](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1331477/3d2c56d4-8d87-4801-a4bb-af3536d864e6)


the light green is hardly readable on white background (not sure why the `<?>` is printed differently) especially as a very thin font is used here. If more than one generic is involved it even becomes worse:

![grafik](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1331477/44dd7f26-03af-45dd-aa51-5182629d1641)
![grafik](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1331477/1e9ee7c7-0997-4650-b661-8625c0ff6a6b)

```
Eclipse SDK

Version: 2024-06 (4.32)
Build id: I20240529-1800
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1442/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1442,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AalZA,eclipse.jdt.ui,2154452544,1442,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-06-07T09:25:29Z,2024-06-07T09:25:29Z,@RedeemerSK is that something you may work on?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AalZA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1442,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AapD4,eclipse.jdt.ui,2154467576,1442,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-06-07T09:34:24Z,2024-06-07T09:34:24Z,May be using bold font style will be the solution here?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AapD4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1442,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AavpQ,eclipse.jdt.ui,2154494544,1442,NA,laeubi,1331477,Christoph Läubrich,,NA,2024-06-07T09:50:44Z,2024-06-07T09:50:44Z,It looks like the last example the `List<R>` ... is using bold font I still find it hard to read on light background.... the colors just seem not suitable for an almost white background.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AavpQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1442,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Aa0jY,eclipse.jdt.ui,2154514648,1442,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-06-07T10:02:50Z,2024-06-07T10:02:50Z,"But it is much better compared to the non-bold R:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/964108/342764b8-5989-4088-ba55-90f82f51e410)
so using bold style will be an easy fix (I assume), while selecting ""right"" colors will most likely lead to never ending discussion, as everyone will have other preferences...


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Aa0jY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1442,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AbGAe,eclipse.jdt.ui,2154586142,1442,NA,laeubi,1331477,Christoph Läubrich,,NA,2024-06-07T10:49:24Z,2024-06-07T10:49:24Z,I would be even happy with (maybe a preference) to disable the colors like it was before ;-),"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AbGAe/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1442,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AbPCF,eclipse.jdt.ui,2154623109,1442,NA,humphreygao,52394598,,,NA,2024-06-07T11:13:56Z,2024-06-07T11:13:56Z,"It format the method parameter(one parameter per line) to improve readability,  so I like it.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AbPCF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1442,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AbP6a,eclipse.jdt.ui,2154626714,1442,NA,laeubi,1331477,Christoph Läubrich,,NA,2024-06-07T11:16:29Z,2024-06-07T11:16:29Z,"> It format the method parameter(one parameter per line) to improve readability, so I like it.

The problem is **not** the method parameters!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AbP6a/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1442,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AbTnL,eclipse.jdt.ui,2154641867,1442,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-06-07T11:26:50Z,2024-06-07T11:26:50Z,"> I would be even happy with (maybe a preference) to disable the colors like it was before ;-)

Have you noticed that: 
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/964108/4e504c78-857b-455a-9b52-43e7973e44ee)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AbTnL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1442,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AbkO5,eclipse.jdt.ui,2154709945,1442,NA,laeubi,1331477,Christoph Läubrich,,NA,2024-06-07T12:12:15Z,2024-06-07T12:12:15Z,"Thanks thats better now, but one need to focus (F2) the hover and at least under Linux its hard to oben the submenu as the hover closes in between and the Color preferences itself are empty

https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/1331477/782bd4d7-64b9-4670-8615-2df8c5aa3363

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AbkO5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1442,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Ad4mb,eclipse.jdt.ui,2155317659,1442,NA,RedeemerSK,36334098,Jozef Tomek,,NA,2024-06-07T18:25:12Z,2024-06-07T18:25:12Z,"> Thanks thats better now, but one need to focus (F2) the hover and at least under Linux its hard to oben the submenu as the hover closes in between and the Color preferences itself are empty
> Peek.2024-06-07.14-11.mp4

I have very limited expertise in Linux (distros) native graphics backends and thus I can only wonder why the hover viewer won't stay displayed after opening javadoc styling enhancements menu for you o.O.
EDIT: it does not close for me and it seems also for @iloveeclipse .
EDIT2: also the menu seems pretty bugged for you on that video - its content does not reflect javadoc content & current settings for styling enhancements. I already see what's causing this bug.

Btw, same menu (button) is available in Javadoc view.




> But it is much better compared to the non-bold R:
![image](https://private-user-images.githubusercontent.com/964108/337613634-342764b8-5989-4088-ba55-90f82f51e410.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTc3OTE3OTUsIm5iZiI6MTcxNzc5MTQ5NSwicGF0aCI6Ii85NjQxMDgvMzM3NjEzNjM0LTM0Mjc2NGI4LTU5ODktNDA4OC1iYTU1LTkwZjgyZjUxZTQxMC5wbmc_WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVkNPRFlMU0E1M1BRSzRaQSUyRjIwMjQwNjA3JTJGdXMtZWFzdC0xJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI0MDYwN1QyMDE4MTVaJlgtQW16LUV4cGlyZXM9MzAwJlgtQW16LVNpZ25hdHVyZT1mZjNmNjMyY2U0YTY1M2NjMDJlZjkyMjNkMzg1MzdkNzFkMmRiMzVmMDEyYTM2MGQxMmZiMjJiNWVkMTVjOGU1JlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCZhY3Rvcl9pZD0wJmtleV9pZD0wJnJlcG9faWQ9MCJ9.Y9gw5kvWVSjBBVqBSSSGtdU5yFIKDPnUXH0oycPVaFg)
so using bold style will be an easy fix (I assume), while selecting ""right"" colors will most likely lead to never ending discussion, as everyone will have other preferences...

Right now none of the type params in the content is bold. It's just that method return type section is italic which makes it to look little bit bolder.

Shortly I'll post screens how it would look with type params being same font-weight like the rest of the signature - because that's the actual difference right now ... they were made lighter than the rest with the intention to decrease their contribution to visual complexity.  ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Ad4mb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1442,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AfLzI,eclipse.jdt.ui,2155658440,1442,NA,RedeemerSK,36334098,Jozef Tomek,,NA,2024-06-07T22:36:56Z,2024-06-07T22:36:56Z,"Current:
![javadoc_styling_type_params_less_font-weight_win png](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/36334098/19059ed1-b660-4244-a695-a8441bd3663e)
![javadoc_styling_type_params_less_font-weight_ubuntu](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/36334098/6f795701-e030-400d-851d-87cb7be7316e)

New (same font-weight as rest):
![javadoc_styling_type_params_no_font-weight_win png](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/36334098/36089862-f98e-4834-a8f7-422c753a056a)
![javadoc_styling_type_params_no_font-weight_ubuntu](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/36334098/27e11917-8351-4a06-9592-02bb19900233)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AfLzI/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1442,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AfrS9,eclipse.jdt.ui,2155787453,1442,NA,laeubi,1331477,Christoph Läubrich,,NA,2024-06-08T03:29:56Z,2024-06-08T03:29:56Z,"@RedeemerSK with ""normal"" font weight it is better readable indeed I think one should either use colors or the lighter font weight but not both, and yes the hover/menu seems very ""buggy""...","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AfrS9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1442,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AhEbK,eclipse.jdt.ui,2156152522,1442,NA,RedeemerSK,36334098,Jozef Tomek,,NA,2024-06-08T19:40:24Z,2024-06-08T19:40:24Z,"@laeubi please what's your platform ? (linux distro / desktop environment / anything that may have something to do with how SWT renders menus). I assume you are running it natively, not in VM or some other non-native way, right ?

EDIT: ignore, found the reason for  buggy menu

Also ... until the fix that removes lighter text makes it into future builds, for those that are impatient and also willing to walk the unlawful path and do little bit of hacking that I of course won't officially suggest (\*wink\* \*wink\*), there's a way to apply the fix to any existing eclipse installation.

[The fix](https://github.com/RedeemerSK/eclipse.jdt.ui/commit/4c434a981eb4fd224081bfa2833f7d3bfe80ebd6) can be manually applied to the files bundled inside org.eclipse.jdt.ui plugin JAR used by eclipse installation (present in ~/.p2/pool/plugins directory). Surprisingly for me, because since the JAR is signed, I (it seems wrongly) assumed tampering with it would render it invalid / unusable, which is not the case and eclipse has no problem starting with modified plugin JAR. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AhEbK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1442,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AhE_V,eclipse.jdt.ui,2156154837,1442,NA,RedeemerSK,36334098,Jozef Tomek,,NA,2024-06-08T19:52:08Z,2024-06-08T19:52:08Z,"> Thanks thats better now, but one need to focus (F2) the hover and at least under Linux its hard to oben the submenu as the hover closes in between and the Color preferences itself are empty

Just noticed that hover & menu behaves differently when activated by pressing F2 (then going to menu hides the hover) compared to being activated by ""entering into it"" with mouse (then going to menu keeps hover displayed) on Ubuntu I'm testing this on. Will look into that. Can others confirm same behavior, @laeubi  ?

EDIT: found the cause (bug), fixed","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AhE_V/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1442,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6DBDeo,eclipse.jdt.ui,2198091688,1442,NA,RedeemerSK,36334098,Jozef Tomek,,NA,2024-06-29T10:24:57Z,2024-06-29T10:24:57Z,"Fix PR: #1482. I hope it's OK I am also fixing bugged styling enhancements menu in that PR and not just the hard to read colored type parameters. If necessary, I can split into two separate PRs.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6DBDeo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1443,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1443,eclipse.jdt.ui,2342905069,1443,"ClassFileEditorInputFactory: ""Its not allow to modify JavaModel during ReadOnly action. delta=Java Model[*]: {CHILDREN}""",jukzi,51790620,Jörg Kubitz,,CLOSED,2024-06-10T05:43:03Z,2024-08-19T11:19:22Z,"Happend when i started eclipse today:

```
eclipse.buildId=4.32.0.I20240529-1800
java.version=21.0.2
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=de_DE
Command-line arguments:  -os win32 -ws win32 -arch x86_64

org.eclipse.ui
Error
Mon Jun 10 07:37:20 CEST 2024
Its not allow to modify JavaModel during ReadOnly action. delta=Java Model[*]: {CHILDREN}
	org.eclipse.jdt.core[*]: {CHILDREN | RESOLVED CLASSPATH CHANGED}
		C:\Users\jkubitz\.p2\pool\plugins\org.osgi.annotation.versioning_1.1.2.202109301733.jar[*]: {REMOVED FROM CLASSPATH}
		C:\Users\jkubitz\.p2\pool\plugins\org.osgi.annotation.bundle_2.0.0.202202082230.jar[*]: {REMOVED FROM CLASSPATH}
		C:\Users\jkubitz\.p2\pool\plugins\org.osgi.service.component.annotations_1.5.1.202212101352.jar[*]: {REMOVED FROM CLASSPATH}
		C:\Users\jkubitz\.p2\pool\plugins\org.osgi.service.metatype.annotations_1.4.1.202109301733.jar[*]: {REMOVED FROM CLASSPATH}
		C:\Users\jkubitz\.p2\pool\plugins\org.osgi.service.prefs_1.1.2.202109301733.jar[*]: {REMOVED FROM CLASSPATH}
		C:\Users\jkubitz\.p2\pool\plugins\org.apache.ant_1.10.14.v20230922-1200\lib\ant.jar[*]: {REMOVED FROM CLASSPATH}
		antadapter[*]: {REORDERED}
		codeassist[*]: {REORDERED}
		dom[*]: {REORDERED}
		eval[*]: {REORDERED}
		formatter[*]: {REORDERED}
		model[*]: {REORDERED}
		search[*]: {REORDERED}
		C:\Users\jkubitz\platform-2023-05-29\eclipse\plugins\org.osgi.annotation.versioning_1.1.2.202109301733.jar[*]: {ADDED TO CLASSPATH}
		C:\Users\jkubitz\platform-2023-05-29\eclipse\plugins\org.osgi.annotation.bundle_2.0.0.202202082230.jar[*]: {ADDED TO CLASSPATH}
		C:\Users\jkubitz\platform-2023-05-29\eclipse\plugins\org.osgi.service.component.annotations_1.5.1.202212101352.jar[*]: {ADDED TO CLASSPATH}
		C:\Users\jkubitz\platform-2023-05-29\eclipse\plugins\org.osgi.service.metatype.annotations_1.4.1.202109301733.jar[*]: {ADDED TO CLASSPATH}

java.lang.IllegalStateException: Its not allow to modify JavaModel during ReadOnly action. delta=Java Model[*]: {CHILDREN}
	org.eclipse.jdt.core[*]: {CHILDREN | RESOLVED CLASSPATH CHANGED}
		C:\Users\jkubitz\.p2\pool\plugins\org.osgi.annotation.versioning_1.1.2.202109301733.jar[*]: {REMOVED FROM CLASSPATH}
		C:\Users\jkubitz\.p2\pool\plugins\org.osgi.annotation.bundle_2.0.0.202202082230.jar[*]: {REMOVED FROM CLASSPATH}
		C:\Users\jkubitz\.p2\pool\plugins\org.osgi.service.component.annotations_1.5.1.202212101352.jar[*]: {REMOVED FROM CLASSPATH}
		C:\Users\jkubitz\.p2\pool\plugins\org.osgi.service.metatype.annotations_1.4.1.202109301733.jar[*]: {REMOVED FROM CLASSPATH}
		C:\Users\jkubitz\.p2\pool\plugins\org.osgi.service.prefs_1.1.2.202109301733.jar[*]: {REMOVED FROM CLASSPATH}
		C:\Users\jkubitz\.p2\pool\plugins\org.apache.ant_1.10.14.v20230922-1200\lib\ant.jar[*]: {REMOVED FROM CLASSPATH}
		antadapter[*]: {REORDERED}
		codeassist[*]: {REORDERED}
		dom[*]: {REORDERED}
		eval[*]: {REORDERED}
		formatter[*]: {REORDERED}
		model[*]: {REORDERED}
		search[*]: {REORDERED}
		C:\Users\jkubitz\platform-2023-05-29\eclipse\plugins\org.osgi.annotation.versioning_1.1.2.202109301733.jar[*]: {ADDED TO CLASSPATH}
		C:\Users\jkubitz\platform-2023-05-29\eclipse\plugins\org.osgi.annotation.bundle_2.0.0.202202082230.jar[*]: {ADDED TO CLASSPATH}
		C:\Users\jkubitz\platform-2023-05-29\eclipse\plugins\org.osgi.service.component.annotations_1.5.1.202212101352.jar[*]: {ADDED TO CLASSPATH}
		C:\Users\jkubitz\platform-2023-05-29\eclipse\plugins\org.osgi.service.metatype.annotations_1.4.1.202109301733.jar[*]: {ADDED TO CLASSPATH}
	at org.eclipse.jdt.internal.core.DeltaProcessor.registerJavaModelDelta(DeltaProcessor.java:2026)
	at org.eclipse.jdt.internal.core.JavaModelOperation.addDelta(JavaModelOperation.java:176)
	at org.eclipse.jdt.internal.core.ChangeClasspathOperation.classpathChanged(ChangeClasspathOperation.java:71)
	at org.eclipse.jdt.internal.core.SetContainerOperation.executeOperation(SetContainerOperation.java:118)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:805)
	at org.eclipse.jdt.internal.core.JavaModelManager.getClasspathContainer(JavaModelManager.java:2208)
	at org.eclipse.jdt.core.JavaCore.getClasspathContainer(JavaCore.java:3950)
	at org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:3151)
	at org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:3315)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:2429)
	at org.eclipse.jdt.internal.core.JavaProject.buildStructure(JavaProject.java:511)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:245)
	at org.eclipse.jdt.internal.core.Openable.openAncestors(Openable.java:507)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:227)
	at org.eclipse.jdt.internal.core.Openable.openAncestors(Openable.java:507)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:227)
	at org.eclipse.jdt.internal.core.Openable.openAncestors(Openable.java:507)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:227)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:585)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:308)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:294)
	at org.eclipse.jdt.internal.core.JavaElement.exists(JavaElement.java:211)
	at org.eclipse.jdt.internal.core.Openable.exists(Openable.java:207)
	at org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditorInputFactory.createElementCached(ClassFileEditorInputFactory.java:58)
	at org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditorInputFactory.lambda$0(ClassFileEditorInputFactory.java:51)
	at org.eclipse.jdt.internal.core.JavaModelManager.cacheZipFiles(JavaModelManager.java:5765)
	at org.eclipse.jdt.internal.core.JavaModelManager.callReadOnly(JavaModelManager.java:5754)
	at org.eclipse.jdt.core.JavaCore.callReadOnly(JavaCore.java:6130)
	at org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditorInputFactory.createElement(ClassFileEditorInputFactory.java:51)
	at org.eclipse.ui.internal.EditorReference.createInput(EditorReference.java:269)
	at org.eclipse.ui.internal.EditorReference.restoreInput(EditorReference.java:243)
	at org.eclipse.ui.internal.EditorReference.getEditorInput(EditorReference.java:300)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityEditor.createPart(CompatibilityEditor.java:62)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.create(CompatibilityPart.java:342)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:977)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:939)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalInject(InjectorImpl.java:139)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:386)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:312)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:203)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:90)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:59)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:42)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributedPartRenderer.createWidget(ContributedPartRenderer.java:132)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:991)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.showTab(StackRenderer.java:1389)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:114)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:676)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:672)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run(PartRenderingEngine.java:543)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:527)
	at org.eclipse.e4.ui.workbench.renderers.swt.ElementReferenceRenderer.createWidget(ElementReferenceRenderer.java:73)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:991)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:147)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:672)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:147)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:672)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:147)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:672)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:48)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:672)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:79)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:114)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:61)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:676)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:147)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:672)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:660)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:672)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1079)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:152)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:639)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:546)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:668)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:605)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1481)
```
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/d2faacfd-88ca-4b6c-b6b3-4f2457c95c72)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1443/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1443,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6CL8Xz,eclipse.jdt.ui,2184168947,1443,NA,Jaawn,3043852,,,NA,2024-06-22T19:50:24Z,2024-06-22T19:50:24Z,"This is also getting triggered when using the F2 hotkey (on Windows) from a text editor to try to open the quick fix tooltip in the following scenario:
1. Declare a new variable while omitting the type e.g.:
`myObject = new Object();`
2. Position the text cursor (not the mouse cursor) on the variable name, which should be underlined in red, and press the ""Show Tooltip Description"" hotkey (F2 on Windows)
3. Observe that the tooltip displayed is incomplete and the exception in the Eclipse Error log

**Note:** the Quick Fix hotkey (Ctrl + 1 on Windows) still works fine, as does hovering the mouse cursor over the error to show the full tooltip.

Stack trace from error log:
```
java.lang.IllegalStateException: Its not allow to modify JavaModel during ReadOnly action. delta=Java Model[*]: {CHILDREN}
	sample[*]: {CHILDREN}
		src/main/java[*]: {CHILDREN}
			com.example.test[*]: {CHILDREN}
				[Working copy] MyClass.java[+]: {}
	at org.eclipse.jdt.internal.core.DeltaProcessor.registerJavaModelDelta(DeltaProcessor.java:2026)
	at org.eclipse.jdt.internal.core.JavaModelOperation.addDelta(JavaModelOperation.java:176)
	at org.eclipse.jdt.internal.core.BecomeWorkingCopyOperation.executeOperation(BecomeWorkingCopyOperation.java:49)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:805)
	at org.eclipse.jdt.internal.core.CompilationUnit.getWorkingCopy(CompilationUnit.java:1036)
	at org.eclipse.jdt.internal.core.CompilationUnit.getWorkingCopy(CompilationUnit.java:1002)
	at org.eclipse.jdt.internal.corext.util.StaticImportFavoritesCompletionInvoker.getStaticImportFavorites(StaticImportFavoritesCompletionInvoker.java:50)
	at org.eclipse.jdt.internal.corext.util.JavaModelUtil.getStaticImportFavorites(JavaModelUtil.java:1350)
	at org.eclipse.jdt.internal.ui.text.correction.UnresolvedElementsBaseSubProcessor.addStaticImportFavoriteProposals(UnresolvedElementsBaseSubProcessor.java:1474)
	at org.eclipse.jdt.internal.ui.text.correction.UnresolvedElementsBaseSubProcessor.collectVariableProposals(UnresolvedElementsBaseSubProcessor.java:355)
	at org.eclipse.jdt.internal.ui.text.correction.UnresolvedElementsSubProcessor.getVariableProposals(UnresolvedElementsSubProcessor.java:139)
	at org.eclipse.jdt.internal.ui.text.correction.QuickFixProcessor.process(QuickFixProcessor.java:435)
	at org.eclipse.jdt.internal.ui.text.correction.QuickFixProcessor.getCorrections(QuickFixProcessor.java:378)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionCollector.safeRun(JavaCorrectionProcessor.java:381)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.run(JavaCorrectionProcessor.java:341)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.process(JavaCorrectionProcessor.java:336)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectCorrections(JavaCorrectionProcessor.java:465)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:115)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.computeCompletionProposals(ProblemHover.java:89)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.<init>(ProblemHover.java:74)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover.createAnnotationInfo(ProblemHover.java:178)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover.getHoverInfo2(AbstractAnnotationHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaInformationProvider.getInformation2(JavaInformationProvider.java:74)
	at org.eclipse.jface.text.information.InformationPresenter.computeInformation(InformationPresenter.java:310)
	at org.eclipse.jface.text.AbstractInformationControlManager.doShowInformation(AbstractInformationControlManager.java:1101)
	at org.eclipse.jface.text.AbstractInformationControlManager.showInformation(AbstractInformationControlManager.java:1091)
	at org.eclipse.jface.text.source.SourceViewer.doOperation(SourceViewer.java:1009)
	at org.eclipse.jface.text.source.projection.ProjectionViewer.doOperation(ProjectionViewer.java:1468)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaSourceViewer.doOperationCached(JavaSourceViewer.java:182)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaSourceViewer.lambda$0(JavaSourceViewer.java:160)
	at org.eclipse.jdt.core.JavaCore.lambda$0(JavaCore.java:6146)
	at org.eclipse.jdt.internal.core.JavaModelManager.cacheZipFiles(JavaModelManager.java:5765)
	at org.eclipse.jdt.internal.core.JavaModelManager.callReadOnly(JavaModelManager.java:5754)
	at org.eclipse.jdt.core.JavaCore.callReadOnly(JavaCore.java:6130)
	at org.eclipse.jdt.core.JavaCore.runReadOnly(JavaCore.java:6145)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaSourceViewer.doOperation(JavaSourceViewer.java:160)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:206)
	at org.eclipse.ui.texteditor.TextOperationAction.lambda$0(TextOperationAction.java:130)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ui.texteditor.TextOperationAction.run(TextOperationAction.java:130)
	at org.eclipse.ui.texteditor.AbstractTextEditor$InformationDispatchAction.run(AbstractTextEditor.java:1816)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:124)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:98)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:299)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:233)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:174)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:165)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:204)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:569)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:644)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:91)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1294)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1159)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1184)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1169)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1211)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1207)
	at org.eclipse.swt.widgets.Widget.wmKeyDown(Widget.java:1934)
	at org.eclipse.swt.widgets.Control.WM_KEYDOWN(Control.java:5133)
	at org.eclipse.swt.widgets.Canvas.WM_KEYDOWN(Canvas.java:406)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4744)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5050)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3671)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1151)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:152)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:639)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:546)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:668)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:605)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1481)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6CL8Xz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1443,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6CzBrl,eclipse.jdt.ui,2194414309,1443,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-06-27T11:15:15Z,2024-06-27T11:15:15Z,"> F2 on Windows

reproducible. thanks.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6CzBrl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1444,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1444,eclipse.jdt.ui,2342915718,1444,JavaLeakTest fails since I20240608,jukzi,51790620,Jörg Kubitz,,CLOSED,2024-06-10T05:52:18Z,2024-06-11T13:19:28Z,"16 fails on all OS:
for example
```
Expected instance count: 0, actual: 1 Element 0 org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor org.eclipse.ui.texteditor.FindReplaceAction#fWorkbenchPart -> org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor@4ad0d464 org.eclipse.ui.texteditor.FindReplaceAction$1#this$0 -> org.eclipse.ui.texteditor.FindReplaceAction@5701c504 java.lang.Object[3] -> org.eclipse.ui.texteditor.FindReplaceAction$1@5cd4c384 org.eclipse.core.runtime.ListenerList#listeners -> [Ljava.lang.Object;@1157443d org.eclipse.core.internal.preferences.EclipsePreferences#preferenceChangeListeners -> [org.eclipse.ui.preferences.ScopedPreferenceStore$$Lambda$307/0x0000000800ed7848@66c3c813, org.ecli java.util.concurrent.ConcurrentHashMap$Node#val -> /instance/org.eclipse.ui.editors java.util.concurrent.ConcurrentHashMap$Node[35] -> org.eclipse.ui.editors=/instance/org.eclipse.ui.editors java.util.concurrent.ConcurrentHashMap#table -> [Ljava.util.concurrent.ConcurrentHashMap$Node;@3c8bdde7 org.eclipse.core.internal.preferences.EclipsePreferences#children -> {org.eclipse.ant.ui=/instance/org.eclipse.ant.ui, org.eclipse.core.expressions=/instance/org.eclips org.eclipse.core.internal.preferences.legacy.PreferenceForwarder#pluginRoot -> /instance org.eclipse.core.runtime.Plugin#preferences -> PreferenceForwarder(org.eclipse.core.resources) org.eclipse.osgi.internal.framework.BundleContextImpl#activator -> org.eclipse.core.resources java.lang.Object[3] -> org.eclipse.osgi.internal.framework.BundleContextImpl@6843d9a java.util.ArrayList#elementData -> [Ljava.lang.Object;@3de8e614 org.eclipse.osgi.internal.serviceregistry.ServiceRegistrationImpl#contextsUsing -> [org.eclipse.osgi.internal.framework.BundleContextImpl@5446f7f5, org.eclipse.osgi.internal.framewor org.eclipse.osgi.internal.location.BasicLocation#serviceRegistration -> {org.eclipse.osgi.service.datalocation.Location}={service.id=8, service.bundleid=0, service.scope=s org.eclipse.osgi.internal.location.EquinoxLocations#instanceLocation -> org.eclipse.osgi.internal.location.BasicLocation@34db5935 org.eclipse.osgi.internal.framework.EquinoxConfiguration#equinoxLocations -> org.eclipse.osgi.internal.location.EquinoxLocations@621a7d83 org.eclipse.osgi.internal.loader.EquinoxClassLoader#configuration -> org.eclipse.osgi.internal.framework.EquinoxConfiguration@674b2703 org.eclipse.osgi.internal.loader.EquinoxClassLoader -> org.eclipse.osgi.internal.loader.EquinoxClassLoader@409a7dc3[org.eclipse.jdt.ui.tests:3.15.500.v202 . Actual: 0

java.lang.AssertionError: Expected instance count: 0, actual: 1
Element 0
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor
org.eclipse.ui.texteditor.FindReplaceAction#fWorkbenchPart -> org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor@4ad0d464
org.eclipse.ui.texteditor.FindReplaceAction$1#this$0 -> org.eclipse.ui.texteditor.FindReplaceAction@5701c504
java.lang.Object[3] -> org.eclipse.ui.texteditor.FindReplaceAction$1@5cd4c384
org.eclipse.core.runtime.ListenerList#listeners -> [Ljava.lang.Object;@1157443d
org.eclipse.core.internal.preferences.EclipsePreferences#preferenceChangeListeners -> [org.eclipse.ui.preferences.ScopedPreferenceStore$$Lambda$307/0x0000000800ed7848@66c3c813, org.ecli
java.util.concurrent.ConcurrentHashMap$Node#val -> /instance/org.eclipse.ui.editors
java.util.concurrent.ConcurrentHashMap$Node[35] -> org.eclipse.ui.editors=/instance/org.eclipse.ui.editors
java.util.concurrent.ConcurrentHashMap#table -> [Ljava.util.concurrent.ConcurrentHashMap$Node;@3c8bdde7
org.eclipse.core.internal.preferences.EclipsePreferences#children -> {org.eclipse.ant.ui=/instance/org.eclipse.ant.ui, org.eclipse.core.expressions=/instance/org.eclips
org.eclipse.core.internal.preferences.legacy.PreferenceForwarder#pluginRoot -> /instance
org.eclipse.core.runtime.Plugin#preferences -> PreferenceForwarder(org.eclipse.core.resources)
org.eclipse.osgi.internal.framework.BundleContextImpl#activator -> org.eclipse.core.resources
java.lang.Object[3] -> org.eclipse.osgi.internal.framework.BundleContextImpl@6843d9a
java.util.ArrayList#elementData -> [Ljava.lang.Object;@3de8e614
org.eclipse.osgi.internal.serviceregistry.ServiceRegistrationImpl#contextsUsing -> [org.eclipse.osgi.internal.framework.BundleContextImpl@5446f7f5, org.eclipse.osgi.internal.framewor
org.eclipse.osgi.internal.location.BasicLocation#serviceRegistration -> {org.eclipse.osgi.service.datalocation.Location}={service.id=8, service.bundleid=0, service.scope=s
org.eclipse.osgi.internal.location.EquinoxLocations#instanceLocation -> org.eclipse.osgi.internal.location.BasicLocation@34db5935
org.eclipse.osgi.internal.framework.EquinoxConfiguration#equinoxLocations -> org.eclipse.osgi.internal.location.EquinoxLocations@621a7d83
org.eclipse.osgi.internal.loader.EquinoxClassLoader#configuration -> org.eclipse.osgi.internal.framework.EquinoxConfiguration@674b2703
org.eclipse.osgi.internal.loader.EquinoxClassLoader -> org.eclipse.osgi.internal.loader.EquinoxClassLoader@409a7dc3[org.eclipse.jdt.ui.tests:3.15.500.v202

. Actual: 0
at org.junit.Assert.fail(Assert.java:89)
at org.junit.Assert.failEquals(Assert.java:187)
at org.junit.Assert.assertNotEquals(Assert.java:201)
at org.eclipse.jdt.ui.leaktest.LeakTestCase.assertInstanceCount(LeakTestCase.java:129)
at org.eclipse.jdt.ui.tests.leaks.JavaLeakTest.internalTestEditorOpen(JavaLeakTest.java:378)
at org.eclipse.jdt.ui.tests.leaks.JavaLeakTest.internalTestEditorClose(JavaLeakTest.java:312)
at org.eclipse.jdt.ui.tests.leaks.JavaLeakTest.testJavaEditorBreadcrumbClose(JavaLeakTest.java:209)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)

```
https://download.eclipse.org/eclipse/downloads/drops4/I20240608-0320/testresults/html/org.eclipse.jdt.ui.tests_ep433I-unit-macM1-java17_macosx.cocoa.aarch64_17.html","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1444/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1444,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AoBoY,eclipse.jdt.ui,2157976088,1444,NA,Wittmaxi,16443184,Maximilian Wittmer,maximilian.wittmer@gmx.de,NA,2024-06-10T10:29:44Z,2024-06-10T10:29:44Z,Thank you for the report! This is caused by my PR for the Find/Replace overlay. I believe I know how to address this.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AoBoY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1444,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AoCBc,eclipse.jdt.ui,2157977692,1444,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-06-10T10:30:34Z,2024-06-10T10:30:34Z,thanks for informing,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AoCBc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1444,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Aymhu,eclipse.jdt.ui,2160748654,1444,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-06-11T13:19:14Z,2024-06-11T13:19:14Z,Fixed in https://download.eclipse.org/eclipse/downloads/drops4/I20240610-1800/ via https://github.com/eclipse-platform/eclipse.platform.ui/pull/1948,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Aymhu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1445,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1445,eclipse.jdt.ui,2342937887,1445,Random failing SaveParticipantTest.testFormatChange* with additional whitespace,jukzi,51790620,Jörg Kubitz,,OPEN,2024-06-10T06:09:24Z,2025-01-24T17:28:24Z,"SaveParticipantTest

4 fails in https://download.eclipse.org/eclipse/downloads/drops4/I20240608-0320/testresults/html/org.eclipse.jdt.ui.tests_ep433I-unit-mac64-java17_macosx.cocoa.x86_64_17.html
for example:

```
expected:<... { String s [= (String) ]o; } }> but was:<... { String s [ = (String)]o; } }>

org.junit.ComparisonFailure: expected:<... {
String s [= (String) ]o;
}
}> but was:<... {
String s [ = (String)]o;
}
}>
at org.junit.Assert.assertEquals(Assert.java:117)
at org.junit.Assert.assertEquals(Assert.java:146)
at org.eclipse.jdt.ui.tests.quickfix.SaveParticipantTest.testFormatChanges01(SaveParticipantTest.java:152)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
```

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/6cfec0c5-b76f-429c-84e0-b0e053685d4a)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1445/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1445,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AoFVM,eclipse.jdt.ui,2157991244,1445,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-06-10T10:37:04Z,2024-06-10T10:37:04Z,"Locally **randomly** reproducible sometimes on  various test methods. examples:
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/8ff87ca2-66e7-4bc8-8823-af3471faf02a)
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/554126e3-d6db-489e-90cd-e285759ac58e)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AoFVM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1445,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6B7vBw,eclipse.jdt.ui,2179919984,1445,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-06-20T06:31:56Z,2024-06-20T06:31:56Z,"again on mac:
https://download.eclipse.org/eclipse/downloads/drops4/I20240619-1800/testresults/html/org.eclipse.jdt.ui.tests_ep433I-unit-mac64-java17_macosx.cocoa.x86_64_17.html","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6B7vBw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1445,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6B7vYY,eclipse.jdt.ui,2179921432,1445,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-06-20T06:32:53Z,2024-06-20T06:32:53Z,duplicate: https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/79 (also only mac),"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6B7vYY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1445,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6B7wS1,eclipse.jdt.ui,2179925173,1445,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-06-20T06:35:53Z,2024-06-20T06:35:53Z,"single test fail on linux:
https://download.eclipse.org/eclipse/downloads/drops4/I20240619-1800/testresults/html/org.eclipse.jdt.ui.tests_ep433I-unit-cen64-gtk3-java21_linux.gtk.x86_64_21.html
```
expected:<...* A block comment on[] two lines */ ...> but was:<...* A block comment on[ * ] two lines */ ...>

org.junit.ComparisonFailure: expected:<...* A block comment on[] two lines
*/

...> but was:<...* A block comment on[
* ] two lines
*/

...>
at org.junit.Assert.assertEquals(Assert.java:117)
at org.junit.Assert.assertEquals(Assert.java:146)
at org.eclipse.jdt.ui.tests.quickfix.SaveParticipantTest.testBug232768_2(SaveParticipantTest.java:790)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6B7wS1/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1445,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6D4GpR,eclipse.jdt.ui,2212522577,1445,NA,carstenartur,3164220,Carsten Hammer,,NA,2024-07-07T17:53:54Z,2024-07-07T17:53:54Z,I think that is an old one. A number of reasons are possible. One could be that the formatting and compiler settings data structure gets duplicated in some situations. So working on a copy in some threads is not thread save. When changes are applied at runtime the question is which set of options is changed. That is a bug in jdt core. That is from the top of my head - could be in the meantime things have been improved. And then there was an issue with the undo not sure if related. I think in one of the junit tests you might still find a sleep to stabilize results.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6D4GpR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1445,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6aseEi,eclipse.jdt.ui,2595348770,1445,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-16T12:04:51Z,2025-01-16T12:04:51Z,"https://download.eclipse.org/eclipse/downloads/drops4/I20250115-1800/testresults/html/org.eclipse.jdt.ui.tests_ep435I-unit-win32-x86_64-java21_win32.win32.x86_64_21.html

```
org.junit.ComparisonFailure: expected:<...;
public class E1 {
[ /**
* Method foo with a really long description that will wrap lines on save
* operation
*
* @param a
* - integer input
*
* @return integer
*/
public int foo(int a) {
return 0;
]}
}> but was:<...;
public class E1 {
[ /**
* Method foo with a really long description that will wrap lines on save
* operation
*
* @param a - integer input
*
* @return integer
*/
public int foo(int a) {
return 0;
]}
}>
at org.junit.Assert.assertEquals(Assert.java:117)
at org.junit.Assert.assertEquals(Assert.java:146)
at org.eclipse.jdt.ui.tests.quickfix.SaveParticipantTest.testFormatChangeBug561164(SaveParticipantTest.java:1105)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6aseEi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1445,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6a8t41,eclipse.jdt.ui,2599607861,1445,NA,carstenartur,3164220,Carsten Hammer,,NA,2025-01-18T08:12:06Z,2025-01-18T08:12:06Z,"This is an old one. I still wonder if it might be caused by jdt.core to have more than one instance of an preferences settings set under some circumstances.

https://bugs.eclipse.org/bugs/show_bug.cgi?id=570172","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6a8t41/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1445,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6a8yjg,eclipse.jdt.ui,2599626976,1445,NA,carstenartur,3164220,Carsten Hammer,,NA,2025-01-18T08:20:33Z,2025-01-18T08:20:33Z,"Maybe duplicate of

https://bugs.eclipse.org/bugs/show_bug.cgi?id=360711","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6a8yjg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1445,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6bcfqe,eclipse.jdt.ui,2607938206,1445,NA,carstenartur,3164220,Carsten Hammer,,NA,2025-01-22T18:13:59Z,2025-01-22T18:13:59Z,"This points to another related bug

https://bugs.eclipse.org/bugs/show_bug.cgi?id=563771","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6bcfqe/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1445,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6blICo,eclipse.jdt.ui,2610200744,1445,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-23T15:57:37Z,2025-01-23T15:57:37Z,"> https://bugs.eclipse.org/bugs/show_bug.cgi?id=563771

i don't know how a performance thing would relate. However a problem with JavaModelManager.getOptions() is, that it returns a modifiable Hashtable but  the returned copy should not be used to modify the (cached) map. A clean solution would return a Hashtable generated like Collections.unmodifiableMap().","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6blICo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1445,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6blX4f,eclipse.jdt.ui,2610265631,1445,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-23T16:14:28Z,2025-01-23T16:14:28Z,debugged: GapTextStore is created in another thread (main) then it is read (JavaReconciler). As this Datastructur is not threadsafe that is wrong,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6blX4f/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1445,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6blktw,eclipse.jdt.ui,2610318192,1445,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-23T16:27:48Z,2025-01-23T16:27:48Z,"> JavaModelManager.getOptions()
> A clean solution would return a Hashtable generated like Collections.unmodifiableMap().

Or better to be compatible a thing like a CopyOnWriteHashtable. @carstenartur do you want to work on that?

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6blktw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1445,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6blsIC,eclipse.jdt.ui,2610348546,1445,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-23T16:38:02Z,2025-01-23T16:38:02Z,"In a case where a test failed locally i found this Exception(s) in my console, which is not shown when the tests succeed:
```
!ENTRY org.eclipse.jdt.ui 4 10006 2025-01-23 17:32:42.836
!MESSAGE The save participant 'org.eclipse.jdt.ui.postsavelistener.cleanup' caused an exception: org.eclipse.core.runtime.CoreException: End position lies outside document range
!STACK 1
org.eclipse.core.runtime.CoreException: End position lies outside document range
	at org.eclipse.ltk.internal.core.refactoring.Changes.asCoreException(Changes.java:66)
	at org.eclipse.ltk.core.refactoring.TextChange.perform(TextChange.java:247)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpChange.perform(CleanUpRefactoring.java:167)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.lambda$0(PerformChangeOperation.java:247)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2457)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2482)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation.java:284)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:213)
	at org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener.saved(CleanUpPostSaveListener.java:407)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$4.run(CompilationUnitDocumentProvider.java:1610)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.notifyPostSaveListeners(CompilationUnitDocumentProvider.java:1604)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.commitWorkingCopy(CompilationUnitDocumentProvider.java:1388)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$3.execute(CompilationUnitDocumentProvider.java:1463)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider$DocumentProviderOperation.run(TextFileDocumentProvider.java:133)
	at org.eclipse.ui.actions.WorkspaceModifyDelegatingOperation.execute(WorkspaceModifyDelegatingOperation.java:71)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.lambda$0(WorkspaceModifyOperation.java:112)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2457)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2482)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:131)
	at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:76)
	at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:66)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.executeOperation(TextFileDocumentProvider.java:461)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.saveDocument(TextFileDocumentProvider.java:783)
	at org.eclipse.ui.texteditor.AbstractTextEditor.performSave(AbstractTextEditor.java:5020)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSave(CompilationUnitEditor.java:1262)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(CompilationUnitEditor.java:1316)
	at org.eclipse.jdt.ui.tests.quickfix.SaveParticipantTest.editCUInEditor(SaveParticipantTest.java:75)
	at org.eclipse.jdt.ui.tests.quickfix.SaveParticipantTest.testFormatChangeBug488229_3(SaveParticipantTest.java:1032)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:54)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:42)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:72)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:94)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:70)
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:100)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443)
	at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:83)
	at org.eclipse.pde.internal.junit.runtime.PlatformUITestHarness.lambda$0(PlatformUITestHarness.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.E4Testable.lambda$1(E4Testable.java:127)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4077)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3693)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1151)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:665)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:573)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:178)
	at org.eclipse.pde.internal.junit.runtime.NonUIThreadTestApplication.start(NonUIThreadTestApplication.java:58)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:668)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:605)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1481)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1454)
Caused by: org.eclipse.text.edits.MalformedTreeException: End position lies outside document range
	at org.eclipse.text.edits.TextEditProcessor.checkIntegrityDo(TextEditProcessor.java:180)
	at org.eclipse.text.edits.TextEdit.dispatchCheckIntegrity(TextEdit.java:746)
	at org.eclipse.text.edits.TextEditProcessor.performEdits(TextEditProcessor.java:153)
	at org.eclipse.ltk.core.refactoring.TextChange.performEdits(TextChange.java:278)
	at org.eclipse.ltk.core.refactoring.TextFileChange.access$0(TextFileChange.java:1)
	at org.eclipse.ltk.core.refactoring.TextFileChange.lambda$0(TextFileChange.java:280)
	at org.eclipse.ui.internal.editors.text.UISynchronizationContext.run(UISynchronizationContext.java:35)
	at org.eclipse.core.internal.filebuffers.TextFileBufferManager.execute(TextFileBufferManager.java:593)
	at org.eclipse.ltk.core.refactoring.TextFileChange.performEdits(TextFileChange.java:291)
	at org.eclipse.ltk.core.refactoring.TextChange.perform(TextChange.java:239)
	... 96 more
!SUBENTRY 1 org.eclipse.ltk.core.refactoring 4 10001 2025-01-23 17:32:42.838
!MESSAGE End position lies outside document range
!STACK 0
org.eclipse.text.edits.MalformedTreeException: End position lies outside document range
	at org.eclipse.text.edits.TextEditProcessor.checkIntegrityDo(TextEditProcessor.java:180)
	at org.eclipse.text.edits.TextEdit.dispatchCheckIntegrity(TextEdit.java:746)
	at org.eclipse.text.edits.TextEditProcessor.performEdits(TextEditProcessor.java:153)
	at org.eclipse.ltk.core.refactoring.TextChange.performEdits(TextChange.java:278)
	at org.eclipse.ltk.core.refactoring.TextFileChange.access$0(TextFileChange.java:1)
	at org.eclipse.ltk.core.refactoring.TextFileChange.lambda$0(TextFileChange.java:280)
	at org.eclipse.ui.internal.editors.text.UISynchronizationContext.run(UISynchronizationContext.java:35)
	at org.eclipse.core.internal.filebuffers.TextFileBufferManager.execute(TextFileBufferManager.java:593)
	at org.eclipse.ltk.core.refactoring.TextFileChange.performEdits(TextFileChange.java:291)
	at org.eclipse.ltk.core.refactoring.TextChange.perform(TextChange.java:239)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpChange.perform(CleanUpRefactoring.java:167)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.lambda$0(PerformChangeOperation.java:247)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2457)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2482)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation.java:284)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:213)
	at org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener.saved(CleanUpPostSaveListener.java:407)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$4.run(CompilationUnitDocumentProvider.java:1610)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.notifyPostSaveListeners(CompilationUnitDocumentProvider.java:1604)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.commitWorkingCopy(CompilationUnitDocumentProvider.java:1388)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$3.execute(CompilationUnitDocumentProvider.java:1463)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider$DocumentProviderOperation.run(TextFileDocumentProvider.java:133)
	at org.eclipse.ui.actions.WorkspaceModifyDelegatingOperation.execute(WorkspaceModifyDelegatingOperation.java:71)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.lambda$0(WorkspaceModifyOperation.java:112)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2457)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2482)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:131)
	at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:76)
	at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:66)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.executeOperation(TextFileDocumentProvider.java:461)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.saveDocument(TextFileDocumentProvider.java:783)
	at org.eclipse.ui.texteditor.AbstractTextEditor.performSave(AbstractTextEditor.java:5020)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSave(CompilationUnitEditor.java:1262)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(CompilationUnitEditor.java:1316)
	at org.eclipse.jdt.ui.tests.quickfix.SaveParticipantTest.editCUInEditor(SaveParticipantTest.java:75)
	at org.eclipse.jdt.ui.tests.quickfix.SaveParticipantTest.testFormatChangeBug488229_3(SaveParticipantTest.java:1032)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:54)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:42)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:72)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:94)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:70)
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:100)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443)
	at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:83)
	at org.eclipse.pde.internal.junit.runtime.PlatformUITestHarness.lambda$0(PlatformUITestHarness.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.E4Testable.lambda$1(E4Testable.java:127)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4077)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3693)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1151)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:665)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:573)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:178)
	at org.eclipse.pde.internal.junit.runtime.NonUIThreadTestApplication.start(NonUIThreadTestApplication.java:58)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:668)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:605)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1481)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1454)

!ENTRY org.eclipse.jface 4 4 2025-01-23 17:32:42.870
!MESSAGE Save Problems : The file has been saved but one of the save actions failed.

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6blsIC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1445,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6bl-Kw,eclipse.jdt.ui,2610422448,1445,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-23T16:58:40Z,2025-01-23T16:58:40Z,"> In a case where a test failed locally i found this Exception(s) in my console

in another case there was no exception in the console ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6bl-Kw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1445,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6bv-kd,eclipse.jdt.ui,2613045533,1445,NA,carstenartur,3164220,Carsten Hammer,,NA,2025-01-24T17:28:22Z,2025-01-24T17:28:22Z,"> > https://bugs.eclipse.org/bugs/show_bug.cgi?id=563771
> 
> i don't know how a performance thing would relate. However a problem with JavaModelManager.getOptions() is, that it returns a modifiable Hashtable but  the returned copy should not be used to modify the (cached) map. A clean solution would return a Hashtable generated like Collections.unmodifiableMap().

The multithreading issue in the original version was meant to be fixed by creating a copy of the options map in some situations. This made the exception go away but introduced the performance issue while multithreading still is wrong. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6bv-kd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1448,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1448,eclipse.jdt.ui,2345633989,1448,"Eclipse 4.32 offers the execution environment JavaSE-23, although it is not yet supported",howlger,5197918,Holger Voormann,,CLOSED,2024-06-11T07:35:56Z,2024-08-30T09:41:54Z,"In the Eclipse SDK **4.32**, in the **_New Java Project_** dialog, in the **_Use an execution environment JRE_** drop-down menu, **`JavaSE-23` is offered** as an option, although it is not yet supported.

See also: https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1349#issuecomment-2144428116","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1448/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1448,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AwPb0,eclipse.jdt.ui,2160129780,1448,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2024-06-11T08:38:35Z,2024-06-11T08:38:35Z,"Running with JavaSE-23 EE is supported as this mandates the EE one wants to run with but it doesn't mandate that the bytecode generated from the project should be at level 23.
E.g. I can require using JavaSE-23 EE as my project uses new APIs in Java 23 despite the fact that the project will be compiled to Java 22(or older). 
What am I missing here? ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AwPb0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1448,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AwZ8y,eclipse.jdt.ui,2160172850,1448,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-06-11T08:59:30Z,2024-06-11T08:59:30Z,"> What am I missing here?

It is not about running but about compilation level. After this wizard is done, we allow & **set** Java 23 in compiler preferences for the project but generate and support only Java 22. So user assumes he can use Java 23 JLS but he can't actually.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AwZ8y/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1448,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Awbws,eclipse.jdt.ui,2160180268,1448,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2024-06-11T09:02:36Z,2024-06-11T09:02:36Z,"![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/574788/1fa0782a-3774-4785-866f-81c550bff9bb)
![Screenshot from 2024-06-11 12-02-04](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/574788/a4abd0a5-8aed-41fd-af9a-78c9c8d8e309)

None of them seems to allow setting 23 ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Awbws/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1448,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AweWq,eclipse.jdt.ui,2160190890,1448,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-06-11T09:07:37Z,2024-06-11T09:07:37Z,"> None of them seems to allow setting 23

But the **actual compiler options file** has 23!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AweWq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1448,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AwfUG,eclipse.jdt.ui,2160194822,1448,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2024-06-11T09:09:25Z,2024-06-11T09:09:25Z,Now I understand the issue.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AwfUG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1448,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AwiLz,eclipse.jdt.ui,2160206579,1448,NA,howlger,5197918,Holger Voormann,,NA,2024-06-11T09:14:50Z,2024-06-11T09:14:50Z,"The Java compiler setting _Use compliance from execution environment 'JavaSE-23' on the 'Java Build Path'_ does not do what it says, or at least what a user would expect. From the user's point of view the differences between `JavaSE-22` and `JavaSE-23` are not shown in the _Package/Project Explorer_, nor in the Java compiler setting (a user will not look at greyed-out/disabled fields).
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6AwiLz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1448,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6B1oK4,eclipse.jdt.ui,2178319032,1448,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2024-06-19T10:21:10Z,2024-06-19T10:21:10Z,"@iloveeclipse What do you think of the approach taken in https://github.com/akurtakov/eclipse.jdt.ui/commit/7a2ac1b9b2010b2a76052c42dec676749a5d5716 ? If this looks fine as idea I'll finish it. 
Btw, is there any public API to achieve the same as CompilerOptions.getLatestVersion() ?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6B1oK4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1448,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6B2RM3,eclipse.jdt.ui,2178487095,1448,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-06-19T11:42:14Z,2024-06-19T11:42:14Z,"> What do you think of the approach taken in [akurtakov@7a2ac1b](https://github.com/akurtakov/eclipse.jdt.ui/commit/7a2ac1b9b2010b2a76052c42dec676749a5d5716) ? If this looks fine as idea I'll finish it. Btw, is there any public API to achieve the same as CompilerOptions.getLatestVersion() ?

See my ideas / comments on https://github.com/eclipse-jdt/eclipse.jdt.core/pull/2606","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6B2RM3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1448,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6B2VYB,eclipse.jdt.ui,2178504193,1448,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2024-06-19T11:51:19Z,2024-06-19T11:51:19Z,I don't see this directly benefiting the use case here (EE version that the compiler doesn't know about yet) but I will wait for the API changes to shape up before looking further into this one to reduce cross-fire.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6B2VYB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1448,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6B2X4V,eclipse.jdt.ui,2178514453,1448,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-06-19T11:57:24Z,2024-06-19T11:57:24Z,"> I don't see this directly benefiting the use case here (EE version that the compiler doesn't know about yet)

Exact this use case could be avoided with new API, so Java 23 EE would not appear as allowed EE because there is no compiler support for that. 

> but I will wait for the API changes to shape up before looking further into this one to reduce cross-fire.

See changes on 
- https://github.com/eclipse-jdt/eclipse.jdt.core/pull/2606
- https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/452
- https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1469

For this ticket, the only additional change would be to restrict `JavaCore.SUPPORTED_VERSIONS` to exclude versions past `CompilerOptions.getLatestVersion()`.

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6B2X4V/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1448,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6KUqen,eclipse.jdt.ui,2320672679,1448,NA,howlger,5197918,Holger Voormann,,NA,2024-08-30T09:41:54Z,2024-08-30T09:41:54Z,"Closed: in the [Eclipse SDK 4.33RC2](https://download.eclipse.org/eclipse/downloads/drops4/S-4.33RC2-202408281820/), in the _New Java Project_ dialog, in the _Use an execution environment JRE_ drop-down menu, `JavaSE-23` is no longer offered as an option.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6KUqen/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1450,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1450,eclipse.jdt.ui,2348246855,1450,Add batch quick fix option when there is more than 1 fix,nlisker,37422899,,,OPEN,2024-06-12T09:11:28Z,2024-06-12T09:12:58Z,"When a single file has several problems of the same type, the compiler offers us to apply a solution on all similar problems. For example, with missing `@Override` annotations:
![image](https://github.com/eclipse-jdt/eclipse.jdt.core/assets/37422899/670132b5-9a15-464f-942e-b9a3256b8055)

However, in the following example:
```java
interface A {}

class B {

    B(A a) {
        getQ1();
        getQ2();
        getQ3();
    }
}
```
![image](https://github.com/eclipse-jdt/eclipse.jdt.core/assets/37422899/66888fe7-a117-406b-a926-bc863e714b4f)
we don't have ""fix 3 problems of the same category in file"".

Furthermore, selecting all similar problems in the Problems view, right clicking, and selecting Quick Fix (ctrl-1) shows the following dialog for the `@Override` example:
![image](https://github.com/eclipse-jdt/eclipse.jdt.core/assets/37422899/ac6af580-372c-4229-91d4-2dd708e94ee5)

But for my example with the missing methods, you get a message saying that there's no common quick fix:
![image](https://github.com/eclipse-jdt/eclipse.jdt.core/assets/37422899/caeb7598-da2c-4aed-abd2-850021ea5010)

There *are* common quick fixes. The dialog should be shown with the 2 options shown above (create a method and cast) under ""Select a fix"".

Using Eclipse 4.31.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1450/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1451,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1451,eclipse.jdt.ui,2348850904,1451,Project Explorer is just a big white block,losmurfs,10159345,,,CLOSED,2024-06-12T13:57:39Z,2024-06-12T14:09:38Z,"Project Explorer tab no longer functional in 2024-06.
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/10159345/0aff57a9-efc4-4664-9ab6-de5e08f3a5c6)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1451/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1451,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6A7ibc,eclipse.jdt.ui,2163091164,1451,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-06-12T14:02:01Z,2024-06-12T14:02:01Z,"1) You seem to have custom theme bundles installed, they may cause that issue.
2) This is wrong bug tracker. If you see same issue on a **clean** Eclipse installation without 3rd party theme plugins, please report this at https://github.com/eclipse-platform/eclipse.platform.ui/issues","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6A7ibc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1451,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6A7oMt,eclipse.jdt.ui,2163114797,1451,NA,losmurfs,10159345,,,NA,2024-06-12T14:09:36Z,2024-06-12T14:09:36Z,"This appears to have been caused by ""Darkest Dark Theme with DevStyle""","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6A7oMt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1452,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1452,eclipse.jdt.ui,2348854032,1452,Outline tab displays each line of text 3px tall,losmurfs,10159345,,,CLOSED,2024-06-12T13:59:01Z,2024-06-12T14:10:04Z,"Outline tab no longer useable in 2024-06.
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/10159345/c2463be4-897b-4c94-b5e4-ed53a54aac37)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1452/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1452,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6A7j1F,eclipse.jdt.ui,2163096901,1452,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-06-12T14:04:29Z,2024-06-12T14:04:29Z,Same comment as on https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1451. Closing.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6A7j1F/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1452,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6A7oh4,eclipse.jdt.ui,2163116152,1452,NA,losmurfs,10159345,,,NA,2024-06-12T14:10:03Z,2024-06-12T14:10:03Z,"This appears to have been caused by ""Darkest Dark Theme with DevStyle""","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6A7oh4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1454,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1454,eclipse.jdt.ui,2350544905,1454,NPE in OverriddenAssignmentFixCore,Bananeweizen,406876,Michael Keppler,,CLOSED,2024-06-13T08:38:32Z,2024-06-14T15:50:40Z,"In 2024-06 the unused code cleanup has been enhanced to also do ""join variable declaration"": https://eclipse.dev/eclipse/news/4.32/jdt.php#combine-decl-and-assignment
That new part of the cleanup causes NPEs on my projects (the cleanup itself has been enabled as cleanup action since years, so it definitely did not cause NPEs before). An example stack trace is:

```
java.lang.NullPointerException: Cannot invoke ""org.eclipse.jdt.core.dom.Expression.getStartPosition()"" because the return value of ""org.eclipse.jdt.core.dom.VariableDeclarationFragment.getInitializer()"" is null
	at org.eclipse.jdt.internal.corext.fix.OverriddenAssignmentFixCore$OverriddenAssignmentOperation.moveDown(OverriddenAssignmentFixCore.java:213)
	at org.eclipse.jdt.internal.corext.fix.OverriddenAssignmentFixCore$OverriddenAssignmentOperation.rewriteAST(OverriddenAssignmentFixCore.java:136)
	at org.eclipse.jdt.internal.corext.fix.CompilationUnitRewriteOperationsFixCore.createChange(CompilationUnitRewriteOperationsFixCore.java:123)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.calculateChange(CleanUpRefactoring.java:776)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor.calculateSolutions(CleanUpRefactoring.java:302)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor.acceptAST(CleanUpRefactoring.java:280)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1014)
```

I'm still trying to create a small reproducer.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1454/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1454,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6BJ_sg,eclipse.jdt.ui,2166881056,1454,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-06-13T22:14:18Z,2024-06-13T22:14:18Z,"Hi @Bananeweizen I had to reproduce the problem manually as a number of code scenarios weren't generating the conditions necessary.  I have created a fix that handles the situation of the initializer being null.  If you find the scenario, please add it here and I will add it as a regression test.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6BJ_sg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1459,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1459,eclipse.jdt.ui,2353263800,1459,Quickfix for empty switch should propose to add a default branch as an expression,nlisker,37422899,,,CLOSED,2024-06-14T12:25:39Z,2024-06-26T18:15:11Z,"From https://github.com/eclipse-jdt/eclipse.jdt.core/issues/2565.

```java
sealed interface Type {

	final class A implements Type {}
	final class B implements Type {}

	default void a() {
		Type t;
		switch (t) {
		}
	}
}
```
A quickfix option for the empty switch proposes to add a default branch. That default branch is added as a switch statement (with `default: break`) rather than an expression (`default -> {}`), which users might not want as the default completion. Probably  the solution is to add an option to add it as an expression.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1459/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1460,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1460,eclipse.jdt.ui,2354049338,1460,CTRL+Click functionality stops working in deeper code blocks,laimutisign,44777775,,,CLOSED,2024-06-14T20:32:00Z,2024-06-14T20:54:58Z,"Hello,
I have noticed, that CTRL+Click functionality stops working in deeper code blocks.
In the example below, the CTRL+Click function stops working at the 6th level of the method code block - CTRL+Click does no navigation to variables 'reader', 'exists', methods 'getAuthorities()', 'size()'. Functionality starts working again when the code is reorganized into a less deep hierarchy of code blocks (e.g., by removing / commenting  out the 'if' or 'for' statement).
```

@Service
public class CtrlClickNotWorking {

    @Autowired
    private PlatformTransactionManager transactionManager;
    private TransactionTemplate template;

    public CtrlClickNotWorking() {
    }
    
    public void someMethod(List<String> readerDataList) throws IOException {
        template = new TransactionTemplate(transactionManager);

        User reader = new User(""username"", ""password"", new ArrayList<>());
        for (GrantedAuthority auth : reader.getAuthorities()) {
            try {
                final boolean[] exists = { false };
                template.execute(new TransactionCallbackWithoutResult() {

                    @Override
                    protected void doInTransactionWithoutResult(TransactionStatus status) {
                        if (""some_auth"".equals(auth.getAuthority())) {

                            // !!!!!  CTRL+Click functionality stops working in this block:
                            // - no navigation to 'reader', 'getAuthorities()', 'size()', 'exists' !!!!

                            if (reader.getAuthorities().size() > 0) {
                                exists[0] = true;
                            }
                        }
                    }
                });

            } catch (Exception ex) {
                // do something
            }
        }
    }
}
```

Eclipse IDE for Enterprise Java and Web Developers
Version: 2024-03 (4.31.0)
Build id: 20240307-1437","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1460/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1460,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6BRCCy,eclipse.jdt.ui,2168725682,1460,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-06-14T20:33:34Z,2024-06-14T20:33:34Z,Couldyou please try with 4.32?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6BRCCy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1460,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6BRICQ,eclipse.jdt.ui,2168750224,1460,NA,laimutisign,44777775,,,NA,2024-06-14T20:54:11Z,2024-06-14T20:54:11Z,"Good news - with version 4.32 the problem is gone!

Eclipse IDE for Enterprise Java and Web Developers (includes Incubating components)
Version: 2024-06 (4.32.0)
Build id: 20240606-1231","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6BRICQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1462,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1462,eclipse.jdt.ui,2355744310,1462,Bug 513423 - Quick Fix provides incorrect placement of @Nullable,stephan-herrmann,24587985,Stephan Herrmann,,CLOSED,2024-06-16T12:42:43Z,2024-06-19T14:46:08Z,"From https://bugs.eclipse.org/513423

Given the class:
```
@NonNullByDefault
public class UncheckedException extends RuntimeException {
   public void printStackTrace(
      // Illegal redefinition of parameter s, inherited method from Throwable
      // does not constrain this parameter
      java.io.PrintStream s)
   {
      synchronized (s) {
         s.print(getClass().getName() + "": "");
         s.print(stackTrace);
      }
   }
}
```

According to:
http://help.eclipse.org/neon/index.jsp?topic=%2Forg.eclipse.jdt.doc.user%2Ftasks%2Ftask-using_null_annotations.htm

Type annotation should be:
`java.io.@Nullable PrintWriter s`

But Quick Fix provides it as:
`@Nullable java.io.PrintWriter s`

I am also not provided a ""Move type annotation"" fix as suggested by 4.7-M5:
https://www.eclipse.org/eclipse/news/4.7/M5/","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1462/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1462,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6BmSUB,eclipse.jdt.ui,2174297345,1462,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-06-17T19:47:13Z,2024-06-17T19:47:13Z,FWIW: the Move type annotation quick fix is now offered after the @Nullable annotation is added and the line marked in error.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6BmSUB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1464,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1464,eclipse.jdt.ui,2358382827,1464,Incorrect Javadoc presentation for {@return } with a nested tag,nlisker,37422899,,,CLOSED,2024-06-17T22:29:10Z,2024-06-20T20:52:31Z,"As an example, the javadoc of `Objects#notNull`:

```java
    /**
     * {@return {@code true} if the provided reference is non-{@code null};
     * {@code false} otherwise}
     * ...
     */ 
```
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/37422899/5256ab81-823c-4644-b696-111e6d018a54)

The period is placed in the wrong place, there's an extra `}` at the end, and the `@return` description is missing. The hover popup has the same issue.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1464/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1465,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1465,eclipse.jdt.ui,2359281893,1465,Drop support for older Java versions,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,CLOSED,2024-06-18T08:34:15Z,2024-08-08T08:53:25Z,"We should follow-up the jdt.core issue https://github.com/eclipse-jdt/eclipse.jdt.core/issues/2536 with support in the UI as well. This issue is to discuss and track the corresponding UI changes. To start with, we should remove the older versions of JEs and compliance levels from the UI.

The other issue that is kind of related but might be worth taking up is the ordering of the compliance levels. As we focus more on support for more recent Java versions, it doesn't make sense to stick to the older-versions-first approach on the UI drop down list. Perhaps, we should revert the order to reflect the trend in usage.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1465/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1465,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6B07pW,eclipse.jdt.ui,2178136662,1465,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-06-19T08:55:45Z,2024-06-19T08:55:45Z,"The compliance levels are added by JDT UI in the Java Compiler preferences. 
This issue will remove the compliance levels < 1.8.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6B07pW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1465,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6B1Dyu,eclipse.jdt.ui,2178170030,1465,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-06-19T09:11:31Z,2024-06-19T09:11:31Z,"These two settings on the Java Compiler preferences page can also be removed with this change as these are enabled only when the source compatibility level is less than 1.4 or 1.5 respectively:

* Disallow identifiers called 'assert' - When enabled, the compiler will issue an error or a warning whenever 'assert' is used as an identifier (reserved keyword in J2SE 1.4).
* Disallow identifiers called 'enum' - When enabled, the compiler will issue an error or a warning whenever 'enum' is used as an identifier (reserved keyword in J2SE 1.5).

Please comment if there is any objection to removing these.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6B1Dyu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1465,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6B1Koy,eclipse.jdt.ui,2178198066,1465,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-06-19T09:25:21Z,2024-06-19T09:25:21Z,"The option under ""Classfile Generation"" to ""Inline finally blocks"" can also be removed as the API doc for JavaCore.COMPILER_CODEGEN_INLINE_JSR_BYTECODE says ""Note that JSR inlining is optional only for target platform lesser than 1.5. From 1.5 on, the JSR inlining is mandatory.""","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6B1Koy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1465,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6B1MJ_,eclipse.jdt.ui,2178204287,1465,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-06-19T09:28:35Z,2024-06-19T09:28:35Z,"@noopur2507 : I have a patch, will push in few minutes.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6B1MJ_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1465,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6B1Onw,eclipse.jdt.ui,2178214384,1465,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-06-19T09:33:29Z,2024-06-19T09:33:29Z,"> The compliance levels are added by JDT UI in the Java Compiler preferences. This issue will remove the compliance levels < 1.8.

The above PR removes the compliance levels < 1.8 from the preferences.

The other 3 options mentioned above will be removed in a separate PR if there is no objection.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6B1Onw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1465,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6B1PC8,eclipse.jdt.ui,2178216124,1465,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-06-19T09:34:22Z,2024-06-19T09:34:22Z,"> @noopur2507 : I have a patch, will push in few minutes.

Please check if it provides the same changes. Feel free to merge/discard the above.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6B1PC8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1465,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6B1YNc,eclipse.jdt.ui,2178253660,1465,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-06-19T09:51:40Z,2024-06-19T09:51:40Z,"@noopur2507 : please check https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1469, it does a bit more in JDT UI but requires 

- https://github.com/eclipse-jdt/eclipse.jdt.debug/pull/452
- https://github.com/eclipse-jdt/eclipse.jdt.core/pull/2606

Could you please review my version of `ComplianceConfigurationBlock.java`. I've tried to do only needed changes, but later code could be cleaned up more.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6B1YNc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1465,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6B1jzS,eclipse.jdt.ui,2178301138,1465,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-06-19T10:11:24Z,2024-06-19T10:11:24Z,"> @noopur2507 : please check #1469, it does a bit more in JDT UI but requires
> Could you please review my version of `ComplianceConfigurationBlock.java`. I've tried to do only needed changes, but later code could be cleaned up more.

I had a quick look at the changes and the approach via new API looks fine.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6B1jzS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1465,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6HnkdJ,eclipse.jdt.ui,2275297097,1465,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-08-08T08:53:25Z,2024-08-08T08:53:25Z,"I've updated the code accordingly (versions are filtered and sorted with highest on top now), I've removed obsoleted compiler options from UI, and made some logic changes to deal with unsupported versions, see screenshots at https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1571 and https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1572.

If there is anything else to do, I would propose to create new dedicated tickets, closing this now.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6HnkdJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1471,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1471,eclipse.jdt.ui,2363367104,1471,Method parameter tooltip offers wrong class,robertyoudan,173324943,,,OPEN,2024-06-20T02:11:59Z,2024-06-28T05:16:42Z,"When mousing over a parameter type declaration, the tooltip offers up an unrelated class; not reachable by current package and imports and misses the correct class which is declared in the current file/class.
![eclipseerror](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/173324943/7944a421-7ba2-4195-bd67-fed9fd4f5d64)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1471/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1471,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Ch8-I,eclipse.jdt.ui,2189938568,1471,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-06-25T20:46:25Z,2024-06-25T20:46:25Z,"@robertyoudan Which version of Eclipse are you using?  I tried a similar generic abstract class with an inner static interface called Callback and I get the correct inner interface referred to.  When I do completion on Callback, I see the inner interface first and then the javax.security one after.   Are there any error markers in your file or are you using some add-on plug-ins?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Ch8-I/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1471,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6C5lsT,eclipse.jdt.ui,2196134675,1471,NA,robertyoudan,173324943,,,NA,2024-06-28T04:50:08Z,2024-06-28T04:50:08Z,"> @robertyoudan Which version of Eclipse are you using? I tried a similar generic abstract class with an inner static interface called Callback and I get the correct inner interface referred to. When I do completion on Callback, I see the inner interface first and then the javax.security one after. Are there any error markers in your file or are you using some add-on plug-ins?

Thanks for your reply. I believe it was the current version (4.32) but there's a small possibility it was 4.31. No build errors. I will try to reproduce today (using 4.32).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6C5lsT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1471,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6C5mTo,eclipse.jdt.ui,2196137192,1471,NA,robertyoudan,173324943,,,NA,2024-06-28T04:53:20Z,2024-06-28T04:53:20Z,"Yep. Still does it with the current version. No build errors. Latest Temurin JDK (21.0.3.9-hotspot). Note when I get rid of the ""..."" it only finds the correct interface.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6C5mTo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1471,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6C5m0_,eclipse.jdt.ui,2196139327,1471,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-06-28T04:56:18Z,2024-06-28T04:56:18Z,Ideally you should provide a simple project (with settings) demonstrating the problem.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6C5m0_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1471,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6C5pEk,eclipse.jdt.ui,2196148516,1471,NA,robertyoudan,173324943,,,NA,2024-06-28T05:05:44Z,2024-06-28T05:05:44Z,"> Ideally you should provide a simple project (with settings) demonstrating the problem.

Believe me; if it was that simple I would have! This is part of a huge project so I will need to spend some time ""de-coupling"" the hierarchy,","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6C5pEk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1471,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6C5rXT,eclipse.jdt.ui,2196157907,1471,NA,robertyoudan,173324943,,,NA,2024-06-28T05:14:21Z,2024-06-28T05:14:21Z,"I just noticed another seemingly unrelated side effect. I have one codebase without the Callback parameter and one with it still included. The type hierarchy of an unrelated class has extra descendants that actually have NO RELATIONSHIP with the type hierarchy! See screenshot. Once the Callback class and parameters are removed, the erroneous descendants disappear!

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/173324943/58c6c7af-815c-422a-8960-eb7dfd737212)

NOTE: the DrawingFilter interface extends NOTHING.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6C5rXT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1472,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1472,eclipse.jdt.ui,2364113966,1472,[23] JEP 467: Render markdown doc comments,stephan-herrmann,24587985,Stephan Herrmann,,CLOSED,2024-06-20T10:39:05Z,2024-09-12T10:23:55Z,"See https://github.com/eclipse-jdt/eclipse.jdt.core/issues/2429 and https://openjdk.org/jeps/467

This issue is to coordinate activities needed for rendering markdown documentation in the UI (hover / javadoc view).

It has been proposed to use Mylyn Wikitext for this purpose, which raises questions like moving that project to Eclipse Platform. There are transitive dependencies that must be carefully checked before such move.

Alternatively, I could imagine that plain rendering (to HTML?) could be delegated via a new extension point, so that the wikitext dependency (with all its transitive dependencies) could be kept separate from jdt.ui.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1472/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1472,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6CXOHT,eclipse.jdt.ui,2187125203,1472,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-06-24T18:04:44Z,2024-06-24T18:04:44Z,"Before creating a dependency on Mylyn Wikitext JDT / Platform would like to see the dependency on guava removed.

See
* https://github.com/eclipse-jdt/eclipse.jdt.core/issues/2429#issuecomment-2180464270 ff.
* https://github.com/eclipse-mylyn/org.eclipse.mylyn/issues/521

From briefly scanning a few uses of guava in wikitext I haven't yet found anything that would require rocket science...
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6CXOHT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1472,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6D1GHU,eclipse.jdt.ui,2211733972,1472,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-07-06T10:38:55Z,2024-07-06T10:38:55Z,"I had to replace https://github.com/eclipse-mylyn/org.eclipse.mylyn/pull/562 with https://github.com/eclipse-mylyn/org.eclipse.mylyn/pull/568 - let's hope this converges quickly.

@iloveeclipse I'm afraid more ""organizational"" steps are needed to enable JDT to consume mylyn wikitext. What would be the best approach to coordinate activities like release of mylyn wikitext (required?), adding required dependencies to eclipse-sdk-prereqs, etc.? Could you help coordinate  (or point out which person / entity could help)?

I'm afraid these activities are already on the critical path towards releasing support for Java 23.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6D1GHU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1472,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6D1I3g,eclipse.jdt.ui,2211745248,1472,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-07-06T11:37:30Z,2024-07-06T11:37:30Z,"There is a **plan B**, and I'm dumbfounded how could I have missed that: 

In https://bugs.openjdk.org/browse/JDK-8316039 it says:
> The implementation employs a third-party library, [commonmark-java](https://github.com/commonmark/commonmark-java), to transform Markdown to HTML.

It's licenced under ""BSD 2-Clause 'Simplified' License"", see https://github.com/commonmark/commonmark-java/blob/main/LICENSE.txt

Advantages:
* it has **no dependencies** of its own!
* using this library would guarantee that we use the exact same rendering as the javadoc tool!

@iloveeclipse what steps would be needed to allow JDT to use this library?
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6D1I3g/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1472,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6D1Ym9,eclipse.jdt.ui,2211809725,1472,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-07-06T16:15:18Z,2024-07-06T16:15:18Z,"> what steps would be needed to allow JDT to use this library?

This is for JDT UI, Core **and** batch compiler, or for UI and Core parts only?

Batch compiler would probably need to embed the library, as it is in most cases used as a single jar. If so, later two would just import it from batch compiler which would export new packages.

If we don't plan to use in batch compiler, but in Core and UI only, we can either wrap the library in a dedicated bundle or embed in JDT Core amd export to others.

If the question is not about embedding the library, but only about licensing & shipping with SDK, I would redirect it to @merks and @akurtakov who most likely know the answer. I'm also not sure if that library must be wrapped as an OSGI bundle by Orbit or it has already proper manifest and could be ""just"" added to the target platform.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6D1Ym9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1472,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6D1Zn4,eclipse.jdt.ui,2211813880,1472,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-07-06T16:33:29Z,2024-07-06T16:33:29Z,"> > what steps would be needed to allow JDT to use this library?
> 
> This is for JDT UI, Core **and** batch compiler, or for UI and Core parts only?

not for the batch compiler.
 
> [,,,] we can either wrap the library in a dedicated bundle or embed in JDT Core amd export to others.
>
> If the question is not about embedding the library, but only about licensing & shipping with SDK, I would redirect it to @merks and @akurtakov who most likely know the answer. 

Embedding or separate bundle would both be fine by me.  Either way licensing would of course be the first issue.

> I'm also not sure if that library must be wrapped as an OSGI bundle by Orbit or it has already proper manifest and could be ""just"" added to the target platform.

I don't see a manifest but module-info.java (with no dependencies, only listing all exported packages).
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6D1Zn4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1472,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6D3bnu,eclipse.jdt.ui,2212346350,1472,NA,merks,208716,Ed Merks,,NA,2024-07-07T06:57:38Z,2024-07-07T06:57:38Z,"Orbit has this content:

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/208716/c9a65901-cded-4450-9601-56dcc7b72440)

- https://repo1.maven.org/maven2/org/commonmark/commonmark/0.22.0/
- https://repo1.maven.org/maven2/org/commonmark/

They have of course been IP reviewed and approved.  And yes, these need to be wrapped.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6D3bnu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1472,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6D3jnP,eclipse.jdt.ui,2212379087,1472,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-07-07T09:06:08Z,2024-07-07T09:06:08Z,"Thanks @merks that's good news! And sorry I didn't look in Orbit myself :)

As for the wrapping: eclipse-sdk-prereqs already points to https://download.eclipse.org/tools/orbit/simrel/orbit-aggregation/milestone/S202406281210 and in there I can see a readily wrapped https://www.eclipse.org/downloads/download.php?file=/tools/orbit/simrel/orbit-aggregation/milestone/S202406281210/plugins/org.commonmark_0.22.0.v20240316-0700.jar so we should be all set! :tada: 

Right?

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6D3jnP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1472,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6D3j7r,eclipse.jdt.ui,2212380395,1472,NA,merks,208716,Ed Merks,,NA,2024-07-07T09:10:35Z,2024-07-07T09:10:35Z,"Yes, you can start to use this the same way as batik is being used and it's wrapped just as batik is wrapped.  For inquiring minds, it's wrapped by this:

https://github.com/eclipse-orbit/orbit-simrel/blob/bac46507329fd2224c412d3ea202a1ce796576ef/maven-bnd/tp/MavenBND.target#L1419-L1518

Of course this will be updated whenever a new version shows up on Maven Central...

I'm generally the one keeping the target platform up-to-date so if you need help or have questions just ask.  😀 ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6D3j7r/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1472,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Ic9Ny,eclipse.jdt.ui,2289292146,1472,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-08-14T16:44:20Z,2024-08-14T16:44:20Z,"Here are some sneak previews of this feature based on [latest from JDT/Core](https://github.com/eclipse-jdt/eclipse.jdt.core/pull/2821) and https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1587:

![Markdown_class](https://github.com/user-attachments/assets/9782a5a1-458b-4daf-814d-6f7625aa401f)

![Markdown_method](https://github.com/user-attachments/assets/3009ca19-ce59-4ee9-bc4c-c58a0f8e9f26)

Note the free mix of markdown syntax with traditional javadoc tags.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Ic9Ny/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1472,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6IekRG,eclipse.jdt.ui,2289714246,1472,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-08-14T19:31:59Z,2024-08-14T19:31:59Z,"Initial implementation has been merged (https://github.com/eclipse-jdt/eclipse.jdt.ui/commit/b6d65147ae32a6f503450e8ecd1e7e2a3eb093a4)

If remaining problems are detected, those will be handled via new issues.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6IekRG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1472,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6L0Zv7,eclipse.jdt.ui,2345769979,1472,NA,nlisker,37422899,,,NA,2024-09-12T09:39:53Z,2024-09-12T09:39:53Z,"@stephan-herrmann I know that this is only for doc comments, but can the solution be expanded to rendering md files (as in an editor)? Users can install the Mylyn plugin, but if a solution is included already, can it ""just"" be exposed?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6L0Zv7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1472,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6L0wNl,eclipse.jdt.ui,2345861989,1472,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-09-12T10:23:54Z,2024-09-12T10:23:54Z,"> @stephan-herrmann I know that this is only for doc comments, but can the solution be expanded to rendering md files (as in an editor)? Users can install the Mylyn plugin, but if a solution is included already, can it ""just"" be exposed?

I believe these are (similar but) disjoint use cases:
* with mylyn wikitext files containing nothing but markdown text can be viewed and edited, nothing java specific here
* via this issue JDT has learned to *render a read only view* of markdown sections, that are (a) embedded in a Java file, and (b) have special interpretation both of (b.1) javadoc tags and (b.2) links to Java elements.

Neither is mylyn wikitext able to handle Java files, javadoc tags etc., nor do we have a solution for wysiwyg editing of javadoc of any flavor.

So a single solution that serves all purposes is not in sight.

If you are proposing to add a read-only view of pure .md files, such a view could be implemented using the commonmark plugins, used also for doc comments, but that would still be a new view, with no clear connection to Java / JDT.

If significant benefit over installing mylyn wikitext exists (does it?) then such view could be proposed as a small new plugin under the Platform/UI umbrella.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6L0wNl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1476,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1476,eclipse.jdt.ui,2372340487,1476,Sidebar and error markers not shown in Java Editor,ptziegler,70652978,Patrick Ziegler,,CLOSED,2024-06-25T10:40:27Z,2024-06-25T12:35:52Z,"The sidebar on the left side of the Java editor, which usually shows problem markers and line numbers, is broken in the currently nightly build. 

To reproduce:

 - Download and install the nightly build: https://download.eclipse.org/eclipse/downloads/drops4/I20240624-1800/
 - Create a new Java project
 - Create a new Java file 

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/70652978/23809e1c-fb17-4008-b566-e15f37edce33)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1476/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1476,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6CcwPA,eclipse.jdt.ui,2188575680,1476,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-06-25T10:41:57Z,2024-06-25T10:41:57Z,"Any errors in the log?
I run nightly build without issues (on Linux).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6CcwPA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1476,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6CcyPW,eclipse.jdt.ui,2188583894,1476,NA,ptziegler,70652978,Patrick Ziegler,,NA,2024-06-25T10:46:32Z,2024-06-25T10:46:32Z,"> Any errors in the log? I run nightly build without issues (on Linux).

I was a little suspicious because the log is empty. But even with ""-consoleLog"", no error is shown.

![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/70652978/14035552-e391-4f58-8f8c-887081baef8a)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6CcyPW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1476,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Cc74y,eclipse.jdt.ui,2188623410,1476,NA,humphreygao,52394598,,,NA,2024-06-25T10:56:45Z,2024-06-25T10:56:45Z,Related to the screen resolution. And the color picker does not work as well.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Cc74y/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1476,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Cc9Tt,eclipse.jdt.ui,2188629229,1476,NA,ptziegler,70652978,Patrick Ziegler,,NA,2024-06-25T10:59:45Z,2024-06-25T10:59:45Z,"> Related to the screen resolution. And the color picker does not work as well.

That's something I can verify... I just switched from 1920x1200 to 1600x900 and the sidebar shows up again.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Cc9Tt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1476,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6CdHhj,eclipse.jdt.ui,2188671075,1476,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-06-25T11:21:32Z,2024-06-25T11:21:32Z,@ptziegler : please create this bug at SWT project. JDT UI is not the right component.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6CdHhj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1476,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6CdK1J,eclipse.jdt.ui,2188684617,1476,NA,ptziegler,70652978,Patrick Ziegler,,NA,2024-06-25T11:29:15Z,2024-06-25T11:29:15Z,Will do. Thank you both for the quick response!,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6CdK1J/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1476,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Cdrqo,eclipse.jdt.ui,2188819112,1476,NA,ptziegler,70652978,Patrick Ziegler,,NA,2024-06-25T12:35:50Z,2024-06-25T12:35:50Z,In case anyone else is running into this issue: https://github.com/eclipse-platform/eclipse.platform.swt/pull/1301,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Cdrqo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1480,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1480,eclipse.jdt.ui,2376386902,1480,"Outline View subclasses are fully expanded by default whenever a class is selected, whereas before the Outline View was not fully expanded by default",jmohrmann,9707232,Joel Mohrmann,,OPEN,2024-06-26T22:39:46Z,2024-06-27T06:43:56Z,"In Eclipse 2024-06, I noticed that, when selecting a Java class, the Outline View loads all the methods, subclasses, etc. for that class, but the subclasses and inner anonymous classes are all fully expanded by default. 

In previous versions of Eclipse (2024-03 and prior), only methods that contained anonymous classes were expanded, not all the methods of every subclass. In 2024-06, I usually have to click ""Collapse All"" and then expand just the top-level type to get a view similar to what it used to be.

I surmise that this is not an intentional change to the way Eclipse operates and am therefore reporting this as a bug.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1480/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1480,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Cw8LV,eclipse.jdt.ui,2193867477,1480,NA,howlger,5197918,Holger Voormann,,NA,2024-06-27T06:00:50Z,2024-06-27T06:00:50Z,"This regression might be related to the following part of code:

https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/690340fdd53a50e5050c77a423dcc857c2b6f7ba/org.eclipse.jdt.ui/ui/org/eclipse/jdt/internal/ui/javaeditor/JavaOutlinePage.java#L413-L414

Note: This was [first asked on Stack Overflow](https://stackoverflow.com/q/78644800/6505250).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Cw8LV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1480,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6CxF_E,eclipse.jdt.ui,2193907652,1480,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-06-27T06:34:29Z,2024-06-27T06:34:29Z,"Similar to this one: https://github.com/eclipse-platform/eclipse.platform.ui/issues/2002, related to https://github.com/eclipse-platform/eclipse.platform.ui/pull/1072.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6CxF_E/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1480,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6CxGm_,eclipse.jdt.ui,2193910207,1480,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-06-27T06:36:35Z,2024-06-27T06:36:35Z,@Wittmaxi : could you please check?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6CxGm_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1480,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6CxIED,eclipse.jdt.ui,2193916163,1480,NA,Wittmaxi,16443184,Maximilian Wittmer,maximilian.wittmer@gmx.de,NA,2024-06-27T06:41:09Z,2024-06-27T06:41:09Z,"@iloveeclipse If this issue is reported to the JavaOutlinePage, then there is probably something different going on here.

The bug reported in ui was referring to the ProjectExplorer using ""setAutoExpandOnSingleChildPaths"" of AbstractTreeViewer, yet I don't believe this view uses that feature.

I still need to check how to solve the other issue","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6CxIED/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1480,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6CxJFM,eclipse.jdt.ui,2193920332,1480,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-06-27T06:43:55Z,2024-06-27T06:43:55Z,"@Wittmaxi : I've just assumed that ""Outline"" as a ""shared"" view was also involved in the changes around https://github.com/eclipse-platform/eclipse.platform.ui/pull/1072.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6CxJFM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1488,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1488,eclipse.jdt.ui,2390173687,1488,Find/Replace does not work,TT1x1,174690410,,,CLOSED,2024-07-04T07:39:12Z,2024-07-09T12:11:38Z,"Find/Replace does not replace the found string correctly. With the sample code such as:

```
public class Test {

	public void a(int x) throws MyException {
		
	}

	public void b(int y, int b) throws MyException {
		
	}	
}
```

Do as follows:

1) Try to find ""MyException"" in code (Direction: forward, Scope: all, Options: wrap search)
2) When the first matching ""MyException"" word is found/highlighted, click ""Replace/Find"" or ""Replace"" to replace with ""SomeOtherException""
3) IDE skips the highlighted word and replaces the second ""MyException"" word with ""SomeOtherException"", which is not correct

This problem appears at least in:
- Eclipse JEE 2024-03
- Eclipse JEE 2024-06","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1488/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1488,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ELADd,eclipse.jdt.ui,2217476317,1488,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-07-09T12:09:29Z,2024-07-09T12:09:29Z,Can't reproduce on master following steps given. More info needed how to reproduce.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ELADd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1488,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ELBSu,eclipse.jdt.ui,2217481390,1488,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-07-09T12:11:38Z,2024-07-09T12:11:38Z,"Note: this is most likely not related to JDT UI at all (as find/replace is a Platfrom UI contributed feature), if you can reproduce, please create bug at https://github.com/eclipse-platform/eclipse.platform.ui. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ELBSu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1489,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1489,eclipse.jdt.ui,2390569887,1489,Test failures in QuickFixTest17 and UtilitiesTest ,noopur2507,8749449,Noopur Gupta,,CLOSED,2024-07-04T10:53:16Z,2024-07-04T10:59:37Z,"7 tests are failing in JDT UI in I20240703-1800 from QuickFixTest17 and UtilitiesTest:

https://download.eclipse.org/eclipse/downloads/drops4/I20240703-1800/testresults/html/org.eclipse.jdt.ui.tests_ep433I-unit-mac64-java17_macosx.cocoa.x86_64_17.html

These are reported in
* https://github.com/eclipse-jdt/eclipse.jdt.core/issues/2672","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1489/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1489,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Dpdj1,eclipse.jdt.ui,2208684277,1489,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-07-04T10:54:37Z,2024-07-04T10:54:37Z,UtilitiesTest#testGetPossibleTypeKindsForTypes needs a fix in JDT UI. See https://github.com/eclipse-jdt/eclipse.jdt.core/issues/2672#issuecomment-2208678550.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Dpdj1/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1491,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1491,eclipse.jdt.ui,2390840855,1491,snippet javadoc is not formatted as snippet,jukzi,51790620,Jörg Kubitz,,CLOSED,2024-07-04T13:09:22Z,2024-09-06T22:09:39Z,"example from java.nio.file.DirectoryStream
![image](https://github.com/eclipse-jdt/eclipse.jdt.ui/assets/51790620/a04f5cae-0cc4-4d35-aece-48ce4914695b)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1491/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1491,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6FNWzB,eclipse.jdt.ui,2234870977,1491,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-07-18T00:20:19Z,2024-07-18T00:20:19Z,@jukzi This is working for me after my fix for adding parameterized type support to snippet hover.  Could you confirm it works for you too with latest JDT UI?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6FNWzB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1491,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6FvJ4k,eclipse.jdt.ui,2243730980,1491,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-07-22T20:10:17Z,2024-07-22T20:10:17Z,Closing as done.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6FvJ4k/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1491,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6IjHR4,eclipse.jdt.ui,2290906232,1491,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-08-15T08:45:39Z,2024-08-15T08:45:39Z,"@jjohnstn  i am sorry to say it got even worse for me - the javadoc is empty now (I20240811-1800):
![image](https://github.com/user-attachments/assets/c9c2a1a6-cbe3-4a68-8a9e-6f34a2429d56)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6IjHR4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1491,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Imcy9,eclipse.jdt.ui,2291780797,1491,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-08-15T17:22:47Z,2024-08-15T17:22:47Z,"Hi @jukzi Something is different with your set-up.  Using I20240813 SDK with justj-22, it is working fine and I get the following when paging down to the last snippet:

![javadoc](https://github.com/user-attachments/assets/d1549633-8329-4409-a280-60e9fe8347c2)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Imcy9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1491,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6InSG8,eclipse.jdt.ui,2291999164,1491,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-08-15T18:58:07Z,2024-08-15T18:58:07Z,"I tried it on another computer as well and can't see the javadoc.
lets make it a minimal reproducer, that does not show javadoc for me ( I20240814-1800, win10, compiled against org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.1.v20231028-0937\jre), to be sure we talk about the same javadoc:
example from https://openjdk.org/jeps/413
```
/**
 * The following code shows how to use {@code Optional.isPresent}:
 * {@snippet :
 * if (v.isPresent()) {
 *     System.out.println(""v: "" + v.get());
 * }
 * }
 */
class JEP413ExampleEmpty {

}

/**
 * Test
 * {@snippet lang = java :
 * {}
 * }
 */
class Empty {

}

/**
 * Test
 * {@snippet lang = java :
 *      Path dir = ...
 * }
 */
class Wrong {

}
```

![image](https://github.com/user-attachments/assets/c0bda946-e2d4-4ff2-92a1-b78868e738fd)
![image](https://github.com/user-attachments/assets/4b3a538c-aea0-41c7-abdd-63a23754abc6)

for the Jep413Example there is a warning:
![image](https://github.com/user-attachments/assets/0638baa6-2b85-4de9-82b6-42cd5e0d6daf)




","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6InSG8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1491,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6I7OBe,eclipse.jdt.ui,2297225310,1491,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-08-19T18:52:03Z,2024-08-19T18:52:03Z,"@jukzi What do you mean compiled against the JRE?

I run the downloaded/unzipped  Linux gtk x86-64 I20240814-1800 SDK from the command line (in this case I have OpenJDK installed: /usr/lib/jvm/java-21-openjdk-21.0.4.0.7-2.fc40.x86_64/lib/jrt-fs.jar

It works fine as does my previous setup using I20240813.  Perhaps this is Win-specific.  Unfortunately, I don't have access to Windows or Mac.

![Screenshot from 2024-08-19 14-49-59](https://github.com/user-attachments/assets/5a45eb69-fb9e-4947-8fe3-a47062a00593)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6I7OBe/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1491,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6I7Odn,eclipse.jdt.ui,2297227111,1491,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-08-19T18:53:05Z,2024-08-19T18:53:05Z,FWIW: I made no changes to Preferences/etc.. and simply created a Java project and added a package to which I added your test file.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6I7Odn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1491,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6I7kgg,eclipse.jdt.ui,2297317408,1491,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-08-19T19:45:07Z,2024-08-19T19:45:07Z,"> What do you mean compiled against the JRE?

The java that that was selected in the preferences.

> Perhaps this is Win-specific.

Is there any related junit test that i could test on my windows? Or any hint where i could start to debug?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6I7kgg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1491,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6I70cg,eclipse.jdt.ui,2297382688,1491,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-08-19T20:22:12Z,2024-08-19T20:22:12Z,"Ok, I don't think the JRE should change the results as it should be the JDT compiler doing the parsing.  I would suggest you debug: CoreJavadocAccessImpl.java.  This converts the Javadoc into html which is used in the hover.  I would suggest you start by debugging at handleSnippet().   If the tag is being marked as invalid, then that would explain your empty snippet output.  From there, you can look at: JavadocParser in the compiler which has a parseSnippet() method. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6I70cg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1491,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6JAsve,eclipse.jdt.ui,2298661854,1491,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-08-20T11:47:32Z,2024-08-20T11:47:32Z,"Turns out the javaproject that references the JDK has to be compiled with Compiler compliance setting 18+.
It is not enough that it is an 18+ jdk that contains the source
![image](https://github.com/user-attachments/assets/f8e77b32-e397-4fc9-b62c-3df428ba40a7)
workaround:
![image](https://github.com/user-attachments/assets/4017ddb4-e7ae-4664-b545-9bb070a2fcd5)
Would be better if the compiler version used to render the javadoc would match the version of the .class file that contains the javadoc.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6JAsve/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1491,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6JFLV5,eclipse.jdt.ui,2299835769,1491,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-08-20T22:00:30Z,2024-08-20T22:00:30Z,Glad you found the reason for the problem.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6JFLV5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1492,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1492,eclipse.jdt.ui,2391323789,1492,Refactor StaticInnerClassCleanUp to jdt.core.manipulation,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-07-04T18:31:42Z,2024-07-04T19:58:22Z,Refactor StaticInnerClassCleanUp to jdt.core.manipulation so jdt.ls can use it.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1492/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1492,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6DsnQQ,eclipse.jdt.ui,2209510416,1492,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-07-04T19:58:21Z,2024-07-04T19:58:21Z,"@rgrunber FYI, a refactored cleanup that can be used in jdt.ls.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6DsnQQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1494,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1494,eclipse.jdt.ui,2391419470,1494,Refactor RedundantSemicolonsCleanUp to jdt.core.manipulation for jdt.ls use,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-07-04T20:14:18Z,2024-07-04T20:57:43Z,,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1494/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1494,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6DsyUA,eclipse.jdt.ui,2209555712,1494,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-07-04T20:57:42Z,2024-07-04T20:57:42Z,@rgrunber Another refactoring that can be used by jdt.ls.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6DsyUA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1496,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1496,eclipse.jdt.ui,2393224514,1496,snippet javadoc is not showing type parameters,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-07-05T23:13:31Z,2024-07-08T18:28:38Z,"The following example:

```
public class Param {
	/**
	 * <p>
	 * <b>Usage examples</b> Suppose we want a list of files
	 * {@snippet lang = ""java"" :
	 * 
	 *   List<Path> listSourceFiles(Path dir) throws IOException {
	 * 	   List<Path> result = new ArrayList<>();
	 * 	   try (DirectoryStream<Path> stream = Files.newDirectoryStream(dir, ""*.{c,h,cpp,hpp,java}"")) {
	 * 		  for (Path entry : stream) {
	 * 			result.add(entry);
	 * 		  }
	 * 	   } catch (DirectoryIteratorException ex) {
	 * 		  // I/O error encountered during the iteration, the cause is an IOException
	 * 		  throw ex.getCause();
	 * 	   }
	 * 	   return result;
	 *   }
	 *   
	 * }
	 * 
	 */
	public int test(int i) {
		return i;
	}
}
```

does not display type parameters for List or DirectoryStream.  This is because the type parameters are being passed directly into the html and treated as unknown tags.  They need to be escaped.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1496/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1498,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1498,eclipse.jdt.ui,2393551220,1498,Clean-up quick fix 'Convert to method reference' often adds unncessary cast,HannesWell,44067969,Hannes Wellmann,,CLOSED,2024-07-06T12:50:49Z,2024-07-11T15:09:40Z,"Given one has the following code
```
Stream<IExecutionEnvironment> ees = Stream.empty();
ees.map(ee -> ee.getId());
```
if one applies the quick-fix clean up (from pressing `Ctrl+1`) ` Convert to method reference` to the lambda an unnecessary cast is added:
```
ees.map((Function<? super IExecutionEnvironment, ? extends String>) IExecutionEnvironment::getId);
```
I would have expected the resulting code to be:
```
ees.map(IExecutionEnvironment::getId);
```
I always have to edit it manually afterwards to be like that.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1498/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1500,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1500,eclipse.jdt.ui,2396273905,1500,Support Convert to Text Block quickfix in annotations,vrozkovec,135681,Vit Rozkovec,,CLOSED,2024-07-07T14:48:00Z,2024-07-09T09:47:31Z,"Currently, it is not possible to convert easily text in annotations to text block.
![image](https://github.com/eclipse-jdt/eclipse.jdt.core/assets/135681/e46470ee-07cc-48d0-8d96-46d0dfd13061)

This would come handy when using libraries such as JDBI which let you define your SQL in annotated methods.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1500/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1500,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6EBYGf,eclipse.jdt.ui,2214953375,1500,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-07-08T18:59:59Z,2024-07-08T18:59:59Z,"@vrozkovec What version of Eclipse are you using?  This works fine for me using 2024-03.  For example:

```
package tests;

import static java.lang.annotation.ElementType.TYPE;

import java.lang.annotation.Target;

@Target(TYPE)
public @interface SomeAnnotation {
	
	String value();

}

```

```
package tests;

@SomeAnnotation(""abc\n""
+ ""def""
+ ""ghi"" +
""jkl"")
public class TryAnnotation {

}

```

When I use Ctrl+1 in the abc... string, it offers to convert to text block.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6EBYGf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1500,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6EJ5og,eclipse.jdt.ui,2217187872,1500,NA,vrozkovec,135681,Vit Rozkovec,,NA,2024-07-09T09:47:31Z,2024-07-09T09:47:31Z,"@jjohnstn my bad, indeed, in newer version it works, sorry for the noise. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6EJ5og/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1502,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1502,eclipse.jdt.ui,2399216286,1502, Bug 419882 - [spell checking] Java spell checker should ignore contents of {@code ...} and {@link ...} (edit) ,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-07-09T21:10:05Z,2024-07-10T18:50:07Z,Java spell checker should ignore contents of {@code ...} and {@link ...} in Javadoc. The contents of {@code ...} and {@link ...} tags should be treated as code and excluded from spell checking.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1502/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1508,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1508,eclipse.jdt.ui,2407248611,1508,Bug: Renaming local variables causes code behavior to change,DongChunHao,77560508,DongChunHao,,CLOSED,2024-07-14T03:28:33Z,2024-07-20T03:45:11Z,"When renaming 'variable' to 'newField', Line 11 causes the variable assignment field statement to change to the field assignment itself：
![image](https://github.com/user-attachments/assets/4d8d2195-4a4e-4125-a0d1-d5bc7180e472)

Refactoring result:
![image](https://github.com/user-attachments/assets/2db79028-b28e-47de-b64a-f5758e92ea85)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1508/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1508,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6FkWUu,eclipse.jdt.ui,2240898350,1508,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-07-20T03:45:10Z,2024-07-20T03:45:10Z,New change will cause a warning to occur if the rename may cause a collission with a field.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6FkWUu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1509,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1509,eclipse.jdt.ui,2407510973,1509,"Error running ""Convert if/else if/else chain to switch"" cleanup",carstenartur,3164220,Carsten Hammer,,CLOSED,2024-07-14T16:46:04Z,2024-07-16T15:02:07Z,"eclipse.buildId=4.33.0.20240711-1200
java.version=22.0.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=de_DE

Running this cleanup on the file ""org.eclipse.jdt.internal.corext.refactoring.code.CallInliner"" in the project ""org.eclipse.jdt.core.manipulation"" of JDT UI
ends up with an error:


java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:396)
	at org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:1036)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizard.createChange(RefactoringWizard.java:662)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizard.computeUserInputSuccessorPage(RefactoringWizard.java:504)
	at org.eclipse.ltk.ui.refactoring.UserInputWizardPage.computeSuccessorPage(UserInputWizardPage.java:77)
	at org.eclipse.ltk.ui.refactoring.UserInputWizardPage.getNextPage(UserInputWizardPage.java:113)
	at org.eclipse.jdt.internal.ui.fix.CleanUpRefactoringWizard$CleanUpConfigurationPage.getNextPage(CleanUpRefactoringWizard.java:436)
	at org.eclipse.jface.wizard.WizardDialog.nextPressed(WizardDialog.java:915)
	at org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:470)
	at org.eclipse.jface.dialogs.Dialog.lambda$0(Dialog.java:619)
	at org.eclipse.swt.events.SelectionListener$1.widgetSelected(SelectionListener.java:84)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:265)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:91)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4660)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1622)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1645)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1630)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1392)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4427)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4003)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.lambda$0(RefactoringWizardOpenOperation.java:190)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:209)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:126)
	at org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:41)
	at org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter.startCleanupRefactoring(RefactoringExecutionStarter.java:263)
	at org.eclipse.jdt.internal.ui.actions.AllCleanUpsAction.performRefactoring(AllCleanUpsAction.java:71)
	at org.eclipse.jdt.internal.ui.actions.CleanUpAction.run(CleanUpAction.java:186)
	at org.eclipse.jdt.internal.ui.actions.CleanUpAction.run(CleanUpAction.java:116)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:274)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:252)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:581)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:415)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:91)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4660)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1622)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1645)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1630)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1392)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4427)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4003)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1151)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:152)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:639)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:546)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:668)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:605)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1481)
Caused by: java.lang.RuntimeException: Error on /org.eclipse.jdt.core.manipulation/core extension/org/eclipse/jdt/internal/corext/refactoring/code/CallInliner.java
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1016)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:693)
	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:960)
	at org.eclipse.jdt.internal.corext.dom.ASTBatchParser.createASTs(ASTBatchParser.java:83)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpFixpointIterator.next(CleanUpRefactoring.java:400)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.cleanUpProject(CleanUpRefactoring.java:683)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.checkFinalConditions(CleanUpRefactoring.java:643)
	at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:86)
	at org.eclipse.ltk.core.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:116)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2452)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2477)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:89)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:124)
Caused by: org.eclipse.text.edits.MalformedTreeException: Range of child edit lies outside of parent edit
	at org.eclipse.text.edits.TextEdit.internalAdd(TextEdit.java:780)
	at org.eclipse.text.edits.TextEdit.addChild(TextEdit.java:340)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.addEdit(ASTRewriteAnalyzer.java:350)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doTextRemove(ASTRewriteAnalyzer.java:410)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doTextRemoveAndVisit(ASTRewriteAnalyzer.java:418)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteBodyNode(ASTRewriteAnalyzer.java:1014)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ASTRewriteAnalyzer.java:3133)
	at org.eclipse.jdt.core.dom.IfStatement.accept0(IfStatement.java:178)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3343)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.voidVisit(ASTRewriteAnalyzer.java:453)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.voidVisit(ASTRewriteAnalyzer.java:459)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doVisitUnchangedChildren(ASTRewriteAnalyzer.java:474)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ASTRewriteAnalyzer.java:3096)
	at org.eclipse.jdt.core.dom.IfStatement.accept0(IfStatement.java:178)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3343)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.voidVisit(ASTRewriteAnalyzer.java:453)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.voidVisit(ASTRewriteAnalyzer.java:459)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doVisitUnchangedChildren(ASTRewriteAnalyzer.java:474)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ASTRewriteAnalyzer.java:3096)
	at org.eclipse.jdt.core.dom.IfStatement.accept0(IfStatement.java:178)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3343)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.voidVisit(ASTRewriteAnalyzer.java:453)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doTextRemoveAndVisit(ASTRewriteAnalyzer.java:421)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer$ListRewriter.rewriteList(ASTRewriteAnalyzer.java:813)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer$ListRewriter.rewriteList(ASTRewriteAnalyzer.java:845)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteParagraphList(ASTRewriteAnalyzer.java:1324)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ASTRewriteAnalyzer.java:2360)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:126)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3343)
	at org.eclipse.jdt.core.dom.rewrite.ASTRewrite.internalRewriteAST(ASTRewrite.java:307)
	at org.eclipse.jdt.core.dom.rewrite.ASTRewrite.rewriteAST(ASTRewrite.java:296)
	at org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite.attachChange(CompilationUnitRewrite.java:290)
	at org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite.createChange(CompilationUnitRewrite.java:252)
	at org.eclipse.jdt.internal.corext.fix.CompilationUnitRewriteOperationsFixCore.createChange(CompilationUnitRewriteOperationsFixCore.java:126)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.calculateChange(CleanUpRefactoring.java:776)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor.calculateSolutions(CleanUpRefactoring.java:302)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor.acceptAST(CleanUpRefactoring.java:280)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1014)
	... 12 more


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1509/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1509,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6E49Ey,eclipse.jdt.ui,2229522738,1509,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-07-15T22:09:37Z,2024-07-15T22:09:37Z,Thanks @carstenartur A problem occurs because of trailing comments for the last if/else in the source.   If have prepared a fix and updated the test suite to add trailing line comments to one of the samples.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6E49Ey/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1510,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1510,eclipse.jdt.ui,2407993721,1510,"Extract method, cannot go back to the first window with the settings",Alberth289346,3254232,,,CLOSED,2024-07-15T06:52:32Z,2024-07-26T17:57:51Z,"Used version:
```
Eclipse Platform

Version: 2024-03 (4.31)
Build id: I20240229-0520
```

Trying to extract the `new PathPair(x, x)` to a new method. Code:
``` java
package org.eclipse.escet.cif.documentation.utils;

@SuppressWarnings(""javadoc"")
public class ExtractMethodGoBack {
    public ExtractMethodGoBack(PathPair p) { }

    public static record PathPair(int x, int y) { }

    public static ExtractMethodGoBack make() {
        int x = 1;
        return new ExtractMethodGoBack(new PathPair(x, x));
    }
}
```

Selected text:

![Screenshot from 2024-07-15 08-17-32](https://github.com/user-attachments/assets/8b16071b-a677-40c8-b694-448544f3ca1a)

""Refactor -> Extract method"", first screen
![Screenshot from 2024-07-15 08-18-11](https://github.com/user-attachments/assets/547b0c83-5689-4f8f-a032-7f2f50276d4c)

I wasn't sure what it would do, so I pressed ""Preview >""

![Screenshot from 2024-07-15 08-19-28](https://github.com/user-attachments/assets/b954d664-228f-46de-af48-b789bfd9ffb4)

[resized the window]

Color seems a bit off, but this makes sense, let's go back and edit the settings. Pressing ""Back""

![Screenshot from 2024-07-15 08-20-13](https://github.com/user-attachments/assets/740c40ba-3739-46da-86a6-5cee1891fb5a)

[resized the window]

I expected to go back to the settings screen instead of this. Still want to edit the settings. Another ""Back"" pressed.

![Screenshot from 2024-07-15 08-21-19](https://github.com/user-attachments/assets/d378df3c-9f6b-4f37-97be-9194a3dbb1c8)

[resized the window, and unfolded the ""details"" message]

You can click the error away and try more ""Back"" buttons, but it shows the last screen again.

Crashlog (it has the ""diffLabel"" and it's the last one, so likely the correct one):
``` text
!ENTRY org.eclipse.jface 4 2 2024-07-15 08:21:59.512
!MESSAGE Problems occurred when invoking code from plug-in: ""org.eclipse.jface"".
!STACK 0
java.lang.IllegalArgumentException: Group not found: diffLabel
	at org.eclipse.jface.action.ContributionManager.addToGroup(ContributionManager.java:130)
	at org.eclipse.jface.action.ContributionManager.appendToGroup(ContributionManager.java:140)
	at org.eclipse.compare.contentmergeviewer.TextMergeViewer.updateToolbarLabel(TextMergeViewer.java:5432)
	at org.eclipse.compare.contentmergeviewer.TextMergeViewer.update(TextMergeViewer.java:5414)
	at org.eclipse.compare.contentmergeviewer.TextMergeViewer.updateContent(TextMergeViewer.java:3063)
	at org.eclipse.compare.contentmergeviewer.ContentMergeViewer.internalRefresh(ContentMergeViewer.java:796)
	at org.eclipse.compare.contentmergeviewer.ContentMergeViewer.inputChanged(ContentMergeViewer.java:704)
	at org.eclipse.jface.viewers.ContentViewer.setInput(ContentViewer.java:282)
	at org.eclipse.jdt.internal.ui.compare.JavaMergeViewer.setInput(JavaMergeViewer.java:156)
	at org.eclipse.compare.CompareViewerSwitchingPane.setInput(CompareViewerSwitchingPane.java:268)
	at org.eclipse.ltk.internal.ui.refactoring.TextEditChangePreviewViewer.setInput(TextEditChangePreviewViewer.java:249)
	at org.eclipse.ltk.internal.ui.refactoring.TextEditChangePreviewViewer.setInput(TextEditChangePreviewViewer.java:201)
	at org.eclipse.ltk.internal.ui.refactoring.TextEditGroupNode.feedInput(TextEditGroupNode.java:84)
	at org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.showPreview(PreviewWizardPage.java:635)
	at org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.lambda$0(PreviewWizardPage.java:606)
	at org.eclipse.jface.viewers.Viewer$1.run(Viewer.java:151)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:148)
	at org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:2132)
	at org.eclipse.jface.viewers.ColumnViewer.updateSelection(ColumnViewer.java:1055)
	at org.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:1664)
	at org.eclipse.jface.viewers.TreeViewer.setSelection(TreeViewer.java:1091)
	at org.eclipse.jface.viewers.Viewer.setSelection(Viewer.java:375)
	at org.eclipse.ltk.internal.ui.refactoring.ChangeElementTreeViewer.handleInvalidSelection(ChangeElementTreeViewer.java:113)
	at org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:1405)
	at org.eclipse.jface.viewers.TreeViewer.preservingSelection(TreeViewer.java:367)
	at org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:1353)
	at org.eclipse.jface.viewers.CheckboxTreeViewer.preservingSelection(CheckboxTreeViewer.java:407)
	at org.eclipse.jface.viewers.AbstractTreeViewer.inputChanged(AbstractTreeViewer.java:1589)
	at org.eclipse.ltk.internal.ui.refactoring.ChangeElementTreeViewer.inputChanged(ChangeElementTreeViewer.java:122)
	at org.eclipse.jface.viewers.ContentViewer.setInput(ContentViewer.java:282)
	at org.eclipse.jface.viewers.StructuredViewer.setInput(StructuredViewer.java:1636)
	at org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.setTreeViewerInput(PreviewWizardPage.java:576)
	at org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.setChange(PreviewWizardPage.java:329)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizard.internalSetChange(RefactoringWizard.java:776)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizard.computeUserInputSuccessorPage(RefactoringWizard.java:518)
	at org.eclipse.ltk.ui.refactoring.UserInputWizardPage.computeSuccessorPage(UserInputWizardPage.java:77)
	at org.eclipse.ltk.ui.refactoring.UserInputWizardPage.getNextPage(UserInputWizardPage.java:113)
	at org.eclipse.ltk.internal.ui.refactoring.RefactoringWizardDialog2.nextOrPreviewPressed(RefactoringWizardDialog2.java:494)
	at org.eclipse.ltk.internal.ui.refactoring.RefactoringWizardDialog2$1.widgetSelected(RefactoringWizardDialog2.java:695)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:5855)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1529)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:5065)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4517)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.lambda$0(RefactoringWizardOpenOperation.java:190)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:209)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:126)
	at org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:41)
	at org.eclipse.jdt.ui.actions.ExtractMethodAction.run(ExtractMethodAction.java:87)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:278)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:252)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:581)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:415)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:5855)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1529)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:5065)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4517)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1151)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:152)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:639)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:546)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1432)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1510/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1510,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6GCRiP,eclipse.jdt.ui,2248743055,1510,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-07-24T19:23:09Z,2024-07-24T19:23:09Z,"Hi @Alberth289346  I had seen this problem myself in the past but using recent 4.33 I-build, I am able to successfully go back and forth between preview and settings for your example test.  If you wish to confirm, you can get an SDK I-build from: https://download.eclipse.org/eclipse/downloads/   See the latest downloads section and select the download starting with capital I.  If you don't have time to do this, I will close the issue as fixed in current release.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6GCRiP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1510,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6GRrD1,eclipse.jdt.ui,2252779765,1510,NA,Alberth289346,3254232,,,NA,2024-07-26T13:34:40Z,2024-07-26T13:34:40Z,"Thanks for checking. I completely trust your judgement, feel free to close it. 

I am not so confident in installing Eclipses, it may affect my currently installed version, what I really don't want to happen.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6GRrD1/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1510,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6GTYRX,eclipse.jdt.ui,2253227095,1510,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-07-26T17:57:49Z,2024-07-26T17:57:49Z,"Thanks @Alberth289346.  I will close.  If you see it again in the future, feel free to open a new issue.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6GTYRX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1512,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1512,eclipse.jdt.ui,2409810601,1512,sealed and non-sealed type modifiers don't show up in the autocomplete suggestions,nlisker,37422899,,,OPEN,2024-07-15T23:29:45Z,2024-07-15T23:29:45Z,"```java
sealed interface Index {

}
```
Place the cursor in the blank line and press <kbd>ctrl+space</kbd>. The following suggestions are offered:
![image](https://github.com/user-attachments/assets/680cd2dd-a24f-42e0-bcd1-89368a93d692)

However, amongst the type modifiers, such as visibility, `abstract`, `final` etc., `sealed` and `non-sealed` are no offered. They should be added.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1512/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1513,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1513,eclipse.jdt.ui,2409889592,1513,About customizable text history created by Organize Import actions,angelickite,24558048,,,OPEN,2024-07-16T00:27:53Z,2024-07-16T00:32:11Z,"When triggering an ""organize import"", at minimum when using a shortcut or automatic save actions, the import edits get inserted into the text editing history. I couldn't find a way to disable the creation of this history point specifically for such _automatic_ import edits.

Is there currently a way to achieve this? If not, is there any demand by others for the ability to disable these edit points?

### Motivation
Moving through the history with a `previous word` / `next word` / `redo` / `undo` keeps jumping to these _automatic_ imports which simply is of no value (to me) and disorienting.

There is specifically this odd behaviour when using save actions where sometimes a redo/undo can get stuck at the top of the file, i.e. it requires several presses of redo/undo to get the java editor view back to the last edit location instead of being fixed to the top of the file, which is not acceptable. Not quite sure yet how much it is related to me having organize imports as a save action.

```
Version: 2024-06 (4.32.0)
Build id: 20240606-1231
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1513/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1515,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1515,eclipse.jdt.ui,2412368802,1515,Bug: Inline method refactoring causes changes in code behavior,DongChunHao,77560508,DongChunHao,,CLOSED,2024-07-17T01:14:41Z,2024-07-19T17:40:23Z,"Select f() method (Line 63) in class A and perform inline method refactoring. Before the refactoring, m() in class A is called by f() method; when the inline method refactoring is performed, m() in class B is displayed in t(), resulting in changes in code behavior (output a before refactoring, output b after refactoring) , the code before the refactoring is as follows:
![image](https://github.com/user-attachments/assets/860e1b98-b32c-47bc-ae1d-19ab7e3afd4b)

The code results after refactoring are as follows:
![image](https://github.com/user-attachments/assets/52c32ebf-6a76-467b-8c1f-0019714954e2)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1515/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1516,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1516,eclipse.jdt.ui,2412382508,1516,Bug: Performing the extract method refactoring results in a change in code behavior,DongChunHao,77560508,DongChunHao,,CLOSED,2024-07-17T01:23:25Z,2024-08-09T04:01:40Z,"When the 21-line statement in class B is selected to perform extraction method refactoring, the new method is named 'f', resulting in changes in code behavior, that is, before refactoring, the method() in class C is called f() in class C, and after refactoring, the method() in class B is called f() in class B. Before refactoring, the code is as follows:

![image](https://github.com/user-attachments/assets/8602644a-41eb-4a1a-adc8-139bc5201cc9)

The resulting code after refactoring is as follows: 

![image](https://github.com/user-attachments/assets/cf56610c-d68e-4208-aa40-9421f2730734)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1516/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1516,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6GPFBQ,eclipse.jdt.ui,2252099664,1516,NA,DongChunHao,77560508,DongChunHao,,NA,2024-07-26T06:58:01Z,2024-07-26T06:58:01Z,"@jjohnstn Please help me to confirm whether this is a bug, thank you","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6GPFBQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1517,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1517,eclipse.jdt.ui,2412408164,1517,Bug:  Move method refactoring causes changes in code behavior,DongChunHao,77560508,DongChunHao,,CLOSED,2024-07-17T01:36:00Z,2024-07-24T19:11:52Z,"Select the m() method in class A and reconstruct the moving method into class B. As a result, class C.m() is called in the method() method in class D before refactoring, and B.m() is called after refactoring, and the code behavior changes. The code before refactoring is as follows：

![image](https://github.com/user-attachments/assets/2eacd45d-6007-447b-b55d-7f251a5f9ac4)


The resulting code after refactoring is as follows:

![image](https://github.com/user-attachments/assets/0bfbf528-978c-4b77-b996-3475d3018882)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1517/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1517,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6FwYYD,eclipse.jdt.ui,2244052483,1517,NA,DongChunHao,77560508,DongChunHao,,NA,2024-07-23T00:51:23Z,2024-07-23T00:51:23Z,"@jjohnstn Please help me to confirm whether this is a bug, thank you","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6FwYYD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1517,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6F4QJu,eclipse.jdt.ui,2246115950,1517,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-07-23T19:24:03Z,2024-07-23T19:24:03Z,@DongChunHao It is a definite behavior change.  The question is whether the code should prevent you from all harm or whether it is doing what you asked it to do and there may be consequences.  It often depends on how common the scenario is and how efficiently it can be detected.   In this case it would require finding all extenders of B and their subclasses that reference a method m() from an outer class.  I will take a look.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6F4QJu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1517,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6F62xy,eclipse.jdt.ui,2246798450,1517,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-07-24T03:36:07Z,2024-07-24T03:36:07Z,@DongChunHao I was able to create a fix that seems to perform reasonably.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6F62xy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1520,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1520,eclipse.jdt.ui,2418324154,1520,Convert to method reference creates usless cast,laeubi,1331477,Christoph Läubrich,,CLOSED,2024-07-19T08:11:01Z,2024-07-23T19:24:24Z,"```
Eclipse SDK

Version: 2024-09 (4.33)
Build id: I20240630-1800
```

## Assume the following code:

```
public class LamdaCast {

	public static void main(String[] args) {
		create(""Hello"").map(c -> c.get()).map(s -> s.concat(""World""));
	}

	public static <X> Optional<Supplier<X>> create(X value) {
		if (value == null) {
			return Optional.empty();
		}
		return Optional.of(() -> value);
	}
}
```

now go to the first map and convert it to a method reference, this creates the following unnecessary casts:

```
public static void main(String[] args) {
    create(""Hello"")
       .map((Function<? super Supplier<String>, ? extends String>) Supplier<String>::get)
       .map(s -> s.concat(""World""));
}
```
## The desired result would be (and as in Eclipse 2024-03 and earlier versions)

```
public static void main(String[] args) {
	create(""Hello"").map(Supplier::get).map(s -> s.concat(""World""));
}
```

## Problem in action:


https://github.com/user-attachments/assets/ca6b4ab7-3702-452b-8728-4472e5d77580


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1520/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1520,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6FwFRs,eclipse.jdt.ui,2243974252,1520,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-07-22T23:23:37Z,2024-07-22T23:23:37Z,"The extraneous cast was recently fixed, but I noticed that the method ref was adding a type parameter whereas it did not do so with the cleanup.  This has been fixed by the PR above.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6FwFRs/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1520,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6FxJzP,eclipse.jdt.ui,2244254927,1520,NA,laeubi,1331477,Christoph Läubrich,,NA,2024-07-23T04:59:17Z,2024-07-23T04:59:17Z,Thanks I'll try to test this with M2 in my codebase!,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6FxJzP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1524,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1524,eclipse.jdt.ui,2421518632,1524,"cleanup ""use local variable type interference"" refactors method references and creates error",carstenartur,3164220,Carsten Hammer,,CLOSED,2024-07-21T16:47:52Z,2024-07-25T20:12:06Z,"eclipse.buildId=4.33.0.20240711-1200
java.version=22.0.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=de_DE

Code like this:

```java
IDialogFieldListener adapter= this::addReadsDialogFieldChanged;
```

is refactored by the ""use local variable type interference"" cleanup on the ""Java feature"" tab to that:

```java
var adapter= this::addReadsDialogFieldChanged;
```

Result is that the code now is marked with the error ""Method reference needs an explicit target-type""

I'm not completely sure where the issue is. The following code seems to be ok.

```java
public interface MyIntf  {
		void bla(Object... o);
	}

private  void bla(Object... o) {

	}

private void blubb() {
		new ArrayList<Object>().forEach((o) -> bla(o));
		MyIntf myin=this::bla;
	}
```

But when I want to use ""var"" I have to add a cast otherwise get the mentioned error:

```java
		var myin=(MyIntf)this::bla;
```

 Besides there is some magic using the refactoring to extract a variable. Depending on if I mark ""this::bla"" or include the cast I get an error. When I include the cast I get this and it contains an unnecessary cast that is not notified. I can just remove it.

```java
		MyIntf myIntf= (MyIntf)this::bla;
		var myin=myIntf;
```


When I extract a variable without the cast then I get this and eclipse marks an error:


```java
		MyIntf myIntf= this::bla;
		var myin=(MyIntf)myIntf;
```

So I'm not sure if there maybe is a bug in more than just the cleanup.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1524/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1524,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6GDQn9,eclipse.jdt.ui,2249001469,1524,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-07-24T22:28:46Z,2024-07-24T22:28:46Z,Hi @carstenartur I think that a second issue should be opened against the compiler for not marking the cast as unnecessary.  I also think that the var cleanup should not change the MyIntf myintf= this::bla; statement (as opposed to adding a cast).  I have posted a fix.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6GDQn9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1524,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6GHfHc,eclipse.jdt.ui,2250109404,1524,NA,carstenartur,3164220,Carsten Hammer,,NA,2024-07-25T11:32:04Z,2024-07-25T11:32:04Z,"Thanks @jjohnstn! I created an issue in jdt.core for the ""unnecessary cast"" question. Feel free to add information.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6GHfHc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1525,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1525,eclipse.jdt.ui,2421521210,1525,"cleanup ""use local variable type interference"" refactors generics and removes needed import",carstenartur,3164220,Carsten Hammer,,CLOSED,2024-07-21T16:55:31Z,2024-08-08T18:13:37Z,"eclipse.buildId=4.33.0.20240711-1200
java.version=22.0.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=de_DE

Code like this:

```java
HashSet<IJavaProject> selectedElements= new HashSet<>();
```

is refactored to 

```java
var selectedElements= new HashSet<IJavaProject>();
```

Unfortunately the resulting code has the error ""IJavaProject cannot be resolved to a type"" because the import is removed.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1525/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1525,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6F8VDz,eclipse.jdt.ui,2247184627,1525,NA,carstenartur,3164220,Carsten Hammer,,NA,2024-07-24T08:14:04Z,2024-07-24T08:14:04Z,Can it be that the method org.eclipse.jdt.internal.corext.refactoring.structure.ImportRemover.divideTypeRefs() simply is not smart enough to handle parameterized types?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6F8VDz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1525,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Hrw8z,eclipse.jdt.ui,2276396851,1525,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-08-08T18:13:37Z,2024-08-08T18:13:37Z,Closed with #1538 merged.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Hrw8z/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1526,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1526,eclipse.jdt.ui,2422952525,1526,4 new jdt.ui + jdt.ui.refactoring fails since I20240722-0320,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2024-07-22T13:57:27Z,2024-10-28T20:27:18Z,"Following tests
- `CleanUpTest16.testOneIfWithPatternInstanceof`
- `MoveInnerToTopLevelTests16.test_Bug572639_2`
- `SurroundWithTests16.testBug566949_1`
- `SurroundWithTests16.testBug566949_2`

fail since I20240722-0320 on all platforms.

Regression from https://github.com/eclipse-jdt/eclipse.jdt.core/pull/2688 / commit 8e630b6c235edaf7d6e757442b1ee2c5761b6021.

* https://download.eclipse.org/eclipse/downloads/drops4/I20240722-0320/
* https://download.eclipse.org/eclipse/downloads/drops4/I20240722-0320/testresults/html/org.eclipse.jdt.ui.tests_ep433I-unit-cen64-gtk3-java17_linux.gtk.x86_64_17.html
* https://download.eclipse.org/eclipse/downloads/drops4/I20240722-0320/testresults/html/org.eclipse.jdt.ui.tests.refactoring_ep433I-unit-cen64-gtk3-java17_linux.gtk.x86_64_17.html

```
class org.eclipse.jdt.core.dom.VariableDeclarationFragment cannot be cast to class org.eclipse.jdt.core.dom.SingleVariableDeclaration (org.eclipse.jdt.core.dom.VariableDeclarationFragment and org.eclipse.jdt.core.dom.SingleVariableDeclaration are in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @597903fc)

java.lang.ClassCastException: class org.eclipse.jdt.core.dom.VariableDeclarationFragment cannot be cast to class org.eclipse.jdt.core.dom.SingleVariableDeclaration (org.eclipse.jdt.core.dom.VariableDeclarationFragment and org.eclipse.jdt.core.dom.SingleVariableDeclaration are in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @597903fc)
at org.eclipse.jdt.core.dom.TypePattern.getPatternVariable(TypePattern.java:243)
at org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchAnalyzer$1.visit(SurroundWithTryCatchAnalyzer.java:104)
at org.eclipse.jdt.core.dom.PatternInstanceofExpression.accept0(PatternInstanceofExpression.java:212)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3343)
at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:3391)
at org.eclipse.jdt.core.dom.ParenthesizedExpression.accept0(ParenthesizedExpression.java:131)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3343)
at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:3391)
at org.eclipse.jdt.core.dom.PrefixExpression.accept0(PrefixExpression.java:253)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3343)
at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:3391)
at org.eclipse.jdt.core.dom.IfStatement.accept0(IfStatement.java:181)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3343)
at org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchAnalyzer.getVariableStatementBinding(SurroundWithTryCatchAnalyzer.java:80)
at org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchRefactoring.findEndPosition(SurroundWithTryCatchRefactoring.java:477)
at org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchRefactoring.createTryCatchStatement(SurroundWithTryCatchRefactoring.java:404)
at org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchRefactoring.createChange(SurroundWithTryCatchRefactoring.java:231)
at org.eclipse.ltk.core.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:119)
at org.eclipse.ltk.core.refactoring.PerformRefactoringOperation.run(PerformRefactoringOperation.java:124)
at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:41)
at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:739)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2452)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2477)
at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:6136)
at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:6092)
at org.eclipse.jdt.ui.tests.refactoring.AbstractJunit4SelectionTestCase.performTest(AbstractJunit4SelectionTestCase.java:136)
at org.eclipse.jdt.ui.tests.refactoring.SurroundWithTests.performTest(SurroundWithTests.java:53)
at org.eclipse.jdt.ui.tests.refactoring.SurroundWithTests16.tryCatchTest(SurroundWithTests16.java:58)
at org.eclipse.jdt.ui.tests.refactoring.SurroundWithTests16.testBug566949_2(SurroundWithTests16.java:68)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
```

```
Error on /TestSetupProject16/src/test1/E.java

java.lang.RuntimeException: Error on /TestSetupProject16/src/test1/E.java
at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1063)
at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:740)
at org.eclipse.jdt.core.dom.CompilationUnitResolver$ECJCompilationUnitResolver.resolve(CompilationUnitResolver.java:112)
at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:968)
at org.eclipse.jdt.internal.corext.dom.ASTBatchParser.createASTs(ASTBatchParser.java:83)
at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpFixpointIterator.next(CleanUpRefactoring.java:400)
at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.cleanUpProject(CleanUpRefactoring.java:683)
at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.checkFinalConditions(CleanUpRefactoring.java:643)
at org.eclipse.ltk.core.refactoring.Refactoring.checkAllConditions(Refactoring.java:163)
at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:82)
at org.eclipse.ltk.core.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:116)
at org.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:207)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2452)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2472)
at org.eclipse.jdt.ui.tests.quickfix.CleanUpTestCase.executePerformOperation(CleanUpTestCase.java:317)
at org.eclipse.jdt.ui.tests.quickfix.CleanUpTestCase.performRefactoring(CleanUpTestCase.java:283)
at org.eclipse.jdt.ui.tests.quickfix.CleanUpTestCase.performRefactoring(CleanUpTestCase.java:263)
at org.eclipse.jdt.ui.tests.quickfix.CleanUpTestCase.assertRefactoringResultAsExpected(CleanUpTestCase.java:184)
at org.eclipse.jdt.ui.tests.quickfix.CleanUpTest16.testOneIfWithPatternInstanceof(CleanUpTest16.java:404)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
Caused by: java.lang.ClassCastException: class org.eclipse.jdt.core.dom.VariableDeclarationFragment cannot be cast to class org.eclipse.jdt.core.dom.SingleVariableDeclaration (org.eclipse.jdt.core.dom.VariableDeclarationFragment and org.eclipse.jdt.core.dom.SingleVariableDeclaration are in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @6b72dc69)
at org.eclipse.jdt.core.dom.TypePattern.getPatternVariable(TypePattern.java:243)
at org.eclipse.jdt.internal.corext.fix.OneIfRatherThanDuplicateBlocksThatFallThroughFixCore$OneIfRatherThanDuplicateBlocksThatFallThroughFinder$SuccessiveIfVisitor$PatternNameVisitor.visit(OneIfRatherThanDuplicateBlocksThatFallThroughFixCore.java:109)
at org.eclipse.jdt.core.dom.PatternInstanceofExpression.accept0(PatternInstanceofExpression.java:212)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3343)
at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:3391)
at org.eclipse.jdt.core.dom.IfStatement.accept0(IfStatement.java:181)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3343)
at org.eclipse.jdt.internal.corext.fix.OneIfRatherThanDuplicateBlocksThatFallThroughFixCore$OneIfRatherThanDuplicateBlocksThatFallThroughFinder$SuccessiveIfVisitor.visit(OneIfRatherThanDuplicateBlocksThatFallThroughFixCore.java:83)
at org.eclipse.jdt.core.dom.IfStatement.accept0(IfStatement.java:178)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3343)
at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3414)
at org.eclipse.jdt.core.dom.Block.accept0(Block.java:128)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3343)
at org.eclipse.jdt.internal.corext.fix.OneIfRatherThanDuplicateBlocksThatFallThroughFixCore$OneIfRatherThanDuplicateBlocksThatFallThroughFinder.visit(OneIfRatherThanDuplicateBlocksThatFallThroughFixCore.java:60)
at org.eclipse.jdt.core.dom.Block.accept0(Block.java:126)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3343)
at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:3391)
at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:677)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3343)
at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3414)
at org.eclipse.jdt.core.dom.TypeDeclaration.accept0(TypeDeclaration.java:498)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3343)
at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3414)
at org.eclipse.jdt.core.dom.CompilationUnit.accept0(CompilationUnit.java:258)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3343)
at org.eclipse.jdt.internal.corext.fix.OneIfRatherThanDuplicateBlocksThatFallThroughFixCore.createCleanUp(OneIfRatherThanDuplicateBlocksThatFallThroughFixCore.java:201)
at org.eclipse.jdt.internal.ui.fix.OneIfRatherThanDuplicateBlocksThatFallThroughCleanUpCore.createFix(OneIfRatherThanDuplicateBlocksThatFallThroughCleanUpCore.java:54)
at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.calculateChange(CleanUpRefactoring.java:773)
at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor.calculateSolutions(CleanUpRefactoring.java:302)
at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor.acceptAST(CleanUpRefactoring.java:280)
at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1061)
... 19 more
```

@subyssurendran666 , @mpalat : please check.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1526/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1526,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6FxicX,eclipse.jdt.ui,2244355863,1526,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-07-23T06:30:46Z,2024-07-23T06:30:46Z,"@subyssurendran666 , @mpalat : please check. We have M2 this week, it would be nice to have the fix before Thursday.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6FxicX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1526,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6GIo-m,eclipse.jdt.ui,2250411942,1526,NA,carstenartur,3164220,Carsten Hammer,,NA,2024-07-25T14:06:08Z,2024-07-25T14:06:08Z,"We still cannot run the build without lots of errors. 

https://download.eclipse.org/eclipse/downloads/drops4/I20240725-0200/testresults/html/org.eclipse.jdt.ui.tests_ep433I-unit-cen64-gtk3-java17_linux.gtk.x86_64_17.html

Do we have some additional errors now caused by a different issue as before?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6GIo-m/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1526,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6GKRZ4,eclipse.jdt.ui,2250839672,1526,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-07-25T16:10:35Z,2024-07-25T16:10:35Z,I can verify that BindingNamesTest now fails locally.  It cannot find X which is a class in the default package.  This failure was introduced somewhere after commit f6fe3c8fee3d83b2478db25e where the test works.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6GKRZ4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1526,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6GKR2G,eclipse.jdt.ui,2250841478,1526,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-07-25T16:11:08Z,2024-07-25T16:11:08Z,I should have clarified that the commit in question is from jdt.core,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6GKR2G/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1526,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6GKTas,eclipse.jdt.ui,2250847916,1526,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-07-25T16:13:04Z,2024-07-25T16:13:04Z,"> Do we have some additional errors now caused by a different issue as before?

Yes, we do, after merging https://github.com/eclipse-jdt/eclipse.jdt.core/pull/2551
I'm working on fixing tests, first batch is https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1543","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6GKTas/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1526,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6GKobp,eclipse.jdt.ui,2250933993,1526,NA,carstenartur,3164220,Carsten Hammer,,NA,2024-07-25T16:37:33Z,2024-07-25T16:37:33Z,"I fear removing support for a java version enforces changes in a couple of junit tests in jdt.ui.
In some cases one test for a certain way to process code has been implemented eg in a Java 7 test configuration and another one in Java 8 configuration. Now removing the test for Java 7 is no big deal as this is no longer a valid environment. But the Java 8 based Test configuration might still represent behavior in latest Java versions and should not get lost. Now there is no way to see on a test if it is still representing a valid test case that should be migrated to a Java 17 Test configuration. I guess the Test configuration concept needs a review at least for jdt.ui.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6GKobp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1526,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6GMH2m,eclipse.jdt.ui,2251324838,1526,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-07-25T20:18:12Z,2024-07-25T20:18:12Z,@jjohnstn : could you please check MoveMembersTests fails?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6GMH2m/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1526,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6GMOxz,eclipse.jdt.ui,2251353203,1526,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-07-25T20:37:31Z,2024-07-25T20:37:31Z,@iloveeclipse I'll check,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6GMOxz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1526,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6GMWmE,eclipse.jdt.ui,2251385220,1526,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-07-25T20:59:03Z,2024-07-25T20:59:03Z,Both failures are due to using 1.8 which added the ability to have static members in interfaces (fails < 1.8).  I'll put together a fix for the test.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6GMWmE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1526,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6RlnRn,eclipse.jdt.ui,2442556519,1526,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-10-28T20:27:18Z,2024-10-28T20:27:18Z,Closing as failures do not occur in 20241027-1800,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6RlnRn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1527,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1527,eclipse.jdt.ui,2423621915,1527,Tweak rename local refactoring checkFieldCollision() method logic to ignore qualified names or field accesses,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-07-22T19:30:33Z,2024-07-23T15:38:06Z,"The following test from RenameTempTests:

```
//rename to: k
package p;
class A{
	int k;
	void m(){
		A /*[*/i/*]*/= new A();
		i.k= i.k;
	}
}
```

should continue to work after the change, if compiler options to detect field/variable hiding are not set to warning or higher.  The reference to i.k will change to k.k which does not change the code behavior.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1527/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1529,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1529,eclipse.jdt.ui,2423777226,1529,[Bug][Inline Method Refactoring] Inline the method which contians super keyword in a static method result in the refactored program has syntax error ,RETester66,176339745,,,CLOSED,2024-07-22T21:10:56Z,2024-09-05T00:11:21Z,"# Steps to reproduce
1. First, create a class `A`, then create a class `B` extends class `A`:
```
public class A{
    void bar() {}
}

public class B extends A {
    void foo() {
        super.bar();
    }

    static void err(B b) {
        b.foo(); //inline call to foo()
    }
}
```
2. Like I commented on the above code, left click the `foo()` in the `b.foo()`. Then, right click -> Refactor -> Inline. The default configuration to inline this method is following, click ok:

![image](https://github.com/user-attachments/assets/9e8d331a-d02f-43fe-9613-c187a0e2f304)

3. Use the default configuration, the program is **successfully refactored without any warning or exception**. The refactored program is following, which contains syntax error. Because the super keyword cannot be used in a static context:
```
public class A{
    void bar() {}
}

public class B extends A {
    void foo() {
        super.bar();
    }

    static void err(B b) {
        super.bar(); //inline call to foo()
    }
}
```

4. If use the first configuration instead like following:

![image](https://github.com/user-attachments/assets/1b45c724-cb03-4dea-a04a-069183195e2c)

5. The refactored program also contains syntax error. The refactored program is following:
```
public class A{
    void bar() {}
}

public class B extends A {
    static void err(B b) {
        super.bar(); //inline call to foo()
    }
}
```

# Expected Behavior
In this situation, I would expect the Eclipse could give a warning message.

# Environment 
## OS Version
Windows 10, 64-bit Operating System, x64-based processor
## Eclipse Version
Eclipse IDE for Enterprise Java and Web Developers (includes Incubating components)
Version: 2024-06 (4.32.0)
Build id: 20240606-1231
## JDK Version
java version ""22.0.1"" 2024-04-16
Java(TM) SE Runtime Environment (build 22.0.1+8-16)
Java HotSpot(TM) 64-Bit Server VM (build 22.0.1+8-16, mixed mode, sharing)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1529/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1530,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1530,eclipse.jdt.ui,2423841717,1530,[Bug][Move Static Memebers Refactoring] Move static members refactoring results in behavior change,RETester66,176339745,,,CLOSED,2024-07-22T22:02:22Z,2024-09-04T23:09:50Z,"# Steps to reproduce
1. First, create a class `A`, then create a class `B` extends class `A`, and a class `C`:
```
public class A {
    static boolean truth = true;
    static void important() {
        System.out.println(1);
    }
}

public class B extends A{
    B() {
        important();
        System.out.println(truth);
    }
    
    public static void main(String[] args) {
    	B b = new B();
    }
}

public class C{
    static boolean truth = false;//move truth to class B
    static void important() {// move method important to class B
        System.out.println(2);
    }
}
```
2. Run the class B, the initial output is:
```
1
true
```
3. Now, in class `C`, first choose property `truth`, right click -> Refactor -> move -> set the destination as class B -> click ok. Then  choose method `important()`, move it to the class `B` too, the default configuration is following:

![image](https://github.com/user-attachments/assets/7235613d-ab76-4023-8595-2877a01d5a80)

4. **The whole process is performed successfully without any warning message or exception.** The refactored program is following:
```
public class A {
    static boolean truth = true;
    static void important() {
        System.out.println(1);
    }
}

public class B extends A{
    static boolean truth = false;//move truth to class B

	B() {
        important();
        System.out.println(truth);
    }
    
    public static void main(String[] args) {
    	B b = new B();
    }

	static void important() {// move method important to class B
	    System.out.println(2);
	}
}

public class C{
}
```
5. Now, run the class `B` again, the output is:
```
2
false
```
6. As you can see, the output is totally changed. The behavior of the refactored program is changed without any warning.

# Expected Behavior
I would expect the Eclipse could give a warning message about the behavior change.

# Environment 
## OS Version
Windows 10, 64-bit Operating System, x64-based processor
## Eclipse Version
Eclipse IDE for Enterprise Java and Web Developers (includes Incubating components)
Version: 2024-06 (4.32.0)
Build id: 20240606-1231
## JDK Version
java version ""22.0.1"" 2024-04-16
Java(TM) SE Runtime Environment (build 22.0.1+8-16)
Java HotSpot(TM) 64-Bit Server VM (build 22.0.1+8-16, mixed mode, sharing)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1530/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1531,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1531,eclipse.jdt.ui,2423872424,1531,[Bug][Rename Refactoring] Avoid the perform of rename refactoring at the implicit enum elements (e.g. values() method),RETester66,176339745,,,CLOSED,2024-07-22T22:29:23Z,2024-08-14T17:47:00Z,"# Steps to reproduce
1. Create a class `A`:
```
public class A {
    {
        int length = new String[0].length;// click length, then rename length
    }
    enum M {
        ;
        {
            M.valueOf("""");// click valueOf, then rename valueOf
        }
    }
    enum S {
        ;
        {
            S.values();// click values, then rename values
        }
    }
}
```
2. Like I commented on the above code, left click `length`, `valueOf`, or `values`, then right click -> Refactor -> Rename, the name is shown editable in a small box now, like following:

![image](https://github.com/user-attachments/assets/349e80aa-5b4e-4aac-b5fd-f94fadd6f0b2)

3. Input a name for `length` since it is editable, let's say the new name is `len`, the refactored program would contain syntax error.


# Expected Behavior
The rename refactoring for those methods should be impossible, maybe a warning message should be given when renaming those methods instead of showing the editable little box.

# Environment 
## OS Version
Windows 10, 64-bit Operating System, x64-based processor
## Eclipse Version
Eclipse IDE for Enterprise Java and Web Developers (includes Incubating components)
Version: 2024-06 (4.32.0)
Build id: 20240606-1231
## JDK Version
java version ""22.0.1"" 2024-04-16
Java(TM) SE Runtime Environment (build 22.0.1+8-16)
Java HotSpot(TM) 64-Bit Server VM (build 22.0.1+8-16, mixed mode, sharing)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1531/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1531,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6H0zc0,eclipse.jdt.ui,2278766388,1531,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-08-09T21:15:18Z,2024-08-09T21:15:18Z,"This is working as expected.  There was a bug: https://bugs.eclipse.org/bugs/show_bug.cgi?id=179473 that included a fix to fall-back to a local rename edit if the selection could not be resolved.  In such case, the status line contains an error message:
""Element could not be resolved, started 'Rename in file'""

In this particular case, nothing is selected and there is no element.  The error message in the status line comes up as expected and at that point it is just an editor rename without Java context.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6H0zc0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1531,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6H1ARq,eclipse.jdt.ui,2278818922,1531,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-08-09T22:14:58Z,2024-08-09T22:14:58Z,"I need to think about this some more.  While it is behaving as expected, perhaps a partial selection (including 0 selection) should consider searching for the word (i.e. up to next non-digit/alphanumeric character).  This would be more consistent since the rename in file seems to do so.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6H1ARq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1531,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6IUoAI,eclipse.jdt.ui,2287108104,1531,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-08-13T20:45:46Z,2024-08-13T20:45:46Z,"After thinking about it, the behavior is working as expected, so no bug, but the status message needs to be updated so what is happening is clear.  I have posted a patch that will clarify that a refactoring rename is not possible but a simple text rename in file is occurring.  This is consistent because in all cases a field access cannot be refactored to a new name but if one chose to specify another valid field or method that would be ok.  If the user chooses to name to an invalid field, it is marked in error and a quickfix will be offered to rename it to a valid field or method.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6IUoAI/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1531,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Idl2Q,eclipse.jdt.ui,2289458576,1531,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-08-14T17:46:59Z,2024-08-14T17:46:59Z,Closing as working as expected with new message merged.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Idl2Q/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1532,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1532,eclipse.jdt.ui,2423884873,1532,[Bug][Pull Up Refactoring] Pull up refactoring produces uncompilable program,RETester66,176339745,,,CLOSED,2024-07-22T22:40:57Z,2024-09-04T21:36:08Z,"# Steps to reproduce
1. Create a class `A`:
```
public class A {
    public interface Bar<T> { }

    public interface Base<T> { }

    public class Foo<T,U> implements Base<U> {
        public void foo(Bar<U> bar) { }// pull method foo up to interface Base
    }
}
```
2. Like I commented on the above code, left click method `foo`, then right click -> Refactor -> Pull Up, set the destination as interface Base, and use the default configuration as following, click Finish:

![image](https://github.com/user-attachments/assets/94817742-c15d-472a-acd2-23d943c2715d)

3. The refactoring is performed without any warning or exception. The refactored program is following, which contains syntax error:
```
public class A {
    public interface Bar<T> { }

    public interface Base<T> {

		void foo(Bar<U> bar); }

    public class Foo<T,U> implements Base<U> {
        @Override
		public void foo(Bar<U> bar) { }// pull method foo up to interface Base
    }
}
```

# Environment 
## OS Version
Windows 10, 64-bit Operating System, x64-based processor
## Eclipse Version
Eclipse IDE for Enterprise Java and Web Developers (includes Incubating components)
Version: 2024-06 (4.32.0)
Build id: 20240606-1231
## JDK Version
java version ""22.0.1"" 2024-04-16
Java(TM) SE Runtime Environment (build 22.0.1+8-16)
Java HotSpot(TM) 64-Bit Server VM (build 22.0.1+8-16, mixed mode, sharing)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1532/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1533,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1533,eclipse.jdt.ui,2423891945,1533,[Bug][Pull Up Refactoring] Pull up method refactoring for method in the inner class fails,RETester66,176339745,,,CLOSED,2024-07-22T22:48:15Z,2024-08-15T20:38:59Z,"# Steps to reproduce
1. Create a class `A`:
```
public class A {
    public class BaseInner {}

    public class Outer {
        public int x = 0;
        public void foo(){};

        public class Inner extends BaseInner {
            void innerMethod() { // Pull this method up to class BaseInner
                System.out.println(Outer.this.x);
                Outer.this.foo();
            }
        }
    }
}
```
2. Like I commented on the above code, left click method `innerMethod`, then right click -> Refactor -> Pull Up, set the destination as class BaseInner, and use the default configuration as following, click Finish:

![image](https://github.com/user-attachments/assets/3ac804fe-0cfd-486f-93f0-8728aa20901c)

3. The refactoring is performed without any warning or exception. The refactored program is following, which contains syntax error:
```
import com.my.hello.retester.A.Outer.Inner;

public class A {
    public class BaseInner {

		void innerMethod(Inner inner) { // Pull this method up to class BaseInner
		    System.out.println(inner.x);
		    inner.foo();
		}}

    public class Outer {
        public int x = 0;
        public void foo(){};

        public class Inner extends BaseInner {
        }
    }
}
```

# Environment 
## OS Version
Windows 10, 64-bit Operating System, x64-based processor
## Eclipse Version
Eclipse IDE for Enterprise Java and Web Developers (includes Incubating components)
Version: 2024-06 (4.32.0)
Build id: 20240606-1231
## JDK Version
java version ""22.0.1"" 2024-04-16
Java(TM) SE Runtime Environment (build 22.0.1+8-16)
Java HotSpot(TM) 64-Bit Server VM (build 22.0.1+8-16, mixed mode, sharing)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1533/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1535,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1535,eclipse.jdt.ui,2424544799,1535,Clean Up produces compile error for JUnit5 assertion (possibly generics compile issue),guw,191472,Gunnar Wagenknecht,,CLOSED,2024-07-23T07:37:26Z,2024-09-26T14:41:10Z,"The following snippet:
```java
    private void assertIteratorProducesExpectedList(
            List<String> expectedList,
            Iterator<String> rankedListIterator) {
        org.junit.jupiter.api.Assertions.assertIterableEquals(expectedList, new Iterable<String>() {
            @Override
            public Iterator<String> iterator() {
                return rankedListIterator;
            }
        });
    }
```

Gets clean up into:
```java
    private void assertIteratorProducesExpectedList(
            List<String> expectedList,
            Iterator<String> rankedListIterator) {
        org.junit.jupiter.api.Assertions.assertIterableEquals(expectedList, () -> rankedListIterator);
    }
```

The latter produces two compile errors in Eclipse:
1. Type mismatch: cannot convert from `Iterator<String>` to `Iterator<Object>`
2. The method `assertIterableEquals(Iterable<?>, Iterable<?>)` in the type `Assertions` is not applicable for the arguments `(List<String>, () -> {})`

Version: 2024-06 (4.32.0)
Build id: 20240606-1231

Note, it might be a type inference problem. The code compiles fine if I introduce a local variable assignment.

```java
    private void assertIteratorProducesExpectedList(
            List<String> expectedList,
            Iterator<String> rankedListIterator) {
        Iterable<String> iterable = () -> rankedListIterator;
        assertIterableEquals(expectedList, iterable);
    }
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1535/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1539,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1539,eclipse.jdt.ui,2427857072,1539,[Bug] [Folding mechanism] Method declaration on the Same Line as the Closing Bracket,jakub-suliga,66252366,Jakub Suliga,,OPEN,2024-07-24T15:15:53Z,2025-01-15T09:21:52Z,"When a method starts on the same line as the closing bracket of the previous method, the folding mechanism does not work correctly. The method declaration disappears along with the closing bracket. Ideally, only the closing bracket should disappear, not the method declaration.

Before the folding:
![image](https://github.com/user-attachments/assets/4cd79d7b-9f76-4e83-92a3-c36a72024f0b)

After the folding the first method:
![image](https://github.com/user-attachments/assets/eb59178f-9cb7-4e73-b9ca-057f6a40db50)

How it should be:
![image](https://github.com/user-attachments/assets/4b11e8af-6a83-4854-b37f-fc63bc78923a)

The code in the example:
```java
public class b {
	void a() {
		
	}void b() {
		
	}
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1539/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1539,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SpJFE,eclipse.jdt.ui,2460258628,1539,NA,jakub-suliga,66252366,Jakub Suliga,,NA,2024-11-06T16:35:40Z,2024-11-06T16:35:40Z,This PR #1939 should fix it.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SpJFE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1542,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1542,eclipse.jdt.ui,2430206182,1542,[23] Partition support for markdown comments,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,CLOSED,2024-07-25T14:54:15Z,2024-08-27T05:10:06Z,Compiler support has now been added in jdt.core and code assist is planned via https://github.com/eclipse-jdt/eclipse.jdt.core/issues/2744. My initial investigation shows that some work is needed in jdt.ui to make code completion requests to jdt.core APIs. I understand there's this notion of partition and we may need a new partition kind or treat /// same as Javadoc so that code completion requests are made and processed in the UI.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1542/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1542,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6GJjDb,eclipse.jdt.ui,2250649819,1542,NA,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,NA,2024-07-25T15:17:42Z,2024-07-25T15:17:42Z,Setting the milestone to BETA_JAVA23. Also would like to emphasize that this is a blocker for all jdt.core completion in markdown comments.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6GJjDb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1542,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Jx_sj,eclipse.jdt.ui,2311584547,1542,NA,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,NA,2024-08-27T05:10:05Z,2024-08-27T05:10:05Z,"This is complete, except for few minor follow-up issues, for which I will raise new issues. Closing this now.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Jx_sj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1554,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1554,eclipse.jdt.ui,2432594270,1554,Convert to Text-Block quick-fix/clean-up not applicable for StringBuilder/Buffer concatenation,HannesWell,44067969,Hannes Wellmann,,CLOSED,2024-07-26T16:45:14Z,2024-07-31T03:54:55Z,"The clean-up `Convert String/StringBuffer/StringBuilder concatenation to Text Block` is often not applicable on multi-line Strings that are built using `StringBuffer/StringBuilder` chains. The corresponding quick-fix is also not available when pressing Ctrl+1 at such expression.
When I manually convert the `StringBuffer/StringBuilder` chain into a simple String-concatenation using +, then the conversion to Text-block is possible.

One specific example is 
https://github.com/eclipse-pde/eclipse.pde/blob/e1b548604a23c54170625a6f9725e7465286624b/build/org.eclipse.pde.build.tests/src/org/eclipse/pde/build/internal/tests/p2/PublishingTests.java#L371-L396

But that file contains many more places where this does not work
https://github.com/eclipse-pde/eclipse.pde/blob/e1b548604a23c54170625a6f9725e7465286624b/build/org.eclipse.pde.build.tests/src/org/eclipse/pde/build/internal/tests/p2/PublishingTests.java","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1554/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1554,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6GTXl8,eclipse.jdt.ui,2253224316,1554,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-07-26T17:55:41Z,2024-07-26T17:55:41Z,"In the first example, the StringBuffer is being passed as an argument to a method.  The code generally looks to ensure the StringBuffer isn't being used again and also looks for a toString() call.  In this case, additional checks need to be made to see if the StringBuffer is being passed as a String argument so toString() is implied.  When you changed it to a concatenated String, it is different logic.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6GTXl8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1554,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6GYQcT,eclipse.jdt.ui,2254505747,1554,NA,HannesWell,44067969,Hannes Wellmann,,NA,2024-07-28T12:41:39Z,2024-07-28T12:41:39Z,"Thanks for your answer, that makes sense.
With that in mind I have to added that I changed the called method from accepting a `StringBuffer` to accept a `CharSequence`.
Without that it would indeed not be possible to change the concatenation to a Text-Block, but for a case like the following it should work theoretically:
```
	public static void main(String[] args) {
		StringBuilder builder = new StringBuilder();
		builder.append(""Hello \n"");
		builder.append(""World \n"");
		write(builder);
	}

	private static void write(CharSequence sequence);
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6GYQcT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1558,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1558,eclipse.jdt.ui,2436289035,1558,Quickfix for return type that's a wildcard doesn't work post 1.4,datho7561,22376627,David Thompson,davthomp@redhat.com,CLOSED,2024-07-29T20:29:02Z,2024-08-06T21:08:45Z,"The quickfix to fix the return type in the following code doesn't work.

```java
import java.lang.reflect.AccessibleObject;

public class WeirdAnonymousThingy {
	
	@Override
	public void m() {
		new AccessibleObject() {
			public void getAnnotation(Class annotationClass) {
				
			}
		};
	}
}
```

It's a particular nasty edge case: this anonymous class inherits a method that has a method-level type parameter with a bound set, and the return type is that type variable. (see [the javadoc for AccessibleObject.getAnnotation](https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/AccessibleObject.html#getAnnotation(java.lang.Class)))

Pre-1.5, the erasure of the type variable is calculated as the value that `void` gets replaced with. Post 1.5, the type variable is inserted in place of `void`, which results in invalid code, since the type variable is declared in the override implementation.

I think that ideally this quickfix should provide two options:
1. Returning a type variable (and properly declaring it)
2. Returning the erasure of the type variable","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1558/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1558,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Gh1f0,eclipse.jdt.ui,2257016820,1558,NA,datho7561,22376627,David Thompson,davthomp@redhat.com,NA,2024-07-29T21:12:01Z,2024-07-29T21:12:01Z,"I started working on this; doing 1. is pretty easy, doing 2. is a bit more involved.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Gh1f0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1560,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1560,eclipse.jdt.ui,2438629997,1560,Generating hashCode method on a child class fails to fully-qualify field names,kysmith-csg,136501322,Kyle Smith,,CLOSED,2024-07-30T18:14:57Z,2024-09-11T18:45:29Z,"Given the following class structure:

```java
    static class Parent {

        private int fieldA;
        private String fieldB;

        @Override
        public int hashCode() {
            return Objects.hash(fieldA, fieldB);
        }

        @Override
        public boolean equals(Object obj) {
            if (this == obj) {
                return true;
            }
            if (!(obj instanceof Parent)) {
                return false;
            }
            Parent other = (Parent) obj;
            return fieldA == other.fieldA && Objects.equals(fieldB, other.fieldB);
        }
    }

    static class Child extends Parent {

        private String result;

    }
```

Performing the ""Generate hashCode() and equals()"" command in `Child` results in the following code:

```java
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = super.hashCode();
            result = prime * result + Objects.hash(result); // Using local variable result instead of the field
            return result;
        }
```

It needs to fully-qualify the `result` field where needed (in `Objects.hash(this.result)`), otherwise this field isn't used at all and the hashcode isn't correct.

---

Eclipse.org	Eclipse Java Development Tools	3.19.600.v20240704-2057	org.eclipse.jdt
Eclipse.org	Java Development Tools Core	3.39.0.v20240704-1654	org.eclipse.jdt.core
Eclipse.org	Java Development Tools UI	3.33.0.v20240704-2057	org.eclipse.jdt.ui","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1560/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1563,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1563,eclipse.jdt.ui,2440980192,1563,Invalid layout for Compare control in Refactor dialog,basilevs,650857,Vasili Gulevich,,OPEN,2024-07-31T21:26:18Z,2024-08-01T13:46:26Z,"Environment:
Version: 2024-09 M1 (4.33.0 M1) (or any other version)
Build id: 20240711-1605
Mac OS (tested) or another platform (happened to me before on Windows and Linux)

# Test steps

- Create a project
  - Either a project with two packages and one class
  - or import [example.zip](https://github.com/user-attachments/files/16447302/example.zip)
- Move a class to another package
- Click Preview
- Click ""Move compilation unit...""
- Click ""Example.java - ...""

## Expected result
Compare area occupied all available space
<img width=""631"" alt=""Screenshot 2024-08-01 at 01 23 31"" src=""https://github.com/user-attachments/assets/cde9344d-310b-42f4-bb5b-32a597178a6f"">

## Actual result
Compare area has minimum size
<img width=""639"" alt=""Screenshot 2024-08-01 at 01 21 51"" src=""https://github.com/user-attachments/assets/57f94997-70c1-4388-b50b-17d9ff0f22ae"">

# Workaround
Click anywhere in the dialog again. As focus changes, relayout happens and the Compare area becomes larger.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1563/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1565,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1565,eclipse.jdt.ui,2444904554,1565,5 jdt.ui and jdt.refactoring tests fail since I20240801-1800,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2024-08-02T12:53:57Z,2024-08-03T02:35:52Z,"Regression from https://github.com/eclipse-jdt/eclipse.jdt.core/pull/2776

* https://download.eclipse.org/eclipse/downloads/drops4/I20240801-1800/testResults.php
* https://download.eclipse.org/eclipse/downloads/drops4/I20240801-1800/testresults/html/org.eclipse.jdt.ui.tests_ep433I-unit-cen64-gtk3-java17_linux.gtk.x86_64_17.html
* https://download.eclipse.org/eclipse/downloads/drops4/I20240801-1800/testresults/html/org.eclipse.jdt.ui.tests.refactoring_ep433I-unit-cen64-gtk3-java17_linux.gtk.x86_64_17.html

* `AdvancedQuickAssistTest1d7.testReplaceReturnIfWithCondition4`
* `InlineConstantTests.test29`
* `InlineTempTests.test32`
* `InlineTempTests.test37`
* `InlineTempTests.test38`

I assume test expectations should be adopted, I will look into that.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1565/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1565,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6HBqJq,eclipse.jdt.ui,2265358954,1565,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-08-02T13:01:03Z,2024-08-02T13:01:03Z,"@jjohnstn. @stephan-herrmann  : IMO current expectations of `AdvancedQuickAssistTest1d7`, `InlineTempTests` and `InlineConstantTests` are correct, so the change https://github.com/eclipse-jdt/eclipse.jdt.core/pull/2776 caused a regression. 
I don't know whether that should be fixed in UI or core, please check.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6HBqJq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1565,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6HB3n8,eclipse.jdt.ui,2265414140,1565,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-08-02T13:31:51Z,2024-08-02T13:31:51Z,"> @jjohnstn. @stephan-herrmann : IMO current expectations of `AdvancedQuickAssistTest1d7`, `InlineTempTests` and `InlineConstantTests` are correct, so the change [eclipse-jdt/eclipse.jdt.core#2776](https://github.com/eclipse-jdt/eclipse.jdt.core/pull/2776) caused a regression. I don't know whether that should be fixed in UI or core, please check.

Regarding `InlineTempTests` please see https://github.com/eclipse-jdt/eclipse.jdt.core/pull/2776#issuecomment-2263083907

I haven't analyzed why those tests succeeded before (at which compliance?), but @jjohnstn and myself concluded that more is needed in JDT/UI, because inspecting the code prior to the refactoring simply doesn't provide sufficient information at compliance 1.8+.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6HB3n8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1565,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6HB4RR,eclipse.jdt.ui,2265416785,1565,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-08-02T13:33:19Z,2024-08-02T13:33:19Z,Compliance is 1.8.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6HB4RR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1565,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6HB456,eclipse.jdt.ui,2265419386,1565,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-08-02T13:34:43Z,2024-08-02T13:34:43Z,"> Compliance is 1.8.

I was asking about compliance before https://github.com/eclipse-jdt/eclipse.jdt.core/pull/2551","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6HB456/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1565,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6HB5rw,eclipse.jdt.ui,2265422576,1565,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-08-02T13:36:28Z,2024-08-02T13:36:28Z,"> > Compliance is 1.8.
> 
> I was asking about compliance before [eclipse-jdt/eclipse.jdt.core#2551](https://github.com/eclipse-jdt/eclipse.jdt.core/pull/2551)

Why is this important? The test was green after https://github.com/eclipse-jdt/eclipse.jdt.core/pull/2551 and broken after https://github.com/eclipse-jdt/eclipse.jdt.core/pull/2776.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6HB5rw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1565,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6HB6ju,eclipse.jdt.ui,2265426158,1565,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-08-02T13:38:27Z,2024-08-02T13:38:27Z,"> Why is this important?

Refactoring used a mechanism from 1.7, which is not useful in 1.8. When it passed at 1.8 it was by accident.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6HB6ju/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1565,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6HEZFj,eclipse.jdt.ui,2266075491,1565,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-08-02T20:11:09Z,2024-08-02T20:11:09Z,"Hi @iloveeclipse The code in JDT UI needs to be altered.  The code was using a flag that wasn't being set 1.8 +.  This caused an error in one test that you disabled.  @stephan-herrmann fixed the flag but the code in UI still isn't correct in that it isn't able to calculate whether the cast is really needed or not.  I propose that the code leave out the cast and then when it tests for errors with the new code, go back and cast any occurrences where noted by the compilation failures.  As mentioned, the simplest hack for the present is to not do the cast until the logic gets changed.  I intend to try and do that next week.  I'll post a PR shortly (disablement) until I have time next week (it is a long weekend here in Canada).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6HEZFj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1573,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1573,eclipse.jdt.ui,2454418372,1573,Update InlineTempRefactoring logic to properly add method type parameters when needed,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-08-07T21:53:21Z,2024-08-08T17:20:16Z,"When JDT moved to Java 1.8 minimum, some tests that were Java 1.7 or lower started failing.  One such failure was due to a flag no longer being set post 1.7.  This failure for InlineTempTests.test31 was due to the flag, but once the flag was restored, the logic in InlineTempRefactoring cannot just blindly rely on the flag as sometimes type parameters are needed and sometimes they are not.

The fix will add logic to mark where type parameters might be needed and then leave them out.  In checkFinalConditions(), there is a recompile of the changed file to see if any new problems are introduced.  If they are at the spots we have recorded, we can mark this and redo the change with the type parameters added where noted.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1573/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1575,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1575,eclipse.jdt.ui,2455794162,1575,UI freeze when saving big file after find replace,trancexpress,24752155,Simeon Andreev,,OPEN,2024-08-08T13:19:26Z,2025-02-14T11:48:14Z,"To reproduce:

1. Generate a source file with: [GenerateJava.zip](https://github.com/user-attachments/files/16548553/GenerateJava.zip)
2. Copy it to a new Java project with default settings.
3. Find-replace in the file, replace ""= 42"" with ""= 43"" (this takes a while, another bug to report).
4. Save the file, this freezes the UI for about a minute (on a HP Z640 workstation).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1575/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1575,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6HplQ9,eclipse.jdt.ui,2275824701,1575,NA,trancexpress,24752155,Simeon Andreev,,NA,2024-08-08T13:25:53Z,2024-08-08T13:25:53Z,"I found 2 issues here:

1. `SemanticHighlightingReconciler` has hints about using a binary search in `addPosition()` and `retainPositions()` - those 2 methods will make work in a background thread run for a while. But its background work, its long but it doesn't block the UI.
2. `SemanticHighlightingPresenterCore.update()` is called once for every replacement. Within, it iterates over `event.getDocument().getPositions(fCategory)`, for category `SemanticHighlightingPresenterCore`. There are many positions in this set (also linear to the amount of inner classes generated for the reproduction snippet). So this results in quadratic complexity, for that particular input snippet.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6HplQ9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1575,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6HpmWY,eclipse.jdt.ui,2275829144,1575,NA,trancexpress,24752155,Simeon Andreev,,NA,2024-08-08T13:26:57Z,2024-08-08T13:26:57Z,"The binary search comments can be realized by something like this:

```
diff --git a/org.eclipse.jdt.ui/ui/org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightingReconciler.java b/org.eclipse.jdt.ui/ui/org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightingReconciler.java
index 72880716f8..b37468d960 100644
--- a/org.eclipse.jdt.ui/ui/org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightingReconciler.java
+++ b/org.eclipse.jdt.ui/ui/org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightingReconciler.java
@@ -15,6 +15,7 @@
 package org.eclipse.jdt.internal.ui.javaeditor;
 
 import java.util.ArrayList;
+import java.util.Collections;
 import java.util.List;
 
 import org.eclipse.swt.widgets.Display;
@@ -265,15 +266,37 @@ public class SemanticHighlightingReconciler implements IJavaReconcilingListener,
                private void addPosition(int offset, int length, Highlighting highlighting) {
                        boolean isExisting= false;
                        // TODO: use binary search
-                       for (int i= 0, n= fRemovedPositions.size(); i < n; i++) {
-                               HighlightedPosition position= (HighlightedPosition) fRemovedPositions.get(i);
-                               if (position == null)
-                                       continue;
-                               if (position.isEqual(offset, length, highlighting)) {
-                                       isExisting= true;
-                                       fRemovedPositions.set(i, null);
-                                       fNOfRemovedPositions--;
-                                       break;
+                       if (!fOffsetIndices.isEmpty()) {
+                               boolean oob = false;
+                               if (offset < fOffsetIndices.get(0).offset) {
+                                       oob = true;
+                               } else if (offset > fOffsetIndices.get(fOffsetIndices.size() - 1).offset) {
+                                       oob = true;
+                               }
+                               if (!oob) {
+                                       int startIndex = Collections.binarySearch(fOffsetIndices, Integer.valueOf(offset));
+                                       startIndex = Math.max(startIndex, 0);
+                                       startIndex = Math.min(startIndex, fRemovedPositions.size());
+                                       int endIndex = Collections.binarySearch(fOffsetIndices, Integer.valueOf(offset + 1));
+                                       startIndex = Math.max(endIndex, 0);
+                                       startIndex = Math.min(endIndex, fRemovedPositions.size());
+//                                     System.out.println(""addPosition() searching in interval: ["" + startIndex + "", "" + fRemovedPositions.size() + "")""); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
+//                                     System.out.println(""offset="" + offset + "", fOffsetIndices first="" + fOffsetIndices.get(0) + "", fOffsetIndices last="" + fOffsetIndices.get(fOffsetIndices.size() - 1)); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
+
+                                       for (int i= startIndex, n= endIndex; i < n; i++) {
+                                               HighlightedPosition position= (HighlightedPosition) fRemovedPositions.get(i);
+                                               if (position == null)
+                                                       continue;
+                                               if (position.offset > offset) {
+                                                       break;
+                                               }
+                                               if (position.isEqual(offset, length, highlighting)) {
+                                                       isExisting= true;
+                                                       fRemovedPositions.set(i, null);
+                                                       fNOfRemovedPositions--;
+                                                       break;
+                                               }
+                                       }
                                }
                        }
 
@@ -291,11 +314,26 @@ public class SemanticHighlightingReconciler implements IJavaReconcilingListener,
                @Override
                protected void retainPositions(int offset, int length) {
                        // TODO: use binary search
-                       for (int i= 0, n= fRemovedPositions.size(); i < n; i++) {
-                               HighlightedPosition position= (HighlightedPosition) fRemovedPositions.get(i);
-                               if (position != null && position.isContained(offset, length)) {
-                                       fRemovedPositions.set(i, null);
-                                       fNOfRemovedPositions--;
+                       if (!fOffsetIndices.isEmpty()) {
+                               boolean oob = false;
+                               if (offset + length < fOffsetIndices.get(0).offset) {
+                                       oob = true;
+                               } else if (offset > fOffsetIndices.get(fOffsetIndices.size() - 1).bound()) {
+                                       oob = true;
+                               }
+                               if (!oob) {
+                                       int endIndex = Collections.binarySearch(fOffsetIndices, Integer.valueOf(offset + length + 1));
+                                       endIndex = Math.max(endIndex, 0);
+                                       endIndex = Math.min(endIndex, fRemovedPositions.size());
+//                                     System.out.println(""retainPositions() searching in interval: ["" + 0 + "", "" + endIndex + ""), fRemovedPositions.size()="" + fRemovedPositions.size()); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
+//                                     System.out.println(""offset="" + offset + "", fOffsetIndices first="" + fOffsetIndices.get(0) + "", fOffsetIndices last="" + fOffsetIndices.get(fOffsetIndices.size() - 1)); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
+                                       for (int i= 0, n= endIndex; i < n; i++) {
+                                               HighlightedPosition position= (HighlightedPosition) fRemovedPositions.get(i);
+                                               if (position != null && position.isContained(offset, length)) {
+                                                       fRemovedPositions.set(i, null);
+                                                       fNOfRemovedPositions--;
+                                               }
+                                       }
                                }
                        }
                }
@@ -339,8 +377,16 @@ public class SemanticHighlightingReconciler implements IJavaReconcilingListener,
 
        /** Background job's added highlighted positions */
        private List<Position> fAddedPositions= new ArrayList<>();
-       /** Background job's removed highlighted positions */
+       /** Background job's removed highlighted positions, sorted by offset */
        private List<Position> fRemovedPositions= new ArrayList<>();
+
+       private record OffsetIndex(int offset, int index, int length) implements Comparable<Integer> {
+               int bound() { return offset + length; }
+               @Override
+               public int compareTo(Integer o) { return Integer.compare(offset, o.intValue()); }
+       }
+       private List<OffsetIndex> fOffsetIndices = new ArrayList<>();
+
        /** Number of removed positions */
        private int fNOfRemovedPositions;
 
@@ -456,7 +502,17 @@ public class SemanticHighlightingReconciler implements IJavaReconcilingListener,
         * Start reconciling positions.
         */
        private void startReconcilingPositions() {
-               fJobPresenter.addAllPositions(fRemovedPositions);
+               fOffsetIndices.clear();
+               List<Position> positions = new ArrayList<>();
+               fJobPresenter.addAllPositions(positions);
+               Collections.sort(positions, (p1, p2) -> Integer.compare(p1.offset, p2.offset));
+               // go backward to overwrite indices for positions with equal offsets
+               for (int i = 0; i < positions.size(); ++i) {
+                       Position position = positions.get(i);
+                       fOffsetIndices.add(new OffsetIndex(Integer.valueOf(position.offset), i, Integer.valueOf(position.length)));
+               }
+               fRemovedPositions = positions;
+
                fNOfRemovedPositions= fRemovedPositions.size();
        }
 
@@ -523,6 +579,7 @@ public class SemanticHighlightingReconciler implements IJavaReconcilingListener,
         */
        private void stopReconcilingPositions() {
                fRemovedPositions.clear();
+               fOffsetIndices.clear();
                fNOfRemovedPositions= 0;
                fAddedPositions.clear();
        }
```

That doesn't fix the problem though (since its background work).

The retain method will need another array to speed it up, with different contents. Since the background work is fast already with this change, its probably not needed to do more there.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6HpmWY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1575,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Rz0Bv,eclipse.jdt.ui,2446278767,1575,NA,trancexpress,24752155,Simeon Andreev,,NA,2024-10-30T09:17:00Z,2024-10-30T09:17:00Z,"To clarify, I was using the find-replace dialog. Not the new overlay.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Rz0Bv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1575,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6R0FRu,eclipse.jdt.ui,2446349422,1575,NA,fedejeanne,2205684,Federico Jeanne,,NA,2024-10-30T09:41:14Z,2024-10-30T09:41:14Z,"I was also able to see the poor performance when using the new F&R overlay. 

I don't see the same methods you mentioned but it's probably the same root cause:

![image](https://github.com/user-attachments/assets/2c0955a1-90ee-43b9-a463-fac727195761)

![image](https://github.com/user-attachments/assets/fe19dd8a-4c82-4979-96c0-7e20739324e9)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6R0FRu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1575,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6UTytw,eclipse.jdt.ui,2488216432,1575,NA,christianstaib,45143330,Christian Staib,,NA,2024-11-20T10:38:43Z,2024-11-20T10:38:43Z,"Hi @trancexpress,

Thank you for your report.

@jannisCode and I have been looking into the issue but so far were unable to reproduce the UI freeze when saving the changed file. However, we experienced a UI freeze when replacing a lot of text and are currently trying to triangulate the problem and look into potential solutions.

Regarding the UI freeze when saving, could you please provide the Eclipse error log for it?

BR
Christian","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6UTytw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1575,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6UUXwa,eclipse.jdt.ui,2488368154,1575,NA,trancexpress,24752155,Simeon Andreev,,NA,2024-11-20T11:45:02Z,2024-11-20T11:45:02Z,"Here is a log file from a freeze: [log_gh1575.txt](https://github.com/user-attachments/files/17829951/log_gh1575.txt)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6UUXwa/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1575,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Zwa7r,eclipse.jdt.ui,2579607275,1575,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-09T09:45:10Z,2025-01-09T09:45:10Z,"> 1. Generate a source file with: [GenerateJava.zip](https://github.com/user-attachments/files/16548553/GenerateJava.zip)

Could you please share a reproducing javafile that compiles without error? The example given results in ""Too many constants, the constant pool for LargeJavaFile would exceed 65536 entries""","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Zwa7r/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1575,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Z5cNb,eclipse.jdt.ui,2581971803,1575,NA,christianstaib,45143330,Christian Staib,,NA,2025-01-10T07:39:19Z,2025-01-10T07:39:19Z,"@jukzi While I was not successful in reproducing the mentioned error, I reduced the number of inner classes to 20k, which was still large enough to slow the find and replace operation but gave no errors.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Z5cNb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1575,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6d-OzL,eclipse.jdt.ui,2650336459,1575,NA,trancexpress,24752155,Simeon Andreev,,NA,2025-02-11T10:06:06Z,2025-02-11T10:06:06Z,"> > 1. Generate a source file with: [GenerateJava.zip](https://github.com/user-attachments/files/16548553/GenerateJava.zip)
> 
> Could you please share a reproducing javafile that compiles without error? The example given results in ""Too many constants, the constant pool for LargeJavaFile would exceed 65536 entries""

You can also generate the files in this form:

```
package test;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

public class GenerateJava {

	private static final String ROOT_PATH = ""/tmp/testlargefile/"";

	private static final int NUMBER_OF_INNER_CLASSES = 100;

	private static final String INDENT = ""    "";

	public static void main(String[] args) throws IOException {
		Path path = createFile(""LargeJavaFile.java"");
		writeContents(path);
	}

	private static void writeContents(Path path) throws IOException {
		try (BufferedWriter writer = createWriter(path)) {
			writeClass(writer);
		}
	}

	private static void writeClass(BufferedWriter writer) throws IOException {
		writeLine(writer, ""package test;"");
		writeLine(writer);
		writeLine(writer, ""public class LargeJavaFile {"");
		writeLine(writer);
		int depth = 1;
		int n = NUMBER_OF_INNER_CLASSES;
		double currentPercent = 0.0;
		for (int i = 0; i < n; ++i) {
			writeSubclass(writer, i, depth);
			writeLine(writer);
			if (((double) i / (double)n) * 100.0 > currentPercent) {
				currentPercent += 1.0;
				System.out.println(""Progress "" + (int) currentPercent + ""%..."");
			}
		}
		writeLine(writer, ""}"");
	}

	private static void writeSubclass(BufferedWriter writer, int i, int depth) throws IOException {
		writeIndentedLine(writer, ""public static class InnerClass"" + i + "" {"", depth);
		writeSubclassContents(writer, i, depth + 1);
		writeIndentedLine(writer, ""} // end of InnerClass"" + i, depth);
	}

	private static void writeSubclassContents(BufferedWriter writer, int i, int depth) throws IOException {
		writeIndentedLine(writer, ""public int x = 42;"", depth);
		writeIndentedLine(writer, depth);
		writeIndentedLine(writer, ""public void helloWorld() {"", depth);
		writeIndentedLine(writer, ""System.out.println(\""Hello World!\"");"", depth + 2);
		writeIndentedLine(writer, ""System.out.println(\""In class \"" + "" + i + "" + \"", x=\"" + x);"", depth + 2);
		writeIndentedLine(writer, ""}"", depth);
		
	}

	private static void writeIndentedLine(BufferedWriter writer, String line, int depth) throws IOException {
		for (int i = 0; i < depth; ++i) {
			writer.write(INDENT);
		}
		writeLine(writer, line);
	}
	
	private static void writeIndentedLine(BufferedWriter writer, int depth) throws IOException {
		for (int i = 0; i < depth; ++i) {
			writer.write(INDENT);
		}
		writeLine(writer);
	}

	private static void writeLine(BufferedWriter writer, String line) throws IOException {
		writer.write(line);
		writeLine(writer);
	}
	
	private static void writeLine(BufferedWriter writer) throws IOException {
		writer.write(System.lineSeparator());
	}

	private static BufferedWriter createWriter(Path path) throws IOException {
		return new BufferedWriter(new FileWriter(path.toFile()));
	}

	private static Path createFile(String fileName) throws IOException {
		Path root = Paths.get(ROOT_PATH);
		Path filePath = root.resolve(fileName);
		Files.deleteIfExists(filePath);
		Files.deleteIfExists(root);
		Files.createDirectories(root);
		return Files.createFile(filePath);
	}

}
```

I found that adding highlighting positions starts with > 100 inner classes. So when debugging, less than 100 inner classes were not useful.

Last time I tried, the problem was also more easily debugged without the errors. Though in the original case we do have errors; we care about saving not been slow also for files with errors.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6d-OzL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1575,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6eeAVf,eclipse.jdt.ui,2658665823,1575,NA,christianstaib,45143330,Christian Staib,,NA,2025-02-14T09:02:31Z,2025-02-14T09:02:31Z,"Hi @trancexpress,

thank you for the Code snippet.

With my (quite powerful) machine and Eclipse version i was unable to reproduce the the UI freeze when saving after search and replace. I tried 10 000 inner classes. Can you maybe produce a visualvm snippet of the the freeze?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6eeAVf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1575,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6efxc2,eclipse.jdt.ui,2659129142,1575,NA,trancexpress,24752155,Simeon Andreev,,NA,2025-02-14T11:48:12Z,2025-02-14T11:48:12Z,"> Hi [@trancexpress](https://github.com/trancexpress),
> 
> thank you for the Code snippet.
> 
> With my (quite powerful) machine and Eclipse version i was unable to reproduce the the UI freeze when saving after search and replace. I tried 10 000 inner classes. Can you maybe produce a visualvm snippet of the the freeze?

I also can't reproduce with:

```
Eclipse SDK
Version: 2025-03 (4.35)
Build id: I20250213-1800
```

I assume the freeze was fixed then, so closing this issue.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6efxc2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1578,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1578,eclipse.jdt.ui,2458227589,1578,Javadoc view make method parameter type's style to be hovered by default,caldy2000,133640130,,,OPEN,2024-08-09T15:59:28Z,2024-08-09T15:59:28Z,"> Report this issue besed on Eclipse 4.32 (2024-06)
# Reference features
1. [javadocStylingImprovements](https://eclipse.dev/eclipse/news/4.32/jdt.php#javadocStylingImprovements)

# Case
According to the reference feature#1, Javadoc view (opened by F2, hover, or specific view) make method's type parameters colorful, it is greate idea.

And my suggestion is , to make the method parameter type have a default style as it is be hovered by cursor. like this image:
![image](https://github.com/user-attachments/assets/b38e171d-47ca-47cc-ac7c-80b2cc2a5084)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1578/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1579,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1579,eclipse.jdt.ui,2459153574,1579,javadoc: Explicit link to package without package-info.java does not work,stephan-herrmann,24587985,Stephan Herrmann,,OPEN,2024-08-10T16:21:32Z,2024-08-11T09:57:00Z,"Found during #1472: within javadoc an explicit link to a package only works when `package-info.java` exists. Implicit links ""work"", though.

```java
/**
 * See package {@link java.util} or {@link java.util.List}
 */
public class Javadoc {
}
```
The link `{@link java.util}` does not navigate anywhere.

Navigating first to `java.util.List` shows the qualified name whose segment `util` lets me navigate to the package (albeit signaling ""_Note: The Javadoc for this element could neither be found in the attached source nor the attached Javadoc._"").

In https://openjdk.org/jeps/467, however, I learned that such package links should work.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1579/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1579,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6IDpSQ,eclipse.jdt.ui,2282656912,1579,NA,caldy2000,133640130,,,NA,2024-08-11T07:35:32Z,2024-08-11T07:35:32Z,"hello, i tried to write a comment on a method.
```java
	/**
	 * 通过反射创建新的实例。
	 * 如果想通过反射创建新的实例，在jdk9之后，使用{@link Constructor#newInstance(Object...) newInstance}来创建
	 * 
	 * and redirect to {@link java.lang.Object}, and to {@link java.lang}
	 */
	public void createNewInstance() {
		
	}
```

run command line :
```
 H:\dev\java\jdk11\bin\javadoc.exe -encoding utf-8 -charset utf-8 -d .\bin\javadoc\ -cp .\src -link 'https://docs.oracle.com/en/java/javase/11/docs/api/' javadoc
```
this is project's layout:
![image](https://github.com/user-attachments/assets/c02373cb-53d9-4bc9-9116-b0128e3a5b5e)

open method's javadoc in browser:
![image](https://github.com/user-attachments/assets/9cdcdcab-9797-4620-8562-471609dca96a)

link can redirect as expected whether it's class member or package reference, but eclipse java editor can't give a hyperlink on a package reference, class member reference works.

# Reference
- [javadoc tool](https://docs.oracle.com/javase/8/docs/technotes/tools/windows/javadoc.html)

    {@link package.class#member label}

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6IDpSQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1579,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ID0Nd,eclipse.jdt.ui,2282701661,1579,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-08-11T09:56:59Z,2024-08-11T09:56:59Z,"> eclipse java editor can't give a hyperlink on a package reference, class member reference works.

exactly, that's what this issue is about.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ID0Nd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1581,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1581,eclipse.jdt.ui,2460192757,1581,[23] Merge master branch into BETA_JAVA23 branch,noopur2507,8749449,Noopur Gupta,,CLOSED,2024-08-12T07:00:27Z,2024-08-13T05:40:11Z,Merge master branch into BETA_JAVA23 branch.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1581/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1582,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1582,eclipse.jdt.ui,2460809164,1582,JEP 467 adjust heading levels?,stephan-herrmann,24587985,Stephan Herrmann,,CLOSED,2024-08-12T12:02:59Z,2024-08-14T21:27:56Z,"Follow-up after  #1523: according to https://openjdk.org/jeps/467#API-and-implementation headings inside markdown comments should potentially be adjusted depending on context:

> ""The heading level is adjusted according to the enclosing context. This applies whether the heading was initially written in the documentation comment as an [ATX-style heading](https://spec.commonmark.org/0.30/#atx-headings) (using a prefix of # characters to indicate the level) or as a [Setext-style heading](https://spec.commonmark.org/0.30/#setext-heading) (using underlining with = or - to indicate the level).
>
> For example, a level 1 heading in the documentation comment for a module, package, or class is rendered as a level 2 heading in the generated page, while a level 1 heading in the documentation comment for a field, constructor, or method is rendered as a level 4 heading in the generated page.
>
> This adjustment applies only to Markdown headings, not to any direct use of HTML headings.""

OTOH, JDT/UI could also argue that javadoc view and hovers don't generate a full documentation page, so there are no enclosing sections and hence section headings don't need to be fitted into such overall structure.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1582/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1582,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6IfafY,eclipse.jdt.ui,2289936344,1582,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-08-14T21:27:55Z,2024-08-14T21:27:55Z,"Thinking more about it I don't see a need for any such adjustments.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6IfafY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1588,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1588,eclipse.jdt.ui,2465553861,1588,[23] Compiler compliance level 23 missing (BETA) label,noopur2507,8749449,Noopur Gupta,,CLOSED,2024-08-14T11:15:14Z,2024-09-01T17:29:06Z,"In compiler preferences, compliance level 23 is not having the label (BETA) in the latest Y-build.

This was added initially via https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1350/files#diff-75bddcdfd2484e74dd12777aa5f88c804a476cb214989f7363c5a654ef9eb0b1.

It seems to have been removed while dropping the support for older Java versions.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1588/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1588,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6IZ1_s,eclipse.jdt.ui,2288476140,1588,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-08-14T11:15:23Z,2024-08-14T11:15:23Z,/cc @iloveeclipse ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6IZ1_s/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1588,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6IaZuY,eclipse.jdt.ui,2288622488,1588,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-08-14T12:33:31Z,2024-08-14T12:33:31Z,I'm on vacation till 27 August without access to computer. I guess the merge from master to BETA  branch was not OK.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6IaZuY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1588,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6J16e7,eclipse.jdt.ui,2312611771,1588,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-08-27T13:46:30Z,2024-08-27T13:46:30Z,"> I'm on vacation till 27 August without access to computer. I guess the merge from master to BETA branch was not OK.

The merge was OK, just the new strategy without separately defined labels cannot handle this requirement.

We could manually replace ""23"" with ""23 (BETA)"" inside `ComplianceConfigurationBlock.createComplianceTabContent(Composite)` but that would add yet another task to the preparations for GA, when such disclaimers are to be removed.

Does JDT/UI have a central location where ""beta-ness"" is handled?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6J16e7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1588,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6J9XnN,eclipse.jdt.ui,2314566093,1588,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-08-28T07:43:18Z,2024-08-28T07:43:18Z,"> Does JDT/UI have a central location where ""beta-ness"" is handled?

No. Another place where early-draft disclaimer is added is [ComplianceConfigurationBlock](eclipse-javadoc:%E2%98%82=org.eclipse.jdt.ui/ui%3Corg.eclipse.jdt.internal.ui.preferences%7BComplianceConfigurationBlock.java%E2%98%83ComplianceConfigurationBlock).validateComplianceStatus().
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6J9XnN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1588,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6KMmpY,eclipse.jdt.ui,2318559832,1588,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-08-29T18:19:59Z,2024-08-29T18:19:59Z,"> > Does JDT/UI have a central location where ""beta-ness"" is handled?
> 
> No. Another place where early-draft disclaimer is added is ComplianceConfigurationBlock.validateComplianceStatus().

Thanks,
In #1621 I tried to add the ""(BETA)"" suffix in a way that doesn't cause more maintenance efforts. I admit that the manual label manipulation is not the most elegant code.

@noopur2507 what do you think?
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6KMmpY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1588,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6KfMrj,eclipse.jdt.ui,2323434211,1588,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-09-01T17:29:01Z,2024-09-01T17:29:01Z,Fixed for now by https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1621,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6KfMrj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1589,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1589,eclipse.jdt.ui,2466845835,1589,[23] Highlight 'module' in module imports,stephan-herrmann,24587985,Stephan Herrmann,,CLOSED,2024-08-14T21:08:22Z,2024-08-24T19:48:53Z,"The syntax from https://github.com/eclipse-jdt/eclipse.jdt.core/issues/2383 needs to get some help for highlighting the conditional keyword / restricted identifier **module** in code like this:

```java
package foo;
import module java.xml;
public class Foo {
    Document doc;
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1589/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1589,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6JBVPX,eclipse.jdt.ui,2298827735,1589,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-08-20T13:11:34Z,2024-08-20T13:11:34Z,"Sneak preview of local implementation based on https://github.com/eclipse-jdt/eclipse.jdt.core/pull/2836:
![image](https://github.com/user-attachments/assets/33850267-ff7c-4d43-948e-ed4ad4fb20d7)

I changed the color for restricted identifiers for clarity (see how `record` is rendered).

This is the code we are referring to:
* `module-info.java`:
![image](https://github.com/user-attachments/assets/f5631c46-4da6-4a89-b233-b52eb882798a)
* `con/Fusion.java`:
![image](https://github.com/user-attachments/assets/05f9914f-d8d3-4d3d-a1b9-fd9939f6500c)

See that the import declaration can distinguish between occurrences of the word ""module"" (modifier vs. identifier), which the editor of `module-info.java` cannot yet.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6JBVPX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1593,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1593,eclipse.jdt.ui,2475221625,1593,NewCUUsingWizardProposal: Not properly disposed SWT resource,jukzi,51790620,Jörg Kubitz,,OPEN,2024-08-20T09:55:05Z,2024-08-20T09:55:05Z,"```
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:573)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:306)
	at org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:229)
	at org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:56)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:92)
	at org.eclipse.jface.resource.LazyResourceManager.create(LazyResourceManager.java:95)
	at org.eclipse.jface.resource.ResourceManager.createImageWithDefault(ResourceManager.java:192)
	at org.eclipse.jface.resource.ImageRegistry.get(ImageRegistry.java:208)
	at org.eclipse.jdt.internal.ui.JavaPluginImages.get(JavaPluginImages.java:647)
	at org.eclipse.jdt.internal.ui.text.correction.proposals.NewCUUsingWizardProposal.<init>(NewCUUsingWizardProposal.java:199)
	at org.eclipse.jdt.internal.ui.text.correction.proposals.NewCUUsingWizardProposal.<init>(NewCUUsingWizardProposal.java:118)
	at org.eclipse.jdt.internal.ui.text.correction.UnresolvedElementsSubProcessor.addNewTypeProposalsInteractiveInnerLoop(UnresolvedElementsSubProcessor.java:300)
	at org.eclipse.jdt.internal.ui.text.correction.UnresolvedElementsBaseSubProcessor.addNewTypeProposalsInteractive(UnresolvedElementsBaseSubProcessor.java:1248)
	at org.eclipse.jdt.internal.ui.text.correction.UnresolvedElementsBaseSubProcessor.collectNewTypeProposals(UnresolvedElementsBaseSubProcessor.java:1202)
	at org.eclipse.jdt.internal.ui.text.correction.UnresolvedElementsBaseSubProcessor.collectTypeProposals(UnresolvedElementsBaseSubProcessor.java:788)
	at org.eclipse.jdt.internal.ui.text.correction.UnresolvedElementsSubProcessor.getTypeProposals(UnresolvedElementsSubProcessor.java:144)
	at org.eclipse.jdt.internal.ui.text.correction.QuickFixProcessor.process(QuickFixProcessor.java:455)
	at org.eclipse.jdt.internal.ui.text.correction.QuickFixProcessor.getCorrections(QuickFixProcessor.java:378)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionCollector.safeRun(JavaCorrectionProcessor.java:381)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.run(JavaCorrectionProcessor.java:341)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.process(JavaCorrectionProcessor.java:336)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectCorrections(JavaCorrectionProcessor.java:465)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:115)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.computeCompletionProposals(ProblemHover.java:89)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.<init>(ProblemHover.java:74)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover.createAnnotationInfo(ProblemHover.java:178)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover.getHoverInfo2(AbstractAnnotationHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

```
eclipse.buildId=4.33.0.I20240819-1800
java.version=21.0.2","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1593/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1594,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1594,eclipse.jdt.ui,2476121458,1594,Java editor syntax highlighting via extension point,BoykoAlex,6433390,Alex Boyko,,CLOSED,2024-08-20T16:57:41Z,2024-12-09T15:35:07Z,"Language servers (LSP4E project) could provide semantic tokens with highlight information for Java files. These semantic tokens are primarily for languages embedded into Java. For example Spring Java code can have embedded:
- [SPEL expressions](https://docs.spring.io/spring-framework/docs/3.0.x/reference/expressions.html)
- [JPQL](https://docs.oracle.com/javaee/6/tutorial/doc/bnbtl.html)
- [HQL](https://docs.jboss.org/hibernate/core/3.3/reference/en-US/html/queryhql.html)
- SQL
- [Cron expressions](https://spring.io/blog/2020/11/10/new-in-spring-5-3-improved-cron-expressions)

These embedded languages syntax fits nicely into LSP semantic tokens feature.

Bringing in semantic highlighting for these embedded languages into JDT Java editor is a challenge because syntax highlighting in Java editor does not allow for contributions.

(cc: @martinlippert)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1594/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1594,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6JKrTf,eclipse.jdt.ui,2301277407,1594,NA,martinlippert,107705,Martin Lippert,mlippert@gmail.com,NA,2024-08-21T06:57:10Z,2024-08-21T06:57:10Z,"We implemented the necessary logic for the highlighting via semantic tokens and LSP already inside of the language server that we are building for Spring and have this feature working nicely in VSCode (e.g. https://x.com/springtools4/status/1816014400379032005), now trying to bring this to Eclipse as well. It already works out-of-the-box when using the generic editor for Java source files, but since everybody is using the real JDT UI Java source editor in Eclipse, we would love to bring this to JDT UI as well - if possible.

@BoykoAlex submitted an initial PR for this (https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1595), which is more a PoC than a ready-to-merge contribution, but would be awesome to hear from you whether the team would be interested in pushing this forward. Since it involves adding new public API to JDT UI, we would love to hear your thoughts about this.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6JKrTf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1594,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6JLp2d,eclipse.jdt.ui,2301533597,1594,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-08-21T09:00:23Z,2024-08-21T09:00:23Z,"Haven't looked in the code yet, but the idea sounds great.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6JLp2d/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1594,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6JVger,eclipse.jdt.ui,2304116651,1594,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-08-22T08:46:39Z,2024-08-22T08:46:39Z,"As I understand, this is an enhancement that will add highlighting for **embedded languages** in the Java editor via an extension point. Sounds good!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6JVger/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1594,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6JWjOe,eclipse.jdt.ui,2304390046,1594,NA,martinlippert,107705,Martin Lippert,mlippert@gmail.com,NA,2024-08-22T11:04:21Z,2024-08-22T11:04:21Z,"Sounds like the is some consensus that this would be a good thing to implement. What are the next steps? I think we (specifically @BoykoAlex ) would need some advice on the next steps, since the PR is more meant as a draft to discuss than the final implementation (as mentioned on the PR). So would someone be willing to jump on the PR and provide overall feedback on the questions at hand? I am sure @BoykoAlex would also be around for a screenshare call to get some advice, provide some overview of the PR, etc.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6JWjOe/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1594,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6JWjdV,eclipse.jdt.ui,2304390997,1594,NA,martinlippert,107705,Martin Lippert,mlippert@gmail.com,NA,2024-08-22T11:04:55Z,2024-08-22T11:04:55Z,"(and thanks to @noopur2507 , @jukzi , @iloveeclipse for your initial reactions here, much appreciated)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6JWjdV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1594,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Nixuy,eclipse.jdt.ui,2374704050,1594,NA,BoykoAlex,6433390,Alex Boyko,,NA,2024-09-25T17:18:33Z,2024-09-25T17:18:33Z,"Any feedback on the attached PR anyone?
I suppose my main questions are:
1. Any wished for the extension point schema?
2. Ideas for slow/async semantic tokens computation integration into the existing Java editor `SemanticHighlightingReconciler`?

Currently the PR computes contributed semantic tokens synchronously which is an obvious no go... Wonder if for example if can trigger a semantic highlight reconcile once async semantic tokens are computed? We'd need to to re-compute the sync tokens and add the already computed lazy ones on top, right? Not familiar with this code so would appreciate some guidance :-)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Nixuy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1594,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6N4Jax,eclipse.jdt.ui,2380306097,1594,NA,BoykoAlex,6433390,Alex Boyko,,NA,2024-09-28T00:11:31Z,2024-09-28T00:11:31Z,The async approach resulted in some ugly flickering. The sync solution worked much better. I'd go with the sync solution for now. Please review the PR #1683,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6N4Jax/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1598,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1598,eclipse.jdt.ui,2478194171,1598,Logic error in `LocalCorrectionsSubProcessor.addServiceProviderProposal` causes `ClassCastException` when AST is broken,datho7561,22376627,David Thompson,davthomp@redhat.com,CLOSED,2024-08-21T14:31:07Z,2024-09-06T16:37:02Z,"See https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/1c68e46548bf6e38f541275ac6197bb4011f56e4/org.eclipse.jdt.ui/ui/org/eclipse/jdt/internal/ui/text/correction/LocalCorrectionsSubProcessor.java#L2653

In order to prevent a `ClassCastException` when the child is a `Name` and the parent is **not** a `ProvidesDirective`, this should be `||` instead of `&&`.

There is likely no way to reproduce this in Eclipse, since if the error is reported correctly the child should always be a `Name` and the parent should always be a `ProvidesDirective`.

I was able to find this bug since I was using https://github.com/eclipse-jdtls/eclipse-jdt-core-incubator, which still has some bugs in the error and AST translation that we are working on fixing.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1598/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1604,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1604,eclipse.jdt.ui,2481664900,1604,"[23] search filter dialog should show ""In Imports"" option for module searches",stephan-herrmann,24587985,Stephan Herrmann,,CLOSED,2024-08-22T20:33:56Z,2024-08-22T21:12:13Z,"Since https://github.com/eclipse-jdt/eclipse.jdt.core/issues/2852 search results can contain module import references. These are, however, not shown in the search UI because we cannot enable option ""In Imports"" in module search.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1604/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1608,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1608,eclipse.jdt.ui,2482422254,1608,Random RenamePackageTests failure in I-build,noopur2507,8749449,Noopur Gupta,,OPEN,2024-08-23T06:36:40Z,2024-08-23T06:36:40Z,"I20240822-0100
org.eclipse.jdt.ui.tests.refactoring.RenamePackageTests
testImportFromMultiRoots5

The above test failed on gtk3-java17.

```
invalid update in file ATest.java [in q [in srcTest [in RenamePack2]]] package q class ATest A t A t2 expected:<package q; [import p.p.A; ]public class ATest {...> but was:<package q; []public class ATest {...>

org.junit.ComparisonFailure: invalid update in file ATest.java [in q [in srcTest [in RenamePack2]]]
package q
class ATest
A t
A t2 expected:<package q;

[import p.p.A;

]public class ATest {...> but was:<package q;

[]public class ATest {...>
at org.junit.Assert.assertEquals(Assert.java:117)
at org.eclipse.jdt.ui.tests.refactoring.GenericRefactoringTest.assertEqualLines(GenericRefactoringTest.java:648)
at org.eclipse.jdt.ui.tests.refactoring.RenamePackageTests.helperMultiProjects(RenamePackageTests.java:488)
at org.eclipse.jdt.ui.tests.refactoring.RenamePackageTests.testImportFromMultiRoots5(RenamePackageTests.java:1387)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1608/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1609,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1609,eclipse.jdt.ui,2485144809,1609,Eclipse default formatter profile and jdt,carstenartur,3164220,Carsten Hammer,,CLOSED,2024-08-25T09:28:09Z,2024-09-15T12:12:31Z,"What is the reason behind the eclipse default formatter rule for eclipse is violating jdt formatting standards? Could that be changed?

![image](https://github.com/user-attachments/assets/8ed5a8de-7d4d-4ced-8388-06a78f315352)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1609/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1609,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6LZQMQ,eclipse.jdt.ui,2338652944,1609,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-09-09T17:16:02Z,2024-09-09T17:16:02Z,"I think this rule is very specific to JDT/UI and should probably not be imposed on everybody using this built-in profile.

Do you see other sub-projects following this rule?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6LZQMQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1609,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6LZ__0,eclipse.jdt.ui,2338848756,1609,NA,carstenartur,3164220,Carsten Hammer,,NA,2024-09-09T18:51:06Z,2024-09-09T18:51:06Z,Nice would be imho if there was a profile for jdt contributions - in case it is necessary even two or more but I wasn't aware that jdt is really using different standards depending on the specific project.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6LZ__0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1610,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1610,eclipse.jdt.ui,2485196217,1610,"Update to M3 wrecked JUnit Container / Unable to compute bundle location for 'org.hamcrest' with range [2.2.0,2.3.0)",laeubi,1331477,Christoph Läubrich,,CLOSED,2024-08-25T09:59:54Z,2024-08-26T19:00:07Z,"I updated my IDE (from `Eclipse for RCP and RAP Developers	4.33.0.20240711-1200` >  `Eclipse for RCP and RAP Developers	4.33.0.20240822-0820`) as now 

```
Version: 2024-09 M3 (4.33.0 M3)
Build id: 20240822-1019
```

and now one of my projects is wrecked with

```
java.lang.IllegalStateException: Unable to compute bundle location for 'org.hamcrest' with range [2.2.0,2.3.0)
	at org.eclipse.jdt.internal.junit.buildpath.BuildPathSupport$JUnitPluginDescription.getLibraryEntry(BuildPathSupport.java:236)
	at org.eclipse.jdt.internal.junit.buildpath.BuildPathSupport.getHamcrestLibraryEntry(BuildPathSupport.java:435)
	at org.eclipse.jdt.internal.junit.buildpath.JUnitContainerInitializer.getNewContainer(JUnitContainerInitializer.java:147)
	at org.eclipse.jdt.internal.junit.buildpath.JUnitContainerInitializer.initialize(JUnitContainerInitializer.java:108)
	at org.eclipse.jdt.internal.core.JavaModelManager.initializeContainer(JavaModelManager.java:3285)
	at org.eclipse.jdt.internal.core.JavaModelManager.getClasspathContainer(JavaModelManager.java:2212)
	at org.eclipse.jdt.core.JavaCore.getClasspathContainer(JavaCore.java:4008)
	at org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:3150)
	at org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:3314)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:2428)
	at org.eclipse.jdt.internal.core.JavaProject.computePackageFragmentRoots(JavaProject.java:799)
	at org.eclipse.jdt.internal.core.JavaProject.computePackageFragmentRoots(JavaProject.java:1074)
	at org.eclipse.jdt.internal.core.JavaProject.computePackageFragmentRoots(JavaProject.java:1020)
	at org.eclipse.jdt.internal.core.JavaProject.getAllPackageFragmentRoots(JavaProject.java:1797)
	at org.eclipse.jdt.internal.core.JavaProjectElementInfo.getProjectCache(JavaProjectElementInfo.java:225)
	at org.eclipse.jdt.internal.core.JavaProjectElementInfo.newNameLookup(JavaProjectElementInfo.java:313)
	at org.eclipse.jdt.internal.core.JavaProject.newNameLookup(JavaProject.java:2798)
	at org.eclipse.jdt.internal.core.SearchableEnvironment.<init>(SearchableEnvironment.java:107)
	at org.eclipse.jdt.internal.core.SearchableEnvironment.<init>(SearchableEnvironment.java:148)
	at org.eclipse.jdt.internal.core.CancelableNameEnvironment.<init>(CancelableNameEnvironment.java:32)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:253)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:346)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:186)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:92)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:739)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:804)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1303)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.initialReconcile(JavaReconcilingStrategy.java:189)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.initialReconcile(CompositeReconcilingStrategy.java:125)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.initialReconcile(JavaCompositeReconcilingStrategy.java:139)
	at org.eclipse.jface.text.reconciler.MonoReconciler.initialProcess(MonoReconciler.java:100)
	at org.eclipse.jdt.internal.ui.text.JavaReconciler.initialProcess(JavaReconciler.java:421)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:177)

```

I can't even expand the project anymore because it results in 

```
java.lang.NullPointerException: Cannot invoke ""org.eclipse.jdt.core.IClasspathEntry.getEntryKind()"" because ""entry"" is null
	at org.eclipse.jdt.internal.ui.packageview.ClassPathContainer.getChildren(ClassPathContainer.java:190)
	at org.eclipse.jdt.internal.ui.navigator.NonEssentialEmptyLibraryContainerFilter.doSelect(NonEssentialEmptyLibraryContainerFilter.java:36)
	at org.eclipse.jdt.internal.ui.navigator.NonEssentialElementsFilter.select(NonEssentialElementsFilter.java:75)
	at org.eclipse.jface.viewers.ViewerFilter.filter(ViewerFilter.java:62)
	at org.eclipse.jface.viewers.StructuredViewer.getFilteredChildren(StructuredViewer.java:855)
	at org.eclipse.jface.viewers.AbstractTreeViewer.getSortedChildren(AbstractTreeViewer.java:673)
	at org.eclipse.jface.viewers.AbstractTreeViewer.createChildren(AbstractTreeViewer.java:866)
	at org.eclipse.jface.viewers.TreeViewer.createChildren(TreeViewer.java:611)
	at org.eclipse.jface.viewers.AbstractTreeViewer.createChildren(AbstractTreeViewer.java:819)
	at org.eclipse.jface.viewers.AbstractTreeViewer.handleTreeExpand(AbstractTreeViewer.java:1603)
	at org.eclipse.jface.viewers.TreeViewer.handleTreeExpand(TreeViewer.java:904)
	at org.eclipse.jface.viewers.AbstractTreeViewer$3.treeExpanded(AbstractTreeViewer.java:1615)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:149)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:91)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:5855)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1617)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1643)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1626)
	at org.eclipse.swt.widgets.Tree.gtk_test_expand_row(Tree.java:2620)
	at org.eclipse.swt.widgets.Widget.windowProc(Widget.java:2624)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:6168)
	at org.eclipse.swt.internal.gtk3.GTK3.gtk_main_do_event(Native Method)
	at org.eclipse.swt.widgets.Display.eventProc(Display.java:1598)
	at org.eclipse.swt.internal.gtk3.GTK3.gtk_main_iteration_do(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4514)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1151)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:639)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:546)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:668)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:605)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1481)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1454)
```


The project also has an error marker:

```
Description	Resource	Path	Location	Type
Invalid classpath container: 'JUnit 4' in project 'xxxx'
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1610/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1610,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6JnWU7,eclipse.jdt.ui,2308793659,1610,NA,laeubi,1331477,Christoph Läubrich,,NA,2024-08-25T10:06:14Z,2024-08-25T10:06:14Z,"As a workaround I edited the classpath settings directly in the filesystem

![grafik](https://github.com/user-attachments/assets/bc1ada38-5b6c-48aa-899e-edeb4b1a6f92)

so I can use the project again.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6JnWU7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1610,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6JnWU8,eclipse.jdt.ui,2308793660,1610,NA,laeubi,1331477,Christoph Läubrich,,NA,2024-08-25T10:11:38Z,2024-08-25T10:11:38Z,"These are the bundles that show up in my install

![grafik](https://github.com/user-attachments/assets/16e9e5af-d6ec-46b7-a7e5-ed9f5309fd6c)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6JnWU8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1610,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6JnWU9,eclipse.jdt.ui,2308793661,1610,NA,laeubi,1331477,Christoph Läubrich,,NA,2024-08-25T10:15:33Z,2024-08-25T10:15:33Z,"JUnit 5 is also party wrecked now as it pulls in an almost empty hamcrest-core leading to compile errors:

![grafik](https://github.com/user-attachments/assets/f789c368-aaf3-4bbf-a414-64ed76a4cbf6)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6JnWU9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1610,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6JnWU_,eclipse.jdt.ui,2308793663,1610,NA,HannesWell,44067969,Hannes Wellmann,,NA,2024-08-25T10:35:03Z,2024-08-25T10:35:03Z,"> As a workaround I edited the classpath settings directly in the filesystem
> 
I get the same error but even for a JUnit-4 container:
`Invalid classpath container: 'JUnit 4' in project 'org.eclipse.xtext.xbase.lib.tests'`

Using a `Eclipse IDE for Eclipse Committers` 
```
Version: 2024-09 M3 (4.33.0 M3)
Build id: 20240822-1019
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6JnWU_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1610,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6JnWVB,eclipse.jdt.ui,2308793665,1610,NA,laeubi,1331477,Christoph Läubrich,,NA,2024-08-25T10:38:33Z,2024-08-25T10:38:33Z,"> I get the same error but even for a JUnit-4 container:

As mentioned the `JUnit 4` breaks completely, `JUnit 5` breaks if you use any Hamcrest class, the while Eclipse SDK workspace is now broken as well because of `org.eclipse.osgi` what is a dependency of almost everything:

![grafik](https://github.com/user-attachments/assets/88dbb9d1-2d84-41da-8a5d-00bf180e43c1)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6JnWVB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1610,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6JnWZ6,eclipse.jdt.ui,2308793978,1610,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-08-25T11:38:19Z,2024-08-25T11:38:19Z,"Moved to JDT/UI, where the junit containers are implemented.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6JnWZ6/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1610,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6JnXs0,eclipse.jdt.ui,2308799284,1610,NA,HannesWell,44067969,Hannes Wellmann,,NA,2024-08-25T11:51:33Z,2024-08-25T11:51:33Z,"As suggested by @laeubi I verified that this can be fixed by widening the version range in `BuildPathSupport.HAMCREST_PLUGIN` and `BuildPathSupport.HAMCREST_CORE_PLUGIN`.
According to the release notes it looks like https://github.com/hamcrest/JavaHamcrest/releases/tag/v3.0 only changed the class-file version corresponding to Java-1.8, so it should be a drop-in replacement since JDT only support Java-1.8 now (luckily).
Adapting the version range seems therefore sufficient.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6JnXs0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1610,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Jn6Hq,eclipse.jdt.ui,2308940266,1610,NA,cdietrich,238736,Christian Dietrich,christian.dietrich.opensource@gmail.com,NA,2024-08-25T17:52:47Z,2024-08-25T17:52:47Z,"see the same
https://github.com/eclipse/xtext/issues/3178","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Jn6Hq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1610,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Jp728,eclipse.jdt.ui,2309471676,1610,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-08-26T06:56:20Z,2024-08-26T06:56:20Z,"i get similar: ""Invalid classpath container: 'JUnit 4' in project 'org.eclipse.osgi"" ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Jp728/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1613,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1613,eclipse.jdt.ui,2488469514,1613,JavaElementHyperlinkDetector logs NotPresentException,jukzi,51790620,Jörg Kubitz,,OPEN,2024-08-27T07:00:48Z,2024-08-27T07:00:48Z,"Happened during some refactoring renaming the missing element

it should fail silently.
```
Java Model Exception: Error in Java Model (code 969): childAndPropertyLock [in EclipsePreferences [in [Working copy] EclipsePreferences.java [in org.eclipse.core.internal.preferences [in src [in org.eclipse.equinox.preferences]]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:562)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:605)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:308)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:294)
	at org.eclipse.jdt.internal.core.SourceField.getTypeSignature(SourceField.java:145)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaElementHyperlinkDeclaredTypeDetector.getTypeSignature(JavaElementHyperlinkDeclaredTypeDetector.java:76)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaElementHyperlinkDeclaredTypeDetector.addHyperlinks(JavaElementHyperlinkDeclaredTypeDetector.java:46)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaElementHyperlinkDetector.detectHyperlinksCached(JavaElementHyperlinkDetector.java:140)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaElementHyperlinkDetector.lambda$0(JavaElementHyperlinkDetector.java:84)
	at org.eclipse.jdt.internal.core.JavaModelManager.cacheZipFiles(JavaModelManager.java:5770)
	at org.eclipse.jdt.internal.core.JavaModelManager.callReadOnly(JavaModelManager.java:5759)
	at org.eclipse.jdt.core.JavaCore.callReadOnly(JavaCore.java:6188)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaElementHyperlinkDetector.detectHyperlinks(JavaElementHyperlinkDetector.java:84)
	at org.eclipse.ui.texteditor.HyperlinkDetectorRegistry$HyperlinkDetectorDelegate.detectHyperlinks(HyperlinkDetectorRegistry.java:81)
	at org.eclipse.jface.text.hyperlink.HyperlinkManager.findHyperlinks(HyperlinkManager.java:289)
	at org.eclipse.jface.text.hyperlink.HyperlinkManager.findHyperlinks(HyperlinkManager.java:262)
	at org.eclipse.jface.text.hyperlink.HyperlinkManager.mouseMove(HyperlinkManager.java:457)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:229)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:91)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4326)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1174)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4124)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3712)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1151)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:639)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:546)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:668)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:605)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1481)
```
 eclipse.buildId=4.33.0.I20240825-1800
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1613/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1615,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1615,eclipse.jdt.ui,2488711909,1615,[23] Folding a markdown region hides the first line of subsequent Java code,stephan-herrmann,24587985,Stephan Herrmann,,OPEN,2024-08-27T08:58:40Z,2024-10-25T21:36:47Z,"Given 
```
	///
	/// This is the comment of m()
	///
	void m() {
		System.out.println(""m"");
	}
```
when you fold the markdown comment in the editor, it looks like this:

![image](https://github.com/user-attachments/assets/f95eb02c-951d-45de-980c-ebfa1465a55f)

@jarthana looks like your latest change in #1549 only moved the problem :)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1615/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1615,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6LL42A,eclipse.jdt.ui,2335149440,1615,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-09-07T10:47:33Z,2024-09-07T10:47:33Z,"@jarthana  have you seen this?

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6LL42A/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1615,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6LTjXM,eclipse.jdt.ui,2337158604,1615,NA,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,NA,2024-09-09T05:28:56Z,2024-09-09T05:28:56Z,"> @jarthana have you seen this?

Thanks, will take a look.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6LTjXM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1615,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6LT1xV,eclipse.jdt.ui,2337234005,1615,NA,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,NA,2024-09-09T06:28:59Z,2024-09-09T06:28:59Z,"Actually, I don't see fold/unfold option at all for markdown comments. Sigh! Let me see what's going on.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6LT1xV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1615,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6LUOUA,eclipse.jdt.ui,2337334528,1615,NA,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,NA,2024-09-09T07:26:40Z,2024-09-09T07:26:40Z,"> Actually, I don't see fold/unfold option at all for markdown comments. Sigh! Let me see what's going on.

This turned out to be the result of making the feature standard feature. Without that patch, the markdown folds/unfolds well. 

Anyway, I am unable to see the problem. @stephan-herrmann Can you please check now?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6LUOUA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1615,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6LiABI,eclipse.jdt.ui,2340945992,1615,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-09-10T14:12:34Z,2024-09-10T14:12:34Z,"> This turned out to be the result of making the feature standard feature. Without that patch, the markdown folds/unfolds well.

Wow, for preview features, `isSupported()` only checks that flag, ignoring the compliance / source levels. As a standard feature we check compliance, but `org.eclipse.jdt.ui.text.folding.DefaultJavaFoldingStructureProvider.fSharedScanner` uses `JavaCore`'s default compliance level, ignoring what might be configured per project. 

Sharing a scanner seems to be incompatible with version-dependent scanning :-(","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6LiABI/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1615,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6LiKvJ,eclipse.jdt.ui,2340989897,1615,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-09-10T14:25:40Z,2024-09-10T14:25:40Z,"> Anyway, I am unable to see the problem. @stephan-herrmann Can you please check now?

When setting the workspace default compliance to 23 I can still see the same problem as before.

@jarthana Here's the difference: I normally use unix line-ends. When I change this to windows line-ends, folding is correct. Conversely, you should be able to see the bug when switching to unix line-ends. 

Does this help to find some off-by-one bug?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6LiKvJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1615,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6LoRpT,eclipse.jdt.ui,2342591059,1615,NA,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,NA,2024-09-11T04:22:04Z,2024-09-11T04:22:04Z,"> Wow, for preview features, `isSupported()` only checks that flag, ignoring the compliance / source levels. As a standard feature we check compliance, but `org.eclipse.jdt.ui.text.folding.DefaultJavaFoldingStructureProvider.fSharedScanner` uses `JavaCore`'s default compliance level, ignoring what might be configured per project.

Yeah, that is written based on the assumption that preview can only be enabled when the compliance is the highest. That works within the compiler but as it turns out, not all clients follow that rule.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6LoRpT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1615,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Lpfqj,eclipse.jdt.ui,2342910627,1615,NA,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,NA,2024-09-11T07:49:55Z,2024-09-11T07:49:55Z,"> > Anyway, I am unable to see the problem. @stephan-herrmann Can you please check now?
> 
> When setting the workspace default compliance to 23 I can still see the same problem as before.
> 
> @jarthana Here's the difference: I normally use unix line-ends. When I change this to windows line-ends, folding is correct. Conversely, you should be able to see the bug when switching to unix line-ends.
> 
> Does this help to find some off-by-one bug?

Reproduced. Thanks for the tip!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Lpfqj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1615,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6RXuSk,eclipse.jdt.ui,2438915236,1615,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-10-25T21:36:32Z,2024-10-25T21:36:32Z,@jarthana do you need help here?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6RXuSk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1617,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1617,eclipse.jdt.ui,2490459269,1617,Adapt ConvertForLoopOperation to work with Javac generated AST,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-08-27T22:12:06Z,2024-09-05T00:42:45Z,"From: https://github.com/eclipse-jdtls/eclipse-jdt-core-incubator/issues/748

ConvertForLoopOperation uses the type of .size() method on collections to determine the type. While it's fine with JDT, Javac does not consider the type argument in the .size() method, simply because the method is always the same, so it doesn't make sense to create such separation.
The ConvertForLoopOperation could instead of this untyped size method check the type of the expression on which size() is called, and check a type method such as add to find the actual element type.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1617/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1619,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1619,eclipse.jdt.ui,2491773639,1619,[23] Merge master into BETA_JAVA23 branch after RC1,noopur2507,8749449,Noopur Gupta,,CLOSED,2024-08-28T11:05:54Z,2024-08-28T11:08:21Z,Merge master into BETA_JAVA23 branch after RC1.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1619/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1619,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6J_FmG,eclipse.jdt.ui,2315016582,1619,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-08-28T11:08:21Z,2024-08-28T11:08:21Z,Done with https://github.com/eclipse-jdt/eclipse.jdt.ui/commit/cb65fe6ddb7569c10c8217b0b3f007dd2a134c85.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6J_FmG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1620,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1620,eclipse.jdt.ui,2491904250,1620,Move DefaultSpellingEngine for text to eclipse.platform.ui,DenisUngemach,108277444,Denis Ungemach,,OPEN,2024-08-28T12:09:47Z,2024-08-28T12:09:47Z,"Hello, 

i have opened here an issue: https://github.com/eclipse-platform/eclipse.platform.ui/issues/2227

Is it ok for you to move DefaultSpellingEngine for text to eclipse.platform.ui?
I also want to update the Spelling in JDT so this stays consistent for the content type: java.

Best regards,
Denis Ungemach","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1620/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1622,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1622,eclipse.jdt.ui,2495558829,1622,"Don't cross out a method, field, or type that is deprecated if current source level is below specified since threshold",jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-08-29T20:54:59Z,2024-09-04T20:11:33Z,"For the following example:

```
package tests;

public class URL2 {
	
	@Deprecated(since = ""20"")
	public URL2(String a) {
		
	}

}
```

```
package tests;

public class TestURL {
	
	public void foo() {
		URL2 s = new URL2(""a.b"");
	}

}
```

The use of URL2 constructor should not be crossed out in the editor if the Java source level for the project is set below 20.

There is a jdt.core issue open so that any warnings/errors for deprecated methods will also not be shown for the usage.  See: https://github.com/eclipse-jdt/eclipse.jdt.core/issues/2873","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1622/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1624,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1624,eclipse.jdt.ui,2502320218,1624,"""record"" is highlighted as a keyword when used as a variable name",jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,CLOSED,2024-09-03T09:03:21Z,2024-09-12T06:55:47Z,"Here's a sample code:

```
        RforRecord rec = new RforRecord(x);
        if (record instanceof RforRecord(int y)) {
            System.out.println(""Yay"");
        }
```
Note that the variable ""record"" is miss-spelt and therefore not defined. In this case, the editor considers ""record"" as a keyword and highlights accordingly, as below:

![image](https://github.com/user-attachments/assets/2ff7227e-4634-4521-b0c9-0265ef522302)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1624/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1624,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6LzD1s,eclipse.jdt.ui,2345418092,1624,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-09-12T06:55:46Z,2024-09-12T06:55:46Z,"Debugged and checked that it is not getting highlighted by incorrectly being identified as a record declaration. Verified by changing the color of restricted keywords in Preferences, which doesn't change the color of ""record"" at the error location but changes it at the record declaration site. 

The behavior is similar to having any other (mis-spelt) keyword at this error location e.g. ""public"". 

Hence, closing the issue. Please reopen if it is causing any major inconvenience.

<img width=""594"" alt=""Screenshot 2024-09-12 at 12 10 07 PM"" src=""https://github.com/user-attachments/assets/067a64ea-60b8-4090-95d7-082768e7f021"">","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6LzD1s/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1628,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1628,eclipse.jdt.ui,2508566102,1628,If/Else to switch cleanup removes non-NLS markers,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-09-05T19:30:46Z,2024-09-06T19:01:45Z,"For the following code sequence:

```
package tests;

public class TestIfElse {
	
	public int foo(String x) {
		int result = -1;
		if (x.equals(""abc"")) { //$NON-NLS-1$
			result = 1;
		} else if (x.equals(""def"") || x.equals(""ghi"")) { //$NON-NLS-1$ //$NON-NLS-2$
			result = 2;
		} else if (x.equals(""jkl"")) { //$NON-NLS-1$
			result = 3;
		} else {
			result = 4;
		}
		return result;
	}

}
```

Using the if/else if/else to switch cleanup results in:

```
package tests;

public class TestIfElse {

	public int foo(String x) {
		int result = -1;
		switch (x) {
		case ""abc"":
			result = 1;
			break;
		case ""def"":
		case ""ghi"":
			result = 2;
			break;
		case ""jkl"":
			result = 3;
			break;
		default:
			result = 4;
			break;
		}
		return result;
	}

}
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1628/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1630,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1630,eclipse.jdt.ui,2510124488,1630,"ui suggests (completes) methods that are undefined (JDK, since>BREE)",jukzi,51790620,Jörg Kubitz,,OPEN,2024-09-06T10:32:27Z,2024-09-06T10:32:27Z,"Example in BREE17 project with JDK 21:
`String.splitWith|` completes to java.lang.String.splitWithDelimiters(String, int) marked `@since   21`
![image](https://github.com/user-attachments/assets/70dfa663-7cef-46ee-ba13-8da238a4a68d)

that does not feel consistent
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1630/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1632,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1632,eclipse.jdt.ui,2515041747,1632,[feature request] Refactor or quick fix to simply return boolean condition instead of a true or false after if,NolwennD,32613839,,,CLOSED,2024-09-09T22:33:12Z,2024-09-27T21:25:12Z,"Hello,

It is possible to add this kind of refactor to return directly a boolean instead of a condition then return a boolean ?

```java
private boolean isStrictlyPositive1(int i) {
    if(i > 0) {
      return true;
    }
    return false;
  }

//For this case Eclipse is able to automatically change to isStrictlyPositive1
private boolean isStrictlyPositive2(int i) {
    if(i > 0) {
      return true;
    } else {
      return false;
    }
  }
```

Will become

```java
private boolean isStrictlyPositive(int i) {
    return i > 0;
  }
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1632/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1632,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6LlJ9j,eclipse.jdt.ui,2341773155,1632,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-09-10T18:51:55Z,2024-09-10T18:51:55Z,There isn't a cleanup like this in place now but it seems very reasonable to implement.  I'll take a look.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6LlJ9j/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1634,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1634,eclipse.jdt.ui,2516783046,1634,[23] FoldingStructureComputationContext should respect the project compliance level for parsing,stephan-herrmann,24587985,Stephan Herrmann,,CLOSED,2024-09-10T15:26:44Z,2024-09-11T22:36:09Z,"In https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1615#issuecomment-2340945992 we found that folding of markdown comments unduly depends on the per-workspace java compliance level.

In projects with compliance deviating from the workspace default, a scanner should be more explicitly configured.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1634/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1634,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6LwykB,eclipse.jdt.ui,2344823041,1634,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-09-11T22:36:08Z,2024-09-11T22:36:08Z,Resolved via https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1635,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6LwykB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1638,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1638,eclipse.jdt.ui,2519618236,1638,Save Actions Conflict and Cause Logic Change,IanKrL,132458829,,,CLOSED,2024-09-11T11:01:58Z,2024-09-12T01:45:31Z,"Window->Preferences->Java->Editor->Save Actions
Select ""Perform the selected actions on save"" and ""Additional actions""
Select Configure->
->->Code Style->Control statements->Reduce indentation when possible
->->Unnecessary Code->Unnecessary Code->Remove useless return

These two options being enabled at the same time interact to cause logic changes. This:
```
public class Cleanup {
    public void foo(boolean arg) {
        if (arg) {
            return;
        } else {
            System.out.println(""Hello World"");
        }
    }
}
```
gets cleaned up to this:
```
public class Cleanup {
    public void foo(boolean arg) {
        if (arg) {
        }
        System.out.println(""Hello World"");
    }
}
```
Now the output is seen regardless of the parameter value. This is not the case when either is selected independently.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1638/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1638,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Lr5K2,eclipse.jdt.ui,2343539382,1638,NA,IanKrL,132458829,,,NA,2024-09-11T11:09:59Z,2024-09-11T11:09:59Z,"A very similar problem can occur when both the ""Reduce indentation"" and ""Remove useless continue"" options are selected:
```
public class Cleanup {
    public void foo(boolean arg) {
        while (arg) {
            arg = bar();
            if (arg) {
                continue;
            } else {
                System.out.println(""Hello World"");
            }
        }
    }

    private boolean bar() {
        return true;
    }
}
```
Becomes:
```
public class Cleanup {
    public void foo(boolean arg) {
        while (arg) {
            arg = bar();
            if (arg) {
            }
            System.out.println(""Hello World"");
        }
    }

    private boolean bar() {
        return true;
    }
}
```
I suspect the underlying cause is similar.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Lr5K2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1638,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Lvpg_,eclipse.jdt.ui,2344523839,1638,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-09-11T19:19:34Z,2024-09-11T19:19:34Z,Thanks @IanKrL for reporting.  The cleanups don't see one another as they are not recursive.  Some special guarding is needed to handle this.  I'll look at it.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Lvpg_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1639,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1639,eclipse.jdt.ui,2520396271,1639,"[23] many errors, some failure in AutomatedTestSuite with latest from JDT/Core",stephan-herrmann,24587985,Stephan Herrmann,,CLOSED,2024-09-11T17:57:44Z,2024-09-14T22:00:12Z,After seeing 478 failures in https://ci.eclipse.org/releng/job/YPBuilds/job/ep433Y-unit-cen64-gtk3-java23/lastCompletedBuild/testReport/ I succeeded to reproduce 415 such locally with latest from BETA_JAVA23 of relevant JDT projects.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1639/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1639,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6LvJNG,eclipse.jdt.ui,2344391494,1639,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-09-11T18:29:38Z,2024-09-11T18:29:38Z,Those are Heisenbugs: they reliably fail except when run in debug mode :(,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6LvJNG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1639,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6LvTlG,eclipse.jdt.ui,2344433990,1639,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-09-11T18:51:05Z,2024-09-11T18:51:05Z,"> Those are Heisenbugs: they reliably fail except when run in debug mode :(

Wow, hard-core Heisenbug, no debugger needed to send the bug into hiding: 
* throws NPE:
```
	final int getExtendedEnd(ASTNode node) {
		TargetSourceRangeComputer.SourceRange range= getExtendedRange(node);
		return range.getStartPosition() + range.getLength();
	}
```
* does **not** throw NPE:
```
	final int getExtendedEnd(ASTNode node) {
		TargetSourceRangeComputer.SourceRange range= getExtendedRange(node);
		if (range == null) {
			System.out.println();
		}
		return range.getStartPosition() + range.getLength();
	}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6LvTlG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1639,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6LwLBe,eclipse.jdt.ui,2344661086,1639,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-09-11T20:40:03Z,2024-09-11T20:40:03Z,"The `null` in question is produced by this method in NoCommentSourceRangeComputer:
```java
	public SourceRange computeSourceRange(ASTNode node) {
		return new SourceRange(node.getStartPosition(), node.getLength());
	}
```

For lack of debugability I reduced the test suite to
* AutomatedSuite - no change
  * CoreTestSuite - disable (remove or comment) all except SourceActionTests
     * SourceActionTests - keep only:
         * AddUnimplementedMethodsTest
         * GenerateGettersSettersTest16
         * GenerateDelegateMethodsTest
         * AddUnimplementedConstructorsTest
       * QuickFixTestSuite only the first two classes are needed:
         * QuickFixTest9
         * QuickFixTest1d8

At that point I could disable GC to reduce non-determinism:
```
-Xmx4G
-XX:+UnlockExperimentalVMOptions -XX:+UseEpsilonGC
```

With this setup, the error was fairly stable, but the boarder of what tests could be removed without ""breaking"" the bug was not 100% deterministic.

Finally I added the following harness in ASTRewriteAnalyzer:
```java

	final int getExtendedEnd(ASTNode node) {
		try {
			TargetSourceRangeComputer.SourceRange range= getExtendedRange(node);
			return range.getStartPosition() + range.getLength();
		} catch (NullPointerException npe) {
			System.err.println(extendedSourceRangeComputer);
			npe.printStackTrace();
			System.err.println(extendedSourceRangeComputer.computeSourceRange(node));
			System.err.flush();
			System.exit(-13);
		}
	}
```
See the implementation of `getExtendedRange()`:
```java
	final SourceRange getExtendedRange(ASTNode node) {
		if (this.eventStore.isRangeCopyPlaceholder(node)) {
			return new SourceRange(node.getStartPosition(), node.getLength());
		}
		return this.extendedSourceRangeComputer.computeSourceRange(node);
	}
```
and be told that the field `extendedSourceRangeComputer` is final.

Output is:
```
org.eclipse.jdt.internal.corext.refactoring.util.NoCommentSourceRangeComputer@5be09f8
java.lang.NullPointerException: Cannot invoke ""org.eclipse.jdt.core.dom.rewrite.TargetSourceRangeComputer$SourceRange.getStartPosition()"" because ""range"" is null
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getExtendedEnd(ASTRewriteAnalyzer.java:275)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doVisit(ASTRewriteAnalyzer.java:439)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.voidVisitList(ASTRewriteAnalyzer.java:476)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.voidVisit(ASTRewriteAnalyzer.java:470)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doVisitUnchangedChildren(ASTRewriteAnalyzer.java:483)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ASTRewriteAnalyzer.java:4150)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:246)
[...]
org.eclipse.jdt.core.dom.rewrite.TargetSourceRangeComputer$SourceRange@4348b168
```
This reports the following sequence of events:
* `getExtendedRange(node)` returns `null` which comes from one of
   * `new SourceRange(node.getStartPosition(), node.getLength())` -- funny, huh?
   * `this.extendedSourceRangeComputer.computeSourceRange(node);`
* final field `extendedSourceRangeComputer` holds an instance of `NoCommentSourceRangeComputer` (see implementation at the top of this comment)
* invoking `extendedSourceRangeComputer.computeSourceRange(node)` returns an instance of `TargetSourceRangeComputer$SourceRange`

Ergo: the `null` cannot possibly have happened. Yet NPE was thrown.

Noting furthermore that the errors occur only when running on JDK 23. Noting furthermore that we don't have a lot of alternatives of JDK 23 (only openjdk EA available at this point).

I'll be researching options to disable JIT for some code parts...","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6LwLBe/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1639,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6LwXMu,eclipse.jdt.ui,2344710958,1639,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-09-11T21:11:58Z,2024-09-11T21:11:58Z,"> I'll be researching options to disable JIT for some code parts...

This helps:
```
-XX:CompileCommand=exclude,org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer::getExtendedRange
```

Ergo: JIT bug :eyes:

If others can verify, then we will have to add a BIG ALERT in some top-level documentation (once Java 23 is GA).

I'll play with `p2.inf` for adding these options when installing the java23 patch...","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6LwXMu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1639,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6LxUcu,eclipse.jdt.ui,2344961838,1639,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-09-11T23:28:21Z,2024-09-11T23:28:21Z,Let's wait for next test results from https://ci.eclipse.org/releng/job/YPBuilds/job/ep433Y-unit-cen64-gtk3-java23/lastCompletedBuild/testReport/ (which seems to be the only job that runs tests on Java 23).,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6LxUcu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1639,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6L557z,eclipse.jdt.ui,2347212531,1639,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-09-12T20:49:16Z,2024-09-12T20:49:16Z,"> Let's wait for next test results from https://ci.eclipse.org/releng/job/YPBuilds/job/ep433Y-unit-cen64-gtk3-java23/lastCompletedBuild/testReport/ (which seems to be the only job that runs tests on Java 23).

https://ci.eclipse.org/releng/job/YPBuilds/job/ep433Y-unit-cen64-gtk3-java23/23/ still shows 458 failures / errors. It seems pom.xml isn't used during that build but test.xml. Trying to cover that path, too, via https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1642","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6L557z/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1639,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6MJAz1,eclipse.jdt.ui,2351172853,1639,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-09-14T22:00:12Z,2024-09-14T22:00:12Z,"YES, finally the JIT-bug workaround worked, latest test run https://ci.eclipse.org/releng/job/YPBuilds/job/ep433Y-unit-cen64-gtk3-java23/25/testReport/ is down to 6 failures total, of which only 6 are in JDT (Core).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6MJAz1/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1643,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1643,eclipse.jdt.ui,2524325362,1643,Support for keeping content assist open despite having no matches,trancexpress,24752155,Simeon Andreev,,OPEN,2024-09-13T09:17:51Z,2024-09-13T09:17:51Z,"See: https://github.com/eclipse-platform/eclipse.platform.ui/issues/2260

We want to keep the content assist popup open, despite having no matches. E.g. the user made a typo, we want to keep the content assist open despite of that.

The Java content assist has some problems with that, see: https://github.com/eclipse-platform/eclipse.platform.ui/pull/2261#issuecomment-2343105494","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1643/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1647,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1647,eclipse.jdt.ui,2527621215,1647,[23] Remove beta and disclaimers from copyright notes and UI,noopur2507,8749449,Noopur Gupta,,CLOSED,2024-09-16T06:36:10Z,2024-09-18T04:36:31Z,Remove beta and disclaimers from copyright notes and UI.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1647/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1649,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1649,eclipse.jdt.ui,2527646459,1649,[23] P Build Creation - JDT placeholder,mpalat,4507939,Manoj  N Palat,manoj.palat@in.ibm.com,CLOSED,2024-09-16T06:52:58Z,2024-09-18T08:02:31Z,ref https://github.com/eclipse-platform/eclipse.platform.releng.aggregator/pull/2341 as well,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1649/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1650,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1650,eclipse.jdt.ui,2527727546,1650,[23] Remove reference to Y-builds in pom.xml,noopur2507,8749449,Noopur Gupta,,CLOSED,2024-09-16T07:37:34Z,2024-09-17T09:35:49Z,Remove reference to Y-builds in pom.xml while merging the beta branch to master.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1650/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1650,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6MM_oJ,eclipse.jdt.ui,2352216585,1650,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-09-16T07:43:24Z,2024-09-16T07:43:24Z,This got merged to the BETA_JAVA23 branch already but it should be OK.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6MM_oJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1650,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6MQUSq,eclipse.jdt.ui,2353087658,1650,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-09-16T14:28:00Z,2024-09-16T14:28:00Z,"@noopur2507 shouldn't this wait until we have the final builds for Java 23?

Y-build is currently running, and I'm not sure it can succeed without a reference to a Y-build, where it needs to find the Java 23 variant of JDT/Core?

@mpalat @jarthana where, when and how will the final version be built?

Also, I see a branch `remove-beta-disclaimers`. Is that the input that should go into the final build? Will it?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6MQUSq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1650,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6MR_FJ,eclipse.jdt.ui,2353525065,1650,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-09-16T17:38:38Z,2024-09-16T17:38:38Z,"> @noopur2507 shouldn't this wait until we have the final builds for Java 23?
> 
> Y-build is currently running, and I'm not sure it can succeed without a reference to a Y-build, where it needs to find the Java 23 variant of JDT/Core?

I guess I got it a bit backwards? So the change in pom.xml wasn't used for *creating* a Y-build, but for letting a PR build of JDT/UI find the required bits from JDT/Core, right? If there is no more PR for BETA_JAVA23 then this reference is indeed no longer needed.




","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6MR_FJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1650,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6MSClb,eclipse.jdt.ui,2353539419,1650,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-09-16T17:46:32Z,2024-09-16T17:46:32Z,"> Also, I see a branch `remove-beta-disclaimers`. Is that the input that should go into the final build? Will it?

Is this on someone's radar, so users won't see ""23 (BETA)"" and the full beta-disclaimer after installing the patch feature?

@noopur2507 @mpalat @jarthana ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6MSClb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1650,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6MWd9T,eclipse.jdt.ui,2354700115,1650,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-09-17T06:57:02Z,2024-09-17T06:57:02Z,"> > @noopur2507 shouldn't this wait until we have the final builds for Java 23?
> > Y-build is currently running, and I'm not sure it can succeed without a reference to a Y-build, where it needs to find the Java 23 variant of JDT/Core?
> 
> I guess I got it a bit backwards? So the change in pom.xml wasn't used for _creating_ a Y-build, but for letting a PR build of JDT/UI find the required bits from JDT/Core, right? If there is no more PR for BETA_JAVA23 then this reference is indeed no longer needed.

That's right. This change was only for running JDT UI Gerrit builds for BETA_JAVA23 branch against a Y-build. So, it's fine to remove the Y-build reference now.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6MWd9T/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1650,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6MWfHl,eclipse.jdt.ui,2354704869,1650,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-09-17T07:00:04Z,2024-09-17T07:00:04Z,"> > Also, I see a branch `remove-beta-disclaimers`. Is that the input that should go into the final build? Will it?
> 
> Is this on someone's radar, so users won't see ""23 (BETA)"" and the full beta-disclaimer after installing the patch feature?
> 
> @noopur2507 @mpalat @jarthana

Yes, https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1648 is tracked in https://github.com/eclipse-jdt/eclipse.jdt.core/issues/2213. To be merged into the BETA_JAVA23 branch after Java 23 GA. A patch build will be created after that which will be used for the Marketplace entry as well.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6MWfHl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1650,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6MWfe7,eclipse.jdt.ui,2354706363,1650,NA,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,NA,2024-09-17T07:00:59Z,2024-09-17T07:00:59Z,"> @mpalat @jarthana where, when and how will the final version be built?
> 
> Also, I see a branch `remove-beta-disclaimers`. Is that the input that should go into the final build? Will it?

Yes, Stephan. Once all the beta disclaimers have been removed on the BETA_JAVA23 branch (for jdt.core, ui and debug), we will have one last P build off BETA_JAVA23 and that should be the our release candidate.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6MWfe7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1650,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6MXzev,eclipse.jdt.ui,2355050415,1650,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-09-17T09:35:48Z,2024-09-17T09:35:48Z,"Thanks, @noopur2507 , @jarthana for explanations. I see you know better than me what needs to be done and in which order :)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6MXzev/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1651,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1651,eclipse.jdt.ui,2528794801,1651,`ArrayIndexOutOfBoundsException` in `JUnitLaunchConfigurationDelegate`,odrotbohm,128577,Oliver Drotbohm,info@odrotbohm.de,CLOSED,2024-09-16T15:30:42Z,2024-09-17T18:31:42Z,"When trying to run JUnit tests from a source folder (right-click `src/test/java`) I get the following exception:

```
java.lang.ArrayIndexOutOfBoundsException: Index 0 out of bounds for length 0
	at org.eclipse.jdt.junit.launcher.JUnitLaunchConfigurationDelegate.enumerateTypesInPackage(JUnitLaunchConfigurationDelegate.java:543)
	at org.eclipse.jdt.junit.launcher.JUnitLaunchConfigurationDelegate.collectExecutionArguments(JUnitLaunchConfigurationDelegate.java:473)
	at org.eclipse.jdt.junit.launcher.JUnitLaunchConfigurationDelegate.getVMRunnerConfiguration(JUnitLaunchConfigurationDelegate.java:182)
	at org.eclipse.jdt.junit.launcher.JUnitLaunchConfigurationDelegate.launch(JUnitLaunchConfigurationDelegate.java:275)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:805)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:716)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:1054)
	at org.eclipse.debug.internal.ui.DebugUIPlugin$1.run(DebugUIPlugin.java:1257)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
```

```
eclipse.buildId=4.25.0.202409101855
java.version=21.0.4
java.vendor=Eclipse Adoptium
BootLoader constants: OS=macosx, ARCH=aarch64, WS=cocoa, NL=en_US
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1651/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1651,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6MQ9CH,eclipse.jdt.ui,2353254535,1651,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-09-16T15:33:15Z,2024-09-16T15:33:15Z,4.25 Eclipse is not supported. Please try with current 4.33 release.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6MQ9CH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1651,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6MQ9ws,eclipse.jdt.ui,2353257516,1651,NA,odrotbohm,128577,Oliver Drotbohm,info@odrotbohm.de,NA,2024-09-16T15:34:33Z,2024-09-16T15:34:33Z,"It looks like [this commit](https://github.com/eclipse-jdt/eclipse.jdt.ui/commit/87b98a6685cc5a41bea0ffe39496a8b01bc14505) introduced unguarded access to the allegedly present element in a package, whereas the array, of course, could also be empty.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6MQ9ws/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1651,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6MQ_Nl,eclipse.jdt.ui,2353263461,1651,NA,odrotbohm,128577,Oliver Drotbohm,info@odrotbohm.de,NA,2024-09-16T15:37:06Z,2024-09-16T15:37:06Z,"> 4.25 Eclipse is not supported. Please try with current 4.33 release.

I'm sorry, that's not the Eclipse version listed here but the one of STS (the Spring-specific tooling). Under the covers, that uses an Eclipse 4.33.0.v20240903-0618 underneath an Eclipse Java Development Tools 3.19.600.v20240903-0240.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6MQ_Nl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1651,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6MTusx,eclipse.jdt.ui,2353982257,1651,NA,erik-brangs,9282509,Erik Brangs,,NA,2024-09-16T20:38:45Z,2024-09-16T20:38:45Z,"@odrotbohm Can you share more information about the situation that causes the problem?

IIRC the code should only fail at this location if there are any compilation units without any top-level types.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6MTusx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1651,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6MT6Ob,eclipse.jdt.ui,2354029467,1651,NA,odrotbohm,128577,Oliver Drotbohm,info@odrotbohm.de,NA,2024-09-16T21:02:37Z,2024-09-16T21:02:37Z,"The package structure underneath `src/test/java` looks like this. Some packages indeed solely contain a `package-info.java`.

<img width=""330"" alt=""Screenshot 2024-09-16 at 23 01 35"" src=""https://github.com/user-attachments/assets/f2ff77e3-6e62-4cf8-b72b-97409fb6ec51"">
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6MT6Ob/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1658,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1658,eclipse.jdt.ui,2532440576,1658,Bug 310510 - [move member type] Move Type to New File creates illegal import,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-09-18T00:36:22Z,2024-09-18T02:52:59Z,"From Bug 310510:

```
package bugs;
public class Holder {
  static class Insider {
    Q q;
    static class Q {
    }
  }
}
```

Moving Insider to a new file generates:

```
package bugs;
import bugs.Holder.Insider; // illegal and completely non-sensical import.
public class Holder {
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1658/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1660,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1660,eclipse.jdt.ui,2532881147,1660,[23] Merge BETA_JAVA23 branch to master after Java 23 GA,noopur2507,8749449,Noopur Gupta,,CLOSED,2024-09-18T06:52:46Z,2024-09-25T05:57:12Z,Merge BETA_JAVA23 branch to master after Java 23 GA.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1660/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1660,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6NcpHF,eclipse.jdt.ui,2373095877,1660,NA,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,NA,2024-09-25T05:57:12Z,2024-09-25T05:57:12Z,This merge caused all the history and blame annotations to disappear. All the changes made by me and @stephan-herrmann  as part of the Java 23 work now shows up as from this particular commit :( ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6NcpHF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1664,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1664,eclipse.jdt.ui,2537964178,1664,JavaLeakTests failing on Java 23,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,CLOSED,2024-09-20T06:12:05Z,2024-11-12T07:46:33Z,"Failures are like 'Can not get final java.lang.Class field java.lang.Class.componentType on java.lang.Class'

See https://download.eclipse.org/eclipse/downloads/drops4/I20240919-1230/testresults/html/org.eclipse.jdt.ui.tests_ep434I-unit-cen64-gtk3-java23_linux.gtk.x86_64_23.html for details.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1664/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1664,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6M10Ne,eclipse.jdt.ui,2362917726,1664,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2024-09-20T06:20:07Z,2024-09-20T06:20:07Z,@noopur2507 You seem to be the one involved with this failing on Java 17 so would you please look into it?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6M10Ne/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1664,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6M1-B8,eclipse.jdt.ui,2362957948,1664,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-09-20T06:50:08Z,2024-09-20T06:50:08Z,I am not sure if these were tests enabled based on the discussion in https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/23.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6M1-B8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1664,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6M2ABh,eclipse.jdt.ui,2362966113,1664,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-09-20T06:55:16Z,2024-09-20T06:55:16Z,"Also, I don't see any test failures in the last Y-build on gtk3-java23.
https://download.eclipse.org/eclipse/downloads/drops4/Y20240918-1000/testResults.php

@MohananRahul @stephan-herrmann any idea what changed?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6M2ABh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1664,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6M53IJ,eclipse.jdt.ui,2363978249,1664,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-09-20T15:21:03Z,2024-09-20T15:21:03Z,"Stacktrace for the record:
```
Can not get final java.lang.Class field java.lang.Class.componentType on java.lang.Class

java.lang.IllegalArgumentException: Can not get final java.lang.Class field java.lang.Class.componentType on java.lang.Class
at java.base/jdk.internal.reflect.MethodHandleFieldAccessorImpl.newGetIllegalArgumentException(MethodHandleFieldAccessorImpl.java:86)
at java.base/jdk.internal.reflect.MethodHandleObjectFieldAccessorImpl.get(MethodHandleObjectFieldAccessorImpl.java:61)
at java.base/java.lang.reflect.Field.get(Field.java:444)
at org.eclipse.jdt.ui.leaktest.reftracker.ReferenceTracker.followFieldReference(ReferenceTracker.java:80)
at org.eclipse.jdt.ui.leaktest.reftracker.ReferenceTracker.visit(ReferenceTracker.java:144)
at org.eclipse.jdt.ui.leaktest.reftracker.ReferenceTracker.start(ReferenceTracker.java:168)
at org.eclipse.jdt.ui.leaktest.LeakTestCase.collect(LeakTestCase.java:58)
at org.eclipse.jdt.ui.leaktest.LeakTestCase.assertInstanceCount(LeakTestCase.java:123)
at org.eclipse.jdt.ui.tests.leaks.JavaLeakTest.internalTestEditorOpen(JavaLeakTest.java:378)
at org.eclipse.jdt.ui.tests.leaks.JavaLeakTest.testJavaEditorActionDelegate(JavaLeakTest.java:465)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
```

the field is rather old:
https://github.com/openjdk/jdk/blame/e087edeb256a9743d1fdb6c295cb5add78d4552e/src/java.base/share/classes/java/lang/Class.java#L1411

The IllegalArgumentException hides a ClassCastException which would be nice to have::
https://github.com/openjdk/jdk/blob/e087edeb256a9743d1fdb6c295cb5add78d4552e/src/java.base/share/classes/jdk/internal/reflect/MethodHandleObjectFieldAccessorImpl.java#L60

looks like a error in JDK

`java.vm.version=23+37-2369`

the Y build instead uses
`java.vm.version=23-ea+27-2275`","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6M53IJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1664,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6NYLkN,eclipse.jdt.ui,2371926285,1664,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-09-24T17:45:26Z,2024-09-24T17:45:26Z,"> Also, I don't see any test failures in the last Y-build on gtk3-java23. https://download.eclipse.org/eclipse/downloads/drops4/Y20240918-1000/testResults.php
> 
> @MohananRahul @stephan-herrmann any idea what changed?

I can locally reproduce on jdk-23+37.

The original ClassCastException reads: `Cannot cast [I to java.lang.Class`

And indeed the debugger shows `Class.componentType` to hold as its value an empty array.

Am I having a deja vu? See https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/2#issuecomment-1951517473 :)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6NYLkN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1664,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6NYNaq,eclipse.jdt.ui,2371933866,1664,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-09-24T17:49:35Z,2024-09-24T17:49:35Z,"> I can locally reproduce on jdk-23+37.

do you agree its a JDK bug? Mind to file a error report to JDK how to reproduce?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6NYNaq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1664,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6NZ-gc,eclipse.jdt.ui,2372397084,1664,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-09-24T21:13:37Z,2024-09-24T21:13:37Z,"> > I can locally reproduce on jdk-23+37.
> 
> do you agree its a JDK bug? 

That's the feeling I already had in February ...

> Mind to file a error report to JDK how to reproduce?

I don't think Oracle / openjdk wants to run JavaLeakTests, and atm I have no idea how to reduce this to a small reproducer.

Reminds me, I still need to file the recent JIT bug - let's see how they'll react to that one.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6NZ-gc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1664,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6NaNoK,eclipse.jdt.ui,2372459018,1664,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-09-24T21:57:07Z,2024-09-24T21:57:07Z,"in #2 I mentioned that the bug occurs with JDK 18+. This isn't wrong, but interestingly, from those JDKs 18+ I have on disk, 20, 21 and 22 do not show the bug, but 23 does again.

I should add, however, that I didn't repeat each of the test runs to check if the bug happens / does not happen reliably. I gave up partly because since today (?) equinox startup takes more than a minute on my machine with several cpu cores at 100%. Anybody else seeing this?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6NaNoK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1664,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6OON0C,eclipse.jdt.ui,2386091266,1664,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-10-01T14:13:58Z,2024-10-01T14:13:58Z,created https://bugs.openjdk.org/browse/JDK-8341343 for `Can not get final java.lang.Class field java.lang.Class.componentType on java.lang.Class`,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6OON0C/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1664,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ORyk0,eclipse.jdt.ui,2387028276,1664,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-10-01T20:37:51Z,2024-10-01T20:37:51Z,"> created https://bugs.openjdk.org/browse/JDK-8341343 for `Can not get final java.lang.Class field java.lang.Class.componentType on java.lang.Class`

cool, thanks. 
The linked bugs [JDK-8301663](https://bugs.openjdk.org/browse/JDK-8301663) (fixed in 20) and [JDK-8337622](https://bugs.openjdk.org/browse/JDK-8337622) (fixed in 24) correspond to my observations about versions where it was fixed, then broken again.

The good news, once we build on JDK 24 leak tests should be functional again.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ORyk0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1664,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6QWqsi,eclipse.jdt.ui,2421861154,1664,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-10-18T08:47:34Z,2024-10-18T08:47:34Z,Asked to updated JDK: https://gitlab.eclipse.org/eclipsefdn/helpdesk/-/issues/5179,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6QWqsi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1664,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6R0Xxd,eclipse.jdt.ui,2446425181,1664,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-10-30T10:07:52Z,2024-10-30T10:07:52Z,"These tests are now failing on win32-java17 also since I20241024-1800. 

https://download.eclipse.org/eclipse/downloads/drops4/I20241029-1800/testResults.php","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6R0Xxd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1664,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6R0slM,eclipse.jdt.ui,2446510412,1664,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-10-30T10:36:15Z,2024-10-30T10:36:15Z,"> These tests are now failing on win32-java17 also since I20241024-1800.
> 
> https://download.eclipse.org/eclipse/downloads/drops4/I20241029-1800/testResults.php

I believe this could be Windows specific UI issue, not Java bug like on Java 23 build","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6R0slM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1664,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6R2AO0,eclipse.jdt.ui,2446853044,1664,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-10-30T11:55:59Z,2024-10-30T11:55:59Z,the fails on windows are unrelated to this Java 23 issue. I created a new ticket for it: https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1752,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6R2AO0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1664,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6TNllL,eclipse.jdt.ui,2469812555,1664,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-11-12T07:46:33Z,2024-11-12T07:46:33Z,https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1789 worked around this JDK error. now jdt.ui tests have 0 fails in https://download.eclipse.org/eclipse/downloads/drops4/I20241111-1800/testresults/html/org.eclipse.jdt.ui.tests_ep434I-unit-linux-x86_64-java23_linux.gtk.x86_64_23.html,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6TNllL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1668,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1668,eclipse.jdt.ui,2540084818,1668,"quickfix ""remove 'restriction' token is not able to handle several cases in one file in one run",carstenartur,3164220,Carsten Hammer,,CLOSED,2024-09-21T08:50:57Z,2024-09-25T23:04:05Z,"Trying to move the tests from a separate folder to the usually used jdt.tests project in
https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1631
I have to remove a lot of suppressions for warnings (that they are needed might be another issue in jdt).

![image](https://github.com/user-attachments/assets/cc55dcac-fe37-4f90-97c8-0164e8418e2b)

You have to do that one after another because there is no option to remove all equal suppressions at once.
Is that intended?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1668/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1668,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6NW0BQ,eclipse.jdt.ui,2371567696,1668,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-09-24T15:02:04Z,2024-09-24T15:02:04Z,"Intended isn't the correct word.  There are fixes that do that, this one isn't set up to do that.  That said, I will look into making it a multifix.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6NW0BQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1672,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1672,eclipse.jdt.ui,2548811565,1672,Hamcrest 3.0 is still breaking things in Eclipse 4.30,pci-mthompson,46202025,Mike T.,,CLOSED,2024-09-25T19:18:33Z,2024-09-26T14:09:20Z,"I am seeing the same errors in my Eclipse 2023-12 (v4.3.0) during clean installs and whenever someone has run the update on an existing install.

java.lang.NullPointerException: Cannot invoke ""org.eclipse.jdt.core.IClasspathEntry.getEntryKind()"" because ""entry"" is null
	at org.eclipse.jdt.internal.ui.packageview.ClassPathContainer.getChildren(ClassPathContainer.java:190)
...

java.lang.IllegalStateException: Unable to compute bundle location for 'org.hamcrest' with range [2.2.0,2.3.0)
	at org.eclipse.jdt.internal.junit.buildpath.BuildPathSupport$JUnitPluginDescription.getLibraryEntry(BuildPathSupport.java:236)
...

Opening a project's properties under Libraries for Junit 4 it shows the Junit 4.13 jar and hamcrest core, but can't find hamcrest itself.


Removing Hamcrest 3.0 plugin fixes some of those errors but then random views like Ant break, and File/Search stops working.  I see this issue was fixed for Eclipse v4.34?  But I can't see how to get the fix down into older versions.

https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1610
https://github.com/eclipse/xtext/issues/3178
https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1611
https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1612   

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1672/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1672,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6NkZ8-,eclipse.jdt.ui,2375130942,1672,NA,pci-mthompson,46202025,Mike T.,,NA,2024-09-25T19:55:50Z,2024-09-25T19:55:50Z,"Traceback from Ant view:
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.ant.ui [131]
  Unresolved requirement: Require-Bundle: org.eclipse.jdt.junit; bundle-version=""[3.5.0,4.0.0)""
    -> Bundle-SymbolicName: org.eclipse.jdt.junit; bundle-version=""3.16.200.v20231106-1537""; singleton:=""true""
       org.eclipse.jdt.junit [461]
         Unresolved requirement: Require-Bundle: org.eclipse.jdt.junit.core; bundle-version=""[3.11.200,4.0.0)""; visibility:=""reexport""
           -> Bundle-SymbolicName: org.eclipse.jdt.junit.core; bundle-version=""3.13.0.v20231102-1522""; singleton:=""true""
              org.eclipse.jdt.junit.core [462]
                Unresolved requirement: Require-Bundle: org.eclipse.jdt.junit.runtime; bundle-version=""[3.5.0,4.0.0)""
                  -> Bundle-SymbolicName: org.eclipse.jdt.junit.runtime; bundle-version=""3.7.300.v20231106-1537""; singleton:=""true""
                     org.eclipse.jdt.junit.runtime [463]
                       Unresolved requirement: Require-Bundle: org.junit; bundle-version=""3.8.2""
                         -> Bundle-SymbolicName: org.junit; bundle-version=""4.13.2.v20230809-1000""
                            org.junit [1001]
                              Unresolved requirement: Require-Bundle: org.hamcrest.core; bundle-version=""1.3.0""; visibility:=""reexport""
                                -> Bundle-SymbolicName: org.hamcrest.core; bundle-version=""2.2.0.v20230809-1000""
                                   org.hamcrest.core [992]
                                     Unresolved requirement: Require-Bundle: org.hamcrest; bundle-version=""2.2.0""; visibility:=""reexport""
         Unresolved requirement: Require-Bundle: org.eclipse.jdt.junit.runtime; bundle-version=""[3.7.0,4.0.0)""
           -> Bundle-SymbolicName: org.eclipse.jdt.junit.runtime; bundle-version=""3.7.300.v20231106-1537""; singleton:=""true""

	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6NkZ8-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1672,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Nn4eZ,eclipse.jdt.ui,2376042393,1672,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-09-26T06:27:07Z,2024-09-26T06:27:07Z,"> But I can't see how to get the fix down into older versions.

There is no support for old eclipse IDE versions. You need to update to the newest release.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Nn4eZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1672,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Nr3eN,eclipse.jdt.ui,2377086861,1672,NA,pci-mthompson,46202025,Mike T.,,NA,2024-09-26T14:09:19Z,2024-09-26T14:09:19Z,"That's not particularly helpful when broken updates are being pushed to old versions.  We do upgrade releases once a year so that's not viable for us due to the support and testing required for our development stack.

Based on the other tickets I referenced this breakage is impacting a lot of the Eclipse ecosystem...","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Nr3eN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1675,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1675,eclipse.jdt.ui,2549542572,1675,[24] Umbrella Bug for BETA_JAVA24 Activities in jdt.ui,mpalat,4507939,Manoj  N Palat,manoj.palat@in.ibm.com,OPEN,2024-09-26T05:20:30Z,2025-02-03T06:14:19Z,Ref the [JDT.Core issue](https://github.com/eclipse-jdt/eclipse.jdt.core/issues/2899),"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1675/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1675,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6OoE9b,eclipse.jdt.ui,2392870747,1675,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-10-04T05:47:47Z,2024-10-04T05:47:47Z,"- https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1697
- https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1695
- https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1696","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6OoE9b/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1675,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SPuwP,eclipse.jdt.ui,2453597199,1675,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-11-03T22:17:54Z,2024-11-03T22:17:54Z,"I took the liberty to create
* https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1763","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SPuwP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1675,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6VL0r7,eclipse.jdt.ui,2502904571,1675,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-11-27T05:42:25Z,2024-11-27T05:42:25Z,"* https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1820
* https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1902
* https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1988","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6VL0r7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1676,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1676,eclipse.jdt.ui,2549840530,1676,[Move Method Refactoring Bug]  Move method refactoring leads to changes in code calling relationships,assdfsdafasfa,170524487,,,CLOSED,2024-09-26T08:10:10Z,2024-10-07T21:17:53Z,"When moving the method() method of class A to class SubClass, before refactoring, the method() of class ParentClass is called in the test() method, and after refactoring, the method() of class SubClass is called in the test() method, resulting in a change in code behavior.

### **Code before refactoring**
```java 
class ParentClass {
void method() {
 System.out.println(""ParentClass method"");
 }
}
class A {
 SubClass subclass;
void method() {
 System.out.println(""A class method"");
 }
}
class SubClass extends ParentClass {
void test() {
 method(); 
 }
}
```


 **Code after refactoring**
```java 
class ParentClass {
void method() {
 System.out.println(""ParentClass method"");
 }
}
class A {
}
class SubClass extends ParentClass {
void method() {
 System.out.println(""A class method"");
 }
void test() {
 method();
 }
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1676/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1677,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1677,eclipse.jdt.ui,2550007054,1677,[Pull Up Method Refactoring Bug] pull up refactoring  leads to changes in code calling relationships,assdfsdafasfa,170524487,,,CLOSED,2024-09-26T09:17:50Z,2024-09-28T02:41:37Z,"When pulling up the method() method of class A to class SubClass, before refactoring, the test() method calls the method() of class ParentClass, and after refactoring, the test() method calls the method() of class SubClass, resulting in a change of code behavior.

**Code before refactoring**
```java
class ParentClass {
void method() {
 System.out.println(""ParentClass method"");
 }
}
class A extends SubClass {
void method() {
 System.out.println(""Class A method"");
 }
}
class SubClass extends ParentClass {
void test() {
 method();
 }
}
```
**Code after refactoring**
```java
class ParentClass {
void method() {
 System.out.println(""ParentClass method"");
 }
}
class A extends SubClass {
}
class SubClass extends ParentClass {
void method() {
 System.out.println(""Class A method"");
 }
void test() {
 method();
 }
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1677/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1678,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1678,eclipse.jdt.ui,2550192855,1678,[Extract Method Refactoring Bug] Extract method refactoring leads to changes in code calling relationships,assdfsdafasfa,170524487,,,CLOSED,2024-09-26T10:33:51Z,2024-09-26T10:36:19Z,"When a statement is extracted as a new method in class SubClass with method name 'method', before refactoring, method() of class ParentClass is called in test() method, and after refactoring, method() of class SubClass is called in test() method, resulting in a change in code behavior.

**Code before refactoring**
```java
class ParentClass {
void method() {
 System.out.println(""ParentClass implementation"");
 }
}
class SubClass extends ParentClass {
void test() {
// Original statements in SubClass
 System.out.println(""SubClass specific behavior"");
 System.out.println(""Another SubClass action"");

 method(); // Calls ParentClass's method, prints ""ParentClass implementation""
 }
}

```
**Code after refactoring**
```java
class ParentClass {
void method() {
 System.out.println(""ParentClass implementation"");
 }
}
class SubClass extends ParentClass {
void method(){
 System.out.println(""SubClass specific behavior"");
 System.out.println(""Another SubClass action"");
}
void test() {
// Original statements in SubClass
method();
 method(); // Calls ParentClass's method, prints ""ParentClass implementation""
 }
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1678/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1679,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1679,eclipse.jdt.ui,2550209951,1679,[Push Down Method Refactoring Bug] Pull down method refactoring leads to changes in code calling relationships,assdfsdafasfa,170524487,,,CLOSED,2024-09-26T10:42:10Z,2024-10-03T16:07:19Z,"When test() is selected to perform pull down refactoring into class A, before refactoring, test() method calls method() of class ParentClass, after refactoring, test() method calls method() of class SubClass, resulting in a change in code behavior.

**Code before refactoring**
```java
class ParentClass {
void method() {
 System.out.println(""ParentClass method"");
 }
}
class A extends SubClass { 
void method() {
 System.out.println(""Class A method"");
 }
}
class SubClass extends ParentClass {
void test() {
 method(); 
 }
}


```
**Code after refactoring**
```java
class ParentClass {
void method() {
 System.out.println(""ParentClass method"");
 }
}
class A extends SubClass { 
void method() {
 System.out.println(""Class A method"");
 }
void test() {
 method(); 
 }
}
class SubClass extends ParentClass {
}

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1679/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1684,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1684,eclipse.jdt.ui,2554028221,1684,Why allow merge commits in github settings and have a check to dissallow them in the PR?,carstenartur,3164220,Carsten Hammer,,CLOSED,2024-09-28T05:57:07Z,2024-10-07T17:29:32Z,,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1684/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1684,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6N4lwm,eclipse.jdt.ui,2380422182,1684,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-09-28T05:59:08Z,2024-09-28T05:59:08Z,The merge commits are disallowed in **this** repo settings. What's your clone repo settings do is up to you.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6N4lwm/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1684,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6O5vrg,eclipse.jdt.ui,2397502176,1684,NA,carstenartur,3164220,Carsten Hammer,,NA,2024-10-07T17:29:32Z,2024-10-07T17:29:32Z,Whatever the real relation is between the settings of the cloned github repository and the clones setting: your claim seems to be definitly wrong.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6O5vrg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1705,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1705,eclipse.jdt.ui,2574843959,1705,Internal Error when inlining array.length expression,HannesWell,44067969,Hannes Wellmann,,CLOSED,2024-09-28T10:31:58Z,2024-10-15T23:39:32Z,"When I try to inline (Alt + Shift+ I) the `length` in the following code snippet
```
public static void main(String[] args) {
	String[] a = new String[0];
	int length = a.length;
	if (length > 0) {
		System.out.println(""Longer""); //$NON-NLS-1$
	}
}
```
it fails with the following error:
```
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:396)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.ui.internal.progress.ProgressMonitorJobsDialog.run(ProgressMonitorJobsDialog.java:230)
	at org.eclipse.ui.internal.progress.ProgressManager.lambda$26(ProgressManager.java:819)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile(ProgressManager.java:849)
	at org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile(ProgressManager.java:828)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.checkInitialConditions(RefactoringWizardOpenOperation.java:222)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.lambda$0(RefactoringWizardOpenOperation.java:173)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:209)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:126)
	at org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:41)
	at org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter.startInlineTempRefactoring(RefactoringExecutionStarter.java:351)
	at org.eclipse.jdt.ui.actions.InlineTempAction.tryInlineTemp(InlineTempAction.java:121)
	at org.eclipse.jdt.ui.actions.InlineAction.run(InlineAction.java:120)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:278)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:252)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:124)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:98)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:56)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:299)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:233)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:174)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:165)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:204)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:569)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:644)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:91)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1319)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1173)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1198)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1183)
	at org.eclipse.swt.widgets.Control.traverse(Control.java:4234)
	at org.eclipse.swt.widgets.Control.translateMnemonic(Control.java:4084)
	at org.eclipse.swt.widgets.Composite.translateMnemonic(Composite.java:1259)
	at org.eclipse.swt.widgets.Control.translateMnemonic(Control.java:4102)
	at org.eclipse.swt.widgets.Display.translateMnemonic(Display.java:4991)
	at org.eclipse.swt.widgets.Display.filterMessage(Display.java:1337)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3708)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1151)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:639)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:546)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:668)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:605)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1481)
Caused by: java.lang.IllegalArgumentException: Invalid identifier : >String[]<
	at org.eclipse.jdt.core.dom.SimpleName.setIdentifier(SimpleName.java:247)
	at org.eclipse.jdt.core.dom.AST.newSimpleName(AST.java:2935)
	at org.eclipse.jdt.core.dom.AST.newName(AST.java:2561)
	at org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring.createFullyQualifiedName(InlineTempRefactoring.java:779)
	at org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring.createFullyQualifiedName(InlineTempRefactoring.java:752)
	at org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring.getAlternativeQualifications(InlineTempRefactoring.java:658)
	at org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring.checkClashes(InlineTempRefactoring.java:264)
	at org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring.checkInitialConditions(InlineTempRefactoring.java:250)
	at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:84)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2457)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2482)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:89)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:124)
```

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1705/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1705,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6PIiI-,eclipse.jdt.ui,2401378878,1705,NA,srikanth-sankaran,131454720,Srikanth Sankaran,,NA,2024-09-30T03:29:01Z,2024-09-30T03:29:01Z,"@mpalat - why am I not able to assign it to  @subyssurendran666 - what exactly is the problem with that user id ??

Problem reproduced on master/HEAD. 

@subyssurendran666 - could you take a look ? TIA
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6PIiI-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1705,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6PIiJI,eclipse.jdt.ui,2401378888,1705,NA,srikanth-sankaran,131454720,Srikanth Sankaran,,NA,2024-09-30T03:29:54Z,2024-09-30T03:29:54Z,@mpalat - I have assigned it to you - please reassign ;-),"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6PIiJI/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1705,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6PIiJN,eclipse.jdt.ui,2401378893,1705,NA,subyssurendran666,117082823,Suby S Surendran,suby.surendran@ibm.com,NA,2024-09-30T05:31:17Z,2024-09-30T05:31:17Z,"@srikanth-sankaran, There is an issue with my GitHub account that I'm unable to resolve. A ticket can only be assigned to me if I'm already part of the discussion. Since I've added a comment, you should be able to assign the ticket to me now.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6PIiJN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1705,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6PIiJQ,eclipse.jdt.ui,2401378896,1705,NA,srikanth-sankaran,131454720,Srikanth Sankaran,,NA,2024-09-30T05:34:36Z,2024-09-30T05:34:36Z,"> @srikanth-sankaran, There is an issue with my GitHub account that I'm unable to resolve. A ticket can only be assigned to me if I'm already part of the discussion. Since I've added a comment, you should be able to assign the ticket to me now.

Has this been reported to the suitable admin ?

Anyways, the ticket is yours. If your investigation points to the problem elsewhere, suitably reassign. Thanks!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6PIiJQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1705,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6PIiJZ,eclipse.jdt.ui,2401378905,1705,NA,HannesWell,44067969,Hannes Wellmann,,NA,2024-09-30T16:42:21Z,2024-09-30T16:42:21Z,"> @mpalat - why am I not able to assign it to @subyssurendran666 - what exactly is the problem with that user id ??

As far as I can tell you can only assign an issue to somebody that has participated in a conversation or is a committer of the project. So I assume he isn't a committer, is he?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6PIiJZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1705,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6PIiJc,eclipse.jdt.ui,2401378908,1705,NA,srikanth-sankaran,131454720,Srikanth Sankaran,,NA,2024-09-30T17:37:35Z,2024-09-30T17:37:35Z,"> > @mpalat - why am I not able to assign it to @subyssurendran666 - what exactly is the problem with that user id ??
> 
> 
> 
> As far as I can tell you can only assign an issue to somebody that has participated in a conversation or is a committer of the project. So I assume he isn't a committer, is he?

Ah, I see. Thanks for that pointer @HannesWell - I had no idea! ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6PIiJc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1705,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6PIiJl,eclipse.jdt.ui,2401378917,1705,NA,subyssurendran666,117082823,Suby S Surendran,suby.surendran@ibm.com,NA,2024-10-09T05:45:36Z,2024-10-09T05:45:36Z,"<img width=""1053"" alt=""Screenshot 2024-10-09 at 11 04 03 AM"" src=""https://github.com/user-attachments/assets/86b8a640-a26b-449e-a006-6eed83595ccd"">

I believe the issue is with the `InlineTempRefactoring.createFullyQualifiedName()` method in JDT UI. The `createFullyQualifiedName` method is supposed to return a fullyQualifiedName, as the AST DOM is expecting one. In this case, the DOM is expecting `a.length`, but it is receiving `String[].length` instead.


@srikanth-sankaran could you please move to JDT.UI.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6PIiJl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1705,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6PIidF,eclipse.jdt.ui,2401380165,1705,NA,srikanth-sankaran,131454720,Srikanth Sankaran,,NA,2024-10-09T05:58:04Z,2024-10-09T05:58:04Z,"Thanks for the analysis @subyssurendran666 

@noopur2507 could you take over please ? TIA","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6PIidF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1705,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6PpV6o,eclipse.jdt.ui,2409979560,1705,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-10-14T05:31:29Z,2024-10-14T05:31:29Z,"The code was added via https://git.eclipse.org/r/c/jdt/eclipse.jdt.ui/+/71284.
@NikolayMetchev / @jjohnstn, could you please take a look? ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6PpV6o/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1705,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6PqF6l,eclipse.jdt.ui,2410176165,1705,NA,NikolayMetchev,417373,Nikolay Metchev,nikolaymetchev@gmail.com,NA,2024-10-14T06:46:25Z,2024-10-14T06:46:25Z,A decade later? I don't remember anything. I haven't used eclipse in about 7 years,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6PqF6l/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1705,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6P6Hpo,eclipse.jdt.ui,2414377576,1705,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-10-15T15:40:44Z,2024-10-15T15:40:44Z,I will look at it.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6P6Hpo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1685,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1685,eclipse.jdt.ui,2554837119,1685,Remove (some) code relating to Java versions below 8,stephan-herrmann,24587985,Stephan Herrmann,,CLOSED,2024-09-29T09:36:06Z,2025-01-08T11:32:46Z,"Since JDT/Core dropped support for Java versions below 8, the following queries in JavaModelUtil are now de-facto constants:
* is1d8OrHigher() -> always true
* is1d2OrHigher(), is1d4OrHigher(), is50OrHigher(), is1d7OrHigher() -> always false

I came here when checking if JDT/UI still ""uses"" `org.eclipse.jdt.annotation_v1`. In theory, the quickfix `UnresolvedElementsBaseSubProcessor.addNullityAnnotationTypesProposals()` would still try to locate this bundle in pre-Java8 projects, but since such projects are no longer supported, the version dependence in that method can be removed.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1685/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1685,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Ye5x0,eclipse.jdt.ui,2558237812,1685,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2024-12-21T20:51:37Z,2024-12-21T20:51:37Z,"Actually is1d20orHigher and etc. are also always true now due to the ""orHigher""","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Ye5x0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1685,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZoMcG,eclipse.jdt.ui,2577450758,1685,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2025-01-08T11:32:46Z,2025-01-08T11:32:46Z,"I consider this one done. Whatever remains can be handled separately as linked PRs here handled the ""obvious"" cases.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZoMcG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1691,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1691,eclipse.jdt.ui,2562952753,1691,Bug 178085 - [push down] Push down field to class declared locally is disallowed,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-10-03T01:52:56Z,2024-10-03T20:23:50Z,"Trying to push down the field ""f"" in the following code gets an error.  If the inner class B is in a separate file, it works fine.

```
package pushdown3;

class A {
    int f;
    
    void mA(){
        class B extends A {
            public void mB(){
                f = 0;
            }
        }
    }
}
```

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1691/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1692,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1692,eclipse.jdt.ui,2562956032,1692,[push down] does not change super references in target for moved members,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-10-03T01:57:29Z,2024-10-04T15:58:26Z,"In the following example:

```
package pushdown3;

class A {
    int f;
    
    void mA(){
    }
}
```

```
package pushdown3;

public class C extends A {
	
	public void foo() {
		super.f = 3;
	}

}
```

pushing down field ""f"" causes an error in C because the super.f reference is now invalid.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1692/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1695,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1695,eclipse.jdt.ui,2565477910,1695,[24] Allow JDT to target Java 24 in compiler preferences,noopur2507,8749449,Noopur Gupta,,CLOSED,2024-10-04T05:27:53Z,2024-10-15T09:59:12Z,Allow JDT to target Java 24 in compiler preferences.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1695/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1696,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1696,eclipse.jdt.ui,2565479059,1696,[24] Add AST level 24 to AST view,noopur2507,8749449,Noopur Gupta,,CLOSED,2024-10-04T05:29:04Z,2024-12-05T05:52:46Z,Add AST level 24 to AST view.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1696/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1697,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1697,eclipse.jdt.ui,2565479756,1697,[24] Run Gerrit builds for JDT UI BETA_JAVA24 branch with latest Y-build,noopur2507,8749449,Noopur Gupta,,CLOSED,2024-10-04T05:29:46Z,2024-10-04T05:54:40Z,Run Gerrit builds for JDT UI BETA_JAVA24 branch with latest Y-build.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1697/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1701,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1701,eclipse.jdt.ui,2568741670,1701,[Enhancement] Add quickfix option to rename unused patterns to _,nlisker,37422899,,,CLOSED,2024-10-06T16:22:56Z,2024-10-31T16:26:25Z,"From: https://github.com/eclipse-jdt/eclipse.jdt.core/issues/3051

JDT core added a warning for unused patterns. It would be helpful to add a ""rename unused variable to _"" option on hover or on ctrl+1. This will help with batch renaming to transition old code to new code.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1701/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1701,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Oz38i,eclipse.jdt.ui,2395963170,1701,NA,srikanth-sankaran,131454720,Srikanth Sankaran,,NA,2024-10-07T05:50:24Z,2024-10-07T05:50:24Z,"Please note: https://github.com/eclipse-jdt/eclipse.jdt.core/pull/3055 also introduces an API option to control whether unused lambda parameters should be complained against. 

The option string is declared as:

public static final String OPTION_ReportUnusedLambdaParameter = ""org.eclipse.jdt.core.compiler.problem.unusedLambdaParameter"";

Please include UI support for configuring this option too as a part of this ticket.

Note: This option has an effect only on JDK22 and upwards. For 21 and below, the compiler does not emit the unused lambda parameter warning - since these are not actionable.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Oz38i/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1701,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6QKDic,eclipse.jdt.ui,2418555036,1701,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-10-17T05:47:14Z,2024-10-17T05:47:14Z,"> Please note: [eclipse-jdt/eclipse.jdt.core#3055](https://github.com/eclipse-jdt/eclipse.jdt.core/pull/3055) also introduces an API option to control whether unused lambda parameters should be complained against.
> 
> The option string is declared as:
> 
> public static final String OPTION_ReportUnusedLambdaParameter = ""org.eclipse.jdt.core.compiler.problem.unusedLambdaParameter"";
> 
> Please include UI support for configuring this option too as a part of this ticket.
> 
> Note: This option has an effect only on JDK22 and upwards. For 21 and below, the compiler does not emit the unused lambda parameter warning - since these are not actionable.

Moved to https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1721.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6QKDic/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1701,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6RoFN3,eclipse.jdt.ui,2443203447,1701,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-10-29T04:46:57Z,2024-10-29T04:46:57Z,"Hi @noopur2507 I have a patch for this that should be ready tomorrow (just need to add some tests).  Hopefully, you aren't working on a fix at the same time.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6RoFN3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1701,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6RoHTH,eclipse.jdt.ui,2443211975,1701,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-10-29T04:55:42Z,2024-10-29T04:55:42Z,"> Hi @noopur2507 I have a patch for this that should be ready tomorrow (just need to add some tests). Hopefully, you aren't working on a fix at the same time.

Thanks, Jeff. I have not started working on the quick fix.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6RoHTH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1703,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1703,eclipse.jdt.ui,2568855596,1703,cleanup to make use of text blocks leaves out many cases,carstenartur,3164220,Carsten Hammer,,CLOSED,2024-10-06T19:41:23Z,2024-10-16T19:01:06Z,"Many cases are not covered by the cleanup to make use of text blocks

```java      
                StringBuilder buf= new StringBuilder();
		buf.append(""package test1;\n"");
		buf.append(""public class E1 {\n"");
		buf.append(""    FI fi= (Integer i, String[][] s) -> {};\n""); // no varargs
		buf.append(""}\n"");
		buf.append(""interface FI {\n"");
		buf.append(""    void foo(Integer i, String[]... s);\n"");
		buf.append(""}\n"");
		assertNumberOfProposals(proposals, 2);
		assertCorrectLabels(proposals);

		String expected1= buf.toString();
```

Many more examples at
https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1702","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1703/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1703,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6PFK9G,eclipse.jdt.ui,2400497478,1703,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-10-08T18:01:53Z,2024-10-08T18:01:53Z,"Looking at the examples, there are two situations:

1.  There is a line comment in the append that specifies a particular append line.  This cannot be put into a text block and is meaningless if moved.  NLS comments are supported if on all lines.
2. There are calls to indexOf() after the toString() call.  The current logic doesn't convert if the buffer is used for other things or other calls to it.  It happens that indexOf() is also supported by a String so this could be done.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6PFK9G/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1703,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6PNMGm,eclipse.jdt.ui,2402599334,1703,NA,carstenartur,3164220,Carsten Hammer,,NA,2024-10-09T15:04:25Z,2024-10-09T15:04:25Z,"> Looking at the examples, there are two situations:
> 
> 
> 
> 1.  There is a line comment in the append that specifies a particular append line.  This cannot be put into a text block and is meaningless if moved.  NLS comments are supported if on all lines.
> 

So for long sections it would be possible to either have multiple text blocks or use something similar to printf on the resulting block to insert the particular append line. I agree this is no easy addition, maybe not worth it.

> 2. There are calls to indexOf() after the toString() call.  The current logic doesn't convert if the buffer is used for other things or other calls to it.  It happens that indexOf() is also supported by a String so this could be done.
> 
> 

Yes, cool approach.

I closed the PR that shows the use cases. I think it is still visible but not in the list of active prs.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6PNMGm/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1703,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6PZgR4,eclipse.jdt.ui,2405827704,1703,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-10-10T18:56:20Z,2024-10-10T18:56:20Z,"> > Looking at the examples, there are two situations:
> > 
> > 1. There is a line comment in the append that specifies a particular append line.  This cannot be put into a text block and is meaningless if moved.  NLS comments are supported if on all lines.
> 
> So for long sections it would be possible to either have multiple text blocks or use something similar to printf on the resulting block to insert the particular append line. I agree this is no easy addition, maybe not worth it.
> 

I don't think breaking up the text block is the answer.  I don't know how but it might be worth contacting the language standard people to let then know about such a scenario and see if they could put in a line comment equivalent that would be ignored by the text block.

The other way of doing this would be to subsume comments into the text block since in this case we are dealing with code sequences and adding a line comment within the string would be reasonable.  Impossible to guess with a cleanup but perhaps could be done as a quick fix so the user could tell you manually they want that.

For example:

```
    StringBuilder buf = new StringBuilder();
    buf.append(""package p;\n"");
    buf.append(""public class A {\n"");
    buf.append(""    public void foo() {\n"");
    buf.append(""        int a = b;\n"");  // here is where the compiler error is
    buf.append(""    }\n"");
    buf.append(""}\n"");
    String x = buf.toString();
```

gets converted to:

```
    String x = """"""
        package p;
        public class A {
            public void foo() {
                int a = b;  // here is where the compiler error is
            }
        }
        """""";
  
```
> > 2. There are calls to indexOf() after the toString() call.  The current logic doesn't convert if the buffer is used for other things or other calls to it.  It happens that indexOf() is also supported by a String so this could be done.
> 
> Yes, cool approach.
> 
> I closed the PR that shows the use cases. I think it is still visible but not in the list of active prs.

I alread7 have a patch for the indexOf support.  I am on vacation but will push it up shortly.  If the indexOf() call is in the middle of a bunch of appends it won't convert but it allows the indexOf to be before or after the toString()/implicit toString() call.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6PZgR4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1703,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6PkMOX,eclipse.jdt.ui,2408629143,1703,NA,carstenartur,3164220,Carsten Hammer,,NA,2024-10-12T17:07:25Z,2024-10-12T17:07:25Z,"There are some more cases where the cleanup is failing.
Try it on the file 
https://github.com/carstenartur/sandbox/blob/main/sandbox_functional_converter_test/src/org/sandbox/jdt/ui/tests/quickfix/Java8CleanUpTest.java
or just look at it right now as it is already the result of a partly fail.
You see that starting with line 772 it did not work. 
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6PkMOX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1703,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6P7RsE,eclipse.jdt.ui,2414680836,1703,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-10-15T18:04:11Z,2024-10-15T18:04:11Z,Hi @carstenartur It appears that adding the empty string at the end is causing the cleanup to bail (removal of empty strings as last concatenation makes it work).  I will make a patch to fix this.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6P7RsE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1703,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6QFMy8,eclipse.jdt.ui,2417282236,1703,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-10-16T16:08:35Z,2024-10-16T16:08:35Z,Hi @carstenartur let me know if there are other scenarios.  It would be preferable to open separate specific issues for them and close this one as it makes it easier for end-users to track if their problem is the same.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6QFMy8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1703,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6QFuEf,eclipse.jdt.ui,2417418527,1703,NA,carstenartur,3164220,Carsten Hammer,,NA,2024-10-16T17:04:06Z,2024-10-16T17:04:06Z,"Yes, of course. Let's close this one for being able to distinguish different use cases. There are more issues e.g. a case where the the formatting cleanup makes a sequence of text blocks indent each one a little bit more until the text blocks end up with hundreds of leading spaces. When I come to that point I can create another issue.
Thank you very much so far!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6QFuEf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1703,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6QGvPz,eclipse.jdt.ui,2417685491,1703,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-10-16T19:01:05Z,2024-10-16T19:01:05Z,Thanks @carstenartur.  I am hoping to get your big explicit encoding feature into M2 this week.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6QGvPz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1708,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1708,eclipse.jdt.ui,2578635557,1708,Multi release JAR support,sebthom,426959,Sebastian Thomschke,,OPEN,2024-10-10T11:57:53Z,2024-10-16T09:25:31Z,"This is a followup issue on [Bugzilla Bug #533401 - Provide support in UI to create multi release JAR](https://bugs.eclipse.org/bugs/show_bug.cgi?id=533401).

Please add support for creating JEP 238: Multi-Release JAR Files in the Eclipse JDT UI.

The Eclipse Compiler itself already supports it since 2018.

Ultimately I am looking for M2E support of MRJARs in projects outlined like this https://github.com/apache/maven-compiler-plugin/tree/master/src/it/multirelease-patterns/singleproject-runtime. But I guess this first requires JDT UI support.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1708/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1708,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6PXAzw,eclipse.jdt.ui,2405174512,1708,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-10-10T13:58:30Z,2024-10-10T13:58:30Z,see https://github.com/eclipse-jdt/eclipse.jdt.core?tab=readme-ov-file#contributing,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6PXAzw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1708,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6QAPaz,eclipse.jdt.ui,2415982259,1708,NA,eitan-rosenberg,48506054,Eitan Rosenberg,,NA,2024-10-16T07:45:53Z,2024-10-16T07:45:53Z,"I am not sure that my problem relate to this issue.

I cannot use io.vavr:vavr:0.10.5 Multi-Release JAR at all in Eclipse. 
Works OK in maven and IntelliJ IDEA

Please refer to:
https://www.eclipse.org/forums/index.php/t/1116591/
https://github.com/vavr-io/vavr/issues/2905
https://github.com/moditect/moditect/issues/256
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6QAPaz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1714,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1714,eclipse.jdt.ui,2585028976,1714,"Clean up ""Convert if/else if/else chain with 3 blocks min to switch"" in 2024-09 changes code semantic by not considering null",FlorianKroiss,135011803,,,CLOSED,2024-10-14T07:14:34Z,2024-10-24T23:15:58Z,"Consider the following example:
```java
public class Dummy {

    enum TestEnum {
        A, B, C
    }

    public int doSomething(final TestEnum val) {
        if (val == TestEnum.A) {
            return 1;
        }
        else if (val == TestEnum.B) {
            return 2;
        }
        else if (val == TestEnum.C) {
            return 3;
        }
        return 4;
    }

}
```
Calling this method with `null` returns 4.

Applying the code clean up ""Convert if/else if/else chain with 3 blocks min to switch"" produces the following code
```java
public class Dummy {

    enum TestEnum {
        A, B, C
    }

    public int doSomething(final TestEnum val) {
        switch ( val ) {
            case TestEnum.A:
                return 1;
            case TestEnum.B:
                return 2;
            case TestEnum.C:
                return 3;
            default:
                break;
        }
        return 4;
    }

}
```

The cleaned up code now throws a `NullPointerException`, when being called with `null`, instead of falling through to `return 4;`.
I guess in case `null` was not explicitly treated in the original code, then the correct clean up would be to use `case null, default:` instead of `default:`.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1714/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1714,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ROgvy,eclipse.jdt.ui,2436500466,1714,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-10-24T23:15:57Z,2024-10-24T23:15:57Z,BTW: thanks @FlorianKroiss for reporting this.  The cleanup has been changed to add the case null when the Java version allows it and to create an if statement otherwise.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ROgvy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1715,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1715,eclipse.jdt.ui,2585512125,1715,Track I Build tests for jdt.ui,mpalat,4507939,Manoj  N Palat,manoj.palat@in.ibm.com,CLOSED,2024-10-14T10:10:04Z,2024-12-21T20:36:49Z,"refer: https://www.eclipse.org/lists/jdt-dev/msg02441.html

Check the I build failures - https://download.eclipse.org/eclipse/downloads/index.html

The following components will be tracked:
jdt.text.tests
jdt.ui.tests
jdt.ui.tests.refactoring
ltk.core.refactoring.tests
ltk.ui.refactoring.tests

Once the I build failures are checked, please mention the I build version and if there are issues, please create appropriate issues and mention the issue numbers","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1715/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1715,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6PsDmd,eclipse.jdt.ui,2410690973,1715,NA,mpalat,4507939,Manoj  N Palat,manoj.palat@in.ibm.com,NA,2024-10-14T10:11:04Z,2024-10-14T10:11:04Z,@noopur2507 please feel free to reassign - by default added. Also please add/modify the above - I may have missed. thanks,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6PsDmd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1715,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6QLNFn,eclipse.jdt.ui,2418856295,1715,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-10-17T08:08:57Z,2024-10-17T08:08:57Z,- [VisitorTest failing since I20241015-1820](https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1722#top) #1722,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6QLNFn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1715,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SaiEb,eclipse.jdt.ui,2456428827,1715,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-11-05T07:30:42Z,2024-11-05T07:30:42Z,* https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1752,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SaiEb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1715,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Ye44y,eclipse.jdt.ui,2558234162,1715,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2024-12-21T20:36:48Z,2024-12-21T20:36:48Z,As 4.34 is done closing this one.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Ye44y/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1716,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1716,eclipse.jdt.ui,2586842131,1716,copy code lines to a text block adds imports to the java class the text block is part of,carstenartur,3164220,Carsten Hammer,,CLOSED,2024-10-14T19:15:16Z,2024-10-23T01:28:42Z,"Obviously the behavior to add imports to the java file I copy code lines to is not changed when I copy code lines into a text block. The paste operation should take into account the context and not change the code outside of the text block.

This is
Version: 2024-09 (4.33.0)
Build id: 20240905-0614

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1716/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1719,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1719,eclipse.jdt.ui,2593339091,1719,"Quick fix for unused suppress warnings is showing wrong ""fix x versions of this error"" for multiple errors",jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-10-17T00:47:46Z,2024-10-17T17:38:06Z,"When a file has multiple instances of an unused suppress warnings annotation, the quick fix is showing an option to fix x instances of this error, but x is the total number of unused suppress warnings errors (not just the one being focused in the editor).  In addition, fixing all unused suppress warnings is showing the total number of errors instead of just offering the fix to fix all unused suppress warning errors.

In the following example, getting a quick fix for the first ""boxing"" usage, should show:

1. remove the ""boxing"" with an option to remove 2 instances of this error
2. remove all unused suppress warnings with no options given

```
package tests2;

@SuppressWarnings(""cast"")
class ParentClass {
	void method() {
		System.out.println(""ParentClass method"");
	}
}

@SuppressWarnings(""boxing"")
class A {
	SubClass subclass;

	void method() {
		System.out.println(""A class method"");
	}
}

@SuppressWarnings(""boxing"")
class SubClass extends ParentClass {
	void test() {
		method();
	}
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1719/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1721,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1721,eclipse.jdt.ui,2593681904,1721,New UI option to configure problem severity for unused lambda parameters,noopur2507,8749449,Noopur Gupta,,CLOSED,2024-10-17T05:46:24Z,2024-10-22T10:56:30Z,"See https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1701#issuecomment-2395963170.

Please note: https://github.com/eclipse-jdt/eclipse.jdt.core/pull/3055 also introduces an API option to control whether unused lambda parameters should be complained against.

The option string is declared as:

public static final String OPTION_ReportUnusedLambdaParameter = ""org.eclipse.jdt.core.compiler.problem.unusedLambdaParameter"";

Note: This option has an effect only on JDK22 and upwards. For 21 and below, the compiler does not emit the unused lambda parameter warning - since these are not actionable.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1721/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1721,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6QK0Gp,eclipse.jdt.ui,2418753961,1721,NA,nlisker,37422899,,,NA,2024-10-17T07:17:56Z,2024-10-17T07:17:56Z,"Lambdas are not the only places where unnamed patterns can occur: https://github.com/eclipse-jdt/eclipse.jdt.core/issues/3054#issue-2569095004
Are the other cases covered separately?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6QK0Gp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1721,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6QLFYr,eclipse.jdt.ui,2418824747,1721,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-10-17T07:55:11Z,2024-10-17T07:55:11Z,Opened https://github.com/eclipse-jdt/eclipse.jdt.core/issues/3102 for the required API.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6QLFYr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1721,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6QLHzc,eclipse.jdt.ui,2418834652,1721,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-10-17T07:59:45Z,2024-10-17T07:59:45Z,"> Lambdas are not the only places where unnamed patterns can occur: [eclipse-jdt/eclipse.jdt.core#3054 (comment)](https://github.com/eclipse-jdt/eclipse.jdt.core/issues/3054#issue-2569095004) Are the other cases covered separately?

This issue is only for the new UI option to configure the severity of compiler problem for unused lambda parameters i.e. under Preferences > Compiler > Errors/Warnings > Unnecessary code.

If other compiler problems need a UI option to configure the severity, please open separate issues for each.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6QLHzc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1722,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1722,eclipse.jdt.ui,2593930787,1722,VisitorTest failing since I20241015-1820,noopur2507,8749449,Noopur Gupta,,CLOSED,2024-10-17T07:53:36Z,2024-10-17T16:37:43Z,"org.eclipse.jdt.internal.common.VisitorTest is failing in I-builds since I20241015-1820.

https://download.eclipse.org/eclipse/downloads/drops4/I20241016-2000/testresults/html/org.eclipse.jdt.ui.tests_ep434I-unit-macM1-java17_macosx.cocoa.aarch64_17.html

```
VisitorTest

Missing system library

java.lang.IllegalStateException: Missing system library
at org.eclipse.jdt.core.dom.ASTParser.checkForSystemLibrary(ASTParser.java:311)
at org.eclipse.jdt.core.dom.ASTParser.getClasspath(ASTParser.java:272)
at org.eclipse.jdt.core.dom.ASTParser.internalCreateASTCached(ASTParser.java:1299)
at org.eclipse.jdt.core.dom.ASTParser.lambda$1(ASTParser.java:1178)
at org.eclipse.jdt.internal.core.JavaModelManager.cacheZipFiles(JavaModelManager.java:5692)
at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1178)
at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:918)
at org.eclipse.jdt.internal.common.VisitorTest.init(VisitorTest.java:81)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1722/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1722,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6QLLg-,eclipse.jdt.ui,2418849854,1722,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-10-17T08:05:44Z,2024-10-17T08:05:44Z,Reverting JDT/Core commit 74d062b38d3003638127127cc5358dd9f79df0f4 from https://github.com/eclipse-jdt/eclipse.jdt.core/issues/3047 is turning the test green.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6QLLg-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1722,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6QMGLV,eclipse.jdt.ui,2419090133,1722,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-10-17T09:58:06Z,2024-10-17T09:58:06Z,"Thanks, @noopur2507 , I'll take a look.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6QMGLV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1723,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1723,eclipse.jdt.ui,2595241467,1723,VisitorTest failing since ASTParser changes,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-10-17T16:44:44Z,2024-10-17T17:14:00Z,The JDT UI test VisitorTest now fails since some added checking has been made in ASTParser.  Its setup needs to be rewritten.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1723/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1733,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1733,eclipse.jdt.ui,2610452705,1733,Add N&N for new UI option to configure problem severity for unused lambda parameters,noopur2507,8749449,Noopur Gupta,,CLOSED,2024-10-24T04:55:27Z,2024-10-24T05:01:32Z,"Add N&N for new UI option to configure problem severity for unused lambda parameters.
https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1721","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1733/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1734,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1734,eclipse.jdt.ui,2615038212,1734,Transfer from Bugzilla - Issue with new class creation wizard ,srikanth-sankaran,131454720,Srikanth Sankaran,,OPEN,2024-10-25T20:23:16Z,2024-10-28T07:54:06Z,"See https://bugs.eclipse.org/bugs/show_bug.cgi?id=574499#c4  - I didn't quite verify if it exists now, just verified that the JDT-core portions are handled for https://bugs.eclipse.org/bugs/show_bug.cgi?id=574499","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1734/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1737,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1737,eclipse.jdt.ui,2617645243,1737,"""Move class"" refactoring causes code compilation errors",assdfsdafasfa,170524487,,,OPEN,2024-10-28T08:13:07Z,2024-10-28T08:24:59Z,"move class Inner into Target:
 ```java
package a;
class Upper {
  class Inner {
  }
  Inner i;
}
package b;
class Target {
}
 ```
Code after refactoring:
 ```java
package a;
class Upper {
  Inner i;
}
package b;
class Target {
}
class Inner {
  }
 ```
Compile error due to moving classes not belonging to the same package.
![image](https://github.com/user-attachments/assets/234b4c8f-244a-4c2f-b86c-5a6b05922c56)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1737/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1738,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1738,eclipse.jdt.ui,2618084536,1738,“Pull Down Field” refactoring caused a change in the code behavior,assdfsdafasfa,170524487,,,OPEN,2024-10-28T11:03:44Z,2024-10-28T11:03:44Z,"Code before refactoring:
```java
 class A extends C {
}

class B {
	void main() {
		final int b = 2;
		new A() {
			void m() {
				System.out.println(b);
			}
		};
	}
}
class C {
	protected final int b = 1;
}
```
Code after refactoring:
```java
 class A extends C {
	protected final int b = 1;
}

class B {
	void main() {
		final int b = 2;
		new A() {
			void m() {
				System.out.println(b);
			}
		};
	}
}
class C {
}
```
The output before code refactoring is 1, and the output after refactoring is 2. The code behavior has changed.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1738/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1739,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1739,eclipse.jdt.ui,2618183591,1739,“Inline method” refactoring causes changes in calling relationships,assdfsdafasfa,170524487,,,CLOSED,2024-10-28T11:45:34Z,2024-10-30T02:25:46Z,"Code before refactoring:
```java
class A {
	void m(Object m) {
		System.out.println(""A"");
	}
      // inline method 'test()'
	void test() {
		m(""1"");
	}
}

class B extends A {
	void m() {
		System.out.println(""B"");
	}

	void f() {
		test();
	}
}
```
Code after refactoring:
```java
class A {
	void m(Object m) {
		System.out.println(""A"");
	}
}

class B extends A {
	void m() {
		System.out.println(""B"");
	}

	void f() {
		m(""1"");
	}
}
```
Before the method is refactored, the m() method of the parent class is called. After the refactoring, the m() method of the child class is called. The calling relationship changes.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1739/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1740,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1740,eclipse.jdt.ui,2619409484,1740,Should the Java editor & hover pay any respect to the --release option,stephan-herrmann,24587985,Stephan Herrmann,,OPEN,2024-10-28T19:56:15Z,2024-10-28T20:04:13Z,"Spawned off from https://github.com/eclipse-jdt/eclipse.jdt.core/issues/3168 :

When a project is configured with --release that differs from the actual JDK used, then the IDE runs into the following schizophrenia:
* some parts of the tooling will see JDK classes as they were in the version configured using --release
  *  currently, the --release version is used only in actual compilation, but the goal in jdt.core would be to use that version consistently for all ""semantic"" operations, including reconciler, search etc.
* source attachment and javadoc location will however correspond to the actual JDK

As a result, users may get an error like ""The method of(null, null) is undefined for the type URL"" in their source code, but when they navigate to class URL (which uses the source attachment) that method may actually be there.

This ticket is filed to stipulate discussion, if there is a viable way to ""explain"" this situation to the user.

Here's a somewhat advanced idea: when opening a JDK class in an editor, jdt.core could be asked if that class has any difference between the --release version and the actual JDK version. If so, somehow signal to the user: ""This class has changes between the currently shown version and the version configured using --release"" or similar.

Similarly for javadoc hovers.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1740/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1740,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Rlcfd,eclipse.jdt.ui,2442512349,1740,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-10-28T20:04:11Z,2024-10-28T20:04:11Z,One more idea from https://github.com/eclipse-jdt/eclipse.jdt.core/issues/3168: The editor could perhaps evaluate `@since` tags to visualize when classes / methods have a higher since version than the current projects target version.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Rlcfd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1742,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1742,eclipse.jdt.ui,2620318486,1742,Error on startup with Java class editor active,iloveeclipse,964108,Andrey Loskutov,,CLOSED,2024-10-29T06:58:30Z,2024-12-16T07:31:53Z,"I've had some class files opened in the debuggee IDE, starting it next time resulted in the error below

![image](https://github.com/user-attachments/assets/e6407106-01c7-482f-ac72-94cde209d907)

```
!ENTRY org.eclipse.ui 4 4 2024-10-29 07:50:47.251
!MESSAGE Unable to create part
!STACK 1
org.eclipse.ui.PartInitException: Its not allow to modify JavaModel during ReadOnly action. delta=Java Model[*]: {CHILDREN}
	External Plug-in Libraries[*]: {CHILDREN | RESOLVED CLASSPATH CHANGED}
... lot of other delta lines ...
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.create(CompatibilityPart.java:350)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:56)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:977)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:939)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalInject(InjectorImpl.java:139)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:386)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:312)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:203)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:90)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:59)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:42)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributedPartRenderer.createWidget(ContributedPartRenderer.java:134)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:991)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.showTab(StackRenderer.java:1389)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:114)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:676)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:672)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run(PartRenderingEngine.java:543)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:527)
	at org.eclipse.e4.ui.workbench.renderers.swt.ElementReferenceRenderer.createWidget(ElementReferenceRenderer.java:73)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:991)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:147)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:672)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:147)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:672)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:147)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:672)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:48)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:672)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:79)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:114)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:61)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:676)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:147)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:672)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:662)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:672)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1079)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:639)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:546)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:178)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:668)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:605)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1481)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1454)
Caused by: java.lang.IllegalStateException: Its not allow to modify JavaModel during ReadOnly action. delta=Java Model[*]: {CHILDREN}
	External Plug-in Libraries[*]: {CHILDREN | RESOLVED CLASSPATH CHANGED}
... lot of other delta lines ...
	at org.eclipse.jdt.internal.core.DeltaProcessor.registerJavaModelDelta(DeltaProcessor.java:2025)
	at org.eclipse.jdt.internal.core.JavaModelOperation.addDelta(JavaModelOperation.java:187)
	at org.eclipse.jdt.internal.core.ChangeClasspathOperation.classpathChanged(ChangeClasspathOperation.java:71)
	at org.eclipse.jdt.internal.core.SetContainerOperation.executeOperation(SetContainerOperation.java:118)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:751)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:816)
	at org.eclipse.jdt.internal.core.JavaModelManager.getClasspathContainer(JavaModelManager.java:2137)
	at org.eclipse.jdt.core.JavaCore.getClasspathContainer(JavaCore.java:3970)
	at org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:3127)
	at org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:3291)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:2405)
	at org.eclipse.jdt.internal.core.JavaProject.buildStructure(JavaProject.java:488)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:246)
	at org.eclipse.jdt.internal.core.Openable.openAncestors(Openable.java:508)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:228)
	at org.eclipse.jdt.internal.core.Openable.openAncestors(Openable.java:508)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:228)
	at org.eclipse.jdt.internal.core.Openable.openAncestors(Openable.java:508)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:228)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:569)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:292)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:278)
	at org.eclipse.jdt.internal.core.Openable.getBuffer(Openable.java:276)
	at org.eclipse.jdt.internal.core.AbstractClassFile.getBuffer(AbstractClassFile.java:247)
	at org.eclipse.jdt.internal.core.AbstractClassFile.getSourceRange(AbstractClassFile.java:373)
	at org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor.probeInputForSource(ClassFileEditor.java:791)
	at org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor.doSetInputCached(ClassFileEditor.java:678)
	at org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor.lambda$1(ClassFileEditor.java:663)
	at org.eclipse.jdt.core.JavaCore.lambda$1(JavaCore.java:6166)
	at org.eclipse.jdt.internal.core.JavaModelManager.callReadOnly(JavaModelManager.java:5677)
	at org.eclipse.jdt.core.JavaCore.callReadOnly(JavaCore.java:6150)
	at org.eclipse.jdt.core.JavaCore.runReadOnly(JavaCore.java:6165)
	at org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor.doSetInput(ClassFileEditor.java:663)
	at org.eclipse.ui.texteditor.AbstractTextEditor.lambda$1(AbstractTextEditor.java:3171)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2285)
	at org.eclipse.ui.texteditor.AbstractTextEditor.internalInit(AbstractTextEditor.java:3188)
	at org.eclipse.ui.texteditor.AbstractTextEditor.init(AbstractTextEditor.java:3213)
	at org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor.lambda$0(ClassFileEditor.java:656)
	at org.eclipse.jdt.core.JavaCore.lambda$1(JavaCore.java:6166)
	at org.eclipse.jdt.internal.core.JavaModelManager.cacheZipFiles(JavaModelManager.java:5692)
	at org.eclipse.jdt.internal.core.JavaModelManager.callReadOnly(JavaModelManager.java:5681)
	at org.eclipse.jdt.core.JavaCore.callReadOnly(JavaCore.java:6150)
	at org.eclipse.jdt.core.JavaCore.runReadOnly(JavaCore.java:6165)
	at org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor.init(ClassFileEditor.java:656)
	at org.eclipse.ui.internal.EditorReference.initialize(EditorReference.java:353)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.create(CompatibilityPart.java:344)
	... 108 more
!SUBENTRY 1 org.eclipse.ui 4 0 2024-10-29 07:50:47.254
!MESSAGE Its not allow to modify JavaModel during ReadOnly action. delta=Java Model[*]: {CHILDREN}
	External Plug-in Libraries[*]: {CHILDREN | RESOLVED CLASSPATH CHANGED}
... lot of other delta lines ...
!STACK 0
java.lang.IllegalStateException: Its not allow to modify JavaModel during ReadOnly action. delta=Java Model[*]: {CHILDREN}
	External Plug-in Libraries[*]: {CHILDREN | RESOLVED CLASSPATH CHANGED}
... lot of other delta lines ...
	at org.eclipse.jdt.internal.core.DeltaProcessor.registerJavaModelDelta(DeltaProcessor.java:2025)
	at org.eclipse.jdt.internal.core.JavaModelOperation.addDelta(JavaModelOperation.java:187)
	at org.eclipse.jdt.internal.core.ChangeClasspathOperation.classpathChanged(ChangeClasspathOperation.java:71)
	at org.eclipse.jdt.internal.core.SetContainerOperation.executeOperation(SetContainerOperation.java:118)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:751)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:816)
	at org.eclipse.jdt.internal.core.JavaModelManager.getClasspathContainer(JavaModelManager.java:2137)
	at org.eclipse.jdt.core.JavaCore.getClasspathContainer(JavaCore.java:3970)
	at org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:3127)
	at org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:3291)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:2405)
	at org.eclipse.jdt.internal.core.JavaProject.buildStructure(JavaProject.java:488)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:246)
	at org.eclipse.jdt.internal.core.Openable.openAncestors(Openable.java:508)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:228)
	at org.eclipse.jdt.internal.core.Openable.openAncestors(Openable.java:508)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:228)
	at org.eclipse.jdt.internal.core.Openable.openAncestors(Openable.java:508)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:228)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:569)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:292)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:278)
	at org.eclipse.jdt.internal.core.Openable.getBuffer(Openable.java:276)
	at org.eclipse.jdt.internal.core.AbstractClassFile.getBuffer(AbstractClassFile.java:247)
	at org.eclipse.jdt.internal.core.AbstractClassFile.getSourceRange(AbstractClassFile.java:373)
	at org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor.probeInputForSource(ClassFileEditor.java:791)
	at org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor.doSetInputCached(ClassFileEditor.java:678)
	at org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor.lambda$1(ClassFileEditor.java:663)
	at org.eclipse.jdt.core.JavaCore.lambda$1(JavaCore.java:6166)
	at org.eclipse.jdt.internal.core.JavaModelManager.callReadOnly(JavaModelManager.java:5677)
	at org.eclipse.jdt.core.JavaCore.callReadOnly(JavaCore.java:6150)
	at org.eclipse.jdt.core.JavaCore.runReadOnly(JavaCore.java:6165)
	at org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor.doSetInput(ClassFileEditor.java:663)
	at org.eclipse.ui.texteditor.AbstractTextEditor.lambda$1(AbstractTextEditor.java:3171)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2285)
	at org.eclipse.ui.texteditor.AbstractTextEditor.internalInit(AbstractTextEditor.java:3188)
	at org.eclipse.ui.texteditor.AbstractTextEditor.init(AbstractTextEditor.java:3213)
	at org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor.lambda$0(ClassFileEditor.java:656)
	at org.eclipse.jdt.core.JavaCore.lambda$1(JavaCore.java:6166)
	at org.eclipse.jdt.internal.core.JavaModelManager.cacheZipFiles(JavaModelManager.java:5692)
	at org.eclipse.jdt.internal.core.JavaModelManager.callReadOnly(JavaModelManager.java:5681)
	at org.eclipse.jdt.core.JavaCore.callReadOnly(JavaCore.java:6150)
	at org.eclipse.jdt.core.JavaCore.runReadOnly(JavaCore.java:6165)
	at org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor.init(ClassFileEditor.java:656)
	at org.eclipse.ui.internal.EditorReference.initialize(EditorReference.java:353)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.create(CompatibilityPart.java:344)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:56)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:977)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:939)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalInject(InjectorImpl.java:139)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:386)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:312)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:203)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:90)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:59)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:42)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributedPartRenderer.createWidget(ContributedPartRenderer.java:134)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:991)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.showTab(StackRenderer.java:1389)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:114)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:676)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:672)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run(PartRenderingEngine.java:543)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:527)
	at org.eclipse.e4.ui.workbench.renderers.swt.ElementReferenceRenderer.createWidget(ElementReferenceRenderer.java:73)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:991)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:147)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:672)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:147)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:672)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:147)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:672)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:48)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:672)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:79)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:114)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:61)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:676)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:147)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:672)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:662)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:672)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1079)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:639)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:546)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:178)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:668)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:605)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1481)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1454)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1742/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1742,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Roriv,eclipse.jdt.ui,2443360431,1742,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-10-29T06:59:06Z,2024-10-29T06:59:06Z,@jukzi : could you please check?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Roriv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1742,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Ro_R_,eclipse.jdt.ui,2443441279,1742,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-10-29T07:24:51Z,2024-10-29T07:24:51Z,"wow, long stacktrace. i'll take a look later. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Ro_R_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1742,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6R_fz6,eclipse.jdt.ui,2449341690,1742,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-10-31T08:49:36Z,2024-10-31T08:49:36Z,"Could not reproduce, but in principle the event is the same in org.eclipse.jdt.core.tests.model.ClasspathInitializerTests.testContainerInitializer03() where a
`JavaModelManager.callReadOnly(()->getJavaProject(""P2"").getResolvedClasspath(true));
`
would fail with the same error, which is a pitty, as as ""get"" should not modify anything.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6R_fz6/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1743,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1743,eclipse.jdt.ui,2620446259,1743,‘‘Move Class’’ refactoring causes access rights errors,assdfsdafasfa,170524487,,,OPEN,2024-10-29T07:55:28Z,2024-10-29T07:55:28Z,"Code before refactoring:
 ```java
class OriginalClass {
    C b;
// move class 'StaticInnerClass' to 'C'
    class StaticInnerClass {
        public static void innerMethod() {
        }
    }
    public void original() {
        StaticInnerClass.innerMethod();
    }
}

class C {
}
```
Code after refactoring:
 ```java
class OriginalClass {
	C b;
	public void original() {
		StaticInnerClass.innerMethod();
    }
}

class C {
	// move class 'StaticInnerClass' to 'C'
	class StaticInnerClass {
		public static void innerMethod() {
		}
	}

}

```
Error:
![image](https://github.com/user-attachments/assets/957e6526-549d-4d42-b3c1-5db7a4999fb1)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1743/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1744,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1744,eclipse.jdt.ui,2620597523,1744,"""Move Field"" refactoring causes the assignment statement to change.",assdfsdafasfa,170524487,,,OPEN,2024-10-29T09:08:26Z,2024-10-29T09:08:26Z,"When moving the selected field i of class C to class B, before refactoring, j is assigned to 0, and after refactoring, j is assigned to 1.
Code before refactoring: 
```java
public class A {
	    void m(){
	        int i= 0;
	        class B {
	            int j;
	            void k(){
	                j= i;
	            }
	        }
	        class C {
	        	B b;
		 // move 'i' to class 'B'
	            int i=1;
	        }
	    };
	}
```
Code after refactoring: 
 ```java
public class A {
	void m(){
        int i= 0;
        class B {
            int j;
			// move 'i' to class 'B'
			int i=1;
            void k(){
                j= i;
            }
        }

        class C {
        	B b;
        }
    };
}

```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1744/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1745,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1745,eclipse.jdt.ui,2620625563,1745,"""Move Field"" refactoring causes calling field to change",assdfsdafasfa,170524487,,,OPEN,2024-10-29T09:18:49Z,2024-10-29T09:18:49Z,"Move the field ‘b’ in class C to class A. Before refactoring, the output of the m() method is 2, and after moving, the output is 1.
Code before refactoring: 
```java
public class A {
}
class B {
	void main() {
		final int b = 2;
		new A() {
			void m() {
				System.out.println(b);
			}
		};
	}
}
class C {
	A a;
	protected final int b = 1;
}
```
Code after refactoring: 
 ```java
public class A {
	protected final int b = 1;
}
class B {
	void main() {
		final int b = 2;
		new A() {
			void m() {
				System.out.println(b);
			}
		};
	}
}
class C {
	A a;
}
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1745/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1746,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1746,eclipse.jdt.ui,2620775293,1746,"""Move Field"" refactoring into interface causes syntax error",assdfsdafasfa,170524487,,,OPEN,2024-10-29T10:10:41Z,2024-10-29T10:10:41Z,"Code before refactoring:
 ```java
interface I {
}
 class C implements I {
	boolean value;
}
```
Code after refactoring:
 ```java
interface I {
	boolean value;
}
 class C implements I {	
}
```
Error:
![image](https://github.com/user-attachments/assets/b630c87b-e716-40f0-bae6-cbea8d35d405)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1746/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1748,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1748,eclipse.jdt.ui,2622699207,1748,“Inline method” refactoring causes changes in calling relationships,assdfsdafasfa,170524487,,,OPEN,2024-10-30T02:25:51Z,2024-10-30T02:25:51Z,"Before the method is refactored, the m() method of the parent class is called. After the refactoring, the m() method of the child class is called. The calling relationship changes.
Code before refactoring:
 ```java

class A {
	void m(Object m) {
		System.out.println(""A"");
	}
      // inline method 'test()'
	void test() {
		m(""1"");
	}
}

class B extends A {
	void m(Object m) {
		System.out.println(""B"");
	}

	void f() {
		test();
	}
}
```
Code after refactoring:
```java
class A {
	void m(Object m) {
		System.out.println(""A"");
	}
}

class B extends A {
	void m(Object m) {
		System.out.println(""B"");
	}

	void f() {
		m(""1"");
	}
}
```

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1748/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1749,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1749,eclipse.jdt.ui,2623366451,1749,“Change Method Signature” refactoring：Reflection causes code behavior changes,assdfsdafasfa,170524487,,,CLOSED,2024-10-30T09:13:18Z,2024-11-04T22:13:22Z,"Select methodToBeRenamed(), and click Change Method Signature refactoring, change the method name to newMethod(), the string remains unchanged, causing code behavior to change.
Code before refactoring:
 ```java
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
class SomeService{
    public void methodToBeRenamed(){}
}
class Test{
    void test() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {
        Method method = SomeService.class.getMethod(""methodToBeRenamed"",null);
        method.invoke(new SomeService());
    }
}
```
Code after refactoring: 
 ```java
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
class SomeService{
    public void newMethod(){}
}
class Test{
    void test() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {
        Method method = SomeService.class.getMethod(""methodToBeRenamed"",null);
        method.invoke(new SomeService());
    }
}
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1749/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1749,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SYKiy,eclipse.jdt.ui,2455808178,1749,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-11-04T22:13:22Z,2024-11-04T22:13:22Z,"Closing as WONTFIX.  Supporting reflection would require processing every class to determine if reflection is being used for the particular class and method in question.  It is possible the strings might be supplied dynamically through a variable (I know of one example we have in Linux Tools Docker tooling where it is an array of strings that is used).  Typically, such reflection is used when using a binary third-party library or the Java library and one is trying to get around modifier restrictions.  In typical reflection uses, a user doesn't have the ability to rename the method.  For classes in the user control, it is far more likely and better practive that they would be accessed directly.  ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SYKiy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1750,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1750,eclipse.jdt.ui,2623372099,1750,"""Change Method Signature refactoring"": causing the method call change",assdfsdafasfa,170524487,,,CLOSED,2024-10-30T09:15:56Z,2024-11-27T23:50:44Z,"Select foo2() and click Change Method Signature refactoring to change the method name to foo1(), causing the method call in main() to change.

Code before refactoring:
 ```java
class RenameTest {
    static void foo1(Number n) {
        System.out.println(""1"");
    }
    //change method signature: new method name ""foo1""
    static void foo2(Long i) {
        System.out.println(""2"");
    }
    public static void main(String[] args) {
        long n = 0;
        foo1(n);// look here
    }
}
```
Code after refactoring: 
 ```java
class RenameTest {
    static void foo1(Number n) {
        System.out.println(""1"");
    }
    //change method signature: new method name ""foo1""
    static void foo1(Long i) {
        System.out.println(""2"");
    }
    public static void main(String[] args) {
        long n = 0;
        foo1(n);// look here
    }
}
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1750/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1751,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1751,eclipse.jdt.ui,2623375295,1751,"""Change Method Signature refactoring"": Causes method recursion",assdfsdafasfa,170524487,,,CLOSED,2024-10-30T09:17:31Z,2024-11-06T02:39:04Z,"Select m(), and click Change Method Signature refactoring to change the method name to k(), causing method recursion.

Code before refactoring:
 ```java
class NewClass {
    // change method signature 'm' to 'k'
    public void m(){}
    class B{
        void k(){
            m();
        }
    }
}
```
Code after refactoring: 
 ```java
class NewClass {
    // change method signature 'm' to 'k'
    public void k(){}
    class B{
        void k(){
            k();
        }
    }
}
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1751/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1752,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1752,eclipse.jdt.ui,2623858447,1752,JavaLeakTest fail on windows since I20241021-0550,jukzi,51790620,Jörg Kubitz,,CLOSED,2024-10-30T11:55:08Z,2024-11-02T11:54:35Z,"https://download.eclipse.org/eclipse/downloads/drops4/I20241021-0550/testresults/html/org.eclipse.jdt.ui.tests_ep434I-unit-win32-java17_win32.win32.x86_64_17.html

locally reproducable (jdk-21.02.+13)

for example:

```
java.lang.AssertionError: Expected instance count: 0, actual: 1
Element 0
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor
  org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer#this$0 -> org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor@47d45509
  org.eclipse.jdt.internal.ui.javaeditor.breadcrumb.EditorBreadcrumb#fTextViewer -> org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer@75f0f0ce
  org.eclipse.jdt.internal.ui.javaeditor.breadcrumb.EditorBreadcrumb$$Lambda/0x000001ea18e9d510#arg$1 -> org.eclipse.jdt.internal.ui.javaeditor.JavaEditorBreadcrumb@70ad3365
  java.lang.Object[0] -> org.eclipse.jdt.internal.ui.javaeditor.breadcrumb.EditorBreadcrumb$$Lambda/0x000001ea18e9d510@570c7
  org.eclipse.core.runtime.ListenerList#listeners -> [Ljava.lang.Object;@5d6b1772
  org.eclipse.jdt.internal.ui.javaeditor.breadcrumb.BreadcrumbViewer#fMenuListeners -> [org.eclipse.jdt.internal.ui.javaeditor.breadcrumb.EditorBreadcrumb$$Lambda/0x000001ea18e9d510@570c
  org.eclipse.jdt.internal.ui.javaeditor.breadcrumb.BreadcrumbItem#fParent -> org.eclipse.jdt.internal.ui.javaeditor.JavaEditorBreadcrumb$ProblemBreadcrumbViewer@827fd19
  org.eclipse.jdt.internal.ui.javaeditor.breadcrumb.BreadcrumbItemDropDown#fParent -> BreadcrumbItem {*Disposed*}
  org.eclipse.jdt.internal.ui.javaeditor.breadcrumb.BreadcrumbItemDropDown$AccessibleArrowImage#this$0 -> org.eclipse.jdt.internal.ui.javaeditor.breadcrumb.BreadcrumbItemDropDown@13d5c9ab
  org.eclipse.jface.resource.ImageDescriptor$$Lambda/0x000001ea18b00000#arg$1 -> org.eclipse.jdt.internal.ui.javaeditor.breadcrumb.BreadcrumbItemDropDown$AccessibleArrowImage@3c795
  org.eclipse.swt.graphics.Image#imageDataProvider -> org.eclipse.jface.resource.ImageDescriptor$$Lambda/0x000001ea18b00000@3189c4dc
  java.util.concurrent.ConcurrentHashMap$Node#key -> Image {*DISPOSED*}
  java.util.concurrent.ConcurrentHashMap$Node[341] -> Image {*DISPOSED*}=true
  java.util.concurrent.ConcurrentHashMap#table -> [Ljava.util.concurrent.ConcurrentHashMap$Node;@7764ef1d
  java.util.concurrent.ConcurrentHashMap$CollectionView#map -> {Image {9903175}=true, Image {12590217}=true, Image {*DISPOSED*}=true, Image {*DISPOSED*}=true, Pat
  org.eclipse.swt.graphics.Device#resourcesWithZoomSupport -> [Image {9903175}, Image {12590217}, Image {*DISPOSED*}, Image {*DISPOSED*}, Pattern {*DISPOSED*}, I
  org.eclipse.ui.internal.Workbench#display -> org.eclipse.swt.widgets.Display@7d070ef5
  org.eclipse.osgi.internal.serviceregistry.ServiceRegistrationImpl#service -> org.eclipse.ui.internal.Workbench@e7529ac
  java.lang.Object[304] -> {org.eclipse.ui.IWorkbench}={service.id=309, service.bundleid=538, service.scope=singleton, id=4125
  java.util.ArrayList#elementData -> [Ljava.lang.Object;@6889e714
  org.eclipse.osgi.internal.serviceregistry.ServiceRegistry#allPublishedServices -> [{org.eclipse.osgi.framework.log.FrameworkLog}={service.id=4, service.bundleid=0, service.scope=bun
  org.eclipse.osgi.internal.framework.EquinoxContainer#serviceRegistry -> org.eclipse.osgi.internal.serviceregistry.ServiceRegistry@74e1d60b
  org.eclipse.osgi.internal.loader.BundleLoader#container -> Equinox Container: cf6b04b2-d630-43bf-871c-f43e93244ab0
  org.eclipse.osgi.internal.loader.EquinoxClassLoader#delegate -> org.eclipse.jdt.ui.tests_3.15.700.qualifier
  org.eclipse.osgi.internal.loader.EquinoxClassLoader -> org.eclipse.osgi.internal.loader.EquinoxClassLoader@6823f652[org.eclipse.jdt.ui.tests:3.15.700.qual

. Actual: 0
	at org.junit.Assert.fail(Assert.java:89)
	at org.junit.Assert.failEquals(Assert.java:187)
	at org.junit.Assert.assertNotEquals(Assert.java:201)
	at org.eclipse.jdt.ui.leaktest.LeakTestCase.assertInstanceCount(LeakTestCase.java:129)
	at org.eclipse.jdt.ui.tests.leaks.JavaLeakTest.internalTestEditorClose(JavaLeakTest.java:339)
	at org.eclipse.jdt.ui.tests.leaks.JavaLeakTest.testJavaEditorBreadcrumbCloseAll(JavaLeakTest.java:198)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)


```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1752/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1752,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6R2BHR,eclipse.jdt.ui,2446856657,1752,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-10-30T11:56:34Z,2024-10-30T11:56:34Z,"![image](https://github.com/user-attachments/assets/0d156d01-348e-4e41-9138-8417a02f38db)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6R2BHR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1752,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6R2JJq,eclipse.jdt.ui,2446889578,1752,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-10-30T12:03:25Z,2024-10-30T12:03:25Z,Note that it did not fail in https://download.eclipse.org/eclipse/downloads/drops4/I20241014-0530/testResults.php or before. Between 10-14 and 10-21 the I build did not run on windows at all.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6R2JJq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1752,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6R2OFT,eclipse.jdt.ui,2446909779,1752,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-10-30T12:07:42Z,2024-10-30T12:07:42Z,"This may indicate a serious resource leak. i do not fully understand the error message but the 
`Device#resourcesWithZoomSupport -> [Image` may indidicate a resource leak due to SWT changes. 
@HeikoKlare any idea?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6R2OFT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1752,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6R3c7g,eclipse.jdt.ui,2447232736,1752,NA,HeikoKlare,755472,Heiko Klare,heiko.klare@vector.com,NA,2024-10-30T13:52:20Z,2024-10-30T13:52:20Z,"This seems to be introduced by https://github.com/eclipse-platform/eclipse.platform.swt/pull/1477
Reverting the commit of the PR makes the tests succeed again. Reproduction is easiest with just executing `JavaLeakTest#testJavaEditorBreadcrumbCloseAll()`.
Might either be because the test makes a false assumption that does not hold with the SWT change anymore or because the SWT commit produced a regression. The latter is of course the more likely case. We will have a look (@amartya4256 @akoch-yatta, @fedejeanne) and either come up with a solution or revert that commit for M3 and reapproach the functionality for M1.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6R3c7g/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1752,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6R_O2K,eclipse.jdt.ui,2449272202,1752,NA,HeikoKlare,755472,Heiko Klare,heiko.klare@vector.com,NA,2024-10-31T08:06:47Z,2024-10-31T08:06:47Z,"This should have been fixed via https://github.com/eclipse-platform/eclipse.platform.swt/pull/1565
We can validate this with tomorrow's I-Build.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6R_O2K/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1752,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SNQOz,eclipse.jdt.ui,2452947891,1752,NA,HeikoKlare,755472,Heiko Klare,heiko.klare@vector.com,NA,2024-11-02T10:31:49Z,2024-11-02T10:31:49Z,"Recent I-Build results show that https://github.com/eclipse-platform/eclipse.platform.swt/pull/1565 has fixed this issue:
https://download.eclipse.org/eclipse/downloads/drops4/I20241101-1800/testResults.php

@jukzi maybe you want to close this issue (I have no permission to do so)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SNQOz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1754,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1754,eclipse.jdt.ui,2624757459,1754,`JdtTextTestSuite` `PluginsNotLoadedTest.pluginsNotLoaded` fails intermittently  ,BoykoAlex,6433390,Alex Boyko,,OPEN,2024-10-30T17:05:35Z,2024-10-30T17:19:28Z,"The test `PluginsNotLoadedTest.pluginsNotLoaded` fails intermittently with the stack trace:
```
java.lang.AssertionError: 
Wrong bundles loaded:
- org.eclipse.jdt.junit
 expected:<0> but was:<24>
	at org.junit.Assert.fail(Assert.java:89)
	at org.junit.Assert.failNotEquals(Assert.java:835)
	at org.junit.Assert.assertEquals(Assert.java:647)
	at org.eclipse.jdt.text.tests.PluginsNotLoadedTest.pluginsNotLoaded(PluginsNotLoadedTest.java:278)
```

Something must have changed in the platform to cause this test to fail.

PRs might be blamed for this issue while they have nothing to do with it.

See:
https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1747
https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1741
https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1707 (looks like MD file change)

All have the same test failure

Last of all I've created a dumb PR changing the date in the license header - the same test has failed: https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1753","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1754/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1755,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1755,eclipse.jdt.ui,2625736934,1755,”Pull down refactoring” Code behavior errors due to reflection,assdfsdafasfa,170524487,,,CLOSED,2024-10-31T01:34:53Z,2024-10-31T23:24:57Z,"Select doSomething(), select Pull down refactoring, which results in the inability to access methods based on class names.
Code before refactoring:
 ```java
class A {
    public void doSomething() {
        System.out.println(""In A"");
    }
    public static void main(String[] args) throws Exception {
        Class<?> clazz = Class.forName(""A"");
        Method method = clazz.getMethod(""doSomething"");
        method.invoke(clazz.newInstance());
    }
}
class B extends A {
}
```

Code after refactoring: 
 ```java
class A {

    public static void main(String[] args) throws Exception {
        Class<?> clazz = Class.forName(""A"");
        Method method = clazz.getMethod(""doSomething"");
        method.invoke(clazz.newInstance());
    }
}
class B extends A {
    public void doSomething() {
        System.out.println(""In A"");
    }
}
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1755/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1755,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SF3nT,eclipse.jdt.ui,2451012051,1755,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-10-31T23:24:57Z,2024-10-31T23:24:57Z,"Closing this as WONTFIX.  It is impossible to protect against this without parsing all classes out there for reflection.  This is not reasonable and if a user does this, they will have to deal with an exception generated and modify the code as needed manually. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SF3nT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1756,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1756,eclipse.jdt.ui,2625742550,1756,"""Pull down refactoring"":changes the method call relationship",assdfsdafasfa,170524487,,,CLOSED,2024-10-31T01:38:40Z,2024-10-31T23:03:32Z,"Select f(), select Pull down refactoring, which changes the method call relationship. Before refactoring, call the m() method of class A, and after refactoring, call the m() method of class C.

Code before refactoring:
 ```java
class A {
    void m(Object m) {
        System.out.println(""A"");
    }
}

class B extends A {
    void k(String m) {
        System.out.println(""B"");
    }
    // pull down 'f()'
    void f() {
        m(""1"");
    }
}
class C extends B{
    void m(String m) {
        System.out.println(""B"");
    }
}
```

Code after refactoring: 
 ```java
class A {
    void m(Object m) {
        System.out.println(""A"");
    }
}
class B extends A {
    void k(String m) {
        System.out.println(""B"");
    }
}
class C extends B{
    void m(String m) {
        System.out.println(""B"");
    }
    // pull down 'f()'
    void f() {
        m(""1"");
    }
}
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1756/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1756,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SFzJK,eclipse.jdt.ui,2450993738,1756,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-10-31T23:03:32Z,2024-10-31T23:03:32Z,"Closing this.  It was already fixed.  The call to m(""1"") gets changed to super.m(""1"").  I did find an indexing exception that has now been fixed.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SFzJK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1757,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1757,eclipse.jdt.ui,2625760611,1757,"""Extract method"" refactoring causes the call relationship to change",assdfsdafasfa,170524487,,,CLOSED,2024-10-31T01:46:41Z,2024-11-04T12:09:34Z,"Select the method to see the output statement in (), select Extract Method Refactoring, the new method name is m, resulting in a change in the calling relationship. Before refactoring, f() calls the method in class A. After refactoring, f() calls the m() method in class B.

Code before refactoring:
 ```java
class A {
    void m(Object m) {
        System.out.println(""A"");
    }
}

class B extends A {
    void k() {
        String s=null;
        //extract statements， new method name is ‘m()’
        System.out.println(s);
    }

    void f() {
        m(""1"");
    }
}
```

Code after refactoring: 
 ```java
class A {
    void m(Object m) {
        System.out.println(""A"");
    }
}

class B extends A {
    void k() {
        String s=null;
        //extract statements， new method name is ‘m()’
        m(s);
    }

    private static void m(String s) {
        System.out.println(s);
    }

    void f() {
        m(""1"");
    }
}
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1757/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1758,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1758,eclipse.jdt.ui,2625765946,1758,“Extract method” refactoring： Internal class method call changes,assdfsdafasfa,170524487,,,CLOSED,2024-10-31T01:49:38Z,2024-11-01T22:27:20Z,"Select the statement in method f(), select Extract Method refactoring, the new method name is 'method', resulting in a change in the calling relationship. Before refactoring, testMethod() calls method() in class SourceClass. After refactoring, testMethod() calls method() in class ParentClass.

Code before refactoring:
 ```java
class ParentClass {
    void f() {
        // extract method, new method name 'method'
        int i;
    }
}

class SourceClass {
    void method() {
    }

    class InnerClass extends ParentClass {
        void testMethod() {
            method();
        }
    }
}
```

Code after refactoring: 
 ```java
class ParentClass {
    void f() {
        // extract method, new method name 'method'
        m();
    }

    private static void m() {
        int i;
    }
}

class SourceClass {
    void method() {
    }

    class InnerClass extends ParentClass {
        void testMethod() {
            method();
        }
    }
}
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1758/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1758,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SKOXA,eclipse.jdt.ui,2452153792,1758,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-11-01T16:16:25Z,2024-11-01T16:16:25Z,"@assdfsdafasfa The example given is not what you have reported.  In addition, the default modifier for the new method is private and doesn't cause a problem.  Both the method name and the modifier need to be set to cause the issue.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SKOXA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1760,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1760,eclipse.jdt.ui,2629051668,1760,Inconsistent font baseline in Java editor for wrapped method invocations,odrotbohm,128577,Oliver Drotbohm,info@odrotbohm.de,OPEN,2024-11-01T13:36:15Z,2024-11-01T13:36:15Z,"On the latest JDT release, code that's using wrapped invocations ends up being displayed in inconsistent font-baselines per line:

<img width=""792"" alt=""Screenshot 2024-11-01 at 14 28 51"" src=""https://github.com/user-attachments/assets/c609eeaf-eda6-4e2f-a933-9cb32a091836"">

As you can see above, the baseline for the first underlined line is much higher than for the second line. The third line is higher, too. The red line I added almost masks the difference a bit, but the different baselines are clearly visible in the method below, too. Simple, on-line declarations do not seem to suffer from the problem as visible in the field declarations and assignments in the constructor.

I am running STS (Eclipse 4.33.0.v20240903-0240) with JDT 3.19.600v20240903-0240 on MacOS Sequoia 15.1.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1760/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1764,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1764,eclipse.jdt.ui,2631697961,1764,ClassCastException when ctrl+hover over a 'case' literal,nlisker,37422899,,,OPEN,2024-11-02T06:02:12Z,2025-01-07T14:05:48Z,"```java
public class Hover {

	void do2() {
		record R(int i, long l) {}

		R r = new R(1, 1);
		switch (r) {
			case R(_, long l) -> {}
			case R r2 -> {}
		}
	}
}
```
Hold <kbd>Ctrl</kbd> and hover over the second `case` literal. The `case` will become clickable as if it's a method or parameter, which is wrong. Then, while still holding <kbd>Ctrl</kbd>, move the mouse to the first case label. A bunch of these errors will be thrown:
```
Unhandled event loop exception

java.lang.ClassCastException: class org.eclipse.jdt.core.dom.VariableDeclarationFragment cannot be cast to class org.eclipse.jdt.core.dom.SingleVariableDeclaration (org.eclipse.jdt.core.dom.VariableDeclarationFragment and org.eclipse.jdt.core.dom.SingleVariableDeclaration are in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @17a0846)
	at org.eclipse.jdt.core.dom.TypePattern.getPatternVariable(TypePattern.java:242)
	at org.eclipse.jdt.internal.corext.dom.ASTFlattener.visit(ASTFlattener.java:2021)
	at org.eclipse.jdt.internal.corext.dom.ASTFlattener.visitPattern(ASTFlattener.java:1451)
	at org.eclipse.jdt.internal.corext.dom.ASTFlattener.visit(ASTFlattener.java:1427)
	at org.eclipse.jdt.core.dom.RecordPattern.accept0(RecordPattern.java:231)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3312)
	at org.eclipse.jdt.internal.corext.dom.ASTFlattener.visit(ASTFlattener.java:1669)
	at org.eclipse.jdt.core.dom.SwitchCase.accept0(SwitchCase.java:212)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3312)
	at org.eclipse.jdt.internal.corext.dom.ASTNodes.asString(ASTNodes.java:366)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaElementHyperlinkDetector.findSwitchCaseTarget(JavaElementHyperlinkDetector.java:290)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaElementHyperlinkDetector.detectHyperlinksCached(JavaElementHyperlinkDetector.java:116)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaElementHyperlinkDetector.lambda$0(JavaElementHyperlinkDetector.java:84)
	at org.eclipse.jdt.internal.core.JavaModelManager.cacheZipFiles(JavaModelManager.java:5694)
	at org.eclipse.jdt.internal.core.JavaModelManager.callReadOnly(JavaModelManager.java:5683)
	at org.eclipse.jdt.core.JavaCore.callReadOnly(JavaCore.java:6150)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaElementHyperlinkDetector.detectHyperlinks(JavaElementHyperlinkDetector.java:84)
	at org.eclipse.ui.texteditor.HyperlinkDetectorRegistry$HyperlinkDetectorDelegate.detectHyperlinks(HyperlinkDetectorRegistry.java:81)
	at org.eclipse.jface.text.hyperlink.HyperlinkManager.findHyperlinks(HyperlinkManager.java:289)
	at org.eclipse.jface.text.hyperlink.HyperlinkManager.findHyperlinks(HyperlinkManager.java:262)
	at org.eclipse.jface.text.hyperlink.HyperlinkManager.mouseMove(HyperlinkManager.java:457)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:229)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:91)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4368)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1173)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4166)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3754)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1151)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:663)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:570)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:178)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:668)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:605)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1481)
```
From the stack trace, I'm not sure if this is a bug in jdt.core or jdt.ui, but the exception itself happens in core.

eclipse.buildId=4.34.0.I20241101-1800
java.version=22
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1764/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1764,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SQQbR,eclipse.jdt.ui,2453735121,1764,NA,srikanth-sankaran,131454720,Srikanth Sankaran,,NA,2024-11-03T05:41:06Z,2024-11-03T05:41:06Z,@subyssurendran666 would you like to work on this ? ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SQQbR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1764,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SQQbU,eclipse.jdt.ui,2453735124,1764,NA,subyssurendran666,117082823,Suby S Surendran,suby.surendran@ibm.com,NA,2024-11-03T15:55:14Z,2024-11-03T15:55:14Z,"With pleasure! Could you please assign this to me?

> @subyssurendran666 would you like to work on this ?

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SQQbU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1764,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SQQbX,eclipse.jdt.ui,2453735127,1764,NA,subyssurendran666,117082823,Suby S Surendran,suby.surendran@ibm.com,NA,2024-11-03T19:36:59Z,2024-11-03T19:36:59Z,"I believe this issue is related to JDT.UI

In Java 22, a new feature called [unnamed variables and patterns](https://openjdk.org/jeps/456) has been introduced. To accommodate this, certain changes have been incorporated into JDT.Core. For example, in a case literal like `case R(_, long l) -> {}`, the first parameter of the record is an unnamed pattern (_). In JDT.Core DOM, unnamed patterns are handled by TypePattern. Here, the PatternVariable of the TypePattern is a VariableDeclarationFragment (since it has no type). However, the visit method in [ASTFlattener](https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/master/org.eclipse.jdt.core.manipulation/core%20extension/org/eclipse/jdt/internal/corext/dom/ASTFlattener.java#L2019) attempts to cast the patternVariable to SingleVariableDeclaration through getPatternVariable(), which is applicable only for Java version below 22.

<img width=""563"" alt=""Screenshot 2024-11-03 at 11 52 29 PM"" src=""https://github.com/user-attachments/assets/17aa23e9-3a14-487f-a8ee-79470e421fab"">

This issue has been addressed by implementing a new method called getPatternVariable2(). I believe the code below, or a similar approach, should resolve the issue.

```
 public boolean visit(TypePattern node) {
		if (ASTHelper.isPatternSupported(node.getAST())) {
                         if (node.getAST().apiLevel() < ASTHelper.JLS22) {
			    node.getPatternVariable().accept(this);
                         } else {
                              node.getPatternVariable2().accept(this);
                         }
		}
		return false;
}
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SQQbX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1764,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SQQbc,eclipse.jdt.ui,2453735132,1764,NA,nlisker,37422899,,,NA,2024-11-04T00:22:56Z,2024-11-04T00:22:56Z,So should this be transferred to jdt.ui?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SQQbc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1764,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SQQbf,eclipse.jdt.ui,2453735135,1764,NA,srikanth-sankaran,131454720,Srikanth Sankaran,,NA,2024-11-04T01:22:05Z,2024-11-04T01:22:05Z,"@subyssurendran666 - the code you cite is in jdt-core, no ? ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SQQbf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1764,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SQQbj,eclipse.jdt.ui,2453735139,1764,NA,subyssurendran666,117082823,Suby S Surendran,suby.surendran@ibm.com,NA,2024-11-04T02:45:14Z,2024-11-04T02:45:14Z,"No @srikanth-sankaran, the [ASTFlattener](https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/master/org.eclipse.jdt.core.manipulation/core%20extension/org/eclipse/jdt/internal/corext/dom/ASTFlattener.java#L2019)(which is in JDT.UI)  is calling the `getPatternVariable()` API from the DOM.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SQQbj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1764,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SQQfG,eclipse.jdt.ui,2453735366,1764,NA,srikanth-sankaran,131454720,Srikanth Sankaran,,NA,2024-11-04T02:47:30Z,2024-11-04T02:47:30Z,@noopur2507 - Can you confirm this is a JDT.UI problem ? TIA,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SQQfG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1764,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Sjdet,eclipse.jdt.ui,2458769325,1764,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-11-06T05:43:32Z,2024-11-06T05:43:32Z,"> Hold Ctrl and hover over the second `case` literal. The `case` will become clickable as if it's a method or parameter, which is wrong. 

The 'case' becoming clickable is a feature that allows you to click the 'case' to jump to the corresponding 'switch' keyword. This is useful for quickly jumping to the beginning of a long switch-case. 

> Then, while still holding Ctrl, move the mouse to the first case label. A bunch of these errors will be thrown:

To be fixed.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Sjdet/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1764,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SjfGS,eclipse.jdt.ui,2458775954,1764,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-11-06T05:50:20Z,2024-11-06T05:50:20Z,"> I believe this issue is related to JDT.UI

Thanks for the analysis, Suby. I will make the corresponding change in UI.

However, few changes are required in JDT Core as well:
* The Javadoc of both APIs i.e. TypePattern.getPatternVariable() and TypePattern.getPatternVariable2() is same and not clear regarding this difference.
* The methods in JDT UI's ASTFlattener are kept in sync with JDT Core's org.eclipse.jdt.internal.core.dom.NaiveASTFlattener. Hence, the change should be done in NaiveASTFlattener as well and then synced to ASTFlattener.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SjfGS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1764,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SjvXM,eclipse.jdt.ui,2458842572,1764,NA,subyssurendran666,117082823,Suby S Surendran,suby.surendran@ibm.com,NA,2024-11-06T06:51:14Z,2024-11-06T06:51:14Z,"> > I believe this issue is related to JDT.UI
> 
> Thanks for the analysis, Suby. I will make the corresponding change in UI.
> 
> However, few changes are required in JDT Core as well:
> 
> * The Javadoc of both APIs i.e. TypePattern.getPatternVariable() and TypePattern.getPatternVariable2() is same and not clear regarding this difference.
> * The methods in JDT UI's ASTFlattener are kept in sync with JDT Core's org.eclipse.jdt.internal.core.dom.NaiveASTFlattener. Hence, the change should be done in NaiveASTFlattener as well and then synced to ASTFlattener.

Thank you, @noopur2507  for your insights on JDT.Core. I'll make the necessary arrangements in JDT.Core.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SjvXM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1764,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Sk-pc,eclipse.jdt.ui,2459167324,1764,NA,nlisker,37422899,,,NA,2024-11-06T09:54:17Z,2024-11-06T09:54:17Z,"> The 'case' becoming clickable is a feature that allows you to click the 'case' to jump to the corresponding 'switch' keyword. This is useful for quickly jumping to the beginning of a long switch-case.

What an interesting feature. Didn't know about it.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Sk-pc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1764,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Y9uqw,eclipse.jdt.ui,2566318768,1764,NA,subyssurendran666,117082823,Suby S Surendran,suby.surendran@ibm.com,NA,2024-12-31T10:19:38Z,2024-12-31T10:19:38Z,"> > I believe this issue is related to JDT.UI
> 
> Thanks for the analysis, Suby. I will make the corresponding change in UI.
> 
> However, few changes are required in JDT Core as well:
> 
> * The Javadoc of both APIs i.e. TypePattern.getPatternVariable() and TypePattern.getPatternVariable2() is same and not clear regarding this difference.
> * The methods in JDT UI's ASTFlattener are kept in sync with JDT Core's org.eclipse.jdt.internal.core.dom.NaiveASTFlattener. Hence, the change should be done in NaiveASTFlattener as well and then synced to ASTFlattener.

@noopur2507 this has been implemented though https://github.com/eclipse-jdt/eclipse.jdt.core/issues/3261","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Y9uqw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1764,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZgRby,eclipse.jdt.ui,2575374066,1764,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2025-01-07T14:05:13Z,2025-01-07T14:05:13Z,"Reopening, after the change was reverted via https://github.com/eclipse-jdt/eclipse.jdt.core/pull/3529","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZgRby/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1762,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1762,eclipse.jdt.ui,2630268496,1762,"Add new quick fix for unused loop variables, local variables, try-with-resource variables, and catch parameters",nlisker,37422899,,,CLOSED,2024-11-02T06:49:54Z,2024-11-08T21:19:40Z," #1747 added a quickfix for patterns in switch and lambda parameters. https://github.com/eclipse-jdt/eclipse.jdt.core/issues/3054 shows more cases where this can be applied. Using the example there, the following can use a quickfix to rename to unnamed:

```java
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class Unused {
	class Order {}
	static class Resource implements AutoCloseable {
		@Override
		public void close() throws Exception {}
	}
	
	static int count(Iterable<Order> orders) {
	    int total = 0;
	    for (Order order : orders)    // order - Unnamed variable
	        total++;
	    return total;
	}
	
	static void foo() {
		for (int i = 0, se = sideEffect(); i < 10; i++) {  } // se - Unnamed variable
	}

	private static int sideEffect() {
		Queue<Integer> q = new PriorityQueue<>();
		
		while (q.size() >= 3) {
			var x = q.remove();
			var y = q.remove();
			var z = q.remove(); // Unnamed variable
		}
		try { 
			
		} catch (Exception e) { 
			
		} catch (Throwable t) { 
			
		}
		
		try (var r = new Resource()) {    // r -  Unnamed variable
		    
		} catch (Exception e) {
			
		}
		
		return 0;
	}
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1762/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1762,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6S9oAi,eclipse.jdt.ui,2465628194,1762,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-11-08T19:44:17Z,2024-11-08T19:44:17Z,"Hi @nlisker Thanks for the suggestion.  I am implementing all but the local variables change.  I'm not a fan of using an unnamed variable to assign a local variable  vs just an expression statement.  The current  unused local variable cleanup/quickfix for local variables does this fine (i.e. remove statement leaving side effects or remove statement entirely).  I have added support for try-with-resources, enhanced for, and regular for loops.  I should get this into M3 today.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6S9oAi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1763,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1763,eclipse.jdt.ui,2631513119,1763,[24] Monitor failures in tests of Y-Builds,stephan-herrmann,24587985,Stephan Herrmann,,OPEN,2024-11-03T22:13:56Z,2025-02-16T18:50:24Z,"Meanwhile we have meaningful results in these builds:
* https://ci.eclipse.org/releng/job/YPBuilds/job/ep434Y-unit-cen64-gtk3-java24
* https://ci.eclipse.org/jdt/job/eclipse.jdt.ui-github/job/BETA_JAVA24

I suggest we monitor these builds to catch any problems early","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1763/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1763,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SPurl,eclipse.jdt.ui,2453596901,1763,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-11-03T22:16:53Z,2024-11-03T22:16:53Z,"As of today I see these failures:
* Y-Build: 
   * org.eclipse.jdt.text.tests.Java23SemanticHighlightingTest.restrictedKeywordHighlighting
* jdt.ui BETA_JAVA24:
   * org.eclipse.jdt.text.tests.Java23SemanticHighlightingTest.restrictedKeywordHighlighting
   * org.eclipse.jdt.text.tests.PluginsNotLoadedTest.pluginsNotLoaded","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SPurl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1763,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6VDnaP,eclipse.jdt.ui,2500753039,1763,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2024-11-26T13:05:04Z,2024-11-26T13:05:04Z,"Single failure in [ep434Y-unit-cen64-gtk3-java24/17](https://ci.eclipse.org/releng/job/YPBuilds/job/ep434Y-unit-cen64-gtk3-java24/17/testReport/org.eclipse.jdt.ui.tests.quickfix/AssistQuickFixTest12/testSplitSwitchCaseLabelRuleStatement/):
* AssistQuickFixTest12.testSplitSwitchCaseLabelRuleStatement (throws IIOBE).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6VDnaP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1763,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6aF2tm,eclipse.jdt.ui,2585226086,1763,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2025-01-11T11:54:34Z,2025-01-11T11:54:34Z,"> Single failure in [ep434Y-unit-cen64-gtk3-java24/17](https://ci.eclipse.org/releng/job/YPBuilds/job/ep434Y-unit-cen64-gtk3-java24/17/testReport/org.eclipse.jdt.ui.tests.quickfix/AssistQuickFixTest12/testSplitSwitchCaseLabelRuleStatement/):
> 
>     * AssistQuickFixTest12.testSplitSwitchCaseLabelRuleStatement (throws IIOBE).

Passed in latest build, see https://ci.eclipse.org/releng/job/YPBuilds/job/ep435Y-unit-linux-x86_64-java24/26/testReport/org.eclipse.jdt.ui.tests.quickfix/AssistQuickFixTest12/

The same for Java24SemanticHighlightingTest (nee Java23SemanticHighlightingTest): https://ci.eclipse.org/releng/job/YPBuilds/job/ep435Y-unit-linux-x86_64-java24/26/testReport/org.eclipse.jdt.text.tests/Java24SemanticHighlightingTest/
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6aF2tm/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1763,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6bz36g,eclipse.jdt.ui,2614066848,1763,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2025-01-25T19:00:22Z,2025-01-25T19:00:22Z,As of https://ci.eclipse.org/releng/job/YPBuilds/job/ep435Y-unit-linux-x86_64-java24/34/testReport/ all of JDT is clean! :tada:,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6bz36g/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1763,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cuH6v,eclipse.jdt.ui,2629336751,1763,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2025-02-02T10:32:48Z,2025-02-02T10:32:48Z,[Test failure](https://ci.eclipse.org/releng/job/YPBuilds/job/ep435Y-unit-linux-x86_64-java24/39/testReport/org.eclipse.jdt.ui.tests.quickfix/CleanUpStressTest/testAllCleanUps/) in org.eclipse.jdt.ui.tests.quickfix.CleanUpStressTest.testAllCleanUps seems to be related to #1990 /  #1991 and should go away when master is merged again to BETA_JAVA24.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cuH6v/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1763,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cw-IF,eclipse.jdt.ui,2630083077,1763,NA,noopur2507,8749449,Noopur Gupta,,NA,2025-02-03T06:31:01Z,2025-02-03T06:31:01Z,"> should go away when master is merged again to BETA_JAVA24.

Master has been merged to BETA_JAVA24.

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cw-IF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1763,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6c9R2G,eclipse.jdt.ui,2633309574,1763,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2025-02-04T09:16:46Z,2025-02-04T09:16:46Z,"> > should go away when master is merged again to BETA_JAVA24.
> 
> Master has been merged to BETA_JAVA24.

Thanks, @noopur2507 ! [Latest test](https://ci.eclipse.org/releng/job/YPBuilds/job/ep435Y-unit-linux-x86_64-java24/41/testReport/) shows no failures in jdt.ui.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6c9R2G/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1763,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6epEyj,eclipse.jdt.ui,2661567651,1763,NA,stephan-herrmann,24587985,Stephan Herrmann,,NA,2025-02-16T18:50:24Z,2025-02-16T18:50:24Z,"[Latest tests failures](https://ci.eclipse.org/releng/job/YPBuilds/job/ep435Y-unit-linux-x86_64-java24/54/testReport/) require another merge from master, see #2023","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6epEyj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1765,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1765,eclipse.jdt.ui,2635357549,1765,Unexpected dialog for classpath/modulepath modifications when library is added to classpath of java project,mansurski,7068109,,,OPEN,2024-11-05T12:45:35Z,2024-11-05T12:45:35Z,"Used Platform:
Eclipse IDE for Java Developers
Version: 2024-06 (4.32.0)

Steps to reproduce:

Start ""New Java Project"" wizard.
Give the project a name.
Click Next and go to ""Libraries"" tab.
Select ""Classpath"" and click ""Add Library...""
Add a library to the classpath of the project (I have added JUnit but it could be any).
Finish wizard.
Open the properties of the newly created project.
Go to ""Java Build Path"".
Select ""Libraries"" tab.

Now each time another option is selected from the properties, unexpected dialog is shown although there are no changes in the modluepath/classpath.

![image](https://github.com/user-attachments/assets/57f81921-2119-49f4-8996-3b0984a320fc)


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1765/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1766,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1766,eclipse.jdt.ui,2636462314,1766,[Bug][Pull Up Refactoring] Pull up refactoring for the method in anonymous class produce uncompilable code,RETester66,176339745,,,OPEN,2024-11-05T20:59:49Z,2024-11-05T20:59:49Z,"## Steps to reproduce
For the following Java class:
```
public class A {
    public static class BaseTargetClass {}

    public static class OriginalClass {
        public static int data = 20;

        public static void memberMethod() {
            new BaseTargetClass() {
                void methodToBePulledUp() {
                    System.out.println(""Static Context: "" + data);
                }
            };
        }
    }
}
```
Left click the `methodToBePulledUp()`, then right click -> Refactor -> Pull Up, and use the default configurations (the destination is set as `BaseTargetClass` by default) as following, click Finish:

![image](https://github.com/user-attachments/assets/0c9e883c-cafa-4e57-a1d5-c4febaa1a481)

The refactoring is performed without any warning or exception. The refactored program is following, which contains syntax error:
```
public class A {
    public static class BaseTargetClass {

		void methodToBePulledUp() {
		    System.out.println(""Static Context: "" + data);// syntax error
		}}

    public static class OriginalClass {
        public static int data = 20;

        public static void memberMethod() {
            new BaseTargetClass() {
            };
        }
    }
}
```
## Environment
### OS Version
Windows 10, 64-bit Operating System, x64-based processor
### Eclipse Version
Eclipse IDE for Enterprise Java and Web Developers (includes Incubating components)
Version: 2024-09 (4.33.0)
Build id: 20240905-0614
### JDK Version
java version ""22.0.1"" 2024-04-16
Java(TM) SE Runtime Environment (build 22.0.1+8-16)
Java HotSpot(TM) 64-Bit Server VM (build 22.0.1+8-16, mixed mode, sharing)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1766/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1769,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1769,eclipse.jdt.ui,2637790727,1769,Stopping Junit Test may show up as Error,jukzi,51790620,Jörg Kubitz,,CLOSED,2024-11-06T11:16:05Z,2024-11-06T13:55:08Z,"When i press the ""Stop"" Button while executing a junit Test (org.eclipse.jdt.core.tests.model.ModuleBuilderTests). That is reported as 1 Error ""StoppedByUserException""
![image](https://github.com/user-attachments/assets/eedccc79-c75e-47a7-a8bc-a475138d9361)
![image](https://github.com/user-attachments/assets/161f322e-8ee0-4f4b-8f23-6896f5e702f0)

```
org.junit.runner.notification.StoppedByUserException
	at org.junit.runner.notification.RunNotifier.fireTestStarted(RunNotifier.java:151)
	at org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener.startTest(JUnit38ClassRunner.java:41)
	at junit.framework.TestResult.startTest(TestResult.java:168)
	at junit.framework.TestResult.run(TestResult.java:119)
	at junit.framework.TestCase.run(TestCase.java:130)
	at junit.framework.TestSuite.runTest(TestSuite.java:241)
	at org.eclipse.jdt.core.tests.model.SuiteOfTestCases$Suite.runTest(SuiteOfTestCases.java:114)
	at junit.framework.TestSuite.run(TestSuite.java:236)
	at org.eclipse.jdt.core.tests.model.SuiteOfTestCases$Suite.superRun(SuiteOfTestCases.java:97)
	at org.eclipse.jdt.core.tests.model.SuiteOfTestCases$Suite$1.protect(SuiteOfTestCases.java:85)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at org.eclipse.jdt.core.tests.model.SuiteOfTestCases$Suite.run(SuiteOfTestCases.java:94)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:90)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:93)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:530)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:758)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:453)
	at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:83)
	at org.eclipse.pde.internal.junit.runtime.PlatformUITestHarness.lambda$0(PlatformUITestHarness.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.E4Testable.lambda$1(E4Testable.java:127)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4141)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3757)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1151)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:663)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:570)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:178)
	at org.eclipse.pde.internal.junit.runtime.NonUIThreadTestApplication.start(NonUIThreadTestApplication.java:58)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:668)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:605)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1481)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1454)


```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1769/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1769,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SmK2Z,eclipse.jdt.ui,2459479449,1769,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-11-06T11:19:14Z,2024-11-06T11:19:14Z,"It is not a bug. JUnit5 has no concept of test termination, so we terminate tests by throwing exception, see git history.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SmK2Z/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1769,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SndxH,eclipse.jdt.ui,2459819079,1769,NA,trancexpress,24752155,Simeon Andreev,,NA,2024-11-06T13:55:07Z,2024-11-06T13:55:07Z,"In particular see: https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/889

One day there might be API for this, then we don't need hacks to stop tests: https://github.com/junit-team/junit5/issues/1880","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6SndxH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1770,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1770,eclipse.jdt.ui,2637794242,1770,"""Syntax Colors"" preference page oes not correctly refresh on theme change",BeckerWdf,28338612,Matthias Becker,ma.becker@sap.com,OPEN,2024-11-06T11:17:53Z,2024-11-06T11:17:53Z,"- In “Light” theme enable “Classes” color and set a user defined color.
- Press “Apply”. 
- Change theme to “Dark”. 
- Press “Apply” but don’t restart.
- Check color value are correct default values from dark theme.

We still see the user's value. ❌
Re-opening the Preference Dialog fixes this. So it's ""only"" a UI refresh issue.

Similar:

- In Light theme change to dark theme press ""Apply"" but don't restart and don't close the preference dialog
- In “Dark” theme set “Classes” color to a user defined color.
- Press “Restore Defaults”

We still see the user’s value. ❌
Re-opening the Preference Dialog fixes this. So it’s “only” a UI refresh issue.

I found this during testing of https://github.com/eclipse-platform/eclipse.platform.ui/pull/2421
See: https://github.com/eclipse-platform/eclipse.platform.ui/pull/2421#issuecomment-2459459102","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1770/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1772,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1772,eclipse.jdt.ui,2638877009,1772,[Bug][Pull Up Refactoring] Pull up refactoring for the method in Nested Anonymous Class produce uncompilable code,RETester66,176339745,,,OPEN,2024-11-06T18:22:00Z,2024-11-06T18:22:00Z,"## Steps to reproduce
The input program is following:
```
public class A {
    public class BaseTargetClass {}

    public class OriginalClass {
        public int data = 40;
        public void memberMethod() {
            System.out.println(""Nested anonymous data: "" + data);
        }

        public class NestedOriginalClass extends BaseTargetClass {
            void setup() {
                new BaseTargetClass() {
                    void methodToBePulledUp() {
                        new BaseTargetClass() {
                            void innerMethod() {
                                System.out.println(""Deeply nested method: "" + data);
                            }
                        };
                    }
                };
            }
        }
    }
}
```
Left click the methodToBePulledUp(), then right click -> Refactor -> Pull Up, and use the default configurations (the destination is set as BaseTargetClass by default) as following, click Finish:

![image](https://github.com/user-attachments/assets/4317577f-919d-40a2-a057-0ada6eec90ab)

The refactoring is performed without any warning or exception. The refactored program is following, which contains syntax error:
```
public class A {
    public class BaseTargetClass {

		void methodToBePulledUp() {
		    new BaseTargetClass() {
		        void innerMethod() {
		            System.out.println(""Deeply nested method: "" + data);// syntax error
		        }
		    };
		}}

    public class OriginalClass {
        public int data = 40;
        public void memberMethod() {
            System.out.println(""Nested anonymous data: "" + data);
        }

        public class NestedOriginalClass extends BaseTargetClass {
            void setup() {
                new BaseTargetClass() {
                };
            }
        }
    }
}
```
## Environment
### OS Version
Windows 10, 64-bit Operating System, x64-based processor
### Eclipse Version
Eclipse IDE for Enterprise Java and Web Developers (includes Incubating components)
Version: 2024-09 (4.33.0)
Build id: 20240905-0614
### JDK Version
java version ""22.0.1"" 2024-04-16
Java(TM) SE Runtime Environment (build 22.0.1+8-16)
Java HotSpot(TM) 64-Bit Server VM (build 22.0.1+8-16, mixed mode, sharing)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1772/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1773,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1773,eclipse.jdt.ui,2638906487,1773,[Bug][Pull Up Refactoring] Pull up refactoring for Anonymous Class with Multiple Methods produces uncompilable code,RETester66,176339745,,,CLOSED,2024-11-06T18:38:04Z,2024-12-03T20:35:21Z,"## Steps to reproduce
The input program is following:
```
public class A {
    public class BaseTargetClass {}

    public class OriginalClass {
        public int data = 60;
        public void memberMethod() {}

        public class NestedOriginalClass extends BaseTargetClass {
            void setup() {
                new BaseTargetClass() {
                    void methodToBePulledUp() {
                        methodHelper();
                    }

                    void methodHelper() {
                        System.out.println(""Helper Method in Anonymous Class: "" + data);
                    }
                };
            }
        }
    }
}
```
Left click the methodToBePulledUp(), then right click -> Refactor -> Pull Up, and use the default configurations (the destination is set as BaseTargetClass by default) as following, click Finish:

![image](https://github.com/user-attachments/assets/58c90e09-7eb9-48ad-94d0-a390a97f530b)

The refactoring is performed without any warning or exception. The refactored program is following, which contains syntax error:
```
public class A {
    public class BaseTargetClass {

		void methodToBePulledUp() {
		    methodHelper();// syntax error
		}}

    public class OriginalClass {
        public int data = 60;
        public void memberMethod() {}

        public class NestedOriginalClass extends BaseTargetClass {
            void setup() {
                new BaseTargetClass() {
                    void methodHelper() {
                        System.out.println(""Helper Method in Anonymous Class: "" + data);
                    }
                };
            }
        }
    }
}
```

## Environment
### OS Version
Windows 10, 64-bit Operating System, x64-based processor
### Eclipse Version
Eclipse IDE for Enterprise Java and Web Developers (includes Incubating components)
Version: 2024-09 (4.33.0)
Build id: 20240905-0614
### JDK Version
java version ""22.0.1"" 2024-04-16
Java(TM) SE Runtime Environment (build 22.0.1+8-16)
Java HotSpot(TM) 64-Bit Server VM (build 22.0.1+8-16, mixed mode, sharing)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1773/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1773,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6TqL74,eclipse.jdt.ui,2477309688,1773,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-11-14T20:06:21Z,2024-11-14T20:06:21Z,This requires fix for: https://github.com/eclipse-jdt/eclipse.jdt.core/issues/3308,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6TqL74/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1774,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1774,eclipse.jdt.ui,2638972708,1774,[Bug][Pull Up Refactoring] Pull up refactoring for Multiple Anonymous Classes produces confusing warning message,RETester66,176339745,,,OPEN,2024-11-06T19:03:08Z,2024-11-06T19:03:08Z,"## Steps to reproduce
The input program is following:
```
public class A {
    public class BaseTargetClass {}

    public class OriginalClass {
        public int memberVariable = 40;

        public void memberMethod() {
            new BaseTargetClass() {
                void methodToBePulledUp() {
                    System.out.println(""First anonymous class: "");
                }
            };
            new BaseTargetClass() {
                void methodToBePulledUp() {
                    System.out.println(""Second anonymous class: "");
                }
            };
        }
    }
}
```
Left click the first or the second methodToBePulledUp(), then right click -> Refactor -> Pull Up, a confusing warning message is shown:

![image](https://github.com/user-attachments/assets/cceb0c0d-bcf3-4519-8236-20e73e0873ad)

## Environment
### OS Version
Windows 10, 64-bit Operating System, x64-based processor
### Eclipse Version
Eclipse IDE for Enterprise Java and Web Developers (includes Incubating components)
Version: 2024-09 (4.33.0)
Build id: 20240905-0614
### JDK Version
java version ""22.0.1"" 2024-04-16
Java(TM) SE Runtime Environment (build 22.0.1+8-16)
Java HotSpot(TM) 64-Bit Server VM (build 22.0.1+8-16, mixed mode, sharing)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1774/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1775,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1775,eclipse.jdt.ui,2639003148,1775,[Bug][Pull Up Refactoring] Pull up refactoring for Simple Generic Method in Inner Class produces uncompilable program,RETester66,176339745,,,OPEN,2024-11-06T19:21:46Z,2024-11-06T19:36:18Z,"## Steps to reproduce
The input program is following:
```
public class A {
    public class BaseInner<T> {}

    public class Outer<S> {
        public class Inner extends BaseInner<S> {
            void innerMethod(S param) { // Pull this method up to class BaseInner
                System.out.println(param);
            }
        }
    }
}
```
Left click innerMethod(S param), then right click -> Refactor -> Pull Up, use the default configuration shown below, click finish:

![image](https://github.com/user-attachments/assets/18a895e9-93bd-438c-bffc-5ff9a3d2732a)

The refactoring is performed without any warning or exception. The refactored program is following, which contains syntax error:
```
public class A {
    public class BaseInner<T> {

		void innerMethod(S param) { // syntax error, the S should be T
		    System.out.println(param);
		}}

    public class Outer<S> {
        public class Inner extends BaseInner<S> {
        }
    }
}
```

This situation also happens in some more compilcated input programs, following are some other input programs that the refactored program also contain syntax error:
1. Bounded Type Parameters:
```
public class A {
    public class BaseInner<T extends Number> {}

    public class Outer<S extends Integer> {
        public class Inner extends BaseInner<S> {
            void innerMethod(S param) { // Pull this method up to class BaseInner
                System.out.println(param.intValue());
            }
        }
    }
}
```
2. Nested Generics:
```
import java.util.List;

public class A {
    public class BaseInner<T> {}

    public class Outer<S> {
        public class Inner extends BaseInner<List<S>> { // Using List from java.util package
            void innerMethod(List<S> param) { // Pull this method up to class BaseInner
                param.forEach(System.out::println);
            }
        }
    }
}
```


## Environment
### OS Version
Windows 10, 64-bit Operating System, x64-based processor
### Eclipse Version
Eclipse IDE for Enterprise Java and Web Developers (includes Incubating components)
Version: 2024-09 (4.33.0)
Build id: 20240905-0614
### JDK Version
java version ""22.0.1"" 2024-04-16
Java(TM) SE Runtime Environment (build 22.0.1+8-16)
Java HotSpot(TM) 64-Bit Server VM (build 22.0.1+8-16, mixed mode, sharing)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1775/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1776,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1776,eclipse.jdt.ui,2639137282,1776,[Bug][Pull Up Refactoring] Pull up refactoring for input program contians Lambda Accessing Super Methods produces uncompilable program,RETester66,176339745,,,OPEN,2024-11-06T20:24:40Z,2024-11-06T20:24:40Z,"## Steps to reproduce
The input program is following:
```
public class A {
    public class BaseTargetClass {
        void superMethod() { System.out.println(""Super method""); }
    }

    public class OriginalClass extends BaseTargetClass {

        public class NestedOriginalClass extends BaseTargetClass {
            void methodToBePulledUp() {
                Runnable r = super::superMethod;
                r.run();
            }
        }
    }
}
```
Left click methodToBePulledUp(), then right click -> Refactor -> Pull Up, use the default configuration shown below, click finish:

![image](https://github.com/user-attachments/assets/0d348d35-d6e5-4bab-ad6f-4eda1aff03e7)

The refactoring is performed without any warning or exception. The refactored program is following, which contains syntax error:
```
public class A {
    public class BaseTargetClass {
        void superMethod() { System.out.println(""Super method""); }

		void methodToBePulledUp() {
		    Runnable r = super::superMethod;// syntax error
		    r.run();
		}
    }

    public class OriginalClass extends BaseTargetClass {

        public class NestedOriginalClass extends BaseTargetClass {
        }
    }
}
```
## Environment
### OS Version
Windows 10, 64-bit Operating System, x64-based processor
### Eclipse Version
Eclipse IDE for Enterprise Java and Web Developers (includes Incubating components)
Version: 2024-09 (4.33.0)
Build id: 20240905-0614
### JDK Version
java version ""22.0.1"" 2024-04-16
Java(TM) SE Runtime Environment (build 22.0.1+8-16)
Java HotSpot(TM) 64-Bit Server VM (build 22.0.1+8-16, mixed mode, sharing)


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1776/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1777,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1777,eclipse.jdt.ui,2639227945,1777,[Bug][Pull Up Refactoring] Pull up refactoring for input program contians Lambda Invoking Constructors produces uncompilable program,RETester66,176339745,,,OPEN,2024-11-06T21:06:15Z,2024-11-06T21:06:15Z,"## Steps to reproduce
The input program is following:
```
public class A {
    public class BaseTargetClass {}

    public class OriginalClass {
        public class CustomClass {
            CustomClass() { System.out.println(""Custom class constructor""); }
        }

        public class NestedOriginalClass extends BaseTargetClass {
            void methodToBePulledUp() {
                Runnable r = CustomClass::new;
                r.run();
            }
        }
    }
}
```
Left click methodToBePulledUp(), then right click -> Refactor -> Pull Up, use the default configuration shown below, click finish:

![image](https://github.com/user-attachments/assets/d8cf3ebd-79b2-4d60-ae5f-d5dee51ce9b7)


The refactoring is performed without any warning or exception. The refactored program is following, which contains syntax error:

![image](https://github.com/user-attachments/assets/eb47d18c-3a53-4eed-ac6b-d638124b65ad)

The specific error information is : No enclosing instance of type A.OriginalClass is accessible. Must qualify the allocation with an enclosing instance of type A.OriginalClass (e.g. x.new A() where x is an instance of A.OriginalClass).

## Environment
### OS Version
Windows 10, 64-bit Operating System, x64-based processor
### Eclipse Version
Eclipse IDE for Enterprise Java and Web Developers (includes Incubating components)
Version: 2024-09 (4.33.0)
Build id: 20240905-0614
### JDK Version
java version ""22.0.1"" 2024-04-16
Java(TM) SE Runtime Environment (build 22.0.1+8-16)
Java HotSpot(TM) 64-Bit Server VM (build 22.0.1+8-16, mixed mode, sharing)


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1777/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1778,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1778,eclipse.jdt.ui,2639304937,1778,[Bug][Inline Method Refactoring] Inline Method refactoring for input program contians Lambda in Method Argument produces uncompilable program,RETester66,176339745,,,OPEN,2024-11-06T21:41:52Z,2024-11-06T21:41:52Z,"## Steps to reproduce
1. Create a class named A:
```
public class A {
    void baseMethod(Runnable action) {
        action.run();
    }
}
```
2. Then, create a class named B:
```
public class B extends A {
    void derivedMethod() {
        super.baseMethod(() -> System.out.println(""Lambda Action""));
    }

    static void staticContextMethod(B obj) {
        obj.derivedMethod(); // Inline call to derivedMethod()
    }
}
```

3. Left click `derivedMethod()` in `obj.derivedMethod();` like I comment in class B. Then, right click -> Refactor -> Inline. Use default configuration to inline this method like following, click ok:

![image](https://github.com/user-attachments/assets/3c6c30c8-e1df-4ca8-82dd-a8b7e24601cf)

The program is successfully refactored without any warning or exception. The refactored program is following, which contains syntax error:
```
public class A {
    void baseMethod(Runnable action) {
        action.run();
    }
}

public class B extends A {
    void derivedMethod() {
        super.baseMethod(() -> System.out.println(""Lambda Action""));
    }

    static void staticContextMethod(B obj) {
        super.baseMethod(() -> System.out.println(""Lambda Action"")); // syntax error
    }
}
```
4. If choose the first default configuration like following:

![image](https://github.com/user-attachments/assets/c802a026-6878-4a8d-a6a4-fde573d5abf3)

5. The refactored program is following, which also contains syntax error:
```
public class A {
    void baseMethod(Runnable action) {
        action.run();
    }
}

public class B extends A {
    static void staticContextMethod(B obj) {
        super.baseMethod(() -> System.out.println(""Lambda Action"")); // syntax error
    }
}
```

## Environment
### OS Version
Windows 10, 64-bit Operating System, x64-based processor
### Eclipse Version
Eclipse IDE for Enterprise Java and Web Developers (includes Incubating components)
Version: 2024-09 (4.33.0)
Build id: 20240905-0614
### JDK Version
java version ""22.0.1"" 2024-04-16
Java(TM) SE Runtime Environment (build 22.0.1+8-16)
Java HotSpot(TM) 64-Bit Server VM (build 22.0.1+8-16, mixed mode, sharing)


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1778/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1779,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1779,eclipse.jdt.ui,2639345292,1779,[Bug][Inline Method Refactoring] Inline Method refactoring for input program contians Lambda with Method Reference in Super Call produces uncompilable program,RETester66,176339745,,,OPEN,2024-11-06T22:08:42Z,2024-11-06T22:08:42Z,"## Steps to reproduce
1. Create a class named A:
```
import java.util.function.Consumer;

public class A {
    void baseMethod(Consumer<String> consumer) {
        consumer.accept(""Test"");
    }
}
```
2. Then, create a class named B:
```
public class B extends A {
    void derivedMethod() {
        super.baseMethod(System.out::println);
    }

    static void staticContextMethod(B obj) {
        obj.derivedMethod(); // Inline call to derivedMethod()
    }
}
```

3. Left click `derivedMethod()` in `obj.derivedMethod();` like I comment in class B. Then, right click -> Refactor -> Inline. Use default configuration to inline this method like following, click ok:

![image](https://github.com/user-attachments/assets/9f0aeee4-91a8-46cc-a200-96c18a2d53fe)


The program is successfully refactored without any warning or exception. The refactored program is following, which contains syntax error:
```
import java.util.function.Consumer;

public class A {
    void baseMethod(Consumer<String> consumer) {
        consumer.accept(""Test"");
    }
}

public class B extends A {
    void derivedMethod() {
        super.baseMethod(System.out::println);
    }

    static void staticContextMethod(B obj) {
        super.baseMethod(System.out::println); // syntax error
    }
}
```

## Environment
### OS Version
Windows 10, 64-bit Operating System, x64-based processor
### Eclipse Version
Eclipse IDE for Enterprise Java and Web Developers (includes Incubating components)
Version: 2024-09 (4.33.0)
Build id: 20240905-0614
### JDK Version
java version ""22.0.1"" 2024-04-16
Java(TM) SE Runtime Environment (build 22.0.1+8-16)
Java HotSpot(TM) 64-Bit Server VM (build 22.0.1+8-16, mixed mode, sharing)


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1779/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1780,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1780,eclipse.jdt.ui,2639373350,1780,[Bug][Inline Method Refactoring] Inline Method refactoring for input program contians anonymous class accesses a field of the outer class produces uncompilable program,RETester66,176339745,,,CLOSED,2024-11-06T22:26:36Z,2024-12-03T19:26:36Z,"## Steps to reproduce
1. The input progam is following:
```
public class A {
    int x = 10;

    void superClassMethod() {
        System.out.println(x);
    }

    static void callingMethod(A instance) {
        instance.methodToBeInlined(); // inline call to methodToBeInlined()
    }

    void methodToBeInlined() {
        new Object() {
            void execute() {
                A.this.superClassMethod();
            }
        }.execute();
    }
}
```
2. Left click `methodToBeInlined()` in `instance.methodToBeInlined();` like I comment. Then, right click -> Refactor -> Inline. Use the default configuration to inline this method like following, click ok:

![image](https://github.com/user-attachments/assets/360abc2a-26d2-4b24-97a4-5c4257ff6b27)


The program is successfully refactored without any warning or exception. The refactored program is following, which contains syntax error:
```
public class A {
    int x = 10;

    void superClassMethod() {
        System.out.println(x);
    }

    static void callingMethod(A instance) {
        instance.new Object() {// syntax error
		    void execute() {
		        A.this.superClassMethod();
		    }
		}.execute(); // inline call to methodToBeInlined()
    }

    void methodToBeInlined() {
        new Object() {
            void execute() {
                A.this.superClassMethod();
            }
        }.execute();
    }
}
```

## Environment
### OS Version
Windows 10, 64-bit Operating System, x64-based processor
### Eclipse Version
Eclipse IDE for Enterprise Java and Web Developers (includes Incubating components)
Version: 2024-09 (4.33.0)
Build id: 20240905-0614
### JDK Version
java version ""22.0.1"" 2024-04-16
Java(TM) SE Runtime Environment (build 22.0.1+8-16)
Java HotSpot(TM) 64-Bit Server VM (build 22.0.1+8-16, mixed mode, sharing)


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1780/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1781,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1781,eclipse.jdt.ui,2639384999,1781,[Bug][Inline Method Refactoring] Inline Method refactoring for Multiple anonymous classes interacting within the method to be inlined produces uncompilable program,RETester66,176339745,,,OPEN,2024-11-06T22:35:03Z,2024-11-06T22:35:03Z,"## Steps to reproduce
1. The input progam is following:
```
public class A {
    int data = 100;

    void superClassMethod() {
        System.out.println(""Data: "" + data);
    }

    static void callingMethod(A instance) {
        instance.methodToBeInlined(); // inline call to methodToBeInlined()
    }

    void methodToBeInlined() {
        Runnable r1 = new Runnable() {
            public void run() {
                data += 20;
            }
        };

        Runnable r2 = new Runnable() {
            public void run() {
                A.this.superClassMethod();
                r1.run();
            }
        };

        r2.run();
    }
}
```
2. Left click `methodToBeInlined()` in `instance.methodToBeInlined();` like I comment. Then, right click -> Refactor -> Inline. Use the default configuration to inline this method like following, click ok:

![image](https://github.com/user-attachments/assets/4fe268cb-113c-42ef-84d8-bb66925443ba)


The program is successfully refactored without any warning or exception. The refactored program is following, which contains syntax error:
```
public class A {
    int data = 100;

    void superClassMethod() {
        System.out.println(""Data: "" + data);
    }

    static void callingMethod(A instance) {
        Runnable r1 = instance.new Runnable() {// syntax error
		    public void run() {
		        instance.data += 20;
		    }
		};
		
		Runnable r2 = instance.new Runnable() {// syntax error
		    public void run() {
		        A.this.superClassMethod();
		        r1.run();
		    }
		};
		
		r2.run(); // inline call to methodToBeInlined()
    }

    void methodToBeInlined() {
        Runnable r1 = new Runnable() {
            public void run() {
                data += 20;
            }
        };

        Runnable r2 = new Runnable() {
            public void run() {
                A.this.superClassMethod();
                r1.run();
            }
        };

        r2.run();
    }
}
```

## Environment
### OS Version
Windows 10, 64-bit Operating System, x64-based processor
### Eclipse Version
Eclipse IDE for Enterprise Java and Web Developers (includes Incubating components)
Version: 2024-09 (4.33.0)
Build id: 20240905-0614
### JDK Version
java version ""22.0.1"" 2024-04-16
Java(TM) SE Runtime Environment (build 22.0.1+8-16)
Java HotSpot(TM) 64-Bit Server VM (build 22.0.1+8-16, mixed mode, sharing)


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1781/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1782,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1782,eclipse.jdt.ui,2639391464,1782,Unused local cleanup fails when dealing with unused lambda parameter or pattern variable,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-11-06T22:36:23Z,2024-11-07T01:32:42Z,"The new quickfix/cleanup for renmaing unused lambda variables or pattern variables to the unnamed variable causes a failure to occur if the Unused Locals cleanup is used on the same code.  For example:

```
package test2;

public class Foo {
	record R(int i, long l) {}
	public void test () {
		R r = new R(1, 1);
		switch (r) {
		case R(_, long l) -> {}
		case R r2 -> {}
		}
	}
}  
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1782/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1783,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1783,eclipse.jdt.ui,2639426907,1783,[Bug][Inline Method Refactoring] Inline Method refactoring for Generic superclass with a specific type produces uncompilable program,RETester66,176339745,,,OPEN,2024-11-06T22:52:34Z,2024-11-06T22:52:34Z,"## Steps to reproduce
1. Create a class named A:
```
public class A<T> {
    void superMethod(T t) {}
}

```
2. Then, create a class named B:
```
public class B extends A<String> {
    void methodToBeInlined() {
        super.superMethod(""Hello"");
    }

    static void callingMethod(B instance) {
        instance.methodToBeInlined(); // attempt to inline this call
    }
}
```

3. Left click `methodToBeInlined()` in `instance.methodToBeInlined();` like I comment in class B. Then, right click -> Refactor -> Inline. Use default configuration to inline this method like following, click ok:

![image](https://github.com/user-attachments/assets/33ce23f8-ccfb-4502-8513-d20025bdc6e1)

The program is successfully refactored without any warning or exception. The refactored program is following, which contains syntax error:
```
public class A<T> {
    void superMethod(T t) {}
}

public class B extends A<String> {
    void methodToBeInlined() {
        super.superMethod(""Hello"");
    }

    static void callingMethod(B instance) {
        super.superMethod(""Hello""); // syntax error
    }
}
```

## Environment
### OS Version
Windows 10, 64-bit Operating System, x64-based processor
### Eclipse Version
Eclipse IDE for Enterprise Java and Web Developers (includes Incubating components)
Version: 2024-09 (4.33.0)
Build id: 20240905-0614
### JDK Version
java version ""22.0.1"" 2024-04-16
Java(TM) SE Runtime Environment (build 22.0.1+8-16)
Java HotSpot(TM) 64-Bit Server VM (build 22.0.1+8-16, mixed mode, sharing)


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1783/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1785,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1785,eclipse.jdt.ui,2639487297,1785,[Bug][Extract Method Refactoring] Extract method refactoring for Generics in Local Class produces uncompilable program,RETester66,176339745,,,OPEN,2024-11-06T23:31:07Z,2024-11-06T23:31:07Z,"## Steps to reproduce
1. Create a class named A:
```
public class A {
    void foo(Integer value) {
        class Local<T> {
            void bar(T param) {
                Runnable runnable = () -> {
                    System.out.println(param); // Extract method on this statement
                };
            }
        }
    }
}
```
2. Select the statement `System.out.println(param);` like I comment. Then, right click -> Refactor -> Extract Method. Choose the Destination Type as `A`, the configuration to extract this method like following, click ok:

![image](https://github.com/user-attachments/assets/74f58c81-a4cc-4b61-ba7e-beaefa72c6bc)

The program is successfully refactored without any warning or exception. The refactored program is following, which contains syntax error:
```
public class A {
    void foo(Integer value) {
        class Local<T> {
            void bar(T param) {
                Runnable runnable = () -> {
                    extracted(param); // Extract method on this statement
                };
            }
        }
    }

	private void extracted(T param) {// syntax error
		System.out.println(param);
	}
}
```

## Environment
### OS Version
Windows 10, 64-bit Operating System, x64-based processor
### Eclipse Version
Eclipse IDE for Enterprise Java and Web Developers (includes Incubating components)
Version: 2024-09 (4.33.0)
Build id: 20240905-0614
### JDK Version
java version ""22.0.1"" 2024-04-16
Java(TM) SE Runtime Environment (build 22.0.1+8-16)
Java HotSpot(TM) 64-Bit Server VM (build 22.0.1+8-16, mixed mode, sharing)


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1785/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1786,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1786,eclipse.jdt.ui,2640560797,1786,Unable to access old tests in test history if display name contains special character,dttrian,55129227,,,OPEN,2024-11-07T10:26:49Z,2024-11-07T11:37:02Z,"Trying to access an old test session (suite?) from the test history menu, when it contains a test with a display name containing a special character, fails with a blank list of tests.

In the error log it can be found an error with this message
```
The test run could not be imported from file 'C:\Dev\eclipse-workspace\.metadata\.plugins\org.eclipse.jdt.junit.core\history\20241107-105925.384.xml'.
```
and this stack trace:
```
org.eclipse.core.runtime.CoreException: Launch configuration TestWithSpecialChars references non-existing project my.examples.
	at org.eclipse.jdt.launching.JavaRuntime.abort(JavaRuntime.java:1858)
	at org.eclipse.jdt.launching.JavaRuntime.getJavaProject(JavaRuntime.java:1735)
	at org.eclipse.m2e.jdt.internal.launch.MavenLaunchConfigurationListener.updateLaunchConfiguration(MavenLaunchConfigurationListener.java:64)
	at org.eclipse.m2e.jdt.internal.launch.MavenLaunchConfigurationListener.launchConfigurationChanged(MavenLaunchConfigurationListener.java:50)
	at org.eclipse.debug.internal.core.LaunchManager$ConfigurationNotifier.run(LaunchManager.java:220)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.debug.internal.core.LaunchManager$ConfigurationNotifier.notify(LaunchManager.java:204)
	at org.eclipse.debug.internal.core.LaunchManager.launchConfigurationChanged(LaunchManager.java:2010)
	at org.eclipse.debug.internal.core.LaunchConfigurationWorkingCopy.writeNewFile(LaunchConfigurationWorkingCopy.java:380)
	at org.eclipse.debug.internal.core.LaunchConfigurationWorkingCopy.doSave0(LaunchConfigurationWorkingCopy.java:259)
	at org.eclipse.debug.internal.core.LaunchConfigurationWorkingCopy.doSave(LaunchConfigurationWorkingCopy.java:229)
	at org.eclipse.debug.internal.core.LaunchConfigurationWorkingCopy.doSave(LaunchConfigurationWorkingCopy.java:187)
	at org.eclipse.m2e.jdt.internal.launch.MavenRuntimeClasspathProvider.enable(MavenRuntimeClasspathProvider.java:398)
	at org.eclipse.m2e.jdt.internal.launch.MavenRuntimeClasspathProvider.enable(MavenRuntimeClasspathProvider.java:427)
	at org.eclipse.m2e.jdt.internal.launch.MavenLaunchConfigurationListener.mavenProjectChanged(MavenLaunchConfigurationListener.java:132)
	at org.eclipse.m2e.core.internal.project.registry.ProjectRegistryManager.notifyProjectChangeListeners(ProjectRegistryManager.java:888)
	at org.eclipse.m2e.core.internal.project.registry.ProjectRegistryManager.applyMutableProjectRegistry(ProjectRegistryManager.java:1040)
	at org.eclipse.m2e.core.internal.project.registry.ProjectRegistryManager.refresh(ProjectRegistryManager.java:320)
	at org.eclipse.m2e.core.internal.project.ProjectConfigurationManager.configureNewMavenProjects(ProjectConfigurationManager.java:255)
	at org.eclipse.m2e.core.internal.project.ProjectConfigurationManager.lambda$1(ProjectConfigurationManager.java:165)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.executeBare(MavenExecutionContext.java:394)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.execute(MavenExecutionContext.java:275)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.execute(MavenExecutionContext.java:214)
	at org.eclipse.m2e.core.internal.project.ProjectConfigurationManager.importProjects(ProjectConfigurationManager.java:138)
	at org.eclipse.m2e.core.ui.internal.wizards.ImportMavenProjectsJob$1.doCreateMavenProjects(ImportMavenProjectsJob.java:71)
	at org.eclipse.m2e.core.ui.internal.wizards.AbstractCreateMavenProjectsOperation.run(AbstractCreateMavenProjectsOperation.java:56)
	at org.eclipse.m2e.core.ui.internal.wizards.ImportMavenProjectsJob.runInWorkspace(ImportMavenProjectsJob.java:80)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:43)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
```

I can reproduce the bug with this test class:
```
package my.examples;

import java.util.stream.Stream;

import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;

public class TestWithSpecialChars {

	@ParameterizedTest
	@MethodSource(""testArgs"")
	void test(String value) {
		// do nothing
	}

	private static Stream<Arguments> testArgs() {
		return Stream.of(
				Arguments.of(
						""\u0000 hi""
				)
		);
	}
}
```

My eclipse version is 2023-12 (4.30.0) - Build id: 20231201-2043.
My Java version is 17.0.9 2023-10-17 LTS.

The steps to reproduce the bug are:
1. import the project in Eclipse
2. run the tests of the project
3. run the tests of the project (again)
4. from the ""Test run history"" of the JUnit view select the first test execution (the one indicated above, at step 2)
5. no test execution is shown in the JUnit view (it is blank)
6. an error appears in the Error Log

I have attached the whole sample project that exhibits the bug.

[special-char-test.zip](https://github.com/user-attachments/files/17659964/special-char-test.zip)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1786/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1786,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Svw96,eclipse.jdt.ui,2461994874,1786,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-11-07T11:28:15Z,2024-11-07T11:28:15Z,"please add the full stacktrace, and a full description which steps have to be done to reproduce","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Svw96/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1787,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1787,eclipse.jdt.ui,2642970166,1787,[23] Markdown is not rendered when \r and \n are code in unicode,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,OPEN,2024-11-08T06:00:55Z,2025-01-09T01:13:41Z,"This was originally raised in [3239](https://github.com/eclipse-jdt/eclipse.jdt.core/issues/3239)
The jdt.core part has been addressed. The UI, where the rendering to HTML happens has to handle the unicode characters to create the correct HTML content.

The markdown comment is this:
/// Unicode in markdown \u000A///\u000D///\u000D\u000A///here

And this is the HTML created by `JavadocContentAccess2.getHTMLContent()`:
`Unicode in markdown \u000A/// \u000D/// \u000D\u000A/// here`

Javadoc from JDK creates this:
```
<div class=""block""><p>Unicode in markdown</p>
<p>here</p>
</div>
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1787/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1792,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1792,eclipse.jdt.ui,2645963302,1792,Splitting multiple cases in switch rule fails with IOOBE since I20241108-1800,carstenartur,3164220,Carsten Hammer,,CLOSED,2024-11-09T11:34:48Z,2024-11-12T05:23:38Z,"There is a test for ""Add quick assist to split case expressions""

https://bugs.eclipse.org/bugs/show_bug.cgi?id=545261

https://git.eclipse.org/r/c/jdt/eclipse.jdt.ui/+/139182

Not sure if the test itself has a bug this is what I get (can reproduce locally)

java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)
	at java.base/java.util.Objects.checkIndex(Objects.java:359)
	at java.base/java.util.ArrayList.get(ArrayList.java:427)
	at org.eclipse.jdt.ui.tests.quickfix.AssistQuickFixTest12.testSplitSwitchCaseLabelRuleStatement(AssistQuickFixTest12.java:161)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:54)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:42)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:72)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:73)
	at org.junit.platform.suite.engine.SuiteLauncher.execute(SuiteLauncher.java:63)
	at org.junit.platform.suite.engine.SuiteTestDescriptor.execute(SuiteTestDescriptor.java:150)
	at org.junit.platform.suite.engine.SuiteTestEngine.lambda$execute$0(SuiteTestEngine.java:73)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1845)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.platform.suite.engine.SuiteTestEngine.execute(SuiteTestEngine.java:73)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:73)
	at org.junit.platform.suite.engine.SuiteLauncher.execute(SuiteLauncher.java:63)
	at org.junit.platform.suite.engine.SuiteTestDescriptor.execute(SuiteTestDescriptor.java:150)
	at org.junit.platform.suite.engine.SuiteTestEngine.lambda$execute$0(SuiteTestEngine.java:73)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1845)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.platform.suite.engine.SuiteTestEngine.execute(SuiteTestEngine.java:73)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.maven.surefire.api.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:137)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:148)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:88)
	at org.eclipse.tycho.surefire.osgibooter.OsgiSurefireBooter.run(OsgiSurefireBooter.java:140)
	at org.eclipse.tycho.surefire.osgibooter.AbstractUITestApplication$1.run(AbstractUITestApplication.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.E4Testable.lambda$1(E4Testable.java:127)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:5042)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4522)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1151)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:663)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:570)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:178)
	at org.eclipse.tycho.surefire.osgibooter.UITestApplication.runApplication(UITestApplication.java:34)
	at org.eclipse.tycho.surefire.osgibooter.AbstractUITestApplication.run(AbstractUITestApplication.java:129)
	at org.eclipse.tycho.surefire.osgibooter.UITestApplication.start(UITestApplication.java:44)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:668)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:605)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1481)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1454)

Could this have something to do with
https://github.com/eclipse-jdt/eclipse.jdt.core/pull/3264
?

Here a link to a failing build
https://ci.eclipse.org/jdt/job/eclipse.jdt.ui-github/job/PR-1725/8/testReport/junit/(root)/AutomatedSuite%20QuickFixTestSuite%20AssistQuickFixTest12/testSplitSwitchCaseLabelRuleStatement/","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1792/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1792,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6TBxT3,eclipse.jdt.ui,2466714871,1792,NA,carstenartur,3164220,Carsten Hammer,,NA,2024-11-10T12:25:00Z,2024-11-10T12:25:00Z,@srikanth-sankaran could this have something to do with latest switch related changes in core?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6TBxT3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1792,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6TB0zP,eclipse.jdt.ui,2466729167,1792,NA,srikanth-sankaran,131454720,Srikanth Sankaran,,NA,2024-11-10T13:08:01Z,2024-11-10T13:08:01Z,I'll take a look. Do you mean a test is failing or the build itself failed ??,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6TB0zP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1792,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6TB2HE,eclipse.jdt.ui,2466734532,1792,NA,carstenartur,3164220,Carsten Hammer,,NA,2024-11-10T13:22:44Z,2024-11-10T13:22:44Z,"> I'll take a look. Do you mean a test is failing or the build itself failed ??

A test is failing - failing hhe build to run through 

org.eclipse.jdt.ui.tests.quickfix.AssistQuickFixTest12.testSplitSwitchCaseLabelRuleStatement(AssistQuickFixTest12.java:161)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6TB2HE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1792,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6TCDSR,eclipse.jdt.ui,2466788497,1792,NA,srikanth-sankaran,131454720,Srikanth Sankaran,,NA,2024-11-10T15:59:11Z,2024-11-10T15:59:11Z,"There have been lots of changes recently in ECJ wrt compiling switch - but I when I grab the test case from [here](https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/master/org.eclipse.jdt.ui.tests/ui/org/eclipse/jdt/ui/tests/quickfix/AssistQuickFixTest12.java) that snippet compiles fine and in an SDK instance launched with latest jdt-core (as in master/HEAD) plugins but from a dev ide with these versions `
Version: 2024-12 (4.34) Build id: I20241103-1800` I am able to split the cases without any issue.

So I will wait for @noopur2507 to triage this and raise a defect against jdt-core if called for. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6TCDSR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1792,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6TCD2r,eclipse.jdt.ui,2466790827,1792,NA,srikanth-sankaran,131454720,Srikanth Sankaran,,NA,2024-11-10T16:05:32Z,2024-11-10T16:05:32Z,"> A test is failing - failing hhe build to run through

Thanks, I have adjusted the title accordingly. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6TCD2r/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1792,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6TCEqk,eclipse.jdt.ui,2466794148,1792,NA,srikanth-sankaran,131454720,Srikanth Sankaran,,NA,2024-11-10T16:14:45Z,2024-11-10T16:14:45Z,"I downloaded :

Eclipse SDK

Version: 2024-12 (4.34)
Build id: I20241110-0600

and with this snippet pasted in:

```
package test;
			public class Cls {
			    public static void foo(Day day) {
			        String weekDayOrEnd = switch (day) {
			            case SATURDAY, SUNDAY -> ""Weekend"";
			            case MONDAY, TUESDAY, WEDNESDAY -> ""Weekday"";
			            case THURSDAY, FRIDAY -> ""Weekday"";
			        };
			    }
			}
			
			enum Day {
			    MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY;
			}
```

I am able to ask for the last multi label case to be split and have it split (with some messed up formatting though)

So don't know why exactly the test is failing. Will wait for a jdt-ui person to investigate. Thanks","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6TCEqk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1792,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6TE7HH,eclipse.jdt.ui,2467541447,1792,NA,srikanth-sankaran,131454720,Srikanth Sankaran,,NA,2024-11-11T08:37:25Z,2024-11-11T08:37:25Z, Looks like @noopur2507  is away - is anyone else able to triage this ? @jjohnstn perhaps ?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6TE7HH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1792,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6TFO8L,eclipse.jdt.ui,2467622667,1792,NA,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,NA,2024-11-11T09:15:40Z,2024-11-11T09:15:40Z,"The test is crashing because it's simply trying to get the proposal at 0 without asserting the size. So, it appears the test was expecting > 0 proposal, but not getting any.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6TFO8L/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1792,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6TGUh9,eclipse.jdt.ui,2467907709,1792,NA,jarthana,1478908,Jay Arthanareeswaran,jarthana@in.ibm.com,NA,2024-11-11T11:09:16Z,2024-11-11T11:09:16Z,"OK, the test was wrong as it was testing switch expressions at compliance 12 instead of 14. It was working because the SourceElementParser in jdt.core allowed it at compliance 12. I have a patch to address this.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6TGUh9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1793,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1793,eclipse.jdt.ui,2648950349,1793,"[junit] [2024-09 regression?] ""Java 8 Project - Run As - JUnit test"" fails because of incompatible VM arguments added to launch config",rhoehener,13407181,Reto Höhener,,OPEN,2024-11-11T10:18:00Z,2024-11-12T11:39:24Z,"The automatically created junit launch configuration now contains the line:

`--add-opens java.desktop/com.sun.java.swing.plaf.windows=ALL-UNNAMED`

Suggestion would be to only add VM options compatible with the project execution environment.

![image](https://github.com/user-attachments/assets/f94e483f-a2ed-4bab-a804-d09a54c8da1d)

![image](https://github.com/user-attachments/assets/9142a977-f66d-4dc8-9312-65762c22a93b)

![image](https://github.com/user-attachments/assets/30053dbb-6eb9-4ebe-b24d-2e6f00562beb)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1793/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1793,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6TGHkA,eclipse.jdt.ui,2467854592,1793,NA,srikanth-sankaran,131454720,Srikanth Sankaran,,NA,2024-11-11T10:46:05Z,2024-11-11T10:46:05Z,"Not entirely sure this is the right place, sorry if misassigned. Please redirect","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6TGHkA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1793,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6TPdoN,eclipse.jdt.ui,2470304269,1793,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-11-12T11:38:09Z,2024-11-12T11:38:09Z,"relevant code may be:
org.eclipse.jdt.junit.launcher.JUnitLaunchConfigurationDelegate.collectAddOpensVmArgs(String, List<String>, String, ILaunchConfiguration)
org.eclipse.jdt.ui.unittest.junit.launcher.JUnitLaunchConfigurationDelegate.collectAddOpensVmArgs(String, List<String>, String, ILaunchConfiguration)
org.eclipse.pde.unittest.junit.launcher.JUnitPluginLaunchConfigurationDelegate.collectAddOpensVmArgs(String, List<String>, String, ILaunchConfiguration)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6TPdoN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1795,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1795,eclipse.jdt.ui,2652421594,1795,[quick fix] No quickfix suggestion for switch over sealed interfaces,jubax,10562923,Juergen Baier,baier@semedy.com,CLOSED,2024-11-12T14:48:16Z,2024-12-04T18:25:01Z,"I was pointed to the jdt.ui project for quick fix bugs. See https://github.com/eclipse-jdt/eclipse.jdt.core/issues/3300. I copied and modified the quickfix-related part to this new issue.

If you have a class with a ""sealed interface"" then no appropriate case labels are generated for quick fix.
```
public class SealedInterfaceContentAssist {

	sealed interface Foo {
		record FooImpl_a(String x) implements Foo {
		}

		record FooImpl_b(String y, String z) implements Foo {
		}
	}

	public static void main(String[] args) {
		Foo foo = getFoo();
		switch (foo) { // <== No quickfix for creating the case labels
		}
	}

	private static Foo getFoo() {
		return new Foo.FooImpl_b(""a"", ""b"");
	}

}
```
This quick fix would be important because there also is no appropriate content assist for this case. And the syntax for complex cases makes it hard to type it.

The quick fix should generate
```
	public static void main(String[] args) {
		Foo foo = getFoo();
		switch (foo) {
			case FooImpl_a(String x) -> ;
			case FooImpl_b(String y, String z) -> ;
		}
	}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1795/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1796,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1796,eclipse.jdt.ui,2652657429,1796,Completion & Quick-fix not suggesting a visible inner class,rgrunber,1417342,Roland Grunberg,,OPEN,2024-11-12T16:15:16Z,2024-11-12T16:18:34Z,"From https://github.com/redhat-developer/vscode-java/issues/3815 (reproduced in Eclipse)

```
Version: 2024-12 (4.34)
Build id: I20241111-1800
```

**OuterClass.java**
```
package test;
public interface OuterClass {
  public class InnerClass {
  }
}
```

**Mapper.java**
```
package test;

public class Mapper {

  public void te() {
	  new InnerClass
  }
  
  class WrapperOne {

    public void test() {
      new InnerClass();
    }
  }
}
```

- For `new InnerClass|` , there is no quick-fix to import `import test.OuterClass.InnerClass` so that `InnerClass` could be referenced directly as `new InnerClass();`. Another option would have been to qualify `new InnerClass()` as `new OuterClass.InnterClass()` but I'm not sure if there's a quick-fix for this.
- The completion engine doesn't suggest `new InnerClass()` even though unresolved types can get suggested and are automatically imported (eg. `new ArrayList|`) when unresolved.

I seem to recall that the unresolved import quick-fixes do use completion engine API (on constructors) to produce suggestions so maybe the bug is in completion.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1796/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1797,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1797,eclipse.jdt.ui,2654940385,1797,[code mining] Extra spaces when showing method parameter name hints,JanecekPetr,1746404,Petr Janeček,,OPEN,2024-11-13T10:12:42Z,2024-11-27T09:57:39Z,"A fresh workspace, a fresh installation of Eclipse for Java,
```
Version: 2024-09 (4.33.0)
Build id: 20240905-0614
Eclipse Java Development Tools: 3.19.600.v20240903-0240
```

Parameter name hints enabled:
![{F146FF7C-2D84-4292-B1FA-6262628D1C30}](https://github.com/user-attachments/assets/32f4847f-544a-4ce7-826d-ed6f1c628b6c)

There are two extra spaces after the parameter name:
![{9D91F000-D0E1-4675-9A69-CE708299BECF}](https://github.com/user-attachments/assets/9632bde2-e216-46fe-b35e-35a4c4496150)

I have no idea where the extra spaces are coming from as the code itself seems to only add one: https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/2886912fd00e7d4f0dc50af8ff17cbde0007a382/org.eclipse.jdt.ui/ui/org/eclipse/jdt/internal/ui/javaeditor/codemining/JavaMethodParameterCodeMining.java#L31

Windows 11 in Czech locale, Java 23","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1797/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1797,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Tc2-V,eclipse.jdt.ui,2473815957,1797,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-11-13T14:41:57Z,2024-11-13T14:41:57Z,Feel free to propose a fix.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Tc2-V/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1797,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6U5ncN,eclipse.jdt.ui,2498131725,1797,NA,jannisCode,125768370,,,NA,2024-11-25T14:13:11Z,2024-11-25T14:13:11Z,"@JanecekPetr I am currently trying to replicate your findings, but even when using the exact version, build id etc, i can´t seem to get your results. Is it possible for you to show me more details about the code you wrote and the settings? 
When I try it it looks like this:
![image](https://github.com/user-attachments/assets/2b3cd2b9-d225-4b0f-a52d-b4ae704f7451)
(the settings are also just like yours)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6U5ncN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1797,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6U55Eb,eclipse.jdt.ui,2498203931,1797,NA,JanecekPetr,1746404,Petr Janeček,,NA,2024-11-25T14:39:57Z,2024-11-25T14:39:57Z,"The code is really minimal,

```java
public class Playground {
    public static void main(String... args) {
        Car car = new Car(5);
    }
}

record Car(int size) {}
```

the point really was to just show any parameter name hint, as all of them behave the same. If you can get any parameter hint anywhere, that should get the same result.

![{434D80F7-C5FA-4AAB-B892-B35C160436CA}](https://github.com/user-attachments/assets/e5a16b55-e77b-4b5f-8a0a-ba330adae010)

and here's the whole Code mining page:
![{AE3E861D-25DB-49BB-9D50-A07AFDF649E7}](https://github.com/user-attachments/assets/bfee41b0-ec46-4a4f-8daf-4597225fcd4a)

This is on my regular every-day instance and my regular workspace, but I could do it with a fresh installation and a fresh workspace again, too, if you wanted. The only configuration change I did was to enable code minings and parameter hints.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6U55Eb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1797,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6U6tG8,eclipse.jdt.ui,2498417084,1797,NA,jannisCode,125768370,,,NA,2024-11-25T16:00:16Z,2024-11-25T16:00:16Z,"@JanecekPetr Thank you for the quick answer! After testing and looking at the code, i found out that there is some weird behavior going on when checking if the method parameter name should be displayed. (Thats a different issue though)
Anyways, on my machine, with the same eclipse (newly installed) it works just fine. Maybe try reinstalling it, and if it still does not work I can take a closer look at it.  
![image](https://github.com/user-attachments/assets/c96efc6f-ac2c-4b66-911f-1ae00f395b30)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6U6tG8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1797,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6VN1nx,eclipse.jdt.ui,2503432689,1797,NA,JanecekPetr,1746404,Petr Janeček,,NA,2024-11-27T09:57:09Z,2024-11-27T09:57:09Z,"Okay, I tried another computer, the problem goes away. Interesting.

I tried ruling out a DPI issue (unplugged my monitors, restarted eclipse), the issue remained. I tried switching to a different font, the issue remained. I have absolutely no idea what else this particular machines has that the others don't. If you have any guesses or things for me to try, fire away!

If I ever find it, I'll report back. Until then I think it's safe to close this as unreproducable, or freeze it until someone else comes here with more info.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6VN1nx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1798,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1798,eclipse.jdt.ui,2654999700,1798,[code mining] Consider adding JUnit minings / debugging minings,JanecekPetr,1746404,Petr Janeček,,OPEN,2024-11-13T10:37:57Z,2024-11-15T06:49:00Z,"The original code mining repo, https://github.com/angelozerr/jdt-codemining, has a few more tricks than the current JDT. Namely,

- JUnit minings for running specific tests, seeing their status: https://github.com/angelozerr/jdt-codemining/tree/master/org.eclipse.jdt.codemining/src/org/eclipse/jdt/experimental/junit/codemining
- an incredible debug mining showing variable values inline, https://github.com/angelozerr/jdt-codemining/tree/master/org.eclipse.jdt.codemining/src/org/eclipse/jdt/experimental/debug/ui/codemining
- (and `var` local inference type, https://github.com/angelozerr/jdt-codemining/tree/master/org.eclipse.jdt.codemining/src/org/eclipse/jdt/experimental/ui/javaeditor/codemining/var, already requested by https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/329)

Are we considering adding any of those? I'd gladly help with asking for permission from the original author, if needed, and integrating the cleaned-up code into JDT if that helps in any way.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1798/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1798,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Tc1j5,eclipse.jdt.ui,2473810169,1798,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-11-13T14:39:44Z,2024-11-13T14:39:44Z,"Maybe you can share a screenshot what it would look like?
Is there a reason why it should be implemented in JDT instead of a plugin on top?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Tc1j5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1798,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6TeTpB,eclipse.jdt.ui,2474195521,1798,NA,carstenartur,3164220,Carsten Hammer,,NA,2024-11-13T16:55:22Z,2024-11-13T16:55:22Z,"What contribution is welcome and where do you prefer it to be kept separate? In fact I was thinking about contributing a cleanup to migrate junit 4 to junit 5. definitly this is junit specific. On the other side there is already a lot of junit specific code in jdt and jdts test itself are based on junit too.
See https://github.com/carstenartur/sandbox/pull/110","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6TeTpB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1798,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Tjoxd,eclipse.jdt.ui,2475592797,1798,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-11-14T07:19:18Z,2024-11-14T07:19:18Z,"Good question, I'd say java specific thinks belong to the scope of JDT.UI. JUnit does not, but is interesting for the eclipse ide as a whole. I actually would try to use it to convert SWT to junit 5. The problem i see is that as the codebase grows it is hard to maintain. Often edge cases remain unsolved which gives a bad light on jdt.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Tjoxd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1798,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6TtH5_,eclipse.jdt.ui,2478079615,1798,NA,carstenartur,3164220,Carsten Hammer,,NA,2024-11-15T06:48:59Z,2024-11-15T06:48:59Z,"Imho the strong connection of junit and Eclipse is a strength and has a reason: Erich Gamma, famous member of the gang of four and involved in the early days of Eclipse and JUnit at the same time.

https://www.infoq.com/interviews/gamma-jazz-eclipse-junit-design-patterns/","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6TtH5_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1800,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1800,eclipse.jdt.ui,2666736121,1800,javadoc Markdown issues,nlisker,37422899,,,OPEN,2024-11-17T23:40:02Z,2024-11-19T09:30:15Z,"Trying to use Markdown documentation, I came across quite a few issues with it. I'm not sure if this feature is still WIP from Eclipse's perspective (it was delivered in Java 23) and which of these is known, so here is a summary from which individual issues can be created:

* Javadoc view doesn't switch to MD docs when the cursor is placed in the docs area, unlike with HTML comments. The only way to switch to it is to click on the class name itself (for class docs).
* Javadoc view doesn't update in real time as text is being typed for MD, but does for HTML.
* Pressing enter while writing docs in MD places the caret (and the rest of the line) on the next line right after `///` instead of 1 space after that, as it does with HTML's `* `.
* Auto complete is not triggered for links in MD as it does for HTML: Typing `{@link Object#` pops up the suggestions, but in MD `[Object#` does not. Pressing ctrl+space will bring up the suggestions, so there is recognition of the context (it just needs some encouragement).
* Typing apostrophe (`'`) in MD creates an enclosing one as well, as if I'm typing a `char` in Java. This means that if I try to type `it's` it comes out as `it's'`.
* Typing 3 ` to start a codeblock and pressing enter does not automatically add a closing ```. Perhaps this is an enhancement request.
* Not sure if this is relevant for Eclipse, but syntax highlighting `(```java or ```css)` don't do anything. The JEP mentions external libraries being needed, but I wasn't sure if at least Java is automatically included. Perhaps it is a reasonable enhancement request to include java syntax coloring for JDT?
* I hit #1615 as well. My compliance level for the project is 23 (with and without preview features enabled).
* Using `[i]` inside a code block renders it as a broken link instead of literally:
  ```
  /// ```
  /// int i = 3;
  /// int[] d = new int[i];
  /// ```
  ```
  produces
  ```
  int i = 3;
  int[] d = new int<code><a href='eclipse-javadoc:%E2%98%82=bugs/src%3Cmarkdown%7BMDTest.java%E2%98%83MDTest%E2%98%82i'>i</a></code>;
  ```
* Formatting (ctrl+shift+F) does not do anything in MD, while in HTML it wraps a long line according to the formatter setting.

Tested with build id: I20241117-0600","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1800/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1801,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1801,eclipse.jdt.ui,2671209353,1801,Syntax highlight do not always work,laeubi,1331477,Christoph Läubrich,,OPEN,2024-11-19T08:09:19Z,2025-01-15T10:29:53Z,"```
Version: 2024-12 M3 (4.34.0 M3)
Build id: 20241114-0154
```

I noticed since a while now that *sometimes* the syntax highlighting do not work (but can't find a reproducer yet).

What happens is that 

1. I have a Java Editor open and syntax coloring is all fine
2. Then I edit the code (e.g. adding a space at end of line)
3. This suddenly makes some (but not all) blocks of code render without any highlights
4. Save the file and often coloring is back
5. In some cases the problem persist and only close/open the editor helps

I just wanted to let people know about this to probably share ideas how one can find out more details or if others have seen such issues already.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1801/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1801,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6agr01,eclipse.jdt.ui,2592259381,1801,NA,laeubi,1331477,Christoph Läubrich,,NA,2025-01-15T10:29:52Z,2025-01-15T10:29:52Z,I have now also seen this in the Eclipse-SDKs Ibuild but still no idea how to reproduce it.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6agr01/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1802,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1802,eclipse.jdt.ui,2675272620,1802,Enable code mining for method references by default,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,OPEN,2024-11-20T10:00:42Z,2024-11-20T19:02:48Z,"Code minings in Eclipse are hard to discover for users, other IDEs enable (some) of them by default, hence making it obvious that they have it. In a recent workshop my clients were really surprised that the Eclipse IDE also has these.

I setting which I find useful and non-disruptive is the display of a method usage on top of methods.

![image](https://github.com/user-attachments/assets/6d8cfd86-bdba-40d3-8a01-d79a77cf5a89)

Maybe we should enable this by default? This would signal to the user that we also support this.

cc @mickaelistria @jjohnstn ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1802/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1802,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6UTnMx,eclipse.jdt.ui,2488169265,1802,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-11-20T10:18:02Z,2024-11-20T10:18:02Z,"I had tried code mining once and disabled it because it behaved slow and looked more like an animation then a static text editor. Just tried it again with the setting suggested: while scrolling through a .java file it constantly moves lines around inserting the ""x reference"" Lines. I would only use it if it would not move lines around (possibly reserving the needed space ahead until number is available). It does not give enough value to justify the distraction.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6UTnMx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1802,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6UUCMa,eclipse.jdt.ui,2488279834,1802,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2024-11-20T11:04:03Z,2024-11-20T11:04:03Z,"For some cases, like error reports or parameter names, I do love code mining because they give me an information I almost always find useful while reading code. However I think that the ""references"" code mining is pretty useless to me in most cases; particularly if I already have a warning for unused variables/methods (the only case I care about is ""0 reference"" and is already reported as warning).
So if only one code mining were to be enabled by default, I would instead suggest the error markers and/or method parameter names.
However, the implementation of code minings can still sometimes slightly annoying as described by @jukzi (and several concrete issues against eclipse.platform.ui repo). Note that some of the concerns mentioned above might have been fixed in the meantime and stand not true any more so they should be verified and confirmed before making them a criterion of a decision. For example the scrolling strategy got improved a couple of years ago so the line that has caret shouldn't move usually.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6UUCMa/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1802,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6UUja6,eclipse.jdt.ui,2488415930,1802,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-11-20T12:08:17Z,2024-11-20T12:08:17Z,Thanks for the suggestion @vogella. I would really like to see a seamlessly working parameter name! Unfortunately it is not yet  seamlessly working for me though :-(,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6UUja6/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1802,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6UUmXv,eclipse.jdt.ui,2488428015,1802,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2024-11-20T12:14:36Z,2024-11-20T12:14:36Z,"I find the parameter name code mining super annoying during development and super helpful during reading code. The method reference annotation is the only one I find always super helpful, as it allows me to navigate to the callers of the code and I see if a public method is not called in the workspace (can therefore can be deleted in most client implementations as they rarely define external API).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6UUmXv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1802,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6UYE-r,eclipse.jdt.ui,2489339819,1802,NA,HannesWell,44067969,Hannes Wellmann,,NA,2024-11-20T19:02:47Z,2024-11-20T19:02:47Z,"AFAIK another issue with displaying the number of references is that it can require a lot of computational resources for public methods.

But if everything would work well it would be nice to have.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6UYE-r/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1803,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1803,eclipse.jdt.ui,2675732744,1803,[Externalize Strings Dialog] StringIndexOutOfBoundsException,wolfgang-ch,1283445,Wolfgang Schramm,,CLOSED,2024-11-20T12:38:04Z,2024-12-06T09:25:38Z,"The original issue is from Aug 1, 2024 https://github.com/eclipse-platform/.github/issues/219, it is now moved here because of https://github.com/eclipse-platform/.github/issues/219#issuecomment-2488250785

## Steps to reproduce

Open the ""Externalize Strings..."" dialog with this simple class

```
public class NLTest {

   public static final String SYMBOL_AMPERSAND = ""&"";  //$NON-NLS-1$
   public static final String SYMBOL_QUOTA     = ""\""""; //$NON-NLS-1$
}
```

I expected: The NLS dialog should open

But got: The NLS dialog did not opened

With this workaround the NLS dialog opens

```
public class NLTest {

   public static final String SYMBOL_AMPERSAND = ""&"";                                       //$NON-NLS-1$
   public static final String SYMBOL_QUOTA     = new StringBuilder().append('""').toString();
}
```


## Here is some relevant log output

From the terminal
```
java.lang.StringIndexOutOfBoundsException: begin 3, end 0, length 3
        at java.base/java.lang.String.checkBoundsBeginEnd(String.java:4606)
        at java.base/java.lang.String.substring(String.java:2709)
        at org.eclipse.jdt.internal.corext.refactoring.nls.NLSHint.stripQuotes(NLSHint.java:266)
        at org.eclipse.jdt.internal.corext.refactoring.nls.NLSHint.createSubstitutions(NLSHint.java:221)
        at org.eclipse.jdt.internal.corext.refactoring.nls.NLSHint.<init>(NLSHint.java:106)
        at org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring.<init>(NLSRefactoring.java:92)
        at org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring.create(NLSRefactoring.java:113)
        at org.eclipse.jdt.internal.ui.refactoring.nls.ExternalizeWizard.lambda$0(ExternalizeWizard.java:84)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
        at org.eclipse.jdt.internal.ui.refactoring.nls.ExternalizeWizard.open(ExternalizeWizard.java:81)
        at org.eclipse.jdt.ui.actions.ExternalizeStringsAction.run(ExternalizeStringsAction.java:191)
        at org.eclipse.jdt.ui.actions.ExternalizeStringsAction.run(ExternalizeStringsAction.java:156)
        at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:278)
        at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:252)
        at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
        at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:581)
        at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:415)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:91)
        at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4326)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1174)
        at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4124)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3712)
```

## Tested under this environment:
* OS & version: Windows 10
* Eclipse IDE/Platform version (as shown in *Help > About*): I20240731-1800

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1803/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1803,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6UZJjz,eclipse.jdt.ui,2489620723,1803,NA,nettozahler,106603198,,,NA,2024-11-20T21:57:35Z,2024-11-20T21:57:35Z,"I can deliver a PR for this. One question first: do we have a utility class where I can add a method like this:
`public static boolean isTextBlock(String str)`","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6UZJjz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1804,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1804,eclipse.jdt.ui,2676834004,1804,"Autocomplete does not work since 2024-06 with ""Completion Overwrites""",Bestsoft101,163331759,,,OPEN,2024-11-20T18:42:08Z,2025-01-08T15:12:14Z,"I recently upgraded from Eclipse 2020-06 to 2024-06 and noticed an issue.

Let's start with the following class:

```
public class Block {
	
	public static Block stone = new Block(0);
	public static Block dirt = new Block(1);
	public static Block wood = new Block(2);
	public static Block sand = new Block(3);
	
	public int id;
	
	public Block(int id) {
		this.id = id;
	}
	
}
```
And now I'm going to put some of the IDs into an array:
```
	public static void main(String[] args) {
		int[] ids = new int[] {
				Block.stone.id,
				Block.dirt.id,
				Block.sand.id
		};
	}
```
Everything fine here, but now I want to change one of the blocks.
Here's what happens in Eclipse 2020-06:

https://github.com/user-attachments/assets/8f2ad9ce-d44e-4008-8665-155bbc67f0cd

I remove the old name, I choose the new name in the menu, and I press Enter to auto-complete it.

Here's what happens in Eclipse 2024-06:

https://github.com/user-attachments/assets/a3ca4b74-03ee-49d7-9477-7cd89c3b28c5

When I type ``woo`` to filter the list, it auto-completes to ``wwood``, which I then have to manually fix.
If I don't type anything and scroll down the list, it doesn't autocomplete anything.

Do note that I am using ``Completion Inserts`` instead of ``Completion Overwrites`` in both cases, which is the default setting in 2020-06 but not in 2024-06. But even when using the default ``Completion Overwrites`` in 2024-06, it doesn't work properly
![image](https://github.com/user-attachments/assets/684e745e-4ee5-4093-9ff7-6c0bd580a985)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1804/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1804,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6VuH3y,eclipse.jdt.ui,2511896050,1804,NA,Bestsoft101,163331759,,,NA,2024-12-02T15:47:06Z,2024-12-02T15:47:06Z,"I just realized i got the version number wrong, its 2024-06 not 2024-12","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6VuH3y/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1804,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Zp93q,eclipse.jdt.ui,2577915370,1804,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-08T15:11:59Z,2025-01-08T15:11:59Z,I can reproduce the issue I20250108-0430. Looks really bad.  @jjohnstn can you take a look?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Zp93q/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1806,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1806,eclipse.jdt.ui,2679966467,1806,Add Support for Importing IntelliJ IDEA Formatting and Optimize Imports Settings in Eclipse,mehmedmaljoki,30213495,Mehmed Maljoki,,OPEN,2024-11-21T15:39:20Z,2024-11-22T12:11:18Z,"- [x] I verified [latest Integration Build of Eclipse SDK](https://download.eclipse.org/eclipse/downloads/) doesn't provide the feature.

## Suggestion

From a fresh installation and clean workspace:

I reach state:

Open Eclipse.

1. Go to Window → Preferences → Java → Code Style → Formatter.
2. Attempt to import formatting settings.
3. Currently, Eclipse only supports importing formatting settings from Eclipse .xml configuration files. There is no option to directly import formatting and optimize imports settings from IntelliJ IDEA.

And would like to be able to:

I would like to have an option to import IntelliJ IDEA formatting settings (code style rules, optimize imports configurations, etc.) directly into Eclipse. This would greatly enhance usability for teams that work with mixed IDE environments and improve collaboration between developers using different tools.

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1806/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1806,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6UoY5D,eclipse.jdt.ui,2493615683,1806,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-11-22T12:11:16Z,2024-11-22T12:11:16Z,"Can you contribute such enhancement? Otherwise it is unlikely solved.
see https://github.com/eclipse-jdt#contributing","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6UoY5D/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1807,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1807,eclipse.jdt.ui,2680421503,1807,"""Insert single proposals automatically"" does not work in 2024-06",Bestsoft101,163331759,,,OPEN,2024-11-21T18:10:47Z,2025-01-08T15:18:26Z,"I noticed this issue when updating from 2020-06 to 2024-06

In Eclipse 2020-06, typing ``sysout`` and pressing Ctrl + Enter autocompletes it to ``System.out.println()``, when ""Insert single proposals automatically"" is enabled. In 2024-06, it doesn't autocomplete and the option has no effect.

The option:
![2024-11-21 19_01_52-Preferences](https://github.com/user-attachments/assets/97ec339e-575b-4db8-a404-c91ecffc0744)

Eclipse 2020-06: After turning on the option, it autocompletes

https://github.com/user-attachments/assets/b3ba573f-81eb-44bb-9f01-cb2247141060

Eclipse 2024-06: It just opens the menu

https://github.com/user-attachments/assets/9da439ce-49ec-4230-9012-41f0c6e8116d
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1807/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1807,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6UoXkn,eclipse.jdt.ui,2493610279,1807,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-11-22T12:08:22Z,2024-11-22T12:08:22Z,"When i cycle through different proposal pages by multiple hits of crtl+space i 'sometimes' see multiple suggestions:
![image](https://github.com/user-attachments/assets/b0f5f0ac-eb87-4f16-bb8b-30fa31719dc2)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6UoXkn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1807,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6UoaWk,eclipse.jdt.ui,2493621668,1807,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-11-22T12:14:49Z,2024-11-22T12:14:49Z,"please verify workaround: configure Insertion to Completion inserts:
![image](https://github.com/user-attachments/assets/807257b9-84ad-4f15-9fc8-ee9a3bc28b97)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6UoaWk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1807,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Upnd1,eclipse.jdt.ui,2493937525,1807,NA,Bestsoft101,163331759,,,NA,2024-11-22T14:51:28Z,2024-11-22T14:51:28Z,I always have it set to Completion inserts,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Upnd1/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1807,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZqCDh,eclipse.jdt.ui,2577932513,1807,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-08T15:18:25Z,2025-01-08T15:18:25Z,"@Bestsoft101 if you can still reproduce, can you propose a solution as PR?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZqCDh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1810,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1810,eclipse.jdt.ui,2689021673,1810,Warnings show up in the editor but not in problems view,srikanth-sankaran,131454720,Srikanth Sankaran,,CLOSED,2024-11-25T04:14:03Z,2024-11-25T08:15:24Z,"I am on 4.34 RC2, but this problem has been there for some time and I haven't gotten around to reporting it. 

After a clean and automatic rebuild of jdt-core projects, the problems/marker view does not show warnings. These show up in the editor. 

This is driving me crazy! I am clueless if something my set up could be bringing this up - if so please clue me in.

Thanks!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1810/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1810,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6U0Km1,eclipse.jdt.ui,2496702901,1810,NA,srikanth-sankaran,131454720,Srikanth Sankaran,,NA,2024-11-25T04:14:19Z,2024-11-25T04:14:19Z,@noopur2507 - Any pointers ? TIA,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6U0Km1/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1810,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6U18Zq,eclipse.jdt.ui,2497169002,1810,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-11-25T08:06:26Z,2024-11-25T08:06:26Z,"@srikanth-sankaran please add an example, which warning you are missing for which file and line number.
In my platform workspace i see several warnings for the jdt.core workingset:
![image](https://github.com/user-attachments/assets/e5dbb44f-c5e9-4516-8ea3-8e2c412bb760)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6U18Zq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1810,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6U2CAn,eclipse.jdt.ui,2497191975,1810,NA,srikanth-sankaran,131454720,Srikanth Sankaran,,NA,2024-11-25T08:15:24Z,2024-11-25T08:15:24Z,"Mea culpa. I don't know how my problem view filter got configured to NOT show warnings. Thing is I am such a basic IDE user I don't even know I can apply some filters on problem view. So this cannot be due to my action. But I am able to eliminate the filters and see the warnings, so I am good. Sorry for the noise.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6U2CAn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1812,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1812,eclipse.jdt.ui,2693690811,1812,Running Junit5 tests with module-info fails,xazap,39418903,,,OPEN,2024-11-25T12:43:53Z,2024-11-28T11:19:12Z,"## Given
- Maven project A has production code and contains a module-info (module A)
- Maven project B has test code (Junit 5) for project A and contains a module-info ( module B requires module A)
- After importing project A and B in Eclipse, project B has a project reference to project A
- The standalone Maven build executes the unit tests without failures given this maven-surefire-plugin configuration:
```xml
<plugin> 
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-surefire-plugin</artifactId>
	<version>3.5.2</version>
	<configuration>
		<useModulePath>true</useModulePath>
		<useSystemClassLoader>false</useSystemClassLoader>
		<useManifestOnlyJar>false</useManifestOnlyJar>
		<forkCount>1</forkCount>
		<reuseForks>false</reuseForks>
		<argLine>-javaagent:${org.mockito:mockito-core:jar}</argLine>
	</configuration>
</plugin>
```

## Expectation
I expected Eclipse to run the junit tests successfully since the Maven build executes correctly, proving that dependencies and   and module references are setup correctly.

## Findings
- When running the unit tests in project B in Eclipse a popup titled Problem Occurred with description: `An internal error occurred during: ""Launching java (6)"".
Index 0 out of bounds for length 0`
- The stacktrace in de Eclipse's log is:
```
!MESSAGE An internal error occurred during: ""Launching java (6)"".
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: Index 0 out of bounds for length 0
	at org.eclipse.jdt.junit.launcher.JUnitLaunchConfigurationDelegate.enumerateTypesInPackage(JUnitLaunchConfigurationDelegate.java:543)
	at org.eclipse.jdt.junit.launcher.JUnitLaunchConfigurationDelegate.collectExecutionArguments(JUnitLaunchConfigurationDelegate.java:473)
	at org.eclipse.jdt.junit.launcher.JUnitLaunchConfigurationDelegate.getVMRunnerConfiguration(JUnitLaunchConfigurationDelegate.java:182)
	at org.eclipse.jdt.junit.launcher.JUnitLaunchConfigurationDelegate.launch(JUnitLaunchConfigurationDelegate.java:275)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:805)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:716)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:1054)
	at org.eclipse.debug.internal.ui.DebugUIPlugin$1.run(DebugUIPlugin.java:1257)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
```
- If I remove the module-info.java file from test project B, Eclipse starts executing unit tests. However, this is an undesirable workaround since it causes test failures when the code under test uses the [ServiceLoader](https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/ServiceLoader.html) mechanism and needs to find  `provides interface with implementation` clauses in the module descriptor of the test project.

## Tested under this environment:
* OS & version
Linux 6.8.0-49-generic 49-Ubuntu SMP PREEMPT_DYNAMIC Mon Nov  4 02:06:24 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux
* Eclipse IDE/Platform version:
Version: 2024-09 (4.33.0)
Build id: 20240905-0614
No additional plugins installed
* JDK:
java version ""21.0.4"" 2024-07-16 LTS
Java(TM) SE Runtime Environment (build 21.0.4+8-LTS-274)
Java HotSpot(TM) 64-Bit Server VM (build 21.0.4+8-LTS-274, mixed mode, sharing)
* Maven:
Apache Maven 3.9.9 (8e8579a9e76f7d015ee5ec7bfcdc97d260186937)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1812/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1812,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6VAsTV,eclipse.jdt.ui,2499986645,1812,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-11-26T08:07:38Z,2024-11-26T08:07:38Z,"Currently ECJ does not allow javacode in module-info.java but that might change. See for example https://github.com/eclipse-jdt/eclipse.jdt.core/issues/3347
Please propose a workaround that ignores this exception for ""module-info"" but does not hard code to exclude ""module-info"".","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6VAsTV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1812,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6VAsTd,eclipse.jdt.ui,2499986653,1812,NA,srikanth-sankaran,131454720,Srikanth Sankaran,,NA,2024-11-26T08:32:31Z,2024-11-26T08:32:31Z,"> Currently ECJ does not allow javacode in module-info.java but that might change. See for example eclipse-jdt/eclipse.jdt.core#3347 Please propose a workaround that ignores this exception for ""module-info"" but does not hard code to exclude ""module-info"".

Hmm. Is there any evidence here that the ""problematic"" module-info.java contains any java code other than module description ?? I am wondering if there is really a connection to eclipse-jdt/eclipse.jdt.core#3347 

I think this should be investigated by JDT-UI folk and I will forward it there.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6VAsTd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1812,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6VDTwC,eclipse.jdt.ui,2500672514,1812,NA,xazap,39418903,,,NA,2024-11-26T12:30:34Z,2024-11-26T12:30:34Z,"> Currently ECJ does not allow javacode in module-info.java but that might change. See for example [eclipse-jdt/eclipse.jdt.core#3347](https://github.com/eclipse-jdt/eclipse.jdt.core/issues/3347) Please propose a workaround that ignores this exception for ""module-info"" but does not hard code to exclude ""module-info"".

Please note that I have no java code inside the module-info.java files, [eclipse-jdt/eclipse.jdt.core#3347](https://github.com/eclipse-jdt/eclipse.jdt.core/issues/3347) is likely not the issue.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6VDTwC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1812,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6VFVpo,eclipse.jdt.ui,2501204584,1812,NA,xazap,39418903,,,NA,2024-11-26T15:43:23Z,2024-11-26T15:43:23Z,"Since I really would like to get this resolved, I have created a minimal Maven project that reproduces the issue. Please clone [this repo](https://github.com/xazap/eclipse-module-info-bug) and find that:
- Running with Maven on the command line the unit test executes fine.
- Running the unit test in Eclipse reproduces the exception.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6VFVpo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1812,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6VFXe5,eclipse.jdt.ui,2501212089,1812,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-11-26T15:46:26Z,2024-11-26T15:46:26Z,"> I really would like to get this resolve

Please contribute a PR that fixes the issue.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6VFXe5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1812,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6VTavv,eclipse.jdt.ui,2504895471,1812,NA,gzsombor,66230,Zsombor,,NA,2024-11-27T22:22:14Z,2024-11-27T22:22:14Z,"I've tried to run your project @xazap - I found a couple of issues, but they are different than you mentioned.
First, mvn verify fails with:
```
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.13.0:testCompile (default-testCompile) on project project-test: Execution default-testCompile of goal 
org.apache.maven.plugins:maven-compiler-plugin:3.13.0:testCompile failed: 
Can't compile test sources when main sources are missing a module descriptor -> [Help 1]
```

I'm using Maven 3.9.9.

Second, running the test from Eclipse fails with:
```
java.lang.IllegalAccessError: class org.junit.platform.launcher.core.LauncherFactory (in unnamed module @0x13deb50e) cannot access class org.junit.platform.commons.util.Preconditions (in module org.junit.platform.commons) because module org.junit.platform.commons does not export org.junit.platform.commons.util to unnamed module @0x13deb50e
	at org.junit.platform.launcher.core.LauncherFactory.create(LauncherFactory.java:128)
	at org.junit.platform.launcher.core.LauncherFactory.create(LauncherFactory.java:112)
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestLoader.<init>(JUnit5TestLoader.java:37)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.ReflectAccess.newInstance(ReflectAccess.java:128)
	at java.base/jdk.internal.reflect.ReflectionFactory.newInstance(ReflectionFactory.java:304)
	at java.base/java.lang.Class.newInstance(Class.java:725)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.createRawTestLoader(RemoteTestRunner.java:372)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.createLoader(RemoteTestRunner.java:367)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.defaultInit(RemoteTestRunner.java:311)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.init(RemoteTestRunner.java:226)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)
```

It seems that in the freshly launched VM, those classes are not accessible to the launcher classes, they are not opened up.

I could hack this, with using 
```
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>5.11.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-suite-commons</artifactId>
			<scope>test</scope>
			<version>1.10.5</version>
		</dependency>
```
in the `pom.xml`
and 
```
open module project.test {
	requires project;
	requires org.junit.platform.launcher;
	requires org.assertj.core;
	requires org.junit.jupiter;
	
	provides project.spi.SomeProviderFactory with test.support.TestProviderFactory;
}
``` 
in the module file, but I couldn't find a solution, with both Eclipse and Maven are happy. 
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6VTavv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1812,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6VXFNk,eclipse.jdt.ui,2505855844,1812,NA,xazap,39418903,,,NA,2024-11-28T11:07:42Z,2024-11-28T11:07:42Z,"> I've tried to run your project @xazap - I found a couple of issues, but they are different than you mentioned. First, mvn verify fails with:
> 
> ```
> [ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.13.0:testCompile (default-testCompile) on project project-test: Execution default-testCompile of goal 
> org.apache.maven.plugins:maven-compiler-plugin:3.13.0:testCompile failed: 
> Can't compile test sources when main sources are missing a module descriptor -> [Help 1]
> ```
Yes, I get that too sometimes. This is not an issue with my sample project, but rather a side effect of using the project in Eclipse before running it from the command line. Eclipse appears to be opinionated about missing `src/main/java` and `src/main/resources`. Eclipse adds them without user consent thereby breaking the command line build.

If you remove the erroneously added `src/main/java` from the `project-test` module it should compile fine from the command line.

> Second, running the test from Eclipse fails with:
> 
> ```
> java.lang.IllegalAccessError: class org.junit.platform.launcher.core.LauncherFactory (in unnamed module @0x13deb50e) cannot access class org.junit.platform.commons.util.Preconditions (in module org.junit.platform.commons) because module org.junit.platform.commons does not export org.junit.platform.commons.util to unnamed module @0x13deb50e
> 	at org.junit.platform.launcher.core.LauncherFactory.create(LauncherFactory.java:128)
> 	at org.junit.platform.launcher.core.LauncherFactory.create(LauncherFactory.java:112)
> 	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestLoader.<init>(JUnit5TestLoader.java:37)
> 	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
> 	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
> 	at java.base/java.lang.reflect.ReflectAccess.newInstance(ReflectAccess.java:128)
> 	at java.base/jdk.internal.reflect.ReflectionFactory.newInstance(ReflectionFactory.java:304)
> 	at java.base/java.lang.Class.newInstance(Class.java:725)
> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.createRawTestLoader(RemoteTestRunner.java:372)
> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.createLoader(RemoteTestRunner.java:367)
> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.defaultInit(RemoteTestRunner.java:311)
> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.init(RemoteTestRunner.java:226)
> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)
> ```

Interesting, with some experimentation I could also get this same stacktrace. It appears that different stacktraces appears depending on you what you select before performing `Run as` -> ` JUnit Test`:
- If I select `src/test/java` in the Project Explorer  I see `java.lang.ArrayIndexOutOfBoundsException: ...`
- If I select `SomeServiceTest.java` in the Project Explorer I also get `java.lang.IllegalAccessError: ...` 

> It seems that in the freshly launched VM, those classes are not accessible to the launcher classes, they are not opened up.
> 
> I could hack this, with using
> 
> ```
> 		<dependency>
> 			<groupId>org.junit.jupiter</groupId>
> 			<artifactId>junit-jupiter</artifactId>
> 			<version>5.11.3</version>
> 			<scope>test</scope>
> 		</dependency>
> 		<dependency>
> 			<groupId>org.junit.platform</groupId>
> 			<artifactId>junit-platform-suite-commons</artifactId>
> 			<scope>test</scope>
> 			<version>1.10.5</version>
> 		</dependency>
> ```
> 
> in the `pom.xml` and
> 
> ```
> open module project.test {
> 	requires project;
> 	requires org.junit.platform.launcher;
> 	requires org.assertj.core;
> 	requires org.junit.jupiter;
> 	
> 	provides project.spi.SomeProviderFactory with test.support.TestProviderFactory;
> }
> ```

Thanks, This fixes some things:
- ✅ Select `src/test/java` source root and run JUnit test results in success
- ✅ Select `test.project` package and run JUnit test results in success
- ✅ Select `SomeServiceTest` java file and run JUnit test results in success
- ❌ Select `project-test` project root and run JUnit test results in success

> ... but I couldn't find a solution, with both Eclipse and Maven are happy.
If I remove the empty `src/main/java` from `project-test` then both Maven and Eclipse are happy.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6VXFNk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1812,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6VXGBg,eclipse.jdt.ui,2505859168,1812,NA,xazap,39418903,,,NA,2024-11-28T11:09:22Z,2024-11-28T11:09:22Z,"We arrive at three issues:
1. Eclipse adds empty `src/main/java` and `src/main/resources` breaking standalone Maven builds. I should probably file a separate issue for this.
2. Eclipse's JUnit runner handles modules differently than Maven's Surefire Plugin. Although this can be worked around (as demonstrated by [gzsombor](https://github.com/gzsombor)), this does not make a good developer experience. 
3. Even with workaround, Eclipse's JUnit runner cannot be started by selecting the project root.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6VXGBg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1814,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1814,eclipse.jdt.ui,2695271157,1814,Run as Maven build fails with Eclipse JRE,xazap,39418903,,,CLOSED,2024-11-26T16:22:07Z,2025-01-02T11:54:30Z,"## Summary
When running a Maven build from Eclipse, test failures are observed due to the `provides` clauses in `module-info.java` descriptors not being honored. It appears that Eclipse is not using the module path.

## Reproduction
I have created a minimal project that reproduces the issue. Please clone [this repo](https://github.com/xazap/eclipse-module-info-bug)
- Select the parent `pom.xml` in the project explorer and use  `Run as` -> `Maven build...` 
- Set goals as `clean test`
- Set JRE as the default Eclipse JRE (on my install this points to `$ECLIPSE_HOME/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.linux.x86_64_21.0.4.v20240802-1551/jre`)
- Run and find that the test fails:
```
[ERROR] test.project.SomeServiceTest.testFindingProviderInUnitTest -- Time elapsed: 0.014 s <<< ERROR!
java.util.ServiceConfigurationError: No provider implementation found
	at project.spi.SomeService.lambda$getProvider$0(SomeService.java:24)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at project.spi.SomeService.getProvider(SomeService.java:24)
	at test.project.SomeServiceTest.testFindingProviderInUnitTest(SomeServiceTest.java:13)
```

## Observation
When performing the same reproduction steps but changing the JRE to an Oracle JDK 21 the test passes, proving that the `provides` clauses in the module descriptor of the test project are used. Behavior therefore appears to differ between Oracle and Eclipse runtimes.

Possibly related is #1812 where the same reproduction project cannot run with Eclipse's build in Junit5 test runner.

## Tested under this environment
* OS & version
Linux 6.8.0-49-generic 49-Ubuntu SMP PREEMPT_DYNAMIC Mon Nov  4 02:06:24 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux
* Eclipse IDE/Platform version:
Version: 2024-09 (4.33.0)
Build id: 20240905-0614
No additional plugins installed
* Oracle JDK:
java version ""21.0.4"" 2024-07-16 LTS
Java(TM) SE Runtime Environment (build 21.0.4+8-LTS-274)
Java HotSpot(TM) 64-Bit Server VM (build 21.0.4+8-LTS-274, mixed mode, sharing)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1814/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1814,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6VV83l,eclipse.jdt.ui,2505559525,1814,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-11-28T08:46:31Z,2024-11-28T08:46:31Z,"This JDT project is not about maven, justj, JDK or project.spi. If you think you found a bug in JDT please boil it down to a reproducer in JDT. By now i can not see the relation to jdt.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6VV83l/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1814,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZC2rj,eclipse.jdt.ui,2567662307,1814,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-02T11:54:30Z,2025-01-02T11:54:30Z,Closing without enough information after months.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZC2rj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1820,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1820,eclipse.jdt.ui,2697146727,1820,Merge master to BETA_JAVA24 branch,noopur2507,8749449,Noopur Gupta,,CLOSED,2024-11-27T05:29:37Z,2024-11-27T05:30:08Z,Merge master branch to BETA_JAVA24 branch after 4.34 RC2.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1820/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1820,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6VLr99,eclipse.jdt.ui,2502868861,1820,NA,noopur2507,8749449,Noopur Gupta,,NA,2024-11-27T05:30:08Z,2024-11-27T05:30:08Z,Done - https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1819.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6VLr99/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1823,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1823,eclipse.jdt.ui,2710364489,1823,[Bug][Pull Up Refactoring] Pull up refactoring produce uncompilable code for lambda parameter,RETester66,176339745,,,CLOSED,2024-12-02T03:40:22Z,2024-12-14T03:09:02Z,"## Steps to reproduce
The input program is following:
```
public class A {
    public class BaseInner {
        void innerMethodLambda(Outer outer) {
            Runnable r = () -> {
                System.out.println(outer.x);
                outer.foo();
            };
            r.run();
        }
    }

    public class Outer {
        public int x = 0;
        public void foo(){};

        public class Inner extends BaseInner {
            void innerMethod() { // Pull this method up to class BaseInner
                innerMethodLambda(Outer.this);
            }
        }
    }
}
```
Left click innerMethod(), then right click -> Refactor -> Pull Up, use the default configuration shown below, click finish:

![image](https://github.com/user-attachments/assets/7468bae8-0bb2-4170-ad33-faf1ae7ea7db)



The refactoring is performed without any warning or exception. The refactored program is following, which contains syntax error:

![image](https://github.com/user-attachments/assets/31dccd00-cb02-419f-aaf4-16fdb681f03f)

## Environment
### OS Version
Windows 10, 64-bit Operating System, x64-based processor
### Eclipse Version
Eclipse IDE for Enterprise Java and Web Developers (includes Incubating components)
Version: 2024-09 (4.33.0)
Build id: 20240905-0614
### JDK Version
java version ""22.0.1"" 2024-04-16
Java(TM) SE Runtime Environment (build 22.0.1+8-16)
Java HotSpot(TM) 64-Bit Server VM (build 22.0.1+8-16, mixed mode, sharing)


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1823/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1823,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Vp_RF,eclipse.jdt.ui,2510812229,1823,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-12-02T07:54:17Z,2024-12-02T07:54:17Z,The last issue in that area was https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1533,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Vp_RF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1824,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1824,eclipse.jdt.ui,2710383531,1824,[Bug][Make Static Refactoring] Make static refactoring produce uncompilable code for a method uses outer class properties,RETester66,176339745,,,OPEN,2024-12-02T03:57:41Z,2024-12-02T07:50:23Z,"## Steps to reproduce
The input program is following:
```
public class Foo {
    private int counter;

    public Foo(int initialCounter) {
        this.counter = initialCounter;
    }

    void toBeRefactored() { // make static refactoring on this method
        new Foo(counter + 10) {
            void toImplement() {
                // Calling outer class method directly
                Foo.this.toCall();
            }
        }.toImplement();
    }

    void toCall() {
        System.out.println(""Counter: "" + counter);
    }

    public static void main(String[] args) {
        Foo foo = new Foo(5);
        foo.toBeRefactored();
    }
}
```
Left click toBeRefactored(), then right click -> Refactor -> Make Static, use the default configuration shown below, click OK:

![image](https://github.com/user-attachments/assets/a68c438a-e214-4590-9211-efcc15dba69b)


The refactoring is performed without any warning or exception. The refactored program is following, which contains syntax error:

![image](https://github.com/user-attachments/assets/d1838f53-3f6a-4671-903f-1946187c6832)


## Environment
### OS Version
Windows 10, 64-bit Operating System, x64-based processor
### Eclipse Version
Eclipse IDE for Enterprise Java and Web Developers (includes Incubating components)
Version: 2024-09 (4.33.0)
Build id: 20240905-0614
### JDK Version
java version ""22.0.1"" 2024-04-16
Java(TM) SE Runtime Environment (build 22.0.1+8-16)
Java HotSpot(TM) 64-Bit Server VM (build 22.0.1+8-16, mixed mode, sharing)


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1824/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1824,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Vp9SQ,eclipse.jdt.ui,2510804112,1824,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-12-02T07:50:19Z,2024-12-02T07:50:19Z,"The refactoring was added with https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/689
@CodeLtDave can you take a look?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Vp9SQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1826,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1826,eclipse.jdt.ui,2714503613,1826,NPE in RenameInformationPopup,jukzi,51790620,Jörg Kubitz,,OPEN,2024-12-03T09:46:43Z,2024-12-03T09:53:05Z,"Currently i am stuck in this NPE, whatever UI action i do (for example open java editor) this error repeats once it started:

```
eclipse.buildId=4.35.0.I20241201-1800
java.version=21.0.2
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=de_DE
Command-line arguments:  -os win32 -ws win32 -arch x86_64

org.eclipse.ui.workbench
Error
Tue Dec 03 10:41:39 CET 2024
Problems occurred when invoking code from plug-in: ""org.eclipse.ui.workbench"".

java.lang.NullPointerException: Cannot invoke ""org.eclipse.ui.IEditorSite.getPart()"" because the return value of ""org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.getEditorSite()"" is null
	at org.eclipse.jdt.internal.ui.refactoring.reorg.RenameInformationPopup$PopupVisibilityManager.partActivated(RenameInformationPopup.java:137)
	at org.eclipse.ui.internal.PartService$6.run(PartService.java:145)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.ui.internal.PartService.partActivated(PartService.java:142)
	at org.eclipse.ui.internal.WorkbenchPage$3.run(WorkbenchPage.java:4896)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.ui.internal.WorkbenchPage.firePartActivated(WorkbenchPage.java:4893)
	at org.eclipse.ui.internal.WorkbenchPage$E4PartListener.partActivated(WorkbenchPage.java:215)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl$2.run(PartServiceImpl.java:250)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.firePartActivated(PartServiceImpl.java:247)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.activate(PartServiceImpl.java:780)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.activate(PartServiceImpl.java:686)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.activate(PartServiceImpl.java:681)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.bringToTop(PartServiceImpl.java:395)
	at org.eclipse.ui.internal.WorkbenchPage.bringToTop(WorkbenchPage.java:1022)
	at org.eclipse.ui.internal.views.log.LogView.lambda$14(LogView.java:1244)
	at org.eclipse.jface.util.Throttler.lambda$0(Throttler.java:66)
	at org.eclipse.jface.util.Throttler.lambda$1(Throttler.java:79)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4177)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3793)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.ui.internal.views.log.EventDetailsDialog.open(EventDetailsDialog.java:198)
	at org.eclipse.ui.internal.views.log.EventDetailsDialogAction.run(EventDetailsDialogAction.java:108)
	at org.eclipse.ui.internal.views.log.LogView.lambda$2(LogView.java:624)
	at org.eclipse.jface.viewers.StructuredViewer$1.run(StructuredViewer.java:779)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.StructuredViewer.fireDoubleClick(StructuredViewer.java:776)
	at org.eclipse.jface.viewers.AbstractTreeViewer.handleDoubleSelect(AbstractTreeViewer.java:1580)
	at org.eclipse.jface.viewers.StructuredViewer$4.widgetDefaultSelected(StructuredViewer.java:1205)
	at org.eclipse.jface.util.OpenStrategy.fireDefaultSelectionEvent(OpenStrategy.java:271)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:328)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:91)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4404)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1175)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4202)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3790)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1151)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:663)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:570)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:178)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:668)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:605)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1481)

```

and 

```
java.lang.NullPointerException: Cannot invoke ""org.eclipse.ui.IWorkbenchPartSite.getWorkbenchWindow()"" because the return value of ""org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.getSite()"" is null
	at org.eclipse.jdt.internal.ui.refactoring.reorg.RenameInformationPopup$PopupVisibilityManager.lambda$0(RenameInformationPopup.java:114)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:146)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:91)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4404)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1175)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1199)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1180)
	at org.eclipse.swt.widgets.Widget.release(Widget.java:890)
	at org.eclipse.swt.widgets.Widget.dispose(Widget.java:479)
	at org.eclipse.swt.widgets.Decorations.dispose(Decorations.java:396)
	at org.eclipse.swt.widgets.Decorations.closeWidget(Decorations.java:274)
	at org.eclipse.swt.widgets.Shell.close(Shell.java:552)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.RenameInformationPopup.close(RenameInformationPopup.java:378)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.RenameLinkedMode.linkedModeLeft(RenameLinkedMode.java:623)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.RenameLinkedMode$EditorSynchronizer.left(RenameLinkedMode.java:120)
	at org.eclipse.jface.text.link.LinkedModeModel.exit(LinkedModeModel.java:338)
	at org.eclipse.jface.text.link.LinkedModeUI.lambda$2(LinkedModeUI.java:1240)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4177)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3793)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1151)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:663)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:570)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:178)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:668)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:605)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1481)
```

![image](https://github.com/user-attachments/assets/76b08f2c-6334-4f63-bd9e-357c3c7d242c)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1826/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1826,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6V2X7b,eclipse.jdt.ui,2514058971,1826,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-12-03T09:53:04Z,2024-12-03T09:53:04Z,Probably all later errors are only caused by the async RenameInformationPopup.close to fail.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6V2X7b/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1827,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1827,eclipse.jdt.ui,2714733018,1827,hover logs OperationCanceledException as error,jukzi,51790620,Jörg Kubitz,,CLOSED,2024-12-03T11:20:56Z,2024-12-06T09:18:18Z,"Would be better to silently ignore OperationCanceledException:

```
eclipse.buildId=4.35.0.I20241201-1800
java.version=21.0.2
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=de_DE
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -data file:/C:/Users/jkubitz/platform-2024-09-23/ws/

org.eclipse.jdt.ui
Error
Tue Dec 03 12:18:10 CET 2024
OperationCanceledException computing hover information in NullReferenceImplTransformations.java at offset 100231

org.eclipse.core.runtime.OperationCanceledException
	at org.eclipse.jdt.internal.core.AbstractClassFile.getClassFileContent(AbstractClassFile.java:239)
	at org.eclipse.jdt.internal.core.ClassFile.getJarBinaryTypeInfo(ClassFile.java:225)
	at org.eclipse.jdt.internal.core.ClassFile.getBinaryTypeInfo(ClassFile.java:186)
	at org.eclipse.jdt.internal.core.ClassFile.buildStructure(ClassFile.java:78)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:246)
	at org.eclipse.jdt.internal.core.SourceRefElement.generateInfos(SourceRefElement.java:127)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:569)
	at org.eclipse.jdt.internal.core.BinaryType.getElementInfo(BinaryType.java:292)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:278)
	at org.eclipse.jdt.internal.core.BinaryType.getElementInfo(BinaryType.java:1142)
	at org.eclipse.jdt.internal.core.BinaryType.getFlags(BinaryType.java:357)
	at org.eclipse.jdt.internal.core.SearchableEnvironmentRequestor.acceptType(SearchableEnvironmentRequestor.java:127)
	at org.eclipse.jdt.internal.core.NameLookup.seekTypesInBinaryPackage(NameLookup.java:1510)
	at org.eclipse.jdt.internal.core.NameLookup.seekTypes(NameLookup.java:1442)
	at org.eclipse.jdt.internal.core.NameLookup.seekTypes(NameLookup.java:1348)
	at org.eclipse.jdt.internal.core.NameLookup.findAllTypes(NameLookup.java:422)
	at org.eclipse.jdt.internal.core.NameLookup.seekTypes(NameLookup.java:1418)
	at org.eclipse.jdt.internal.core.NameLookup.seekTypes(NameLookup.java:1348)
	at org.eclipse.jdt.internal.core.SearchableEnvironment.findTypes(SearchableEnvironment.java:981)
	at org.eclipse.jdt.internal.core.SearchableEnvironment.findTypes(SearchableEnvironment.java:783)
	at org.eclipse.jdt.internal.core.SearchableEnvironment.findTypes(SearchableEnvironment.java:609)
	at org.eclipse.jdt.internal.core.SearchableEnvironment.findTypes(SearchableEnvironment.java:588)
	at org.eclipse.jdt.internal.codeassist.SelectionEngine.select(SelectionEngine.java:1048)
	at org.eclipse.jdt.internal.core.Openable.codeSelect(Openable.java:167)
	at org.eclipse.jdt.internal.core.CompilationUnit.codeSelect(CompilationUnit.java:471)
	at org.eclipse.jdt.internal.core.CompilationUnit.codeSelect(CompilationUnit.java:461)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractJavaEditorTextHover.getJavaElementsAt(AbstractJavaEditorTextHover.java:122)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.lambda$0(JavadocHover.java:713)
	at org.eclipse.jdt.internal.core.JavaModelManager.cacheZipFiles(JavaModelManager.java:5694)
	at org.eclipse.jdt.internal.core.JavaModelManager.callReadOnly(JavaModelManager.java:5683)
	at org.eclipse.jdt.core.JavaCore.callReadOnly(JavaCore.java:6150)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:713)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:709)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
	Suppressed: java.lang.Throwable: Source line 2801 :
-----
						"" => "" + effectiveOutput.printableBitsField +
						"" instead of: "" + expectedOutput.printableBitsField);
				}
			}
		}
	}
	if (combinationTestsLoopsNb > 1) {
		System.out.println(this.name + ""...\t\t"" + combinationTestsLoopsNb + ""\t"" +
				(System.n() - startNanos));
	}
	// PREMATURE optimize test (extraneous| allocations and copies)
-----
		at org.eclipse.jdt.internal.ui.util.SelectionUtil.logException(SelectionUtil.java:150)
		at org.eclipse.jdt.internal.ui.text.java.hover.AbstractJavaEditorTextHover.getJavaElementsAt(AbstractJavaEditorTextHover.java:124)
		... 10 more


```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1827/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1830,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1830,eclipse.jdt.ui,2717434084,1830,Slow (Quick-)Type hierarchy for large trees.,jukzi,51790620,Jörg Kubitz,,CLOSED,2024-12-04T11:29:22Z,2025-01-21T15:45:06Z,"Simple reproducer:
```
class LargeTree {

	interface I0 {}
	interface I1 extends I0 {}
	interface I2 extends I1, I0 {}
	interface I3 extends I2, I1 {}
	interface I4 extends I3, I2 {}
	interface I5 extends I4, I3 {}
	interface I6 extends I5, I4 {}
	interface I7 extends I6, I5 {}
	interface I8 extends I7, I6 {}
	interface I9 extends I8, I7 {}
	interface I10 extends I9, I8 {}
	interface I11 extends I10, I9 {}
	interface I12 extends I11, I10 {}
	interface I13 extends I12, I11 {}
	interface I14 extends I13, I12 {}
	interface I15 extends I14, I13 {}
	interface I16 extends I15, I14 {}
	interface I17 extends I16, I15 {}
	interface I18 extends I17, I16 {}
	interface I19 extends I18, I17 {}
	interface I20 extends I19, I18 {}
//	interface I21 extends I20, I19 {}
//	interface I22 extends I21, I20 {}
//	interface I23 extends I22, I21 {}
//	interface I24 extends I23, I22 {}
//	interface I25 extends I24, I23 {}
//	interface I26 extends I25, I24 {}
//	interface I27 extends I26, I25 {}
//	interface I28 extends I27, I26 {}
//	interface I29 extends I28, I27 {}
//	interface I30 extends I29, I28 {}
}

```
![image](https://github.com/user-attachments/assets/45c6054d-6d47-4b00-b5ff-11275d373a5a)

On windows ~ 12 seconds to crtl-t `I20`.  Seems to be a non ending story for already I30 - O(2^n) ?

![image](https://github.com/user-attachments/assets/4aa09ac7-b12e-4bd2-918d-8d24701e00bd)
![image](https://github.com/user-attachments/assets/8f110e5e-a5ff-465d-8884-2fb1d64f26df)

My Vote: by default JDT should not try to expand more then constant number of  nodes.
Probably Initial maximum number of elements would be a usefull limit:
![image](https://github.com/user-attachments/assets/9cdff5e7-4e02-4148-9547-31d8729c037d)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1830/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1830,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WB4M4,eclipse.jdt.ui,2517074744,1830,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-12-04T11:33:42Z,2024-12-04T11:33:42Z,@raghucssit WDYT?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WB4M4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1830,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WB9oz,eclipse.jdt.ui,2517097011,1830,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-12-04T11:42:43Z,2024-12-04T11:42:43Z,Or just do not auto-expand nodes that are already expanded elsewhere in the tree? @fedejeanne ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WB9oz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1830,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WCZ_p,eclipse.jdt.ui,2517213161,1830,NA,fedejeanne,2205684,Federico Jeanne,,NA,2024-12-04T12:28:00Z,2024-12-04T12:28:00Z,"> Or just do not auto-expand nodes that are already expanded elsewhere in the tree? @fedejeanne

That would make sense for me since those items don't bring much information with them, but I think it is just a patch, right? I mean the real problem is that opening big trees is slow (https://github.com/vi-eclipse/Eclipse-Platform/issues/123) and this solution would translate to ""create smaller trees"".

In any case, if that approach is a quick win then I am all for it.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WCZ_p/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1830,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WCi2U,eclipse.jdt.ui,2517249428,1830,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-12-04T12:44:40Z,2024-12-04T12:44:40Z,"> quick win then I am all for it.

Quick but huge win! for so large trees it's only a matter of moderate n to get problems no matter how fast it is. Can you provide such PR?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WCi2U/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1830,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WDJww,eclipse.jdt.ui,2517408816,1830,NA,fedejeanne,2205684,Federico Jeanne,,NA,2024-12-04T13:33:05Z,2024-12-04T13:33:05Z,"> Can you provide such PR?

Not at the moment but I already pinged some of my students which I know took a look at the issue.

One **really** quick win would be: 
![image](https://github.com/user-attachments/assets/9cf46874-40db-45ce-95f0-fa36bcab6107)

... but I assume that's out of the question? ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WDJww/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1830,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WDMev,eclipse.jdt.ui,2517419951,1830,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-12-04T13:35:11Z,2024-12-04T13:35:11Z,"> ... but I assume that's out of the question?

yes, no way","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WDMev/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1830,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WDRnJ,eclipse.jdt.ui,2517440969,1830,NA,raghucssit,10301131,Raghunandana,,NA,2024-12-04T13:43:40Z,2024-12-04T13:43:40Z,"> @raghucssit WDYT?

Good idea, It avoids UI freeze. I will create a PR.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WDRnJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1830,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WDUOa,eclipse.jdt.ui,2517451674,1830,NA,raghucssit,10301131,Raghunandana,,NA,2024-12-04T13:47:13Z,2024-12-04T13:47:13Z,"I tried with limit set to 10. It seems to work fine. Hopefully no tests will have problem..!!
![image](https://github.com/user-attachments/assets/0a7a6276-08af-4fbf-8113-92c9009ad2d4)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WDUOa/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1830,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WDXTI,eclipse.jdt.ui,2517464264,1830,NA,fedejeanne,2205684,Federico Jeanne,,NA,2024-12-04T13:51:05Z,2024-12-04T13:51:05Z,"> I tried with limit set to 10. It seems to work fine. Hopefully no tests will have problem..!!

@raghucssit this approach doesn't solve the problem described in https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1830#issue-2717434084 because **that** specific hierarchy has ""only"" 1 child. The problem is that expanding that child also expands the children and that ends up creating and expanding about **17.000** items.

In order to reproduce the error, you should use the snippet provided in this Issue","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WDXTI/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1830,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WDevG,eclipse.jdt.ui,2517494726,1830,NA,raghucssit,10301131,Raghunandana,,NA,2024-12-04T14:01:14Z,2024-12-04T14:01:14Z,"> > I tried with limit set to 10. It seems to work fine. Hopefully no tests will have problem..!!
> 
> @raghucssit this approach doesn't solve the problem described in [#1830 (comment)](https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1830#issue-2717434084) because **that** specific hierarchy has ""only"" 1 child. The problem is that expanding that child also expands the children and that ends up creating and expanding about **17.000** items.
> 
> In order to reproduce the error, you should use the snippet provided in this Issue

I think Viewer Limit is applied to all levels of the tree. so in the second level also only limited number of items will be shown.
I have created PR. Please check if it works as expected.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WDevG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1830,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WDxsB,eclipse.jdt.ui,2517572353,1830,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-12-04T14:19:36Z,2024-12-04T14:19:36Z,A limit per Node will not solve the issue the issue with a binary tree (i.e. only 2 children per node) that still has a huge amount of nodes in total. We could add both: 1. limit per node and 2. not autoexpand nodes twice in a tree.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WDxsB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1830,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WD9fK,eclipse.jdt.ui,2517620682,1830,NA,fedejeanne,2205684,Federico Jeanne,,NA,2024-12-04T14:36:25Z,2024-12-04T14:36:25Z,"> A limit per Node will not solve the issue the issue with a binary tree (i.e. only 2 children per node) that still has a huge amount of nodes in total. We could add both: 1. limit per node and 2. not autoexpand nodes twice in a tree.

Exactly. See https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1831#pullrequestreview-2478809338","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WD9fK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1830,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WFsct,eclipse.jdt.ui,2518075181,1830,NA,raghucssit,10301131,Raghunandana,,NA,2024-12-04T17:19:19Z,2024-12-04T17:19:19Z,"> A limit per Node will not solve the issue the issue with a binary tree (i.e. only 2 children per node) that still has a huge amount of nodes in total. We could add both: 1. limit per node and 2. not autoexpand nodes twice in a tree.

autoexpand should be set false. otherwise it's like a loop.
Another possibility is to limit this autoexpand to viewer limit. That needs to investigated.
Currently I am busy on some other task. I will check it later.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WFsct/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1833,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1833,eclipse.jdt.ui,2719872874,1833,12 Progress monitor test failures since I20241204-1800,jukzi,51790620,Jörg Kubitz,,CLOSED,2024-12-05T09:36:38Z,2024-12-06T06:52:06Z,"for example:
```
Progress monitor assertion failed

org.eclipse.core.tests.harness.FussyProgressMonitor$FussyProgressAssertionFailed: Progress monitor assertion failed
at org.eclipse.core.tests.harness.FussyProgressMonitor.processFailedAssertion(FussyProgressMonitor.java:83)
at org.eclipse.core.tests.harness.FussyProgressMonitor.wrapAssertion(FussyProgressMonitor.java:73)
at org.eclipse.core.tests.harness.FussyProgressMonitor.assertUsedUp(FussyProgressMonitor.java:96)
at org.eclipse.jdt.ui.tests.quickfix.ChangeNonStaticToStaticTest.assertRefactoringResultAsExpected(ChangeNonStaticToStaticTest.java:107)
at org.eclipse.jdt.ui.tests.quickfix.ChangeNonStaticToStaticTest.testNonStaticAccessTest01(ChangeNonStaticToStaticTest.java:150)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
Caused by: java.lang.AssertionError: [work done]
Expecting actual:
500L
to be greater than or equal to:
1000L

at org.eclipse.core.tests.harness.FussyProgressMonitor.lambda$1(FussyProgressMonitor.java:96)
at org.eclipse.core.tests.harness.FussyProgressMonitor.wrapAssertion(FussyProgressMonitor.java:71)
... 4 more
```
https://download.eclipse.org/eclipse/downloads/drops4/I20241204-1800/testResults.php","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1833/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1833,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WMIC2,eclipse.jdt.ui,2519761078,1833,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-12-05T09:37:12Z,2024-12-05T09:37:12Z,cc @vogella since you are working on Progress monitor,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WMIC2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1833,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WMWPk,eclipse.jdt.ui,2519819236,1833,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-12-05T10:01:03Z,2024-12-05T10:01:03Z,"caused by https://github.com/eclipse-platform/eclipse.platform.ui/pull/2573 @vogella, please stop removing subMon.done() blindly","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WMWPk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1833,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WPSN4,eclipse.jdt.ui,2520589176,1833,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2024-12-05T15:12:50Z,2024-12-05T15:12:50Z,"To fulfil the test assumption in  JDT, Refactoring  needs to consume all ticks, which it so far did not explicitly but implicitly via the done() call. Revert is fine for me for now I might adjust Refactoring at a later point in time. AFAICS functional-wise nothing has changed with the removal of done(), it only affects the test check, as the top-level monitor done() call will also consume the ticks so this failure should be ""test assumption failure"" only.



","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WPSN4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1833,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WPiEI,eclipse.jdt.ui,2520654088,1833,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2024-12-05T15:37:54Z,2024-12-05T15:37:54Z,Revert available from @jukzi https://github.com/eclipse-platform/eclipse.platform.ui/pull/2586,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WPiEI/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1834,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1834,eclipse.jdt.ui,2720061426,1834,Random failing TypeRulesTest.testCanCast,jukzi,51790620,Jörg Kubitz,,OPEN,2024-12-05T10:49:42Z,2024-12-05T10:51:50Z,"First observed on windows:
https://download.eclipse.org/eclipse/downloads/drops4/I20241204-1800/testresults/html/org.eclipse.jdt.ui.tests_ep435I-unit-win32-x86_64-java17_win32.win32.x86_64_17.html
```
java.lang.AssertionError: boolean x= (boolean) bool
char x= (char) c
byte x= (byte) c
short x= (short) c
int x= (int) c
long x= (long) c
float x= (float) c
double x= (double) c
char x= (char) b
byte x= (byte) b
short x= (short) b
int x= (int) b
long x= (long) b
float x= (float) b
double x= (double) b
char x= (char) s
byte x= (byte) s
short x= (short) s
int x= (int) s
long x= (long) s
float x= (float) s
double x= (double) s
char x= (char) i
byte x= (byte) i
short x= (short) i
int x= (int) i
long x= (long) i
float x= (float) i
double x= (double) i
char x= (char) l
byte x= (byte) l
short x= (short) l
int x= (int) l
long x= (long) l
float x= (float) l
double x= (double) l
char x= (char) f
byte x= (byte) f
short x= (short) f
int x= (int) f
long x= (long) f
float x= (float) f
double x= (double) f
char x= (char) d
byte x= (byte) d
short x= (short) d
int x= (int) d
long x= (long) d
float x= (float) d
double x= (double) d
java.lang.Boolean x= (java.lang.Boolean) bool_class
java.lang.Object x= (java.lang.Object) bool_class
java.io.Serializable x= (java.io.Serializable) bool_class
java.lang.Character x= (java.lang.Character) c_class
java.lang.Object x= (java.lang.Object) c_class
java.io.Serializable x= (java.io.Serializable) c_class
java.lang.Byte x= (java.lang.Byte) b_class
java.lang.Object x= (java.lang.Object) b_class
java.io.Serializable x= (java.io.Serializable) b_class
java.lang.Short x= (java.lang.Short) s_class
java.lang.Object x= (java.lang.Object) s_class
java.io.Serializable x= (java.io.Serializable) s_class
java.lang.Integer x= (java.lang.Integer) i_class
java.lang.Object x= (java.lang.Object) i_class
java.io.Serializable x= (java.io.Serializable) i_class
java.lang.Long x= (java.lang.Long) l_class
java.lang.Object x= (java.lang.Object) l_class
java.io.Serializable x= (java.io.Serializable) l_class
java.lang.Float x= (java.lang.Float) f_class
java.lang.Object x= (java.lang.Object) f_class
java.io.Serializable x= (java.io.Serializable) f_class
java.lang.Double x= (java.lang.Double) d_class
java.lang.Object x= (java.lang.Object) d_class
java.io.Serializable x= (java.io.Serializable) d_class
java.lang.Boolean x= (java.lang.Boolean) object
java.lang.Character x= (java.lang.Character) object
java.lang.Byte x= (java.lang.Byte) object
java.lang.Short x= (java.lang.Short) object
java.lang.Integer x= (java.lang.Integer) object
java.lang.Long x= (java.lang.Long) object
java.lang.Float x= (java.lang.Float) object
java.lang.Double x= (java.lang.Double) object
java.lang.Object x= (java.lang.Object) object
java.net.Socket x= (java.net.Socket) object
java.lang.Cloneable x= (java.lang.Cloneable) object
java.io.Serializable x= (java.io.Serializable) object
java.lang.Object[] x= (java.lang.Object[]) object
int[] x= (int[]) object
long[] x= (long[]) object
java.util.Vector[] x= (java.util.Vector[]) object
java.net.Socket[] x= (java.net.Socket[]) object
java.util.Collection[] x= (java.util.Collection[]) object
java.lang.Object[][] x= (java.lang.Object[][]) object
java.util.Collection[][] x= (java.util.Collection[][]) object
java.util.Vector[][] x= (java.util.Vector[][]) object
java.net.Socket[][] x= (java.net.Socket[][]) object
java.util.Vector x= (java.util.Vector) vector
java.util.Collection x= (java.util.Collection) vector
java.lang.Object x= (java.lang.Object) socket
java.net.Socket x= (java.net.Socket) socket
java.lang.Cloneable x= (java.lang.Cloneable) socket
java.io.Serializable x= (java.io.Serializable) socket
java.lang.Object x= (java.lang.Object) cloneable
java.net.Socket x= (java.net.Socket) cloneable
java.lang.Cloneable x= (java.lang.Cloneable) cloneable
java.io.Serializable x= (java.io.Serializable) cloneable
java.lang.Object[] x= (java.lang.Object[]) cloneable
int[] x= (int[]) cloneable
long[] x= (long[]) cloneable
java.util.Vector[] x= (java.util.Vector[]) cloneable
java.net.Socket[] x= (java.net.Socket[]) cloneable
java.util.Collection[] x= (java.util.Collection[]) cloneable
java.lang.Object[][] x= (java.lang.Object[][]) cloneable
java.util.Collection[][] x= (java.util.Collection[][]) cloneable
java.util.Vector[][] x= (java.util.Vector[][]) cloneable
java.net.Socket[][] x= (java.net.Socket[][]) cloneable
java.util.Vector x= (java.util.Vector) collection
java.util.Collection x= (java.util.Collection) collection
java.lang.Boolean x= (java.lang.Boolean) serializable
java.lang.Character x= (java.lang.Character) serializable
java.lang.Byte x= (java.lang.Byte) serializable
java.lang.Short x= (java.lang.Short) serializable
java.lang.Integer x= (java.lang.Integer) serializable
java.lang.Long x= (java.lang.Long) serializable
java.lang.Float x= (java.lang.Float) serializable
java.lang.Double x= (java.lang.Double) serializable
java.lang.Object x= (java.lang.Object) serializable
java.net.Socket x= (java.net.Socket) serializable
java.lang.Cloneable x= (java.lang.Cloneable) serializable
java.io.Serializable x= (java.io.Serializable) serializable
java.lang.Object[] x= (java.lang.Object[]) serializable
int[] x= (int[]) serializable
long[] x= (long[]) serializable
java.util.Vector[] x= (java.util.Vector[]) serializable
java.net.Socket[] x= (java.net.Socket[]) serializable
java.util.Collection[] x= (java.util.Collection[]) serializable
java.lang.Object[][] x= (java.lang.Object[][]) serializable
java.util.Collection[][] x= (java.util.Collection[][]) serializable
java.util.Vector[][] x= (java.util.Vector[][]) serializable
java.net.Socket[][] x= (java.net.Socket[][]) serializable
java.lang.Object x= (java.lang.Object) objectArr
java.lang.Cloneable x= (java.lang.Cloneable) objectArr
java.io.Serializable x= (java.io.Serializable) objectArr
java.lang.Object[] x= (java.lang.Object[]) objectArr
java.util.Vector[] x= (java.util.Vector[]) objectArr
java.net.Socket[] x= (java.net.Socket[]) objectArr
java.util.Collection[] x= (java.util.Collection[]) objectArr
java.lang.Object[][] x= (java.lang.Object[][]) objectArr
java.util.Collection[][] x= (java.util.Collection[][]) objectArr
java.util.Vector[][] x= (java.util.Vector[][]) objectArr
java.net.Socket[][] x= (java.net.Socket[][]) objectArr
java.lang.Object x= (java.lang.Object) int_arr
java.lang.Cloneable x= (java.lang.Cloneable) int_arr
java.io.Serializable x= (java.io.Serializable) int_arr
int[] x= (int[]) int_arr
java.lang.Object x= (java.lang.Object) long_arr
java.lang.Cloneable x= (java.lang.Cloneable) long_arr
java.io.Serializable x= (java.io.Serializable) long_arr
long[] x= (long[]) long_arr
java.lang.Object x= (java.lang.Object) vector_arr
java.lang.Cloneable x= (java.lang.Cloneable) vector_arr
java.io.Serializable x= (java.io.Serializable) vector_arr
java.lang.Object[] x= (java.lang.Object[]) vector_arr
java.util.Vector[] x= (java.util.Vector[]) vector_arr
java.util.Collection[] x= (java.util.Collection[]) vector_arr
java.lang.Object x= (java.lang.Object) socket_arr
java.lang.Cloneable x= (java.lang.Cloneable) socket_arr
java.io.Serializable x= (java.io.Serializable) socket_arr
java.lang.Object[] x= (java.lang.Object[]) socket_arr
java.net.Socket[] x= (java.net.Socket[]) socket_arr
java.util.Collection[] x= (java.util.Collection[]) socket_arr
java.lang.Object x= (java.lang.Object) collection_arr
java.lang.Cloneable x= (java.lang.Cloneable) collection_arr
java.io.Serializable x= (java.io.Serializable) collection_arr
java.lang.Object[] x= (java.lang.Object[]) collection_arr
java.util.Vector[] x= (java.util.Vector[]) collection_arr
java.net.Socket[] x= (java.net.Socket[]) collection_arr
java.util.Collection[] x= (java.util.Collection[]) collection_arr
java.lang.Object x= (java.lang.Object) objectArrArr
java.lang.Cloneable x= (java.lang.Cloneable) objectArrArr
java.io.Serializable x= (java.io.Serializable) objectArrArr
java.lang.Object[] x= (java.lang.Object[]) objectArrArr
java.lang.Object[][] x= (java.lang.Object[][]) objectArrArr
java.util.Collection[][] x= (java.util.Collection[][]) objectArrArr
java.util.Vector[][] x= (java.util.Vector[][]) objectArrArr
java.net.Socket[][] x= (java.net.Socket[][]) objectArrArr
java.lang.Object x= (java.lang.Object) collection_arrarr
java.lang.Cloneable x= (java.lang.Cloneable) collection_arrarr
java.io.Serializable x= (java.io.Serializable) collection_arrarr
java.lang.Object[] x= (java.lang.Object[]) collection_arrarr
java.lang.Object[][] x= (java.lang.Object[][]) collection_arrarr
java.util.Collection[][] x= (java.util.Collection[][]) collection_arrarr
java.util.Vector[][] x= (java.util.Vector[][]) collection_arrarr
java.net.Socket[][] x= (java.net.Socket[][]) collection_arrarr
java.lang.Object x= (java.lang.Object) vector_arrarr
java.lang.Cloneable x= (java.lang.Cloneable) vector_arrarr
java.io.Serializable x= (java.io.Serializable) vector_arrarr
java.lang.Object[] x= (java.lang.Object[]) vector_arrarr
java.lang.Object[][] x= (java.lang.Object[][]) vector_arrarr
java.util.Collection[][] x= (java.util.Collection[][]) vector_arrarr
java.util.Vector[][] x= (java.util.Vector[][]) vector_arrarr
java.lang.Object x= (java.lang.Object) socket_arrarr
java.lang.Cloneable x= (java.lang.Cloneable) socket_arrarr
java.io.Serializable x= (java.io.Serializable) socket_arrarr
java.lang.Object[] x= (java.lang.Object[]) socket_arrarr
java.lang.Object[][] x= (java.lang.Object[][]) socket_arrarr
java.util.Collection[][] x= (java.util.Collection[][]) socket_arrarr
java.net.Socket[][] x= (java.net.Socket[][]) socket_arrarr
expected:<0> but was:<9315>
at org.junit.Assert.fail(Assert.java:89)
at org.junit.Assert.failNotEquals(Assert.java:835)
at org.junit.Assert.assertEquals(Assert.java:647)
at org.eclipse.jdt.ui.tests.core.TypeRulesTest.testCanCast(TypeRulesTest.java:330)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1834/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1834,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WM5Eb,eclipse.jdt.ui,2519961883,1834,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-12-05T10:51:47Z,2024-12-05T10:51:47Z,can not locally reproduce,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WM5Eb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1835,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1835,eclipse.jdt.ui,2720261580,1835,ClassCastException AsyncCompletionProposalPopup in ContinuousTypingCompletionTest,jukzi,51790620,Jörg Kubitz,,CLOSED,2024-12-05T12:18:35Z,2025-01-08T14:35:14Z,"ContinuousTypingCompletionTest.testContinousTypingSelectsTopProposal failed in
https://download.eclipse.org/eclipse/downloads/drops4/I20241204-1800/testresults/html/org.eclipse.jdt.text.tests_ep435I-unit-macosx-x86_64-java17_macosx.cocoa.x86_64_17.html
```
java.lang.ClassCastException: class org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup$ComputingProposal cannot be cast to class org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal (org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup$ComputingProposal is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @274d1785; org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @bad6718)
at org.eclipse.jdt.text.tests.contentassist.ContinuousTypingCompletionTest$CompletionSelectionTracker.getSelectedProposal(ContinuousTypingCompletionTest.java:60)
at org.eclipse.jdt.text.tests.contentassist.ContinuousTypingCompletionTest.testContinousTypingSelectsTopProposal(ContinuousTypingCompletionTest.java:87)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
```
locally reproducable on win
![image](https://github.com/user-attachments/assets/e9bfd6a8-c186-4584-9e73-29aa0d1f52b2)

cc @mickaelistria @testforstephen because you are working on classloader issues - any idea?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1835/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1835,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WOD-e,eclipse.jdt.ui,2520268702,1835,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2024-12-05T13:02:51Z,2024-12-05T13:02:51Z,"This is a regular classCastException, not a classloader issue. ComputingProposal is *not* an instance of AbstractJavaCompletionProposal. The question is what has changed: is it that ComputingProposal is now returned (ie completion in JDT being async?) or that AbstractJavaCompletionProposal is freshly expected?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WOD-e/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1835,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WOFTR,eclipse.jdt.ui,2520274129,1835,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-12-05T13:04:59Z,2024-12-05T13:04:59Z,I could not find any recent change that made the test work again.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WOFTR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1835,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WOgu2,eclipse.jdt.ui,2520386486,1835,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-12-05T13:51:58Z,2024-12-05T13:51:58Z,it's a race condition. Probably something got faster or slower. Found a way to fix it by appropriate wait.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WOgu2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1836,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1836,eclipse.jdt.ui,2720347262,1836,"Use different icon in ""Rename to unnamed""",Bananeweizen,406876,Michael Keppler,,CLOSED,2024-12-05T12:56:09Z,2024-12-05T20:06:12Z,"From the 2024-12 presentation video: 
![image](https://github.com/user-attachments/assets/44521564-a2f7-482a-a86c-6d90010c0926)

The icon for the ""Rename to unnamed variable"" is the general ""redo"" icon, which I find confusing here. I'd rather suggest to use the same icon as further down below in ""Rename in file"" and ""Rename in workspace"".

See https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/master/org.eclipse.jdt.ui/ui/org/eclipse/jdt/internal/ui/text/correction/LocalCorrectionsSubProcessor.java#L992 for related code.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1836/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1839,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1839,eclipse.jdt.ui,2721518694,1839,"Bug 96932 - [quick fix] No ""create field"" quick fix inside enum",jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-12-05T21:58:01Z,2024-12-06T02:13:03Z,"From https://bugs.eclipse.org/bugs/show_bug.cgi?id=96932

Given code:

public enum TheEnum {
	ONE, TWO;
	
	private int foo() {
		return fCount;
	}
}

A quick fix on fCount does not offer ""Create field 'fCount'"", but it should","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1839/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1841,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1841,eclipse.jdt.ui,2722661222,1841,Convert String/StringBuffer/StringBuilder concatenation to Text Block not working on JDT.core UnnecessaryArrayCreationQuickFixTest,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,CLOSED,2024-12-06T10:37:23Z,2024-12-10T06:53:39Z,"/org.eclipse.jdt.ui.tests/ui/org/eclipse/jdt/ui/tests/quickfix/UnnecessaryArrayCreationQuickFixTest.java contains statements like:

````
StringBuilder buf= new StringBuilder();
		buf.append(""package test1;\n"");
		buf.append(""import java.util.Arrays;\n"");
		buf.append(""import java.util.List;\n"");
		buf.append(""public class A {\n"");
		buf.append(""    private class A1 {\n"");
		buf.append(""        public String[] foo(int x, String[] ... b) {\n"");
		buf.append(""            return b[0];\n"");
		buf.append(""        }\n"");
		buf.append(""    }\n"");
		buf.append(""    private class A2 extends A1 {\n"");
		buf.append(""        public String[] foo(int x) {\n"");
		buf.append(""            return super.foo(x, new String[][] { new String[] {\""a\""}});\n"");
		buf.append(""        }\n"");
		buf.append(""    }\n"");
		buf.append(""}\n"");
````

I would expect that the Source clean up convert to Text Block would convert this. It currently does not.

![image](https://github.com/user-attachments/assets/8a3279fa-d5e0-4d3c-a61e-41d41c0c535a)

cc @jjohnstn ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1841/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1841,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Wb8_y,eclipse.jdt.ui,2523910130,1841,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-12-06T18:26:16Z,2024-12-06T18:26:16Z,"@vogella The reason the conversion does not occur is that the buf is later passed to a method: fetchConvertingProposal2.  Removing the StringBuilder makes that impossible.  If the methods that take a StringBuilder/StringBuffer were converted to take a String, then the buf.toString() could passed and this would trigger the clean-up to do what you expect.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Wb8_y/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1841,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WcBr4,eclipse.jdt.ui,2523929336,1841,NA,carstenartur,3164220,Carsten Hammer,,NA,2024-12-06T18:38:12Z,2024-12-06T18:38:12Z,"Hi @jjohnstn 
Imho it might be possible to aggregate consecutive lines into a text block without substitution of the Stringbuffer object in this case. Wdyt?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WcBr4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1841,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WcKUq,eclipse.jdt.ui,2523964714,1841,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2024-12-06T18:59:57Z,2024-12-06T18:59:57Z,"So, initializing the StringBuilder/StringBuffer with a text block.  Yes, it would be possible.  I'll take a look at it.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WcKUq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1841,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6W1ciZ,eclipse.jdt.ui,2530592921,1841,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2024-12-10T06:53:38Z,2024-12-10T06:53:38Z,Thanks @jjohnstn I currently cannot test due to https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1843,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6W1ciZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1843,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1843,eclipse.jdt.ui,2726230559,1843,SmokeViewsTest.testOpenSourceView fails since I20241206-1800,jukzi,51790620,Jörg Kubitz,,CLOSED,2024-12-09T07:28:20Z,2025-01-08T14:35:44Z,"All OS
```
java.lang.AssertionError: Error happened on opening view org.eclipse.jdt.ui.SourceView
at org.junit.Assert.fail(Assert.java:89)
at org.eclipse.jdt.ui.tests.views.SmokeViewsTest.smokeTest(SmokeViewsTest.java:143)
at org.eclipse.jdt.ui.tests.views.SmokeViewsTest.testOpenSourceView(SmokeViewsTest.java:133)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
```
for example https://download.eclipse.org/eclipse/downloads/drops4/I20241206-1800/testresults/html/org.eclipse.jdt.ui.tests_ep435I-unit-macosx-x86_64-java17_macosx.cocoa.x86_64_17.html

locally reproducible, logs NPE:
```
java.lang.NullPointerException
	at java.base/java.util.Objects.requireNonNull(Objects.java:233)
	at java.base/java.util.Arrays$ArrayList.<init>(Arrays.java:4238)
	at java.base/java.util.Arrays.asList(Arrays.java:4223)
	at org.eclipse.jface.text.source.SourceViewer.configure(SourceViewer.java:550)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaSourceViewer.configure(JavaSourceViewer.java:224)
	at org.eclipse.jdt.internal.ui.infoviews.SourceView.internalCreatePartControl(SourceView.java:199)
	at org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView.createPartControl(AbstractInfoView.java:235)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.createPartControl(CompatibilityPart.java:158)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityView.createPartControl(CompatibilityView.java:155)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.create(CompatibilityPart.java:365)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:56)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:977)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:939)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalInject(InjectorImpl.java:139)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:386)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:312)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:203)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:90)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:59)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:42)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributedPartRenderer.createWidget(ContributedPartRenderer.java:134)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:991)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run(PartRenderingEngine.java:543)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:527)
	at org.eclipse.e4.ui.workbench.renderers.swt.ElementReferenceRenderer.createWidget(ElementReferenceRenderer.java:73)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:991)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.lambda$0(PartServiceImpl.java:110)
	at org.eclipse.e4.ui.services.internal.events.UIEventHandler.lambda$0(UIEventHandler.java:38)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:183)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4941)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.services.internal.events.UIEventHandler.handleEvent(UIEventHandler.java:38)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:206)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:201)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:131)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:73)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:60)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.ElementContainerImpl.setSelectedElementGen(ElementContainerImpl.java:168)
	at org.eclipse.e4.ui.model.application.ui.impl.ElementContainerImpl.setSelectedElement(ElementContainerImpl.java:187)
	at org.eclipse.e4.ui.internal.workbench.ModelServiceImpl.showElementInWindow(ModelServiceImpl.java:654)
	at org.eclipse.e4.ui.internal.workbench.ModelServiceImpl.bringToTop(ModelServiceImpl.java:618)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.delegateBringToTop(PartServiceImpl.java:796)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.activate(PartServiceImpl.java:764)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.activate(PartServiceImpl.java:686)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.activate(PartServiceImpl.java:681)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.showPart(PartServiceImpl.java:1262)
	at org.eclipse.ui.internal.WorkbenchPage.showPart(WorkbenchPage.java:1245)
	at org.eclipse.ui.internal.WorkbenchPage.busyShowView(WorkbenchPage.java:1233)
	at org.eclipse.ui.internal.WorkbenchPage.lambda$13(WorkbenchPage.java:4243)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ui.internal.WorkbenchPage.showView(WorkbenchPage.java:4241)
	at org.eclipse.ui.internal.WorkbenchPage.showView(WorkbenchPage.java:4225)
	at org.eclipse.jdt.ui.tests.views.SmokeViewsTest.smokeTest(SmokeViewsTest.java:138)
	at org.eclipse.jdt.ui.tests.views.SmokeViewsTest.testOpenSourceView(SmokeViewsTest.java:133)
```

Caused by https://github.com/eclipse-platform/eclipse.platform.ui/pull/2051 @mickaelistria, @lathapatil
Please always check next CI build after submitting anything to find regressions in other related plugins.


","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1843/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1843,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WoU5V,eclipse.jdt.ui,2527153749,1843,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2024-12-09T07:35:35Z,2024-12-09T07:35:35Z,"To reproduce in the IDE, just try to open ""Declaration"" view.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WoU5V/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1843,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WoZFZ,eclipse.jdt.ui,2527170905,1843,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-12-09T07:45:29Z,2024-12-09T07:45:29Z,"![image](https://github.com/user-attachments/assets/8f8043f0-a7ed-432a-a7cf-152ea3c18b68)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WoZFZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1843,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6W1bCb,eclipse.jdt.ui,2530586779,1843,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2024-12-10T06:49:26Z,2024-12-10T06:49:26Z,"Also broken:  Source -> Clean-up and select Configure I get a NPE

![image](https://github.com/user-attachments/assets/939b2fd2-4a61-4bb6-9b7b-c5a3961433c4)

````
java.lang.NullPointerException
	at java.base/java.util.Objects.requireNonNull(Objects.java:233)
	at java.base/java.util.Arrays$ArrayList.<init>(Arrays.java:4238)
	at java.base/java.util.Arrays.asList(Arrays.java:4223)
	at org.eclipse.jface.text.source.SourceViewer.configure(SourceViewer.java:550)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaSourceViewer.configure(JavaSourceViewer.java:224)
	at org.eclipse.jdt.internal.ui.preferences.formatter.JavaPreview.<init>(JavaPreview.java:135)
	at org.eclipse.jdt.internal.ui.preferences.cleanup.CleanUpPreview.<init>(CleanUpPreview.java:50)
	at org.eclipse.jdt.internal.ui.preferences.cleanup.CleanUpTabPage.doCreateJavaPreview(CleanUpTabPage.java:100)
	at org.eclipse.jdt.internal.ui.preferences.cleanup.CodeFormatingTabPage.doCreateJavaPreview(CodeFormatingTabPage.java:67)
	at org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage.doCreatePreviewPane(ModifyDialogTabPage.java:962)
	at org.eclipse.jdt.internal.ui.preferences.formatter.ModifyDialogTabPage.createContents(ModifyDialogTabPage.java:912)
	at org.eclipse.jdt.internal.ui.fix.CleanUpSelectionDialog.addTabPage(CleanUpSelectionDialog.java:253)
	at org.eclipse.jdt.internal.ui.fix.CleanUpSelectionDialog.createDialogArea(CleanUpSelectionDialog.java:178)
	at org.eclipse.jface.dialogs.Dialog.createContents(Dialog.java:766)
	at org.eclipse.jface.window.Window.create(Window.java:431)
	at org.eclipse.jface.dialogs.Dialog.create(Dialog.java:1092)
	at org.eclipse.jface.dialogs.StatusDialog.create(StatusDialog.java:130)
	at org.eclipse.jdt.internal.ui.fix.CleanUpSelectionDialog.create(CleanUpSelectionDialog.java:129)
	at org.eclipse.jface.window.Window.open(Window.java:788)
	at org.eclipse.jdt.internal.ui.fix.CleanUpRefactoringWizard$CleanUpConfigurationPage$2.widgetSelected(CleanUpRefactoringWizard.java:364)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:286)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:91)

````","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6W1bCb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1843,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6W_MLx,eclipse.jdt.ui,2533147377,1843,NA,mickaelistria,469058,Mickael Istria,mistria@redhat.com,NA,2024-12-10T22:59:14Z,2024-12-10T22:59:14Z,https://github.com/eclipse-platform/eclipse.platform.ui/pull/2612#issuecomment-2531882618 is supposed to fix this. Can you please verify ?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6W_MLx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1845,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1845,eclipse.jdt.ui,2728136112,1845,Add permitted type cases is not suggested #1817,rgrunber,1417342,Roland Grunberg,,CLOSED,2024-12-09T19:58:39Z,2025-02-12T01:03:42Z,"I'm trying to test https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1817 .

```
package test;
public final class BatmanSymbol extends Shape {
}
```

```
package test;
public final class Circle extends Shape {
}
```

```
package test;
public sealed class Shape permits Circle, BatmanSymbol {
}
```

```
package test;

public class Test {
	public static void main(String[] args) {
		Shape someShape;
		switch (someShape) {
		}
	}
}
```

This is all I see over `someShape` :

![image](https://github.com/user-attachments/assets/fbf4cdb1-e01a-4c35-9d5a-c742843edd5f)

I think the issue is related to https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1817/files#diff-e0ec3fbd8bcf1f3175bcbf9d5d49e6bd76b56b06ff24f9875c6203196d015344R2495 . If the classes are all in the same package (no import required), then `importName` will be empty.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1845/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1845,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WwrEm,eclipse.jdt.ui,2529341734,1845,NA,rgrunber,1417342,Roland Grunberg,,NA,2024-12-09T20:09:47Z,2024-12-09T20:09:47Z,"Yeah, If I move the sealed class and its permitted types into a separate package, it works :

https://github.com/user-attachments/assets/6ab84d9b-e18d-47e5-bee2-126817c642a1

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6WwrEm/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1847,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1847,eclipse.jdt.ui,2728500632,1847,Refactor LocalCorrectionsSubProcessor for usage in jdt-ls,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2024-12-09T23:18:21Z,2024-12-11T19:51:59Z,The LocalCorrectionsSubProcessor class was not split into a parameterized base class like other sub-processors were.  This class is used for various quick-fixes including the new add permitted types quickfix and could be useful to jdt-ls.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1847/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1853,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1853,eclipse.jdt.ui,2739404992,1853,"Quick assist ""Join if statement with inner if"" drops comments ",srikanth-sankaran,131454720,Srikanth Sankaran,,CLOSED,2024-12-14T00:30:42Z,2025-01-16T22:24:23Z,"This block of code:

```
        if ((this.bits & ASTNode.SwitchRuleBlock) != 0) { // switch rule blocks shouldn't fall through ...
		if (flowInfo != FlowInfo.DEAD_END) {
			if (flowContext.associatedNode instanceof SwitchExpression) { // ... demand that for expression switch
				currentScope.problemReporter().switchExpressionBlockCompletesNormally(this);
			} else { // ... enforce that for statement switch, by an automagic break
				flowContext.recordBreakFrom(flowInfo);
				return FlowInfo.DEAD_END;
			}
		}
	}
```

becomes this:

```
        if ((this.bits & ASTNode.SwitchRuleBlock) != 0 && flowInfo != FlowInfo.DEAD_END) {
		if (flowContext.associatedNode instanceof SwitchExpression) { // ... demand that for expression switch
			currentScope.problemReporter().switchExpressionBlockCompletesNormally(this);
		} else { // ... enforce that for statement switch, by an automagic break
			flowContext.recordBreakFrom(flowInfo);
			return FlowInfo.DEAD_END;
		}
	}
```

See that the original comment `// switch rule blocks shouldn't fall through ...` has vanished
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1853/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1853,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6X15ke,eclipse.jdt.ui,2547489054,1853,NA,srikanth-sankaran,131454720,Srikanth Sankaran,,NA,2024-12-17T04:36:20Z,2024-12-17T04:36:20Z,Thanks so much @jjohnstn - No good deed shall go unpunished 😆 - so I gift you https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1859 and https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1856,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6X15ke/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1856,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1856,eclipse.jdt.ui,2741998482,1856,Inline method operation drops NLS tags ,srikanth-sankaran,131454720,Srikanth Sankaran,,CLOSED,2024-12-16T10:42:04Z,2025-01-11T00:29:15Z,"I have a method like this:

```
			private char[] typeSwitchSignature(TypeBinding exprType) {
				return CharOperation.concat(""("".toCharArray(), exprType.erasure().signature(), ""I)I"".toCharArray()); //$NON-NLS-1$ //$NON-NLS-2$
			}
```

and the sole call site looks like this:  `char[] signature = typeSwitchSignature(selectorType);`

If I perform the inline method refactoring, I end up with:

`char[] signature = CharOperation.concat(""("".toCharArray(), selectorType.erasure().signature(), ""I)I"".toCharArray());`

and two warnings: `Non-externalized string literal; it should be followed by //$NON-NLS

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1856/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1857,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1857,eclipse.jdt.ui,2743220835,1857,"Quick Search does not look in ""target"" folder despite no filters set.",ykartsev,3834742,Yury Kartsev,,CLOSED,2024-12-16T19:33:05Z,2024-12-17T07:24:03Z,"Dear Community!

I've spent a lot of time searching for this in various forums and websites in general, but couldn't find the answer. It might be a bug, that's why I'm posting it here.

Basically, my Quick Search in latest Eclipse IDE (2024-12) does not search in target folder, even though a folder inside it (target/generated-sources/cxf) currently marked as source folder in Package Explorer.

Obviously, I checked Quick Search preferences, I removed all ignored names from there, but no luck:
<img width=""838"" alt=""Screenshot 2024-12-16 at 13 18 33"" src=""https://github.com/user-attachments/assets/e2066d1c-1ccb-4d4e-86cc-feed6e8e5d19"" />

Just for sake of experiment, I have also tried adding Resource Filter to exclude ""target"" folder - that removed target source folder from my project. Removing that filter gets the source folder back, but Quick Search still does not search it.

I searched the docs, but neither of these two helped:
- https://help.eclipse.org/latest/index.jsp?topic=%2Forg.eclipse.platform.doc.user%2FgettingStarted%2Fqs-36.htm
- https://spring.io/blog/2013/07/11/eclipse-quick-search

The latter despite being old, talks about preferences, but as you saw in the screenshot above there is no option to include ""target"" folder.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1857/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1857,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Xy5kg,eclipse.jdt.ui,2546702624,1857,NA,ykartsev,3834742,Yury Kartsev,,NA,2024-12-16T20:42:44Z,2024-12-16T20:42:44Z,"As usual, as soon as I ask someone, the answer comes :) I realized that Open Resource does not see files in that folder either. Then noticed that I did not have my parent Mven project open, only its child module. When I opened the parent module, Open Resource and Quick Search started seeing that folder! While it's not intuitive, but this is how it is.

I am still leaving it open to the discretion of the admins, because it's kind of not right still.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Xy5kg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1857,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Xzhm5,eclipse.jdt.ui,2546866617,1857,NA,ykartsev,3834742,Yury Kartsev,,NA,2024-12-16T21:40:15Z,2024-12-16T21:40:15Z,"Hm... there is definitely an issue in Quick Search... When I open one of those source-generated files, select its class name and press Cmd+shift+L to call Quick Search dialog, it opens up, but without search results from ""target"" folder. Then I delete last character of the class name in the search bar and it suddenly includes search results from the target folder. Adding that character back still includes target folder.

Although, for other classes this trick does not work and it simply does not search in target subfolders...

I will try to assemble a sample project to attach it here as an example. But I think it's good to know.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Xzhm5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1857,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6X2owE,eclipse.jdt.ui,2547682308,1857,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-12-17T07:24:03Z,2024-12-17T07:24:03Z,"@ykartsev quick search is not a JDT feature but platform.ui. Closing as NOT JDT. Please create a new issues at https://github.com/eclipse-platform/eclipse.platform.ui as we can not move issues between organizations, sorry.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6X2owE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1859,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1859,eclipse.jdt.ui,2743906601,1859,Inline local variable refactoring leaves me with compile errors,srikanth-sankaran,131454720,Srikanth Sankaran,,CLOSED,2024-12-17T04:34:32Z,2025-01-07T21:29:39Z,"I have a piece of code that reads:

```
	// Return the set of enumerations belonging to the selector enum type that are NOT listed in case statements.
	private Set<FieldBinding> unenumeratedConstants(ReferenceBinding enumType, int constantCount) {
		FieldBinding[] enumFields = ((ReferenceBinding) enumType.erasure()).fields();
		Set<FieldBinding> unenumerated = new HashSet<>(Arrays.asList(enumFields));
		for (int i = 0, max = enumFields.length; i < max; i++) {
			FieldBinding enumConstant = enumFields[i];
			if ((enumConstant.modifiers & ClassFileConstants.AccEnum) == 0) {
				unenumerated.remove(enumConstant);
				continue;
			}
			for (int j = 0; j < constantCount; j++) {
				if (TypeBinding.equalsEquals(this.labelExpressions[j].expression.resolvedType, enumType)) {
					if (this.labelExpressions[j].expression instanceof NameReference reference) {
						FieldBinding field = reference.fieldBinding();
						int intValue = field.original().id;
						if (enumConstant.id == intValue) {
							unenumerated.remove(enumConstant);
							break;
						}
					}
				}
			}
		}
		return unenumerated;
	}
```

If I chose the intValue in `int intValue = field.original().id;` and perform inline local variable refactoring I end up with:

`						if (enumConstant.id == this.field.original().id) {`

this is wrong and fails to compile. I was simply expecting: `if (enumConstant.id == field.original().id) {` where `field` is a local. It seems `field` is mistaken to be a field and the this. qualifier is added to it.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1859/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1860,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1860,eclipse.jdt.ui,2744477140,1860,[performance] JDT initialization blocks IDE startup,laeubi,1331477,Christoph Läubrich,,OPEN,2024-12-17T10:04:03Z,2025-01-09T14:00:32Z,"org.eclipse.jdt.ui.StandardJavaElementContentProvider.getParent(Object) calls this code

https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/4dc72d8c0d1ea3ca58656c098ecd178269a0695a/org.eclipse.jdt.ui/ui/org/eclipse/jdt/ui/StandardJavaElementContentProvider.java#L246

the existence check currently triggers all classpath containers of all projects to be resolved what is a costly operation and blocks the whole IDE startup procedure see here:
- https://github.com/eclipse-pde/eclipse.pde/issues/1481

instead one needs a more lightweight check or even always return `null` as allowed by the API or a better way to determine the parents.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1860/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1860,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6X4XEw,eclipse.jdt.ui,2548134192,1860,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-12-17T10:52:18Z,2024-12-17T10:52:18Z,"I would like to see initialize deferred, but i don't know why you are looking at getPartent() specificly. As far as i understand any line between e4.compatibility and initializeContainer could be blamed:

```
        at org.eclipse.pde.internal.core.RequiredPluginsInitializer.initialize(RequiredPluginsInitializer.java:50)
        at org.eclipse.jdt.internal.core.JavaModelManager.initializeContainer(JavaModelManager.java:3209)
        at org.eclipse.jdt.internal.core.JavaModelManager.getClasspathContainer(JavaModelManager.java:2136)
        at org.eclipse.jdt.core.JavaCore.getClasspathContainer(JavaCore.java:3970)
        at org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:3127)
        at org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:3291)
        at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:2405)
        at org.eclipse.jdt.internal.core.JavaProject.buildStructure(JavaProject.java:488)
        at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:246)
        at org.eclipse.jdt.internal.core.Openable.openAncestors(Openable.java:508)
        at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:228)
        at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:569)
        at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:292)
        at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:278)
        at org.eclipse.jdt.internal.core.PackageFragmentRoot.getKind(PackageFragmentRoot.java:539)
        at org.eclipse.jdt.internal.core.PackageFragment.getKind(PackageFragment.java:367)
        at org.eclipse.jdt.internal.core.PackageFragment.validateExistence(PackageFragment.java:596)
        at org.eclipse.jdt.internal.core.Openable.exists(Openable.java:212)
        at org.eclipse.jdt.internal.core.PackageFragment.exists(PackageFragment.java:189)
        at org.eclipse.jdt.ui.StandardJavaElementContentProvider.exists(StandardJavaElementContentProvider.java:509)
        at org.eclipse.jdt.ui.StandardJavaElementContentProvider.getParent(StandardJavaElementContentProvider.java:246)
        at org.eclipse.jdt.internal.ui.javaeditor.JavaEditorBreadcrumb$JavaEditorBreadcrumbContentProvider.getParent(JavaEditorBreadcrumb.java:354)
        at org.eclipse.jdt.internal.ui.javaeditor.breadcrumb.BreadcrumbViewer.buildItemChain(BreadcrumbViewer.java:571)
        at org.eclipse.jdt.internal.ui.javaeditor.breadcrumb.BreadcrumbViewer.buildItemChain(BreadcrumbViewer.java:573)
        at org.eclipse.jdt.internal.ui.javaeditor.breadcrumb.BreadcrumbViewer.inputChanged(BreadcrumbViewer.java:275)
        at org.eclipse.jface.viewers.ContentViewer.setInput(ContentViewer.java:282)
        at org.eclipse.jface.viewers.StructuredViewer.setInput(StructuredViewer.java:1636)
        at org.eclipse.jdt.internal.ui.javaeditor.breadcrumb.EditorBreadcrumb.setInput(EditorBreadcrumb.java:168)
        at org.eclipse.jdt.internal.ui.javaeditor.JavaEditorBreadcrumb.setInput(JavaEditorBreadcrumb.java:797)
        at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.setBreadcrumbInput(JavaEditor.java:2007)
        at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.showBreadcrumb(JavaEditor.java:1981)
        at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.createPartControl(JavaEditor.java:3119)
        at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.createPartControl(CompilationUnitEditor.java:1526)
        at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.createPartControl(CompatibilityPart.java:158)
        at org.eclipse.ui.internal.e4.compatibility.CompatibilityEditor.createPartControl(CompatibilityEditor.java:96)
        at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.create(CompatibilityPart.java:365)
```

And there are other usecases where initialize is also called before UI is shown. For example:

```
Thread [main] (Suspended (breakpoint at line 41 in org.eclipse.pde.internal.core.RequiredPluginsInitializer))	
	org.eclipse.pde.internal.core.RequiredPluginsInitializer.initialize(org.eclipse.core.runtime.IPath, org.eclipse.jdt.core.IJavaProject) line: 41	
	org.eclipse.jdt.internal.core.JavaModelManager.initializeContainer(org.eclipse.jdt.core.IJavaProject, org.eclipse.core.runtime.IPath) line: 3209	
	org.eclipse.jdt.internal.core.JavaModelManager.getClasspathContainer(org.eclipse.core.runtime.IPath, org.eclipse.jdt.core.IJavaProject) line: 2136	
	org.eclipse.jdt.core.JavaCore.getClasspathContainer(org.eclipse.core.runtime.IPath, org.eclipse.jdt.core.IJavaProject) line: 3970	
	org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(org.eclipse.jdt.core.IClasspathEntry[], org.eclipse.jdt.core.IClasspathEntry[], boolean, boolean) line: 3127	
	org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(org.eclipse.jdt.internal.core.JavaModelManager$PerProjectInfo, boolean, boolean) line: 3291	
	org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath() line: 2405	
	org.eclipse.jdt.internal.core.PackageFragmentRoot.getRawClasspathEntry() line: 616	
	org.eclipse.jdt.internal.ui.packageview.PackageExplorerContentProvider.internalGetParent(java.lang.Object) line: 381	
	org.eclipse.jdt.internal.ui.packageview.PackageExplorerContentProvider.processDelta(org.eclipse.jdt.core.IJavaElementDelta, java.util.Collection<java.lang.Runnable>) line: 734	
	org.eclipse.jdt.internal.ui.packageview.PackageExplorerContentProvider.handleAffectedChildren(org.eclipse.jdt.core.IJavaElementDelta, org.eclipse.jdt.core.IJavaElement, java.util.Collection<java.lang.Runnable>) line: 815	
	org.eclipse.jdt.internal.ui.packageview.PackageExplorerContentProvider.processDelta(org.eclipse.jdt.core.IJavaElementDelta, java.util.Collection<java.lang.Runnable>) line: 758	
	org.eclipse.jdt.internal.ui.packageview.PackageExplorerContentProvider.handleAffectedChildren(org.eclipse.jdt.core.IJavaElementDelta, org.eclipse.jdt.core.IJavaElement, java.util.Collection<java.lang.Runnable>) line: 815	
	org.eclipse.jdt.internal.ui.packageview.PackageExplorerContentProvider.processDelta(org.eclipse.jdt.core.IJavaElementDelta, java.util.Collection<java.lang.Runnable>) line: 758	
	org.eclipse.jdt.internal.ui.packageview.PackageExplorerContentProvider.elementChanged(org.eclipse.jdt.core.ElementChangedEvent) line: 139	
	org.eclipse.jdt.internal.core.DeltaProcessor$3.run() line: 1751	
	org.eclipse.core.runtime.SafeRunner.run(org.eclipse.core.runtime.ISafeRunnable) line: 47	
	org.eclipse.jdt.internal.core.DeltaProcessor.notifyListeners(org.eclipse.jdt.core.IJavaElementDelta, int, org.eclipse.jdt.core.IElementChangedListener[], int[], int) line: 1739	
	org.eclipse.jdt.internal.core.DeltaProcessor.firePostChangeDelta(org.eclipse.jdt.core.IJavaElementDelta, org.eclipse.jdt.core.IElementChangedListener[], int[], int) line: 1572	
	org.eclipse.jdt.internal.core.DeltaProcessor.fire(org.eclipse.jdt.core.IJavaElementDelta, int) line: 1548	
	org.eclipse.jdt.internal.core.BecomeWorkingCopyOperation(org.eclipse.jdt.internal.core.JavaModelOperation).run(org.eclipse.core.runtime.IProgressMonitor) line: 791	
	org.eclipse.jdt.internal.core.BecomeWorkingCopyOperation(org.eclipse.jdt.internal.core.JavaModelOperation).runOperation(org.eclipse.core.runtime.IProgressMonitor) line: 816	
	org.eclipse.jdt.internal.core.CompilationUnit.becomeWorkingCopy(org.eclipse.jdt.core.IProblemRequestor, org.eclipse.core.runtime.IProgressMonitor) line: 115	
	org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.createFileInfo(java.lang.Object) line: 1015	
	org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider(org.eclipse.ui.editors.text.TextFileDocumentProvider).connect(java.lang.Object) line: 481	
	org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.connect(java.lang.Object) line: 1253	
	org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor(org.eclipse.ui.texteditor.AbstractTextEditor).doSetInput(org.eclipse.ui.IEditorInput) line: 4187	
	org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor(org.eclipse.ui.texteditor.StatusTextEditor).doSetInput(org.eclipse.ui.IEditorInput) line: 262	
	org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor(org.eclipse.ui.texteditor.AbstractDecoratedTextEditor).doSetInput(org.eclipse.ui.IEditorInput) line: 1526	
	org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor(org.eclipse.jdt.internal.ui.javaeditor.JavaEditor).internalDoSetInput(org.eclipse.ui.IEditorInput) line: 2567	
	org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor(org.eclipse.jdt.internal.ui.javaeditor.JavaEditor).doSetInput(org.eclipse.ui.IEditorInput) line: 2540	
	org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSetInput(org.eclipse.ui.IEditorInput) line: 1415	
	org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor(org.eclipse.ui.texteditor.AbstractTextEditor).lambda$1(org.eclipse.ui.IEditorInput, org.eclipse.core.runtime.IProgressMonitor) line: 3171	
	org.eclipse.ui.texteditor.AbstractTextEditor$$Lambda.0x000001ea90690000.run(org.eclipse.core.runtime.IProgressMonitor) line: not available	
	org.eclipse.ui.internal.WorkbenchWindow.run(boolean, boolean, org.eclipse.jface.operation.IRunnableWithProgress) line: 2285	
	org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor(org.eclipse.ui.texteditor.AbstractTextEditor).internalInit(org.eclipse.ui.IWorkbenchWindow, org.eclipse.ui.IEditorSite, org.eclipse.ui.IEditorInput) line: 3188	
	org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor(org.eclipse.ui.texteditor.AbstractTextEditor).init(org.eclipse.ui.IEditorSite, org.eclipse.ui.IEditorInput) line: 3213	
	org.eclipse.ui.internal.EditorReference.initialize(org.eclipse.ui.IWorkbenchPart) line: 353	
	org.eclipse.ui.internal.e4.compatibility.CompatibilityEditor(org.eclipse.ui.internal.e4.compatibility.CompatibilityPart).create() line: 344	
	java.lang.invoke.LambdaForm$DMH.0x000001ea901ae000.invokeVirtual(java.lang.Object, java.lang.Object) line: not available	
	java.lang.invoke.LambdaForm$MH.0x000001ea900b2c00.invoke(java.lang.Object, java.lang.Object) line: not available	
	java.lang.invoke.Invokers$Holder.invokeExact_MT(java.lang.Object, java.lang.Object, java.lang.Object) line: not available	
	jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl(java.lang.Object, java.lang.Object[]) line: 153	
	jdk.internal.reflect.DirectMethodHandleAccessor.invoke(java.lang.Object, java.lang.Object[]) line: 103	
	java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object...) line: 580	
	org.eclipse.e4.core.internal.di.MethodRequestor.execute() line: 56	
	org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(org.eclipse.e4.core.internal.di.AnnotationLookup.AnnotationProxy, java.lang.Object, java.lang.Class<?>, org.eclipse.e4.core.di.suppliers.PrimaryObjectSupplier, org.eclipse.e4.core.di.suppliers.PrimaryObjectSupplier, java.util.List<java.lang.Class<?>>) line: 977	
	org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(org.eclipse.e4.core.internal.di.AnnotationLookup.AnnotationProxy, java.lang.Object, java.lang.Class<?>, org.eclipse.e4.core.di.suppliers.PrimaryObjectSupplier, org.eclipse.e4.core.di.suppliers.PrimaryObjectSupplier, java.util.List<java.lang.Class<?>>) line: 939	
	org.eclipse.e4.core.internal.di.InjectorImpl.internalInject(java.lang.Object, org.eclipse.e4.core.di.suppliers.PrimaryObjectSupplier, org.eclipse.e4.core.di.suppliers.PrimaryObjectSupplier) line: 139	
	org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(java.lang.Class<?>, org.eclipse.e4.core.di.suppliers.PrimaryObjectSupplier, org.eclipse.e4.core.di.suppliers.PrimaryObjectSupplier) line: 386	
	org.eclipse.e4.core.internal.di.InjectorImpl.make(java.lang.Class<T>, org.eclipse.e4.core.di.suppliers.PrimaryObjectSupplier) line: 312	
	org.eclipse.e4.core.contexts.ContextInjectionFactory.make(java.lang.Class<T>, org.eclipse.e4.core.contexts.IEclipseContext) line: 203	
	org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(org.osgi.framework.Bundle, org.eclipse.e4.core.contexts.IEclipseContext, org.eclipse.e4.core.contexts.IEclipseContext, org.eclipse.emf.common.util.URI) line: 90	
	org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(java.lang.String, org.eclipse.e4.core.contexts.IEclipseContext, org.eclipse.e4.core.contexts.IEclipseContext) line: 59	
	org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(java.lang.String, org.eclipse.e4.core.contexts.IEclipseContext) line: 42	
	org.eclipse.e4.ui.workbench.renderers.swt.ContributedPartRenderer.createWidget(org.eclipse.e4.ui.model.application.ui.MUIElement, java.lang.Object) line: 134	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(org.eclipse.e4.ui.model.application.ui.MUIElement, java.lang.Object) line: 991	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(org.eclipse.e4.ui.model.application.ui.MUIElement, java.lang.Object, org.eclipse.e4.core.contexts.IEclipseContext) line: 658	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(org.eclipse.e4.ui.model.application.ui.MUIElement) line: 762	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run() line: 727	
	org.eclipse.core.runtime.SafeRunner.run(org.eclipse.core.runtime.ISafeRunnable) line: 47	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(org.eclipse.e4.ui.model.application.ui.MUIElement) line: 711	
	org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.showTab(org.eclipse.e4.ui.model.application.ui.MUIElement) line: 1389	
	org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer(org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer).postProcess(org.eclipse.e4.ui.model.application.ui.MUIElement) line: 114	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(org.eclipse.e4.ui.model.application.ui.MUIElement, java.lang.Object, org.eclipse.e4.core.contexts.IEclipseContext) line: 676	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(org.eclipse.e4.ui.model.application.ui.MUIElement) line: 762	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run() line: 727	
	org.eclipse.core.runtime.SafeRunner.run(org.eclipse.core.runtime.ISafeRunnable) line: 47	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(org.eclipse.e4.ui.model.application.ui.MUIElement) line: 711	
	org.eclipse.e4.ui.workbench.renderers.swt.AreaRenderer(org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer).processContents(org.eclipse.e4.ui.model.application.ui.MElementContainer<org.eclipse.e4.ui.model.application.ui.MUIElement>) line: 72	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(org.eclipse.e4.ui.model.application.ui.MUIElement, java.lang.Object, org.eclipse.e4.core.contexts.IEclipseContext) line: 672	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run() line: 543	
	org.eclipse.core.runtime.SafeRunner.run(org.eclipse.core.runtime.ISafeRunnable) line: 47	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(org.eclipse.e4.ui.model.application.ui.MUIElement, java.lang.Object, org.eclipse.e4.core.contexts.IEclipseContext) line: 527	
	org.eclipse.e4.ui.workbench.renderers.swt.ElementReferenceRenderer.createWidget(org.eclipse.e4.ui.model.application.ui.MUIElement, java.lang.Object) line: 73	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(org.eclipse.e4.ui.model.application.ui.MUIElement, java.lang.Object) line: 991	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(org.eclipse.e4.ui.model.application.ui.MUIElement, java.lang.Object, org.eclipse.e4.core.contexts.IEclipseContext) line: 658	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(org.eclipse.e4.ui.model.application.ui.MUIElement) line: 762	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run() line: 727	
	org.eclipse.core.runtime.SafeRunner.run(org.eclipse.core.runtime.ISafeRunnable) line: 47	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(org.eclipse.e4.ui.model.application.ui.MUIElement) line: 711	
	org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer(org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer).processContents(org.eclipse.e4.ui.model.application.ui.MElementContainer<org.eclipse.e4.ui.model.application.ui.MUIElement>) line: 72	
	org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(org.eclipse.e4.ui.model.application.ui.MElementContainer<org.eclipse.e4.ui.model.application.ui.MUIElement>) line: 147	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(org.eclipse.e4.ui.model.application.ui.MUIElement, java.lang.Object, org.eclipse.e4.core.contexts.IEclipseContext) line: 672	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(org.eclipse.e4.ui.model.application.ui.MUIElement) line: 762	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run() line: 727	
	org.eclipse.core.runtime.SafeRunner.run(org.eclipse.core.runtime.ISafeRunnable) line: 47	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(org.eclipse.e4.ui.model.application.ui.MUIElement) line: 711	
	org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer(org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer).processContents(org.eclipse.e4.ui.model.application.ui.MElementContainer<org.eclipse.e4.ui.model.application.ui.MUIElement>) line: 72	
	org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(org.eclipse.e4.ui.model.application.ui.MElementContainer<org.eclipse.e4.ui.model.application.ui.MUIElement>) line: 147	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(org.eclipse.e4.ui.model.application.ui.MUIElement, java.lang.Object, org.eclipse.e4.core.contexts.IEclipseContext) line: 672	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(org.eclipse.e4.ui.model.application.ui.MUIElement) line: 762	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run() line: 727	
	org.eclipse.core.runtime.SafeRunner.run(org.eclipse.core.runtime.ISafeRunnable) line: 47	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(org.eclipse.e4.ui.model.application.ui.MUIElement) line: 711	
	org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer(org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer).processContents(org.eclipse.e4.ui.model.application.ui.MElementContainer<org.eclipse.e4.ui.model.application.ui.MUIElement>) line: 72	
	org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(org.eclipse.e4.ui.model.application.ui.MElementContainer<org.eclipse.e4.ui.model.application.ui.MUIElement>) line: 147	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(org.eclipse.e4.ui.model.application.ui.MUIElement, java.lang.Object, org.eclipse.e4.core.contexts.IEclipseContext) line: 672	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(org.eclipse.e4.ui.model.application.ui.MUIElement) line: 762	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run() line: 727	
	org.eclipse.core.runtime.SafeRunner.run(org.eclipse.core.runtime.ISafeRunnable) line: 47	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(org.eclipse.e4.ui.model.application.ui.MUIElement) line: 711	
	org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer(org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer).processContents(org.eclipse.e4.ui.model.application.ui.MElementContainer<org.eclipse.e4.ui.model.application.ui.MUIElement>) line: 72	
	org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(org.eclipse.e4.ui.model.application.ui.MElementContainer<org.eclipse.e4.ui.model.application.ui.MUIElement>) line: 48	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(org.eclipse.e4.ui.model.application.ui.MUIElement, java.lang.Object, org.eclipse.e4.core.contexts.IEclipseContext) line: 672	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(org.eclipse.e4.ui.model.application.ui.MUIElement) line: 762	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run() line: 727	
	org.eclipse.core.runtime.SafeRunner.run(org.eclipse.core.runtime.ISafeRunnable) line: 47	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(org.eclipse.e4.ui.model.application.ui.MUIElement) line: 711	
	org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(org.eclipse.e4.ui.model.application.ui.MUIElement) line: 79	
	org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer(org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer).postProcess(org.eclipse.e4.ui.model.application.ui.MUIElement) line: 114	
	org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(org.eclipse.e4.ui.model.application.ui.MUIElement) line: 61	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(org.eclipse.e4.ui.model.application.ui.MUIElement, java.lang.Object, org.eclipse.e4.core.contexts.IEclipseContext) line: 676	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(org.eclipse.e4.ui.model.application.ui.MUIElement) line: 762	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run() line: 727	
	org.eclipse.core.runtime.SafeRunner.run(org.eclipse.core.runtime.ISafeRunnable) line: 47	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(org.eclipse.e4.ui.model.application.ui.MUIElement) line: 711	
	org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer(org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer).processContents(org.eclipse.e4.ui.model.application.ui.MElementContainer<org.eclipse.e4.ui.model.application.ui.MUIElement>) line: 72	
	org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(org.eclipse.e4.ui.model.application.ui.MElementContainer<org.eclipse.e4.ui.model.application.ui.MUIElement>) line: 147	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(org.eclipse.e4.ui.model.application.ui.MUIElement, java.lang.Object, org.eclipse.e4.core.contexts.IEclipseContext) line: 672	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(org.eclipse.e4.ui.model.application.ui.MUIElement) line: 762	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run() line: 727	
	org.eclipse.core.runtime.SafeRunner.run(org.eclipse.core.runtime.ISafeRunnable) line: 47	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(org.eclipse.e4.ui.model.application.ui.MUIElement) line: 711	
	org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer(org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer).processContents(org.eclipse.e4.ui.model.application.ui.MElementContainer<org.eclipse.e4.ui.model.application.ui.MUIElement>) line: 72	
	org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(org.eclipse.e4.ui.model.application.ui.MElementContainer<org.eclipse.e4.ui.model.application.ui.MUIElement>) line: 662	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(org.eclipse.e4.ui.model.application.ui.MUIElement, java.lang.Object, org.eclipse.e4.core.contexts.IEclipseContext) line: 672	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(org.eclipse.e4.ui.model.application.ui.MUIElement) line: 762	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run() line: 727	
	org.eclipse.core.runtime.SafeRunner.run(org.eclipse.core.runtime.ISafeRunnable) line: 47	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(org.eclipse.e4.ui.model.application.ui.MUIElement) line: 711	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run() line: 1079	
	org.eclipse.core.databinding.observable.Realm.runWithDefault(org.eclipse.core.databinding.observable.Realm, java.lang.Runnable) line: 339	
	org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(org.eclipse.e4.ui.model.application.MApplicationElement, org.eclipse.e4.core.contexts.IEclipseContext) line: 1042	
	org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(org.eclipse.e4.ui.model.application.MApplicationElement) line: 153	
	org.eclipse.ui.internal.Workbench.lambda$3(org.eclipse.swt.widgets.Display, org.eclipse.ui.application.WorkbenchAdvisor, int[]) line: 663	
	org.eclipse.ui.internal.Workbench$$Lambda.0x000001ea901ee3f8.run() line: not available	
	org.eclipse.core.databinding.observable.Realm.runWithDefault(org.eclipse.core.databinding.observable.Realm, java.lang.Runnable) line: 339	
	org.eclipse.ui.internal.Workbench.createAndRunWorkbench(org.eclipse.swt.widgets.Display, org.eclipse.ui.application.WorkbenchAdvisor) line: 570	
	org.eclipse.ui.PlatformUI.createAndRunWorkbench(org.eclipse.swt.widgets.Display, org.eclipse.ui.application.WorkbenchAdvisor) line: 173	
	org.eclipse.ui.internal.ide.application.IDEApplication.start(org.eclipse.equinox.app.IApplicationContext) line: 178	
	org.eclipse.equinox.internal.app.EclipseAppHandle.run(java.lang.Object) line: 208	
	org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(java.lang.Object) line: 143	
	org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(java.lang.Object) line: 109	
	org.eclipse.core.runtime.adaptor.EclipseStarter.run(java.lang.Object) line: 439	
	org.eclipse.core.runtime.adaptor.EclipseStarter.run(java.lang.String[], java.lang.Runnable) line: 271	
	java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(java.lang.Object, java.lang.Object, java.lang.Object) line: not available	
	java.lang.invoke.LambdaForm$MH.0x000001ea90005c00.invoke(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object) line: not available	
	java.lang.invoke.LambdaForm$MH.0x000001ea90006000.invokeExact_MT(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object) line: not available	
	jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl(java.lang.Object, java.lang.Object[]) line: 155	
	jdk.internal.reflect.DirectMethodHandleAccessor.invoke(java.lang.Object, java.lang.Object[]) line: 103	
	java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object...) line: 580	
	org.eclipse.equinox.launcher.Main.invokeFramework(java.lang.String[], java.net.URL[]) line: 668	
	org.eclipse.equinox.launcher.Main.basicRun(java.lang.String[]) line: 605	
	org.eclipse.equinox.launcher.Main.run(java.lang.String[]) line: 1481	
	org.eclipse.equinox.launcher.Main.main(java.lang.String[]) line: 1454	

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6X4XEw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1860,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6X4gZv,eclipse.jdt.ui,2548172399,1860,NA,laeubi,1331477,Christoph Läubrich,,NA,2024-12-17T11:10:19Z,2024-12-17T11:10:19Z,"> but i don't know why you are looking at getPartent() specificly.

Because it is the first call somewhere in UI and the problem is gone if I comment out this specific line.

> e4.compatibility and initializeContainer could be blamed

This is creating the UI (what is hard to delay if we want to see *something*) the same for a lot of stuff up from there..

`PackageExplorerContentProvider.elementChanged` *might* be a candidate I leave it to the decision of the JDT devs where the best entry point is.

> And there are other usecases where initialize is also called before UI is shown. For example:

That is sadly the case yes... see for example:

- https://github.com/eclipse-jdt/eclipse.jdt.core/issues/3468","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6X4gZv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1860,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6X4kLO,eclipse.jdt.ui,2548187854,1860,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-12-17T11:18:00Z,2024-12-17T11:18:00Z,"A clean solution might asynchronously update the UI once JDT is fully initialized.
But don't expect anybody to work on it, since it ""works"" and JDT is understaffed. Contributions welcome.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6X4kLO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1860,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6X4lw7,eclipse.jdt.ui,2548194363,1860,NA,laeubi,1331477,Christoph Läubrich,,NA,2024-12-17T11:21:32Z,2024-12-17T11:21:32Z,"> But don't expect anybody to work on it, since it ""works"" and JDT is understaffed.

I just noticed many people including you and @vogella are always concerned about IDE startup times and this one can have a huge impact (its not only PDE affected but also m2e and JDT itself) as much stuff is loaded and initialized and as it even blocks the UI thread the loadscreen is also not updated. 

So I decided to at least report the problem :-)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6X4lw7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1860,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6X4nUL,eclipse.jdt.ui,2548200715,1860,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-12-17T11:24:15Z,2024-12-17T11:24:15Z,Thanks for reporting. I definitely would like to see it fixed.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6X4nUL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1860,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6X5Nhx,eclipse.jdt.ui,2548357233,1860,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2024-12-17T12:41:14Z,2024-12-17T12:41:14Z,You can also trace the activator startup time per bundle: see https://www.vogella.com/tutorials/EclipsePerformance/article.html#example-tracing-the-startup-time-of-plug-ins ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6X5Nhx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1860,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6YB4g3,eclipse.jdt.ui,2550630455,1860,NA,laeubi,1331477,Christoph Läubrich,,NA,2024-12-18T08:11:00Z,2024-12-18T08:11:00Z,"The activator is not the problem here.

I noticed another undesirable side-effect:

Actually jdt UI plugin has a job that should batch initialize all classpathcontainers for performance reasons with 

`org.eclipse.jdt.internal.ui.InitializeAfterLoadJob`

but because this is an UI Workbench job it is called **after** the UI is created, due to the calls to the classpath containers already **while** creating the UI some are already initialized the ""slow"" way without batching, afterwards the job is run and performs the init of the other containers (if any). ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6YB4g3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1860,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Zy8pA,eclipse.jdt.ui,2580269632,1860,NA,laeubi,1331477,Christoph Läubrich,,NA,2025-01-09T14:00:31Z,2025-01-09T14:00:31Z,"A possible solution would be to have a a more lighweight check here, but I'm not familiar enough with the JDT model, but to resolve the full classpath of a project seems a bit overkill to check if a project/package exits.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Zy8pA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1861,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1861,eclipse.jdt.ui,2746956291,1861,[mac] PluginsNotLoadedTest fails I20241217-1800,jukzi,51790620,Jörg Kubitz,,OPEN,2024-12-18T06:58:04Z,2024-12-18T06:58:05Z,"Both mac builds:
https://download.eclipse.org/eclipse/downloads/drops4/I20241217-1800/testresults/html/org.eclipse.jdt.text.tests_ep435I-unit-macosx-x86_64-java17_macosx.cocoa.x86_64_17.html
https://download.eclipse.org/eclipse/downloads/drops4/I20241217-1800/testresults/html/org.eclipse.jdt.text.tests_ep435I-unit-macosx-aarch64-java17_macosx.cocoa.aarch64_17.html
```
Wrong bundles loaded: - org.eclipse.jdt.junit expected:<0> but was:<24>

java.lang.AssertionError: Wrong bundles loaded:
- org.eclipse.jdt.junit
expected:<0> but was:<24>
at org.junit.Assert.fail(Assert.java:89)
at org.junit.Assert.failNotEquals(Assert.java:835)
at org.junit.Assert.assertEquals(Assert.java:647)
at org.eclipse.jdt.text.tests.PluginsNotLoadedTest.pluginsNotLoaded(PluginsNotLoadedTest.java:278)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1861/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1863,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1863,eclipse.jdt.ui,2747283743,1863,IllegalArgumentException WorkingSetModel.setWorkingSets,jukzi,51790620,Jörg Kubitz,,OPEN,2024-12-18T09:31:29Z,2024-12-19T10:36:01Z,"1452 tests failed in 
https://download.eclipse.org/eclipse/downloads/drops4/I20241217-1800/testresults/html/org.eclipse.jdt.ui.tests_ep435I-unit-win32-x86_64-java21_win32.win32.x86_64_21.html

most like this:
```
org.opentest4j.MultipleFailuresError: Multiple Failures (2 failures)
org.eclipse.core.internal.resources.ResourceException: Resource '/TestSetupProject' does not exist.
org.eclipse.jdt.core.JavaModelException: TestSetupProject does not exist
Suppressed: org.eclipse.core.internal.resources.ResourceException: Resource '/TestSetupProject' does not exist.
at org.eclipse.core.internal.resources.Resource.checkExists(Resource.java:364)
at org.eclipse.core.internal.resources.Resource.checkAccessible(Resource.java:238)
at org.eclipse.core.internal.resources.Project.checkAccessible(Project.java:183)
at org.eclipse.core.internal.resources.Folder.assertCreateRequirements(Folder.java:43)
at org.eclipse.core.internal.resources.Folder.create(Folder.java:101)
at org.eclipse.core.internal.resources.Folder.create(Folder.java:129)
at org.eclipse.jdt.internal.ui.util.ResourcesUtility.createFolder(ResourcesUtility.java:77)
at org.eclipse.jdt.internal.ui.util.CoreUtility.createFolder(CoreUtility.java:64)
at org.eclipse.jdt.testplugin.JavaProjectHelper.addSourceContainer(JavaProjectHelper.java:732)
at org.eclipse.jdt.testplugin.JavaProjectHelper.addSourceContainer(JavaProjectHelper.java:710)
at org.eclipse.jdt.testplugin.JavaProjectHelper.addSourceContainer(JavaProjectHelper.java:696)
at org.eclipse.jdt.testplugin.JavaProjectHelper.addSourceContainer(JavaProjectHelper.java:683)
at org.eclipse.jdt.testplugin.JavaProjectHelper.addSourceContainer(JavaProjectHelper.java:671)
at org.eclipse.jdt.ui.tests.quickfix.UtilitiesTest.setUp(UtilitiesTest.java:74)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
Caused by: java.lang.Exception: Resource '/TestSetupProject' does not exist.
at org.eclipse.core.internal.resources.ResourceException.provideStackTrace(ResourceException.java:42)
at org.eclipse.core.internal.resources.ResourceException.<init>(ResourceException.java:38)
... 15 more
Suppressed: Java Model Exception: Error in Java Model (code 969): TestSetupProject does not exist
at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:546)
at org.eclipse.jdt.internal.core.JavaModelManager.getPerProjectInfoCheckExistence(JavaModelManager.java:2535)
at org.eclipse.jdt.internal.core.JavaProject.getPerProjectInfo(JavaProject.java:2329)
at org.eclipse.jdt.internal.core.JavaProject.getOutputLocation(JavaProject.java:2144)
at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(JavaProject.java:3512)
at org.eclipse.jdt.testplugin.JavaProjectHelper.lambda$1(JavaProjectHelper.java:604)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2457)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2477)
at org.eclipse.jdt.testplugin.JavaProjectHelper.clear(JavaProjectHelper.java:612)
at org.eclipse.jdt.ui.tests.quickfix.UtilitiesTest.tearDown(UtilitiesTest.java:79)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
```

I could not find a special error in the logfiles that would be the root cause.  But there is a IllegalArgumentException logged that i could not reproduce locally:

https://download.eclipse.org/eclipse/downloads/drops4/I20241217-1800/testresults/ep435I-unit-win32-x86_64-java21_win32.win32.x86_64_21/org.eclipse.jdt.ui.tests.AutomatedSuite.txt

```
java.lang.IllegalArgumentException: 
	at org.eclipse.core.runtime.Assert.isLegal(Assert.java:68)
	at org.eclipse.core.runtime.Assert.isLegal(Assert.java:52)
	at org.eclipse.jdt.internal.ui.workingsets.WorkingSetModel.setWorkingSets(WorkingSetModel.java:429)
	at org.eclipse.jdt.internal.ui.workingsets.WorkingSetModel.workingSetManagerChanged(WorkingSetModel.java:616)
	at org.eclipse.ui.internal.AbstractWorkingSetManager$5.run(AbstractWorkingSetManager.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.ui.internal.AbstractWorkingSetManager.lambda$1(AbstractWorkingSetManager.java:386)
	at org.eclipse.ui.internal.AbstractWorkingSetManager.firePropertyChange(AbstractWorkingSetManager.java:391)
	at org.eclipse.ui.internal.AbstractWorkingSetManager.internalAddWorkingSet(AbstractWorkingSetManager.java:235)
	at org.eclipse.ui.internal.AbstractWorkingSetManager.addWorkingSet(AbstractWorkingSetManager.java:227)
	at org.eclipse.ui.internal.WorkingSetManager.addWorkingSet(WorkingSetManager.java:66)
	at org.eclipse.jdt.ui.tests.packageview.WorkingSetDropAdapterTest.createJavaWorkingSets(WorkingSetDropAdapterTest.java:185)
	at org.eclipse.jdt.ui.tests.packageview.WorkingSetDropAdapterTest.testRearrange2(WorkingSetDropAdapterTest.java:193)
```

However that IllegalArgumentException happened on other build too. like
https://download.eclipse.org/eclipse/downloads/drops4/I20241217-1800/testresults/ep435I-unit-linux-x86_64-java21_linux.gtk.x86_64_21/org.eclipse.jdt.ui.tests.AutomatedSuite.txt","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1863/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1863,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6YLqGG,eclipse.jdt.ui,2553192838,1863,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-12-19T09:32:58Z,2024-12-19T09:32:58Z,"Both
https://download.eclipse.org/eclipse/downloads/drops4/I20241218-1800/testresults/ep435I-unit-win32-x86_64-java21_win32.win32.x86_64_21/org.eclipse.jdt.ui.tests.AutomatedSuite.txt
and
https://download.eclipse.org/eclipse/downloads/drops4/I20241218-1800/testresults/ep435I-unit-linux-x86_64-java21_linux.gtk.x86_64_21/org.eclipse.jdt.ui.tests.AutomatedSuite.txt
show now the same following enhanced Exception:
```
java.lang.IllegalArgumentException: [ws3, Other Projects, ws1, ws2] has different order then [ws1, ws2, ws3]
	at org.eclipse.jdt.internal.ui.workingsets.WorkingSetModel.setWorkingSets(WorkingSetModel.java:433)
	at org.eclipse.jdt.internal.ui.workingsets.WorkingSetModel.workingSetManagerChanged(WorkingSetModel.java:622)
	at org.eclipse.ui.internal.AbstractWorkingSetManager$5.run(AbstractWorkingSetManager.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.ui.internal.AbstractWorkingSetManager.lambda$1(AbstractWorkingSetManager.java:386)
	at org.eclipse.ui.internal.AbstractWorkingSetManager.firePropertyChange(AbstractWorkingSetManager.java:391)
	at org.eclipse.ui.internal.AbstractWorkingSetManager.internalAddWorkingSet(AbstractWorkingSetManager.java:235)
	at org.eclipse.ui.internal.AbstractWorkingSetManager.addWorkingSet(AbstractWorkingSetManager.java:227)
	at org.eclipse.ui.internal.WorkingSetManager.addWorkingSet(WorkingSetManager.java:66)
	at org.eclipse.jdt.ui.tests.packageview.WorkingSetDropAdapterTest.createJavaWorkingSets(WorkingSetDropAdapterTest.java:185)
	at org.eclipse.jdt.ui.tests.packageview.WorkingSetDropAdapterTest.testRearrange2(WorkingSetDropAdapterTest.java:193)

```

```
java.lang.IllegalArgumentException: [ws3, Other Projects, ws1, ws2] has different order then [ws1, ws2, ws3]
	at org.eclipse.jdt.internal.ui.workingsets.WorkingSetModel.setWorkingSets(WorkingSetModel.java:433)
	at org.eclipse.jdt.internal.ui.workingsets.WorkingSetModel.workingSetManagerChanged(WorkingSetModel.java:622)
	at org.eclipse.ui.internal.AbstractWorkingSetManager$5.run(AbstractWorkingSetManager.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)
	at org.eclipse.ui.internal.AbstractWorkingSetManager.lambda$1(AbstractWorkingSetManager.java:386)
	at org.eclipse.ui.internal.AbstractWorkingSetManager.firePropertyChange(AbstractWorkingSetManager.java:391)
	at org.eclipse.ui.internal.AbstractWorkingSetManager.internalAddWorkingSet(AbstractWorkingSetManager.java:235)
	at org.eclipse.ui.internal.AbstractWorkingSetManager.addWorkingSet(AbstractWorkingSetManager.java:227)
	at org.eclipse.ui.internal.WorkingSetManager.addWorkingSet(WorkingSetManager.java:66)
	at org.eclipse.jdt.ui.tests.packageview.WorkingSetDropAdapterTest.createJavaWorkingSets(WorkingSetDropAdapterTest.java:185)
	at org.eclipse.jdt.ui.tests.packageview.WorkingSetDropAdapterTest.testRearrange3(WorkingSetDropAdapterTest.java:206)

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6YLqGG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1863,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6YLsUW,eclipse.jdt.ui,2553201942,1863,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-12-19T09:37:22Z,2024-12-19T09:37:22Z,locally reproducible when running the whole WorkingSetDropAdapterTest,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6YLsUW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1863,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6YMLyX,eclipse.jdt.ui,2553330839,1863,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-12-19T10:17:47Z,2024-12-19T10:17:47Z,"this issue was already formerly reported by:
https://bugs.eclipse.org/bugs/show_bug.cgi?id=575681
https://bugs.eclipse.org/bugs/show_bug.cgi?id=567420","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6YMLyX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1863,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6YMWmJ,eclipse.jdt.ui,2553375113,1863,NA,jukzi,51790620,Jörg Kubitz,,NA,2024-12-19T10:36:00Z,2024-12-19T10:36:00Z,"Stacktrace where fAllWorkingSets is set to (ws3,Other Projects) because fActiveWorkingSets already contains ws3:

```
Thread [main] (Suspended)	
	owns: org.eclipse.swt.widgets.RunnableLock  (id=193)	
	org.eclipse.jdt.internal.ui.workingsets.WorkingSetModel.getActiveAndAllWorkingSetsFromManagers() line: 386	
	org.eclipse.jdt.internal.ui.workingsets.WorkingSetModel.getAllWorkingSets() line: 374	
	org.eclipse.jdt.internal.ui.workingsets.WorkingSetModel.setActiveWorkingSets(org.eclipse.ui.IWorkingSet[]) line: 452	
	org.eclipse.jdt.internal.ui.workingsets.WorkingSetModel.setActiveWorkingSets(org.eclipse.ui.IWorkingSet[], boolean) line: 516	
	org.eclipse.jdt.internal.ui.workingsets.WorkingSetModel.setWorkingSets(org.eclipse.ui.IWorkingSet[], boolean, org.eclipse.ui.IWorkingSet[]) line: 439	
	org.eclipse.jdt.internal.ui.workingsets.WorkingSetModel.workingSetManagerChanged(org.eclipse.jface.util.PropertyChangeEvent) line: 646	
	org.eclipse.jdt.internal.ui.workingsets.WorkingSetModel$$Lambda.0x000001f9a0a1eb58.propertyChange(org.eclipse.jface.util.PropertyChangeEvent) line: not available	
	org.eclipse.ui.internal.AbstractWorkingSetManager$5.run() line: 378	
	org.eclipse.core.runtime.SafeRunner.run(org.eclipse.core.runtime.ISafeRunnable) line: 47	
	org.eclipse.ui.internal.WorkingSetManager(org.eclipse.ui.internal.AbstractWorkingSetManager).lambda$1(java.lang.Object[], org.eclipse.jface.util.PropertyChangeEvent) line: 386	
	org.eclipse.ui.internal.AbstractWorkingSetManager$$Lambda.0x000001f9a070eae0.run() line: not available	
	org.eclipse.ui.internal.WorkingSetManager(org.eclipse.ui.internal.AbstractWorkingSetManager).firePropertyChange(java.lang.String, java.lang.Object, java.lang.Object) line: 391	
	org.eclipse.ui.internal.WorkingSetManager(org.eclipse.ui.internal.AbstractWorkingSetManager).internalRemoveWorkingSet(org.eclipse.ui.IWorkingSet) line: 245	
	org.eclipse.ui.internal.WorkingSetManager.removeWorkingSet(org.eclipse.ui.IWorkingSet) line: 87	
	org.eclipse.jdt.ui.tests.packageview.WorkingSetDropAdapterTest.createJavaWorkingSets(java.lang.String[]) line: 179	
	org.eclipse.jdt.ui.tests.packageview.WorkingSetDropAdapterTest.testRearrange2() line: 193	

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6YMWmJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1865,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1865,eclipse.jdt.ui,2749077052,1865,“Move method refactoring” causes the method call relationship to change,assdfsdafasfa,170524487,,,OPEN,2024-12-19T01:58:59Z,2024-12-19T01:58:59Z,"Select the m() method in class C, select the move method refactoring, move it to class B, before refactoring, the f() method calls the m() method of class A, after refactoring, the f() method calls the m() method of class B。

Code before refactoring:
```java
class A {
    void m(Object m) {
        System.out.println(""A"");
    }
}

class B extends A {
    void k(String m) {
        System.out.println(""B"");
    }

    void f() {
        m(""1"");
    }
}

class C {
    B b;
    // move m() to class B
    void m(String m) {
        System.out.println(""B"");
    }
}
```
Code after refactoring:
```java
class A {
    void m(Object m) {
        System.out.println(""A"");
    }
}

class B extends A {
    void k(String m) {
        System.out.println(""B"");
    }

    void f() {
        m(""1"");
    }

    // move m() to class B
    void m(String m) {
        System.out.println(""B"");
    }
}

class C {
    B b;
}
```

Expected result (correct result):Give an error prompt before executing the refactoring","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1865/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1866,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1866,eclipse.jdt.ui,2749081196,1866,“Move method” refactoring causes compilation errors in static methods,assdfsdafasfa,170524487,,,OPEN,2024-12-19T02:03:47Z,2024-12-19T02:03:47Z,"Select the m() method in class C, select the move method refactoring, move it to class B, and a syntax error will occur.
Code before refactoring:
```java
class B {

}
class A extends B {
    static public void m() {
    }
}
class C {
    B b;
    // move m() to B
    void m() {
    }
}
```
Code after refactoring:
```java
class B {
    // move m() to B
    void m() {
    }
}
class A extends B {
    static public void m() {
    }
}
class C {
    B b;
}
```
Expected result (correct result): Give an error prompt before executing the refactoring","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1866/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1867,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1867,eclipse.jdt.ui,2749084116,1867,“pull up method refactoring:” causes compilation error for calling methods,assdfsdafasfa,170524487,,,OPEN,2024-12-19T02:07:06Z,2024-12-19T02:07:06Z,"Selecting sub() in class SubType, and clicking the Pull up refactoring, results in a compilation error for calling methods

Code before refactoring:
```java
 class SuperType<ELEM extends Number> {
    void add(ELEM e) {
    }
    ELEM get() {
        return null;
    }
}
 class SubType<ELEM> extends SuperType<Integer> {
    // pull up ‘sub’
     void sub(Integer i) {
         add(i);
     }
 }
```
Code after refactoring:
```java
class SuperType<ELEM extends Number> {
   void add(ELEM e) {
   }
   ELEM get() {
       return null;
   }
    // pull up ‘sub’
     void sub(Integer i) {
         add(i);
     }
}
class SubType<ELEM> extends SuperType<Integer> {
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1867/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1868,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1868,eclipse.jdt.ui,2749086899,1868,"""pull up method refactoring"" : code compilation errors",assdfsdafasfa,170524487,,,OPEN,2024-12-19T02:10:06Z,2024-12-19T02:10:06Z,"Selecting m() in class C, and clicking Pull up refactoring, resulting in static method compilation errors.
Code before refactoring:
```java
class B {
}
class A extends B {
    static public void m() {
    }
}
class C extends B {
    // pull up m()
    void m() {
    }
}
```
Code after refactoring:
```java
class B {
    // pull up m()
    void m() {
    }
}
class A extends B {
    static public void m() {
    }
}
class C extends B {
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1868/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1869,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1869,eclipse.jdt.ui,2749089869,1869,"""Pull up method"" refactoring: Behavior changes in inheritance relationships",assdfsdafasfa,170524487,,,OPEN,2024-12-19T02:13:26Z,2024-12-19T02:13:26Z,"Select m() in class C, and click Pull up refactoring, resulting in changes to the call relationship in the f() method.

Code before refactoring:
```java
class A {
    void m(Object m) {
        System.out.println(""A"");
    }
}
class B extends A {
    void k(String m) {
        System.out.println(""B"");
    }
    void f() {
        m(""1"");
    }
}
class C extends B{
    // pull up ‘m’
    void m(String m) {
        System.out.println(""B"");
    }
}
```
Code after refactoring:
```java
class A {
    void m(Object m) {
        System.out.println(""A"");
    }
}
class B extends A {
    void k(String m) {
        System.out.println(""B"");
    }
    void f() {
        m(""1"");
    }
    // pull up ‘m’
    void m(String m) {
        System.out.println(""B"");
    }
}
class C extends B{
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1869/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1870,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1870,eclipse.jdt.ui,2749091410,1870,“Pull up method refactoring”: The method call relationship has changed,assdfsdafasfa,170524487,,,OPEN,2024-12-19T02:15:06Z,2024-12-19T02:15:06Z,"Select fool1() in class A, and click Pull up refactoring, resulting in a compilation error.

Code before refactoring:
```java
class RenameTest {
    static void foo1(Number n) {
        System.out.println(""1"");
    }
    public static void main(String[] args) {
        long n = 0;
        foo1(n);// look here
    }
}
class A extends RenameTest {
    // pull up
    void foo1(Long i) {
        System.out.println(""2"");
    }
}
```
Code after refactoring:
```java
class RenameTest {
    static void foo1(Number n) {
        System.out.println(""1"");
    }
    public static void main(String[] args) {
        long n = 0;
        foo1(n);// look here
    }
    // pull up foo1
    void foo1(Long i) {
        System.out.println(""2"");
    }
}
class A extends RenameTest {
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1870/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1871,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1871,eclipse.jdt.ui,2749093204,1871,"""Pull up method refactoring"": Code behavior changes due to reflection",assdfsdafasfa,170524487,,,CLOSED,2024-12-19T02:17:07Z,2025-01-06T19:26:26Z,"Select doSomething() and click Pull up refactoring, resulting in Class.forName(""A"") not being able to get the method name based on the class.
Code before refactoring:
```java
import java.lang.reflect.Method;
class A extends B{
    public void doSomething() {
        System.out.println(""In A"");
    }
    public static void main(String[] args) throws Exception {
        Class<?> clazz = Class.forName(""A"");
        Method method = clazz.getMethod(""doSomething"");
        method.invoke(clazz.newInstance());
    }
}
class B {
}
```

Code after refactoring:
```java
import java.lang.reflect.Method;
class A extends B{
    public static void main(String[] args) throws Exception {
        Class<?> clazz = Class.forName(""A"");
        Method method = clazz.getMethod(""doSomething"");
        method.invoke(clazz.newInstance());
    }
}
class B {
    public void doSomething() {
        System.out.println(""In A"");
    }
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1871/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1871,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZaJOw,eclipse.jdt.ui,2573767600,1871,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2025-01-06T19:26:26Z,2025-01-06T19:26:26Z,Closing as WONTFIX.  Searching for cases of reflection is not a reasonable thing to protect against.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZaJOw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1887,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1887,eclipse.jdt.ui,2760279640,1887,"In generic types, annotations are removed and the annotated type parameter becomes fully qualified, when moving the annotated type to another package",pewe2024,192878655,,,OPEN,2024-12-26T12:11:48Z,2024-12-27T01:35:30Z,"The following bug exists in Eclipse IDE 2024-12 (as well as in older versions of the Eclipse IDE):

If you have the Java class

````
public class Test
{
    public List<@Annotation MovedType> list;
}
````

and you move the type ``MovedType`` to another package, the <span>@</span>Annotation is removed and the type parameter ``MovedType`` becomes fully qualified.

The class will look like that, afterwards:

````
public class Test
{
    public List<destinationpackage.MovedType> list;
}
````

Instead, only the import for ``MovedType`` (which is omitted here) should change.

The attached file

[TestProject.zip](https://github.com/user-attachments/files/18252554/TestProject.zip)

contains an eclipse project, that can be used to reproduce the error.

If you move the contained file TestProject/src/sourcepackage/MovedType.java by either dragging and dropping it to TestProject/src/destinationpackage or by using Refactor -> Move..., the file TestProject/src/staticpackage/Test.java will show the error.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1887/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1897,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1897,eclipse.jdt.ui,2765812813,1897,NPE in RenameInformationPopup with eclipse restart,jukzi,51790620,Jörg Kubitz,,OPEN,2025-01-02T10:49:22Z,2025-01-02T10:54:36Z,"I refactored classname using shift+alt+R and found this in my error log:
```
java.lang.NullPointerException: Cannot invoke ""org.eclipse.ui.IWorkbenchWindow.getPartService()"" because the return value of ""org.eclipse.ui.IWorkbenchPartSite.getWorkbenchWindow()"" is null
	at org.eclipse.jdt.internal.ui.refactoring.reorg.RenameInformationPopup$PopupVisibilityManager.lambda$0(RenameInformationPopup.java:114)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:161)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:91)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4311)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1208)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1232)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1213)
	at org.eclipse.swt.widgets.Widget.release(Widget.java:890)
	at org.eclipse.swt.widgets.Widget.dispose(Widget.java:479)
	at org.eclipse.swt.widgets.Decorations.dispose(Decorations.java:396)
	at org.eclipse.swt.widgets.Decorations.closeWidget(Decorations.java:274)
	at org.eclipse.swt.widgets.Shell.close(Shell.java:552)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.RenameInformationPopup.close(RenameInformationPopup.java:378)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.RenameLinkedMode.linkedModeLeft(RenameLinkedMode.java:623)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.RenameLinkedMode$EditorSynchronizer.left(RenameLinkedMode.java:120)
	at org.eclipse.jface.text.link.LinkedModeModel.exit(LinkedModeModel.java:338)
	at org.eclipse.jface.text.link.LinkedModeUI.lambda$2(LinkedModeUI.java:1240)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4084)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3700)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1151)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:663)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:570)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:178)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:668)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:605)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1481)
```

```
eclipse.buildId=4.35.0.I20241230-1800
java.version=22.0.2
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1897/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1897,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZCkJ9,eclipse.jdt.ui,2567586429,1897,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-02T10:52:41Z,2025-01-02T10:52:41Z,"also 
```
java.lang.NullPointerException: Cannot invoke ""org.eclipse.jface.text.source.ISourceViewer.getSelectedRange()"" because the return value of ""org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.getViewer()"" is null
	at org.eclipse.jdt.internal.ui.refactoring.reorg.RenameLinkedMode.getCurrentLinkedPosition(RenameLinkedMode.java:643)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.RenameInformationPopup.computePopupLocation(RenameInformationPopup.java:492)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.RenameInformationPopup.updatePopupLocation(RenameInformationPopup.java:399)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.RenameInformationPopup$PopupVisibilityManager.controlResized(RenameInformationPopup.java:190)
```

Steps to reproduce: 
1. open refactoring with alt+shift+R 
2. then restart eclipse while popup is open.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZCkJ9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1899,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1899,eclipse.jdt.ui,2767144692,1899,"CleanUpTest16, SurroundWithTests16 fails since I20250102-1800",jukzi,51790620,Jörg Kubitz,,CLOSED,2025-01-03T08:02:54Z,2025-01-07T14:07:42Z,"CleanUpTest16  fails on all OS, locally reproducable
testOneIfWithPatternInstanceof
testPatternMatchingForInstanceof
testPatternMatchingForInstanceof2
![image](https://github.com/user-attachments/assets/4b5dcee4-8cee-4061-a4d3-7d4db8c5de6e)

for example
https://download.eclipse.org/eclipse/downloads/drops4/I20250102-1800/testresults/html/org.eclipse.jdt.ui.tests_ep435I-unit-macosx-x86_64-java21_macosx.cocoa.x86_64_21.html

```
org.opentest4j.AssertionFailedError: Content not as expected: is
package test1;

public class E {

protected String getString(Number number) {

if (number instanceof Long n) {
return n.toString();
}
if (number instanceof Float n) {
return n.toString();
}
if (number instanceof Double n) {
return n.toString();
}
if (number instanceof Float n && n.isInfinite()) {
return ""Inf""; //$NON-NLS-1$
}
if (number instanceof Double m && m.isInfinite()) {
return ""Inf""; //$NON-NLS-1$
}

return null;
}

}

Differs at pos 347: if (^number
expected:
package test1;

public class E {

protected String getString(Number number) {

if (number instanceof Long n) {
return n.toString();
}
if (number instanceof Float n) {
return n.toString();
}
if (number instanceof Double n) {
return n.toString();
}
if ((number instanceof Float n && n.isInfinite()) || (number instanceof Double m && m.isInfinite())) {
return ""Inf""; //$NON-NLS-1$
}

return null;
}

}
==> expected: <package test1;

public class E {

protected String getString(Number number) {

if (number instanceof Long n) {
return n.toString();
}
if (number instanceof Float n) {
return n.toString();
}
if (number instanceof Double n) {
return n.toString();
}
if ((number instanceof Float n && n.isInfinite()) || (number instanceof Double m && m.isInfinite())) {
return ""Inf""; //$NON-NLS-1$
}

return null;
}

}
> but was: <package test1;

public class E {

protected String getString(Number number) {

if (number instanceof Long n) {
return n.toString();
}
if (number instanceof Float n) {
return n.toString();
}
if (number instanceof Double n) {
return n.toString();
}
if (number instanceof Float n && n.isInfinite()) {
return ""Inf""; //$NON-NLS-1$
}
if (number instanceof Double m && m.isInfinite()) {
return ""Inf""; //$NON-NLS-1$
}

return null;
}

}
>
at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)
at org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)
at org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)
at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)
at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1156)
at org.eclipse.jdt.testplugin.StringAsserts.assertEqualString(StringAsserts.java:70)
at org.eclipse.jdt.testplugin.StringAsserts.assertEqualStringsIgnoreOrder(StringAsserts.java:122)
at org.eclipse.jdt.ui.tests.quickfix.QuickFixTest.assertEqualStringsIgnoreOrder(QuickFixTest.java:124)
at org.eclipse.jdt.ui.tests.quickfix.CleanUpTestCase.assertRefactoringResultAsExpected(CleanUpTestCase.java:192)
at org.eclipse.jdt.ui.tests.quickfix.CleanUpTest16.testOneIfWithPatternInstanceof(CleanUpTest16.java:404)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
```

Could not find related commit (checked jdt.core jdt.ui platform.ui)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1899/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1899,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZHTeP,eclipse.jdt.ui,2568828815,1899,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-03T08:09:56Z,2025-01-03T08:09:56Z,"same for SurroundWithTests16
https://download.eclipse.org/eclipse/downloads/drops4/I20250102-1800/testresults/html/org.eclipse.jdt.ui.tests.refactoring_ep435I-unit-linux-x86_64-java23_linux.gtk.x86_64_23.html
```
org.junit.ComparisonFailure: expected:<...ion();
} /*]*/
[ System.out.println(x);
} catch (Exception e) {
}]

}
}> but was:<...ion();
} /*]*/
[} catch (Exception e) {
}
System.out.println(x);]

}
}>
at org.junit.Assert.assertEquals(Assert.java:117)
at org.eclipse.jdt.ui.tests.refactoring.GenericRefactoringTest.assertEqualLines(GenericRefactoringTest.java:648)
at org.eclipse.jdt.ui.tests.refactoring.GenericRefactoringTest.assertEqualLines(GenericRefactoringTest.java:632)
at org.eclipse.jdt.ui.tests.refactoring.infra.AbstractJunit4CUTestCase.compareSource(AbstractJunit4CUTestCase.java:95)
at org.eclipse.jdt.ui.tests.refactoring.infra.AbstractJunit4CUTestCase.compareSource(AbstractJunit4CUTestCase.java:87)
at org.eclipse.jdt.ui.tests.refactoring.AbstractJunit4SelectionTestCase.performTest(AbstractJunit4SelectionTestCase.java:141)
at org.eclipse.jdt.ui.tests.refactoring.SurroundWithTests.performTest(SurroundWithTests.java:53)
at org.eclipse.jdt.ui.tests.refactoring.SurroundWithTests16.tryCatchTest(SurroundWithTests16.java:58)
at org.eclipse.jdt.ui.tests.refactoring.SurroundWithTests16.testBug566949_1(SurroundWithTests16.java:63)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
```
![image](https://github.com/user-attachments/assets/e39b418d-4b84-49aa-b6ae-8050c6eb3033)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZHTeP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1899,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZHVE6,eclipse.jdt.ui,2568835386,1899,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-03T08:16:44Z,2025-01-03T08:16:44Z,"caused by https://github.com/eclipse-jdt/eclipse.jdt.core/pull/3268, however a revert causes conflicts. @subyssurendran666","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZHVE6/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1899,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZdF9L,eclipse.jdt.ui,2574540619,1899,NA,subyssurendran666,117082823,Suby S Surendran,suby.surendran@ibm.com,NA,2025-01-07T07:10:35Z,2025-01-07T07:10:35Z,"> CleanUpTest16 fails on all OS, locally reproducable testOneIfWithPatternInstanceof testPatternMatchingForInstanceof testPatternMatchingForInstanceof2 ![image](https://private-user-images.githubusercontent.com/51790620/399892971-4b5dcee4-8cee-4061-a4d3-7d4db8c5de6e.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MzYxNTUwMjEsIm5iZiI6MTczNjE1NDcyMSwicGF0aCI6Ii81MTc5MDYyMC8zOTk4OTI5NzEtNGI1ZGNlZTQtOGNlZS00MDYxLWE0ZDMtN2Q0ZGI4YzVkZTZlLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNTAxMDYlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjUwMTA2VDA5MTIwMVomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTEwNDViOWI5ZDZkZTYzY2NkMzQzMzJmOTkxODViNWRlNDkzZDA0NGNiZGQ3M2U2M2U3NWZmNjNjZjIwMWFiNTUmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.1TaIf2uBWzVeK0OrwONA9x16YcqiQUDvgQ9OgyTGYs4)
> 
> for example https://download.eclipse.org/eclipse/downloads/drops4/I20250102-1800/testresults/html/org.eclipse.jdt.ui.tests_ep435I-unit-macosx-x86_64-java21_macosx.cocoa.x86_64_21.html
> 
> ```
> org.opentest4j.AssertionFailedError: Content not as expected: is
> package test1;
> 
> public class E {
> 
> protected String getString(Number number) {
> 
> if (number instanceof Long n) {
> return n.toString();
> }
> if (number instanceof Float n) {
> return n.toString();
> }
> if (number instanceof Double n) {
> return n.toString();
> }
> if (number instanceof Float n && n.isInfinite()) {
> return ""Inf""; //$NON-NLS-1$
> }
> if (number instanceof Double m && m.isInfinite()) {
> return ""Inf""; //$NON-NLS-1$
> }
> 
> return null;
> }
> 
> }
> 
> Differs at pos 347: if (^number
> expected:
> package test1;
> 
> public class E {
> 
> protected String getString(Number number) {
> 
> if (number instanceof Long n) {
> return n.toString();
> }
> if (number instanceof Float n) {
> return n.toString();
> }
> if (number instanceof Double n) {
> return n.toString();
> }
> if ((number instanceof Float n && n.isInfinite()) || (number instanceof Double m && m.isInfinite())) {
> return ""Inf""; //$NON-NLS-1$
> }
> 
> return null;
> }
> 
> }
> ==> expected: <package test1;
> 
> public class E {
> 
> protected String getString(Number number) {
> 
> if (number instanceof Long n) {
> return n.toString();
> }
> if (number instanceof Float n) {
> return n.toString();
> }
> if (number instanceof Double n) {
> return n.toString();
> }
> if ((number instanceof Float n && n.isInfinite()) || (number instanceof Double m && m.isInfinite())) {
> return ""Inf""; //$NON-NLS-1$
> }
> 
> return null;
> }
> 
> }
> > but was: <package test1;
> 
> public class E {
> 
> protected String getString(Number number) {
> 
> if (number instanceof Long n) {
> return n.toString();
> }
> if (number instanceof Float n) {
> return n.toString();
> }
> if (number instanceof Double n) {
> return n.toString();
> }
> if (number instanceof Float n && n.isInfinite()) {
> return ""Inf""; //$NON-NLS-1$
> }
> if (number instanceof Double m && m.isInfinite()) {
> return ""Inf""; //$NON-NLS-1$
> }
> 
> return null;
> }
> 
> }
> >
> at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)
> at org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)
> at org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)
> at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)
> at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1156)
> at org.eclipse.jdt.testplugin.StringAsserts.assertEqualString(StringAsserts.java:70)
> at org.eclipse.jdt.testplugin.StringAsserts.assertEqualStringsIgnoreOrder(StringAsserts.java:122)
> at org.eclipse.jdt.ui.tests.quickfix.QuickFixTest.assertEqualStringsIgnoreOrder(QuickFixTest.java:124)
> at org.eclipse.jdt.ui.tests.quickfix.CleanUpTestCase.assertRefactoringResultAsExpected(CleanUpTestCase.java:192)
> at org.eclipse.jdt.ui.tests.quickfix.CleanUpTest16.testOneIfWithPatternInstanceof(CleanUpTest16.java:404)
> at java.base/java.lang.reflect.Method.invoke(Method.java:580)
> ```
> 
> Could not find related commit (checked jdt.core jdt.ui platform.ui)

I have tried to rewrite the following tests: `testOneIfWithPatternInstanceof` and `testPatternMatchingForInstanceof2`. However, they are not failing in [JDT.Core](https://github.com/eclipse-jdt/eclipse.jdt.core/pull/3527/files). The Java 23 test should fail in JDT.UI since JDT.Core uses a new API, as mentioned in the respective [GitHub issue](https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1764#issuecomment-2566318768). However, the Java 21 test, which uses older APIs, should work but is failing in JDT.UI. ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZdF9L/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1899,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZgSc8,eclipse.jdt.ui,2575378236,1899,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2025-01-07T14:07:21Z,2025-01-07T14:07:21Z,Should be fixed in the next I Build via https://github.com/eclipse-jdt/eclipse.jdt.core/pull/3529.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZgSc8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1900,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1900,eclipse.jdt.ui,2768790189,1900,Removing methods checking for Java5 instead of deprecating them is causing issues in dependent projects,carstenartur,3164220,Carsten Hammer,,CLOSED,2025-01-04T11:07:50Z,2025-01-04T13:12:29Z,"We see removement of methods in

https://github.com/eclipse-jdt/eclipse.jdt.ui/commit/b9233aa235f0385a580e2fa2f0d2778ae8b9556c

Because of that we see failures in dependent project builds.

https://github.com/carstenartur/sandbox/actions/runs/12609814306/job/35143720659

Wouldnt it be better to first deprecate the method?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1900/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1900,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZQole,eclipse.jdt.ui,2571274590,1900,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2025-01-04T12:30:34Z,2025-01-04T12:30:34Z,All removed methods are in *internal* packages aka non API thus they are subject to change at any time.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZQole/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1900,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZQpam,eclipse.jdt.ui,2571277990,1900,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2025-01-04T12:44:02Z,2025-01-04T12:44:02Z,"Actually, all these guards are useless - either unreachable or always true since 4.33.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZQpam/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1900,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZQp_R,eclipse.jdt.ui,2571280337,1900,NA,carstenartur,3164220,Carsten Hammer,,NA,2025-01-04T12:54:36Z,2025-01-04T12:54:36Z,"Yes, I know. However being an internal package does not mean a lot in eclipse jdt. Sometimes such internal package contains important parts to be used by derived projects and sometimes it is the other way round. Just look at the hacks in jdt ui’s bundle configuration. But I didnt mean to complain about that. I know that there are not enough people to maintain all of this. Just wanted you to consider changing the approach.

In case you want to know what hacks are needed for derived work just look at the implementation in the github sandbox project. 

I now close this issue, thanks for your feedback!","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZQp_R/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1900,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZQqg0,eclipse.jdt.ui,2571282484,1900,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2025-01-04T13:04:17Z,2025-01-04T13:04:17Z,I understand and know all that and it's mostly the reason why I no longer share the long term view in Eclipse about internals not being such. Projects/people should either stick to APIs or join the project to define such that they need otherwise maintainers are going to suffer more and more which is totally unsustainable.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZQqg0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1900,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZQrEE,eclipse.jdt.ui,2571284740,1900,NA,carstenartur,3164220,Carsten Hammer,,NA,2025-01-04T13:12:28Z,2025-01-04T13:12:28Z,I agree. On the other hand it would be better to offer at least one strictly clean way to built derived work. That currently is not the case - at least that is my perception based on the tweaks needed.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZQrEE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1901,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1901,eclipse.jdt.ui,2770160424,1901,Refactoring of guarded field still fails and now has gratuitous extra variable,ewillink,841933,Ed Willink,,OPEN,2025-01-06T07:51:30Z,2025-01-06T09:13:57Z,"In the following example

`import java.util.ArrayList;

public class RefactorBug {
	private ArrayList<Object> list = null;

	public void updateBug() {
		if (list == null) {
			list = new ArrayList<>();
		}
		int index = 0;
		while (index < list.size()) {
			Object it = list.get(index++);
		}
	}
}`

In the old days e.g. Eclipse 4.10, selecting the first ""list"" within the ""if"" and refactoring to extract a local variable used to extract the variable ""list2""

`import java.util.ArrayList;

public class RefactorBug {
	private ArrayList<Object> list = null;

	public void updateBug() {
		ArrayList<Object> list2 = list;
		if (list2 == null) {
			list = new ArrayList<>();
		}
		int index = 0;
		while (index < list2.size()) {
			Object it = list2.get(index++);
		}
	}
}`

There was a warning about changed assign semantics that was easily fixed by changing the new assignment to ""list2 = list = ...""

Now e.g 2024-12 the same warning is given and the following bad code is produced

`import java.util.ArrayList;

public class RefactorBug {
	private ArrayList<Object> list = null;

	public void updateBug() {
		ArrayList<Object> list2 = list;
		if (list2 == null) {
			list = new ArrayList<>();
		}
		int index = 0;
		ArrayList<Object> list22 = list;
		while (index < list22.size()) {
			Object it = list22.get(index++);
		}
	}
}`

The same ""list2 = list = ..."" fixup is possible but the gratuitous extra ""list22"" variable makes the flow needlessly hard to follow.

Please remove the gratuitous variable and correct the assignment from the outset.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1901/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1901,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZVtKb,eclipse.jdt.ui,2572604059,1901,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-06T08:51:37Z,2025-01-06T08:51:37Z,@ewillink please edit the issue such that the whole sources are in text blocks. It would also help if you add comments to the source code where exactly you have the (which?) issue.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZVtKb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1901,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZV2m9,eclipse.jdt.ui,2572642749,1901,NA,ewillink,841933,Ed Willink,,NA,2025-01-06T09:13:56Z,2025-01-06T09:13:56Z,"The whole sources are in text (paired single quotes). Unfortunately GitHub rendering seems deficient. If I put in more single quotes to 'look' better you won't be able to cut and paste in one go. The example is so short, surely the deficiencies are obvious?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZV2m9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1902,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1902,eclipse.jdt.ui,2770281365,1902,Merge master to BETA_JAVA24 branch,noopur2507,8749449,Noopur Gupta,,CLOSED,2025-01-06T09:52:49Z,2025-01-06T09:53:36Z,Merge master branch to BETA_JAVA24 branch.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1902/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1902,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZWSbi,eclipse.jdt.ui,2572756706,1902,NA,noopur2507,8749449,Noopur Gupta,,NA,2025-01-06T09:53:36Z,2025-01-06T09:53:36Z,Done - https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1898.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZWSbi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1903,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1903,eclipse.jdt.ui,2771519919,1903,Convert from StringBuilder/StringBuffer to text block does not handle indexOf with 2 arguments,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2025-01-06T22:00:41Z,2025-01-07T02:29:52Z,"```
package tests;

public class TestTextBlockIndexOf2 {

	public int foo() {
		StringBuilder s = new StringBuilder();
		s.append(""abcdef\n"");
		s.append(""ghijklmnop\n"");
		s.append(""qrstuvwxyz\n"");
		System.out.println(s.toString());
		return s.indexOf(""cde"", 3);
	}

}
```

Running the cleanup on the previous code changes the code but does not pass the 2nd argument to indexOf

```
package tests;

public class TestTextBlockIndexOf2 {

	public int foo() {
		String str = """"""
			abcdef
			ghijklmnop
			qrstuvwxyz
			"""""";
		System.out.println(str);
		return str.indexOf(""cde"");
	}

}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1903/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1907,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1907,eclipse.jdt.ui,2773967899,1907,Has the update site moved?,pci-mthompson,46202025,Mike T.,,CLOSED,2025-01-08T00:09:50Z,2025-01-15T19:17:21Z,"Getting this during an Oomph install when I reference the ASTView plugin:

ERROR: org.eclipse.equinox.p2.metadata.repository code=1002 Unable to read repository at https://www.eclipse.org/jdt/ui/update-site/content/.
java.io.IOException: https://www.eclipse.org/jdt/ui/update-site/content/ is not a valid repository location.
  at org.eclipse.equinox.internal.p2.metadata.repository.SimpleMetadataRepositoryFactory.load(SimpleMetadataRepositoryFactory.java:103)
  at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.factoryLoad(MetadataRepositoryManager.java:63)
  at org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.loadRepository(AbstractRepositoryManager.java:791)
  at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
  at java.base/java.lang.reflect.Method.invoke(Method.java:580)
  at org.eclipse.oomph.util.ReflectUtil.invokeMethod(ReflectUtil.java:119)
  at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager.loadRepository(CachingRepositoryManager.java:448)
  at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager.loadRepository(CachingRepositoryManager.java:231)
  at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager$Metadata.loadRepository(CachingRepositoryManager.java:520)
  at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:110)
  at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:105)
  at org.eclipse.oomph.p2.internal.core.ProfileTransactionImpl$RepositoryLoader$Worker.perform(ProfileTransactionImpl.java:1759)
  at org.eclipse.oomph.util.WorkerPool$Worker.run(WorkerPool.java:437)
  at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1907/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1907,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Zke6B,eclipse.jdt.ui,2576477825,1907,NA,pci-mthompson,46202025,Mike T.,,NA,2025-01-08T00:30:14Z,2025-01-08T00:30:14Z,"Tried http and same thing ERROR: org.eclipse.equinox.p2.metadata.repository code=1002 Unable to read repository at http://www.eclipse.org/jdt/ui/update-site/content/.

It also looks like the homepage has an issue it goes into a redirect loop:
https://eclipse.dev/jdt/ui/index.html","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Zke6B/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1907,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZlsIy,eclipse.jdt.ui,2576794162,1907,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2025-01-08T05:37:17Z,2025-01-08T05:37:17Z,"Looking at https://github.com/eclipse-jdt/jdt-website/tree/master/ui/update-site/content/features it's ast and je views you look for. Content there is terribly outdated (6 years old!) and latest versions are available in the main p2 repo for years e.g.  https://download.eclipse.org/eclipse/updates/4.34/ for last release.

@eclipse-jdt/eclipse-jdt-project-leads Be aware of the webpage being badly broken due to removal of php (https://gitlab.eclipse.org/eclipsefdn/helpdesk/-/issues/1934)  which leads to the redirect  loop that is reported here.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ZlsIy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1907,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6amXkM,eclipse.jdt.ui,2593749260,1907,NA,pci-mthompson,46202025,Mike T.,,NA,2025-01-15T19:17:21Z,2025-01-15T19:17:21Z,Looks like switching back to the main update site has the current AST and JE views.  Thanks!,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6amXkM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1913,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1913,eclipse.jdt.ui,2776402768,1913,"Bug 285551 - [extract method] ""Ambiguous return value"" error when extracting Expression from ExpressionStatement",jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2025-01-08T21:41:21Z,2025-01-09T16:22:21Z,"I20090803-1800

FUP to [bug 213519](https://bugs.eclipse.org/bugs/show_bug.cgi?id=213519).

```
ArrayList<Integer> list = new ArrayList<Integer>();
for (Integer var: list) {}
int a = 0;
for (int c = 0; c < 10; c++) {
   list.add(a++);
}
System.out.println(list.toString());
```

- Select 'list.add(a++)' (without the ';' at the end)
- Extract Method
=> Strange ""Ambiguous return value"" error

Expected: Same behavior as when I select the whole ExpressionStatement. Or at least a better error message.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1913/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1919,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1919,eclipse.jdt.ui,2778202467,1919,Cleanup/Refactor: if-else-chains to pattern-matching-switch (if only instanceof checks used),FlorianKroiss,135011803,,,CLOSED,2025-01-09T15:57:20Z,2025-01-24T20:56:00Z,"We have a lot of code which looks something like this:
```java
public String getText(final Object o) {
    if (o instanceof final Foo foo) {
        return foo.getName();
    }
    else if (o instanceof final Bar bar) {
        return bar.somethingElse();
    }
    else if (o instanceof final Baz baz) {
        return baz.another();
    }
    else {
        return """";
    }
}
```
This pattern is especially prevalent in SWT related implementations, like LabelProviders, e.g. in getText or getImage.
With Java 21+ it would be nice to have a cleanup which transforms the above if-else chain into something like this:

```java
public String getText(final Object o) {
    switch (o) {
        case final Foo foo -> {
            return foo.getName();
        }
        case final Bar bar -> {
            return bar.somethingElse();
        }
        case final Baz baz -> {
            return baz.another();
        }
        case null, default -> {
            return """";
        }
    }
}
```

Or even directly to a switch expression, though the required analysis for this one is probably a bit harder.
```java
public String getText(final Object o) {
    return switch (o) {
        case Foo foo -> foo.getName();
        case Bar bar -> bar.somethingElse();
        case Baz baz -> baz.another();
        case null, default -> """";
    };
}
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1919/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1919,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Z50Ju,eclipse.jdt.ui,2582069870,1919,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-10T08:42:07Z,2025-01-10T08:42:07Z,@FlorianKroiss do you plan to contribute such feature?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Z50Ju/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1919,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Z6mg3,eclipse.jdt.ui,2582276151,1919,NA,FlorianKroiss,135011803,,,NA,2025-01-10T10:10:53Z,2025-01-10T10:10:53Z,@jukzi unfortunately not. I just wanted to mention the idea.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Z6mg3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1919,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Z-kFS,eclipse.jdt.ui,2583314770,1919,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2025-01-10T17:27:27Z,2025-01-10T17:27:27Z,@jukzi I'll take a look at it.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Z-kFS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1920,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1920,eclipse.jdt.ui,2779423311,1920,Missing license header in Progress.java,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,CLOSED,2025-01-10T06:48:23Z,2025-01-10T07:39:20Z,https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/master/org.eclipse.jdt.core.manipulation/common/org/eclipse/jdt/internal/ui/util/Progress.java lacks license header. It has a sole contributor as per history - @jukzi . It's best if the author adds it for clear accountability.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1920/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1922,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1922,eclipse.jdt.ui,2779582586,1922,Poor Performance of Quick Outline View,fedejeanne,2205684,Federico Jeanne,,OPEN,2025-01-10T08:29:41Z,2025-02-11T16:33:30Z,"(See [issue #2](https://github.com/vi-eclipse/Eclipse-JDT/issues/2) our internal backlog)

### Current Behavior

The quick outline view (Ctrl+O) opens very slowly when the opened class is part of a large class hierarchy. The root cause seems to be a combination of two things:
1. Loading the complete view is performed synchronously, thus the UI freezes while loading it.
2. The action calculates the complete inheritance hierarchy of involved classes in order to show the ""method overwrite indicator"" labels for methods that overwrite methods of superclasses. This information is not cached in the AST and is calculated everytime the quick outline view is opened.

The ordinary outline view calculates the overwrite indicator labels asynchronously by spawning a decoration job and thus provides the same information but without blocking the UI.


### Expected Behavior

The quick outline view shall open instantly and calculate and add additional information asynchronously. It should use the same behavior as in the ordinary outline view to improve responsiveness of the UI.
While loading the information in background, there should be an indicator that the view has not completely loaded all expected information in the quick outline view yet.


### Existing Workaround

Disable ""Java Method Overwrite Indicator"" label.

![8455de56-acf9-4dab-a1ad-1c94e1bfcced](https://github.com/vi-eclipse/Eclipse-JDT/assets/755472/cafa609b-719b-4dcc-abcd-029f596b89f2)

### Samples and reproducer
To reproduce, do the following:
- Import this Java project: [reproducer.zip](https://github.com/user-attachments/files/18372865/reproducer.zip) 
- Make sure the ""Java Method Overwrite Indicator"" is active
- Go to the class `Broke1` and click `Ctrl` + `o` **twice**

This is the sample I got: [Broke1-I20241230-1800.zip](https://github.com/user-attachments/files/18372834/Broke1-I20241230-1800.zip)

I also sampled in our big WS (**~2.000** plugins and fragments), it takes **757s** to open the quick outline view: 
[MyECU_2025-03-M1.zip](https://github.com/user-attachments/files/18372916/MyECU_2025-03-M1.zip)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1922/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1922,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Z5xTC,eclipse.jdt.ui,2582058178,1922,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-10T08:35:11Z,2025-01-10T08:35:11Z,"Can you please try to give a simple selfcontaining reproducer like https://github.com/eclipse-jdt/eclipse.jdt.core/issues/3327#issuecomment-2515120465 instead of attachments. Also please add screenshots of sampling result (call tree + hotspots), ideally add stacktrace of hotspot as text.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Z5xTC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1922,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Z8Adh,eclipse.jdt.ui,2582644577,1922,NA,fedejeanne,2205684,Federico Jeanne,,NA,2025-01-10T12:52:50Z,2025-01-10T12:52:50Z,"I wasn't able to provide a self contained reproducer since the problem here only arises because of the sheer amount of classes and methods that need to be analyzed. Just to give you an idea of the complexity, the ZIP I provided (which is just a small part of the real issue) contains **1.138** of **our own** classes which are discoverable by navigating 1 class up the hierarchy and gathering (most of) the classes that the classes in the hierarchy know and need (again, **our own** classes, no JDK/Eclipse classes).

## Some screenshots

### Small reproducer

The problem seems to be deep down in the `java.lang.ThreadLocal$ThreadLocalMap.getEntryAfterMiss ()` which is called from `org.eclipse.jdt.internal.core.JavaModelManager.getInfo ()`

![image](https://github.com/user-attachments/assets/a1963516-dcf7-4ab2-a874-207edf0e89ee)

### Bigger sample (in our WS)
The sample from our big WS paints more or less the same picture but it only goes as deep as `org.eclipse.jdt.internal.core.JavaModelManager.getInfo ()`

![image](https://github.com/user-attachments/assets/52c0a5d5-ddea-419e-9e82-18292082cebc)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Z8Adh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1922,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Z8DtZ,eclipse.jdt.ui,2582657881,1922,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-10T13:00:09Z,2025-01-10T13:00:09Z,A thousand classes does not sound like really many. It rather sounds that there is some loop in the hierarchy such that same Classes are visited multiple times. The shown hotspots do not include any I/O which is unlikely. Maybe you have excluded java.* from sampling?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Z8DtZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1922,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Z8SB8,eclipse.jdt.ui,2582716540,1922,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-10T13:29:27Z,2025-01-10T13:29:27Z,"i also do not understand that getEntryAfterMiss shows the same Total time as Self Time while it calls a lot of other staff. somethings wrong with that sampling data, All selftimes should add up to the total time.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Z8SB8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1922,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Z8eMR,eclipse.jdt.ui,2582766353,1922,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-10T13:55:57Z,2025-01-10T13:55:57Z,"if you add `System.out.println(element.getElementName());` to org.eclipse.jdt.internal.core.JavaModelCache.getInfo(IJavaElement) you see that the same elements are evaluated over and over. You can simpler freeze the IDE if you just press ctrl+t once on Broke1.  see also https://github.com/eclipse-jdt/eclipse.jdt.ui/issues/1830
You could fix it probably like https://github.com/eclipse-jdt/eclipse.jdt.core/commit/7ebcecc88a1a02f299450c75d63328ffafdcf3fc to avoid repeated evalutions.
Note that jdt can also show you the underlying problem in your type hierarchy by enabling redundant superinterface warning:
![image](https://github.com/user-attachments/assets/df937261-2361-4a66-b50f-144379aedc95)
![image](https://github.com/user-attachments/assets/46909e95-0f67-46ad-a2e1-657085a37a3d)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Z8eMR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1922,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Z8fIh,eclipse.jdt.ui,2582770209,1922,NA,fedejeanne,2205684,Federico Jeanne,,NA,2025-01-10T13:57:53Z,2025-01-10T13:57:53Z,"> A thousand classes does not sound like really many. It rather sounds that there is some loop in the hierarchy such that same Classes are visited multiple times.

I added this output to `org.eclipse.jdt.internal.core.JavaModelManager.getInfo(IJavaElement)`

![image](https://github.com/user-attachments/assets/00504b54-802d-42cb-a48b-0f56e3cba83a)

And pressed `Ctrl` + `o` twice in this class (`A.java`):

```java
class A {
	public void myMethod() {}
}

class A2 extends A{
	@Override public void myMethod() {}
}
```

And then grouped the results and counted them with Excel. Here's the result:

<details><summary>Grouped calls</summary>
<p>

```
Column1;Column2
JavaModelManager.getInfo(module-info.class);484
JavaModelManager.getInfo(Object);432
JavaModelManager.getInfo(Object.class);170
JavaModelManager.getInfo(java.base);152
JavaModelManager.getInfo(wait);132
JavaModelManager.getInfo(myMethod);123
JavaModelManager.getInfo(SlowQuickOutline);114
JavaModelManager.getInfo(Override);109
JavaModelManager.getInfo();106
JavaModelManager.getInfo(A);84
JavaModelManager.getInfo(A2);75
JavaModelManager.getInfo(clone);44
JavaModelManager.getInfo(equals);44
JavaModelManager.getInfo(finalize);44
JavaModelManager.getInfo(getClass);44
JavaModelManager.getInfo(hashCode);44
JavaModelManager.getInfo(notify);44
JavaModelManager.getInfo(notifyAll);44
JavaModelManager.getInfo(toString);44
JavaModelManager.getInfo(wait0);42
JavaModelManager.getInfo(java);40
JavaModelManager.getInfo(java.lang);38
JavaModelManager.getInfo(A.java);22
JavaModelManager.getInfo(src);20
JavaModelManager.getInfo(java.datatransfer);16
JavaModelManager.getInfo(java.desktop);16
JavaModelManager.getInfo(java.logging);16
JavaModelManager.getInfo(java.net.http);16
JavaModelManager.getInfo(java.prefs);16
JavaModelManager.getInfo(java.rmi);16
JavaModelManager.getInfo(java.sql);16
JavaModelManager.getInfo(java.instrument);14
JavaModelManager.getInfo(java.management);14
JavaModelManager.getInfo(jdk.accessibility);6
JavaModelManager.getInfo(jdk.attach);6
JavaModelManager.getInfo(jdk.compiler);6
JavaModelManager.getInfo(jdk.dynalink);6
JavaModelManager.getInfo(jdk.httpserver);6
JavaModelManager.getInfo(jdk.incubator.vector);6
JavaModelManager.getInfo(jdk.internal.ed);6
JavaModelManager.getInfo(jdk.internal.jvmstat);6
JavaModelManager.getInfo(jdk.internal.le);6
JavaModelManager.getInfo(jdk.internal.opt);6
JavaModelManager.getInfo(jdk.jartool);6
JavaModelManager.getInfo(jdk.javadoc);6
JavaModelManager.getInfo(jdk.jconsole);6
JavaModelManager.getInfo(jdk.jdi);6
JavaModelManager.getInfo(jdk.jdwp.agent);6
JavaModelManager.getInfo(jdk.jfr);6
JavaModelManager.getInfo(jdk.jshell);6
JavaModelManager.getInfo(jdk.jsobject);6
JavaModelManager.getInfo(jdk.management);6
JavaModelManager.getInfo(jdk.management.agent);6
JavaModelManager.getInfo(jdk.management.jfr);6
JavaModelManager.getInfo(jdk.net);6
JavaModelManager.getInfo(jdk.nio.mapmode);6
JavaModelManager.getInfo(jdk.sctp);6
JavaModelManager.getInfo(jdk.security.auth);6
JavaModelManager.getInfo(jdk.security.jgss);6
JavaModelManager.getInfo(jdk.unsupported);6
JavaModelManager.getInfo(jdk.unsupported.desktop);6
JavaModelManager.getInfo(jdk.xml.dom);6
JavaModelManager.getInfo(jdk.zipfs);6
JavaModelManager.getInfo(java.transaction.xa);4
JavaModelManager.getInfo(java.xml);4
JavaModelManager.getInfo(jdk.charsets);4
JavaModelManager.getInfo(jdk.crypto.cryptoki);4
JavaModelManager.getInfo(jdk.crypto.ec);4
JavaModelManager.getInfo(jdk.crypto.mscapi);4
JavaModelManager.getInfo(jdk.editpad);4
JavaModelManager.getInfo(jdk.hotspot.agent);4
JavaModelManager.getInfo(jdk.internal.vm.ci);4
JavaModelManager.getInfo(jdk.internal.vm.compiler);4
JavaModelManager.getInfo(jdk.internal.vm.compiler.management);4
JavaModelManager.getInfo(jdk.jcmd);4
JavaModelManager.getInfo(jdk.jdeps);4
JavaModelManager.getInfo(jdk.jlink);4
JavaModelManager.getInfo(jdk.jpackage);4
JavaModelManager.getInfo(jdk.jstatd);4
JavaModelManager.getInfo(jdk.localedata);4
JavaModelManager.getInfo(jdk.naming.dns);4
JavaModelManager.getInfo(jdk.naming.rmi);4
JavaModelManager.getInfo(jdk.random);4
JavaModelManager.getInfo(B.java);2
JavaModelManager.getInfo(C.java);2
JavaModelManager.getInfo(I1.java);2
JavaModelManager.getInfo(java.compiler);2
JavaModelManager.getInfo(java.management.rmi);2
JavaModelManager.getInfo(java.naming);2
JavaModelManager.getInfo(java.scripting);2
JavaModelManager.getInfo(java.se);2
JavaModelManager.getInfo(java.security.jgss);2
JavaModelManager.getInfo(java.security.sasl);2
JavaModelManager.getInfo(java.sql.rowset);2
JavaModelManager.getInfo(java.xml.crypto);2
JavaModelManager.getInfo(module-info.java);2
JavaModelManager.getInfo(package-info);2
JavaModelManager.getInfo(ReproducerGitHub1922SlowQuickOutline.java);2
```

</p>
</details> 

What surprises me is that there are several unnecessary things in there, like other classes/files (`I1.java`) and java/jdk modules. Also, even the necessary checks (`JavaModelManager.getInfo(myMethod);123`, `JavaModelManager.getInfo(SlowQuickOutline);114`) are done several times.

> The shown hotspots do not include any I/O which is unlikely. Maybe you have excluded java.* from sampling?

I resampled the big WS and I see more or less the same as before (and still no reference to `ThreadLocalMap.getEntryAfterMiss ()`):

![image](https://github.com/user-attachments/assets/ce53254b-f29a-4a44-8f7c-44e813efdf6e)

I didn't skip `java.**`

![image](https://github.com/user-attachments/assets/2ec49df6-9dfa-4faf-98f0-ba8915d6e1a9)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6Z8fIh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1922,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6aLIFi,eclipse.jdt.ui,2586607970,1922,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-13T09:34:18Z,2025-01-13T09:34:18Z,"Reproducer: one needs 2 files, the ReproducerGitHub1922RedundantTypeHierarchy must not be open in editor (to not use AST for computation).
```
package a;

interface TopLevel  extends ReproducerGitHub1922RedundantTypeHierarchy.I34 {} // Ctrl+O twice on TopLevel  
```

```
package a;

class ReproducerGitHub1922RedundantTypeHierarchy {

	interface I0 {}
	interface I1 extends I0 {}
	interface I2 extends I1, I0 {}
	interface I3 extends I2, I1 {}
	interface I4 extends I3, I2 {}
	interface I5 extends I4, I3 {}
	interface I6 extends I5, I4 {}
	interface I7 extends I6, I5 {}
	interface I8 extends I7, I6 {}
	interface I9 extends I8, I7 {}
	interface I10 extends I9, I8 {}
	interface I11 extends I10, I9 {}
	interface I12 extends I11, I10 {}
	interface I13 extends I12, I11 {}
	interface I14 extends I13, I12 {}
	interface I15 extends I14, I13 {}
	interface I16 extends I15, I14 {}
	interface I17 extends I16, I15 {}
	interface I18 extends I17, I16 {}
	interface I19 extends I18, I17 {}
	interface I20 extends I19, I18 {}
	interface I21 extends I20, I19 {}
	interface I22 extends I21, I20 {}
	interface I23 extends I22, I21 {}
	interface I24 extends I23, I22 {}
	interface I25 extends I24, I23 {}
	interface I26 extends I25, I24 {}
	interface I27 extends I26, I25 {}
	interface I28 extends I27, I26 {}
	interface I29 extends I28, I27 {}
	interface I30 extends I29, I28 {}
	interface I31 extends I30, I29 {}
	interface I32 extends I31, I30 {}
	interface I33 extends I32, I31 {}
	interface I34 extends I33, I32 {public abstract void x();}
}

```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6aLIFi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1922,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6eCHEY,eclipse.jdt.ui,2651353368,1922,NA,fedejeanne,2205684,Federico Jeanne,,NA,2025-02-11T16:33:29Z,2025-02-11T16:33:29Z,"FTR there is still work to be done. This is another case in our big WS (I couldn't reproduce it yet with a self contained reproducer):

![Image](https://github.com/user-attachments/assets/e5f95067-df8b-4653-9ec2-82b113d5e8a4)

Raw data: [snapshot-1739181157566.zip](https://github.com/user-attachments/files/18754481/snapshot-1739181157566.zip)

The method override indicator is disabled:

![Image](https://github.com/user-attachments/assets/8c2b8d20-fe27-46cd-97d8-3955184e5e9b)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6eCHEY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1930,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1930,eclipse.jdt.ui,2785164507,1930,'Show method parameter names' option interferes with split/cloned editor behavior,harawata,149268,Iwao AVE!,,CLOSED,2025-01-13T19:40:29Z,2025-02-11T17:45:48Z,"Eclipse IDE for Enterprise Java and Web Developers (includes incubating components)

Version: 2024-12 (4.34.0)
Build id: 20241128-0757

I could reproduce this on...

- MacBook Pro (M3 Max) macOS 15.2
- Mac mini (i7) macOS 15.2 

### Steps to reproduce

1. Create a new 'simple' maven project. Specify ""test"" for both group and artifact ids.
2. In the Preference, enable 'Show method parameter names' (Java > Editor > Code Minings).
3. Create a new class `TypeParameterResolver` under the package `test`.
4. Delete the default file content. Then copy & paste the content of this [file](https://raw.githubusercontent.com/harawata/typeparameterresolver/refs/heads/main/src/main/java/net/harawata/reflection/TypeParameterResolver.java) and change the `package` declaration to `test`, then save the file.   
Note that the problem is not specific to this particular class. It's just the easiest one for me to explain.
5. From the menu bar, choose Window > Editor > Toggle Split Editor (Horizontal).
6. Without clicking the editor itself (i.e. using mouse wheel or trackpad), scroll the lower editor to the bottom of the file.
7. In the upper editor, click to place the caret right after the semicolon of `package test;`.
8. Using keyboard, type a character ""a"".

### Expected behavior

The lower editor keeps showing the bottom part of the file.

### Actual behavior

The lower editor automatically scrolls to the package declaration line.

### Additional info

- The issue reproduces with vertically split editor and cloned editor as well.
- After the step 8, interestingly, Undo does not work. Pressing Cmd+Z does nothing and the menu item is greyed out. I'm not sure if it's related, though.
- Unchecking the sub-options ('Filter parameter names that are implied by parameter' and 'Default filter for some specified methods and method parameter names (e.g. compare())') does not seem to affect the test result.
- With this particular steps on a newly created workspace, editing the lower editor does not scroll the upper editor, however, in my daily development, editing the lower editor also scrolls the upper editor. I am not sure what the difference is at the moment. It might involve some other factors.
- I cannot confirm whether this is a macOS specific issue or not, but there are several people [asking](https://stackoverflow.com/q/77684261/1261766) about the same issue on Stack Overflow and none of them mention Windows while some mention macOS.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1930/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1930,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6eC9qs,eclipse.jdt.ui,2651577004,1930,NA,harawata,149268,Iwao AVE!,,NA,2025-02-11T17:45:46Z,2025-02-11T17:45:46Z,"This issue has been fixed in 2025‑03 M2, it seems.
https://github.com/eclipse-platform/eclipse.platform.ui/issues/2142
https://github.com/eclipse-platform/eclipse.platform.swt/pull/1617","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6eC9qs/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1935,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1935,eclipse.jdt.ui,2787490607,1935,"Quickfix ""Add @SuppressWarnings removal"" is offered twice",jukzi,51790620,Jörg Kubitz,,CLOSED,2025-01-14T15:26:23Z,2025-01-15T21:58:51Z,"![image](https://github.com/user-attachments/assets/ca005535-9cb6-45f8-ad4b-21d444a8c5aa)
Version: 2025-03 (4.35)
Build id: I20250113-1800","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1935/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1940,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1940,eclipse.jdt.ui,2789801101,1940,"Clean Up ""Add missing @Override""  does not keep indentation",IanKrL,132458829,,,CLOSED,2025-01-15T13:04:37Z,2025-02-04T04:38:14Z,"> Eclipse IDE for Java Developers (includes Incubating components)
Version: 2024-09 (4.33.0)
Build id: 20240905-0614

For a file that's indented normally, this is not an issue. However, I have some legacy code that I do want Eclipse to add `@Override` annotations to (for example) but not change the creative indentation.

Example Code:
```
package stuffs;

public class DoThings {

 private static class A {
  void foo() {
  }
 }

 private static class B extends A {
  void foo() {

  }
 }
}
```

The important thing here is that B.foo() is indented 2 spaces (it also occurs for 1 or 3 spaces).
Then I Source->Clean Up->Use configured profiles (Eclipse [build-in]) and Finish. The result is this:
```
package stuffs;

public class DoThings {

 private static class A {
  void foo() {
  }
 }

 private static class B extends A {
  @Override
void foo() {

  }
 }
}
```

Note that the `void foo()` declaration indentation is gone.

I can also reproduce this with adding `@Deprecated` annotation.

Formatting is set to the default `Eclipse [built-in]` option with Indentation being tabs of size 4. This also happens if I change the formatting to be ""4 spaces"" which is what we actually use in my project. The error occurs any time the method indentation is less than the declared indentation in the formatter (like I said, legacy code I don't want to bulk format at this time). However, I don't know that the formatting settings should have any effect, given that I'm only asking for a Clean Up, not a format.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1940/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1940,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ai6U-,eclipse.jdt.ui,2592843070,1940,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-15T13:21:09Z,2025-01-15T13:21:09Z,"Also shown in the preview:
![image](https://github.com/user-attachments/assets/b9941b2e-518b-4379-a350-fd96f7a835e9)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ai6U-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1940,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ai8zv,eclipse.jdt.ui,2592853231,1940,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-15T13:25:30Z,2025-01-15T13:25:30Z,"Note that it happens only if and because of
""Overrride"" Clean up is active 
![image](https://github.com/user-attachments/assets/b4ce2a60-e590-4da5-93e4-ed4180a634d7)
and  Correct indentation is disabled
![image](https://github.com/user-attachments/assets/43fdd04d-d973-424e-b662-be70d6b47e24)

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ai8zv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1940,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6bL7Ls,eclipse.jdt.ui,2603594476,1940,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2025-01-21T03:40:23Z,2025-01-21T03:40:23Z,Fix has been made in JDT Core and now verified by a test in JDT UI.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6bL7Ls/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1940,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6bQD2G,eclipse.jdt.ui,2604678534,1940,NA,IanKrL,132458829,,,NA,2025-01-21T13:02:47Z,2025-01-21T13:02:47Z,Awesome. Thanks so much!,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6bQD2G/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1940,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6b808B,eclipse.jdt.ui,2616413953,1940,NA,rkeen-siemens,46196614,Rangi Keen,,NA,2025-01-27T17:16:49Z,2025-01-27T17:16:49Z,"@jjohnstn, does your fix also address other similar cases such as when adding missing braces?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6b808B/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1940,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6b9suM,eclipse.jdt.ui,2616642444,1940,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2025-01-27T18:55:56Z,2025-01-27T18:55:56Z,"Hi @rkeen-siemens.  No, unfortunately it does not.  The logic changed is for rewriting the modifiers such as @Override and @Deprecated.  In the modifiers case it was using the indent of the method to figure out the indent of the annotation, but was then rewriting the method name calculating the indent based on tab chars (rounding up or down).","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6b9suM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1940,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cLZYY,eclipse.jdt.ui,2620233240,1940,NA,rkeen-siemens,46196614,Rangi Keen,,NA,2025-01-28T23:00:44Z,2025-01-28T23:00:44Z,Added eclipse-jdt/eclipse.jdt.core#3669 with examples of other clean up actions that don't honor indentation as expected.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cLZYY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1944,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1944,eclipse.jdt.ui,2791901484,1944,Convert String/... concatenation to Text Block results in incorrect conversion,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,CLOSED,2025-01-16T07:24:01Z,2025-01-20T16:18:39Z,"Running this clean-up on JFace results in an unnecessary conversion  in /org.eclipse.jface/src/org/eclipse/jface/dialogs/ErrorDialog.java

````
	private void copyToClipboard() {
		if (clipboard != null) {
			clipboard.dispose();
		}
		StringBuilder statusBuffer = new StringBuilder();
		populateCopyBuffer(status, statusBuffer, 0);
		clipboard = new Clipboard(list.getDisplay());
		clipboard.setContents(new Object[] { statusBuffer.toString() },
				new Transfer[] { TextTransfer.getInstance() });
	}
````

Result:

````
	private void copyToClipboard() {
		if (clipboard != null) {
			clipboard.dispose();
		}
		StringBuilder statusBuffer = new StringBuilder(""""""
			"""""");
		populateCopyBuffer(status, statusBuffer, 0);
		clipboard = new Clipboard(list.getDisplay());
		clipboard.setContents(new Object[] { statusBuffer.toString() },
				new Transfer[] { TextTransfer.getInstance() });
	}
````

new StringBuilder() should not converted to new StringBuilder(""""""
			"""""");

cc @jjohnstn ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1944/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1944,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6aqHv4,eclipse.jdt.ui,2594733048,1944,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-16T07:40:10Z,2025-01-16T07:40:10Z,@vogella for completeness please explicitly state what the error is.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6aqHv4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1944,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6aqJvH,eclipse.jdt.ui,2594741191,1944,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2025-01-16T07:45:08Z,2025-01-16T07:45:08Z,"> @vogella for completeness please explicitly state what the error is.

Adjusted the text to describe the issue better (unnecessarry conversion)","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6aqJvH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1944,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6bI-pR,eclipse.jdt.ui,2602822225,1944,NA,vogella,139910,Lars Vogel,Lars.Vogel@vogella.com,NA,2025-01-20T16:18:37Z,2025-01-20T16:18:37Z,Thanks @jjohnstn ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6bI-pR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1945,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1945,eclipse.jdt.ui,2791915021,1945,Poor performance when renaming method,fedejeanne,2205684,Federico Jeanne,,CLOSED,2025-01-16T07:32:12Z,2025-01-17T08:05:31Z,"When renaming a method in a class with a deep ""complicated"" hierarchy, the renaming is needlessly slow.

## How to reproduce
Rename the method `I30::a()` in:

```java
class ReproducerSlowMethodRenaming {

	interface I0 {abstract void a();	abstract int b2();}
	interface I1 extends I0 {abstract void a();}
	interface I2 extends I1{abstract void a();	abstract int b2();}
	interface I3 extends I2{abstract void a();	abstract int b2();}
	interface I4 extends I3{abstract void a();	abstract int b2();}
	interface I5 extends I4{abstract void a();	abstract int b2();}
	interface I6 extends I5{abstract void a();	abstract int b2();}
	interface I7 extends I6{abstract void a();}
	interface I8 extends I7{abstract void a();	abstract int b2();}
	interface I9 extends I8{abstract void a();}
	interface I10 extends I9{abstract void a();	abstract int b2();}
	interface I11 extends I10{abstract void a();}
	interface I12 extends I11 {abstract void a();	abstract int b2();}
	interface I13 extends I12 {abstract void a();}
	interface I14 extends I13 {abstract void a();	abstract int b2();}
	interface I15 extends I14 {abstract void a();}
	interface I16 extends I15 {abstract void a();	abstract int b2();}
	interface I17 extends I16 {abstract void a();}
	interface I18 extends I17 {abstract void a();	abstract int b2();}
	interface I19 extends I18 {abstract void a();}
	interface I20 extends I19 {abstract void a();	abstract int b2();}
	interface I21 extends I20 {abstract void a();}
	interface I22 extends I21 {abstract void a();	abstract int b2();}
	interface I23 extends I22 {abstract void a();}
	interface I24 extends I23 {abstract void a();	abstract int b2();}
	interface I25 extends I24 {abstract int b2();}
	interface I26 extends I25 {abstract void a();	abstract int b2();}
	interface I27 extends I26 {abstract int b2();}
	interface I28 extends I27 {abstract void a();	abstract int b2();}
	interface I29 extends I28 {abstract int b2();}
	interface I30 extends I29 {abstract void a();	abstract int b2();}
}
```

In my machine it takes **~1 min** to do the renaming

The problem is the recursive call, which ends up evaluating the same class/interface several times.

![image](https://github.com/user-attachments/assets/88aa936d-c5de-4550-b49d-d76fefec4f0f)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1945/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1951,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1951,eclipse.jdt.ui,2797506778,1951,Cleanup that adds { } to single blocks mess up with  `//$NON-NLS-1$`,laeubi,1331477,Christoph Läubrich,,CLOSED,2025-01-19T08:46:48Z,2025-01-31T09:41:06Z,"I perform the cleanup to add missing { } to single blocks but it seems to be confused by `//$NON-NLS-1$` tags (or comments in general?)

One example is this `org.eclipse.equinox.internal.p2.core.AgentLocation` it produces this:

![Image](https://github.com/user-attachments/assets/560730e5-510d-4dba-8901-86eddaae5cf7)

please note that there is a `space` added before the tab, but there is an additional line break, it should actually be

![Image](https://github.com/user-attachments/assets/e727a2fb-942b-48dc-b0b8-8eb5738d2994)

Another one is `org.eclipse.equinox.internal.p2.core.Activator.substituteVar(String, String, String)` but it is even working in the same class with `adjustTrailingSlash` method but completely mess up `computeLocationSharedAgent` where then even a new warning is produced because the `//$NON-NLS-1$` tags are not on the right line anymore.

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1951/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1951,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cjtPS,eclipse.jdt.ui,2626606034,1951,NA,laeubi,1331477,Christoph Läubrich,,NA,2025-01-31T08:20:28Z,2025-01-31T08:20:28Z,@jjohnstn mayn thanks for fixing this I'll try it out once a new I-Build is there!,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cjtPS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1951,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ckVNa,eclipse.jdt.ui,2626769754,1951,NA,laeubi,1331477,Christoph Läubrich,,NA,2025-01-31T09:41:04Z,2025-01-31T09:41:04Z,Looking more closely on the change... does it really fix the problem? It just seems to add a new testacse ... I'm confused.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ckVNa/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1953,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1953,eclipse.jdt.ui,2798690733,1953,"Editor formats ""record"" as keyword",jukzi,51790620,Jörg Kubitz,,OPEN,2025-01-20T09:25:15Z,2025-01-20T09:25:23Z,"Example in org.eclipse.jdt.internal.core.builder.State.record(String, char[][][], char[][], char[][], char[], ArrayList)

![Image](https://github.com/user-attachments/assets/09a78751-54ff-40ab-8dff-e38dfc5d2041)

In this context ""record"" is not a keyword but simply a method name.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1953/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1955,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1955,eclipse.jdt.ui,2799650378,1955,"JavaIndenter: BadLocationException logged when pasting string after a ""+""",jukzi,51790620,Jörg Kubitz,,CLOSED,2025-01-20T15:49:39Z,2025-01-23T13:46:48Z,"to reproduce:

create HelloWorl.java:
```
public class HelloWorld {
	public static void main(String[] args) {
		System.out.println(""hello""); // <- toggle TracePoint
	}
}
```
Create a tracpoint and edit it by entering `+` and then paste anything

![Image](https://github.com/user-attachments/assets/9d755abf-7a0f-4aac-a169-0ffff14b96db)

```
null
org.eclipse.jdt.ui
Error
Mon Jan 20 16:42:28 CET 2025
Internal Error

org.eclipse.jface.text.BadLocationException: -1
	at org.eclipse.jface.text.TreeLineTracker.offsetByLine(TreeLineTracker.java:335)
	at org.eclipse.jface.text.TreeLineTracker.getLineOffset(TreeLineTracker.java:1101)
	at org.eclipse.jface.text.AbstractLineTracker.getLineOffset(AbstractLineTracker.java:252)
	at org.eclipse.jface.text.AbstractDocument.getLineOffset(AbstractDocument.java:868)
	at org.eclipse.jdt.internal.ui.text.JavaIndenter.findReferencePosition(JavaIndenter.java:1130)
	at org.eclipse.jdt.internal.ui.text.JavaIndenter.findReferencePosition(JavaIndenter.java:822)
	at org.eclipse.jdt.internal.ui.text.JavaIndenter.findReferencePosition(JavaIndenter.java:696)
	at org.eclipse.jdt.internal.ui.text.java.JavaAutoIndentStrategy.smartPaste(JavaAutoIndentStrategy.java:668)
	at org.eclipse.jdt.internal.ui.text.java.JavaAutoIndentStrategy.customizeDocumentCommand(JavaAutoIndentStrategy.java:1263)
	at org.eclipse.jface.text.TextViewer.customizeDocumentCommand(TextViewer.java:3715)
	at org.eclipse.jface.text.TextViewer.handleVerifyEvent(TextViewer.java:3750)
	at org.eclipse.jface.text.TextViewer$TextVerifyListener.verifyText(TextViewer.java:428)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:311)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:91)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4304)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1208)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1232)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1217)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:854)
	at org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java:7099)
	at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java:8031)
	at org.eclipse.swt.custom.StyledText.paste(StyledText.java:7205)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.ui.internal.handlers.WidgetMethodHandler.execute(WidgetMethodHandler.java:119)
	at org.eclipse.ui.internal.handlers.HandlerProxy.execute(HandlerProxy.java:277)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:98)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:56)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:299)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:233)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:174)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:165)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:204)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:569)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:644)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:91)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1334)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1207)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1232)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1217)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1259)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1255)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1738)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4886)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:347)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4763)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:342)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5072)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3688)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1151)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:665)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:573)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:178)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:668)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:605)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1481)


```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1955/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1959,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1959,eclipse.jdt.ui,2803624584,1959,mac I20250121-1800 failed NoSuchFileException: /Library/Java/JavaVirtualMachines/jdk-21.0.5+11-arm64/Contents/Home/../Classes/classes.jar,jukzi,51790620,Jörg Kubitz,,OPEN,2025-01-22T07:36:44Z,2025-01-23T08:03:38Z,"https://download.eclipse.org/eclipse/downloads/drops4/I20250121-1800/testresults/consolelogs/ep435I-unit-macosx-aarch64-java21_macosx.cocoa.aarch64_21_consolelog.txt

```
     [java] The method public static transient List<T> asList(T[])  is wrongly tagged as containing missing types
     [java] Failed to init Classpath for jar file /Library/Java/JavaVirtualMachines/jdk-21.0.5+11-arm64/Contents/Home/../Classes/classes.jar
     [java] java.nio.file.NoSuchFileException: /Library/Java/JavaVirtualMachines/jdk-21.0.5+11-arm64/Contents/Home/../Classes/classes.jar
     [java] 	at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:92)
     [java] 	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:106)
     [java] 	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)
     [java] 	at java.base/sun.nio.fs.UnixFileAttributeViews$Basic.readAttributes(UnixFileAttributeViews.java:55)
     [java] 	at java.base/sun.nio.fs.UnixFileSystemProvider.readAttributes(UnixFileSystemProvider.java:171)
     [java] 	at java.base/java.nio.file.Files.readAttributes(Files.java:1853)
     [java] 	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1445)
     [java] 	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:724)
     [java] 	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:251)
     [java] 	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:180)
     [java] 	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:194)
     [java] 	at org.eclipse.jdt.internal.compiler.batch.ClasspathJar.initialize(ClasspathJar.java:196)
     [java] 	at org.eclipse.jdt.internal.compiler.batch.FileSystem.<init>(FileSystem.java:206)
     [java] 	at org.eclipse.jdt.internal.compiler.batch.FileSystem.<init>(FileSystem.java:190)
     [java] 	at org.eclipse.jdt.ui.tests.quickfix.JarUtil.compile(JarUtil.java:218)
     [java] 	at org.eclipse.jdt.ui.tests.quickfix.JarUtil.createJar(JarUtil.java:261)
     [java] 	at org.eclipse.jdt.ui.tests.quickfix.JarUtil.createJar(JarUtil.java:277)
     [java] 	at org.eclipse.jdt.ui.tests.quickfix.AbstractAnnotateAssistTests.createLibrary(AbstractAnnotateAssistTests.java:162)
     [java] 	at org.eclipse.jdt.ui.tests.quickfix.AbstractAnnotateAssistTests.addLibrary(AbstractAnnotateAssistTests.java:138)
     [java] 	at org.eclipse.jdt.ui.tests.quickfix.AnnotateAssistTest1d8.testAnnotateParameter_ArrayOfPrimitive(AnnotateAssistTest1d8.java:263)
     [java] 	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
     [java] 	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
     [java] 	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
     [java] 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
     [java] 	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
     [java] 	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
     [java] 	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
     [java] 	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
     [java] 	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:54)
     [java] 	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
     [java] 	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
     [java] 	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
     [java] 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
     [java] 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
     [java] 	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
     [java] 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
     [java] 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
     [java] 	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
     [java] 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
     [java] 	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
     [java] 	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
     [java] 	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
     [java] 	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
     [java] 	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:42)
     [java] 	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
     [java] 	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:72)
     [java] 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
     [java] 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
     [java] 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
     [java] 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:76)
     [java] 	at org.junit.platform.suite.engine.SuiteLauncher.execute(SuiteLauncher.java:63)
     [java] 	at org.junit.platform.suite.engine.SuiteTestDescriptor.executeTests(SuiteTestDescriptor.java:168)
     [java] 	at org.junit.platform.suite.engine.SuiteTestDescriptor.execute(SuiteTestDescriptor.java:137)
     [java] 	at org.junit.platform.suite.engine.SuiteTestEngine.lambda$execute$0(SuiteTestEngine.java:73)
     [java] 	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
     [java] 	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
     [java] 	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
     [java] 	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)
     [java] 	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
     [java] 	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
     [java] 	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
     [java] 	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
     [java] 	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
     [java] 	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
     [java] 	at org.junit.platform.suite.engine.SuiteTestEngine.execute(SuiteTestEngine.java:73)
     [java] 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
     [java] 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
     [java] 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
     [java] 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:76)
     [java] 	at org.junit.platform.suite.engine.SuiteLauncher.execute(SuiteLauncher.java:63)
     [java] 	at org.junit.platform.suite.engine.SuiteTestDescriptor.executeTests(SuiteTestDescriptor.java:168)
     [java] 	at org.junit.platform.suite.engine.SuiteTestDescriptor.execute(SuiteTestDescriptor.java:137)
     [java] 	at org.junit.platform.suite.engine.SuiteTestEngine.lambda$execute$0(SuiteTestEngine.java:73)
     [java] 	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
     [java] 	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
     [java] 	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
     [java] 	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1939)
     [java] 	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
     [java] 	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
     [java] 	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
     [java] 	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
     [java] 	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
     [java] 	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
     [java] 	at org.junit.platform.suite.engine.SuiteTestEngine.execute(SuiteTestEngine.java:73)
     [java] 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
     [java] 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
     [java] 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
     [java] 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
     [java] 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
     [java] 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
     [java] 	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
     [java] 	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
     [java] 	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
     [java] 	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
     [java] 	at org.eclipse.test.EclipseTestRunner.runTests(EclipseTestRunner.java:212)
     [java] 	at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:187)
     [java] 	at org.eclipse.test.UITestApplication.lambda$0(UITestApplication.java:101)
     [java] 	at org.eclipse.e4.ui.internal.workbench.swt.E4Testable.lambda$1(E4Testable.java:127)
     [java] 	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
     [java] 	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
     [java] 	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4382)
     [java] 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4005)
     [java] 	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1151)
     [java] 	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
     [java] 	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
     [java] 	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
     [java] 	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:665)
     [java] 	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
     [java] 	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:573)
     [java] 	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
     [java] 	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:178)
     [java] 	at org.eclipse.test.UITestApplication.run(UITestApplication.java:48)
     [java] 	at org.eclipse.test.UITestApplication.start(UITestApplication.java:116)
     [java] 	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
     [java] 	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
     [java] 	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
     [java] 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
     [java] 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
     [java] 	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
     [java] 	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
     [java] 	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:668)
     [java] 	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:605)
     [java] 	at org.eclipse.equinox.launcher.Main.run(Main.java:1481)
     [java] 	at org.eclipse.equinox.launcher.Main.main(Main.java:1454)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1959/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1959,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6bg79o,eclipse.jdt.ui,2609102696,1959,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-23T08:03:33Z,2025-01-23T08:03:33Z,"I20250122 did pass the jdt.ui unit tests but contains the same error in the log, so the missing file was not the reason to all tests fail:
https://download.eclipse.org/eclipse/downloads/drops4/I20250122-1800/testresults/consolelogs/ep435I-unit-macosx-aarch64-java21_macosx.cocoa.aarch64_21_consolelog.txt
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6bg79o/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1967,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1967,eclipse.jdt.ui,2806548212,1967,"[quickfix] Selecting multiple warnings with the same quickfix shows ""The selected components do not have a common applicable quick fix""",jubax,10562923,Juergen Baier,baier@semedy.com,OPEN,2025-01-23T10:41:20Z,2025-01-29T21:44:40Z,"If you have a class
```
public class CanBeDeclaredAsStatic {
    
    public void test() {
	String x = ""foo"";
	String y = toUpper(x);
	String z = toLower(y);
	System.err.println(z);
    }

    
    public String toUpper(String string) {
	return string.toUpperCase(Locale.ROOT);
    }
    
    public String toLower(String string) {
	return string.toLowerCase(Locale.ROOT);
    }
    
}
```
and activated the corresponding warnings you see

<img width=""769"" alt=""Image"" src=""https://github.com/user-attachments/assets/bcad6369-949a-4f01-b9b2-e3855880941b"" />

When you choose one of those two warnings you get a quickfix dialog which allows you to fix the problem:

<img width=""497"" alt=""Image"" src=""https://github.com/user-attachments/assets/87a717f9-6053-4bad-9101-463b117127c1"" />

But when you choose both warnings then you get ""The selected components do not have a common applicable quick fix"":

<img width=""650"" alt=""Image"" src=""https://github.com/user-attachments/assets/81469e6d-ec08-4dac-9d57-d639f4e5e696"" />

I would have expected that the UI allows me to get both warnings fixed at the same time because they both have the same quick fix.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1967/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1967,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6bia2M,eclipse.jdt.ui,2609491340,1967,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-23T10:52:34Z,2025-01-23T10:52:34Z,I dislike this also. it seems depend on the quickfix - for some it works,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6bia2M/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1967,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6bidMv,eclipse.jdt.ui,2609500975,1967,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-23T10:57:20Z,2025-01-23T10:57:20Z,"duplicates https://bugs.eclipse.org/bugs/show_bug.cgi?id=509727

see https://stackoverflow.com/a/40625656/9549750 for instructions
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6bidMv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1967,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6bijvk,eclipse.jdt.ui,2609527780,1967,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-23T11:10:19Z,2025-01-23T11:10:19Z,In the reproducer given it is an ASTRewriteCorrectionProposal which is not an FixCorrectionProposal so it fails the  instanceof FixCorrectionProposal in org.eclipse.jdt.internal.ui.text.correction.CorrectionMarkerResolutionGenerator.CorrectionMarkerResolution.findOtherMarkers(IMarker[]). One would have to refactor to use FixCorrectionProposalCore instead of ASTRewriteCorrectionProposalCore,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6bijvk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1967,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6bilp8,eclipse.jdt.ui,2609535612,1967,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-23T11:14:21Z,2025-01-23T11:14:21Z,Both classes have been submitted with https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/815 @robstryker can you help? ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6bilp8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1967,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6bmk0t,eclipse.jdt.ui,2610580781,1967,NA,carstenartur,3164220,Carsten Hammer,,NA,2025-01-23T17:56:21Z,2025-01-23T17:56:21Z,"A few months ago @jjohnstn implemented a change like that

https://github.com/jjohnstn/eclipse.jdt.ui-1/commit/a30b50d36c9bc8f535cf298e336fe51bb6ccc559","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6bmk0t/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1977,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1977,eclipse.jdt.ui,2810062595,1977,Stackoverflow in CoreASTProvider,robstryker,630383,Rob Stryker,,OPEN,2025-01-24T18:02:58Z,2025-01-27T08:58:04Z,"This is likely because I had a breakpoint set somewhere. Even still, it would seem like there should be some checks on this recursive loop somewhere, and a better or more checked exception should somehow be thrown here. 

!ENTRY org.eclipse.core.jobs 4 2 2024-02-21 11:54:17.989
!MESSAGE An internal error occurred during: ""Requesting Java AST from selection"".
!STACK 0
java.lang.StackOverflowError
        at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:132)
        at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
        at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
        at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
        at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
        at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
        at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
        at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
        at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
        at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
        at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1977/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1977,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6b4GGz,eclipse.jdt.ui,2615173555,1977,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-27T08:58:01Z,2025-01-27T08:58:01Z,That recursive call looks like the method arguments are not changed at all so the recursion works as a (waiting) loop and could be refactored to such.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6b4GGz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1978,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1978,eclipse.jdt.ui,2810330988,1978,Add quick assist to convert if/else if/else pattern instanceof to switch,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2025-01-24T20:33:43Z,2025-01-27T19:29:26Z,This complements the new cleanup that converts such if blocks to switch statements/switch expressions.  See #1919,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1978/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1981,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1981,eclipse.jdt.ui,2811184209,1981,trailing comma at last element of multi-line declarations like enums or arrays,tolot27,1370732,Mathias Walter,,OPEN,2025-01-25T21:28:34Z,2025-01-27T12:30:41Z,"It would be nice to have a code formatter option to add a [trailing comma](https://dev.to/pfilaretov42/tiny-trailing-commas-in-java-251h) to the last element of multi-line declarations like enums or arrays.

The PDT already have such an option: [521884](https://bugs.eclipse.org/bugs/show_bug.cgi?id=521884). Unfortunately, the git links in Bugzilla does not work anymore.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1981/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1982,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1982,eclipse.jdt.ui,2812862061,1982,"2024-12 UI stops responding and freezes, no CPU usage",guss77,381782,Oded Arbel,oded@geek.co.il,CLOSED,2025-01-27T12:14:29Z,2025-01-29T10:05:39Z,"Running on Linux with Plasma Wayland, trying to use Eclipse JDT 2024-12 always freezes after a short while. The UI looks completely frozen - progress bars are not advancing, buttons are unresponsive and resizing the screen does not cause a redraw.

Looking at a process list, none of the threads are using much CPU if any, and nothing is blocking on IO.

I tried running Eclipse under XWayland and that did not cause a change in behavior.

Running 2024-09 is fine.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1982/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1982,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6b51k9,eclipse.jdt.ui,2615630141,1982,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-27T12:28:33Z,2025-01-27T12:28:33Z,use `jstack -l -e <pid>` and post the result stacktrace,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6b51k9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1982,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cPDeU,eclipse.jdt.ui,2621192084,1982,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-29T10:05:37Z,2025-01-29T10:05:37Z,closing because relevant information missing,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cPDeU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1983,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1983,eclipse.jdt.ui,2813822653,1983,Switch expression refactoring with default fallthrough introduces error,rkeen-siemens,46196614,Rangi Keen,,CLOSED,2025-01-27T18:30:34Z,2025-01-28T21:55:04Z,"The ""Convert to switch expression"" cleanup (Java Feature > Java 14) doesn't seem to work in the following case (at least in 2024-12 on macOS). Start with an regular switch statement with a fallthrough default case:

```java
int delimiter = 5;
String d;
switch (delimiter) {
case 0: d = "" ""; break;
default:
case 1: d = "",""; break;
case 2: d = "";""; break;
}
```

Eclipse refactors this without a default case:

```java
int delimiter = 5;
String d = switch (delimiter) {
case 0 -> "" "";
case 1 -> "","";
case 2 -> "";"";
};
```

This introduces an compilation error since the default case is required (and it doesn't match the old behavior). It should refactor to something like

```java
int delimiter = 5;
String d = switch (delimiter) {
case 0 -> "" "";
default -> "","";
case 1 -> "","";
case 2 -> "";"";
};
```

Or perhaps

```java
int delimiter = 5;
String d = switch (delimiter) {
case 0 -> "" "";
case 2 -> "";"";
default -> "","";
};
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1983/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1983,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cLBdN,eclipse.jdt.ui,2620135245,1983,NA,rkeen-siemens,46196614,Rangi Keen,,NA,2025-01-28T21:55:02Z,2025-01-28T21:55:02Z,Thanks for the quick fix!,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cLBdN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1985,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1985,eclipse.jdt.ui,2814630903,1985,Could not create AST on opening AST view,noopur2507,8749449,Noopur Gupta,,OPEN,2025-01-28T04:59:24Z,2025-01-28T12:47:05Z,"```java
package nn;

public class ZZ {
	public void foo(Integer n) {
		switch (n) {
		case Integer x when x.equals(10) -> {
		}
		case Comparable<?> y -> {
		}
		}
		;
	}
}
```

- Open a Java file with the above code.
- Open AST view.
- The following exception was thrown:

```
org.eclipse.core.runtime.CoreException: Could not create AST:
Operation only supported in JLS21 AST
	at org.eclipse.jdt.astview.views.ASTView.internalSetInput(ASTView.java:562)
	at org.eclipse.jdt.astview.views.ASTView.refreshAST(ASTView.java:1132)
	at org.eclipse.jdt.astview.views.ASTView.setASTLevel(ASTView.java:1143)
	at org.eclipse.jdt.astview.views.ASTView$ASTLevelToggle.run(ASTView.java:186)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:581)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:415)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:91)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4660)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1657)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1680)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1665)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1394)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4427)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4003)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.showMenu(StackRenderer.java:1436)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer$1.widgetSelected(StackRenderer.java:859)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:286)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:91)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4660)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1657)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1680)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1665)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1394)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4427)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4003)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1151)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:665)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:573)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:178)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:668)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:605)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1481)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1454)
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1985/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1985,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cFkZh,eclipse.jdt.ui,2618705505,1985,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-28T11:16:35Z,2025-01-28T11:16:35Z,"@noopur2507 there should be a RuntimeException as rootcause, please add its stacktrace","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cFkZh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1985,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cF1zO,eclipse.jdt.ui,2618776782,1985,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2025-01-28T11:48:12Z,2025-01-28T11:48:12Z,"I can't reproduce (I've tested with Java 21). I assume project compliance is too low. 
@akurtakov : related to your latest changes?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cF1zO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1985,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cF6Ar,eclipse.jdt.ui,2618794027,1985,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2025-01-28T11:55:38Z,2025-01-28T11:55:38Z,I will take a look.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cF6Ar/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1985,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cGHYZ,eclipse.jdt.ui,2618848793,1985,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2025-01-28T12:19:36Z,2025-01-28T12:19:36Z,"Just tested in 4.34 and the error happens there so not a regression in this cycle. 
What I used to reproduce is have a Java 21 project with the given source file, open the ast view on it, choose ast level 17.
I've tried on Eclipse 4.34 valid java 17 switch expression on Java 11 AST:
```java
package nn;

public class ZZ {
	public enum Day {
		SUNDAY, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY;
	}

	public void foo(Integer n) {
		Day day = Day.MONDAY;
		int numLetters = switch (day) {
        case MONDAY, FRIDAY, SUNDAY -> {
            System.out.println(6);
            yield 6;
        }
        default -> {
            throw new IllegalStateException(""Invalid day: "" + day);
        }
    };  
	}
}
```
which led to MethodDeclaration being marked malformed. 

![Image](https://github.com/user-attachments/assets/0b40fa4e-cd7d-4fc8-bc3f-d65f0e637573)

Java 21 features seems to not be handled that gracefully.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cGHYZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1985,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cGVs1,eclipse.jdt.ui,2618907445,1985,NA,akurtakov,574788,Александър Куртаков,akurtakov@gmail.com,NA,2025-01-28T12:47:04Z,2025-01-28T12:47:04Z,"Isssue comes from call of  [unsupported](https://github.com/eclipse-jdt/eclipse.jdt.core/blob/2fd9321450d584cd11ca90442d0242242ea70632/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java#L4807) . Most likely due to supportedOnlyIn19()->supportedOnlyIn20()->supportedOnlyIn21() changes in NullPattern (e.g. https://github.com/eclipse-jdt/eclipse.jdt.core/pull/627) that haven't been accompanied with corresponding ASTConverter adjustment. 
I might be able to look into this more once the AST business streamlines a bit.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cGVs1/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1987,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1987,eclipse.jdt.ui,2816882255,1987,"Cleanup ""Single if"" only handles one branch at a time",rkeen-siemens,46196614,Rangi Keen,,OPEN,2025-01-28T22:58:42Z,2025-02-15T03:43:17Z,"Enable the code cleanup Duplicate Code > Single 'if' statement rather than duplicate blocks that fall through and run it on the following code

```java
int test(boolean a, boolean b) {
  if (a) {
    return 1;
  } else if (b) {
    return 2;
  } else {
    return 3;
  }
}
```

It will only rewrite one branch per run. The first time results in

```java
int test(boolean a, boolean b) {
  if (a) {
    return 1;
  }
  if (b) {
    return 2;
  } else {
    return 3;
  }
}
```

The second time results in 

```java
int test(boolean a, boolean b) {
  if (a) {
    return 1;
  }
  if (b) {
    return 2;
  }
  return 3;
}
```

I would expect it to rewrite all branches on a single run.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1987/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1987,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cNpLj,eclipse.jdt.ui,2620822243,1987,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-29T06:33:02Z,2025-01-29T06:33:02Z,![Image](https://github.com/user-attachments/assets/9de9c8d1-ed8c-4f51-81d1-dd502fb5bbbc),"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cNpLj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1987,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ejvkJ,eclipse.jdt.ui,2660169993,1987,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2025-02-14T20:06:34Z,2025-02-14T20:06:34Z,"This is actually caused by the ""Reduce Indentation"" cleanup","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6ejvkJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1988,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1988,eclipse.jdt.ui,2817305769,1988,Merge master to BETA_JAVA24 branch,noopur2507,8749449,Noopur Gupta,,CLOSED,2025-01-29T05:50:53Z,2025-02-03T06:13:57Z,Merge master to BETA_JAVA24 branch.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1988/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1988,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cw5HO,eclipse.jdt.ui,2630062542,1988,NA,noopur2507,8749449,Noopur Gupta,,NA,2025-02-03T06:13:57Z,2025-02-03T06:13:57Z,Done via https://github.com/eclipse-jdt/eclipse.jdt.ui/commit/68563c299607fe485ea355f69bc2a90df1208ba5.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cw5HO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1990,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1990,eclipse.jdt.ui,2820763995,1990,CleanUpStressTest.testAllCleanUps fails since I20250129-1800,jukzi,51790620,Jörg Kubitz,,CLOSED,2025-01-30T12:54:04Z,2025-01-30T20:30:47Z,"```
Content not as expected for junit.runner.BaseTestRunner.java expected:<... package for"")) { //[ ]$NON-NLS-1$ ...> but was:<... package for"")) { //[]$NON-NLS-1$ ...>

org.junit.ComparisonFailure: Content not as expected for junit.runner.BaseTestRunner.java expected:<... package for"")) { //[ ]$NON-NLS-1$
...> but was:<... package for"")) { //[]$NON-NLS-1$
...>
at org.junit.Assert.assertEquals(Assert.java:117)
at org.eclipse.jdt.ui.tests.quickfix.CleanUpStressTest.testAllCleanUps(CleanUpStressTest.java:5359)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
```
for example
https://download.eclipse.org/eclipse/downloads/drops4/I20250129-1800/testresults/html/org.eclipse.jdt.ui.tests_ep435I-unit-linux-x86_64-java21_linux.gtk.x86_64_21.html","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1990/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1990,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cbm2r,eclipse.jdt.ui,2624482731,1990,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-30T13:12:49Z,2025-01-30T13:12:49Z,"caused by https://github.com/eclipse-jdt/eclipse.jdt.core/pull/3631 @jjohnstn 
maybe intentional?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cbm2r/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1990,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cbnC5,eclipse.jdt.ui,2624483513,1990,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-01-30T13:13:08Z,2025-01-30T13:13:08Z,![Image](https://github.com/user-attachments/assets/be4ce660-23ef-4053-99e3-2317f79ebbdd),"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cbnC5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1990,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cdbrZ,eclipse.jdt.ui,2624961241,1990,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2025-01-30T16:23:36Z,2025-01-30T16:23:36Z,@jukzi I'll look at it.,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cdbrZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1990,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cfCIX,eclipse.jdt.ui,2625380887,1990,NA,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,NA,2025-01-30T19:23:52Z,2025-01-30T19:23:52Z,"I think that the test should never have added a space within a new NLS marker so I am posting a PR to change it.  If my code fixed that, great.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cfCIX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1992,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1992,eclipse.jdt.ui,2823559991,1992,"Code after Javadocs still folded ""too much""",danthe1st,34687786,dan1st,,CLOSED,2025-01-31T13:49:21Z,2025-02-13T22:15:18Z,"While testing #1825, I noticed the following issue:

In #1562, @jakub-suliga introduced the fix for #1939 (see [this comment](https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1562#issuecomment-2626504845)) but there seems to be a case where this issue still happens.

With the following code, folding `a()` causes `b()` to be invisible as well in the current master (after merging #1562) if the new/experimental folding is disabled:

```java
package org.example.test;

class X {
	/*
	 * a b
	 */
	void a() {
	} void b() {
	}
}
```

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1992/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1992,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cmw1u,eclipse.jdt.ui,2627407214,1992,NA,danthe1st,34687786,dan1st,,NA,2025-01-31T13:52:42Z,2025-01-31T13:52:42Z,"Also, it seems like that PR changes the test in #1960 to only consider the ""new""/experimental folding and does not run any tests with the ""old"" folding (I expected it to run tests with both options).

@jakub-suliga Is this intentional?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cmw1u/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1992,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cmxyg,eclipse.jdt.ui,2627411104,1992,NA,danthe1st,34687786,dan1st,,NA,2025-01-31T13:54:26Z,2025-01-31T13:54:26Z,"Also @jjohnstn since you reviewed the PR in question, I think you should know about that as well.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cmxyg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1992,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cnE66,eclipse.jdt.ui,2627489466,1992,NA,jakub-suliga,66252366,Jakub Suliga,,NA,2025-01-31T14:30:06Z,2025-01-31T14:30:06Z,"> Also, it seems like that PR changes the test in [#1960](https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1960) to only consider the ""new""/experimental folding and does not run any tests with the ""old"" folding (I expected it to run tests with both options).
> 
> [@jakub-suliga](https://github.com/jakub-suliga) Is this intentional?

No, it isnt intentional. I fixed it in #1993 ","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cnE66/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1992,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cnGjA,eclipse.jdt.ui,2627496128,1992,NA,jakub-suliga,66252366,Jakub Suliga,,NA,2025-01-31T14:33:08Z,2025-01-31T14:33:08Z,"> With the following code, folding a() causes b() to be invisible as well in the current master (after merging https://github.com/eclipse-jdt/eclipse.jdt.ui/pull/1562) if the new/experimental folding is disabled:

The PR #1993 fixes the porblem too. I accidentally set includeLastLine to true a second time, which caused the issue.

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cnGjA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1994,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1994,eclipse.jdt.ui,2825949171,1994,Handles the TypePattern DOM API modifications in the JDT.UI,subyssurendran666,117082823,Suby S Surendran,suby.surendran@ibm.com,CLOSED,2025-02-02T18:41:00Z,2025-02-10T07:11:40Z,"In the JDT Core DOM, the TypePattern APIs have been modified to handle [unnamed variables and patterns](https://openjdk.org/jeps/456), as expected to be implemented through https://github.com/eclipse-jdt/eclipse.jdt.core/pull/3635. Therefore, appropriate changes need to be made in JDT UI as well.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1994/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1994,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cuxyl,eclipse.jdt.ui,2629508261,1994,NA,subyssurendran666,117082823,Suby S Surendran,suby.surendran@ibm.com,NA,2025-02-02T18:41:16Z,2025-02-02T18:41:16Z,@noopur2507 could you please assign this ticket to me ?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6cuxyl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1996,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1996,eclipse.jdt.ui,2826553189,1996,IndexOutOfBoundsException in OrganizeImportsAction,noopur2507,8749449,Noopur Gupta,,CLOSED,2025-02-03T06:41:46Z,2025-02-06T04:45:15Z,"```
package p1;


public class Snippet {
	void main() {
	  List<String> list = List.of(""the"", ""be"", ""two"", ""of"", ""and"", ""a"", ""in"", ""that"");
	  System.out.println(list);
	}
	
	private <T> ArrayList<T> filtering(Predicate<T> predicate) {
	  return null;
	  Code language
	}
	
}

```

* In a Java 24 project, have the above code.
* Invoke Organzie Imports.
* On the first page of the wizard, select java.util.List, press Next.
* On the second page to select a type for Code, press Skip.
* On the third page, select java.util.function.Predicate, press Finish.
* Following exception is logged in Error Log view:
```
java.lang.IndexOutOfBoundsException: Index 2 out of bounds for length 2
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)
	at java.base/java.util.Objects.checkIndex(Objects.java:365)
	at java.base/java.util.ArrayList.get(ArrayList.java:428)
	at org.eclipse.jdt.ui.actions.OrganizeImportsAction.lambda$1(OrganizeImportsAction.java:374)
        ...
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1996/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1996,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6c-3gb,eclipse.jdt.ui,2633725979,1996,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-02-04T12:13:17Z,2025-02-04T12:13:17Z,Also happens in a Java 21 Project!,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6c-3gb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1996,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6dBgPo,eclipse.jdt.ui,2634417128,1996,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-02-04T16:05:05Z,2025-02-04T16:05:05Z,"Can reproduced with any Java version if `List` is not unique, which can be forced by removing typefilter for com.sun:

![Image](https://github.com/user-attachments/assets/0e22c129-5ef9-4c50-a46f-71543f8ce07e)

![Image](https://github.com/user-attachments/assets/78c9393c-d2f4-46a3-b311-b656cc246282)

If on the other hand `List` is unique it will be imported without asking the user.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6dBgPo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1997,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1997,eclipse.jdt.ui,2827129007,1997,JavadocHover logs error while class not compiled yet,jukzi,51790620,Jörg Kubitz,,OPEN,2025-02-03T10:39:02Z,2025-02-03T10:39:02Z,"example:

```
static class Hi { // Hover ""Hi""
    jdk.jfr.Label(""Word"") // Syntax error on token ""."", @ expected after this token
    String message;
}
```

logs

```
eclipse.buildId=4.35.0.I20250129-1800
java.version=22.0.2
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=de_DE
Command-line arguments:  -os win32 -ws win32 -arch x86_64

org.eclipse.jdt.core.manipulation
Error
Mon Feb 03 11:36:28 CET 2025
Internal Error

Java Model Exception: Error in Java Model (code 969): Hi [in [Working copy] DiskIndex.java [in org.eclipse.jdt.internal.core.index [in search [in org.eclipse.jdt.core]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:546)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:589)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:292)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:278)
	at org.eclipse.jdt.internal.core.SourceRefElement.getSourceRange(SourceRefElement.java:258)
	at org.eclipse.jdt.internal.core.Member.getJavadocRange(Member.java:322)
	at org.eclipse.jdt.core.manipulation.internal.javadoc.CoreJavadocAccess.getHTMLContentFromSource(CoreJavadocAccess.java:355)
	at org.eclipse.jdt.core.manipulation.internal.javadoc.CoreJavadocAccess.getHTMLContent(CoreJavadocAccess.java:229)
	at org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2.getHTMLContent(JavadocContentAccess2.java:49)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:798)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:716)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:708)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)


```

![Image](https://github.com/user-attachments/assets/056e8126-ad1a-4197-adda-3fddff8eafd4)

should be more silent

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1997/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1999,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1999,eclipse.jdt.ui,2834003894,1999,Convert to lambda sometimes removes non-NLS marker comments,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2025-02-05T21:32:58Z,2025-02-06T00:06:27Z,"Converting anonymous class to lambda can sometimes omit NLS comment

For an anonymous function interface where there is only one statement for the implementation such as below:

 ```
 void setRunnable(Runnable r) {

  }
  void test1() {
	setRunnable(new Runnable() {
	    @Override
	    public void run() {
	      System.out.println(""abc""); //$NON-NLS-1$
	    }
	});
  }

```

This converts to:

```
  void setRunnable(Runnable r) {

  }
  void test1() {
	setRunnable(() -> System.out.println(""abc""));
  }

```

The NLS marker comment is missing.  This does not happen if there are multiple statements in the run() method.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/1999/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2002,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2002,eclipse.jdt.ui,2838692730,2002,inplace type hierarchy throws exception in 2025-03,martinlippert,107705,Martin Lippert,mlippert@gmail.com,CLOSED,2025-02-07T17:17:37Z,2025-02-10T14:11:44Z,"I am using Eclipse JEE package 2025-03 M2. Created a simple plain Java 21 project, created one empty class.
Java editor is open, then invoking the inplace type hierarchy popup (Cmd-T on macOS). That works. Pressing CMd-T again to switch the mode doesn't work and throws tons of exception in the Error Log instead:


```
java.lang.NullPointerException: Cannot invoke ""java.util.Set.add(Object)"" because ""this.visited"" is null
	at org.eclipse.jdt.internal.ui.typehierarchy.HierarchyInformationControl$2.shouldExpand(HierarchyInformationControl.java:159)
	at org.eclipse.jdt.internal.ui.typehierarchy.HierarchyInformationControl$2.internalExpandToLevel(HierarchyInformationControl.java:148)
	at org.eclipse.jface.viewers.AbstractTreeViewer.expandToLevel(AbstractTreeViewer.java:1166)
	at org.eclipse.jface.viewers.AbstractTreeViewer.lambda$1(AbstractTreeViewer.java:1123)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.jface.viewers.AbstractTreeViewer.expandToLevel(AbstractTreeViewer.java:1123)
	at org.eclipse.jface.viewers.AbstractTreeViewer.expandAll(AbstractTreeViewer.java:1084)
	at org.eclipse.jdt.internal.ui.typehierarchy.HierarchyInformationControl.toggleHierarchy(HierarchyInformationControl.java:364)
	at org.eclipse.jdt.internal.ui.typehierarchy.HierarchyInformationControl$1.keyPressed(HierarchyInformationControl.java:105)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:205)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:91)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4660)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1657)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1680)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1665)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1694)
	at org.eclipse.swt.widgets.Text.sendKeyEvent(Text.java:1753)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1690)
	at org.eclipse.swt.widgets.Text.sendKeyEvent(Text.java:1718)
	at org.eclipse.swt.widgets.Control.doCommandBySelector(Control.java:1052)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:6443)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:239)
	at org.eclipse.swt.widgets.Widget.superKeyDown(Widget.java:2217)
	at org.eclipse.swt.widgets.Widget.keyDown(Widget.java:1200)
	at org.eclipse.swt.widgets.Control.keyDown(Control.java:2425)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:6289)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:239)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2407)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2502)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:6401)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5705)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5845)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:117)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4000)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1151)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1042)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:665)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:573)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:178)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:143)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:109)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:439)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:668)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:605)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1481)
```
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2002/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2002,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6dy7FS,eclipse.jdt.ui,2647372114,2002,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-02-10T09:11:31Z,2025-02-10T09:11:31Z,"regression from a17cf6308850b24e27a62380b4db045167287388, @fedejeanne please take a look","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6dy7FS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2002,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6dy81U,eclipse.jdt.ui,2647379284,2002,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-02-10T09:14:16Z,2025-02-10T09:14:16Z,Probably AbstractTreeViewer#expandToLevel needs a override too,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6dy81U/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2002,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6dz5LS,eclipse.jdt.ui,2647626450,2002,NA,fedejeanne,2205684,Federico Jeanne,,NA,2025-02-10T10:53:14Z,2025-02-10T10:53:14Z,"I will look into it, thank you for the heads up.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6dz5LS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2004,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2004,eclipse.jdt.ui,2841137230,2004,Linked source folder disappears until Eclipse is restarted,Bestsoft101,163331759,,,OPEN,2025-02-10T02:00:58Z,2025-02-10T16:56:55Z,"Create a Java Project
![Image](https://github.com/user-attachments/assets/3582e650-71c8-4d87-a8c4-aa85dc82d182)

Link a source folder
![Image](https://github.com/user-attachments/assets/7b3a144b-39fa-462e-be9a-36722eca5e96)

![Image](https://github.com/user-attachments/assets/9a1c0fbc-7774-40b9-b752-6dccd2534f9e)

Delete the source folder (The actual folder on the hard drive, not from the project)
Refresh the project
 - The folder is no longer displayed in the project
![Image](https://github.com/user-attachments/assets/634e1bab-210f-4acf-a317-0f57269da09d)

Now restore the deleted folder, and refresh the project again
 - The source folder should now appear in the project, but it doesn't

Restart eclipse
 - The folder is now in the project again



This is quite annoying when working with git, where changing from one branch to another can create or delete folders","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2004/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2004,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6dy49k,eclipse.jdt.ui,2647363428,2004,NA,jukzi,51790620,Jörg Kubitz,,NA,2025-02-10T09:07:58Z,2025-02-10T09:07:58Z,lets narrow it down: do you need a java project for this or does it also happen for a plain project without java nature?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6dy49k/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2004,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6d3f6j,eclipse.jdt.ui,2648571555,2004,NA,Bestsoft101,163331759,,,NA,2025-02-10T16:21:18Z,2025-02-10T16:21:18Z,How do you link a source folder in a non-java project?,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6d3f6j/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2004,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6d34Hv,eclipse.jdt.ui,2648670703,2004,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2025-02-10T16:56:54Z,2025-02-10T16:56:54Z,"I believe it is a duplicate of https://github.com/eclipse-platform/eclipse.platform/issues/470 and there is a draft PR https://github.com/eclipse-platform/eclipse.platform/pull/473 that unfortunately needs more work.

See https://github.com/eclipse-platform/eclipse.platform/issues/470#issuecomment-2077539970 with the explanation what is needed to fix it.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6d34Hv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2007,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2007,eclipse.jdt.ui,2844455824,2007,[code mining] Errors opening type for JavaMethodParameterCodeMiningProvider,iloveeclipse,964108,Andrey Loskutov,,OPEN,2025-02-11T07:10:32Z,2025-02-11T07:10:32Z,"Using latest I20250210-1800 build, Java 21.
To reproduce: 

1) Enable all code minings for JDT
2) Have JDT core/batch compiler projects in the workspace
3) Paste this to the Java console and click on `Compiler` or `ProcessTaskManager` to open Java editor
```
at org.eclipse.jdt.internal.compiler.Compiler.reportProgress(Compiler.java:290)
at org.eclipse.jdt.internal.compiler.ProcessTaskManager.processing(ProcessTaskManager.java:128)
```

After editor opens, multiple errors reported to the log, example:

```
Java Model Exception: Error in Java Model (code 1006): <module:java.base> is not on its project's build path
	at org.eclipse.jdt.internal.core.JavaElement.newJavaModelException(JavaElement.java:556)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:238)
	at org.eclipse.jdt.internal.core.Openable.openAncestors(Openable.java:512)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:232)
	at org.eclipse.jdt.internal.core.Openable.openAncestors(Openable.java:512)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:232)
	at org.eclipse.jdt.internal.core.SourceRefElement.generateInfos(SourceRefElement.java:127)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:569)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:292)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:278)
	at org.eclipse.jdt.internal.core.BinaryMethod.getParameterNames(BinaryMethod.java:287)
	at org.eclipse.jdt.internal.ui.javaeditor.codemining.CalleeJavaMethodParameterVisitor.collectParameterNamesCodeMinings(CalleeJavaMethodParameterVisitor.java:116)
	at org.eclipse.jdt.internal.ui.javaeditor.codemining.CalleeJavaMethodParameterVisitor.collectParameterNameCodeMinings(CalleeJavaMethodParameterVisitor.java:106)
	at org.eclipse.jdt.internal.ui.javaeditor.codemining.CalleeJavaMethodParameterVisitor.visit(CalleeJavaMethodParameterVisitor.java:96)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:220)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3312)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:3360)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3312)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3383)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:128)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3312)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:3360)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:676)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3312)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3383)
	at org.eclipse.jdt.core.dom.TypeDeclaration.accept0(TypeDeclaration.java:497)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3312)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:3383)
	at org.eclipse.jdt.core.dom.CompilationUnit.accept0(CompilationUnit.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:3312)
	at org.eclipse.jdt.internal.ui.javaeditor.codemining.JavaMethodParameterCodeMiningProvider.collectLineContentCodeMinings(JavaMethodParameterCodeMiningProvider.java:88)
	at org.eclipse.jdt.internal.ui.javaeditor.codemining.JavaMethodParameterCodeMiningProvider.lambda$0(JavaMethodParameterCodeMiningProvider.java:68)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
```","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2007/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2008,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2008,eclipse.jdt.ui,2844816827,2008,PlainJarExportTests failing on I-build,noopur2507,8749449,Noopur Gupta,,CLOSED,2025-02-11T09:30:54Z,2025-02-11T09:47:14Z,"I20250210-1800

org.eclipse.jdt.ui.tests.jarexport.PlainJarExportTests 

The following tests failed:

exportCu
exportFile
externalClassFolder

with exceptions of the following type:

```
JAR creation failed. See details for additional information.

org.eclipse.core.runtime.CoreException: JAR creation failed. See details for additional information.
at org.eclipse.jdt.ui.tests.jarexport.PlainJarExportTests.createArchive(PlainJarExportTests.java:173)
at org.eclipse.jdt.ui.tests.jarexport.PlainJarExportTests.exportCu(PlainJarExportTests.java:108)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
Contains: Build failed for project: TestSetupProject
org.eclipse.core.internal.resources.ResourceException: Errors occurred during the build.
at org.eclipse.core.internal.resources.Project$1.run(Project.java:607)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2457)
at org.eclipse.core.internal.resources.Project.internalBuild(Project.java:642)
at org.eclipse.core.internal.resources.Project.build(Project.java:154)
at org.eclipse.jdt.internal.ui.jarpackager.JarFileExportOperation.buildProjects(JarFileExportOperation.java:1142)
at org.eclipse.jdt.internal.ui.jarpackager.JarFileExportOperation.singleRun(JarFileExportOperation.java:996)
at org.eclipse.jdt.internal.ui.jarpackager.JarFileExportOperation.execute(JarFileExportOperation.java:977)
at org.eclipse.ui.actions.WorkspaceModifyOperation.lambda$0(WorkspaceModifyOperation.java:112)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2457)
...
```

","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2008/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2008,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6d-D5D,eclipse.jdt.ui,2650291779,2008,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2025-02-11T09:47:13Z,2025-02-11T09:47:13Z,Duplicate of https://github.com/eclipse-jdt/eclipse.jdt.core/issues/3718,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6d-D5D/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2009,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2009,eclipse.jdt.ui,2845260829,2009,Add Syntax Coloring for Java record type,higune,52355294,,,CLOSED,2025-02-11T12:31:55Z,2025-02-11T14:20:49Z,"Hello,

it would be really nice to have syntax coloring for Java record type. Currently this is not supported.

![Image](https://github.com/user-attachments/assets/d48ed4b0-32e0-4b21-8370-12e5d149f858)

![Image](https://github.com/user-attachments/assets/be0d9764-bd2a-48ef-bef5-66ffd0eaaa70)

As far as I have seen, you must define therefore a new implementation of SemanticHighlighting inside this org.eclipse.jdt.ui/ui/org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightings.java class.

https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/master/org.eclipse.jdt.ui/ui/org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightings.java

https://github.com/eclipse-jdt/eclipse.jdt.ui/blob/master/org.eclipse.jdt.core.manipulation/common/org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightingsCore.java

This is my current installed Eclipse version:
_Eclipse IDE for Java Developers (includes Incubating components)
Version: 2024-12 (4.34.0)
Build id: 20241128-0757
OS: Windows 11, v.10.0, x86_64 / win32
Java vendor: Eclipse Adoptium
Java runtime version: 21.0.6+7-LTS
Java version: 21.0.6_

Maybe someone find some time to implement it.

Thanks in advance.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2009/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2009,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6eAQ6q,eclipse.jdt.ui,2650869418,2009,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2025-02-11T13:43:58Z,2025-02-11T13:43:58Z,"> Maybe someone find some time to implement it.

Actually given your pointer it seem to be trivial.
I will push a PR in a moment, just wondering whether any test will fail.
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6eAQ6q/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2009,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6eAd0s,eclipse.jdt.ui,2650922284,2009,NA,higune,52355294,,,NA,2025-02-11T14:04:51Z,2025-02-11T14:04:51Z,@iloveeclipse thank you so much for your fast work.  👍 ,"{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6eAd0s/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2009,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6eAogM,eclipse.jdt.ui,2650966028,2009,NA,iloveeclipse,964108,Andrey Loskutov,,NA,2025-02-11T14:20:48Z,2025-02-11T14:20:48Z,"Will be in the next nightly build, please verify.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/comments/IC_kwDOHJK_uM6eAogM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2011,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2011,eclipse.jdt.ui,2846417210,2011,Test fixes when minimum indent support is added,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,OPEN,2025-02-11T20:15:53Z,2025-02-11T20:16:07Z,"When https://github.com/eclipse-jdt/eclipse.jdt.core/issues/3669 gets fixed, some cleanup/quickfix/refactoring tests will fail because they have been written to expect indent issues to occur.  This issue will fix those tests to expect the correct output.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2011/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2012,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2012,eclipse.jdt.ui,2846935607,2012,Convert pattern instanceof to switch expression when there are multiple if statements doesn't remove all if statements,jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,CLOSED,2025-02-12T01:13:46Z,2025-02-12T02:15:04Z,"For the following:

```
public class TestPatternInstanceof {

	int i;
	double d;
	boolean b;

	public int square(int x) {
		return x*x;
	}
	public int foo(Object y) {
		if (y instanceof final Integer xint) {
			return xint;
		}
		if (y instanceof final Double xdouble) {
			return square(8); // square
		} else if (y instanceof final Boolean xboolean) {
			throw new NullPointerException();
		} else {
			i = 0;
			d = 0.0D;
			b = false;
			return 11;
		}
	}

}
```
applying the pattern instanceof to switch cleanup correctly converts the multiple if/if else to a single switch expression, but it does not remove the 2nd if","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2012/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2016,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2016,eclipse.jdt.ui,2849061646,2016,"For new pattern instanceof to switch cleanup, use unnamed variables when pattern variable unused",jjohnstn,1216877,Jeff Johnston,jjohnstn@redhat.com,OPEN,2025-02-12T18:37:01Z,2025-02-14T01:13:09Z,"In some cases the pattern variable is unused and when converted to a switch statement or switch expression, the unnamed variable should be used instead of making the user use the convert to unnamed quick fix.","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2016/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2017,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2017,eclipse.jdt.ui,2851180660,2017,Prefer not to search for references within JRE when using --release,stephan-herrmann,24587985,Stephan Herrmann,,OPEN,2025-02-13T14:19:11Z,2025-02-13T14:19:11Z,"Reference search operates on sources, but when using `--release X` while only a JDK Y (Y>X) is installed / configured, then no sources of the desired version are available. 

Possible impact:
* finding references which don't exist in the desired JDK version
* not being able to process some sources because they have syntax errors when compiled at the given release level.

For that reason I suggest that the Java Search dialog should detect this situation and when `--release` doesn't match the physical JDK then
* by default disable **Search In > JRE libraries**
* if the above is enable by the user raise a warning about the incompatibility (""cannot show search results exactly matching the configured release version"" or similar).
","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2017/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2022,https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2022,eclipse.jdt.ui,2855768382,2022,There might be too many folding regions when creating an anonymous class,fedejeanne,2205684,Federico Jeanne,,OPEN,2025-02-15T23:26:36Z,2025-02-15T23:27:00Z,"When working on #2019 , I noticed that the test `testAnonymousClassDeclarationFolding` generates one folding region too many. It should have only 2 but it has 3 (and one of them is duplicated).

These are the regions in the test, according to the output of `FoldingTestUtils.getProjectionRangesOfFile(packageFragment, ""TestFolding.java"", str)`:

```
(java.util.ArrayList<E>) [offset: 43, length: 126, offset: 104, length: 55, offset: 43, length: 126]
```

But in the code, everything _looks_ fine (only 2 `-`s)

![Image](https://github.com/user-attachments/assets/0d667614-c79d-4aac-acf2-6384ee733f48)

This needs to be investigated.

@jakub-suliga do you want to take a look at that?","{""url"": ""https://api.github.com/repos/eclipse-jdt/eclipse.jdt.ui/issues/2022/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
