type,issue_url,comment_url,repo_name,id,issue_num,title,user_login,user_id,user_name,user_email,issue_state,created_at,updated_at,body,reactions
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/2,https://api.github.com/repos/eclipse-ditto/ditto/issues/2,ditto,263494975,2,Build failure,kartben,128251,Benjamin Cabé,benjamin@zephyrproject.org,CLOSED,2017-10-06T16:01:05Z,2017-10-09T06:35:05Z,"with a fresh clone of the initial check-in, I get the following compilation error:

```
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 01:35 min
[INFO] Finished at: 2017-10-06T17:26:31+02:00
[INFO] Final Memory: 104M/1130M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.5.1:compile (default-compile) on project ditto-signals-commands-batch: Compilation failure
[ERROR] /Users/kartben/Repositories/ditto/signals/commands/batch/src/main/java/org/eclipse/ditto/signals/commands/batch/ExecuteBatch.java:[155,45] unreported exception X; must be caught or declared to be thrown
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
[ERROR] 
[ERROR] After correcting the problems, you can resume the build with the command
[ERROR]   mvn <goals> -rf :ditto-signals-commands-batch
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/2,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDMzNDgwMDY1NQ==,ditto,334800655,2,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2017-10-06T16:12:34Z,2017-10-06T16:12:34Z,"Hi Benjamin.
Thanks for trying out so soon :)
Are you running an old version of JDK 1.8? Like lower than 1.8.0_92?

Sounds like this bug in JDK with Exceptions in lambdas:
* https://bugs.openjdk.java.net/browse/JDK-8054569
* https://bugs.openjdk.java.net/browse/JDK-8066974

Could you please try building it with a newer JDK 8?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDMzNDgwMDY1NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/2,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDMzNDgwMTgwMw==,ditto,334801803,2,NA,kartben,128251,Benjamin Cabé,benjamin@zephyrproject.org,NA,2017-10-06T16:17:12Z,2017-10-06T16:17:12Z,"Correct. 

```
ja✘-130 ~/Repositories/ditto [master|✔] 
18:03 $ java -version
java version ""1.8.0_74""
Java(TM) SE Runtime Environment (build 1.8.0_74-b02)
Java HotSpot(TM) 64-Bit Server VM (build 25.74-b02, mixed mode)
```

I will update and retry :) Probably worth documenting somewhere?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDMzNDgwMTgwMw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/2,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDMzNTA3NTI4Mw==,ditto,335075283,2,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2017-10-09T06:35:05Z,2017-10-09T06:35:05Z,Fixed in README.md,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDMzNTA3NTI4Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/5,https://api.github.com/repos/eclipse-ditto/ditto/issues/5,ditto,264015810,5,Provide pre-built docker images in public repository,crenz,124283,Christian Renz,crenz@web42.com,CLOSED,2017-10-09T20:26:13Z,2017-12-19T10:33:06Z,"Please consider making docker images available e.g. on hub.docker.com for those that are interested to try out ditto, but do not want to set up a complete build environment for it.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/5,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDMzNTMzNjYxMg==,ditto,335336612,5,NA,zantiu,11325888,,,NA,2017-10-10T01:55:13Z,2017-10-10T01:55:13Z,+1,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDMzNTMzNjYxMg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/5,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDMzNTM3MjUwNQ==,ditto,335372505,5,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2017-10-10T06:20:27Z,2017-10-10T06:20:27Z,"Sure, will do once we have the build process set up.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDMzNTM3MjUwNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/5,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM1MjcwMzczNg==,ditto,352703736,5,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2017-12-19T10:33:06Z,2017-12-19T10:33:06Z,Images are available for the [0.1.0-M1](https://github.com/eclipse/ditto/releases/tag/0.1.0-M1) release on Docker Hub.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM1MjcwMzczNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/8,https://api.github.com/repos/eclipse-ditto/ditto/issues/8,ditto,264309109,8,Logo for Eclipse Ditto,kartben,128251,Benjamin Cabé,benjamin@zephyrproject.org,CLOSED,2017-10-10T17:17:40Z,2017-12-06T16:43:25Z,"Does Ditto have a logo? If not, let me know if you need my/EF's help setting up a crowd sourcing campaign to get one designed.
It would be nice to have a Ditto logo for the upcoming I4.0 white paper :-)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/8,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDMzNTU5NzEzMQ==,ditto,335597131,8,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2017-10-10T20:26:29Z,2017-10-10T20:26:29Z,"No, we don't have one yet.
Would be great if you could help us with a crowd sourcing campaign. We liked the results of hawkBit and Hono a lot and are very excited to see what comes up for Ditto.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDMzNTU5NzEzMQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/8,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDMzNjQwMDczMg==,ditto,336400732,8,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2017-10-13T09:28:33Z,2017-10-13T09:28:33Z,@kartben how do we initiate the logo crowd sourcing campaign? I guess we need some texts and explanations and maybe some basic ideas or colors?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDMzNjQwMDczMg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/8,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDMzODE2MDg3Ng==,ditto,338160876,8,NA,kartben,128251,Benjamin Cabé,benjamin@zephyrproject.org,NA,2017-10-20T09:51:20Z,2017-10-20T09:51:20Z,"@thjaeckle apologies, i've been swamped with other stuff… (testbed, white paper… 😊)
Let's sit together sometime next week and just get this done, ok? :-)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDMzODE2MDg3Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/8,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDMzOTkyMzY1MA==,ditto,339923650,8,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2017-10-27T09:36:03Z,2017-10-27T09:36:03Z,"I started a discussion on the mailing list what the text for the crowdsourcing campaign could be:
https://dev.eclipse.org/mailman/listinfo/ditto-dev","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDMzOTkyMzY1MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/8,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM0MzgzODY4NQ==,ditto,343838685,8,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2017-11-13T07:48:45Z,2017-11-13T07:48:45Z,"Hi @kartben 
We came up with a text for the logo campaign:

---

## Who are you known as?
Ditto

## Tell us a bit about who you are and the people you reach
We need a logo for our open source software project Ditto – [https://projects.eclipse.org/projects/iot.ditto](https://projects.eclipse.org/projects/iot.ditto)

Eclipse Ditto is a technology implementing a software pattern called “Digital Twins” which we would also like to see reflected in the logo. A digital twin is a virtual, cloud based, representation of his real world counterpart (real world “Things”, e.g. devices like sensors, smart heating, connected cars, smart grids, EV charging stations, …). But those twins are not limited to devices, therefore we speak more generically of ""Things"".<br/>
The technology mirrors potentially millions and billions of digital twins residing in the digital world with physical “Things”. This simplifies working with IoT (Internet of Things) for software developers as they do not need to know how or where exactly the physical “Things” are connected. They can just be used as any other service in the web via their digital twins.

The name of the project has the meaning of the English “ditto”: the same thing again / as has been said before<br/>
The name emphasizes the mirroring / twin aspect as key purpose of the technology.
The Ditto project is part of a larger ecosystem of open-source projects called “Eclipse IoT”. The Eclipse IoT website is available at http://iot.eclipse.org and the logo of Eclipse IoT is attached to the brief – while not mandatory, we encourage designers to provide logos that convey the idea of Ditto belonging to the Eclipse IoT brand.

## What industry do you think your business is most related to?
Technology

## Other notes
* the logo should work both with and without the ""Ditto"" text

Some important keywords relevant to Ditto that we would like somehow to be represented in our logo:
* Internet of Things
* Cloud
* Scalability (i.e Ditto can give home to billions of digital twins)

We'll need a favicon for our website, in addition to the ""regular"" logo.

---

How do we proceed now? Can you start a campaign with that information? :blush:","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM0MzgzODY4NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/8,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM0NDU5MDg3MA==,ditto,344590870,8,NA,kartben,128251,Benjamin Cabé,benjamin@zephyrproject.org,NA,2017-11-15T13:24:09Z,2017-11-15T13:24:09Z,"@thjaeckle this looks good. I would recommend you create an account on 99designs, create the draft for the campaign, and once everything is ready share the credentials with me and I'll make the payment. Makes sense?

FWIW I recommend going for a ""blind"" challenge, where the designs are not visible to the other designers, making for better innovation and creativity as people can't steal each others' ideas :-)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM0NDU5MDg3MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/8,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM0NDYxNzM4MA==,ditto,344617380,8,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2017-11-15T14:56:33Z,2017-11-15T14:56:33Z,"ok, will do 👍 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM0NDYxNzM4MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/8,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM0OTY5OTIwOQ==,ditto,349699209,8,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2017-12-06T16:43:25Z,2017-12-06T16:43:25Z,"The logo was successfully ""found"": https://en.99designs.de/logo-design/contests/logo-iot-internet-things-open-source-project-773651

Will upload to Ditto project site and GitHub tomorrow.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM0OTY5OTIwOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/10,https://api.github.com/repos/eclipse-ditto/ditto/issues/10,ditto,265218508,10,"Add ""live"" commands to Ditto repo",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2017-10-13T09:05:41Z,2017-10-13T15:26:20Z,"Add commands required for building ""live"" commands/responses/events.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/10/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/10,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDMzNjQ2NTY1Nw==,ditto,336465657,10,NA,jokraehe,12512262,Johannes Schneider,johannes.schneider@bosch.io,NA,2017-10-13T14:17:09Z,2017-10-13T14:17:09Z,fixed by pr #12,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDMzNjQ2NTY1Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/11,https://api.github.com/repos/eclipse-ditto/ditto/issues/11,ditto,265220631,11,Provide basic documentation,geglock,14750235,Gerald Glocker,,CLOSED,2017-10-13T09:13:20Z,2017-11-10T14:08:27Z,"We should think about what and how to provide basic documentation for Eclipse Ditto.
Currently we have a small ""Readme"" and a ""Getting started"" (both as .md files).

The documentation should contain chapters about: 
- scope
- architecture
- build/installation
- api
- tutorials / examples

The format of the documentation should be:
- ""mainstream"", so its well known in oss and everyone is simply able to contribute
- usable as source for a webpage (hosted on eclipse.org)
- powerful enough to support tables and simple maintenance of links

My proposal is to start with a list of GitHub flavored markdown files in a folder structure within ""documentation"" and use the GitHub repo for rendering / navigation.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/11/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/11,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDMzOTMzODcyOQ==,ditto,339338729,11,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2017-10-25T13:58:24Z,2017-10-25T13:58:24Z,"I don't think it is the best idea to go with GitHub flavored markdown.
For some background: http://ericholscher.com/blog/2016/mar/15/dont-use-markdown-for-technical-docs/
We shouldn't rush this because I doubt that we won't change the format once some documentation is public.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDMzOTMzODcyOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/11,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDMzOTkzNzcyOA==,ditto,339937728,11,NA,marianne-klein,17159837,marianne klein,Marianne.Klein@bosch.com,NA,2017-10-27T10:42:00Z,2017-10-27T10:42:00Z,"I went to this year’s technical communication conference full of scepticism regarding this topic but I came back with hope. 
There are people out there who already create static html out of pure md files and seem to be happy so far. 

So I guess pure Markdown should suffice for the beginning.
We could stick to https://github.github.com/gfm/ and try - in a first step - to avoid the extensions as much as possible.

Thus a writer would have the possibility to easily structure his content - with headings, paragraphs, lists, examples as neutral code snippets, and to add links and pictures - without caring about the static html files created based on such files.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDMzOTkzNzcyOA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/11,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM0MzIyMjYyNg==,ditto,343222626,11,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2017-11-09T17:06:38Z,2017-11-09T17:06:38Z,"Completed and published first draft to: https://www.eclipse.org/ditto/
Also set up a Jenkins (JIPP) based automation: https://ci.eclipse.org/ditto/","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM0MzIyMjYyNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/13,https://api.github.com/repos/eclipse-ditto/ditto/issues/13,ditto,265725556,13,setup milestone build process,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2017-10-16T10:46:38Z,2017-12-19T10:30:54Z,"* setup Sonatype OSS repo for Maven Central artifacts (with the Help of Eclipse Webmaster)
** tracked by bug: https://bugs.eclipse.org/bugs/show_bug.cgi?id=526074
* add release job to Eclipse's JIPP: https://ci.eclipse.org/ditto/
* adjust pom.xml for signing artifacts / deploying to MavenCentral + Eclipse Maven Repo","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/13/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/13,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM1MjcwMzIwMA==,ditto,352703200,13,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2017-12-19T10:30:54Z,2017-12-19T10:30:54Z,Build process is set up and working,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM1MjcwMzIwMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/15,https://api.github.com/repos/eclipse-ditto/ditto/issues/15,ditto,266036210,15,Extend README.md of ditto-json,jufickel-b,17162397,Juergen Fickel,,CLOSED,2017-10-17T08:31:36Z,2017-10-25T17:17:54Z,The README should give more details about using the library e. g. document idioms for creating a JSON object or using JsonFieldDefinitions etc.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/15/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/15,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDMzOTQwMzg2NQ==,ditto,339403865,15,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2017-10-25T17:17:54Z,2017-10-25T17:17:54Z,Fixed via #24,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDMzOTQwMzg2NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/17,https://api.github.com/repos/eclipse-ditto/ditto/issues/17,ditto,266455418,17,Extend DittoProtocolAdapter to correctly map RetrieveThings(Response) commands,dguggemos,15028977,Dominik Guggemos,dominik.guggemos@bosch.io,CLOSED,2017-10-18T11:17:57Z,2017-11-09T09:05:49Z,,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/17/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/25,https://api.github.com/repos/eclipse-ditto/ditto/issues/25,ditto,268835281,25,Define custom content-type for Ditto JSON protocol,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2017-10-26T16:52:46Z,2018-05-15T08:15:27Z,"When transmitting the protocol via Websocket or other channels, the content-types should be defined.
Define custom content type:
http://restcookbook.com/Resources/using-custom-content-types/","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/25/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/25,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM0MzEwMTg4OA==,ditto,343101888,25,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2017-11-09T09:47:25Z,2017-11-09T09:47:25Z,"Proposal:
```
application/vnd.eclipse.ditto+json
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM0MzEwMTg4OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/25,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM0OTY5OTUwMg==,ditto,349699502,25,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2017-12-06T16:44:26Z,2017-12-06T16:44:26Z,Open: think about officially registering the content-type: https://tools.ietf.org/html/rfc6838,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM0OTY5OTUwMg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/30,https://api.github.com/repos/eclipse-ditto/ditto/issues/30,ditto,272845387,30,Provide notice for apache-2.0-licensed snippets,jokraehe,12512262,Johannes Schneider,johannes.schneider@bosch.io,CLOSED,2017-11-10T07:38:58Z,2017-11-13T09:34:28Z,"Provide a NOTICE file as described at http://www.apache.org/dev/licensing-howto.html,","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/30/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/30,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM0Mzg2MjUzMA==,ditto,343862530,30,NA,jokraehe,12512262,Johannes Schneider,johannes.schneider@bosch.io,NA,2017-11-13T09:34:28Z,2017-11-13T09:34:28Z,merged #35,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM0Mzg2MjUzMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/31,https://api.github.com/repos/eclipse-ditto/ditto/issues/31,ditto,272852613,31,Message-specific Ditto header values are serialized as JSON string,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,CLOSED,2017-11-10T08:13:32Z,2017-11-10T08:24:33Z,"Regardless of the type of headers defined in `MessageHeaderDefinition`, those headers are serialized as JSON strings. The headers `TIMEOUT` and `STATUS_CODE` have integer types and should be serialized as numbers.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/31/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/31,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM0MzQwNzQ1NQ==,ditto,343407455,31,NA,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,NA,2017-11-10T08:24:33Z,2017-11-10T08:24:33Z,Actually `MessageHeaderDefinition` serialize the aforementioned headers to numbers by calling `getSpecificDefinitions()`.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM0MzQwNzQ1NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/32,https://api.github.com/repos/eclipse-ditto/ditto/issues/32,ditto,272899266,32,Enable google analytics in documentation's _config.yml,kartben,128251,Benjamin Cabé,benjamin@zephyrproject.org,CLOSED,2017-11-10T11:14:17Z,2017-11-13T10:05:43Z,"Please include a google analytics tracker in the Ditto website and follow the instructions here https://wiki.eclipse.org/IoT/Community_metrics#Web_traffic to share access with Eclipse so  that the stats can be consolidated in our monthly reports.

Thanks!
Benjamin -","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/32/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/32,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM0MzUwNDY5Mw==,ditto,343504693,32,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2017-11-10T15:33:33Z,2017-11-10T15:33:33Z,"Hi Benjamin.
I just did that - hopefully correctly .. :-)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM0MzUwNDY5Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/32,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM0MzUwOTEwNw==,ditto,343509107,32,NA,kartben,128251,Benjamin Cabé,benjamin@zephyrproject.org,NA,2017-11-10T15:49:48Z,2017-11-10T15:49:48Z,"I am not sure your layout files are correct. They seem to put the tracker at the very end of the page, just before </html>, whereas it should be the first item of the <head> afaik.

You may also want to switch to the more recent tracking code:

<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src=""https://www.googletagmanager.com/gtag/js?id={{site.google_analytics}}""></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', '{{site.google_analytics}}');
</script>



","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM0MzUwOTEwNw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/32,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM0MzY3Njk4OQ==,ditto,343676989,32,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2017-11-11T16:36:27Z,2017-11-11T16:36:27Z,"I think I had the permissions in Analytics for the ""eclipsefdn"" user wrong.
I also used the snippet you pointed to now .. and added the script after the <head> section.

Could you try again?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM0MzY3Njk4OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/32,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM0Mzg2NTA4MQ==,ditto,343865081,32,NA,kartben,128251,Benjamin Cabé,benjamin@zephyrproject.org,NA,2017-11-13T09:44:12Z,2017-11-13T09:44:12Z,"works now, thanks!","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM0Mzg2NTA4MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/41,https://api.github.com/repos/eclipse-ditto/ditto/issues/41,ditto,273716280,41,Minor fixes for DittoProtocolAdapter,dguggemos,15028977,Dominik Guggemos,dominik.guggemos@bosch.io,CLOSED,2017-11-14T09:11:17Z,2017-11-14T19:11:24Z,"- fix deserialization of messages with content-type `application/json`
- fix serialization of `null` attributes","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/41/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/42,https://api.github.com/repos/eclipse-ditto/ditto/issues/42,ditto,273783079,42,Add documentation for Ditto protocol LIVE channel,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2017-11-14T12:57:40Z,2024-05-09T11:23:52Z,"Currently the documentation focuses on the ""TWIN"" channel: [https://www.eclipse.org/ditto/protocol-overview.html](https://www.eclipse.org/ditto/protocol-overview.html)

* make difference between live/twin channel more clear (incl. picture)
* document live API commands/responses/events
* add use cases where live channel is needed","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/42/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/42,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C859UUeT,ditto,2102478739,42,NA,kulta4,148374362,,,NA,2024-05-09T11:23:50Z,2024-05-09T11:23:50Z,"Hi there,
        I tried this live/twin channel enable with adding the plain-text in the request body with channel=live and did POST method but that's not working. please provide steps to enable the live-channel and verify the live retrieval data from protocol such as Kafka & MQTT (provide for both).

Best Regards,
Kulta","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C859UUeT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/45,https://api.github.com/repos/eclipse-ditto/ditto/issues/45,ditto,273816513,45,Restore Thing in search-index when its Policy has been restored,danielFesenmeyer,11198630,Daniel Fesenmeyer,daniel.fesenmeyer@bosch.com,CLOSED,2017-11-14T14:42:54Z,2018-01-04T15:14:58Z,"Currently a Thing in the search-index is not restored in the search-index when its policy is restored. This means that the Thing cannot be found by means of the Search API, thus it is available via the Things API.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/45/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/45,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM1NTMwNzYxNA==,ditto,355307614,45,NA,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,NA,2018-01-04T15:14:22Z,2018-01-04T15:14:22Z,Fixed by #83.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM1NTMwNzYxNA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/46,https://api.github.com/repos/eclipse-ditto/ditto/issues/46,ditto,274107118,46,Fix missing <direction> in headers,stmaute,17831060,Stefan Maute,,CLOSED,2017-11-15T10:32:20Z,2018-01-15T07:46:39Z,java.lang.IllegalArgumentException: The headers did not contain a value for mandatory header with key <direction>!,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/46/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/46,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM0NDYyMjkxMw==,ditto,344622913,46,NA,stmaute,17831060,Stefan Maute,,NA,2017-11-15T15:13:39Z,2017-11-15T15:13:39Z,Fixed with #47,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM0NDYyMjkxMw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/51,https://api.github.com/repos/eclipse-ditto/ditto/issues/51,ditto,276449467,51,Inconsistencies between things-service and search-index because of data which is too long to be indexed,danielFesenmeyer,11198630,Daniel Fesenmeyer,daniel.fesenmeyer@bosch.com,CLOSED,2017-11-23T18:08:20Z,2018-01-15T07:46:40Z,"MongoDB has a limit of 1024 bytes per index entry: https://docs.mongodb.com/manual/reference/limits/#indexes
In the search-db, we create lots of index entries (e.g. for attributes). In things-db we do not create such indexes, because we do not need extensive search functionality there.
If a thing-event (or whole thing in case of sync) contains a single value which is too big to index, the whole update-operation of the search-updater will fail. This leads to data inconsistencies.

Therefore, we should truncate values which exceed the MongoDB limit.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/51/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/51,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM0NjgwMTQyMw==,ditto,346801423,51,NA,ffendt,2587759,Florian Fendt,,NA,2017-11-24T10:55:25Z,2017-11-24T10:55:25Z,I think this issue was fixed in #38 (Bugfix/search updater indexes too long). Too long values are now truncated in the search-db. ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM0NjgwMTQyMw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/53,https://api.github.com/repos/eclipse-ditto/ditto/issues/53,ditto,276571346,53,Fix message serialization for empty raw payloads,dguggemos,15028977,Dominik Guggemos,dominik.guggemos@bosch.io,CLOSED,2017-11-24T10:16:02Z,2018-01-15T07:46:28Z,,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/53/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/59,https://api.github.com/repos/eclipse-ditto/ditto/issues/59,ditto,279294535,59,Add possibility to connect to a Hono instance via AMQP 1.0,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2017-12-05T08:58:54Z,2018-01-12T17:07:13Z,"* consume messages (telemetry and events) in Ditto Protocol via Hono
* add new connections on the fly containing credentials for authentication at Hono

Goal is to have another microservice running in the ditto-cluster which uses an AMQP 1.0 client library in order to connect to an Eclipse Hono instance (e.g. the sandbox running on hono.eclipse.org)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/59/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/59,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM1NzI5NjgxMQ==,ditto,357296811,59,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-01-12T17:07:13Z,2018-01-12T17:07:13Z,done via PR #65,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM1NzI5NjgxMQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/60,https://api.github.com/repos/eclipse-ditto/ditto/issues/60,ditto,279295299,60,"Add ""definitions"" field to Ditto features pointing to Vorto functionblocks",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2017-12-05T09:01:44Z,2018-02-06T07:08:46Z,"First step towards Eclipse Vorto integration:
* add an optional field ""definitions"" in features aside of ""properties"" containing a list of string identifiers targeting Vorto Functionblocks

Format:
```json
""features"": {
  ""my-lamp"": {
    ""definition"": [ ""org.eclipse.example:Lamp:1.0.0"" ],
    ""properties"": {
      ....
    }
  }
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/60/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/60,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM2MzMzMDg4MQ==,ditto,363330881,60,NA,jufickel-b,17162397,Juergen Fickel,,NA,2018-02-06T07:08:46Z,2018-02-06T07:08:46Z,"Added definition to Feature, see [Feature Definition](https://www.eclipse.org/ditto/basic-feature.html#feature-definition).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM2MzMzMDg4MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/81,https://api.github.com/repos/eclipse-ditto/ditto/issues/81,ditto,285615271,81,Provide Ditto sandbox at ditto.eclipse.org,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2018-01-03T07:29:27Z,2018-01-12T17:08:03Z,"Containing:
* running Ditto ""single instance"" (each service scaled to 1)
* MongoDB as backing DB
* nginx as reverse proxy
* graphite, grafana as monitoring
* ELK stack for logging

JWT based authentication with Google OAuth2.0 would be the best way to provide login.
  
It would be cool to have some kind of ""landing"" page containing:
* quick start ""guide"" (e.g. how-to login via swagger and try out HTTP API)
* the currently running Ditto version
* live statistics (total things, hot things, etc.)
* charts (from grafana) about current HTTP requests/second, etc.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/81/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/81,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM1NDk5Nzg4OQ==,ditto,354997889,81,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-01-03T12:11:43Z,2018-01-03T12:11:43Z,Bugzilla issue opened: https://bugs.eclipse.org/bugs/show_bug.cgi?id=529358,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM1NDk5Nzg4OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/81,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM1NTA3ODM1Ng==,ditto,355078356,81,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-01-03T17:50:08Z,2018-01-03T17:50:08Z,"The VM will have ""30G disk, 1 cpu and 3.75G"" which is the max. Eclipse can offer for their vservers.
If we need more, we have to host them elsewhere.

In that case we won't set up the ELK stack in the Sandbox - so no logs.
Let's see if we have enough resources for some charts (Grafana, etc.)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM1NTA3ODM1Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/81,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM1NjkwODAxMw==,ditto,356908013,81,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-01-11T11:31:04Z,2018-01-11T11:31:04Z,"We will try to use letsencrypt in order to obtain a free valid SSL certificate - otherwise the OAuth2.0 should not be used.

Tutorial: https://www.humankode.com/ssl/how-to-set-up-free-ssl-certificates-from-lets-encrypt-using-docker-and-nginx","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM1NjkwODAxMw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/81,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM1NzI5NzAzNQ==,ditto,357297035,81,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-01-12T17:08:02Z,2018-01-12T17:08:02Z,done: https://ditto.eclipse.org,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM1NzI5NzAzNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/84,https://api.github.com/repos/eclipse-ditto/ditto/issues/84,ditto,285907990,84,Update dependency of japicmp-maven-plugin,jufickel-b,17162397,Juergen Fickel,,CLOSED,2018-01-04T08:04:26Z,2018-01-15T07:46:23Z,"Currently ditto uses version 0.9.3. The most recent version is 0.11.0. Since version 0.9.4 the plugin is marked with `@threadSafe` which prevents the following warning during multi thread Maven build:

<pre>
[WARNING] * Your build is requesting parallel execution, but project      *
[WARNING] * contains the following plugin(s) that have goals not marked   *
[WARNING] * as @threadSafe to support parallel building.                  *
[WARNING] * While this /may/ work fine, please look for plugin updates    *
[WARNING] * and/or request plugins be made thread-safe.                   *
[WARNING] * If reporting an issue, report it against the plugin in        *
[WARNING] * question, not against maven-core                              *
[WARNING] *****************************************************************
[WARNING] The following plugins are not marked @threadSafe in Eclipse Ditto :: Signals :: Commands :: Batch:
[WARNING] com.github.siom79.japicmp:japicmp-maven-plugin:0.9.3
[WARNING] Enable debug to see more precisely which goals are not marked @threadSafe.
[WARNING] *****************************************************************
</pre>","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/84/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/84,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM1NTI2NjMwNQ==,ditto,355266305,84,NA,jufickel-b,17162397,Juergen Fickel,,NA,2018-01-04T12:05:45Z,2018-01-04T12:05:45Z,Already fixed with commit https://github.com/eclipse/ditto/commit/7b7fb97223cd3e52cc06cfb89fb5d657d2823424.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM1NTI2NjMwNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/89,https://api.github.com/repos/eclipse-ditto/ditto/issues/89,ditto,286913545,89,Add Openshift Template for ditto,marziman,16783749,Mehmet Arziman,,CLOSED,2018-01-08T22:46:41Z,2018-07-31T15:19:18Z,"It would be great to have the possibility to make ditto run in openshift/kubernetes. As fas as I can see docker-compose is used. It might makes sense to provide a yaml template for kubernetes/openshift like e.g. Kapua.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/89/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/89,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM1NjEyMTUwNA==,ditto,356121504,89,NA,marziman,16783749,Mehmet Arziman,,NA,2018-01-08T22:48:40Z,2018-01-08T22:48:40Z,Just to let you know: I can support to „convert“ it from docker compose notation to openshift yaml with the tool called kompose. But doing it natively in a openshift template might be the preffered approach.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM1NjEyMTUwNA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/89,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM1NjIwMjA3Nw==,ditto,356202077,89,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-01-09T07:29:31Z,2018-01-09T07:29:31Z,"Sure, that would be great.
As we are not yet using openshift/kubernetes ourselves we would appreciate some help here, we are noobs in this area 😉 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM1NjIwMjA3Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/89,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3OTEwNzM4OQ==,ditto,379107389,89,NA,marziman,16783749,Mehmet Arziman,,NA,2018-04-05T23:36:21Z,2018-04-05T23:36:21Z,"Hi @thjaeckle,

I will soon make a PR with k8/OpenShift ressources for ditto. Sorry been a bit busy.
But soon to come ..","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3OTEwNzM4OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/91,https://api.github.com/repos/eclipse-ditto/ditto/issues/91,ditto,287428989,91,Decouple jwt issuer from policy subject issuer,jokraehe,12512262,Johannes Schneider,johannes.schneider@bosch.io,CLOSED,2018-01-10T13:13:37Z,2018-01-15T12:06:47Z,"If a jwt issuer changes, policies using the old issuer are no longer working as intended because the authorization subjects provided in JwtAuthenticationDirective have the new issuer as a prefix which might differ from the one used when the policy was created.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/91/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/91,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM1NzIzNTk3OQ==,ditto,357235979,91,NA,jokraehe,12512262,Johannes Schneider,johannes.schneider@bosch.io,NA,2018-01-12T13:18:34Z,2018-01-12T13:18:34Z,fixed with pr #94 ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM1NzIzNTk3OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/91,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM1NzYyODQ0Nw==,ditto,357628447,91,NA,jokraehe,12512262,Johannes Schneider,johannes.schneider@bosch.io,NA,2018-01-15T09:33:46Z,2018-01-15T09:33:46Z,merged #94,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM1NzYyODQ0Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/96,https://api.github.com/repos/eclipse-ditto/ditto/issues/96,ditto,288499822,96,Support emitting partial change notifications based on Policy READ permission,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2018-01-15T07:19:55Z,2022-10-28T10:55:21Z,"Currently we only deliver change notifications via the WS or SSE for subjects which have unrestricted ""READ"" permission for changed Things (via the so-called ""read-subjects"").

For ACL that was and is sufficient.

But when using a Policy for a Thing in which I only have ""READ"" permission for a single Feature property I would expect to get a WS message if this property is changed (or also if the complete Feature/Thing is changed and the property was part of that change).

That is however a little difficult as we would have to build ""views"" of each emitted Event for each WS session.

As we do not want to instantiate the PolicyEnforcer for all used policies again in the Websocket sessions I suggest serializing this kind of information (which subject is allowed to read which parts of the Thing affected by an emitted ThingEvent) as header field.

The format of the header could look like:
```json
{
  ""sub1"": [
    ""/features/lamp1/properties/illuminance"",
    ""/attributes""
  ],
  ""sub2"": [
    ""/""
  ]
}
```

This format could be calculated by the `PolicyEnforcerActor` for an incoming `ModifyCommand` - and fill the header based on the actually changed Json fields inside.

The Websocket/SSE would ""only"" have to use a small interpreter for this format in order to return only a partial Event.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/96/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/96,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85NLeBa,ditto,1294852186,96,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-10-28T10:55:21Z,2022-10-28T10:55:21Z,"Some more background:

## Example

### Policy

```json
{
  ""policyId"":""my.namespace:policy-a"",
  ""entries"":{
    ""owner"":{
      ""subjects"":{
        ""nginx:owner"":{
          ""type"":""owner user A""
        }
      },
      ""resources"":{
        ""thing:/"":{
          ""grant"":[ ""READ"", ""WRITE"" ],
          ""revoke"":[ ]
        },
        ""policy:/"":{
          ""grant"":[ ""READ"", ""WRITE"" ],
          ""revoke"":[ ]
        }
      }
    },
    ""attr-observer"":{
      ""subjects"":{
        ""nginx:attr-observer"":{
          ""type"":""attributes observer user""
        }
      },
      ""resources"":{
        ""thing:/attributes"":{
          ""grant"":[ ""READ"" ],
          ""revoke"":[ ]
        },
        ""thing:/attributes/secret"":{
          ""grant"":[ ],
          ""revoke"":[ ""READ"" ]
        }
      }
    },
    ""feature-a-status-observer"":{
      ""subjects"":{
        ""nginx:feature-a-status-observer"":{
          ""type"":""Feature A status observer user""
        },
        ""resources"":{
          ""thing:/features/A/properties/status"":{
            ""grant"":[ ""READ"" ],
            ""revoke"":[ ]
          }
        }
      }
    }
  }
}
```

### Thing

```json
{
  ""thingId"":""my.namespace:thing-a"",
  ""policyId"":""my.namespace:policy-a"",
  ""attributes"": {
    ""some"": 42,
    ""some-obj"": {
      ""foo"": false
    }
    ""secret"": ""hidden""
  },
  ""features"": {
    ""A"": {
      ""properties"": {
        ""status"": {
          ""speed"": 252
        },
         ""configuration"": {
          ""color"": ""red""
        }
      }
  }
}
```

## Scenarios

### Scenario a: Update complete Thing

* user ""nginx:owner"" is notified with complete Thing
* user ""nginx:attr-observer"" is notified
   * he only receives an event with a JSON containing ""/attributes"" without the ""/attributes/secret""
* user ""inginx:feature-a-status-observer"" is notified
   * he only receives an event with a JSON containing ""/features/A/properties/status""

### Scenario b: Update /attributes of a Thing

* user ""nginx:owner"" is notified with JSON of ""/attributes""
* user ""nginx:attr-observer"" is notified
   * he only receives an event with a JSON containing ""/attributes"" without the ""/attributes/secret""
* user ""nginx:feature-a-status-observer"" is not notified

### Scenario c: Update /attributes/secret of a Thing

* user ""nginx:owner"" is notified with JSON of ""/attributes/secret""
* user ""nginx:attr-observer"" is not notified
* user ""nginx:feature-a-status-observer"" is not notified

### Scenario d: Update /features/A of a Thing

* user ""nginx:owner"" is notified with JSON of ""/features/A""
* user ""nginx:attr-observer"" is not notified
* user ""nginx:feature-a-status-observer"" is notified
   * he only receives an event with a JSON containing ""/features/A/properties/status""
   * the ""/features/A/properties/configuration"" is filtered

## Idea for headers serialization format

The internal format (which is calculated for each incoming ""ModifyCommand"" in things service during the enforcement step) of the to-be-determined ""read-subjects"" could look like:

### Scenario a: Update complete Thing

```json
{
  ""nginx:owner"": [
    ""/"",
    ""/attributes"",
    ""/attributes/some"",
    ""/attributes/some-obj"",
    ""/attributes/some-obj/foo"",
    ""/attributes/secret"",
    ""/features"",
    ""/features/A"",
    ""/features/A/properties"",
    ""/features/A/properties/status"",
    ""/features/A/properties/status/speed"",
    ""/features/A/properties/configuration"",
    ""/features/A/properties/configuration/color""
  ],
  ""nginx:attr-observer"": [
    ""/attributes"",
    ""/attributes/some"",
    ""/attributes/some-obj"",
    ""/attributes/some-obj/foo""
  ],
  ""nginx:feature-a-status-observer"": [
    ""/features/A/properties/status"",
    ""/features/A/properties/status/speed""
  ]
}
```

### Scenario b: Update /attributes of a Thing

```json
{
  ""nginx:owner"": [
    ""/attributes"",
    ""/attributes/some"",
    ""/attributes/some-obj"",
    ""/attributes/some-obj/foo"",
    ""/attributes/secret""
  ],
  ""nginx:attr-observer"": [
    ""/attributes"",
    ""/attributes/some"",
    ""/attributes/some-obj"",
    ""/attributes/some-obj/foo""
  ],
  ""nginx:feature-a-status-observer"": [ ]
}
```

### Scenario c: Update /attributes/secret of a Thing

```json
{
  ""nginx:owner"": [
    ""/attributes/secret""
  ],
  ""nginx:attr-observer"": [ ],
  ""nginx:feature-a-status-observer"": [ ]
}
```

### Scenario d: Update /features/A of a Thing

```json
{
  ""nginx:owner"": [
    ""/features/A"",
    ""/features/A/properties"",
    ""/features/A/properties/status"",
    ""/features/A/properties/status/speed"",
    ""/features/A/properties/configuration"",
    ""/features/A/properties/configuration/color""
  ],
  ""nginx:attr-observer"": [ ],
  ""nginx:feature-a-status-observer"": [ 
    ""/features/A/properties/status"",
    ""/features/A/properties/status/speed""
  ]
}
```

## Algorithm at the edge

An algorithm in gateway and connectivity (at the edges) can read the calculated read-subject as calculated above:

* each ThingEvent contains a getResourcePath(), e.g. AttributesModified defines ""/attributes""
   * each event contains the above in concierge calculated read-subjects map which was determined for the command
* a subject which e.g. subscribed for events via WebSocket must
   * be listed as key in the above read-subject map
   * have an entry with the affected getResourcePath() for its subject in the above read-subject map
* a JSON-view has to be calculated if only sub-parts of a complete JSON may be read

## Optimized serialization format

As the serialization format can get quite big, depending on thing and policy size, an optimized format is likely required.

Here are 2 ideas (from @yufei-cai - thanks for the input) to reduce the header size.
1. Merge JSON pointers into a JSON object so that JSON keys at the start (e. g., attributes) are not repeated many times.
2. Collect relevant authorization subjects in an array and refer to them by index (needed for revocation).

The header may look like this for scenario a. Update complete thing:
```json
{
  ""subjects"": [
    ""nginx:owner"",
    ""nginx:attr-observer"",
    ""nginx:feature-a-status-observer""
  ],
  ""tree"": {
    ""g"": [0],
    ""r"": [],
    ""children"": {
      ""attributes"": {
        ""g"": [1],
        ""children"": {
          ""secret"": {
            ""r"": [1]
          }
        }
      },
      ""features"": {
        ""children"": {
          ""A"": {
            ""children"": {
              ""properties"": {
                ""children"": {
                  ""status"": {
                    ""g"": [2]
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
```

The field ""tree"" can be filtered for partial update scenarios.

Other ideas:
3. Replace boilerplate JSON keys ""subjects"", ""tree"", ""children"" by ""s"", ""t"", ""c"" to save space.
4. Record only subjects with partial rights in the ""tree""; other subjects can be treated as ""read-subject"" entries.
5. Write the policy content as a header instead of ""read-subjects"". Gateway and Connectivity perform full policy enforcement on outgoing events.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85NLeBa/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/97,https://api.github.com/repos/eclipse-ditto/ditto/issues/97,ditto,288561597,97,Failover is not working correctly for AMQP 1.0 connections,jokraehe,12512262,Johannes Schneider,johannes.schneider@bosch.io,CLOSED,2018-01-15T11:23:07Z,2018-01-16T16:40:26Z,The failover parameter of the JMS client should be additionally configured with at least failover.initialReconnectDelay and failover.reconnectDelay. Otherwise it will reconnect after 10ms and the connection attempt fails as it takes more than 10ms.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/97/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/97,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM1Nzg3MTc2Nw==,ditto,357871767,97,NA,jokraehe,12512262,Johannes Schneider,johannes.schneider@bosch.io,NA,2018-01-16T07:08:59Z,2018-01-16T07:08:59Z,merged #100,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM1Nzg3MTc2Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/105,https://api.github.com/repos/eclipse-ditto/ditto/issues/105,ditto,290731337,105,Update to Kamon 1.0.0,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2018-01-23T07:11:32Z,2018-07-12T10:21:20Z,"Kamon 1.0.0 was released recently: http://kamon.io/teamblog/2018/01/18/kamon-1.0.0-is-out/

We are still using version 0.6.x for monitoring in the Ditto services.
Update to 1.0.0 brings the huge benefit that we can use the Kamon Prometheus reporter: http://kamon.io/documentation/1.x/reporters/prometheus/
which leads to a more predictable ""pull approach"" for metrics in the cluster.
Currently, when running under high load, the metrics sent via UDP even make the networking load higher.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/105/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/105,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwNDA5MTQyNw==,ditto,404091427,105,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-07-11T08:40:55Z,2018-07-11T08:40:55Z,"New dependencies were added for which we need CQs:
```
<dependency>
    <groupId>io.prometheus</groupId>
    <artifactId>simpleclient</artifactId>
    <version>0.4.0</version>
</dependency>
<dependency>
    <groupId>io.prometheus</groupId>
    <artifactId>simpleclient_dropwizard</artifactId>
    <version>0.4.0</version>
</dependency>
<dependency>
    <groupId>io.prometheus</groupId>
    <artifactId>simpleclient_common</artifactId>
    <version>0.4.0</version>
</dependency>
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwNDA5MTQyNw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/106,https://api.github.com/repos/eclipse-ditto/ditto/issues/106,ditto,290733251,106,"Add HTTP API for ""live"" commands",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2018-01-23T07:20:53Z,2021-12-20T15:54:27Z,"Ditto's [""live"" channel](https://www.eclipse.org/ditto/protocol-twinlive.html) is currently only available via the [WebSocket binding](https://www.eclipse.org/ditto/protocol-bindings-websocket.html).
Which means that via HTTP it is currently not possible to address a device listening on the ""live"" channel and answering with its live state or changing its live state.

The HTTP API for that could be really simple:
* just add a query parameter `channel=live` to all existing `/things` HTTP routes
* omitting the `channel=live` query parameter would use the default `twin` perspective (the cached value) which should still be the default as the value is the cached (persisted) one

Example: Finding out whether a ""lamp"" is on:

```
# retrieve the last reported value:
GET /api/2/things/org.eclipse.ditto:fancy-lamp-1/features/lamp/properties/on
returns: true

# retrieve the live value from the device itself:
GET /api/2/things/org.eclipse.ditto:fancy-lamp-1/features/lamp/properties/on?channel=live
returns: false
# someone must have manually switched it off in the meantime
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/106/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/106,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczMjEwMzc4Mg==,ditto,732103782,106,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2020-11-23T11:31:57Z,2020-11-23T11:31:57Z,"Since live commands are implemented on devices the ditto SDK (Java AND JavaScript, capital 'and' since I fear the latter is a bit under-developed feature wise :sweat_smile:) needs to provide as much guidance / abstraction as possible to ease the agent implementation. Some initial thoughts on this:

* if a command is not yet implemented for a feature on the live channel a 400 with an ""unimplemented"" notice should be returned. 400, because I don't know if there's any better suited status. 406 sound similar, but is semantically different.
* implementing the commands needs an API to 'plug-in' implementations
* for AMQP and MQTT connected clients I suppose (at least for mqtt) that the client will need an implementation to interact with an mqtt / amqp client ?

This might be worth another issue.

My basic idea here is to have as much of the API as possible defined as ditto protocol for commands, such that I don't need to worry much about status codes and such. Opposed to the messages API where implementation is highly use-case and device specific, which is good since e.g. (vorto) operations implemented as messages follow a custom API.

I'll additionally require a python SDK for some devices which I plan to open-source / contribute if we'll be the firsts to implement this ;)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczMjEwMzc4Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/106,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczMjEzNTI1MA==,ditto,732135250,106,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-11-23T12:34:53Z,2020-11-23T12:34:53Z,"> This might be worth another issue.

I agree 👍 
This issue is about providing the already existing ""live command"" concept via the HTTP API (only triggering ""live commands"", not answering them).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczMjEzNTI1MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/106,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc2NzM5OTgxMA==,ditto,767399810,106,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2021-01-26T08:57:17Z,2021-01-26T08:57:17Z,"I've ""discovered"" an interesting use-case: I'm wanting to use the ditto commands API in ""live"" channel, but I'd also restrict users via policy from using the ""twin"" channel.

This is because I'd like the twin channel to only be accessible by the machine, while the user always uses the live-channel to alter things directly. This is to ensure that data is always going through the machine and is eventually dropped if the machine is not available. This is opposed to the desired-state pattern where I place desired state information for a device to retrieve. This is meant for situations where commands expire really fast and you don't want the machine to do anything if it's currently not accessible so you don't end up altering a state in a context you don't understand / know about.

To differentiate this from messages: to reduce the complexity of the used API I'd like to use live-commands instead of messages, because I really just need to set simple configuration values which seems a bit of overkill to use the messages API for.

What do you think?

(Also this might be worth another issue, feel free to hit me in gitter if this is too off-topic)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc2NzM5OTgxMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/106,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc2ODM1NTg3NA==,ditto,768355874,106,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-01-27T15:17:31Z,2021-01-27T15:17:31Z,"@w4tsn this is something which the current policy concept **explicitly don't distinguish** - the twin/live channel can't be separated from each other in a policy.  
For the vast majorityof  use cases we saw (and still see), this is also the expected behavior: if a user may interact with a device via live commands, he should also be able to ""fall back"" to the persisted twin state if e.g. the device is currently not offline.

I also fear that this would make (the already quite complex) policies even more complex.  
So to be honest: I have my doubts that this would be desirable for the Ditto project to provide.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc2ODM1NTg3NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/107,https://api.github.com/repos/eclipse-ditto/ditto/issues/107,ditto,290752810,107,Enforce data integrity of Features with a Definition,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2018-01-23T08:42:14Z,2021-09-21T18:01:18Z,"In #60 the Feature Definition was added to the Ditto model.
#60 however did not yet enforce that the Properties of a Feature are enforced to follow the types defined in  a Definition.

The idea of this issue is to add another Ditto microservice responsible for validating that the JSON of a Feature's Properties follow its defined Definition.
The Definition is interpreted as coordinates to an Eclipse Vorto ""Function Block"".

The Ditto team already contributed a [generator to Eclipse Vorto which generates JsonSchema](https://github.com/eclipse/vorto/pull/821) from a Vorto Function Block.

The new Ditto microservice could look up the Function Block at the public Vorto repo ""http://vorto.eclipse.org"", use its ""generator HTTP API"" in order to let the Vorto repo generate the JsonSchema and validate changes to a Feature against that JsonSchema.

In order to not always generate the JsonSchema, the generated schemas should be persisted into Ditto's database.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/107/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/107,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM2NTM2NDQxNw==,ditto,365364417,107,NA,danielFesenmeyer,11198630,Daniel Fesenmeyer,daniel.fesenmeyer@bosch.com,NA,2018-02-13T18:46:38Z,2018-02-13T18:46:38Z,"Nice idea 👍 

Just one question: When a feature is updated as a whole, the validation microservice does not need to know about the existing state of the feature. But in case of a partial update, the validation microservice would somehow have to know the existing feature state. Why not including validation into the things microservice?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM2NTM2NDQxNw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/107,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM2NTUxNTQxNw==,ditto,365515417,107,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-02-14T07:08:50Z,2018-02-14T07:08:50Z,"We need a separate persistence for the JsonSchemas anyway, so there would be a validation service anyways.
I'd like to keep the philosophy we currently have: If you don't need validation, just don't start the validation service. The Things service should not have to know anything of any other service IMO.

In case of a partial update the generated JsonSchemas just have to be fine grained enough. That way the validation service does not need the complete state of the feature (it does not even need to know about the Things service).

E.g. with following Feature properties example:

```json
{
   ""properties"": {
      ""status"": {
         ""simple"": ""foo"",
         ""complex"": {
             ""one"": 1,
             ""on"": false,
         } 
      }
   }
}
```

we would need several JsonSchemas which are generated by our Vorto generator:
* properties-schema.json
* properties-status-schema.json
* properties-status-simple-schema.json
* properties-status-complex-schema.json
* properties-status-complex-one-schema.json
* properties-status-complex-on-schema.json

And we would choose the one which matches the partially updated property.

The contributed Ditto generator in Vorto does already a part of that, it generates several JsonSchemas.
But not yet until every leaf of the hierarchy. It would currently only generate (from the example above):
* properties-schema.json
* properties-status-schema.json
* properties-status-simple-schema.json
* properties-status-complex-schema.json","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM2NTUxNTQxNw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/110,https://api.github.com/repos/eclipse-ditto/ditto/issues/110,ditto,292397571,110,Inconsistencies between API versions when modifying a Thing,ffendt,2587759,Florian Fendt,,CLOSED,2018-01-29T12:58:40Z,2018-02-05T13:37:01Z,"I encountered an Exception when changing API version of the request to modify a Thing (`PUT /things/{thingId}`):

`2018-01-29 07:26:46,057 ERROR [48c77585-47b9-470b-96e8-4f16a055f18a] o.e.d.s.t.u.a.ThingUpdater akka://ditto-cluster/system/sharding/search-updater/3/org.eclipse.ditto%3A8f63f01a-1fc0-4968-a2b1-9cf5ed9de08a - Thing to update in search index had neither a policyId nor an ACL: ImmutableThing [thingId=org.eclipse.ditto:8f63f01a-1fc0-4968-a2b1-9cf5ed9de08a, namespace=org.eclipse.ditto, acl=null, policyId=null, attributes={""a1"":""v1""}, features=ImmutableFeatures [features=[ImmutableFeature [featureId=f1, properties={""p1"":{""fpk1"":""otherValue""}}]]], lifecycle=null, revision=2, modified=null]`

I was able to trace this error back to inconsistent behavior between things and things-search, as things-search sometimes
1. is not able to update a Thing (see aforementioned Exception)
2. updates parts of the authorization that is not updated in the things service

To reproduce the problem, you can create a new Thing using API **x** and update the Thing using API **y**, which results in the following outcome:

| API x (create) | API y (update) | Result in things | Result in things-search|
| ---- | ---- | ---- | ---- |
| 1 | 1 |   👍  |  👍   |
| 1 | 2 | 👍  | ❌ |
|1 | 2 (with ACL in body) |  👍 | :x: |
| 1 | 2 (with policyId in body) |  👍 |  👍 |
|2 | 1 |  👍 |:x:|
|2 | 1 (with ACL in body) |  👍  |  👍 |
| 2 | 2 |  👍 | :x:|
| 2 | 2 (with ACL in body ) |  👍 | :x: |
| 2 | 2 (with policyId in body) |  👍 |  👍 |

The implementation should be changed to result in a consistent and predictable behavior. Since policies in v2 offer way more configuration possibilities, it should also be forbidden to change back from policies to ACL. I would suggest the following outcome:

| API x | API y | Result in things | Result in things-search|
| ---- | ---- | ---- | ---- |
| 1 | 1 |   👍  |  👍   |
| 1 | 2 | ❌  |  -  |
|1 | 2 (with ACL in body) |  ❌ | - |
| 1 | 2 (with policyId in body) |  👍 |  👍 |
|2 | 1 |  👍 (automatically adds policyId to emitted ThingModified Events) | 👍 |
|2 | 1 (with ACL in body) |  👍 (removes ACL and automatically adds policyId to emitted ThingModified Events)  |  👍 |
| 2 | 2 |  👍 (automatically adds policyId to emitted ThingModified Events)  | 👍|
| 2 | 2 (with ACL in body ) |  ❌ | - |
| 2 | 2 (with policyId in body) |  👍 |  👍 |
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/110/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/110,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM2MzA4NjQyOQ==,ditto,363086429,110,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-02-05T13:36:52Z,2018-02-05T13:36:52Z,fixed with PR #111 by @ffendt ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM2MzA4NjQyOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/114,https://api.github.com/repos/eclipse-ditto/ditto/issues/114,ditto,293819552,114,"Ditto doesn't accept the ""access_token"" of a Google OAuth2.0 authenticated user",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2018-02-02T09:10:34Z,2020-12-21T12:41:03Z,"Currently we only support the ""id_token"".
We should however also support the ""access_token"" and then make a lookup at Google's ""userinfo"" API in order to find out the Google user-id.

As this is a HTTP request, we must cache the response for as long as the JWT session is valid.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/114/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/114,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcxOTQzMjkyNw==,ditto,719432927,114,NA,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,NA,2020-10-30T09:04:26Z,2020-10-30T09:04:26Z,Any update on the issue?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcxOTQzMjkyNw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/114,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMDMzMTczOA==,ditto,720331738,114,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-11-02T08:52:03Z,2020-11-02T08:52:03Z,Not that I am aware of.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMDMzMTczOA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/114,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc0ODk1Mzk3Nw==,ditto,748953977,114,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-12-21T12:41:02Z,2020-12-21T12:41:02Z,"I think in the meantime that this is out-of-scope for Ditto - when using Google's OAuth2.0, you can also work with the `id_token` instead of the `access_token`.
So closing this ""oldie"" ..","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc0ODk1Mzk3Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/123,https://api.github.com/repos/eclipse-ditto/ditto/issues/123,ditto,297752812,123,Minimal json 1.9.5,wimjongman,180969,Wim Jongman,wim.jongman@remainsoftware.com,CLOSED,2018-02-16T11:18:42Z,2018-02-16T15:04:12Z,"Hi, I see that you use minimal json 1.9.5. Can you point me to the CQ so that our project can piggyback and maybe get mj 1.9.5 in Orbit.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/123/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/123,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM2NjI1OTc3MA==,ditto,366259770,123,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-02-16T15:04:12Z,2018-02-16T15:04:12Z,"Hi.
We currently only have a CQ for 0.9.4: https://dev.eclipse.org/ipzilla/show_bug.cgi?id=14463
As we still are in incubation and don't have a release yet, we still have ""Type A"" ""IP Due Diligence Type"".
That's why we didn't make a CQ yet for 0.9.5.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM2NjI1OTc3MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/125,https://api.github.com/repos/eclipse-ditto/ditto/issues/125,ditto,298546100,125,"Distinguish between ""desired"" and ""twin"" Feature properties",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2018-02-20T10:43:11Z,2020-06-18T14:50:06Z,"In order to add another important Digital Twin feature to Ditto it requires to distinguish between different state perspectives.

We already have the ""twin"" and ""live"" perspective being an important differentiation between ""cached state"" and ""actual live state"".
However if a user wants to configure on a Digital Twin the desired state (e.g. ""I want that this light is switched on"") no matter if it is currently receiving the desired change or not, Ditto needs a place to store that.

I would suggest that
* the ""**twin**"" perspective would always track the ""reported"" state of the device
* the ""**live**"" perspective stays as it is: by using ""live"", a device is directly addressed
   * if it cannot receive the command (e.g. in order to retrieve the ""on"" state), the user of the API gets a timeout.
* we add a new perspective ""**desired**"" (name to be discussed) which Ditto saves separately

 I would also like to propose to have a ""common API"" which handles the ""twin/live/desired"" under the hood.
E.g. that a user may trigger API calls in which she defines:
* give me the current value of the ""on"" property (first trying via ""live"", falling back to ""twin"" after a timeout when live doesn't answer in time)
* change the current value of the ""on"" property to `true` (first trying via ""live"", falling back to ""desired"" after a timeout when live doesn't answer in time)

A device may retrieve the state is has still to apply in order to be ""in sync"" with the Digital Twin.
E.g.:
* device comes online and knows it has state revision 42
* devices asks Ditto: ""hey, I am on revision 42, give me the delta of ""desired"" property changes I missed)
* Ditto answers with a diff/delta

What is your opinion on that?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/125/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/125,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3NzI4OTE5NQ==,ditto,377289195,125,NA,geglock,14750235,Gerald Glocker,,NA,2018-03-29T16:17:52Z,2018-03-29T16:17:52Z,"I played around with our existing concepts and scribbled a sequence diagram that shows a potential approach without yet extending the core of Eclipse Ditto but by accompanying it with a separate microservice that helps on the synchronization, i.e. creating a ""patch"" between desired and reported state.

This approach is not based on revision numbers but on a second ""copy"" of state - called ""Feature@desired"" for each ""Feature"" of a Thing. This second Feature is is also fully managed within Ditto and also usable by applications.

Devices/gateway have to do some ""co-operation"":
- confirm changes when they are applied
- request a ""patch"" on re-connects (or periodically)

See my proposal:

![grafik](https://user-images.githubusercontent.com/14750235/38100474-cbcff42a-337d-11e8-8f45-d10ebac8fd4f.png)
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3NzI4OTE5NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/125,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ1NzE1ODI4MQ==,ditto,457158281,125,NA,geglock,14750235,Gerald Glocker,,NA,2019-01-24T11:05:53Z,2019-01-24T11:05:53Z,"For use cases with more capable devices and not extremely limiting bandwidths to the devices the described approach above can be simplified without the need of a ""patch"" functionality:

Use two Features for each element that has to distinguish between ""reported"" and ""desired"". Name the first one just ""featureX"" and the second one ""featureX@desired"".
Let the application use both to manage these perspectives. 
This is exactly as described above.

On device side, implement a re-connect mechanism that retrieves the `featureX@desired` via a respective Ditto protocol ""retrieve"" command (see https://www.eclipse.org/ditto/protocol-specification-things-retrieve.html#retrieve-all-properties-of-a-feature) . This is needed to catch up with eventually missed updates.
After retrieving the result the device should check which configurations have to be applied by comparing them to it's known state. After successful applying, send respective ""modify"" commands on the `featureX` (without `@desired)`. Optionally the device could in addition to that also send ""delete"" commands to remove properties of `featureX@desired` to indicate that there is no difference between reported and desired.

The discussed issue here would then be an optimization that tries to save bandwidth and potentially also automates the process of sending the change to the device on each re-connect. But you could use this approach already for now without waiting for this issue.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ1NzE1ODI4MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/125,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzMjEwMTgyOA==,ditto,532101828,125,NA,sophokles73,5682135,Kai Hudalla,,NA,2019-09-17T07:40:29Z,2019-09-17T07:40:29Z,"Based on the concepts implemented in Hono, it seems desirable for Ditto to be able to react to telemetry/event messages from devices that contain a time-till-disconnect property which is used in Hono to indicate that a device is *online* and willing to receive commands. Ditto could use this trigger to send pending patch/update command(s) to the device via Hono. If Ditto uses a request/response command for that purpose, it would also get notified about the outcome of processing the command on the device.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzMjEwMTgyOA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/125,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzMzE2MjIyOA==,ditto,533162228,125,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-09-19T14:40:03Z,2019-09-19T14:40:03Z,"We added an issue #492 in order to being able to reflect the Hono ttd information in Ditto's digital twins.
Sending patch/update commands based on desired state (the feature this issue is about) would be another step (the holy grail? ;)) which I think will be quite challenging as we would have to define means in order to find out when exactly and for which devices to send what information upon connection.

With #492, IoT applications however can react on Hono's _online indications_ and send a command down to the device themselves.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzMzE2MjIyOA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/125,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU4MTQyOTIxMQ==,ditto,581429211,125,NA,BobClaerhout,3315222,Bob Claerhout,,NA,2020-02-03T14:05:12Z,2020-02-03T14:05:12Z,"As stated during the conf call last time, we are very much interested in this feature. @thjaeckle asked me to write down my thoughts about this. Here we go:  
- We will be using this to send messages to the devices coming from the application as documented in the comment from @geglock.
- Our devices send and receive binary payload messages. This implies some sort of translator is in between hono and ditto (https://github.com/eclipse/ditto/issues/492). We are looking into Vorto for this since our binary payload is quite complicated. I don't know whether this is useful information here, but it somewhat describes our setup.
- What does this ""request patch"" look like if our device is sending binary payload?
- Will there be some mechanism to determine which feature@desired will result in a downlink and which feature does not result in a downlink? Some clarification: in some cases the feature has more of a functional meaning. Say you have temperature sensor somewhere which reports the temperature in a feature. The application decides the temperature should change but of course the sensor is not capable to do that. Therefore this should not result in a downlink command but a warning/notification in the business application. See next point for possible solution to this.
- [This example](https://www.eclipse.org/ditto/basic-feature.html#vorto-example) shows how the ditto object can use a vorto model in it's definition. How do these definitions relate to generating downlinks? Based on the (non-)existence of the configuration and/or the operation functionblock, we can hold back the downlink command. However, if we are working with a separate feature (@desired), how does this work together? Should we have multiple definitions? Would be nice if both projects could integrate on this and have the possibility to co-exist without a hard requirement for each other.
- Can we already agree on the used convention? Right now we have a use case where we already want to set the desired state and compare them in the business application. Would be nice to have the correct naming convention already. However, this greatly depends on the previous point as well.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU4MTQyOTIxMQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/125,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU4MTc3MDAzNQ==,ditto,581770035,125,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-02-04T06:59:01Z,2020-02-04T06:59:01Z,"Thanks @BobClaerhout for your input.
I think we should split up this (rather very large) issue and see the following sub-parts.

# sub parts

## Part 1: Persisting ""desired"" state and providing API for that

* enhance the `ThingPersistenceActor` by - in addition to `twin` - persisting `desired` feature properties
* provide API (e.g. HTTP, but also Ditto Protocol) in order to manage/access the `desired` view
   * could e.g. in case of HTTP be a query param `desired`
* no ""magic"" is applied anywhere, this is just an alternative view on a thing
   * no patch/delta calculation
   * no automatic ""downlink"" message containing delta upon device connection


## Part 2: requesting a diff from twin/desired view

* add and handle command(s) (and an HTTP API) requesting a diff
   * use case: to be invoked by a device when it connects in order to retrieve its ""missed"" `desired` changes to apply
   * this would be a Ditto Protocol message, this has nothing to do with binary payload, this is plain JSON which could be e.g. transformed by Ditto's JavaScript based payload mapping (@BobClaerhout, you asked that ;))
* add and handle commands which ""resets"" the `desired` view for when the reported (`twin`) was updated

tbd:
* it does not make sense to create a diff on outdated `twin` data, so I assume that the API would require the device to always either
   * send its `twin` state upon connection (at least the parts the device is interested in diffs for) - @BobClaerhout: that could be the ""mechanism to determine"" which `desired` feature would create a downlink delta message
   * send its last known revision number upon connection
      * downside on that is that Ditto would have to load all historic events between the requested last known revision number and the current `desired` -> Ditto currently does not keep that data but removes it

## Part 3: automated downlink delta for connected devices

Currently I don't know if we even can or want support that to be honest - as mentioned in ""Part 2"" this does only make sense if the device says something about its currently known state .. and that way a automatic mechanism will never work out-of-the-box because it operates on outdated ""reported"" data of a connected device.


# Can we already agree on the used convention?

Before we discuss that I would like to discuss and get the community's input on some alternatives we have.
Please also think about more positives and negatives for each solution, I just started with the ones which came into my mind.
Maybe someone also sees another alternative.

I will gladly enhance this list with community input.


# Implementation alternatives for Part 1

## `@desired` as additional feature

Like described already in this issue above.

```json
{
  ""features"": {
    ""lamp"": {
      ""definition"": [ ""org.eclipse.ditto:Lamp:1.0.0"" ],
      ""properties"": {
        ""on"": true
      }
    },
    ""lamp@desired"": {
      ""definition"": [ ""org.eclipse.ditto:Lamp:1.0.0"" ],
      ""properties"": {
        ""on"": false
      }
    }
  }
}
```

`+`
+ is currently possible by convention
+ already existing features with `@desired` suffix could be supported when Ditto eventually adds this feature
+ policy may be written in a way which defines different access rights for twin/desired features

`-`
- payload duplication (e.g. of the definition)
- `feature` and `feature@desired` would not even have to share the same `definition` -> big potential for mistakes
- when applying Vorto model for `feature@desired` the ""required"" would have to be ignored - as desired properties must be optionally settable,
  so if we strictly apply JsonSchema, another schema for the `@desired` feature would have to be generated setting all ""required"" fields to optional
- `@desired` features must be excluded when using the ""twin"" API and the other way around


## `@desired` on property level

```json
{
  ""features"": {
    ""lamp"": {
      ""definition"": [ ""org.eclipse.ditto:Lamp:1.0.0"" ],
      ""properties"": {
        ""on"": true,
        ""on@desired"": false
      }
    }
  }
}
```

`+`
+ is currently possible by convention
+ already existing feature properties with `@desired` suffix could be supported when Ditto eventually adds this feature
+ it does not always make sense to define a complete feature as @desired, only some properties
+ defines fine grained which deltas should be sent downlink
+ Ditto Vorto generator could be enhanced to generate `<property-name>@desired` with same type as `<property-name>` and always optional
+ policy may be written in a way which defines different access rights for twin/desired properties
+ almost no payload duplication

`-`
- `@desired` properties must be excluded when using the ""twin"" API and the other way around

Impl. ideas:
* We could add a special `Predicate<JsonField>` (similar to `FieldType`) for all properties ending with `@desired`
   * that way the `toJson()` of a Thing could use this in order to either 
      * only include non-`@desired` tagged properties
	  * only include `@desired` tagged properties
	  * include all, `@desired` and non-`@desired` tagged properties
   * that could be used at HTTP API level to select the channel e.g. for GETs


## `desired` not visible in thing JSON

This approach would basically save an additional `desired` thing in the persistence.

Twin:
```json
{
  ""features"": {
    ""lamp"": {
      ""definition"": [ ""org.eclipse.ditto:Lamp:1.0.0"" ],
      ""properties"": {
        ""on"": true
      }
    }
  }
}
```

Desired Twin:
```json
{
  ""features"": {
    ""lamp"": {
      ""definition"": [ ""org.eclipse.ditto:Lamp:1.0.0"" ],
      ""properties"": {
        ""on"": false
      }
    }
  }
}
```

`+`
+ internally handled what is the ""twin"" and what ""desired twin""
+ ""twin"" and ""desired twin"" could potentially even have different `_modified` timestamps and `_revision` counters
+ Ditto Vorto generator would also have to treat the properties of the ""desired twin"" as ""optional""

`-`
- is currently NOT possible by convention
- massive duplication (e.g. of the definition)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU4MTc3MDAzNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/125,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU5NzU3NjkwOQ==,ditto,597576909,125,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2020-03-11T11:19:53Z,2020-03-11T11:19:53Z,"@thjaeckle I myself like the approach ""`@desired` on property level"" the most out of the proposed solutions. With a write permission on the actual property and a read permission on the `@desired` property there is no circularity. On low bandwith devices it is important to not receive another message when the actual state is set and only receive a message if the desired state is set.

We also observe a difference in sending desired states over live or twin channel. Let me give you my user story to clarify this.

A user (through a frontend) or microservice wants to influence the device. It may do this through the digital twin or the live channel. There are (at least) two cases I can think of right now:

1. The state should be applied immediately and is only valid for the current actual state (e.g. user invokes it directly through a UI or microservice computes the desired state from current state)
2. The state may be applied at any time and has no dependencies
3. The state may be applied at any time, but has dependencies (to complex right now to follow from my point of view)

We solve the first case right now by using live messages, so we have a command/response API and are able to leverage timeouts and do the computation based on the methods (which might not refer to a single property per sé). Another solution would be to set properties over the live channel with a more limited API also resulting in a loss of the desired state if the device is offline (which is desired in this case).

In the second case we want to set a desired state for properties, which will result in a success for this ""correlation"", but may fail when the state is applied. We then would have to emit an event message or something similar. I first thought, that another channel would be good to filter out only @desired messages to reduce bandwith, but this could also be achieved via policies. A device may only have read on it's desired state properties but not on the actual ones having only write permissions on them.

I think we can further make a distinction between desired state of configuration or status. A configuration@desired may be set directly and have or have no side effects. If a status is set however, this implies some more complex computation (maybe also configuration changes invoked by the device) to meet the desired status state. I'm just pointing this out right now, but I don't have any more ideas or thoughts on this at the moment. It's just fascinating :)

Other Ideas
---

* the @desired property could hold an object of the form `{ value: any, _modified: date }` to get a bit more context of single properties

I really don't like the duplication of the last approach and it's error potentials around e.g. 'definition' and the vorto model.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU5NzU3NjkwOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/125,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYwNTA3OTU1NA==,ditto,605079554,125,NA,nicodeceulaer,570357,Nico De Ceulaer,nico.de.ceulaer@gmail.com,NA,2020-03-27T15:59:24Z,2020-03-27T15:59:24Z,"@thjaeckle When using vorto to define the twin schema, there seems to already be a logical split up between configuration/status/events/operations.
Following that logic, it makes sense to only apply the desired twin split for the `configuration` block:
```
{
    ""definition"": ""com.bosch.iot.suite.examples.digitaltwin:DigitaltwinExample:1.0.0"",
    ""attributes"": {
        ""modelDisplayName"": ""DigitaltwinExample""
    },
    ""features"": {
        ""Device"": {
            ""definition"": [
                ""com.bosch.iot.suite.examples.digitaltwin:D100:1.0.0""
            ],
            ""properties"": {
                ""status"": {
                    ""temperature"": 0.0
                },
                ""configuration"": {
                    ""threshold"": 0.0
                },
                ""configuration@desired"": {
                    ""threshold"": 0.0
                }
            }
        }
    }
}
```
But maybe I'm missing something in my first steps in the world of Vorto ?
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYwNTA3OTU1NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/125,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYwNTE0OTgwMQ==,ditto,605149801,125,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-03-27T17:44:49Z,2020-03-27T17:44:49Z,"@nicodeceulaer that would be correct if Ditto would always rely on Vorto's models. But that's not the case (a definition is completely optional and may also reference another type model), so we can't assume that there is a configuration section at all.

I would like to completely leave the semantics of what is a property useful to have a desired state to the data modeler and applications using Ditto. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYwNTE0OTgwMQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/125,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYwOTcxMTIzNA==,ditto,609711234,125,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2020-04-06T10:28:49Z,2020-04-06T10:28:49Z,"It just came to my mind, that we could use approach 1 `@desired feature` together with approach 3 in the way that ditto could handle the desired twin internally, but the interface to it is done via @desired. This would mean that it can be implemented with current methods but the underlaying data-structure could then allow additional things that are only possible, if the desired state is kept in it's own entity. @thjaeckle what do you think?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYwOTcxMTIzNA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/125,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYwOTc4NDg3MQ==,ditto,609784871,125,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-04-06T13:11:41Z,2020-04-06T13:11:41Z,"@w4tsn that sounds for me like choosing the worst stuff from approach 1 (problems with Vorto defintion, etc.) and 3 (much effort, duplication) :D
Meanwhile, personally, I would go with approach 2, if we would start with that issue. This however seems to be not around the corner, to be honest.

What could also be another approach, which might be interesting for solving other problems as well:

### Managing metadata for scalar JSON fields

Idea: add another ""_meta"" field which copies the JSON structure, but uses a Json object on the JSON leaves where additional meta information like modification timestamp, revision and desired state are located:

```json
{
  ""thingId"": ""org.eclipse.ditto:foo1"",
  ""policyId"": ""org.eclipse.ditto:foo1"",
  ""features"": {
    ""lamp"": {
      ""definition"": [ ""org.eclipse.ditto:Lamp:1.0.0"" ],
      ""properties"": {
        ""on"": true
      }
    }
  },
  ""_meta"": {
    ""features"": {
      ""lamp"": {
        ""definition"": {
          ""lastModified"": ""..."",
          ""revision"": 42
         },
        ""properties"": {
          ""on"": {
            ""lastModified"": ""..."",
            ""revision"": 50,
            ""desired"": false
          }
        }
      }
    }
}
```

Just another idea which might come in very useful for other topics (e.g. updates based on the modification timestamp of a single value) as well ..","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYwOTc4NDg3MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/125,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0NjA2OTM5MQ==,ditto,646069391,125,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-06-18T14:50:06Z,2020-06-18T14:50:06Z,"We'll close this longly discussion about different formats/requirements, etc. and start over with #696 in order to track the overall concept.
This feature addition is an integral part of a digital twin framework and will be quite some work, so this is just to have a better management of the topic.

Issue #697 shall be the one I mentioned above being the **Part 1: Persisting ""desired"" state and providing API for that**.
We had another great idea for the format and we can of course continue our discussion there.

My last comment was already moved to another issue: #680 in which adding additional metadata for feature properties is tracked.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0NjA2OTM5MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/126,https://api.github.com/repos/eclipse-ditto/ditto/issues/126,ditto,301438589,126,Reduce network load for cache-sync of authorization-data,danielFesenmeyer,11198630,Daniel Fesenmeyer,daniel.fesenmeyer@bosch.com,CLOSED,2018-03-01T15:06:16Z,2018-05-23T12:29:22Z,"We currently use Akka Distributed Data for synchronizing a authorization-cache (thing-cache, policy-cache) between all services which either read (search, gateway) or update (things, policies) this data.
This works fine, but creates unnecessary network load because the whole cache is distributed to all shards, even if a shard does not need the data. Another disadvantage of the current approach is that the ""Akka Distributed Data"" cache cannot be cleared, which may cause memory problems in the long run.

In this task, we should at least address the following issues:
- remove policy-cache from search: sync via events and full-sync fallback (without cache) has been tested and works fine
- replace ""Akka Distributed Data"" with a local cache per shard, holding only the data relevant for this shard
    - implement the cache as an LRU cache with a configurable maximum size
   - the cache-entries should be lazy-loaded on first access
    - update the cache whenever the cached data changes (e.g. by Events via PubSub), the things-service and policy-service should no longer write to the cache actively
    - to make sure that the cache is eventually consistent even when events get lost, let the cache entries expire after a configurable time: a re-load will be necessary on next access
    - to further optimize memory usage, remove entries from the cache which have not been accessed for a configurable time

Caffeine seems to be a good choice for a local cache implementation: https://github.com/ben-manes/caffeine","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/126/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/126,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM5MTMyODQ3Ng==,ditto,391328476,126,NA,danielFesenmeyer,11198630,Daniel Fesenmeyer,daniel.fesenmeyer@bosch.com,NA,2018-05-23T12:28:53Z,2018-05-23T12:28:53Z,Implemented by PR https://github.com/eclipse/ditto/pull/163.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM5MTMyODQ3Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/129,https://api.github.com/repos/eclipse-ditto/ditto/issues/129,ditto,302596029,129,Enhance existing AMQP-bridge with AMQP 0.9.1 connectivity,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2018-03-06T07:47:51Z,2018-04-25T14:47:50Z,"Currently the amqp-bridge can connect to AMQP 1.0 endpoints (like for example Eclipse Hono).
We also want to support connecting to AMQP 0.9.1 brokers (e.g. the commonly used RabbitMQ) in order to  add another interface for interacting with Ditto via the Ditto Protocol.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/129/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/129,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM4NDMxNDI1Ng==,ditto,384314256,129,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-04-25T14:47:50Z,2018-04-25T14:47:50Z,Resolved by PR #141 ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM4NDMxNDI1Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/130,https://api.github.com/repos/eclipse-ditto/ditto/issues/130,ditto,302598327,130,Support mapping arbitrary message payloads in AMQP-bridge,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2018-03-06T07:57:44Z,2018-04-25T14:47:32Z,"The AMQP-bridge currently expects that all messages it receives are already in Ditto Protocol (JSON).
That means that if Ditto connects for example to Eclipse Hono, the AMQP-bridge can only make sense of data sent in our defined protocol.

That is a problem for various reasons:
* the Ditto Protocol is not designed to be lightweight - as JSON and with the included data it is quite verbose
* devices connecting to Eclipse Hono and sending their data e.g. via MQTT should not be aware of the Ditto Protocol - they should just send ""what"" data should be changed to ""which"" value

Ditto therefore wants to support a first easy ""mapping"" of those payloads:
* new mappings should be added dynamically at runtime (without the need to restart the AMQP-bridge)
* the mapping should follow the mantra: ""keep simple things simple, make hard things possible""
* mappings must be executed ""sandboxed"": as the mappings could be defined in a programming language, it must be ensured that they don't interfere with the operation of the AMQP-bridge service or any other mappings

Our idea is to define mappings in JavaScript which is executed inside the JVM with as much sandboxing as possible.

Any other ideas?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/130/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/130,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3MTQzOTQ0MQ==,ditto,371439441,130,NA,danielFesenmeyer,11198630,Daniel Fesenmeyer,daniel.fesenmeyer@bosch.com,NA,2018-03-08T10:00:13Z,2018-03-08T10:00:13Z,What do you think about applying these mappings to the websocket channel also? It might be a bit easier and faster to test the mappings.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3MTQzOTQ0MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/130,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3MTQ0MzQ4NA==,ditto,371443484,130,NA,danielFesenmeyer,11198630,Daniel Fesenmeyer,daniel.fesenmeyer@bosch.com,NA,2018-03-08T10:15:05Z,2018-03-08T10:15:05Z,"I would suggest to provide the JSONata library in our Javascript sandbox. It seems to be a very powerful helper for JSON transformations.
The user should decide whether she uses JSONata or ""plain Javascript"" (or a combination?).

JSONata is used/provided by several widely used tools such as Node-RED and ELK stack. And there is an online JSONata exerciser for trying out mappings: http://try.jsonata.org/","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3MTQ0MzQ4NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/130,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3MTQ2NDM1MA==,ditto,371464350,130,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-03-08T11:45:06Z,2018-03-08T11:45:06Z,"Adding mappings to WS could be beneficial as well, but I wouldn't do it in the first step.
Testing the mappings is IMO a task for a separate tool / web application (e.g. a simple html+javascript you can run locally).

I already had a look at JSONata because I also think it's an awesome tool to work with JSON data.
But I had some issues getting it to work in a Java environment (e.g. via Rhino engine) as the library was just too big and also had dependencies.

And basically this would just be ""syntactic sugar"" for working with special payloads (JSON based) - there is nothing you can't do with plain JavaScript ;)
JavaScript also works quite well with JSON ;)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3MTQ2NDM1MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/130,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3MTc0MDMwOA==,ditto,371740308,130,NA,geglock,14750235,Gerald Glocker,,NA,2018-03-09T07:57:55Z,2018-03-09T07:57:55Z,"I think that transformations for the WS channel could be beneficial, but I consider them less important. The WebSocket channel is mainly targeted at Web development or ""capable"" devices/gateways and these can do transformations/mappings on their side quite easily.
The AMQP channel is the main channel for massive device connections (e.g. via Eclipse Hono) and especially for devices with small footprints which cannot do transformations on their own.

Regarding JSONata: 
I also noted that it is quite ""big"" (~50k javascript minified). But at least it does **not** contain any dependencies  (see https://github.com/jsonata-js/jsonata/blob/master/package.json). For complex json-to-json transformations it would a good option.
In general I consider ""template""-based approaches as nice but not essential. They are normally meant as option to define logic when no usage of scripting is possible. But in Ditto we plan to provide scripting as an option and so there is no hard requirement.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3MTc0MDMwOA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/130,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3Mzc3MDcxMQ==,ditto,373770711,130,NA,ameinhardt,26243798,Axel Meinhardt,,NA,2018-03-16T16:34:48Z,2018-03-16T16:34:48Z,"I'm also interested in this transformation, in order to being able to use [PPMP (see specification)](http://www.eclipse.org/unide/specification/measurement-message#messageDetail) to ditto format. I'd be happy to try out the java or javascript transformation.

Regarding JSONata: in my experience, the devDependency [babel-plugin-transform-runtime](https://github.com/jsonata-js/jsonata/blob/dc2c849f379004a7228e20fa95d4c3d03fe6fb4b/package.json#L39) is not pure dev, but actually adds it's code to the output compilation. That version still includes [babel-runtime](https://github.com/babel/babel/blob/v6.23.0/packages/babel-plugin-transform-runtime/package.json#L12) includes [regenerator-runtime](https://github.com/babel/babel/blob/v6.22.0/packages/babel-runtime/package.json#L10) includes [facebook regenerator still with PATENTS clause](https://github.com/facebook/regenerator/blob/v0.10.0/PATENTS), which might not be appropriate for every company.
Only [babel 7 resolves to MIT-licensed transpiler](https://github.com/babel/babel/commit/d6db5fb1e14bb1b7bd59f806c7eae3900a984111#diff-7f5561cc60854021d1a8bd8d7303400d)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3Mzc3MDcxMQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/130,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM4NDMxNDE0Mg==,ditto,384314142,130,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-04-25T14:47:32Z,2018-04-25T14:47:32Z,Resolved by PR #141 ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM4NDMxNDE0Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/134,https://api.github.com/repos/eclipse-ditto/ditto/issues/134,ditto,306735961,134,Connet Ditto and Hono on AMQP protocol,kuzuilker,20397224,ILKER KUZU,kuzuilker@gmail.com,CLOSED,2018-03-20T05:41:31Z,2019-04-11T16:42:43Z,"Hello. I'm trying to use hono and ditto. Hono and ditto already running on my computer. But i can't find any document Amqp connection. I found devops command but i can't access this api. Because it's in sandbox. I start docker on ditto/docker file and open my browser. I'm writing;
-localhost/8081    opened
-localhost/8081/api opened 
-localhost/8081/devops not found
I start docker on ditto/docker/sandbox file and open my browser. I'm writing;
-localhost/8081    
-localhost/8125
-ditto.eclipse.org 
they can't opened. 
how can i connect hono and ditto on amqp protocol and talking each other?
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/134/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/134,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3NDQ5ODQ3Nw==,ditto,374498477,134,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-03-20T07:15:56Z,2018-03-20T07:15:56Z,"Hi there.

The sandbox is our instance running at https://ditto.eclipse.org - there you won't be able to open a connection to Hono as we secured that with a password only known to us Ditto comitters.

I just found out that we did not start the `amqp-bridge` in the docker-compose.yml yet and fixed that, so it should work now.

So on your local machine it is possible to connect to a Hono as described in the docs:
https://www.eclipse.org/ditto/installation-operating.html#create-a-new-amqp-bridge-connection

* start Hono (I'm not an expert in Hono, I guess also start it via Docker compose)
* start Ditto via `docker-compose up -d` in the docker/ folder
* once started, execute the described HTTP request:
   * POST http://localhost:8080/devops/piggyback/amqp-bridge
   * use the described payload, the Hono uri is probably a local one, like e.g.: `""uri"": ""amqp://user:password@localhost:5672""`

Check the logs of Ditto `docker-compose logs -f` for errors/other messages.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3NDQ5ODQ3Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/134,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3NDUxNDQxNA==,ditto,374514414,134,NA,kuzuilker,20397224,ILKER KUZU,kuzuilker@gmail.com,NA,2018-03-20T08:31:09Z,2018-03-20T08:31:09Z,"Hi again. 

I tried to your suggestions. 

Port changed 8080 to 8081.
And i run ditto. 
I paste my browser to this link ""http://localhost:8081/devops/piggyback/amqp-bridge"" username:devops password:foobar.

I got a 403 error. 
I tried to your suggestions. 

I paste my browser to this link ""http://localhost:8080/devops/piggyback/amqp-bridge""  

There are no results. trying to connect link.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3NDUxNDQxNA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/134,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3NDU0OTc3NQ==,ditto,374549775,134,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-03-20T10:35:57Z,2018-03-20T10:35:57Z,"Pasting to the browser won't work as this only does a `GET` request.
You need a HTTP client which does a `POST` request. For example [Postman](https://www.getpostman.com) or cURL on the command line (bash).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3NDU0OTc3NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/134,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3NDU1NDI5OQ==,ditto,374554299,134,NA,kuzuilker,20397224,ILKER KUZU,kuzuilker@gmail.com,NA,2018-03-20T10:52:25Z,2018-03-20T10:52:25Z,I used the postman post method but I still face the same situation.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3NDU1NDI5OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/134,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3NDU4MDQ0NA==,ditto,374580444,134,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-03-20T12:31:04Z,2018-03-20T12:31:04Z,"Hi.
Could you please pull again the latest changes?
We found that that the routes were missing from the ninx.conf","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3NDU4MDQ0NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/134,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3NDU5ODM2NA==,ditto,374598364,134,NA,kuzuilker,20397224,ILKER KUZU,kuzuilker@gmail.com,NA,2018-03-20T13:31:56Z,2018-03-20T13:31:56Z,"I add nginx.conf file:


    # devops
    location /devops {
      auth_basic                    ""DevOps Authentication required"";
      auth_basic_user_file          nginx-devops.htpasswd;

      proxy_pass                    http://gateway:8080/devops;
        proxy_http_version            1.1;
      proxy_set_header              Host                $http_host;
      proxy_set_header              X-Real-IP           $remote_addr;
      proxy_set_header              X-Forwarded-For     $proxy_add_x_forwarded_for;
      proxy_set_header              X-Forwared-User     $remote_user;
      proxy_set_header              x-ditto-dummy-auth  ""nginx:${remote_user}"";	
    }


and add docker-compose.yml file:

       - ./nginx-devops.htpasswd:/etc/nginx/nginx-devops.htpasswd:ro

I do that because nginx.conf file doesn't have ""devops""  so: http://localhost:8081/devops.

Now, i solved 403 error. But i can't login http://localhost:8081/devops page (browser and postman).

username: devops in nginx-devops.htpasswd file.but what is devops username? 

I try to add ditto:ditto(hashed)  nginx-devops.htpasswd but it didn't work. 

I can't still login http://localhost:8081/devops. 

and i'm adding my changed codes .zip file.
[Untitled Folder 2.zip](https://github.com/eclipse/ditto/files/1829484/Untitled.Folder.2.zip)


","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3NDU5ODM2NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/134,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3NDU5ODgyMw==,ditto,374598823,134,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-03-20T13:33:27Z,2018-03-20T13:33:27Z,"just remove these lines from nginx.conf:
```
auth_basic                    ""DevOps Authentication required"";
auth_basic_user_file      nginx-devops.htpasswd;
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3NDU5ODgyMw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/134,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3NDYwNTE0NQ==,ditto,374605145,134,NA,kuzuilker,20397224,ILKER KUZU,kuzuilker@gmail.com,NA,2018-03-20T13:52:15Z,2018-03-20T13:52:15Z,It can't work. Still want username and password.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3NDYwNTE0NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/134,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3NTI3MDY1NQ==,ditto,375270655,134,NA,kuzuilker,20397224,ILKER KUZU,kuzuilker@gmail.com,NA,2018-03-22T11:25:45Z,2018-03-22T11:25:45Z,"Hello again. 

Devops issue solved by last code update. I can post something to  /devops/piggyback/amqp-bridge but connection failed to Amqp. 


This my post:

{
    ""targetActorSelection"": ""/system/sharding/amqp-connection"",
    ""headers"": {},
    ""piggybackCommand"": {
        ""type"": ""amqp.bridge.commands:createConnection"",
        ""connection"": {
            ""id"": ""helloworld"",
            ""authorizationSubject"": ""ADMINISTRATE"",
            ""failoverEnabled"": false,
            ""uri"": ""amqps://consumer@HONO:verysecret@127.0.0.1:5671"",
            ""sources"": [
              ""telemetry/DEFAULT_TENANT""
            ]
        }
    }
}

This response:


{
    ""?"": {
        ""-1"": {
            ""type"": ""devops.responses:errorResponse"",
            ""status"": 502,
            ""serviceName"": null,
            ""instance"": null,
            ""payload"": {
                ""status"": 502,
                ""error"": ""amqp.bridge:connection.failed"",
                ""message"": ""The Connection with ID 'helloworld' failed to connect."",
                ""description"": ""The requested Connection could not be connected due to an internal failure of the underlying driver.""
            }
        }
    }
}","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3NTI3MDY1NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/134,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3NTI3MTI0OA==,ditto,375271248,134,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-03-22T11:28:07Z,2018-03-22T11:28:07Z,"Does your local Hono instance run with SSL? Because you have the connection string `amqps://consumer@HONO:verysecret@127.0.0.1:5671`.
I guess not - the string should probably be: `amqp://consumer@HONO:verysecret@127.0.0.1:5672`","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3NTI3MTI0OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/134,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3NTI3NzYwNw==,ditto,375277607,134,NA,kuzuilker,20397224,ILKER KUZU,kuzuilker@gmail.com,NA,2018-03-22T11:52:05Z,2018-03-22T11:52:05Z,No. I tried two case. But i stil get same error.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3NTI3NzYwNw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/134,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3NTQwMjM3OA==,ditto,375402378,134,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-03-22T18:00:03Z,2018-03-22T18:00:03Z,"Did you expose the port of hono in Docker?
Are you sure the credentials are correct? 
Seems to be a connection problem to hono. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3NTQwMjM3OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/134,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3NzkwMjcyNA==,ditto,377902724,134,NA,kuzuilker,20397224,ILKER KUZU,kuzuilker@gmail.com,NA,2018-04-02T10:27:05Z,2018-04-02T10:27:05Z,"ditto succesfully connect hono(sandbox) on amqp bridge.

if hono and ditto running on your local machine. you must give acces permit to hono ip.
like this: 

mvn spring-boot:run -Drun.profiles=authentication-impl -Drun.arguments=--hono.auth.amqp.bindAddress=<your local ip adress>,--hono.auth.amqp.keyPath=target/certs/auth-server-key.pem,--hono.auth.amqp.certPath=target/certs/auth-server-cert.pem,--hono.auth.amqp.trustStorePath=target/certs/trusted-certs.pem

 after doing this ditto directly connect hono. 

problem solved. thank you @thjaeckle. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3NzkwMjcyNA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/134,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ4MjE5MjkxMA==,ditto,482192910,134,NA,radhya,6238119,Radhya Sahal,,NA,2019-04-11T16:42:36Z,2019-04-11T16:42:36Z,"Hi KUZU, 

I have  a problem in connecting Hono to Ditto which similar to your posted issue 

 
I follow your discussion and I am still having a problem to connect to 

 http://localhost:8080/devops/piggyback/amqp-bridge

And when I added devops to nginx.conf, Ditto doesn't work!  
Can you put more details about solving devops problem? 
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ4MjE5MjkxMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/134,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ4MjE5Mjk4MQ==,ditto,482192981,134,NA,radhya,6238119,Radhya Sahal,,NA,2019-04-11T16:42:43Z,2019-04-11T16:42:43Z,"Hi KUZU, 

I have  a problem in connecting Hono to Ditto which similar to your posted issue 

 
I follow your discussion and I am still having a problem to connect to 

 http://localhost:8080/devops/piggyback/amqp-bridge

And when I added devops to nginx.conf, Ditto doesn't work!  
Can you put more details about solving devops problem? 
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ4MjE5Mjk4MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/135,https://api.github.com/repos/eclipse-ditto/ditto/issues/135,ditto,308838592,135,Remove JavaScript libraries of documentation from repo,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2018-03-27T06:33:33Z,2018-09-26T14:17:25Z,"Use a CDN instead (if even possible):
```
documentation/src/main/resources/docson/lib/*
documentation/src/main/resources/docson/docson.js
documentation/src/main/resources/docson/docson-swagger.js
documentation/src/main/resources/docson/widget.js
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/135/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/135,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyNDczMjQ1Ng==,ditto,424732456,135,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-09-26T14:17:25Z,2018-09-26T14:17:25Z,Not feasible and not required legally,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyNDczMjQ1Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/137,https://api.github.com/repos/eclipse-ditto/ditto/issues/137,ditto,311181820,137,AMQP message reject  send from hono to ditto ,mhumoglu,16153266,,,CLOSED,2018-04-04T10:59:07Z,2018-04-06T08:15:28Z,"Hi All,

I connected between hono and ditto on AMQP bridge.

 But I cant send AMQP message ( add thing etc.)  from hono to ditto using hono.vertx.example.HonoTelemetrySender (I modifed json object).
I took following exception.
-------------------------------------------------------------------------------------------------------------------------------------------
amqp-bridge_1    | 2018-04-04 12:40:23,616 INFO  [ID:AMQP_NO_PREFIX:TelemetrySenderImpl-14] o.e.d.s.a.m.CommandProcessorActor akka://ditto-cluster/system/sharding/amqp-connection/28/honoverysecrethono/pa/amqpCommandProcessor-honoverysecrethono - Got DittoRuntimeException 'things:thing.notmodifiable' when command via AMQP was processed: The Thing with ID 'appstacle:xdk_14' could not be modified as the requester had insufficient permissions (WRITE is required).
-------------------------------------------------------------------------------------------------------------------------------------------

Policy information:
}
""entries"": {
      ""owner"": {
        ""subjects"": {
          ""nginx:ditto"": {
            ""type"": ""nginx basic auth user""
          }
        },
        ""resources"": {
          ""thing:/"": {
            ""grant"": [""READ"", ""WRITE"",""ADMINISTRATE""],
            ""revoke"": [""READ"", ""WRITE"",""ADMINISTRATE""]
          },
          ""policy:/"": {
            ""grant"": [""READ"", ""WRITE"",""ADMINISTRATE""],
            ""revoke"": []
          },
          ""message:/"": {
            ""grant"": [""READ"", ""WRITE"",""ADMINISTRATE""],
            ""revoke"": [""READ"", ""WRITE"",""ADMINISTRATE""]
          }
        }
      }
    },
	""modified"" : true
}
-------------------------------------------------------------------------------------------------------------------------------------------
sender code :
messageSender.send(HonoExampleConstants.DEVICE_ID, null, ""{\""topic\"": \""appstacle/xdk_""+value+""/things/twin/commands/create/\"",\""headers\"": {},\""path\"": \""/\"",\""value\"": {\""__schemaVersion\"": 2,\""__lifecycle\"": \""ACTIVE\"",\""_revision\"": 1,\""_namespace\"": \""appstacle\"",\""thingId\"": \""appstacle:xdk_""+value+""\"",\""policyId\"": \""appstacle:policy_deneme14\"",\""attributes\"": {\""location\"": {\""latitude\"": 44.673856,\""longitude\"": 8.261719}},\""features\"": {\""accelerometer\"": {\""properties\"": {\""x\"": 3.141,\""y\"": 2.718, \""z\"": 1,\""unit\"": \""g\""}}}}}"", ""application/json"",
            token, capacityAvail -> {
                capacityAvailableFuture.complete(null);
            }).map(delivery -> {
                nrMessageDeliverySucceeded.incrementAndGet();
                messageDeliveredFuture.complete(null);
                return (Void) null;
            }).otherwise(t -> {
                System.err.println(""Could not send message: "" + t.getMessage());
                nrMessageDeliveryFailed.incrementAndGet();
                result.completeExceptionally(t);
                return (Void) null;
            });



Regards.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/137/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/137,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3ODU2NzM1NQ==,ditto,378567355,137,NA,jokraehe,12512262,Johannes Schneider,johannes.schneider@bosch.io,NA,2018-04-04T11:25:22Z,2018-04-04T11:25:22Z,"Hi @mhumoglu 

the authorization subject ""nginx:ditto"" has no effective permission to WRITE a Thing using the Policy from your example. You are granting and revoking WRITE at the same time and a revoke is always considered stronger within ditto.
Assuming that ""nginx:ditto"" is configured as the authorization subject for the amqp connection, removing the revoked permissions on the thing:/ resource should fix it.

Regards,
Johannes","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3ODU2NzM1NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/137,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3ODkxNjI4Ng==,ditto,378916286,137,NA,mhumoglu,16153266,,,NA,2018-04-05T12:17:38Z,2018-04-05T12:17:38Z,"How to change this permission on  nginx:ditto? 

I removed revoked on the thing:/ but problem continues



{""policyId"":""appstacle:deneme2"",""entries"":{""owner"":{""subjects"":{""nginx:ditto"":{""type"":""nginx basic auth user""}},""resources"":{""policy:/"":{""grant"":[""READ"",""WRITE""],""revoke"":[]},""thing:/"":{""grant"":[""READ"",""WRITE""],""revoke"":[]},""message:/"":{""grant"":[""READ"",""WRITE""],""revoke"":[]}}},""observer"":{""subjects"":{""nginx:some-users"":{""type"":""a group of users""},""nginx:observer-client"":{""type"":""technical client""}},""resources"":{""thing:/features/featureY"":{""grant"":[""READ""],""revoke"":[]},""thing:/features/featureX"":{""grant"":[""READ""],""revoke"":[]}}}}}","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3ODkxNjI4Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/137,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3OTAxNDk0Mg==,ditto,379014942,137,NA,jokraehe,12512262,Johannes Schneider,johannes.schneider@bosch.io,NA,2018-04-05T17:30:28Z,2018-04-05T17:30:28Z,The Thing you want to create references a Policy with ID `appstacle:policy_deneme14` but the Policy you provided has another ID `appstacle:deneme2`. I think it's a typo and you should reference `appstacle:deneme2` in your Thing.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3OTAxNDk0Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/137,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3OTA1NzQ0NQ==,ditto,379057445,137,NA,mhumoglu,16153266,,,NA,2018-04-05T19:55:50Z,2018-04-05T19:55:50Z,"I created new policy( appstacle:deneme2) for testing  two different policy but same json object.

**Telementry sender code :** 

messageSender.send(HonoExampleConstants.DEVICE_ID, null, ""{""topic"": ""appstacle/xdk_""+value+""/things/twin/commands/create/"",""headers"": {},""path"": ""/"",""value"": {""__schemaVersion"": 2,""__lifecycle"": ""ACTIVE"",""_revision"": 1,""namespace"": ""appstacle"",""thingId"": ""appstacle:xdk""+value+"""",""policyId"": ""appstacle:deneme2"",""attributes"": {""location"": {""latitude"": 44.673856,""longitude"": 8.261719}},""features"": {""accelerometer"": {""properties"": {""x"": 3.141,""y"": 2.718, ""z"": 1,""unit"": ""g""}}}}}"", ""application/json"",
token, capacityAvail -> {
capacityAvailableFuture.complete(null);
}).map(delivery -> {
nrMessageDeliverySucceeded.incrementAndGet();
messageDeliveredFuture.complete(null);
return (Void) null;
}).otherwise(t -> {
System.err.println(""Could not send message: "" + t.getMessage());
nrMessageDeliveryFailed.incrementAndGet();
result.completeExceptionally(t);
return (Void) null;
});


policy : 

{""policyId"":""appstacle:deneme2"",""entries"":{""owner"":{""subjects"":{""nginx:ditto"":{""type"":""nginx basic auth user""}},""resources"":{""policy:/"":{""grant"":[""READ"",""WRITE""],""revoke"":[]},""thing:/"":{""grant"":[""READ"",""WRITE""],""revoke"":[]},""message:/"":{""grant"":[""READ"",""WRITE""],""revoke"":[]}}},""observer"":{""subjects"":{""nginx:some-users"":{""type"":""a group of users""},""nginx:observer-client"":{""type"":""technical client""}},""resources"":{""thing:/features/featureY"":{""grant"":[""READ""],""revoke"":[]},""thing:/features/featureX"":{""grant"":[""READ""],""revoke"":[]}}}}}","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3OTA1NzQ0NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/137,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3OTE0OTIxOQ==,ditto,379149219,137,NA,jokraehe,12512262,Johannes Schneider,johannes.schneider@bosch.io,NA,2018-04-06T05:06:22Z,2018-04-06T05:06:22Z,Which authorization subject did you configure in the amqp connection? `nginx:ditto`?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3OTE0OTIxOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/137,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3OTE3MzIyNw==,ditto,379173227,137,NA,mhumoglu,16153266,,,NA,2018-04-06T07:35:48Z,2018-04-06T07:35:48Z,"I wrote ADMINISTRATE in authorization subject . I've written  ""nginx:ditto"" in authorization subject and it's running now.

Thank you for your interest

Regards ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM3OTE3MzIyNw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/140,https://api.github.com/repos/eclipse-ditto/ditto/issues/140,ditto,315852609,140,docker-compose configuration,StefanoMagni66,38528862,,,CLOSED,2018-04-19T12:20:32Z,2018-04-26T13:59:27Z,"Using docker version 18.03.0-ce and docker-compose 1.21.00 the docker-compose.yml ""command"" configuration is not overwritten.
This cause a wrong startup sequence of services and crash of all ditto services.

The ""command"" line have to be replaced with ""entrypoint"" configuration:

command: sh -c ""sleep 10; java -jar /starter.jar""
entrypoint: sh -c ""sleep 15; java -jar /opt/ditto/starter.jar""


","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/140/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/140,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM4MjcxNDU1MA==,ditto,382714550,140,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-04-19T12:25:59Z,2018-04-19T12:25:59Z,"Hi Stefano.

Thanks for reporting 👍 we will look into it.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM4MjcxNDU1MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/140,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM4NDY1MTA3MA==,ditto,384651070,140,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-04-26T13:59:27Z,2018-04-26T13:59:27Z,"We fixed that in #143 
The wrong command was only working for images built via Maven, not the official published ones.
Thanks again for reporting","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM4NDY1MTA3MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/149,https://api.github.com/repos/eclipse-ditto/ditto/issues/149,ditto,319554280,149,Enhance subscribing for change notifications by optional filter,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2018-05-02T13:33:47Z,2018-09-17T11:35:00Z,"When currently subscribing for Events/change notifications via

* WebSocket
* SSE
* Connectivity

the consumer always gets all change notifications it is allowed to see.

On SSE this can be reduced by providing specific `thingId`s and `fields` so that changes are only published if the `thingId` match or a change was affected by a specified `field`.

The subscription should and could be more fine-grained.
The idea is to support adding an optional `filter` defined via Ditto's RQL syntax it already uses [for the search](https://eclipse.org/ditto/intro-overview.html).

That way the following subscription rules could be applied:
* notify me of a change only if the `thingId` starts with `org.eclipse.ditto:*` : `like(thingId,""org.eclipse.ditto:*"")`
* notify me of a change only if the feature `temperature` was affected by this change: `exists(feature/temperature)`
* notify me of a change only if in one change the `temperature` was greater 25: `gt(feature/temperature/properties/value,25)`
* notify me of changes in the namespace `org.eclipse.ditto:*` affecting the `temperature`: `and(like(thingId,""org.eclipse.ditto:*""),exists(feature/temperature))`","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/149/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/152,https://api.github.com/repos/eclipse-ditto/ditto/issues/152,ditto,319896288,152,Fix broken documentation links,kvico,16590653,Vico Klump,,CLOSED,2018-05-03T12:17:35Z,2018-05-15T08:16:31Z,"The following internal documentation links are broken:
```basic-connections.md``` 
* ```[Manage connections](/connectivity-manage-connections.html)``` 
* ```[Payload Mapping Documentation](/connectivity-mapping.html)```

```connectivity-manage-connections.md```:
* ```[payload mapping](/connectivity-mapping.html)```
* ```[Connections](/basic-connections.html)```

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/152/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/152,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM4NjI4MjU4NA==,ditto,386282584,152,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-05-03T12:43:36Z,2018-05-03T12:43:36Z,"Thanks for reporting, Vico .. we'll look into it","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM4NjI4MjU4NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/152,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM4NjMyNTk5Mg==,ditto,386325992,152,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-05-03T15:00:25Z,2018-05-03T15:00:25Z,"Fixed it, thanks again 👍 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM4NjMyNTk5Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/153,https://api.github.com/repos/eclipse-ditto/ditto/issues/153,ditto,320682939,153,GDPR compliance for project site,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2018-05-07T05:59:59Z,2018-05-15T08:16:31Z,"As from the mail from 04.05.

> requirements:
> 1.	All project web pages must include a footer that prominently links back to key pages, and a copyright notice.  The following minimal set of links must also be included on the footer for all pages in the official project website:
> a.	Main Eclipse Foundation website (http://www.eclipse.org);
> b	Privacy policy (http://www.eclipse.org/legal/privacy.php);
> c.	Website terms of use (http://www.eclipse.org/legal/termsofuse.php);
> d.	Copyright agent (http://www.eclipse.org/legal/copyright.php); and
> e.	Legal (http://www.eclipse.org/legal).
> 2.	Approved Eclipse logos are available on the Eclipse Logos and Artwork page: https://eclipse.org/artwork/
> 3.	A user must be requested to give their consent, and explicit consent must be given by the user before a project website can start using cookies. This requirement also includes cookies used by 3rd party services such as, but not limited to: Google Analytics, Google Tag Manager, and social media widgets. 
> 4.	Project websites must not collect and/or store and/or display personal information.
> 5.	Project websites using 3rd party services such as, but not limited to, google analytics must be explicit about which company or companies have access to the data collected. For example, the project website must identify on their website the individuals or organizations who have access to google analytics data.

- [x] 1. All project web pages must include a footer that prominently links back to key pages, and a copyright notice. 
- [x] 2. Approved Eclipse logos are available on the Eclipse Logos and Artwork page -> update to new Eclipse foundation logo
- [x] 3. A user must be requested to give their consent, and explicit consent must be given by the user before a project website can start using cookies.
- [x] 4. Project websites must not collect and/or store and/or display personal information.
- [x] 5. Project websites using 3rd party services such as, but not limited to, google analytics must be explicit about which company or companies have access to the data collected.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/153/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/153,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM4NzEyMzg4Mg==,ditto,387123882,153,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-05-07T16:34:22Z,2018-05-07T16:34:22Z,"Looks like for point 5 we have to remove the Google Analytics tracking on the project site again, see:
https://bugs.eclipse.org/bugs/show_bug.cgi?id=534384#c6

Which is no problem at all - the Eclipse IoT WG wanted to have Google Analytics, not us","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM4NzEyMzg4Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/153,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM4OTA1NzU5OA==,ditto,389057598,153,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-05-15T06:30:11Z,2018-05-15T06:30:11Z,"I applied the Eclipse Foundation cookie consent script from https://www.eclipse.org/eclipse.org-common/themes/solstice/docs/index.php#gdpr

I also switched to the Eclipse Foundation Google Tag Manager ID, so we won't be able to see anything in Google Analytics from now on.

The Google Tag Manager cookie is only used if the user gives his consent for cookie usage.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM4OTA1NzU5OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/161,https://api.github.com/repos/eclipse-ditto/ditto/issues/161,ditto,325336593,161,Use Akka artery remoting as replacement for Netty 3.10,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2018-05-22T15:04:42Z,2018-10-10T15:30:35Z,"We cannot use Netty 3.10 due to licensing issues (as mentioned in [CQ 16316](https://dev.eclipse.org/ipzilla/show_bug.cgi?id=16316)).
As Netty 3.10 is used by default by Akka and that won't change (as mentioned in [this Akka issue](https://github.com/akka/akka/issues/23733#issuecomment-340480247)) we have to use the UDP (or TCP)-based Aeron remoting as a replacement (which is stable in our used Akka version).

Netty 3.10 must then be excluded from our dependencies.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/161/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/161,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM5MjQ2MzA2Mg==,ditto,392463062,161,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-05-28T08:48:00Z,2018-05-28T08:48:00Z,"Blocked by https://github.com/eclipse/openj9/issues/2000

Apparently the new artery/aeron based remoting in Akka serializes ActorPaths differently than before with Netty 3.10 - that causes an `ArrayIndexOutOfBoundsException` when running in OpenJ9 in a clustered environment.

As a result no cluster can form. We'll have to wait for a bugfix release of OpenJ9 until we proceed with using the new remoting.
Or we could switch back to plain OpenJDK+Hotspot JVM.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM5MjQ2MzA2Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/161,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM5MjczOTgzMg==,ditto,392739832,161,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-05-29T11:12:36Z,2018-05-29T11:12:36Z,"Also opened a ticket at Akka as they rely on the Hotspot JVM specific behavior of `String`:
https://github.com/akka/akka/issues/25161

Staying on Netty is not an option (due to the mentioned licensing issues), so if neither OpenJ9 nor Akka supports this in a way, we have no choice but to use OpenJDK + Hotspot JVM again.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM5MjczOTgzMg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/161,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM5Njg1MTAyMQ==,ditto,396851021,161,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-06-13T08:04:24Z,2018-06-13T08:04:24Z,Waiting until Akka 2.5.14 which fixes our issue on OpenJ9.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM5Njg1MTAyMQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/161,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwOTYwNTUwOQ==,ditto,409605509,161,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-08-01T14:59:35Z,2018-08-01T14:59:35Z,"In order to use the new remoting we have to have a discussion first:
* what limits to we apply on Thing/Policy sizes? we have to have a limit and the bigger it is the more problems we get in remoting (e.g. because we have to ""reserve"" the native memory aeron remoting uses )
* I would vote for rather small limits (KiB vs. MiB)
   * AWS IoT has a limit of 8 KiB per ""shadow"" (where 4 KiB is for desired and 4 KiB for actual state)
   * Azure IoT Hub for example has a limit of 256 KiB per ""message"" device-to-cloud and 64 KiB per message cloud-to-device

as 256 KiB are already ~ 10.000 lines in a rather complex JSON genereated with [this tool](https://www.json-generator.com/) and I doubt that this makes sense for a digital twin in our scope, I would even limit it further

My proposal:
Thing/Policy size limit: **64 KiB**
Search response limit to get with one search request: **256 KiB**
Message size limit: **256 KiB**","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwOTYwNTUwOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/161,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwOTYxMTc0Nw==,ditto,409611747,161,NA,danielFesenmeyer,11198630,Daniel Fesenmeyer,daniel.fesenmeyer@bosch.com,NA,2018-08-01T15:16:58Z,2018-08-01T15:16:58Z,"Nice research 👍 I think your proposed limitations are a good compromise.

Just two remarks/questions (I'm not sure whether this is easily possible):
* Thing responses might actually have 2*64 KiB size, when the ""_policy"" fields is specified
* For search responses I would calculate the maximum response size based on the requested item count if possible (I think currently the maximum allowed item count is 200). I.e., max = (requested item count) * maxThingPayload. Where maxThingPayload might be 2*64 KiB if we support the ""_policy"" field selector for search.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwOTYxMTc0Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/161,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwOTYxNTQ2NQ==,ditto,409615465,161,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-08-01T15:27:35Z,2018-08-01T15:27:35Z,"Indeed, you're right with the ""_policy"" field - when we enforce this limit, we would have to look into a Thing to create and check for the ""_policy"" field - if it is present, 2*64 KiB may be used.
When retrieving a Thing with ""_policy"" this should not be a problem as we would have to configure the max. cluster message size to a higher value in any case (e.g. to the proposed 256 KiB for messages).

Hm, the search is a problem - 200 * 2 * 64 KiB are 25 MiB.
To configure such a huge cluster message size would cost us a lot of memory to reserve (gigabytes for each cluster node).
Therefore I would rather report an error (something like ""result set to large, please consider selecting only required fields or use a smaller page size"") to the user when a search result gets bigger than 256 KiB.
This is a corner case - someone who has such big Things (64KiB ~ 2.500 lines in a complex JSON) has to do compromises IMHO.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwOTYxNTQ2NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/161,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwOTYxODQ0NA==,ditto,409618444,161,NA,danielFesenmeyer,11198630,Daniel Fesenmeyer,daniel.fesenmeyer@bosch.com,NA,2018-08-01T15:36:10Z,2018-08-01T15:36:10Z,I see. I actually do not yet know the config options of the new remoting. Limiting the search responses to 256 kiB and returning an appropriate error sounds ok if there is no simple other solution.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwOTYxODQ0NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/161,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxMDk2OTQ2NA==,ditto,410969464,161,NA,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,NA,2018-08-07T07:59:48Z,2018-08-07T07:59:48Z,"We could stream search result inside the cluster (200 x 64 KiB messages instead of 1 x 25 MiB message).

It'd enable [JSON streaming](https://doc.akka.io/docs/akka-http/current/routing-dsl/source-streaming-support.html) for search queries with large amounts of results.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxMDk2OTQ2NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/161,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxNzY5NzAxNQ==,ditto,417697015,161,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-08-31T15:17:35Z,2018-08-31T15:17:35Z,Currently blocked by https://github.com/akka/akka/issues/25469,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxNzY5NzAxNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/161,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyMTM5MzE2OA==,ditto,421393168,161,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-09-14T15:22:06Z,2018-09-14T15:22:06Z,Status: Akka bug is closed and will be released in next release 2.5.17,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyMTM5MzE2OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/161,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyNTkwNzYxNg==,ditto,425907616,161,NA,danielFesenmeyer,11198630,Daniel Fesenmeyer,daniel.fesenmeyer@bosch.com,NA,2018-10-01T13:28:54Z,2018-10-01T13:28:54Z,Status update: Akka 2.5.17 has been released last week: https://akka.io/blog/news/2018/09/27/akka-2.5.17-released,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyNTkwNzYxNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/164,https://api.github.com/repos/eclipse-ditto/ditto/issues/164,ditto,325975538,164,Support Hono's command&control in Ditto connectivity,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2018-05-24T06:03:25Z,2018-11-26T07:48:28Z,"Basically the ""target"" configuration for AMQP 1.0 endpoints should already work,
Hono however defines that the AMQP target address is in the form `control/${tenant_id}/${device_id}`.

Therefore Ditto has to support dynamically determining the `device_id` which should be placed inside the address.
E.g. by applying some kind of ""variable"" replacement where following things could be referenced:
* namespace
* local thing id
* header fields","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/164/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/164,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxMzU5Mzg2OQ==,ditto,413593869,164,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-08-16T15:52:11Z,2018-08-16T15:52:11Z,"As Hono requires some header fields to be set for command messages, those will also need to be added.
See: https://www.eclipse.org/hono/api/command-and-control-api/

## for commands
mandatory:
* subject
* message-id
* reply-to

optional:
* content-type
* correlation-id

## For command responses

mandatory:
* correlation-id
* status

optional:
* content-type","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxMzU5Mzg2OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/164,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ0MTU0NjY4NA==,ditto,441546684,164,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-11-26T07:48:20Z,2018-11-26T07:48:20Z,Closed by #295 ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ0MTU0NjY4NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/167,https://api.github.com/repos/eclipse-ditto/ditto/issues/167,ditto,326983299,167,"Replace own built cluster bootstrapping with ""Akka Management""",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2018-05-28T10:47:52Z,2018-06-11T14:15:30Z,"Currently in the `ClusterUtil` Ditto implements the initial forming of a cluster by itself (based on DNS and only working in docker swarm).

The [Akka Management](https://developer.lightbend.com/docs/akka-management/current/index.html) library includes:
* Akka Cluster bootstrap
    * based on DNS (probably similar to our approach in Docker swarm)
    * based on [Kubernetes API](https://developer.lightbend.com/docs/akka-management/current/discovery.html#discovery-method-kubernetes-api)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/167/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/167,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM5MzE3OTkzOQ==,ditto,393179939,167,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-05-30T14:19:06Z,2018-05-30T14:19:06Z,CQs for akka-management required,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM5MzE3OTkzOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/174,https://api.github.com/repos/eclipse-ditto/ditto/issues/174,ditto,330167048,174,"Ditto get twin with ""_revision""",mhumoglu,16153266,,,CLOSED,2018-06-07T08:25:09Z,2018-06-07T10:39:26Z,"Hi All,

I want to get values of any twin with ""_revision"".

how can I do that ? or can this be ?

Regards 

Mhumoglu
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/174/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/174,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM5NTMzNzI4NA==,ditto,395337284,174,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-06-07T08:28:22Z,2018-06-07T08:28:22Z,"Only the twin has a twin-global ""_revision"" - the single values of the twin don't have a revision on their own.

At the HTTP-API you can simply query with the ""fields"" parameter for the revision, e.g.:
```
GET /api/2/things/your-namespace:your-id?fields=thingId,attributes,_revision
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM5NTMzNzI4NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/174,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM5NTM0MzM1Mw==,ditto,395343353,174,NA,mhumoglu,16153266,,,NA,2018-06-07T08:48:25Z,2018-06-07T08:48:25Z,"I can't run the code below or similar codes( eq(_revision,54) )
As far as I understand
GET  /api/2/things/your-namespace:your-id?fields=_revision=51'

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM5NTM0MzM1Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/174,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM5NTM0NDYyMQ==,ditto,395344621,174,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-06-07T08:52:45Z,2018-06-07T08:52:45Z,"Ah, you want to access the Twin in a specific `_revision`.
That is currently not possible, sorry.
You can only access the current version.

The `_revision` is only a marker for reading it only.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM5NTM0NDYyMQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/174,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM5NTM1MjE5Nw==,ditto,395352197,174,NA,mhumoglu,16153266,,,NA,2018-06-07T09:17:29Z,2018-06-07T09:17:29Z,Okay . Last a question :) does ditto has value of before update twin?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM5NTM1MjE5Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/174,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM5NTM1NDk5OA==,ditto,395354998,174,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-06-07T09:26:46Z,2018-06-07T09:26:46Z,"No, unfortunately it does not provide that at an API level.
The historical/old values are in the persistence - but are not accessible via API.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM5NTM1NDk5OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/174,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM5NTM3MjAzOQ==,ditto,395372039,174,NA,mhumoglu,16153266,,,NA,2018-06-07T10:25:55Z,2018-06-07T10:25:55Z,thank you for your information @thjaeckle ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM5NTM3MjAzOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/178,https://api.github.com/repos/eclipse-ditto/ditto/issues/178,ditto,331891145,178,Allow placeholders in the authorization context of a connection,dguggemos,15028977,Dominik Guggemos,dominik.guggemos@bosch.io,CLOSED,2018-06-13T08:25:01Z,2018-08-13T06:02:29Z,"Currently the subjects of an authorization context are defined as a fixed string, which means you have to grant this subject access to all devices of a connection. To provide more flexibility we want to introduce placeholders in the authorization subject which are replaced before the signal is processed in Ditto. 
For example you can define the authorization context of a connection as:
```
...
""authorizationContext"": [""ditto:{{ header:device-id }}""]
...
```
The placeholder `{{ header:device-id }}` is then replaced by the value of the `device-id` header . If a placeholder cannot be resolved, e.g. because the specified header is missing, the message is rejected.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/178/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/181,https://api.github.com/repos/eclipse-ditto/ditto/issues/181,ditto,333876474,181,error: Not supported platform found in manifest list,pankeshpatel,1482917,Pankesh Patel,,CLOSED,2018-06-19T23:42:45Z,2018-08-01T15:05:49Z,"Hi,

I have been firing `docker-compose up -d`.  I am facing the following error.  I am trying to install it on Ubuntu, virtual machine

![image](https://user-images.githubusercontent.com/1482917/41629642-a871038c-73f8-11e8-9046-9af092169ba7.png)
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/181/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/181,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM5ODU4OTY1NA==,ditto,398589654,181,NA,pankeshpatel,1482917,Pankesh Patel,,NA,2018-06-20T00:50:50Z,2018-06-20T00:50:50Z,"It seems that it is a mongodb and virtualbox problem. See this [report](https://github.com/docker-library/mongo/issues/232). I think in Readme file, we should explicitly mention that ditto may not be run on virtual machine ubuntu.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDM5ODU4OTY1NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/181,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwNDQwMzQ4OQ==,ditto,404403489,181,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-07-12T06:27:15Z,2018-07-12T06:27:15Z,"Hi.

That's very strange - in our team we also run MongoDB in Docker in Ubuntu VMs without problems.
Did you solve this somehow in the meantime?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwNDQwMzQ4OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/181,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwOTYwNzcyOA==,ditto,409607728,181,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-08-01T15:05:49Z,2018-08-01T15:05:49Z,"closing due to inactivty, please re-open if the question is not answered","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwOTYwNzcyOA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/193,https://api.github.com/repos/eclipse-ditto/ditto/issues/193,ditto,343870383,193,Ditto Things Snaps,zero88,10863525,zero88,,CLOSED,2018-07-24T03:24:52Z,2018-09-11T08:41:46Z,"Hello Ditto team,
I would like to know what a role of `things_snaps` table. There is very few document about that.
My data is grown too fast, in less than 24 hours, it was increase 70GB, almost data is store in `things_snaps`  table. 
```json
> db.getCollection('things_snaps').stats(1024 * 1024 * 1024)
{
        ""ns"" : ""things.things_snaps"",
        ""size"" : 225,
        ""count"" : 38962,
        ""avgObjSize"" : 6215555,
        ""storageSize"" : 91
}
```
Does any configuration and a rule to restrict it?

I'm using Ditto version `0.3.0-M1`

Thanks in advance","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/193/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/193,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwNzI4ODcxNw==,ditto,407288717,193,NA,zero88,10863525,zero88,,NA,2018-07-24T05:49:00Z,2018-07-24T05:49:00Z,"Each record in `things_snaps` ~ 10MB or more
`[conn10] warning: log line attempted (10877kB) over max size (10kB), printing beginning and end ... update things.things_snaps query:`
Is it normal for text only?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwNzI4ODcxNw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/193,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwNzI4ODc5OA==,ditto,407288798,193,NA,zero88,10863525,zero88,,NA,2018-07-24T05:49:28Z,2018-07-24T05:49:28Z,Ping pong @thjaeckle ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwNzI4ODc5OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/193,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwNzI5Mzc5MQ==,ditto,407293791,193,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-07-24T06:17:57Z,2018-07-24T06:17:57Z,"Pong ping ..
In fact there is a configuration for always having only one snapshot (and deleting the latest one):
https://github.com/eclipse/ditto/blob/master/services/things/starter/src/main/resources/things.conf#L68 (just set the environment variable `THING_SNAPSHOT_DELETE_OLD` of the ""things"" service to `true`).
You could also set `THING_EVENTS_DELETE_OLD` to `true` so that the `things_journal` collection also does not get too big.
What these flags do: every time there is a snapshot, the old snapshot and events are deleted.

The role of the snapshots collection is to reduce event replaying efforts and time.
As you probably are aware, Ditto uses [Event Sourcing](https://www.eclipse.org/ditto/basic-signals.html) persisting delta changes in `things_journal` and from time to time (e.g. each [500](https://github.com/eclipse/ditto/blob/master/services/things/starter/src/main/resources/things.conf#L63) events) one snapshot of the complete thing is done to `things_snaps`.

Your statistics says `""avgObjSize"" : 6215555` - so I doubt that each entry is 10MB or more.

What is your use case anyway? Making hundreds of changes per minute on a few things?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwNzI5Mzc5MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/193,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwNzMwODAyOQ==,ditto,407308029,193,NA,zero88,10863525,zero88,,NA,2018-07-24T07:24:25Z,2018-07-24T07:24:25Z,"Thank @thjaeckle 
Happy to seeing that. 
Actually, I just configure Ditto server for my client, so not sure his use case. I'm gathering requirements to understand what behind in a scene.
As I observe on my server, around `~1.5 seconds` ditto flush to write record in `things_snaps`, and combine with your hints, I can estimate `350 - 400 events per second`. But he said, < 10 devices and push data in ditto in every 15 mins.
It make me very confusing. I'm finding a root cause
Keep tracks and update you.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwNzMwODAyOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/193,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwOTYwNzU2Mg==,ditto,409607562,193,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-08-01T15:05:19Z,2018-08-01T15:05:19Z,"Hi @zero-88 - any updates on this?
Did you find what was producing that much data?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwOTYwNzU2Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/193,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxMDU3MDQ5OA==,ditto,410570498,193,NA,zero88,10863525,zero88,,NA,2018-08-06T02:17:39Z,2018-08-06T02:17:39Z,"Not have a chance to look up yet, I plan to do this week.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxMDU3MDQ5OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/193,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxNDE5MTMxMA==,ditto,414191310,193,NA,zero88,10863525,zero88,,NA,2018-08-20T04:01:02Z,2018-08-20T04:01:02Z,"Hello @thjaeckle,
After measure, analysis, tweak and stabilize server and `things`, I confirmed for each 1 mins, we have ~130 `PUT` request to `nginx`. So with this request volume, Ditto will introduce 130 events or more than that?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxNDE5MTMxMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/193,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxNDE5MjA4MQ==,ditto,414192081,193,NA,zero88,10863525,zero88,,NA,2018-08-20T04:08:13Z,2018-08-20T04:08:13Z,"In another hands, I catch other issues, not sure I should create other issues, just ask here first:
[AKKA OversizedPayloadException](https://github.com/akka/akka/issues/22088) and [here](https://github.com/akka/akka/issues/21729)
```
{
  ""log_1"": {
    ""container_name"": ""/ditto_things-search_1"",
    ""@timestamp"": ""2018-08-18T05:07:24.102000000+00:00"",
    ""severity"": ""ERROR"",
    ""x_correlation_id"": ""${x_correlation_id}"",
    ""logger"": ""o.e.d.s.t.u.a.ThingUpdater"",
    ""akka"": ""akka://ditto-cluster/system/sharding/search-updater/3/${thing_id}"",
    ""message"": ""Timeout after SudoRetrieveThing""
  },
  ""log_2"": {
    ""container_name"": ""/ditto_things_1"",
    ""@timestamp"": ""2018-08-18T05:07:25.000000000+00:00"",
    ""log"": ""akka.remote.OversizedPayloadException: Discarding oversized payload sent to Actor[akka.tcp://ditto-cluster@172.22.0.12:2551/system/sharding/search-updater/3/${thing_id}#2145654084]: max allowed size 10485760 bytes, actual size of encoded class org.eclipse.ditto.services.models.things.commands.sudo.SudoRetrieveThingResponse was 11184007 bytes.""
  }
}
```

WARN message:
```
{
  ""_source"": {
    ""container_name"": ""/nginx-web"",
    ""@timestamp"": ""2018-08-18T04:51:49.000000000+00:00"",
    ""method"": ""PUT"",
    ""path"": ""/api/2/things/${thing_id}/features/${feature_id} "",
    ""code"": 204,
    ""size"": 0
  },
  ""_source"": {
    ""container_name"": ""/ditto_things_1"",
    ""@timestamp"": ""2018-08-18T04:51:49.243000000+00:00"",
    ""severity"": ""INFO"",
    ""x_correlation_id"": ""${x_correlation_id}"",
    ""logger"": ""o.e.d.s.t.p.a.ThingPersistenceActor"",
    ""akka"": ""akka://ditto-cluster/system/sharding/thing/2/${thing_id}/pa"",
    ""message"": ""Successfully persisted Event <things.events:featureModified>""
  },
  ""_source"": {
    ""container_name"": ""/ditto_gateway_1"",
    ""@timestamp"": ""2018-08-18T04:51:49.246000000+00:00"",
    ""severity"": ""INFO"",
    ""x_correlation_id"": ""${x_correlation_id}"",
    ""logger"": ""o.e.d.s.g.e.d.RequestResultLoggingDirective"",
    ""akka"": """",
    ""message"": ""StatusCode of request PUT '/api/2/things/${thing_id}/features/${feature_id}' was: 204""
  },
  ""_source"": {
    ""container_name"": ""/ditto_gateway_1"",
    ""@timestamp"": ""2018-08-18T04:51:49.255000000+00:00"",
    ""severity"": ""WARN"",
    ""x_correlation_id"": ""${x_correlation_id}"",
    ""logger"": ""o.e.d.s.g.p.a.PolicyEnforcerActor"",
    ""akka"": ""akka://ditto-cluster/system/sharding/policyEnforcer/2/${thing_id}"",
    ""message"": ""Received unknown message while in 'EnforcingBehaviour': <FeatureModified [type=things.events:featureModified, thingId=${thing_id}, revision=${revision}, timestamp=${timestamp}, dittoHeaders=${header}, feature=${data}>!""
  }
}
```

I'm facing too much WARN message:
![image](https://user-images.githubusercontent.com/10863525/44319992-8a15b580-a469-11e8-83ba-b349483ac182.png)
How should I do to deal with them?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxNDE5MjA4MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/193,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxNDIwOTkyNA==,ditto,414209924,193,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-08-20T06:26:32Z,2018-08-20T06:26:32Z,"Oh, I see.
Yes, that are 130 events per minute Ditto will insert into the MongoDB. That alone is not too much.
BUT :)
`akka.remote.OversizedPayloadException: .. max allowed size 10485760 bytes, actual size of encoded class org.eclipse.ditto.services.models.things.commands.sudo.SudoRetrieveThingResponse was 11184007 bytes.`
That error message means that the size of a single Thing was ~11 MiB which is really huge. We currently have a limit of 10 MiB for messages in the Ditto cluster, so no wonder that this fails.

You can do the math what happens if there are 130 inserts per minute with 10 MiB each.

Regarding the WARN message - that one is fixed in our latest release `0.8.0-M1`.

Your client should really think about his use case, we are thinking about reducing the max. message size in the cluster to below 1 MiB due to latency and performance guarantees.
You can configure that higher if needed, but Ditto is not intended to process such huge `Things`.

If you want/need to increase the message size, you can overwrite the max message size:
https://github.com/eclipse/ditto/blob/master/services/base/src/main/resources/ditto-akka-config.conf#L93

by passing the system property `-Dakka.remote.netty.tcp.maximum-frame-size=10485760b` to all Ditto processes.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxNDIwOTkyNA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/193,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxNDI2NTY3Mw==,ditto,414265673,193,NA,zero88,10863525,zero88,,NA,2018-08-20T10:08:25Z,2018-08-20T10:08:25Z,"Thank you. I will plan to upgrade new version soon. Hope it doesn't break whole system 😄 
Back to my question:
I totally agree with you about message size should be small, I'm discussing with client to know his use case(some kinds of sensor)
However, we have one `things` greater than 10mb but I didn't see the `akka error message` related to it.
I guess this `things` is ghost, it was not captured by `nginx` server, it was raised from `ditto sync service`, maybe somehow this `things` is lost in DB, but cache some where.
```
""_source"": {
    ""container_name"": ""/ditto_things-search_1"",
    ""severity"": ""INFO"",
    ""x_correlation_id"": ""things-tags-sync-${things_id}"",
    ""logger"": ""o.e.d.s.t.u.a.ThingUpdater"",
    ""akka"": ""akka://ditto-cluster/system/sharding/search-updater/3/${things_id}"",
    ""message"": ""The Thing Tag for the thing ${things_id} has the revision 134928 which is greater than the current actor's sequence number <134836>.""
  },
```
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxNDI2NTY3Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/193,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxNzU2NTUzMA==,ditto,417565530,193,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-08-31T06:28:42Z,2018-08-31T06:28:42Z,"Is this still an open question?
`things` which are not accessed directly via the API are nevertheless synchronized in the background in order to keep the search index up-to-date. That could be the case with this one ..

Btw: We worked on limiting the max. size of things to a much smaller value in #221 which will be in the next milestone release.
I have to say again that it is not a good idea to have so huge `things`. If you choose however to deal with the side-effects of such things, you will be able to configure the limits (was a part of #221) to be whatever you want :)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxNzU2NTUzMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/193,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyMDE5MTk3Mw==,ditto,420191973,193,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-09-11T08:30:04Z,2018-09-11T08:30:04Z,Closing due to inactivity,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyMDE5MTk3Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/193,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyMDE5NTM5Mw==,ditto,420195393,193,NA,zero88,10863525,zero88,,NA,2018-09-11T08:41:46Z,2018-09-11T08:41:46Z,"Thanks for your support, @thjaeckle 
Sorry, I missed catch your last comment. No more question now. Closed it.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyMDE5NTM5Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/202,https://api.github.com/repos/eclipse-ditto/ditto/issues/202,ditto,346509195,202,"Creating a connection to hono results in ""The supplied authentication is invalid""",maximilianschwab,13770223,Maximilian Schwab,maximilian.schwab@gmail.com,CLOSED,2018-08-01T08:59:06Z,2018-08-01T14:21:19Z,"I would like to connect to my own hono and ditto instaces and followed the tutorial under https://www.eclipse.org/ditto/2018-05-02-connecting-ditto-hono.html

When I try to connect to hono I get the following error: __The supplied authentication is invalid.__

I'm using the following DevOps command:
```json
{  
   ""targetActorSelection"":""/system/sharding/connection"",
   ""headers"":{  

   },
   ""piggybackCommand"":{  
      ""type"":""connectivity.commands:createConnection"",
      ""connection"":{  
         ""id"":""hono-example-connection-123"",
         ""connectionType"":""amqp-10"",
         ""connectionStatus"":""open"",
         ""failoverEnabled"":true,
         ""uri"":""amqp://consumer@Hono:verysecret@url_to_hono:5671"",
         ""authorizationSubject"": ""ditto:ditto"",
         ""sources"":[  
            {  
               ""addresses"":[  
                  ""telemetry/org.eclipse.ditto"",
                  ""event/org.eclipse.ditto""
               ]
            }
         ],
         ""targets"":[  
            {  
               ""address"":""events/twin"",
               ""topics"":[  
                  ""_/_/things/twin/events"",
                  ""_/_/things/live/messages""
               ]
            }
         ]
      }
   }
}
```
I'm also confused about the authorizationSubject field because this field is not specified in the connections object under https://www.eclipse.org/ditto/basic-connections.html but used in another example to connect to an AMQP 1.0 endpoint https://www.eclipse.org/ditto/connectivity-protocol-bindings-amqp10.html#establishing-connecting-to-an-amqp-10-endpoint

I'm using the default user for hono and ditto, no other users are created by my own.

Help is appreciated! Thank you!","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/202/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/202,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwOTUwOTQ1OA==,ditto,409509458,202,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-08-01T09:16:59Z,2018-08-01T09:16:59Z,"Hi there.

Ah, regarding the `""authorizationSubject""` you found an inconsistency - the blog post is right, we replaced the single `""authorizationSubject""` with the `""authorizationContext""` containing an array of 
`authorizationSubject` Strings. 
We will fix the outdated documentation.

Are you sure that your Hono instance has this user `consumer@Hono` configured with that password?
I don't know if you have to create the user by yourself or if it automatically exists when starting Hono.
Can you authenticate successfully with for example the Hono client using those credentials?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwOTUwOTQ1OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/202,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwOTUyNjQwOA==,ditto,409526408,202,NA,maximilianschwab,13770223,Maximilian Schwab,maximilian.schwab@gmail.com,NA,2018-08-01T10:18:18Z,2018-08-01T10:18:18Z,"Hi again,

the user consumer@Hono is existing and I can connect with this credentials via e.g. the example code for the HonoTelemetryConsumer. Is there an defaul authorizationContext I can use or do I have to generate it? and how does such a authorizationContext look like? I also have to mention that I'm using the basic authentication with the default user ditto and the password ditto for the DevOps command, maybe thats the problem?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwOTUyNjQwOA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/202,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwOTUzMDA0Nw==,ditto,409530047,202,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-08-01T10:32:32Z,2018-08-01T10:32:32Z,"Ah, ok - that are the wrong credentials for sending a DevOps command.
Default DevOps command user is: `devops` and password is `foobar` (as configured [here](https://github.com/eclipse/ditto/blob/master/services/gateway/starter/src/main/resources/gateway.conf#L148)).

The `authorizationContext` is a list of subjects which should be applied when consuming messages from Hono.
It must contain `nginx:ditto` if you want to treat all Hono messages in the context of the default Ditto user which is added by default in the [.htpasswd](https://github.com/eclipse/ditto/blob/master/docker/nginx.htpasswd)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwOTUzMDA0Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/202,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwOTU0Mjg2OA==,ditto,409542868,202,NA,maximilianschwab,13770223,Maximilian Schwab,maximilian.schwab@gmail.com,NA,2018-08-01T11:25:39Z,2018-08-01T11:25:39Z,"Okay, with the new credentials and the authorizationContext I can send commands but when I want to test the connection I get the following response:
```json
{
    ""?"": {
        ""-1"": {
            ""type"": ""connectivity.responses:testConnection"",
            ""status"": 409,
            ""connectionId"": ""hono-example-connection-123"",
            ""testResult"": ""Connection was already created - no test possible""
        }
    }
}
```
Does this mean ditto is successfully connected to hono?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwOTU0Mjg2OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/202,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwOTU0NDMxOQ==,ditto,409544319,202,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-08-01T11:31:47Z,2018-08-01T11:31:47Z,"Testing a connection can only be done if it was not yet created.
So the connection was created, yes. But in order to find out if it is also connected, you have to send a command of `""type"": ""connectivity.commands:retrieveConnectionMetrics""` with `""connectionId"": ""yourId""`

As documented [here](https://www.eclipse.org/ditto/connectivity-manage-connections.html#retrieve-connection-metrics)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwOTU0NDMxOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/202,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwOTU5MjI0Nw==,ditto,409592247,202,NA,maximilianschwab,13770223,Maximilian Schwab,maximilian.schwab@gmail.com,NA,2018-08-01T14:21:19Z,2018-08-01T14:21:19Z,It is working now! Thanky you @thjaeckle !,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQwOTU5MjI0Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/212,https://api.github.com/repos/eclipse-ditto/ditto/issues/212,ditto,351156212,212,Problem While connecting Eclipse Ditto and Hono,shailesharya,41483772,Shailesh Arya,,CLOSED,2018-08-16T11:00:55Z,2018-08-16T17:07:06Z,"Hey There,
I'm trying to connect Eclipse Ditto and Hono but I'm getting following error
![2018-08-16 5](https://user-images.githubusercontent.com/41483772/44204756-a49e1500-a171-11e8-8107-d28f92135e04.png)
Can anyone help me with this?
Thanks.

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/212/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/212,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxMzU0ODA1Ng==,ditto,413548056,212,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-08-16T13:37:21Z,2018-08-16T13:37:21Z,"Hi.
You are absolutely right, we did not yet deploy out latest release from this week to our sandbox https://ditto.eclipse.org
Thank you for finding out that way :)
We just deployed the latest release in the sandbox which means you should now be able to create the connection.
Could you please try it out and give us feedback if it worked?

Regards
Thomas","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxMzU0ODA1Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/212,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxMzU1MzcyMg==,ditto,413553722,212,NA,shailesharya,41483772,Shailesh Arya,,NA,2018-08-16T13:54:42Z,2018-08-16T13:54:42Z,"![2018-08-16 9 _li](https://user-images.githubusercontent.com/41483772/44212795-f357a900-a189-11e8-89c6-adde064cdc4d.jpg)
It says connecting already created
thanks for your help, sir.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxMzU1MzcyMg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/212,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxMzU2MDE3MA==,ditto,413560170,212,NA,shailesharya,41483772,Shailesh Arya,,NA,2018-08-16T14:13:52Z,2018-08-16T14:13:52Z,"![2018-08-16 10](https://user-images.githubusercontent.com/41483772/44213920-87c30b00-a18c-11e8-8184-44bb24c9f88b.png)
![2018-08-16 11](https://user-images.githubusercontent.com/41483772/44213922-885ba180-a18c-11e8-9b25-f365881f98c0.png)

again it says invalid JSON format while creating payload mapping.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxMzU2MDE3MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/212,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxMzU3MTY0Mw==,ditto,413571643,212,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-08-16T14:47:27Z,2018-08-16T14:47:27Z,probably because it is no valid JSON .. did you try as suggested validating the JSON on jsonlint.com ?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxMzU3MTY0Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/212,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxMzYxNjgxNw==,ditto,413616817,212,NA,shailesharya,41483772,Shailesh Arya,,NA,2018-08-16T17:07:06Z,2018-08-16T17:07:06Z,"I did and it's valid and now I'm getting this
![screenshot 2](https://user-images.githubusercontent.com/41483772/44223236-a7fec400-a1a4-11e8-95da-5763f3c8dbf4.png)
I'm very close to connecting Hono and Ditto so will you please help me out?
HTTP 502 bad gateway means the server is down or what? 

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxMzYxNjgxNw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/214,https://api.github.com/repos/eclipse-ditto/ditto/issues/214,ditto,351457720,214,Connecting Eclipse Hono and Ditto,shailesharya,41483772,Shailesh Arya,,CLOSED,2018-08-17T05:01:17Z,2018-08-24T12:20:13Z,"Hey there,
I'm very close on connecting Eclipse Ditto and Hono the only thing left is making connection b/w hono and ditto but I'm having error says that HTTP 1.1 Bad Gateway
![screenshot 5](https://user-images.githubusercontent.com/41483772/44248521-9d761600-a208-11e8-87ab-a50a09261a51.png)
I'm having this issue while checking the status of the connection and also while opening the new connection using piggyback commands.
please help me out.
thank you.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/214/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/214,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxMzc1OTAzMQ==,ditto,413759031,214,NA,ffendt,2587759,Florian Fendt,,NA,2018-08-17T05:08:37Z,2018-08-17T05:08:37Z,"Hi there,

It seems as if the sandbox environment ran into memory issues which caused docker to kill some containers. I restarted the stack, so it shouldn't respond with 502 for now. 
Could you please try again and tell us if the connection to Hono still fails?

As for the memory issues: The sandbox environment has very limited resources to work with. We will investigate in how we can stabilize it.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxMzc1OTAzMQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/214,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxMzc2MTQ5Mg==,ditto,413761492,214,NA,shailesharya,41483772,Shailesh Arya,,NA,2018-08-17T05:27:56Z,2018-08-17T05:27:56Z,"Thanks for your help, sir.
It's working fine now.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxMzc2MTQ5Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/214,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxMzc2NDYyMw==,ditto,413764623,214,NA,shailesharya,41483772,Shailesh Arya,,NA,2018-08-17T05:50:46Z,2018-08-17T05:50:46Z,"Is there a way to connect Eclipse Hono and Ditto without using sandbox?
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxMzc2NDYyMw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/214,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxMzc2OTg1OQ==,ditto,413769859,214,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-08-17T06:23:36Z,2018-08-17T06:23:36Z,"Sure, if you don't want to use both of the sandboxes (which come with no guarantees and may loose data any time or be not available at all) you can either
* setup Ditto and Hono by yourself (e.g. on a vserver or locally depending on what you want to do)
* use the evaluation versions of the commercial services behind Ditto and Hono which can be tried out via [bosch-iot-suite.com](https://bosch-iot-suite.com)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxMzc2OTg1OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/217,https://api.github.com/repos/eclipse-ditto/ditto/issues/217,ditto,352577850,217,Documented docker-compose version is too low,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,CLOSED,2018-08-21T14:49:29Z,2018-08-22T07:14:56Z,"[Documentation](https://github.com/eclipse/ditto/blob/4f87d4cd6c79aae437ea313f0e9520334bb57126/documentation/src/main/resources/pages/ditto/installation-running.md) says docker-compose v1.14 is enough, but the [compose file](https://github.com/eclipse/ditto/blob/4f87d4cd6c79aae437ea313f0e9520334bb57126/docker/docker-compose.yml) is version 2.4, which requires docker-compose 1.21.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/217/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/217,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxNDcwMjU3NA==,ditto,414702574,217,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-08-21T14:52:01Z,2018-08-21T14:52:01Z,[README.md](https://github.com/eclipse/ditto/blob/master/README.md) already has it right,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxNDcwMjU3NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/220,https://api.github.com/repos/eclipse-ditto/ditto/issues/220,ditto,353757543,220,Add MQTT support,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,CLOSED,2018-08-24T12:08:28Z,2018-09-21T10:26:07Z,"MQTT is a super popular IoT protocol, Ditto should definitely support it!

Interoperability with [Amazon IoT](https://aws.amazon.com/iot/) weren't half bad either.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/220/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/220,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxOTM4MDQ0Nw==,ditto,419380447,220,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-09-07T09:27:33Z,2018-09-07T09:27:33Z,Can this be closed? Should be fixed by #224,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxOTM4MDQ0Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/220,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxOTM4MTAxNw==,ditto,419381017,220,NA,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,NA,2018-09-07T09:29:40Z,2018-09-07T09:29:40Z,#224 does not interoperate with Amazon IoT due to lack of client certificate authentication.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxOTM4MTAxNw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/220,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyMzQzNTE1Nw==,ditto,423435157,220,NA,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,NA,2018-09-21T07:04:41Z,2018-09-21T07:04:41Z,Fixed by #235.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyMzQzNTE1Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/221,https://api.github.com/repos/eclipse-ditto/ditto/issues/221,ditto,353757828,221,Define and enforce max. entity sizes in Ditto cluster,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2018-08-24T12:09:28Z,2018-08-31T06:26:42Z,"Currently Ditto does not really define a size limit for its `Thing`s, `Policy`s and `Message`s, etc.
The cluster config currently defines a message limit of max. 10 MiB, so that ""kind of"" is the current limit.
With such a high message limit there are some issues regarding memory consumption, latency and also scalability.

Digital Twins in Ditto are not meant to be that large.
Other IoT platforms like AWS IoT or Azure IoT define a limit of **8 KiB** for their twins/shadows.

Ditto also needs to define a limit (as also discussed in #161), so this is what we want to do:

Add configurable limits (so those who really know what they do can adjust those limits):
* Thing: 100 KiB
* Policy: 100 KiB
* Message: 250 KiB

Apply these limits when using Ditto's APIs and respond with status code 413 ""Request Entity too large""

-> As a result Ditto can use an cluster message limit of 256 KiB - no messages in the Ditto cluster must exceed that size","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/221/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/224,https://api.github.com/repos/eclipse-ditto/ditto/issues/224,ditto,355189536,224,Connect to Kafka in Ditto connectivity service,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2018-08-29T14:31:27Z,2019-03-27T13:52:14Z,"Currently our ""connectivity"" service supports several protocols:
* AMQP 1.0 -> connecting to AMQP 1.0 endpoints (e.g. Eclipse Hono)
* AMQP 0.9.1 -> connecting to AMQP 0.9.1 brokers (e.g. RabbitMQ)
* MQTT (currently in the works: #220) -> conencting to MQTT brokers (e.g. Eclipse Mosquito)

The next useful messaging technology which is used a lot in cloud scenarios woud be [Apache Kafka](https://kafka.apache.org/).
That way Ditto would be able to:
* consume Ditto protocol messages (e.g. commands/messages/...) from a Kafka topic
* publish Ditto protocol messages (e.g. events/responses/messages/...) to a Kafka topic

And all that would benefit from the already existing payload mapping and scalability of the ""connectivity"" service.
As there also is an ""Akka Stream Alpakka"" implementation for Kafka, this should be quite easy to do:
https://doc.akka.io/docs/akka-stream-kafka/current/home.html","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/224/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/224,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3MDU5MzU0Mw==,ditto,470593543,224,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-03-07T16:24:54Z,2019-03-07T16:24:54Z,"Created CQs:
* kafka-clients: https://dev.eclipse.org/ipzilla/show_bug.cgi?id=19161
* lz4-java: https://dev.eclipse.org/ipzilla/show_bug.cgi?id=19162
* zstd-jni: https://dev.eclipse.org/ipzilla/show_bug.cgi?id=19163
* snappy-java: https://dev.eclipse.org/ipzilla/show_bug.cgi?id=19164
* akka-stream-kafka: https://dev.eclipse.org/ipzilla/show_bug.cgi?id=19166","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3MDU5MzU0Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/228,https://api.github.com/repos/eclipse-ditto/ditto/issues/228,ditto,357650041,228,Reconnect not working correctly for AMQP 0.9.1 Connections,ffendt,2587759,Florian Fendt,,CLOSED,2018-09-06T13:15:48Z,2018-09-26T14:18:13Z,"When playing around with AMQP 0.9.1 Connections, i found a bug in the reconnect mechanisms of Ditto.

If the AMQP broker (to which a connection is pointing) is unreachable for a while, Ditto will try to reestablish the connection and finally succeed when the broker is reachable again. 
However, after the connection is established, consuming or publishing won't work for the connection until the service is restarted.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/228/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/228,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxOTkwODIzMw==,ditto,419908233,228,NA,jufickel-b,17162397,Juergen Fickel,,NA,2018-09-10T13:16:56Z,2018-09-10T13:16:56Z,Closed with PR https://github.com/eclipse/ditto/pull/230.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQxOTkwODIzMw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/234,https://api.github.com/repos/eclipse-ditto/ditto/issues/234,ditto,361726190,234,Erase data without downtime,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,CLOSED,2018-09-19T12:32:26Z,2018-12-03T14:04:59Z,"[GDPR](https://en.wikipedia.org/wiki/General_Data_Protection_Regulation) requires erasure of data on request of data subject. Right now data erasure entails manual removal of documents from the database, which cannot happen live because Ditto would keep writing events for the erased entities. Some coordinated message-blocking, actor-stopping and data-erasing mechanism would much simplify a Ditto operator's compliance effort.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/234/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/239,https://api.github.com/repos/eclipse-ditto/ditto/issues/239,ditto,363134995,239,Conditionally applying policies,sreedhap,426021,Sreedharan Palanichamy,,CLOSED,2018-09-24T12:58:31Z,2018-11-08T15:59:48Z,"Hi folks, my team currently has a use case to apply policies conditionally. 

**Scenario** 
We want to restrict access based on the value of one of the significant attributes of a thing - like their _**type**_ - _air-conditioner_ or _elevator_.

[AWS Policies]( https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition.html) implement a '_Condition_' element for a similar requirement.

1. Does Ditto have something like this (couldn't find it in documentation so far) or do you folks have any thoughts around this?

2. Is '_namespace_' attribute for a thing a good fit for including important attributes like the type of a thing, as mentioned in the example above? If so, then namespace in policy would take care of this I guess. 
:thinking: 
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/239/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/239,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyNDIyMjgxOA==,ditto,424222818,239,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-09-25T06:30:58Z,2018-09-25T06:30:58Z,"Hi there.
That's an interesting scenario there - can you share what your team is building with Ditto? We are always looking forward in hearing from people using Ditto.

Ditto's policies unfortunately do not have a comparable ""dynamic condition"" concept. Until now they purely are based on subjects and JSON hierarchy.
It would be technically **very** challenging to put such conditions in our policies (as we for example also apply the policies when using the ""search"" functionality - you cannot find something which you are not allowed to 'READ').

I would however suggest another approach in solving your problem (using the JSON hierarchy).
Model your Things with features `air-conditioner` and `elevator`, e.g.:
```json
{
  ""thingId"": ""org.eclipse.ditto.example:aircond1"",
  ""policyId"": ""org.eclipse.ditto.example:common-policy"",
  ""features"": {
    ""air-conditioner"": {
      ""properties"": {
        ""room-temperature"": 25.7,
        ""desired-temperature"": 22,
        ""cooling"": true
      }
    }
  }
}

{
  ""thingId"": ""org.eclipse.ditto.example:elevator4711"",
  ""policyId"": ""org.eclipse.ditto.example:common-policy"",
  ""features"": {
    ""elevator"": {
      ""properties"": {
        ""current-floor"": 2,
        ""next-floor"": 5,
        ""current-speed"": 45.7
      }
    }
  }
}
```

That way you can have the same policy the two things both use, e.g.:
```json
{
  ""policyId"": ""org.eclipse.ditto.example:common-policy"",
  ""entries"": {
    ""admin"": {
      ""subjects"": {
        ""nginx:admin"": {
          ""type"": ""nginx basic auth user: may modify policy + read and write all Things""
        }
      },
      ""resources"": {
        ""thing:/"": {
          ""grant"": [""READ"", ""WRITE""],
          ""revoke"": []
        },
        ""policy:/"": {
          ""grant"": [""READ"", ""WRITE""],
          ""revoke"": []
        },
        ""message:/"": {
          ""grant"": [""READ"", ""WRITE""],
          ""revoke"": []
        }
      }
    },
    ""air-conditioner-user"": {
      ""subjects"": {
        ""nginx:air-cond-user"": {
          ""type"": ""nginx basic auth user - may read+write feature air-conditioner""
        },
        ""nginx:air-cond-user-2"": {
          ""type"": ""nginx basic auth user - may read+write feature air-conditioner""
        }
      },
      ""resources"": {
        ""thing:/features/air-conditioner"": {
          ""grant"": [""READ"", ""WRITE""],
          ""revoke"": []
        }
      }
    },
    ""elevator-user"": {
      ""subjects"": {
        ""nginx:elevator-user"": {
          ""type"": ""nginx basic auth user - may read+write feature elevator""
        }
      },
      ""resources"": {
        ""thing:/features/elevator"": {
          ""grant"": [""READ"", ""WRITE""],
          ""revoke"": []
        }
      }
    }
  }
}
```

So in a nutshell: Use the ""type"" information as features in order to be able to use the resulting structure in your policy.

Regarding your second question: no, namespace is not a good place to put such information as that is nothing the policy looks at when checking access.

I hope that helps :)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyNDIyMjgxOA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/239,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyNjIyMzMwOQ==,ditto,426223309,239,NA,sreedhap,426021,Sreedharan Palanichamy,,NA,2018-10-02T10:20:40Z,2018-10-02T10:20:40Z,"Hi @thjaeckle , thanks a lot for the detailed answer. 
We aren't using Ditto at the moment, we already have a few homegrown services, and we'd like to align with Ditto specifications, so we can make a switch to Ditto at some point when we have the capacity. 

Regarding your suggestion, feature looks like a good place to model the type of thing. But this implementation only restricts the user at this feature level, what if we don't want to give the user access to whole thing including top level meta attributes, so they would not show up in the search results at all?

Thanks,
Sree & @jriehn pairing.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyNjIyMzMwOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/239,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyNzA1MjQ1OQ==,ditto,427052459,239,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-10-04T15:00:24Z,2018-10-04T15:00:24Z,"Hi again. 
Well, in the example policy I suggested above, the user `elevator-user` will not have access to anything else inside the Thing other than the feature `elevator`. Sounds to me that this is exactly what you want.

The search works like this:
* if the user may `READ` anything inside a thing (e.g. the feature `elevator` from the example), the thing would be returned in the search 
* but: the search does not return the complete thing (e.g. its attributes), but only the parts the user is allowed to `READ`
* the search additionally ensures that the user may only search on fields on which he has the `READ` permission

Does that make sense? :)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyNzA1MjQ1OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/239,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQzNzA0ODU2Mg==,ditto,437048562,239,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-11-08T15:59:47Z,2018-11-08T15:59:47Z,closing due to inactivity to question - feel free to ask back when you get the chance to look at it :),"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQzNzA0ODU2Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/241,https://api.github.com/repos/eclipse-ditto/ditto/issues/241,ditto,363496952,241,SSLContextCreatorTest Failure in Windows,ffendt,2587759,Florian Fendt,,CLOSED,2018-09-25T09:53:43Z,2019-08-29T08:55:46Z,"On my Windows machine the Test `SSLContextCreatorTest#distrustSelfSignedClient` fails with an `AssertionError`, hence i can't build Ditto locally. This is what the failing assertion looks like:

```
java.lang.AssertionError: 
Expecting:
  <java.net.SocketException: Software caused connection abort: recv failed>
to be an instance of:
  <javax.net.ssl.SSLHandshakeException>
but was:
  <""java.net.SocketException: Software caused connection abort: recv failed
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at sun.security.ssl.InputRecord.readFully(InputRecord.java:465)
	at sun.security.ssl.InputRecord.read(InputRecord.java:503)
	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:983)
	at sun.security.ssl.SSLSocketImpl.waitForClose(SSLSocketImpl.java:1779)
	at sun.security.ssl.HandshakeOutStream.flush(HandshakeOutStream.java:124)
	at sun.security.ssl.Handshaker.sendChangeCipherSpec(Handshaker.java:1130)
	at sun.security.ssl.ClientHandshaker.sendChangeCipherAndFinish(ClientHandshaker.java:1216)
	at sun.security.ssl.ClientHandshaker.serverHelloDone(ClientHandshaker.java:1128)
	at sun.security.ssl.ClientHandshaker.processMessage(ClientHandshaker.java:348)
	at sun.security.ssl.Handshaker.processLoop(Handshaker.java:1026)
	at sun.security.ssl.Handshaker.process_record(Handshaker.java:961)
	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:1072)
	at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1385)
	at sun.security.ssl.SSLSocketImpl.writeRecord(SSLSocketImpl.java:757)
	at sun.security.ssl.AppOutputStream.write(AppOutputStream.java:123)
	at sun.security.ssl.AppOutputStream.write(AppOutputStream.java:138)
	at org.eclipse.ditto.services.connectivity.messaging.internal.SSLContextCreatorTest.lambda$distrustSelfSignedClient$4(SSLContextCreatorTest.java:205)
	at org.assertj.core.api.ThrowableAssert.catchThrowable(ThrowableAssert.java:60)
	at org.assertj.core.api.ThrowableTypeAssert.isThrownBy(ThrowableTypeAssert.java:54)
	at org.eclipse.ditto.services.connectivity.messaging.internal.SSLContextCreatorTest.distrustSelfSignedClient(SSLContextCreatorTest.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
"">

	at org.eclipse.ditto.services.connectivity.messaging.internal.SSLContextCreatorTest.distrustSelfSignedClient(SSLContextCreatorTest.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/241/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/241,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyODQ4NDYzMA==,ditto,428484630,241,NA,danielFesenmeyer,11198630,Daniel Fesenmeyer,daniel.fesenmeyer@bosch.com,NA,2018-10-10T08:29:58Z,2018-10-10T08:29:58Z,"Occurs on my machine also, but only sometimes.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyODQ4NDYzMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/241,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUwNjM1NTIxNg==,ditto,506355216,241,NA,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,NA,2019-06-27T13:52:06Z,2019-06-27T13:52:06Z,Any news from windows users?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUwNjM1NTIxNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/241,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUyNjA5MjkyNQ==,ditto,526092925,241,NA,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,NA,2019-08-29T08:55:46Z,2019-08-29T08:55:46Z,Closing this issue as there was no further feedback and I can't observe this behaviour on windows anymore,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUyNjA5MjkyNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/247,https://api.github.com/repos/eclipse-ditto/ditto/issues/247,ditto,364543969,247,"Add ""definition"" field to Ditto Thing on toplevel pointing to Vorto informationmodel",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2018-09-27T15:55:39Z,2021-06-22T14:13:50Z,"In #60 Ditto added support for defining ""definition"" on a Ditto feature level, e.g.:
```json
{
  ""thingId"": ""foo:bar"",
  ""features"": {
    ""red-lamp"": {
      ""definition"": [""org.eclipse.example:Lamp:1.0.0""],
      ""properties"": { ... }
    }
  }
}
```
While that may be sufficient to locally declare the type a feature follows, we cannot represent which type a Thing follows.

In order to do that and use the same concept for the top-level we want to add a ""definition"" on Thing level, e.g. in order to represent a traffic light:
```json
{
  ""thingId"": ""foo:bar"",
  ""definition"": ""org.eclipse.example:TrafficLight:2.0.0"",
  ""features"": {
    ""red-lamp"": {
      ""definition"": [""org.eclipse.example:Lamp:1.0.0""],
      ""properties"": { ... }
    },
    ""yellow-lamp"": {
      ""definition"": [""org.eclipse.example:Lamp:1.0.0""],
      ""properties"": { ... }
    },
    ""green-lamp"": {
      ""definition"": [""org.eclipse.example:Lamp:1.0.0""],
      ""properties"": { ... }
    }
  }
}
```
The top-level ""definition"" would be filled with a Vorto `InformationModel` which itself contains several `FunctionBlocks` with names we can re-use as feature names.
That way the user can easily grasp the relation between Vorto's modeling concepty and Ditto's JSON structure.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/247/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/247,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU2MjU1NTI2Mg==,ditto,562555262,247,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-12-06T12:36:30Z,2019-12-06T12:36:30Z,"Out of scope for the first part:

* it must be enforced when a top-level ""definition"" is present that derived ""definition"" entries in the features which belong to the top-level InformationModel can no longer be changed (e.g. deleted, updated, etc.) -- clarify how strict Ditto must be at that point
   * it may allow adding more definition entries which do not belong to the InformationModel
   * it may allow to create additional features to that defined in the InformationModel
   * or it may be very strict and not allow any ""enhancement"" of the features or their definitions","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU2MjU1NTI2Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/249,https://api.github.com/repos/eclipse-ditto/ditto/issues/249,ditto,366463852,249,Docker compose up failure,RaiBnod,6800775,Binod,binodrayee@gmail.com,CLOSED,2018-10-03T18:14:33Z,2019-02-14T16:34:29Z,"I have gone through the README.md file and when I hit the command for 'docker-compose up -d', it should work fine. But I got errors having following stdout output:

```
things-search_1  | 2018-10-03 20:03:49,890 ERROR [] o.e.d.s.t.s.SearchService  - An exception occurred in main method of <org.eclipse.ditto.services.thingsearch.starter.SearchService>!
things-search_1  | java.util.concurrent.TimeoutException: Futures timed out after [10000 milliseconds]
things-search_1  | 	at scala.concurrent.impl.Promise$DefaultPromise.ready(Promise.scala:255)
things-search_1  | 	at scala.concurrent.impl.Promise$DefaultPromise.result(Promise.scala:259)
things-search_1  | 	at scala.concurrent.Await$.$anonfun$result$1(package.scala:215)
things-search_1  | 	at scala.concurrent.Await$$$Lambda$311.000000008CDC7710.apply(Unknown Source)
things-search_1  | 	at scala.concurrent.BlockContext$DefaultBlockContext$.blockOn(BlockContext.scala:53)
things-search_1  | 	at scala.concurrent.Await$.result(package.scala:142)
things-search_1  | 	at akka.remote.Remoting.start(Remoting.scala:194)
things-search_1  | 	at akka.remote.RemoteActorRefProvider.init(RemoteActorRefProvider.scala:222)
things-search_1  | 	at akka.cluster.ClusterActorRefProvider.init(ClusterActorRefProvider.scala:32)
things-search_1  | 	at akka.actor.ActorSystemImpl.liftedTree2$1(ActorSystem.scala:826)
things-search_1  | 	at akka.actor.ActorSystemImpl._start$lzycompute(ActorSystem.scala:823)
things-search_1  | 	at akka.actor.ActorSystemImpl._start(ActorSystem.scala:823)
things-search_1  | 	at akka.actor.ActorSystemImpl.start(ActorSystem.scala:842)
things-search_1  | 	at akka.actor.ActorSystem$.apply(ActorSystem.scala:246)
things-search_1  | 	at akka.actor.ActorSystem$.apply(ActorSystem.scala:289)
things-search_1  | 	at akka.actor.ActorSystem$.apply(ActorSystem.scala:264)
things-search_1  | 	at akka.actor.ActorSystem$.create(ActorSystem.scala:192)
things-search_1  | 	at akka.actor.ActorSystem.create(ActorSystem.scala)
things-search_1  | 	at org.eclipse.ditto.services.base.DittoService.createActorSystem(DittoService.java:275)
things-search_1  | 	at org.eclipse.ditto.services.base.DittoService.doStart(DittoService.java:150)
things-search_1  | 	at org.eclipse.ditto.services.base.DittoService$$Lambda$11.000000008C81C240.call(Unknown Source)
things-search_1  | 	at org.eclipse.ditto.services.base.MainMethodExceptionHandler.tryToRunMainMethodBody(MainMethodExceptionHandler.java:68)
things-search_1  | 	at org.eclipse.ditto.services.base.MainMethodExceptionHandler.call(MainMethodExceptionHandler.java:62)
things-search_1  | 	at org.eclipse.ditto.services.base.DittoService.start(DittoService.java:134)
things-search_1  | 	at org.eclipse.ditto.services.thingsearch.starter.SearchService.main(SearchService.java:39)
things-search_1  | 2018-10-03 20:03:49,890 ERROR [] o.e.d.s.t.s.SearchService  - An exception occurred in main method of <org.eclipse.ditto.services.thingsearch.starter.SearchService>!
things-search_1  | java.util.concurrent.TimeoutException: Futures timed out after [10000 milliseconds]
things-search_1  | 	at scala.concurrent.impl.Promise$DefaultPromise.ready(Promise.scala:255)
things-search_1  | 	at scala.concurrent.impl.Promise$DefaultPromise.result(Promise.scala:259)
things-search_1  | 	at scala.concurrent.Await$.$anonfun$result$1(package.scala:215)
things-search_1  | 	at scala.concurrent.Await$$$Lambda$311.000000008CDC7710.apply(Unknown Source)
things-search_1  | 	at scala.concurrent.BlockContext$DefaultBlockContext$.blockOn(BlockContext.scala:53)
things-search_1  | 	at scala.concurrent.Await$.result(package.scala:142)
things-search_1  | 	at akka.remote.Remoting.start(Remoting.scala:194)
things-search_1  | 	at akka.remote.RemoteActorRefProvider.init(RemoteActorRefProvider.scala:222)
things-search_1  | 	at akka.cluster.ClusterActorRefProvider.init(ClusterActorRefProvider.scala:32)
things-search_1  | 	at akka.actor.ActorSystemImpl.liftedTree2$1(ActorSystem.scala:826)
things-search_1  | 	at akka.actor.ActorSystemImpl._start$lzycompute(ActorSystem.scala:823)
things-search_1  | 	at akka.actor.ActorSystemImpl._start(ActorSystem.scala:823)
things-search_1  | 	at akka.actor.ActorSystemImpl.start(ActorSystem.scala:842)
things-search_1  | 	at akka.actor.ActorSystem$.apply(ActorSystem.scala:246)
things-search_1  | 	at akka.actor.ActorSystem$.apply(ActorSystem.scala:289)
things-search_1  | 	at akka.actor.ActorSystem$.apply(ActorSystem.scala:264)
things-search_1  | 	at akka.actor.ActorSystem$.create(ActorSystem.scala:192)
things-search_1  | 	at akka.actor.ActorSystem.create(ActorSystem.scala)
things-search_1  | 	at org.eclipse.ditto.services.base.DittoService.createActorSystem(DittoService.java:275)
things-search_1  | 	at org.eclipse.ditto.services.base.DittoService.doStart(DittoService.java:150)
things-search_1  | 	at org.eclipse.ditto.services.base.DittoService$$Lambda$11.000000008C81C240.call(Unknown Source)
things-search_1  | 	at org.eclipse.ditto.services.base.MainMethodExceptionHandler.tryToRunMainMethodBody(MainMethodExceptionHandler.java:68)
things-search_1  | 	at org.eclipse.ditto.services.base.MainMethodExceptionHandler.call(MainMethodExceptionHandler.java:62)
things-search_1  | 	at org.eclipse.ditto.services.base.DittoService.start(DittoService.java:134)
things-search_1  | 	at org.eclipse.ditto.services.thingsearch.starter.SearchService.main(SearchService.java:39)
things-search_1  | Exception in thread ""main"" java.lang.RuntimeException: Exception on main thread: Futures timed out after [10000 milliseconds]
things-search_1  | 	at org.eclipse.ditto.services.base.MainMethodExceptionHandler.tryToRunMainMethodBody(MainMethodExceptionHandler.java:75)
things-search_1  | 	at org.eclipse.ditto.services.base.MainMethodExceptionHandler.call(MainMethodExceptionHandler.java:62)
things-search_1  | 	at org.eclipse.ditto.services.base.DittoService.start(DittoService.java:134)
things-search_1  | 	at org.eclipse.ditto.services.thingsearch.starter.SearchService.main(SearchService.java:39)
things-search_1  | Caused by: java.util.concurrent.TimeoutException: Futures timed out after [10000 milliseconds]
things-search_1  | 	at scala.concurrent.impl.Promise$DefaultPromise.ready(Promise.scala:255)
things-search_1  | 	at scala.concurrent.impl.Promise$DefaultPromise.result(Promise.scala:259)
things-search_1  | 	at scala.concurrent.Await$.$anonfun$result$1(package.scala:215)
things-search_1  | 	at scala.concurrent.Await$$$Lambda$311.000000008CDC7710.apply(Unknown Source)
things-search_1  | 	at scala.concurrent.BlockContext$DefaultBlockContext$.blockOn(BlockContext.scala:53)
things-search_1  | 	at scala.concurrent.Await$.result(package.scala:142)
things-search_1  | 	at akka.remote.Remoting.start(Remoting.scala:194)
things-search_1  | 	at akka.remote.RemoteActorRefProvider.init(RemoteActorRefProvider.scala:222)
things-search_1  | 	at akka.cluster.ClusterActorRefProvider.init(ClusterActorRefProvider.scala:32)
things-search_1  | 	at akka.actor.ActorSystemImpl.liftedTree2$1(ActorSystem.scala:826)
things-search_1  | 	at akka.actor.ActorSystemImpl._start$lzycompute(ActorSystem.scala:823)
things-search_1  | 	at akka.actor.ActorSystemImpl._start(ActorSystem.scala:823)
things-search_1  | 	at akka.actor.ActorSystemImpl.start(ActorSystem.scala:842)
things-search_1  | 	at akka.actor.ActorSystem$.apply(ActorSystem.scala:246)
things-search_1  | 	at akka.actor.ActorSystem$.apply(ActorSystem.scala:289)
things-search_1  | 	at akka.actor.ActorSystem$.apply(ActorSystem.scala:264)
things-search_1  | 	at akka.actor.ActorSystem$.create(ActorSystem.scala:192)
things-search_1  | 	at akka.actor.ActorSystem.create(ActorSystem.scala)
things-search_1  | 	at org.eclipse.ditto.services.base.DittoService.createActorSystem(DittoService.java:275)
things-search_1  | 	at org.eclipse.ditto.services.base.DittoService.doStart(DittoService.java:150)
things-search_1  | 	at org.eclipse.ditto.services.base.DittoService$$Lambda$11.000000008C81C240.call(Unknown Source)
things-search_1  | 	at org.eclipse.ditto.services.base.MainMethodExceptionHandler.tryToRunMainMethodBody(MainMethodExceptionHandler.java:68)
things-search_1  | 	... 3 more
concierge_1      | 2018-10-03 20:03:50,618 INFO  [] a.r.RemoteActorRefProvider$RemotingTerminator akka://ditto-cluster/system/remoting-terminator - Shutting down remote daemon.
concierge_1      | 2018-10-03 20:03:50,883 INFO  [] a.r.RemoteActorRefProvider$RemotingTerminator akka://ditto-cluster/system/remoting-terminator - Remote daemon shut down; proceeding with flushing remote transports.
concierge_1      | 2018-10-03 20:03:51,029 ERROR [] akka.remote.Remoting akka.remote.Remoting - Remoting system has been terminated abrubtly. Attempting to shut down transports
concierge_1      | 2018-10-03 20:03:51,029 ERROR [] akka.remote.Remoting akka.remote.Remoting - Remoting system has been terminated abrubtly. Attempting to shut down transports
concierge_1      | 2018-10-03 20:03:51,143 INFO  [] akka.remote.Remoting akka.remote.Remoting - Remoting shut down
things-search_1  | 2018-10-03 20:03:51,410 INFO  [] a.r.RemoteActorRefProvider$RemotingTerminator akka://ditto-cluster/system/remoting-terminator - Shutting down remote daemon.
concierge_1      | 2018-10-03 20:03:51,806 INFO  [] a.r.RemoteActorRefProvider$RemotingTerminator akka://ditto-cluster/system/remoting-terminator - Remoting shut down.
things-search_1  | 2018-10-03 20:03:51,891 INFO  [] a.r.RemoteActorRefProvider$RemotingTerminator akka://ditto-cluster/system/remoting-terminator - Remote daemon shut down; proceeding with flushing remote transports.
things-search_1  | 2018-10-03 20:03:52,022 INFO  [] akka.remote.Remoting akka.remote.Remoting - Remoting shut down
things-search_1  | 2018-10-03 20:03:52,183 ERROR [] akka.remote.Remoting akka.remote.Remoting - Remoting system has been terminated abrubtly. Attempting to shut down transports
things-search_1  | 2018-10-03 20:03:52,183 ERROR [] akka.remote.Remoting akka.remote.Remoting - Remoting system has been terminated abrubtly. Attempting to shut down transports
things-search_1  | 2018-10-03 20:03:52,342 INFO  [] a.r.RemoteActorRefProvider$RemotingTerminator akka://ditto-cluster/system/remoting-terminator - Remoting shut down.
connectivity_1   | 2018-10-03 20:03:55,892 ERROR [] akka.remote.Remoting akka.remote.Remoting - Remoting error: [Startup timed out. This is usually related to actor system host setting or host name resolution misconfiguration.] [
connectivity_1   | akka.remote.RemoteTransportException: Startup timed out. This is usually related to actor system host setting or host name resolution misconfiguration.
connectivity_1   | 	at akka.remote.Remoting.akka$remote$Remoting$$notifyError(Remoting.scala:148)
connectivity_1   | 	at akka.remote.Remoting.start(Remoting.scala:211)
connectivity_1   | 	at akka.remote.RemoteActorRefProvider.init(RemoteActorRefProvider.scala:222)
connectivity_1   | 	at akka.cluster.ClusterActorRefProvider.init(ClusterActorRefProvider.scala:32)
connectivity_1   | 	at akka.actor.ActorSystemImpl.liftedTree2$1(ActorSystem.scala:826)
connectivity_1   | 	at akka.actor.ActorSystemImpl._start$lzycompute(ActorSystem.scala:823)
connectivity_1   | 	at akka.actor.ActorSystemImpl._start(ActorSystem.scala:823)
connectivity_1   | 	at akka.actor.ActorSystemImpl.start(ActorSystem.scala:842)
connectivity_1   | 	at akka.actor.ActorSystem$.apply(ActorSystem.scala:246)
connectivity_1   | 	at akka.actor.ActorSystem$.apply(ActorSystem.scala:289)
connectivity_1   | 	at akka.actor.ActorSystem$.apply(ActorSystem.scala:264)
connectivity_1   | 	at akka.actor.ActorSystem$.create(ActorSystem.scala:192)
connectivity_1   | 	at akka.actor.ActorSystem.create(ActorSystem.scala)
connectivity_1   | 	at org.eclipse.ditto.services.base.DittoService.createActorSystem(DittoService.java:275)
connectivity_1   | 	at org.eclipse.ditto.services.base.DittoService.doStart(DittoService.java:150)
connectivity_1   | 	at org.eclipse.ditto.services.base.DittoService$$Lambda$11.00000000A8812F00.call(Unknown Source)
connectivity_1   | 	at org.eclipse.ditto.services.base.MainMethodExceptionHandler.tryToRunMainMethodBody(MainMethodExceptionHandler.java:68)
connectivity_1   | 	at org.eclipse.ditto.services.base.MainMethodExceptionHandler.call(MainMethodExceptionHandler.java:62)
connectivity_1   | 	at org.eclipse.ditto.services.base.DittoService.start(DittoService.java:134)
connectivity_1   | 	at org.eclipse.ditto.services.connectivity.ConnectivityService.main(ConnectivityService.java:55)
connectivity_1   | Caused by: java.util.concurrent.TimeoutException: Futures timed out after [10000 milliseconds]
connectivity_1   | 	at scala.concurrent.impl.Promise$DefaultPromise.ready(Promise.scala:255)
connectivity_1   | 	at scala.concurrent.impl.Promise$DefaultPromise.result(Promise.scala:259)
connectivity_1   | 	at scala.concurrent.Await$.$anonfun$result$1(package.scala:215)
connectivity_1   | 	at scala.concurrent.Await$$$Lambda$312.00000000A8DE0B10.apply(Unknown Source)
connectivity_1   | 	at scala.concurrent.BlockContext$DefaultBlockContext$.blockOn(BlockContext.scala:53)
connectivity_1   | 	at scala.concurrent.Await$.result(package.scala:142)
connectivity_1   | 	at akka.remote.Remoting.start(Remoting.scala:194)
connectivity_1   | 	... 18 more
connectivity_1   | ]
connectivity_1   | 2018-10-03 20:03:55,892 ERROR [] akka.remote.Remoting akka.remote.Remoting - Remoting error: [Startup timed out. This is usually related to actor system host setting or host name resolution misconfiguration.] [
connectivity_1   | akka.remote.RemoteTransportException: Startup timed out. This is usually related to actor system host setting or host name resolution misconfiguration.
connectivity_1   | 	at akka.remote.Remoting.akka$remote$Remoting$$notifyError(Remoting.scala:148)
connectivity_1   | 	at akka.remote.Remoting.start(Remoting.scala:211)
connectivity_1   | 	at akka.remote.RemoteActorRefProvider.init(RemoteActorRefProvider.scala:222)
connectivity_1   | 	at akka.cluster.ClusterActorRefProvider.init(ClusterActorRefProvider.scala:32)
connectivity_1   | 	at akka.actor.ActorSystemImpl.liftedTree2$1(ActorSystem.scala:826)
connectivity_1   | 	at akka.actor.ActorSystemImpl._start$lzycompute(ActorSystem.scala:823)
connectivity_1   | 	at akka.actor.ActorSystemImpl._start(ActorSystem.scala:823)
connectivity_1   | 	at akka.actor.ActorSystemImpl.start(ActorSystem.scala:842)
connectivity_1   | 	at akka.actor.ActorSystem$.apply(ActorSystem.scala:246)
connectivity_1   | 	at akka.actor.ActorSystem$.apply(ActorSystem.scala:289)
connectivity_1   | 	at akka.actor.ActorSystem$.apply(ActorSystem.scala:264)
connectivity_1   | 	at akka.actor.ActorSystem$.create(ActorSystem.scala:192)
connectivity_1   | 	at akka.actor.ActorSystem.create(ActorSystem.scala)
connectivity_1   | 	at org.eclipse.ditto.services.base.DittoService.createActorSystem(DittoService.java:275)
connectivity_1   | 	at org.eclipse.ditto.services.base.DittoService.doStart(DittoService.java:150)
connectivity_1   | 	at org.eclipse.ditto.services.base.DittoService$$Lambda$11.00000000A8812F00.call(Unknown Source)
connectivity_1   | 	at org.eclipse.ditto.services.base.MainMethodExceptionHandler.tryToRunMainMethodBody(MainMethodExceptionHandler.java:68)
connectivity_1   | 	at org.eclipse.ditto.services.base.MainMethodExceptionHandler.call(MainMethodExceptionHandler.java:62)
connectivity_1   | 	at org.eclipse.ditto.services.base.DittoService.start(DittoService.java:134)
connectivity_1   | 	at org.eclipse.ditto.services.connectivity.ConnectivityService.main(ConnectivityService.java:55)
connectivity_1   | Caused by: java.util.concurrent.TimeoutException: Futures timed out after [10000 milliseconds]
connectivity_1   | 	at scala.concurrent.impl.Promise$DefaultPromise.ready(Promise.scala:255)
connectivity_1   | 	at scala.concurrent.impl.Promise$DefaultPromise.result(Promise.scala:259)
connectivity_1   | 	at scala.concurrent.Await$.$anonfun$result$1(package.scala:215)
connectivity_1   | 	at scala.concurrent.Await$$$Lambda$312.00000000A8DE0B10.apply(Unknown Source)
connectivity_1   | 	at scala.concurrent.BlockContext$DefaultBlockContext$.blockOn(BlockContext.scala:53)
connectivity_1   | 	at scala.concurrent.Await$.result(package.scala:142)
connectivity_1   | 	at akka.remote.Remoting.start(Remoting.scala:194)
connectivity_1   | 	... 18 more
connectivity_1   | ]
connectivity_1   | 2018-10-03 20:03:56,042 ERROR [] o.e.d.s.c.ConnectivityService  - An exception occurred in main method of <org.eclipse.ditto.services.connectivity.ConnectivityService>!
connectivity_1   | java.util.concurrent.TimeoutException: Futures timed out after [10000 milliseconds]
connectivity_1   | 	at scala.concurrent.impl.Promise$DefaultPromise.ready(Promise.scala:255)
connectivity_1   | 	at scala.concurrent.impl.Promise$DefaultPromise.result(Promise.scala:259)
connectivity_1   | 	at scala.concurrent.Await$.$anonfun$result$1(package.scala:215)
connectivity_1   | 	at scala.concurrent.Await$$$Lambda$312.00000000A8DE0B10.apply(Unknown Source)
connectivity_1   | 	at scala.concurrent.BlockContext$DefaultBlockContext$.blockOn(BlockContext.scala:53)
connectivity_1   | 	at scala.concurrent.Await$.result(package.scala:142)
connectivity_1   | 	at akka.remote.Remoting.start(Remoting.scala:194)
connectivity_1   | 	at akka.remote.RemoteActorRefProvider.init(RemoteActorRefProvider.scala:222)
connectivity_1   | 	at akka.cluster.ClusterActorRefProvider.init(ClusterActorRefProvider.scala:32)
connectivity_1   | 	at akka.actor.ActorSystemImpl.liftedTree2$1(ActorSystem.scala:826)
connectivity_1   | 	at akka.actor.ActorSystemImpl._start$lzycompute(ActorSystem.scala:823)
connectivity_1   | 	at akka.actor.ActorSystemImpl._start(ActorSystem.scala:823)
connectivity_1   | 	at akka.actor.ActorSystemImpl.start(ActorSystem.scala:842)
connectivity_1   | 	at akka.actor.ActorSystem$.apply(ActorSystem.scala:246)
connectivity_1   | 	at akka.actor.ActorSystem$.apply(ActorSystem.scala:289)
connectivity_1   | 	at akka.actor.ActorSystem$.apply(ActorSystem.scala:264)
connectivity_1   | 	at akka.actor.ActorSystem$.create(ActorSystem.scala:192)
connectivity_1   | 	at akka.actor.ActorSystem.create(ActorSystem.scala)
connectivity_1   | 	at org.eclipse.ditto.services.base.DittoService.createActorSystem(DittoService.java:275)
connectivity_1   | 	at org.eclipse.ditto.services.base.DittoService.doStart(DittoService.java:150)
connectivity_1   | 	at org.eclipse.ditto.services.base.DittoService$$Lambda$11.00000000A8812F00.call(Unknown Source)
connectivity_1   | 	at org.eclipse.ditto.services.base.MainMethodExceptionHandler.tryToRunMainMethodBody(MainMethodExceptionHandler.java:68)
connectivity_1   | 	at org.eclipse.ditto.services.base.MainMethodExceptionHandler.call(MainMethodExceptionHandler.java:62)
connectivity_1   | 	at org.eclipse.ditto.services.base.DittoService.start(DittoService.java:134)
connectivity_1   | 	at org.eclipse.ditto.services.connectivity.ConnectivityService.main(ConnectivityService.java:55)
connectivity_1   | 2018-10-03 20:03:56,042 ERROR [] o.e.d.s.c.ConnectivityService  - An exception occurred in main method of <org.eclipse.ditto.services.connectivity.ConnectivityService>!
connectivity_1   | java.util.concurrent.TimeoutException: Futures timed out after [10000 milliseconds]
connectivity_1   | 	at scala.concurrent.impl.Promise$DefaultPromise.ready(Promise.scala:255)
connectivity_1   | 	at scala.concurrent.impl.Promise$DefaultPromise.result(Promise.scala:259)
connectivity_1   | 	at scala.concurrent.Await$.$anonfun$result$1(package.scala:215)
connectivity_1   | 	at scala.concurrent.Await$$$Lambda$312.00000000A8DE0B10.apply(Unknown Source)
connectivity_1   | 	at scala.concurrent.BlockContext$DefaultBlockContext$.blockOn(BlockContext.scala:53)
connectivity_1   | 	at scala.concurrent.Await$.result(package.scala:142)
connectivity_1   | 	at akka.remote.Remoting.start(Remoting.scala:194)
connectivity_1   | 	at akka.remote.RemoteActorRefProvider.init(RemoteActorRefProvider.scala:222)
connectivity_1   | 	at akka.cluster.ClusterActorRefProvider.init(ClusterActorRefProvider.scala:32)
connectivity_1   | 	at akka.actor.ActorSystemImpl.liftedTree2$1(ActorSystem.scala:826)
connectivity_1   | 	at akka.actor.ActorSystemImpl._start$lzycompute(ActorSystem.scala:823)
connectivity_1   | 	at akka.actor.ActorSystemImpl._start(ActorSystem.scala:823)
connectivity_1   | 	at akka.actor.ActorSystemImpl.start(ActorSystem.scala:842)
connectivity_1   | 	at akka.actor.ActorSystem$.apply(ActorSystem.scala:246)
connectivity_1   | 	at akka.actor.ActorSystem$.apply(ActorSystem.scala:289)
connectivity_1   | 	at akka.actor.ActorSystem$.apply(ActorSystem.scala:264)
connectivity_1   | 	at akka.actor.ActorSystem$.create(ActorSystem.scala:192)
connectivity_1   | 	at akka.actor.ActorSystem.create(ActorSystem.scala)
connectivity_1   | 	at org.eclipse.ditto.services.base.DittoService.createActorSystem(DittoService.java:275)
connectivity_1   | 	at org.eclipse.ditto.services.base.DittoService.doStart(DittoService.java:150)
connectivity_1   | 	at org.eclipse.ditto.services.base.DittoService$$Lambda$11.00000000A8812F00.call(Unknown Source)
connectivity_1   | 	at org.eclipse.ditto.services.base.MainMethodExceptionHandler.tryToRunMainMethodBody(MainMethodExceptionHandler.java:68)
connectivity_1   | 	at org.eclipse.ditto.services.base.MainMethodExceptionHandler.call(MainMethodExceptionHandler.java:62)
connectivity_1   | 	at org.eclipse.ditto.services.base.DittoService.start(DittoService.java:134)
connectivity_1   | 	at org.eclipse.ditto.services.connectivity.ConnectivityService.main(ConnectivityService.java:55)
connectivity_1   | Exception in thread ""main"" java.lang.RuntimeException: Exception on main thread: Futures timed out after [10000 milliseconds]
connectivity_1   | 	at org.eclipse.ditto.services.base.MainMethodExceptionHandler.tryToRunMainMethodBody(MainMethodExceptionHandler.java:75)
connectivity_1   | 	at org.eclipse.ditto.services.base.MainMethodExceptionHandler.call(MainMethodExceptionHandler.java:62)
connectivity_1   | 	at org.eclipse.ditto.services.base.DittoService.start(DittoService.java:134)
connectivity_1   | 	at org.eclipse.ditto.services.connectivity.ConnectivityService.main(ConnectivityService.java:55)
connectivity_1   | Caused by: java.util.concurrent.TimeoutException: Futures timed out after [10000 milliseconds]
connectivity_1   | 	at scala.concurrent.impl.Promise$DefaultPromise.ready(Promise.scala:255)
connectivity_1   | 	at scala.concurrent.impl.Promise$DefaultPromise.result(Promise.scala:259)
connectivity_1   | 	at scala.concurrent.Await$.$anonfun$result$1(package.scala:215)
connectivity_1   | 	at scala.concurrent.Await$$$Lambda$312.00000000A8DE0B10.apply(Unknown Source)
connectivity_1   | 	at scala.concurrent.BlockContext$DefaultBlockContext$.blockOn(BlockContext.scala:53)
connectivity_1   | 	at scala.concurrent.Await$.result(package.scala:142)
connectivity_1   | 	at akka.remote.Remoting.start(Remoting.scala:194)
connectivity_1   | 	at akka.remote.RemoteActorRefProvider.init(RemoteActorRefProvider.scala:222)
connectivity_1   | 	at akka.cluster.ClusterActorRefProvider.init(ClusterActorRefProvider.scala:32)
connectivity_1   | 	at akka.actor.ActorSystemImpl.liftedTree2$1(ActorSystem.scala:826)
connectivity_1   | 	at akka.actor.ActorSystemImpl._start$lzycompute(ActorSystem.scala:823)
connectivity_1   | 	at akka.actor.ActorSystemImpl._start(ActorSystem.scala:823)
connectivity_1   | 	at akka.actor.ActorSystemImpl.start(ActorSystem.scala:842)
connectivity_1   | 	at akka.actor.ActorSystem$.apply(ActorSystem.scala:246)
connectivity_1   | 	at akka.actor.ActorSystem$.apply(ActorSystem.scala:289)
connectivity_1   | 	at akka.actor.ActorSystem$.apply(ActorSystem.scala:264)
connectivity_1   | 	at akka.actor.ActorSystem$.create(ActorSystem.scala:192)
connectivity_1   | 	at akka.actor.ActorSystem.create(ActorSystem.scala)
connectivity_1   | 	at org.eclipse.ditto.services.base.DittoService.createActorSystem(DittoService.java:275)
connectivity_1   | 	at org.eclipse.ditto.services.base.DittoService.doStart(DittoService.java:150)
connectivity_1   | 	at org.eclipse.ditto.services.base.DittoService$$Lambda$11.00000000A8812F00.call(Unknown Source)
connectivity_1   | 	at org.eclipse.ditto.services.base.MainMethodExceptionHandler.tryToRunMainMethodBody(MainMethodExceptionHandler.java:68)
connectivity_1   | 	... 3 more
connectivity_1   | 2018-10-03 20:03:57,805 INFO  [] a.r.RemoteActorRefProvider$RemotingTerminator akka://ditto-cluster/system/remoting-terminator - Shutting down remote daemon.
connectivity_1   | 2018-10-03 20:03:58,106 INFO  [] a.r.RemoteActorRefProvider$RemotingTerminator akka://ditto-cluster/system/remoting-terminator - Remote daemon shut down; proceeding with flushing remote transports.
connectivity_1   | 2018-10-03 20:03:58,398 ERROR [] akka.remote.Remoting akka.remote.Remoting - Remoting system has been terminated abrubtly. Attempting to shut down transports
connectivity_1   | 2018-10-03 20:03:58,398 ERROR [] akka.remote.Remoting akka.remote.Remoting - Remoting system has been terminated abrubtly. Attempting to shut down transports
connectivity_1   | 2018-10-03 20:03:58,493 INFO  [] akka.remote.Remoting akka.remote.Remoting - Remoting shut down
connectivity_1   | 2018-10-03 20:03:58,703 INFO  [] a.r.RemoteActorRefProvider$RemotingTerminator akka://ditto-cluster/system/remoting-terminator - Remoting shut down.
```
What is the cause of this issue?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/249/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/249,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyNjkyMjA3OQ==,ditto,426922079,249,NA,danielFesenmeyer,11198630,Daniel Fesenmeyer,daniel.fesenmeyer@bosch.com,NA,2018-10-04T07:59:38Z,2018-10-04T07:59:38Z,"I've never seen this error before and cannot reproduce it on my machine.
Maybe it happens when incompatible versions of the ditto microservices are used? Could you remove all ditto images and try it again?
`docker rmi -f $(docker images -q eclipse/ditto-*)`

Please let me know if it helps. If not,  I will further investigate this issue.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyNjkyMjA3OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/249,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyNjk3NzE5OQ==,ditto,426977199,249,NA,RaiBnod,6800775,Binod,binodrayee@gmail.com,NA,2018-10-04T11:04:47Z,2018-10-04T11:04:47Z,"No, I tried to up the ditto system by removing all images and building it fresh by:

**1.**
```
mvn clean install -Pdocker-build-image -Ddocker.daemon.url=unix:///var/run/docker.sock
cd deployment/docker/
docker-compose up -d
```
This wasn't working so I just tried it by:

**2.**
```
cd deployment/docker/
vim .env
```
_DITTO_VERSION=0.8.0-M2c_
```
docker-compose up -d
```
These both options are not working. Show this issue.

![screenshot from 2018-10-04 16-41-29](https://user-images.githubusercontent.com/6800775/46469873-6ed1f000-c7f4-11e8-9e43-6858f9f6f469.png)

**But similarly, I deployed the things on same fashion on another server and its working fine.**
**Note:** Both server meets the prequist.

**Docker version:** 18.06.1-ce
**Docker Compose version:** 1.22.0
**JDK version:** 1.8.0_92
**Maven:** 3.5.2","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyNjk3NzE5OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/249,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyNzA0MjU5MA==,ditto,427042590,249,NA,danielFesenmeyer,11198630,Daniel Fesenmeyer,daniel.fesenmeyer@bosch.com,NA,2018-10-04T14:34:28Z,2018-10-04T14:34:28Z,"Thanks for the detailed information. I'm sorry, we still could not reproduce it.

I tested it on Windows and my colleague @thjaeckle on Linux, both with the same settings as specified by you (java and mvn version should be irrelevant):
*Docker version*: 18.06.1-ce
*Docker Compose version*: 1.22.0

I have just two ideas:
* After you started docker-compose, a network with the name ""docker_default"" should have been created. Can you please have a look? `docker network ls` should return sth like this:
...
6949ff101f37        docker_default                 bridge              local
...
* Maybe your machine just needs some more time to start the remoting. You could try to increase _akka.remote.startup-timeout_ (default: 10s). For this purpose change the _IBM_JAVA_OPTIONS_ everywhere in docker-compose.yml like this:
IBM_JAVA_OPTIONS=-XX:+ExitOnOutOfMemoryError -Dakka.remote.startup-timeout=60s","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyNzA0MjU5MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/249,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyNzA5NzQxMg==,ditto,427097412,249,NA,RaiBnod,6800775,Binod,binodrayee@gmail.com,NA,2018-10-04T17:10:03Z,2018-10-04T17:10:03Z,"- Yes `docker_default` was created after doing docker-compose up.

![screenshot from 2018-10-04 22-43-51](https://user-images.githubusercontent.com/6800775/46490298-5deea200-c827-11e8-9b59-b7a6e1e7d409.png)

- Tried after increasing that startup-timeout to `60s` too, but it didn't help me. Please find additional logs which may help to know the cause of this issue (this is the log after we get TimeoutException attached in previous comment chain):
![screenshot from 2018-10-04 22-45-49](https://user-images.githubusercontent.com/6800775/46490519-e79e6f80-c827-11e8-9de2-c8206f5ffe72.png)
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyNzA5NzQxMg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/249,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyNzc1NzEwOQ==,ditto,427757109,249,NA,danielFesenmeyer,11198630,Daniel Fesenmeyer,daniel.fesenmeyer@bosch.com,NA,2018-10-08T08:32:47Z,2018-10-08T08:32:47Z,"The logs show that the containers cannot access each other on port 2551 inside the network ""docker_default"". I just wondered if there was some problem with your host firewall configuration, but this does not make sense because the host firewall should not affect the communication between containers. So, it seems that there is some problem with your docker installation.

Maybe you can reproduce this issue with a simple example: create a bridge network, add two containers and try to access one of the containers from the other container via tcp (e.g. with netcat).

Probably the docker gurus here can help to further analyse this issue: https://forums.docker.com/.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyNzc1NzEwOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/249,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyODQ4NTYyNA==,ditto,428485624,249,NA,danielFesenmeyer,11198630,Daniel Fesenmeyer,daniel.fesenmeyer@bosch.com,NA,2018-10-10T08:33:14Z,2018-10-10T08:33:14Z,"@RaiBnod: Do you still have this issue?

To be able to support you, we should know whether you could reproduce the issue with a simple tcp example. This is important for us to figure out whether it is a Docker or Akka problem.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyODQ4NTYyNA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/249,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyODUyNDAwNg==,ditto,428524006,249,NA,RaiBnod,6800775,Binod,binodrayee@gmail.com,NA,2018-10-10T10:36:57Z,2018-10-10T10:36:57Z,"Hey @danielFesenmeyer: That's issue is only on my local computer, tried many times by removing and re-composing the images but didn't work for me. But, the same thing I did on a server is working fine.

Moreover, On the server where I deployed the ditto, services got exited repeatedly and need to hit command **'docker-compose up -d'** again and again.

![screenshot from 2018-10-10 15-39-47](https://user-images.githubusercontent.com/6800775/46730486-01b4d380-cca8-11e8-921a-275bc5d24ed4.png)

As in the above screenshot, some services are running from 45 hours, some of them from 4 hours and one service which is just got exited.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyODUyNDAwNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/249,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyODUzMTczOA==,ditto,428531738,249,NA,danielFesenmeyer,11198630,Daniel Fesenmeyer,daniel.fesenmeyer@bosch.com,NA,2018-10-10T11:06:41Z,2018-10-10T11:06:41Z,"Hey @RaiBnod.

For analysing your local computer problem, it would really help if you could reproduce the issue with a simple tcp example.

On your server there seems to be a different issue. To support with this, we would need the complete docker logs (_docker-compose logs_). Maybe you can attach them here? Just from the status of the services, it is difficult to guess the root cause..","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyODUzMTczOA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/249,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQzNTgyMTI1OQ==,ditto,435821259,249,NA,danielFesenmeyer,11198630,Daniel Fesenmeyer,daniel.fesenmeyer@bosch.com,NA,2018-11-05T10:10:29Z,2018-11-05T10:10:29Z,Closing this issue due to inactivity.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQzNTgyMTI1OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/249,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2MzY5NTcwMg==,ditto,463695702,249,NA,sergiomanso,12512773,,,NA,2019-02-14T16:33:29Z,2019-02-14T16:33:29Z,"I'm having the exact same problem.

I'm using ditto 0.8.0 and happens the same as in the first post. (Tried with docker 18.09 and 18.06)

I increased the startup-timeout (60s) and docker-compose logs spit this:

https://pastebin.com/wc27z26x

After this, containers started to exit.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2MzY5NTcwMg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/250,https://api.github.com/repos/eclipse-ditto/ditto/issues/250,ditto,367441946,250,Add OpenShift Deployment Support,marziman,16783749,Mehmet Arziman,,CLOSED,2018-10-06T09:50:54Z,2019-01-10T16:55:00Z,This issue serves as tracking point for the activities to make Ditto run on OpenShift.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/250/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/250,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ0ODExMjEyNQ==,ditto,448112125,250,NA,stmaute,17831060,Stefan Maute,,NA,2018-12-18T06:31:57Z,2018-12-18T06:31:57Z,"Hi @marziman,
I have added some files to deploy Ditto to OpenShift please see PR #309.
Maybe you have time to check this out and try it yourself.
Your feedback would be appreciated.

 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ0ODExMjEyNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/250,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ1MzE2OTU4MA==,ditto,453169580,250,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-01-10T16:54:52Z,2019-01-10T16:54:52Z,Fixed by #309,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ1MzE2OTU4MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/251,https://api.github.com/repos/eclipse-ditto/ditto/issues/251,ditto,367522875,251,Conditioning policies fruitfulness in Multi-Company architecture,RaiBnod,6800775,Binod,binodrayee@gmail.com,CLOSED,2018-10-07T05:26:49Z,2018-10-07T21:20:47Z,"- **Scenario:**
  I have a web app, which can create multiple companies and those multiple companies have their own users with multiple roles, called Admin, Manager, User etc... 

- **Problem:**
  When I create a fresh company '**company1**' on my web app, it should able to create ditto users like '**ditto-compay1-admin**', '**ditto-company1-manager**', '**ditto-company1-user**' etc... and create a policy to bind user on its limits. But unfortunately, it seems like we have no REST API to add/update/delete the user and user creation is limited to a file **'nginx.htpasswd'**. If that is the case, we can't achieve the dynamic behavior of policies for such scenarios. We always need to go on the nginx file and need to add/edit/delete the content and need to restart nginx and that will be repetitive.

Am I missing something over here that we could do its alternative with the current ditto support or this case is never handled/yet to be handled?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/251/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/251,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyNzYyOTkxNg==,ditto,427629916,251,NA,RaiBnod,6800775,Binod,binodrayee@gmail.com,NA,2018-10-07T06:38:44Z,2018-10-07T06:38:44Z,"In the ditto's documentation, we can find:

**Authentication**
User authentication at the HTTP API

A user who calls the HTTP API can be authenticated using two mechanisms:

- HTTP BASIC Authentication by providing username and password of users managed within for example nginx acting as reverse proxy.
- A JWT issued by Google or other OpenID Connect providers.

But not much documentation on the second point.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyNzYyOTkxNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/251,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyNzY1MTU3MA==,ditto,427651570,251,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-10-07T12:59:57Z,2018-10-07T12:59:57Z,"Hi.

Ditto does not include a user management and Ditto does not provide authentication - that's why we have **as an example** the nginx-based authentication via BasicAuth.
If you need authentication (and a user management), you should combine it with another tool/project providing that. [Keycloak](https://www.keycloak.org) might be interesting for you.

Another alternative to include any other authentication provider you already have (e.g. ActiveDirectory) is to implement your own implementation of interface [AuthenticationProvider](https://github.com/eclipse/ditto/blob/master/services/gateway/endpoints/src/main/java/org/eclipse/ditto/services/gateway/endpoints/directives/auth/AuthenticationProvider.java). A good example/starting point could be the [DummyAuthenticationProvider](https://github.com/eclipse/ditto/blob/master/services/gateway/endpoints/src/main/java/org/eclipse/ditto/services/gateway/endpoints/directives/auth/dummy/DummyAuthenticationProvider.java) which simply extracts user credentials from a header field `x-ditto-dummy-auth` - that mechanism is used in our example nginx based authentication. The nginx sets this header when a user was authenticated, see example [nginx.conf](https://github.com/eclipse/ditto/blob/master/deployment/docker/nginx.conf#L41).

Towards the JWT based authentication (e.g. via Google) - simply set the JWT `id_token` of a authenicated Google user as `Authorization Bearer` http header. This is default OAuth2.0.
Ditto supports out-of-the-box Google OAuth2.0 provider, see here in the code:
https://github.com/eclipse/ditto/blob/master/services/gateway/endpoints/src/main/java/org/eclipse/ditto/services/gateway/endpoints/directives/auth/DittoGatewayAuthenticationDirectiveFactory.java#L91

You can of course also add other OAuth2.0 providers there (e.g. your own Keycloak if you decide to use that).

Maybe there is an nginx plugin which lets you manage users in a database, so this could also be an alternative.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyNzY1MTU3MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/251,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyNzY4ODA0Ng==,ditto,427688046,251,NA,RaiBnod,6800775,Binod,binodrayee@gmail.com,NA,2018-10-07T21:20:47Z,2018-10-07T21:20:47Z,"Hey @thjaeckle, thanks a lot. With the help of the above references and resources, I am able to achieve my goal.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyNzY4ODA0Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/254,https://api.github.com/repos/eclipse-ditto/ditto/issues/254,ditto,368315715,254,The server does not support the HTTP protocol version used in the request,shailesharya,41483772,Shailesh Arya,,CLOSED,2018-10-09T17:24:39Z,2018-10-10T12:07:32Z,"![screenshot 49](https://user-images.githubusercontent.com/41483772/46686522-2ceee280-cc16-11e8-8379-d948e1926f8e.png)
what does this mean when firing query?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/254/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/254,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyODQ3MTgxNQ==,ditto,428471815,254,NA,jokraehe,12512262,Johannes Schneider,johannes.schneider@bosch.io,NA,2018-10-10T07:45:49Z,2018-10-10T07:45:49Z,I think the whitespaces in your URL is causing this error. Try http://localhost:8080/api/1/search/things...,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyODQ3MTgxNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/254,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyODU0NjcwOA==,ditto,428546708,254,NA,shailesharya,41483772,Shailesh Arya,,NA,2018-10-10T12:07:26Z,2018-10-10T12:07:26Z,"done!!
thanks for your help.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyODU0NjcwOA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/255,https://api.github.com/repos/eclipse-ditto/ditto/issues/255,ditto,368539108,255,Support for CBOR as a format describing Ditto Payload,zubairhamed,2336402,Zubair Hamed,,CLOSED,2018-10-10T08:01:06Z,2020-12-11T09:26:11Z,"With the ditto protocol, the device would need to send as JSON format.
This is costly for typical devices.

It would be interesting for the Ditto format to be describable via CBOR (http://cbor.io/) so that devices have better opportunities to offer the ditto format directly from the device.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/255/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/255,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyODQ3NzQ5Mg==,ditto,428477492,255,NA,geglock,14750235,Gerald Glocker,,NA,2018-10-10T08:05:39Z,2018-10-10T08:05:39Z,We could simply add support for it by providing access to a CBOR javascript library (like https://github.com/paroga/cbor-js) within the [payload mapping](https://www.eclipse.org/ditto/connectivity-mapping.html) in Ditto. What do you think about this?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyODQ3NzQ5Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/255,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyODQ5MjU3OA==,ditto,428492578,255,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-10-10T08:55:12Z,2018-10-10T08:55:12Z,"Also - keep in mind that devices typically do not connect to Ditto directly and should not be aware of Ditto at all.
Devices connect to a MQTT broker or to Hono for example, so using the payload mapping when consuming messages from those would be the way to go.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyODQ5MjU3OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/255,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyODQ5NzUyNQ==,ditto,428497525,255,NA,zubairhamed,2336402,Zubair Hamed,,NA,2018-10-10T09:10:52Z,2018-10-10T09:10:52Z,"@geglock  Yeah i think that might work. worth a try.

Z","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyODQ5NzUyNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/258,https://api.github.com/repos/eclipse-ditto/ditto/issues/258,ditto,369185561,258,Subject Id invalid during create thing on sandbox via websocket,wem,1784773,Michel Werren,,CLOSED,2018-10-11T15:45:15Z,2019-07-24T11:20:46Z,"We try to create a thing via websocket protocol binding on new sandbox installation. 
With the payload:
{
  ""topic"" : ""com.example.iot/qemu_x86/things/twin/commands/create"",
  ""headers"" : {
    ""correlation-id"" : ""2215ea11-dbe5-413e-a783-24ec9c9f9619"",
    ""response-required"" : true,
    ""content-type"" : ""application/json"",
    ""auth-subjects"" : [ ""nginx:ditto"" ],
    ""version"" : 2
  },
  ""path"" : ""/"",
  ""value"" : {
    ""thingId"" : ""com.example.iot:qemu_x86"",
    ""features"" : {
      ""urn:oma:lwm2m:ext:1"" : {
        ""properties"" : {
          ""0"" : 1,
          ""1"" : 30,
          ""2"" : 0,
          ""3"" : 0,
          ""5"" : 86400,
          ""6"" : false,
          ""7"" : ""U""
        }
      },
      ""urn:oma:lwm2m:ext:3303"" : {
        ""properties"" : {
          ""5601"" : 25.0,
          ""5602"" : 25.0,
          ""5603"" : 0.0,
          ""5700"" : 25.0,
          ""5604"" : 0.0,
          ""5701"" : """"
        }
      },
      ""urn:oma:lwm2m:ext:5"" : {
        ""properties"" : {
          ""1"" : """",
          ""9"" : 2,
          ""3"" : 0,
          ""5"" : 0
        }
      },
      ""urn:oma:lwm2m:ext:3"" : {
        ""properties"" : {
          ""0"" : ""Zephyr"",
          ""1"" : ""OMA-LWM2M Sample Client"",
          ""2"" : ""345000123"",
          ""3"" : ""1.0"",
          ""6_0"" : 1,
          ""6_1"" : 5,
          ""7_0"" : 3800,
          ""7_1"" : 5000,
          ""8_0"" : 125,
          ""8_1"" : 900,
          ""9"" : 95,
          ""10"" : 15,
          ""13"" : 7932000,
          ""16"" : ""U"",
          ""17"" : ""OMA-LWM2M Client"",
          ""18"" : ""1.0.1"",
          ""20"" : 1,
          ""21"" : 25
        }
      }
    }
  }
}

We get the following error: 
{""topic"":""unknown/unknown/things/twin/errors"",""headers"":{""content-type"":""application/vnd.eclipse.ditto+json""},""path"":""/"",""value"":{""status"":400,""error"":""policies:subjectid.invalid"",""message"":""Subject ID 'ditto' is not valid!"",""description"":""It must contain an issuer as prefix separated by a colon ':' from the actual subject""},""status"":400}

I would be glad about any advice","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/258/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/258,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyOTAxNjY5MQ==,ditto,429016691,258,NA,danielFesenmeyer,11198630,Daniel Fesenmeyer,daniel.fesenmeyer@bosch.com,NA,2018-10-11T16:10:14Z,2018-10-11T16:10:14Z,How did you open the websocket? On path _/ws/1_ or _/ws/2_? It might happen when you opened it on path _/ws/1_.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyOTAxNjY5MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/258,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQzMDEyNTk5MA==,ditto,430125990,258,NA,wem,1784773,Michel Werren,,NA,2018-10-16T07:09:59Z,2018-10-16T07:09:59Z,"Hi
The problem is solved, but i don't know really why. I did connect to /ws/2 at anytime, but a day later it worked :)

Thanks for help in anyway.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQzMDEyNTk5MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/258,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUxNDU5MTYzNw==,ditto,514591637,258,NA,SaminaZahidFulda,38786093,,,NA,2019-07-24T11:20:46Z,2019-07-24T11:20:46Z,hi. Can you please share the complete code ?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUxNDU5MTYzNw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/259,https://api.github.com/repos/eclipse-ditto/ditto/issues/259,ditto,369224328,259,Server Sent Events(SSEs) error,shailesharya,41483772,Shailesh Arya,,CLOSED,2018-10-11T17:23:25Z,2018-10-12T11:45:38Z,"hey there,
please anyone can tell what's wrong with this SSE
![screenshot 51](https://user-images.githubusercontent.com/41483772/46822178-67888480-cda8-11e8-8012-6b37a5b8da7d.png)
![screenshot 52](https://user-images.githubusercontent.com/41483772/46822185-6b1c0b80-cda8-11e8-9441-b2e3737beb16.png)
thanks","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/259/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/259,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyOTA3MTc1NQ==,ditto,429071755,259,NA,jokraehe,12512262,Johannes Schneider,johannes.schneider@bosch.io,NA,2018-10-11T18:36:41Z,2018-10-11T18:36:41Z,"You have to authenticate the request. You can do it by specifying the withCredentials option like this `let source = new
  EventSource('http://localhost:8080/api/1/things?ids=org.eclipse.ditto:fancy-thing&fields=thingId,features/lamp', {
    withCredentials: true});`
You might run into issues serving the html directly from the filesystem. Try a small http server like https://www.npmjs.com/package/http-server.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyOTA3MTc1NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/259,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyOTI5ODY2Mw==,ditto,429298663,259,NA,shailesharya,41483772,Shailesh Arya,,NA,2018-10-12T11:45:31Z,2018-10-12T11:45:31Z,"source = new EventSource('http://localhost:8080/api/1/things?ids=org.eclipse.ditto:fancy-thing&fields=thingId,features/lamp', { withCredentials: true});
this worked!!
thanks for your help.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQyOTI5ODY2Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/287,https://api.github.com/repos/eclipse-ditto/ditto/issues/287,ditto,381694727,287,Gradle instead of Maven for building sources,bieli,183053,Marcin Bielak,,CLOSED,2018-11-16T17:34:45Z,2018-11-20T07:14:08Z,I think Gradle Build Tool https://gradle.org/ it's quite well tool for creating releases versions from sources.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/287/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/287,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQzOTQ4OTQ4OQ==,ditto,439489489,287,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-11-16T18:48:11Z,2018-11-16T18:48:11Z,"Gradle is indeed a cool build tool.
We however have building releases and everything else well covered with Maven.

For what purpose exactly would you want to change the working build system to gradle in the Ditto project?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQzOTQ4OTQ4OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/288,https://api.github.com/repos/eclipse-ditto/ditto/issues/288,ditto,382210557,288,Provide APIs to apply merge updates to a thing without affecting existing parts,zubairhamed,2336402,Zubair Hamed,,CLOSED,2018-11-19T13:18:06Z,2021-04-08T07:35:01Z,"Hi,

is there a way to update multiple parts of a twin/thing without affecting the entire thing using the ditto protocol?

example:
- sending an update to path ""/"" would mean:
a) overwriting parts which may not be desired to be update (e..g the vorto ""definition"")
b) updating static properties such as attribute

if i want to update say 10 datapoints on a thing, this would mean making 10 calls to the individual features. the updating client needs to know everything about the thing including all the meta information..

solution: maybe: its possible to send an array of commands for path and value instead of singular values?

Or is there anothe way to do so?

Z
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/288/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/288,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQzOTg5NDQ2OA==,ditto,439894468,288,NA,jufickel-b,17162397,Juergen Fickel,,NA,2018-11-19T13:35:19Z,2018-11-19T13:35:19Z,"Hi Zubair,

You can locally update your Features and send them as a whole to .../\<thing-id\>/features. The same applies to Attributes. 

Kind regards

Jürgen","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQzOTg5NDQ2OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/288,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQzOTg5NzQ0MA==,ditto,439897440,288,NA,zubairhamed,2336402,Zubair Hamed,,NA,2018-11-19T13:45:34Z,2018-11-19T13:45:34Z,"Woudn't this wipe off any data which in this case don't want to? e.g. ""definition""?
This would mean the ""local update"" would need additional meta information prior to the update, no?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQzOTg5NzQ0MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/288,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQzOTg5OTE0OA==,ditto,439899148,288,NA,jufickel-b,17162397,Juergen Fickel,,NA,2018-11-19T13:51:23Z,2018-11-19T13:51:23Z,"You are right, PUT overwrites all existing Features. Therefore you should GET them beforehand to have the most recent state before updating them. To avoid lost updates in case of several clients you could harness [ETags](https://www.eclipse.org/ditto/httpapi-concepts.html#etag).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQzOTg5OTE0OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/288,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQzOTkwMzQ4OQ==,ditto,439903489,288,NA,zubairhamed,2336402,Zubair Hamed,,NA,2018-11-19T14:05:45Z,2018-11-19T14:05:45Z,"Hi Juergen,

Thanks for the speedy replies.

Unfortunately doing a GET prior to a PUT all the time is not feasible at all.

1. If a device uses the Ditto protocol and it needs to update multiple sensor values (be it via Hono or directly to Ditto), doing a GET all the time is not feasible.  this would mean the device would additionally need connectivity to IoT Things and apiTokens etc to do this.

2. If it isn't sending via Ditto and it sends over a few bytes of byte array which needs to be unpacked into multiple bytes, the Ditto Mapping engine doesn't allow doing a GET anyway prior to update. Additionally you can't use this to do multiple update calls either.

Z","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQzOTkwMzQ4OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/288,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQzOTkxMTI3MQ==,ditto,439911271,288,NA,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,NA,2018-11-19T14:29:35Z,2018-11-19T14:29:35Z,"Hi Zubair,

unfortunately currently we don't support something like a PATCH request that allows to update a thing partially.
You're currently required to do multiple PUT requests (ModifyFeature/ModifyAttribute commands) to the respective Attributes/Features if a GET is not possible.
For Features you can even do a PUT request to /things/{thingId}/features/{featureId}/properties (ModifyFeatureProperties) or  /things/{thingId}/features/{featureId}/properties/{propertyPath} (ModifyFeatureProperty).

But I guess you're already aware of this and that's what you meant when you said 

> ""if i want to update say 10 datapoints on a thing, this would mean making 10 calls to the individual features"".

I'm sorry that I can't give you a more satisfying answer right now.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQzOTkxMTI3MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/288,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ0MDE2NzM4OA==,ditto,440167388,288,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-11-20T07:09:12Z,2018-11-20T07:09:12Z,"Thanks Zubair for reporting.

We already thought about adding such a ""PATCH"" metaphor - or additionally support sending multiple Ditto commands aggregated in one message (which you also suggested - that would be easier, so we'll also track that in another issue).

We will use this issue for further discussion and tracking the feature.

Our thoughts were that we not only support this for the Ditto Protocol, but also for the HTTP-API.
That way you could do a HTTP PATCH request (e.g. with [JsonPatch](http://jsonpatch.com)) and only modify very selectively.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ0MDE2NzM4OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/288,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ4NTQ1Mzg5Ng==,ditto,485453896,288,NA,moebigit,11293889,,,NA,2019-04-22T15:42:30Z,2019-04-22T15:42:30Z,"Hello everybody

I have a similar use case where I would like to send telemetry messages to the hub in ditto format which then updates my thing but only the respective features of my thing.
For optimization I won't send all features with every message - only the ones that have changed, and I also don't want to send individual messages for each property change to keep the number of requests to a minimum.

In my case, either being able to merge my feature structure with the current Twin state would be helpful or being able to provide multiple ""path/value""-combinations inside the ditto message.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ4NTQ1Mzg5Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/288,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ4NTY1OTA1Nw==,ditto,485659057,288,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-04-23T06:20:47Z,2019-04-23T06:20:47Z,"Sure, still a very valid feature request.
We currently more think about a new verb in the Ditto Protocol (we currently have: create, delete, modify, read): *merge*
That - differently than ""modify"" - would only update the parts which were specified in the payload and leave the other parts of the thing (or feature, property etc.) JSON intact.

At the HTTP API this could be a POST for *merge* instead of a PUT (for modify).

That would be easier to use than a JSON Patch or than specifying multiple path/value entries.
What do you think? ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ4NTY1OTA1Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/288,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU2NTk4ODY4NQ==,ditto,565988685,288,NA,BobClaerhout,3315222,Bob Claerhout,,NA,2019-12-16T09:57:51Z,2019-12-16T09:57:51Z,"Hi all,
It looks like we are in need of this feature as well. Any updates on this?
Personally I'm in favor for the new verb in the Ditto Protocol and _merge_ seems like a perfect one!","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU2NTk4ODY4NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/288,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU2NjAwMzI5Mw==,ditto,566003293,288,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-12-16T10:35:54Z,2019-12-16T10:35:54Z,"The feature definitely will be coming, it's ""just"" a question about prioritization and resources ;)

So I can't really say when this issue will be done.
Currently I don't see it in Ditto 1.1.0, if you want to start contributing on it, we could definitely support when problems arise :)

On a conceptual level it is quite clear how to add this to Ditto and there should be no major ""roadblocks"" when implementing.

For the implementation I see 2 options:
* either copy all `Modify*` command (maybe also event) classes to their `Merge*` counterpart classes
   * e.g.: `ModifyThing` ->copy-> `MergeThing`
   * add separate persistence strategies as well in `org.eclipse.ditto.services.things.persistence.actors.strategies.commands.ThingCommandStrategies`
   * add separate concierge enforcements
   * this would be very many changes towards LoC, duplicated unit tests, etc.
* or: make `Modify*` command (maybe also the event) classes aware of whether ""replace"" or ""merge"" semantics should be applied
   * also persistence strategies must make use of that differentiation
   * concierge enforcement should not be affected

I prefer the second one but am not yet sure if this will work everywhere.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU2NjAwMzI5Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/288,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyOTY1Mzc0OQ==,ditto,729653749,288,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-11-18T12:45:03Z,2020-11-18T12:45:03Z,"I would suggest for HTTP to use the `PATCH` verb and to implement [JSON Merge Patch RFC](https://tools.ietf.org/html/rfc7396) which is waaay easier than the mighty [JSON Patch](http://jsonpatch.com).
This article nails it IMO: https://apisyouwonthate.com/blog/put-vs-patch-vs-json-patch","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyOTY1Mzc0OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/288,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc3MjYwOTM0Mg==,ditto,772609342,288,NA,e-grigorov,38859917,Evgeni Grigorov,Evgeni.Grigorov@bosch.io,NA,2021-02-03T15:48:52Z,2021-02-03T15:48:52Z,"I checked the linked RFC document and would like to access some topics:
* I am curious how do you plan to address some of the limitations of JSON merge patch like null values?
* How do you envision the events? Currently, the events are somehow self-contained and easy to be consumed. I guess that the even consumer will continue to use them without merge complications, right?
* I guess that the merge will work in an atomic way. How many events can be produced from single merge request?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc3MjYwOTM0Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/288,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc3MzA1ODAxNQ==,ditto,773058015,288,NA,stmaute,17831060,Stefan Maute,,NA,2021-02-04T06:11:03Z,2021-02-04T06:11:03Z,"Hi @e-grigorov,

i will try to answer your questions. 

> I am curious how do you plan to address some of the limitations of JSON merge patch like null values?

Regarding the `null` value we have implemented the spec in the RFC. This means that setting `null` for a key will delete this from the object.
The following example should clarify this:
Given the following example JSON document:
```
{
     ""title"": ""Goodbye!"",
     ""author"" : {
       ""givenName"" : ""John"",
       ""familyName"" : ""Doe""
     },
     ""tags"":[ ""example"", ""sample"" ],
     ""content"": ""This will be unchanged""
}
```
Applying the following PATCH   
PATCH /my/resource HTTP/1.1
Host: example.org
Content-Type: application/merge-patch+json
```
{
     ""title"": ""Hello!"",
     ""phoneNumber"": ""+01-123-456-7890"",
     ""author"": {
       ""familyName"": null
     },
     ""tags"": [ ""example"" ]
}
```
 The resulting JSON document would be:
```
 {
     ""title"": ""Hello!"",
     ""author"" : {
       ""givenName"" : ""John""
     },
     ""tags"": [ ""example"" ],
     ""content"": ""This will be unchanged"",
     ""phoneNumber"": ""+01-123-456-7890""
 }
```
I hope this makes it more clear how `null` values are handled.

> How do you envision the events? Currently, the events are somehow self-contained and easy to be consumed. I guess that the even consumer will continue to use them without merge complications, right?

There will be only one ThingMerged event emitted after the merge was successfully applied.
This event contains the path were the patch was applied and the json value.

> I guess that the merge will work in an atomic way. How many events can be produced from single merge request?

Yes each merge command will apply the value from the request to the thing in an atomic way. You can use [conditional-requests](https://www.eclipse.org/ditto/httpapi-concepts.html#conditional-requests) to ensure the order who commands are applied.
So for example it is possible to add/update/delete some attributes and add/update/delete one or more features within a single request.

If you have more questions regarding this feature please let us know.

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc3MzA1ODAxNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/288,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc3MzEwNTczMA==,ditto,773105730,288,NA,e-grigorov,38859917,Evgeni Grigorov,Evgeni.Grigorov@bosch.io,NA,2021-02-04T07:48:48Z,2021-02-04T07:48:48Z,"> I hope this makes it more clear how null values are handled.

Actually, the question was how this limitation is addressed i.e. how to set null value with JSON merge patch? Null is a valid Ditto property value and should be supported. Is there any way to set such value with JSON merge patch?

> This event contains the path were the patch was applied and the json value.

If we take a concrete example:
`""OutdoorTemperature"": {""properties"": {""value"": 18}},
""IndoorTemperature"": {""properties"": {""value"": 22}}`
i.e. there are two temperature features and we apply patch like:
`""OutdoorTemperature"": {""properties"": {""value"": 15}},
""IndoorTemperature"": {""properties"": {""value"": 24}}`
What is the expected event? How it looks like?

To be honest, I have a little fear that there is no modified event. It seems incompatible change because the existing applications cannot rely only on modified events any more. What do you think about this scenario: features will be modified without modified event?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc3MzEwNTczMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/288,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc3MzEyNDgyNQ==,ditto,773124825,288,NA,stmaute,17831060,Stefan Maute,,NA,2021-02-04T08:24:34Z,2021-02-04T08:24:34Z,"> Actually, the question was how this limitation is addressed i.e. how to set null value with JSON merge patch? Null is a valid Ditto property value and should be supported. Is there any way to set such value with JSON merge patch?

When applying the merge commands you have to set **Content-Type: application/merge-patch+json**.  This content-type indicates that `null` values will be handled to delete entries from things. 


For every merge command an ThingMerged event is emitted with the path of the thing which is added/updated/deleted and the value. So for every change an event is emitted.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc3MzEyNDgyNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/289,https://api.github.com/repos/eclipse-ditto/ditto/issues/289,ditto,382529906,289,Support combining several DittoProtocol commands in a single aggregating one,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2018-11-20T07:13:50Z,2022-09-21T07:17:03Z,"In #288 an alternative solution for doing multiple ""modify"" operations by only issuing a single DittoProtocol command was suggested:

Adding a DittoProtocol command which contains several other DittoProtocol commands (as simple Json array in its JSON form).

As this would be simpler than #288 (adding a ""PATCH"" command), we track it separately.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/289/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/289,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ0MTU4ODg5MQ==,ditto,441588891,289,NA,avgustinmm,36030563,Avgustin Marinov,Avgustin.Marinov@bosch.io,NA,2018-11-26T10:22:11Z,2018-11-26T10:22:11Z,"It seems like something that we could use. In our case we get batch of change events from the gateways that we pass to ditto (through hono) using a hono message per command. A batch command for ditto means that we could send a single message per multiple commands that should optimize the hono usage (e.h. tragic, latency ..).  That, in theory, could allow the ditto service to use the underlying database in more efficient way. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ0MTU4ODg5MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/289,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc0MzA3OTY5Mw==,ditto,743079693,289,NA,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,NA,2020-12-11T09:24:32Z,2020-12-11T09:24:32Z,Is this relevant after #288?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc0MzA3OTY5Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/289,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc0MzA4NDQ2MQ==,ditto,743084461,289,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-12-11T09:32:47Z,2020-12-11T09:32:47Z,"It could still be, but with even lower priority when #288 is in place.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc0MzA4NDQ2MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/298,https://api.github.com/repos/eclipse-ditto/ditto/issues/298,ditto,384649345,298,Let policies import other policies to enable re-use when securing things,zubairhamed,2336402,Zubair Hamed,,CLOSED,2018-11-27T06:51:26Z,2022-12-16T05:57:24Z,"Hi,
I wonder how this can be done/modeled:

Imagine Things owned by a company. Within the company you have 2 access/users. One which has ADMIN rights, the other is a TECHNICAL user which has perhaps READ rights for only specific sensitive features. Such rights would be applied to all things.

However, there would be a different class of users who have perhaps rights to another set of features. This could be domain data such as sensor data or device state but NOT the sensitive keys mentioned above. Additionally each user would have rights to only variable set of things and not all of them.

Using a single policy would mean:
1. Maintaining a one-to-one relation between policies and things
2. make it very tideous to maintain such relationships programmatically.

Example:
![folie1](https://user-images.githubusercontent.com/2336402/49063607-30ffaf80-f218-11e8-8c1f-585ebd60791c.JPG)

Is there a solution to this? Am i missing something?

if not, perhaps allowing multiple policies to be applied per thing might make sense. (i.e. one policy per user or actor instead of per asset).
![folie2](https://user-images.githubusercontent.com/2336402/49063889-31e51100-f219-11e8-829b-84aeaa39d47f.JPG)

WDYT?

Z
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/298/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/298,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ0MTk1MjcyOQ==,ditto,441952729,298,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-11-27T07:15:07Z,2018-11-27T07:15:07Z,"Hi Zubair.
I recently thought about something which might help you (but I'm afraid this is only a first idea). 
But would be great to get a feedback whether this would also help your use case.

The idea is to enable ""importing"" other policies in a policy, e.g.:
```json
{
  ""policyId"": ""org.eclipse.ditto:solution-policy"",
  ""entries"": {
    ""solution-owner"": {
    ...
    }
  }
}
```
The above could be imported:
```json
{
  ""policyId"": ""org.eclipse.ditto:customer-policy"",
  ""imports"": {
    ""org.eclipse.ditto:solution-policy"": {
      ""included"": [], // optionally specify includes/excludes 
      ""excluded"": [""end-user""] // if both are empty or missing, all entries are included
    }
  },
  ""entries"": {
    ""end-user"": { // we have to think about what to do with overwrites
    ...
    }
  }
}
```

That would cause that for the second policy, the first policy is imported and merged.
There is no special overwrite semantics - the standard policy way applies: 
* deeper nested hierarchy is more important than less nested 
* on the same hierarchy level `revoke` is stronger than `grant`

Benefits of that:
* policies basically can inherit from other policies (and even multiple ones)
* a single ""solution policy"" could contain administrative entries - once that is changed, all policies and therefore things importing from that are automatically adjusted

WDYT? That should be very similar to ""multiple policies applied per thing"".","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ0MTk1MjcyOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/298,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ0MTk5MTMwNA==,ditto,441991304,298,NA,danielFesenmeyer,11198630,Daniel Fesenmeyer,daniel.fesenmeyer@bosch.com,NA,2018-11-27T09:37:41Z,2018-11-27T09:37:41Z,"Just one remark from my side: Transitively importing policies would be a very powerful feature. The problem I see is how to prevent infinite loops when resolving policies (this would be a really intricate issue imo). We could prevent this by importing only ""direct"" entries, i.e. no transitive entries. Of course, this way only one level of ""nesting"" would be supported, but it would also make it easier to understand from a user perspective imo.

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ0MTk5MTMwNA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/298,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ0MTk5NjI4Mw==,ditto,441996283,298,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-11-27T09:52:44Z,2018-11-27T09:52:44Z,"I agree - should not be possible to transitively inherit policies ... that really makes things complicated, also for the user of such a feature.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ0MTk5NjI4Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/298,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ0MjA0NjA5NQ==,ditto,442046095,298,NA,zubairhamed,2336402,Zubair Hamed,,NA,2018-11-27T12:47:19Z,2018-11-27T12:47:19Z,@thjaeckle  I think that might work as well! ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ0MjA0NjA5NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/298,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5ODEzNzEyMw==,ditto,498137123,298,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-06-03T07:02:12Z,2019-06-03T07:02:12Z,Changed the title as introducing multiple policies for a single thing is difficult without breaking the JSON format.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5ODEzNzEyMw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/298,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5MDYzOTg1MA==,ditto,790639850,298,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-03-04T14:02:51Z,2021-03-04T14:02:51Z,"2 years ago I did a little proof of concept - I now pushed that onto a branch: https://github.com/eclipse/ditto/tree/lab/policy-imports
However, that branch does not yet compile and policy enforcement most likely does not work  (it did 2 years ago - the policy enforcer used an async cache loader which loaded imported policies on demand).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5MDYzOTg1MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/298,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85HJbjY,ditto,1193654488,298,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-07-25T06:55:42Z,2022-07-25T06:55:42Z,"The Ditto team is planning to start working on this topic.
We would like to use the former PoC at branch https://github.com/eclipse/ditto/tree/lab/policy-imports and also the stale PR #993 as a basis for the work - as many ""model"" and ""command"" related functionality is already in place.

Some additions to the original concept:
* there is a (configurable) limit of how many policies can be imported from
* for simplification, the ""imports"" shall not be able to define ""included"" and ""excluded"", but only included ""entries""
* transitive imports are not supported (adds a lot of additional complexity)
* a policy entry shall define whether it should be ""importable"", but not with a boolean, but with a string being a enum of (e.g. - terms still part of implementation):
   * ""implicitly"" (being also the default if not defined) - such a policy entry defined by Policy A are always included when a Policy B imports Policy A
   * ""explicitly"" - such a policy entry defined by Policy A can be included when a Policy B imports Policy A when Policy B defines it in the ""entries"" to import
   * ""never"" - such a policy entry defined by Policy A can never be included when another Policy imports Policy A

Example:
Policy A:
```json
{
  ""policyId"": ""org.eclipse.ditto:policy-a"",
  ""entries"": {
    ""end-user"": {
       ""importable"": ""explicit"",
       ""subjects"": {
         ..
       },
       ""resources"": {
         ..
       }
    }
  }
}
```

Policy B:
```json
{
  ""policyId"": ""org.eclipse.ditto:policy-b"",
  ""imports"": {
    ""org.eclipse.ditto:policy-a"": {
      ""entries"": [""end-user""]
    }
  },
  ""entries"": {
    ""others"": {
      ..
    }
  }
}
```

@BobClaerhout @vhdirk does this still fit also to your use-case?
I would suggest that we now take the lead on this, as with the new search #1383 and the removal of concierge in #1416 applying the policy imports will drastically change comparing to the implementation I and @vhdirk worked on in #993 

When working on this, inspiration of how e.g. caching is done or how policy imports are reflected in the search index can be found in #993","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85HJbjY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/298,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85HJsmx,ditto,1193724337,298,NA,vhdirk,1424486,Dirk Van Haerenborgh,,NA,2022-07-25T08:08:54Z,2022-07-25T08:08:54Z,"With transitive imports, I'm assuming you mean that i.e. PolicyC cannot import ""end-user"" from policyB (because that was imported by policyB itself)?
So essentially, we can only construct policies 1 level 'deep'? We have to look into how that would fit our use case. Most of the usecase is still a theoretical exercise rather than an actual implementation so there is some leeway.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85HJsmx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/298,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85HJva9,ditto,1193735869,298,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-07-25T08:20:07Z,2022-07-25T08:20:07Z,"> With transitive imports, I'm assuming you mean that i.e. PolicyC cannot import ""end-user"" from policyB (because that was imported by policyB itself)? So essentially, we can only construct policies 1 level 'deep'? We have to look into how that would fit our use case. Most of the usecase is still a theoretical exercise rather than an actual implementation so there is some leeway.

Yes. However, Policy C could still import both, Policy A and Policy B explicitly, so this would be an option ...
Transitive imports is something we currently don't see a need for in our customer's use-cases, but that could still be added at a later point.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85HJva9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/300,https://api.github.com/repos/eclipse-ditto/ditto/issues/300,ditto,386729453,300,Update dependencies to latest releases,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2018-12-03T09:33:29Z,2019-03-27T09:33:52Z,"* Akka: 2.5.21 (wait for that)
* akka-management
* aeron (transitively updated)
* ssl-config (transitively updated)
* alpakka-mqtt (once available in 1.0 release)

- Update scala version we compile with to 2.12.8
- Also add CQs for qpid-jms and proton-j
 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/300/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/300,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2MzY3OTc4NA==,ditto,463679784,300,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-02-14T15:53:59Z,2019-02-14T15:53:59Z,"Created CQs for:
* aeron-client 1.15.1: https://dev.eclipse.org/ipzilla/show_bug.cgi?id=18996
* aeron-driver 1.15.1: https://dev.eclipse.org/ipzilla/show_bug.cgi?id=18997
* Typesafe ssl-config-core 0.3.7: https://dev.eclipse.org/ipzilla/show_bug.cgi?id=18998
* Akka 2.5.21: https://dev.eclipse.org/ipzilla/show_bug.cgi?id=18999
* proton-j 0.31.0: https://dev.eclipse.org/ipzilla/show_bug.cgi?id=19000 (PB)
* qpid-jms-client 0.40.0: https://dev.eclipse.org/ipzilla/show_bug.cgi?id=19001
* Netty 4.1.30.Final: https://dev.eclipse.org/ipzilla/show_bug.cgi?id=19002 (PB)
* akka-management 1.0.0: https://dev.eclipse.org/ipzilla/show_bug.cgi?id=19295

Postponed waiting for releases of:
* alpakka-mqtt 1.0 (not yet foreseeable when this gets released)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2MzY3OTc4NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/305,https://api.github.com/repos/eclipse-ditto/ditto/issues/305,ditto,389643386,305,Unable to install services dependencies,Gaurav047,24854410,Gaurav Kumar,gauravkumarbtp@gmail.com,CLOSED,2018-12-11T08:19:15Z,2018-12-11T20:16:12Z,"When I tried to install ditto on ubuntu 16.0 I got the following errors : 

[INFO] Eclipse Ditto :: Services .......................... FAILURE [  0.544 s]
[INFO] Eclipse Ditto :: Services :: Models ................ SKIPPED
[INFO] Eclipse Ditto :: Services :: Models :: Streaming ... SKIPPED
[INFO] Eclipse Ditto :: Services :: Utils ................. SKIPPED
[INFO] Eclipse Ditto :: Services :: Utils :: Akka Utils ... SKIPPED
[INFO] Eclipse Ditto :: Services :: Utils :: Config Utils . SKIPPED
[INFO] Eclipse Ditto :: Services :: Utils :: Health Utils . SKIPPED
[INFO] Eclipse Ditto :: Services :: Utils :: Cluster Utils  SKIPPED
[INFO] Eclipse Ditto :: Services :: Utils :: DevOps ....... SKIPPED
[INFO] Eclipse Ditto :: Services :: Utils :: Metrics ...... SKIPPED
[INFO] Eclipse Ditto :: Services :: Utils :: Tracing Utils  SKIPPED
[INFO] Eclipse Ditto :: Services :: Models :: Things ...... SKIPPED
[INFO] Eclipse Ditto :: Services :: Utils :: Cache Utils .. SKIPPED
[INFO] Eclipse Ditto :: Services :: Utils :: Test Utils ... SKIPPED
[INFO] Eclipse Ditto :: Services :: Utils :: Persistence Utils SKIPPED
[INFO] Eclipse Ditto :: Services :: Base .................. SKIPPED
[INFO] Eclipse Ditto :: Services :: Models :: Concierge ... SKIPPED
[INFO] Eclipse Ditto :: Services :: Concierge ............. SKIPPED
[INFO] Eclipse Ditto :: Services :: Concierge :: Batch .... SKIPPED
[INFO] Eclipse Ditto :: Services :: Models :: Policies .... SKIPPED
[INFO] Eclipse Ditto :: Services :: Models :: Things Search SKIPPED
[INFO] Eclipse Ditto :: Services :: Models :: Connectivity  SKIPPED
[INFO] Eclipse Ditto :: Services :: Concierge :: Util ..... SKIPPED
[INFO] Eclipse Ditto :: Services :: Concierge :: Cache .... SKIPPED
[INFO] Eclipse Ditto :: Services :: Concierge :: Enforcement SKIPPED
[INFO] Eclipse Ditto :: Services :: Utils :: Distributed Data SKIPPED
[INFO] Eclipse Ditto :: Services :: Utils :: Namespaces ... SKIPPED
[INFO] Eclipse Ditto :: Services :: Concierge :: Starter .. SKIPPED
[INFO] Eclipse Ditto :: Services :: Connectivity .......... SKIPPED
[INFO] Eclipse Ditto :: Services :: Connectivity :: Util .. SKIPPED
[INFO] Eclipse Ditto :: Services :: Connectivity :: Mapping SKIPPED
[INFO] Eclipse Ditto :: Services :: Utils :: Protocol ..... SKIPPED
[INFO] Eclipse Ditto :: Services :: Connectivity :: Messaging SKIPPED
[INFO] Eclipse Ditto :: Services :: Connectivity :: Starter SKIPPED
[INFO] Eclipse Ditto :: Services :: Gateway ............... SKIPPED
[INFO] Eclipse Ditto :: Services :: Gateway :: Streaming .. SKIPPED
[INFO] Eclipse Ditto :: Services :: Gateway :: Util ....... SKIPPED
[INFO] Eclipse Ditto :: Services :: Gateway :: Security ... SKIPPED
[INFO] Eclipse Ditto :: Services :: Gateway :: Health ..... SKIPPED
[INFO] Eclipse Ditto :: Services :: Utils :: JWT .......... SKIPPED
[INFO] Eclipse Ditto :: Services :: Gateway :: Endpoints .. SKIPPED
[INFO] Eclipse Ditto :: Services :: Utils :: Aggregator ... SKIPPED
[INFO] Eclipse Ditto :: Services :: Gateway :: Proxy ...... SKIPPED
[INFO] Eclipse Ditto :: Services :: Gateway :: Starter .... SKIPPED
[INFO] Eclipse Ditto :: Services :: Policies .............. SKIPPED
[INFO] Eclipse Ditto :: Services :: Policies :: Util ...... SKIPPED
[INFO] Eclipse Ditto :: Services :: Utils :: Conditional Header Utils SKIPPED
[INFO] Eclipse Ditto :: Services :: Policies :: Persistence SKIPPED
[INFO] Eclipse Ditto :: Services :: Policies :: Starter ... SKIPPED
[INFO] Eclipse Ditto :: Services :: Things ................ SKIPPED
[INFO] Eclipse Ditto :: Services :: Things :: Util ........ SKIPPED
[INFO] Eclipse Ditto :: Services :: Things :: Persistence . SKIPPED
[INFO] Eclipse Ditto :: Services :: Things :: Starter ..... SKIPPED
[INFO] Eclipse Ditto :: Services :: Thing Search .......... SKIPPED
[INFO] Eclipse Ditto :: Services :: Thing Search :: Common  SKIPPED
[INFO] Eclipse Ditto :: Services :: Thing Search :: Persistence SKIPPED
[INFO] Eclipse Ditto :: Services :: Thing Search :: Updater Actors SKIPPED
[INFO] Eclipse Ditto :: Services :: Thing Search :: Starter SKIPPED
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  02:03 min
[INFO] Finished at: 2018-12-11T13:45:17+05:30
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal io.fabric8:docker-maven-plugin:0.26.0:remove (docker-build-image) on project ditto-services: Cannot create docker access object : Cannot extract API version from server http://:2375 : URI does not specify a valid host name: http://:2375/version -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
[ERROR] 
[ERROR] After correcting the problems, you can resume the build with the command
[ERROR]   mvn <goals> -rf :ditto-services
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/305/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/305,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ0NjExNzM5NA==,ditto,446117394,305,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-12-11T08:40:09Z,2018-12-11T08:40:09Z,"Hi there.
Seems like you used the wrong params for building.

From the README.md:
```
# if you have the docker daemon running with remote access enabled (e.g. in a Vagrant box or on localhost):
mvn clean install -Pdocker-build-image -Ddocker.daemon.hostname=<ip/host of your docker daemon>
# if you have the docker daemon running on your machine and you are running on Unix, you can also connect against the docker socket:
mvn clean install -Pdocker-build-image -Ddocker.daemon.url=unix:///var/run/docker.sock
```
Could you try that?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ0NjExNzM5NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/305,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ0NjE0NTQ0MA==,ditto,446145440,305,NA,Gaurav047,24854410,Gaurav Kumar,gauravkumarbtp@gmail.com,NA,2018-12-11T10:09:29Z,2018-12-11T10:09:29Z,"Thanks for quick response , I tried the second one and installed ditto. :))
# if you have the docker daemon running on your machine and you are running on Unix, you can also connect against the docker socket:
mvn clean install -Pdocker-build-image -Ddocker.daemon.url=unix:///var/run/docker.sock

A few more bugs( maybe)  , 
as mentioned on this page : https://www.eclipse.org/ditto/installation-running.html

when I run the command : docker-compose up -d , first I got the following error 
.....................................
admin1@admin1-HP-EliteDesk-800-G1-TWR:~/ditto-master/deployment/docker$ docker-compose up -d
ERROR: Version in ""./docker-compose.yml"" is unsupported. You might be seeing this error because you're using the wrong Compose file version. Either specify a version of ""2"" (or ""2.0"") and place your service definitions under the `services` key, or omit the `version` key and place your service definitions at the root of the file to use version 1.
For more on the Compose file format versions, see https://docs.docker.com/compose/compose-file/

................................

Now, I removed the    version : '2.4'   line from docker-compose.yml file and tried again but still it shows the following error

...............................
ERROR: Invalid interpolation format for ""connectivity"" option in service ""services"": ""docker.io/eclipse/ditto-connectivity:${DITTO_VERSION:-latest}""
...............................
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ0NjE0NTQ0MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/305,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ0NjE0NjIwOQ==,ditto,446146209,305,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2018-12-11T10:12:00Z,2018-12-11T10:12:00Z,"Please update your docker-compose version.
As the README.md states, you need ""at least version 1.22"".","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ0NjE0NjIwOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/305,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ0NjE0ODI5NQ==,ditto,446148295,305,NA,Gaurav047,24854410,Gaurav Kumar,gauravkumarbtp@gmail.com,NA,2018-12-11T10:18:31Z,2018-12-11T10:18:31Z,"It worked..
Thanks a lot :)
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ0NjE0ODI5NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/308,https://api.github.com/repos/eclipse-ditto/ditto/issues/308,ditto,391175056,308,Switch to Java 11 as default runtime for Ditto images,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2018-12-14T16:18:15Z,2020-01-16T06:16:56Z,"Use at least OpenJ9 0.12.0 (0.11.0 has a bug with SSL).
I would suggest to keep the compile level at Java 8 until we really need to make use of newer Java language features.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/308/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/308,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3NTAwMTQ3NQ==,ditto,575001475,308,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-01-16T06:16:51Z,2020-01-16T06:16:51Z,Closed via #595 ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3NTAwMTQ3NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/310,https://api.github.com/repos/eclipse-ditto/ditto/issues/310,ditto,397684146,310,Ditto payload mapping ,Saunak94,35859990,Saunak,,CLOSED,2019-01-10T06:00:30Z,2019-02-04T09:15:12Z,"hello, am new to ditto ..
hello, am new to ditto and am eager to learn about ditto as I am using eclipse ditto for creating a twin device (a device digital replica ).
I have used the following link as my guideline and followed the step as said.
https://github.com/eclipse/ditto-examples/tree/master/mqtt-bidirectional

I have successfully created the MQTT connection and the next step is payload mapping. Before I map with the devices I need to post a payload mapping function which is said to be an incoming mapping function. whenever am creating this function am getting an error of connection refused and you please explain me why?
Code creating the MQTT Connections:
![image](https://user-images.githubusercontent.com/35859990/50948387-50048900-14c8-11e9-9610-be817ce551d0.png)
Responce from MQtt Connections.
`
{
    ""?"": {
        ""?"": {
            ""type"": ""connectivity.responses:createConnection"",
            ""status"": 201,
            ""connection"": {
                ""id"": ""mqtt-example-connection-1"",
                ""name"": null,
                ""connectionType"": ""mqtt"",
                ""connectionStatus"": ""open"",
                ""uri"": ""tcp://test.mosquitto.org:1883"",
                ""sources"": [
                    {
                        ""addresses"": [
                            ""ditto-tutorial/#""
                        ],
                        ""consumerCount"": 1,
                        ""authorizationContext"": [
                            ""nginx:ditto""
                        ],
                        ""qos"": 0
                    }
                ],
                ""targets"": [
                    {
                        ""address"": ""ditto-tutorial/{{ thing:id }}"",
                        ""topics"": [
                            ""_/_/things/twin/events"",
                            ""_/_/things/live/messages""
                        ],
                        ""authorizationContext"": [
                            ""nginx:ditto""
                        ],
                        ""qos"": 0
                    }
                ],
                ""clientCount"": 1,
                ""failoverEnabled"": true,
                ""validateCertificates"": true,
                ""processorPoolSize"": 5,
                ""tags"": []
            }
        }
    }
}
`
Body for payload mapping.
`{
    ""targetActorSelection"": ""/system/sharding/connection"",
    ""headers"": {
    	""aggregate"": false
    },
    ""piggybackCommand"": {
        ""type"": ""connectivity.commands:modifyConnection"",
        ""connection"": {
            ""id"": ""mqtt-example-connection-123"",
            ""connectionType"": ""mqtt"",
            ""connectionStatus"": ""open"",
            ""failoverEnabled"": true,
            ""uri"": ""tcp://test.mosquitto.org:1883"",
            ""sources"": [{
                ""addresses"": [""ditto-tutorial/#""],
                ""authorizationContext"": [""nginx:ditto""],
                ""qos"": 0,
                ""filters"": []
            }],
            ""targets"": [{
                ""address"": ""ditto-tutorial/{{ thing:id }}"",
                ""topics"": [
                ""_/_/things/twin/events"",
                ""_/_/things/live/messages""
                ],
                ""authorizationContext"": [""nginx:ditto""],
                ""qos"": 0
            }],
            ""mappingContext"": {
                ""mappingEngine"": ""JavaScript"",
                ""options"": {
                    ""incomingScript"": ""function mapToDittoProtocolMsg(headers, textPayload, bytePayload, contentType) {const jsonString = String.fromCharCode.apply(null, new Uint8Array(bytePayload));const jsonData = JSON.parse(jsonString); const thingId = jsonData.thingId; const value = { temp_sensor: { properties: { value: jsonData.temp } },altitude:        {            properties:            {                value: jsonData.alt            }        }    };    return Ditto.buildDittoProtocolMsg('my.test', thingId, 'things', 'twin', 'commands', 'modify', '/features', headers, value);}""
                }
            }
        }
    }
}`
Resonce from payload mapping.
![image](https://user-images.githubusercontent.com/35859990/50949150-1a14d400-14cb-11e9-9cb8-1931f8edef3f.png)

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/310/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/310,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ1Mjk5MDM0OA==,ditto,452990348,310,NA,ffendt,2587759,Florian Fendt,,NA,2019-01-10T06:55:47Z,2019-01-10T06:55:47Z,"Hi saunakasansol94,

can you have a look at the logs of the connectivity service?
If you used the provided docker-compose deployment you could get the logs using
`docker service logs connectivity`
The logs should give a hint on what's going wrong.

Best regards,
Florian","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ1Mjk5MDM0OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/310,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ1MzA2NDU3NQ==,ditto,453064575,310,NA,Saunak94,35859990,Saunak,,NA,2019-01-10T11:32:13Z,2019-01-10T11:32:13Z,"![image](https://user-images.githubusercontent.com/35859990/50965933-742c8e00-14f9-11e9-953c-76aa3a0afd67.png)

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ1MzA2NDU3NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/310,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ1MzA3MzQ3Ng==,ditto,453073476,310,NA,ffendt,2587759,Florian Fendt,,NA,2019-01-10T12:06:36Z,2019-01-10T12:06:36Z,"Sorry, i posted the wrong command, try
`docker-compose logs connectivity`","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ1MzA3MzQ3Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/310,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ1MzM3MjA4Nw==,ditto,453372087,310,NA,Saunak94,35859990,Saunak,,NA,2019-01-11T04:09:56Z,2019-01-11T04:09:56Z,"the output of the command
![image](https://user-images.githubusercontent.com/35859990/51012704-87d10680-1584-11e9-92ba-bc39ccf91218.png)
![image](https://user-images.githubusercontent.com/35859990/51012750-b949d200-1584-11e9-93b6-e00912b268da.png)
the output seems to be fine... do you find any problem with it?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ1MzM3MjA4Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/310,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ1MzQ1OTkyNw==,ditto,453459927,310,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-01-11T09:57:55Z,2019-01-11T09:57:55Z,"Hi.

What makes you assume that you ""have successfully created the MQTT connection""?
It is not the payload mapping which fails according to the displayed error message, but the connection to the MQTT broker.

Best use the [test connection](https://www.eclipse.org/ditto/connectivity-manage-connections.html#test-connection) command in order to test whether you can connect.

If the message keeps the same:
are you maybe behind a corporate proxy preventing you connecting to ""test.mosquitto.org:1883""?

You should check if you can establish a connection to that host and port.
E.g. via `telnet`:
```
telnet test.mosquitto.org 1883
```
Or via `nc`:
```
nc -zv test.mosquitto.org 1883
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ1MzQ1OTkyNw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/310,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2MDE3NjgxNw==,ditto,460176817,310,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-02-04T09:15:12Z,2019-02-04T09:15:12Z,"Closing due to inactivity, please open a new issue when you can rules out connectivity issues.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2MDE3NjgxNw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/317,https://api.github.com/repos/eclipse-ditto/ditto/issues/317,ditto,400763956,317,Collect connectivity metrics and provide via devops command,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2019-01-18T15:08:48Z,2019-02-06T13:04:52Z,"Goal: Provide information about
- how many messages have been consumed (e.g. from a MQTT or AMQP endpoint)?
- how many of those messages were successfully processed / how many failed?
- how many times was the payload mapping successful?
- how many messages were dropped after the payload mapping?

Do that for ""inbound"" messages (e.g. commands, messages) as well as ""outbound"" (e.g. events, responses).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/317/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/318,https://api.github.com/repos/eclipse-ditto/ditto/issues/318,ditto,400765163,318,Collect connectivity log entries and provide via devops command,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2019-01-18T15:11:45Z,2019-07-09T09:19:30Z,"Goal: 
In order to let a user analyze failures / unexpected behavior in his connections (e.g. to an MQTT or AMQP broker) without giving him full access to the log-files of Ditto, a *connection scoped* mechanism for retrieving connectivity logs should be added.

With a single devops command those logs can be retrieved (as JSON).

The logs should contain:
- infos
- warnings
- errors
- connection events (e.g.: changes in connection state, reconncetions, etc.)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/318/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/318,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUwOTU2MzYwNg==,ditto,509563606,318,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-07-09T09:19:22Z,2019-07-09T09:19:22Z,Fixed by #430,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUwOTU2MzYwNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/320,https://api.github.com/repos/eclipse-ditto/ditto/issues/320,ditto,402564636,320,Command & Control not responding as expecting,s-kurauchi,46016193,cl-s-kurauchi,,CLOSED,2019-01-24T06:44:04Z,2019-01-24T07:34:22Z,"I tried hono-ditto integration and command & control feature.
I finished checking the operation of command & control of hono alone.
I Tried blog's tutorial and send a ditto message but hono receive no response.
Ditto log level set to debug and watch the log.
Gateway service sends message to hono but Connectivity service output no logs.
Am I misconfigured? 

- connections
```
{
  ""?"": {
    ""?"": {
      ""type"": ""connectivity.responses:retrieveConnection"",
      ""status"": 200,
      ""connection"": {
        ""id"": ""command-and-control-connection"",
        ""name"": null,
        ""connectionType"": ""amqp-10"",
        ""connectionStatus"": ""open"",
        ""uri"": ""amqp://consumer%40HONO:verysecret@192.168.10.21:15672"",
        ""sources"": [
          {
            ""addresses"": [
              ""control/org.eclipse.ditto/replies""
            ],
            ""consumerCount"": 1,
            ""authorizationContext"": [
              ""nginx:ditto""
            ],
            ""headerMapping"": {
              ""correlation-id"": ""{{ header:correlation-id }}"",
              ""status"": ""{{ header:status }}""
            }
          }
        ],
        ""targets"": [
          {
            ""address"": ""control/org.eclipse.ditto/{{ thing:id }}"",
            ""topics"": [],
            ""authorizationContext"": [
              ""nginx:ditto""
            ],
            ""headerMapping"": {
              ""reply-to"": ""control/org.eclipse.ditto/replies"",
              ""subject"": ""{{ topic:subject }}"",
              ""correlation-id"": ""{{ header:correlation-id }}""
            }
          }
        ],
        ""clientCount"": 1,
        ""failoverEnabled"": true,
        ""validateCertificates"": true,
        ""processorPoolSize"": 5,
        ""tags"": []
      }
    }
  }
}
```
```
{
  ""?"": {
    ""?"": {
      ""type"": ""connectivity.responses:retrieveConnection"",
      ""status"": 200,
      ""connection"": {
        ""id"": ""hono-sandbox-connection-1"",
        ""name"": null,
        ""connectionType"": ""amqp-10"",
        ""connectionStatus"": ""open"",
        ""uri"": ""amqp://consumer%40HONO:verysecret@192.168.10.21:15672"",
        ""sources"": [
          {
            ""addresses"": [
              ""event/org.eclipse.ditto"",
              ""telemetry/org.eclipse.ditto""
            ],
            ""consumerCount"": 1,
            ""authorizationContext"": [
              ""nginx:ditto""
            ]
          }
        ],
        ""targets"": [],
        ""clientCount"": 1,
        ""failoverEnabled"": true,
        ""validateCertificates"": true,
        ""processorPoolSize"": 5,
        ""tags"": []
      }
    }
  }
}
```
- metrics
```
{
  ""?"": {
    ""?"": {
      ""type"": ""connectivity.responses:aggregatedResponse"",
      ""status"": 200,
      ""connectionId"": ""command-and-control-connection"",
      ""responsesType"": ""connectivity.responses:retrieveConnectionMetrics"",
      ""responses"": {
        ""1"": {
          ""type"": ""connectivity.responses:retrieveConnectionMetrics"",
          ""status"": 200,
          ""connectionId"": ""command-and-control-connection"",
          ""connectionMetrics"": {
            ""connectionStatus"": ""open"",
            ""connectionStatusDetails"": ""Connection restored at 2019-01-24T06:44:57.234Z"",
            ""inConnectionStatusSince"": ""2019-01-24T06:44:57.234Z"",
            ""clientState"": ""CONNECTED"",
            ""sourcesMetrics"": [
              {
                ""addressMetrics"": {
                  ""control/org.eclipse.ditto/replies-0"": {
                    ""status"": ""open"",
                    ""statusDetails"": ""Started at 2019-01-22T16:55:51.992Z"",
                    ""messageCount"": 0
                  }
                },
                ""consumedMessages"": 0
              }
            ],
            ""targetsMetrics"": [
              {
                ""addressMetrics"": {
                  ""control/org.eclipse.ditto/{{ thing:id }}"": {
                    ""status"": ""open"",
                    ""statusDetails"": ""Started at 2019-01-22T16:55:51.993Z"",
                    ""messageCount"": 0
                  }
                },
                ""publishedMessages"": 0
              }
            ]
          }
        }
      }
    }
  }
}
```

- logs
```
gateway_1        | 2019-01-23 08:23:17,741 DEBUG [command-and-control] o.e.d.s.m.c.a.ConciergeForwarderActor akka://ditto-cluster/user/gatewayRoot/conciergeForwarder - Sending message to concierge-shard-region: <ShardedMessageEnvelope [id=thing:org.eclipse.ditto:teapot, type=messages.commands:thingMessage, message={""type"":""messages.commands:thingMessage"",""thingId"":""org.eclipse.ditto:teapot"",""message"":{""headers"":{""thing-id"":""org.eclipse.ditto:teapot"",""subject"":""command"",""correlation-id"":""command-and-control"",""x-correlation-id"":""command-and-control"",""x-forwarded-for"":""192.168.10.21"",""source"":""nginx:ditto"",""version"":2,""timeout"":60,""accept"":""*/*"",""x-real-ip"":""192.168.10.21"",""x-forwarded-user"":""ditto"",""x-ditto-dummy-auth"":""nginx:ditto"",""host"":""ditto:8080"",""auth-subjects"":[""nginx:ditto"",""ditto""],""content-type"":""application/x-www-form-urlencoded"",""direction"":""TO"",""timestamp"":""2019-01-23T08:23:17.723+01:00"",""user-agent"":""curl/7.54.0""},""payload"":""eyJ0YXJnZXRUZW1wZXJhdHVyZSI6ODV9""}}, dittoHeaders=ImmutableDittoHeaders [{correlation-id=command-and-control, channel=live, x-correlation-id=command-and-control, x-forwarded-for=192.168.10.21, source=nginx:ditto, version=2, accept=*/*, x-real-ip=192.168.10.21, x-forwarded-user=ditto, x-ditto-dummy-auth=nginx:ditto, host=ditto:8080, auth-subjects=[""nginx:ditto"",""ditto""], user-agent=curl/7.54.0}]]>
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/320/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/320,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ1NzA5MDQ4Mw==,ditto,457090483,320,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-01-24T07:08:08Z,2019-01-24T07:08:08Z,"Hi.
From the first look I would say you are missing the `topics` in your `targets`.
But I now see that the blog post also does not include them, we probably missed something there.

Please try adding following `topics` array in your `targets` (as documented in the [connection model](https://www.eclipse.org/ditto/basic-connections.html#connection-model)):
```json
        ""targets"": [
          {
            ""address"": ""control/org.eclipse.ditto/{{ thing:id }}"",
            ""topics"": [
               ""_/_/things/live/messages""
            ],
            ...
          }
        ],
```
For command&control (which uses Ditto ""messages""), adding this one topic should be sufficient.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ1NzA5MDQ4Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/320,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ1NzA5NjMwNQ==,ditto,457096305,320,NA,s-kurauchi,46016193,cl-s-kurauchi,,NA,2019-01-24T07:34:22Z,2019-01-24T07:34:22Z,"Thank you!!
It works!!","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ1NzA5NjMwNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/323,https://api.github.com/repos/eclipse-ditto/ditto/issues/323,ditto,405321348,323,Fix failing swagger documentation in sandbox,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2019-01-31T16:15:20Z,2019-02-04T09:00:33Z,"The Ditto sandbox is currently not able to display the swagger documentation (reported via Gitter).
Seems at first sight like a bug in swagger.
Maybe just updating swagger will help.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/323/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/335,https://api.github.com/repos/eclipse-ditto/ditto/issues/335,ditto,410389184,335,Containers start to fail (Docker Compose),sergiomanso,12512773,,,CLOSED,2019-02-14T16:39:38Z,2019-02-22T07:39:41Z,"I'm trying to install ditto 0.8.0 and after a while, containers start to fail. (Tried with docker 18.09 and 18.06 and several linux distros)

I increased the startup-timeout (IBM_JAVA_OPTIONS=-XX:+ExitOnOutOfMemoryError -Dakka.remote.startup-timeout=60s) and docker-compose logs spit this:

https://pastebin.com/wc27z26x","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/335/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/335,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2Mzk0NjUxNQ==,ditto,463946515,335,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-02-15T08:11:32Z,2019-02-15T08:11:32Z,"Hi.
Your logfile seems very normal - are you sure the containers failed / crashed?
From the logs it looks like a working Ditto cluster to me.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2Mzk0NjUxNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/335,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2NDA2NDk5Mg==,ditto,464064992,335,NA,sergiomanso,12512773,,,NA,2019-02-15T14:16:28Z,2019-02-15T14:16:28Z,"If you check the log you can see that after stuff like this:

`policies_1       2019-02-14 17:20:38,382 ERROR [] a.m.c.b.i.HttpContactPointBootstrap akka://ditto-cluster@172.21.0.3:2551/system/bootstrapCoordinator/contactPointProbe-172.21.0.5-8558 - Probing [http://172.21.0.5:8558/bootstrap/seed-nodes] failed due to: Tcp command [Connect(172.21.0.5:8558,None,List(),Some(10 seconds),true)] failed because of java.net.ConnectException: Connection refused`

Containers will exit:

`docker_connectivity_1 exited with code 137`","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2NDA2NDk5Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/335,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2NDA2NzA1OQ==,ditto,464067059,335,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-02-15T14:22:51Z,2019-02-15T14:22:51Z,"Only one container - `docker_connectivity_1` exits .. but strangely prints no other log messages. Maybe docker was not providing all the logs? Could you check again for its logs?

The `ERROR` messages are quite normal during bootstrap - as the ports are not available right from the beginning.

But all other containers instead of the one `docker_connectivity_1` start successfully.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2NDA2NzA1OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/335,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2NDA3NDY0OQ==,ditto,464074649,335,NA,sergiomanso,12512773,,,NA,2019-02-15T14:44:58Z,2019-02-15T14:44:58Z,"This is the full compose log, it's a bit weird.

I deployed ditto again and collected new logs. (sorry for the color codes, forgot the  --no-color option)
I'm trying to deploy it inside an OpenStack instance (If that's relevant). Ubuntu 18.04, Docker 18.09.2 and docker-compose 1.23.2 (Also tried Digital Ocean and AWS btw)

https://pastebin.com/ce3eVT7g

This time more containers have failed. The number of ct that fail in each deployment is random.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2NDA3NDY0OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/335,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2NDMwNjg5NQ==,ditto,464306895,335,NA,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,NA,2019-02-16T07:41:51Z,2019-02-16T07:41:51Z,"Could you try to downgrade to docker 18.09.1? We know about the security fix, but with docker 18.09.2 we experienced issues, too and need to investigate what the issue is.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2NDMwNjg5NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/335,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2NjAwNjAxMA==,ditto,466006010,335,NA,sergiomanso,12512773,,,NA,2019-02-21T13:49:56Z,2019-02-21T13:49:56Z,"I tried with different versions of Docker before, didn't solved the problem.
When deploying Ditto 0.8.0 inside an instance/virtual machine, allocating more memory solved the problem. I increased the 256m to 512m (or more, is up to you) and it worked.
Thanks for your help guys","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2NjAwNjAxMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/335,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2NjMwMzkyMA==,ditto,466303920,335,NA,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,NA,2019-02-22T07:39:41Z,2019-02-22T07:39:41Z,Thank you for letting us know @sergiomanso ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2NjMwMzkyMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/337,https://api.github.com/repos/eclipse-ditto/ditto/issues/337,ditto,410652932,337,Provide placeholder functions for connectivity placeholder mechanism,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2019-02-15T08:16:08Z,2019-03-12T15:51:13Z,"In the connectivity microservice Ditto already makes use of placeholders, e.g. in order to determine a ""target address"" based on variables, e.g.:
```
{{ thing:id }}
{{ topic:full }}
{{ header:some-arbitrary-header }}
```

It would be very useful to also apply functions on these placeholders, e.g. in order to just select a substring of a variable, e.g.:
```
{{ thing:name | fn:substring-before('_') }}
```

Same applies for header mappings where placeholders may be used.

Current ideas for functions:
* substring-before
* substring-after
* default - provide a fallback value if for example a header was not set","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/337/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/337,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2Mzk1MzkwOA==,ditto,463953908,337,NA,ffendt,2587759,Florian Fendt,,NA,2019-02-15T08:39:36Z,2019-02-15T08:39:36Z,How about also adding a `lower` and a `upper` function that will convert the text to lower- and uppercase?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2Mzk1MzkwOA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/337,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2Mzk1NzU1OA==,ditto,463957558,337,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-02-15T08:52:32Z,2019-02-15T08:52:32Z,"Good idea, that should be easy :+1: ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2Mzk1NzU1OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/340,https://api.github.com/repos/eclipse-ditto/ditto/issues/340,ditto,413575148,340,502 Bad Gateway,kuzuilker,20397224,ILKER KUZU,kuzuilker@gmail.com,CLOSED,2019-02-22T20:55:14Z,2019-03-05T06:49:28Z,"Hello,

I downloaded Ditto 0.8.0 release, compile it successfully.

I build Ditto with docker-compose up -d in ditto/deployment/docker path.

localhost:8080 page opened and works fine but;

-  localhost:8080/ws
-  localhost:8080/stats
-  localhost:8080/status
-  localhost:8080/devops       give 502 bad gateway error. 

I add the log file in attachment.

Thanks.




[log.zip](https://github.com/eclipse/ditto/files/2895780/log.zip)





","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/340/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/340,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2NzMyODY0MQ==,ditto,467328641,340,NA,stmaute,17831060,Stefan Maute,,NA,2019-02-26T07:33:52Z,2019-02-26T07:33:52Z,"Hi

From the log file I can see that the Ditto service wasn't completely running. You have to wait at least a minute before you can send request.

You can use the localhost:8080/status/health route to verify that all Ditto services are up and running.

Can you try this again?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2NzMyODY0MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/340,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2ODM4MTA5OA==,ditto,468381098,340,NA,kuzuilker,20397224,ILKER KUZU,kuzuilker@gmail.com,NA,2019-02-28T18:21:59Z,2019-02-28T18:21:59Z,"Hello,

3 days ago, i install ubuntu 16.04 version and compile ditto and run it. It works successfully, but only docker file without compiling Ditto didn't work.

As a result Ditto up and running now. 

Thanks for your answer.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2ODM4MTA5OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/340,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2OTEzMTkyMg==,ditto,469131922,340,NA,stmaute,17831060,Stefan Maute,,NA,2019-03-04T06:16:31Z,2019-03-04T06:16:31Z,We checked in the .env file in the ditto/deployment/docker directory by mistake. If you delete this file you can use the docker-compose file without building ditto. Because then the images from the Docker hub are used. We will fix this with with PR #344.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2OTEzMTkyMg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/341,https://api.github.com/repos/eclipse-ditto/ditto/issues/341,ditto,414026620,341,Get subscription changes to Policy,zubairhamed,2336402,Zubair Hamed,,OPEN,2019-02-25T10:09:52Z,2019-02-25T10:09:52Z,"Hi,

It would be good to get changes to the policies itself in order to observe who made the changes to the policies and when (for Audit/Security purposes)

Z","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/341/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/342,https://api.github.com/repos/eclipse-ditto/ditto/issues/342,ditto,414393920,342,ERROR: manifest for eclipse/ditto-policies:0-SNAPSHOT not found,BaerSy,27965673,BaerS,,CLOSED,2019-02-26T02:01:28Z,2019-03-04T21:28:31Z,"When I run ""docker-compose up -d"", I got an error:


Pulling policies (docker.io/eclipse/ditto-policies:0-SNAPSHOT)...
ERROR: manifest for eclipse/ditto-policies:0-SNAPSHOT not found

Do you know how I can fix this porblem ? I used Ubuntu 16.04","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/342/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/342,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2NzI2MjczNQ==,ditto,467262735,342,NA,BaerSy,27965673,BaerS,,NA,2019-02-26T02:04:19Z,2019-02-26T02:04:19Z,"![ditto](https://user-images.githubusercontent.com/27965673/53382042-dd991c80-3940-11e9-9879-110da78773c6.png)
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2NzI2MjczNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/342,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2NzMwNjYxNw==,ditto,467306617,342,NA,stmaute,17831060,Stefan Maute,,NA,2019-02-26T05:59:04Z,2019-02-26T05:59:04Z,"Hey
From the first look I would say you didn't build the ditto docker images locally on your machine. Is this correct? 

You can either build the images on your own or you can use the docker tag 0.8.0 instead 0-SNAPSHOT to run Ditto.

You can find a detailed description how to build and run Ditto [here](https://www.eclipse.org/ditto/installation-building.html):

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2NzMwNjYxNw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/342,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2NzU3ODIwMQ==,ditto,467578201,342,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-02-26T19:28:24Z,2019-02-26T19:28:24Z,"We unfortunately added/committed the `.env` file in the docker folder. That way by default the 0-Snapshot is used.
We should remove the file again and add it to gitignore","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2NzU3ODIwMQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/342,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2ODE4NDYyNg==,ditto,468184626,342,NA,stmaute,17831060,Stefan Maute,,NA,2019-02-28T08:35:33Z,2019-02-28T08:35:33Z,I have fixed this in PR #344 ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2ODE4NDYyNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/345,https://api.github.com/repos/eclipse-ditto/ditto/issues/345,ditto,417157078,345,Can't update the temp_sensor and altitude value by sending MQTT by paho,haijunjiang,42160474,,,CLOSED,2019-03-05T07:34:25Z,2019-03-08T01:31:24Z,"I have installed ditto, mosquttio, created the policy, octopus, connected ditto to mosquitto and finished the front-end web
followed by https://github.com/eclipse/ditto-examples/tree/master/mqtt-bidirectional

now I use Paho MQTT Utility to connect mosquitto and  publish data to the topic ""/ditto-tutorial/my.test:octopus"" (also try the topic ""ditto-tutorial/my.test:octopus"")

but the my.test:octopus can't update its temp_sensor and altitude value
Can anyone help me to find why? thinks!
![conn_to_mosquitto](https://user-images.githubusercontent.com/42160474/53788201-0e3e0f00-3f5c-11e9-9820-40b2b7b145d7.png)
![paho](https://user-images.githubusercontent.com/42160474/53788214-19913a80-3f5c-11e9-8eac-e86b34606685.png)
![web](https://user-images.githubusercontent.com/42160474/53788224-1e55ee80-3f5c-11e9-94e8-cc091475b3aa.png)
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/345/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/345,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2OTU4NzM5OA==,ditto,469587398,345,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-03-05T08:30:43Z,2019-03-05T08:30:43Z,"Hi.
Could you please provide some log files? Did you have a look at them?

The logs from the ""connectivity"" service should have detailed information about whether the connection could be established and about processed messages. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2OTU4NzM5OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/345,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2OTk0MDUyNg==,ditto,469940526,345,NA,haijunjiang,42160474,,,NA,2019-03-06T02:21:29Z,2019-03-06T02:21:29Z,"Thanks!
Problem has been solved.
I find there are sth error with thingId in connectivity log
![conn_log](https://user-images.githubusercontent.com/42160474/53851254-1f892900-3ff9-11e9-9bc2-ff91d0c1922d.png)
and then I change the thingId as octopus ( not my.test:octopus  and the topic is ""ditto-tutorial/my.test:octopus"")

![sent_mqtt](https://user-images.githubusercontent.com/42160474/53851360-70991d00-3ff9-11e9-81e7-71e2b96b7bf5.png)

and then it's ok
 
![ok](https://user-images.githubusercontent.com/42160474/53851388-84448380-3ff9-11e9-9685-53e882aaaff7.png)

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2OTk0MDUyNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/346,https://api.github.com/repos/eclipse-ditto/ditto/issues/346,ditto,417591165,346,Can't build ditto,BaerSy,27965673,BaerS,,CLOSED,2019-03-06T02:20:48Z,2019-03-20T16:53:11Z,"Just follow the instructions @ https://github.com/eclipse/ditto ""Build and Start ditto"" , got the following error, don't know why? appreciate any advice!

[ERROR] Failed to execute goal com.github.siom79.japicmp:japicmp-maven-plugin:0.11.0:cmp (default) on project ditto-utils-jsr305: Execution default of goal com.github.siom79.japicmp:japicmp-maven-plugin:0.11.0:cmp failed: Could not load 'java.lang.Object': java.lang.Object. Please make sure that all libraries have been added to the classpath (CLASSPATH=:/root/ditto/legal/target/ditto-legal-0-SNAPSHOT.jar:/root/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:) or try the option '--ignore-missing-classes'. -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/PluginExecutionException
[ERROR] 
[ERROR] After correcting the problems, you can resume the build with the command
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/346/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/346,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2OTk0MTcwNw==,ditto,469941707,346,NA,haijunjiang,42160474,,,NA,2019-03-06T02:27:14Z,2019-03-06T02:27:14Z,"Be sure that:
JDK 8 >= 1.8.0_92 (due to a bug in older versions of the JDK you’ll get a compile error),
and don't use openjdk.
and Be sure that maven can download all dependent jar packages","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ2OTk0MTcwNw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/348,https://api.github.com/repos/eclipse-ditto/ditto/issues/348,ditto,418619011,348,Make it easy to add new Authentication mechanisms and allow chaining them,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,CLOSED,2019-03-08T03:44:25Z,2019-04-09T15:23:07Z,"Right now it is not possible to chain multiple authentication mechanisms that are all applicable to a given request.

Behaviour now: First applicable authentication mechanism is used and if authentication fails, the ""chain"" will be interrupted.

Desired behaviour: If we have multiple applicable authentication mechanisms all of them should be processed until either one of them authenticates successfully or all of them fail.

Example use case: 
* We implement for example two different authentication providers. 
* Both are getting their credentials from Basic Auth (both are applicable for a request sending an authorization type containing basic auth). 
* First try one of them and if this authentication fails we should try the other one","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/348/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/348,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ4MTIwOTQxMw==,ditto,481209413,348,NA,jufickel-b,17162397,Juergen Fickel,,NA,2019-04-09T11:16:36Z,2019-04-09T11:16:36Z,Fixed with PR #377.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ4MTIwOTQxMw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/349,https://api.github.com/repos/eclipse-ditto/ditto/issues/349,ditto,418648280,349,gateway exited,haijunjiang,42160474,,,CLOSED,2019-03-08T06:17:25Z,2019-03-11T00:25:59Z,"When I start ditto using ""docker-compuse -up -d ""
the gateway_1 will exit soon with following logs
![gateway](https://user-images.githubusercontent.com/42160474/54011257-ccf06e00-41ac-11e9-9162-43e254027f57.png)

Can anyone tell why?
Thanks","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/349/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/349,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3MDg3OTg2Mg==,ditto,470879862,349,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-03-08T10:23:33Z,2019-03-08T10:23:33Z,"Hi.
Did you try to increase the memory limits in the docker-compose? If you have memory left on your machine, we would suggest to use 512m for each container.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3MDg3OTg2Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/349,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3MTM2OTc3Nw==,ditto,471369777,349,NA,haijunjiang,42160474,,,NA,2019-03-11T00:25:37Z,2019-03-11T00:25:37Z,"thanks
it really works.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3MTM2OTc3Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/350,https://api.github.com/repos/eclipse-ditto/ditto/issues/350,ditto,418654070,350,Streamline configuration,jufickel-b,17162397,Juergen Fickel,,CLOSED,2019-03-08T06:42:06Z,2019-07-09T12:20:56Z,"In the moment the handling of configuration settings is solved multiple times. For example there exists `ServiceConfigReader` and sub-classes thereof. At the same time several `ConfigKeys` are used. Sometimes the config paths are hard-coded as strings etc.

There should be one domain specific approach of dealing with configuration settings throughout Ditto.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/350/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/354,https://api.github.com/repos/eclipse-ditto/ditto/issues/354,ditto,419495067,354,Missing developer documentation,onurakdemir,6303384,Onur Akdemir,onurakdemir@gmail.com,CLOSED,2019-03-11T14:20:39Z,2021-04-29T17:46:38Z,"Hello ditto team,

I want to work on some issues about ditto but I couldn't find a development document. Do you have any best practices for development?

Thank you.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/354/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/354,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3MTU2MzYxOQ==,ditto,471563619,354,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-03-11T14:34:12Z,2019-03-11T14:34:12Z,"Hi Onur.
Indeed, we do not yet have a developer documentation showing how to debug, etc.

What we do in development is simply to start all services right in the IDE (e.g. we use IntelliJ):
* [PoliciesService](https://github.com/eclipse/ditto/blob/master/services/policies/starter/src/main/java/org/eclipse/ditto/services/policies/starter/PoliciesService.java)
* [ThingsService](https://github.com/eclipse/ditto/blob/master/services/things/starter/src/main/java/org/eclipse/ditto/services/things/starter/ThingsService.java)
* ConciergeService
* GatewayService
* ConnectivityService
* SearchService

Important is to **start the `PoliciesService` first** as this done is used as ""bootstrapper"" during development.

By simply starting them without any arguments, the `*-dev.conf` files are loaded, e.g. [policies-dev.conf](https://github.com/eclipse/ditto/blob/master/services/policies/starter/src/main/resources/policies-dev.conf).
Those expect to find a MongoDB running on `localhost:27017`. That one can be started inside Docker or started natively on your machine.

The `GatewayService` opens a HTTP endpoint on `localhost:8080` but there is no nginx in front of that during development.
Simply set the HTTP header `x-ditto-dummy-auth` to the form `<prefix>:username` in order to work with different ""pre-authenticated"" users, e.g.: `x-ditto-dummy-auth=ditto:my-user`.

We will use this issue to track adding that information (and potentially more needed to develop/debug) to our README.md","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3MTU2MzYxOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/358,https://api.github.com/repos/eclipse-ditto/ditto/issues/358,ditto,421422442,358,Eclipse Ditto on Microsoft Azure,kaizimmerm,9153035,Kai Zimmermann,,CLOSED,2019-03-15T09:18:48Z,2021-06-22T14:40:44Z,"Hi Ditto community,

I would like to get your feedback and potential interest on contributions in order to improve the experience with Eclipse Ditto on Microsoft Azure. I wrote a small proposal (see below) covering multiple aspects of the topic.

Let me know what you guys think,

Kai

## Overview

For an optimized [Eclipse Ditto™](https://www.eclipse.org/ditto/) experience on Microsoft Azure several aspects have to be considered:

- To deploy and host Ditto on Microsoft Azure.
- To integrate Ditto with applications hosted on Azure.
- Optionally to integrate Ditto with Azure IoT by supporting synchronization with [Azure IoT Device Twin](https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-device-twins) state, e.g.
  - to combine Azure IoT's highly scalable connectivity features with the Ditto feature set.
  - and/or to  leverage Ditto as federation service for devices connected to Azure IoT and other connectivity layers.
  - and/or to integrate [Azure IoT Edge](https://docs.microsoft.com/en-us/azure/iot-edge/about-iot-edge) with Ditto.

We propose to split the work necessary to allow the Ditto community to leverage these features into three work streams:

- Azure deployment support for Eclipse Ditto.
- Azure PaaS service integration guidance, support and verification.
- Rich collection of samples and references.

As mentioned; before we start digging into these we would like to collect your feedback. Pls keep in mind that this is more a set of ideas at this point and is not to be seen as a promise for contribution by us 😄 

## Proposed architecture

![Overview](https://user-images.githubusercontent.com/9153035/54420517-77671480-470a-11e9-8daa-9ae81fd8fd3d.png)

## Work streams

### Azure deployment support for Eclipse Ditto

- [Azure Kubernetes Service (AKS)](https://docs.microsoft.com/en-us/azure/aks/intro-kubernetes) deployment
  - [Azure Resource Manager (ARM)](https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-group-overview) templates (i.e. infrastructure as code) for AKS including network setup.
    - Location proposal: `deployment/azure`
  - Helm templates:
    - Flexible k8s deployment that works for existing Ditto (e.g. Minikube) as well as other environments (like AKS).
    - Include optional setups (k8s ingress, TLS with Let’s Encrypt certs, etc.)
  - Include Azure key vault support (see https://github.com/Azure/kubernetes-keyvault-flexvol) including AAD service principal.
  - Provide [Azure Pipelines](https://docs.microsoft.com/en-us/azure/devops/pipelines/get-started/what-is-azure-pipelines) reference to setup Ditto build pipeline including Azure Container Registry deployment for Docker images and Helm charts as well as automated AKS deployments.
- MongoDB persistence
  - Evaluate feasibility of [Azure CosmosDB](https://docs.microsoft.com/en-us/azure/cosmos-db/introduction) as alternative to MongoDB

### Azure PaaS service integration

- Application integration
  - Ditto ""Target"": Provide and test reference based on [Azure Event Hubs](https://docs.microsoft.com/en-us/azure/event-hubs/event-hubs-about) (including its Kafka support) and Azure ServiceBus topics.
  - Ditto ""Source"": Provide and test reference based on [Azure Service Bus](https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-messaging-overview) queues.
    - To be discussed: is Ditto source expecting a topic or a queue for message consumption?
- Azure IoT Integration
  - Provide integration (service) to exchange data between [Azure IoT Hub](https://docs.microsoft.com/en-us/azure/iot-hub/about-iot-hub) with Ditto.
- Testing
  - Run automated integration tests.

### Collection of samples and references

- Guides/publishing
  - Provide complete deployment guide (to be discussed, Ditto website or Readme?)
    - Location proposal: `deployment/azure`
- References/samples
  - Spring Boot based sample apps that retrieves from and publishes messages into Ditto.
    - Sample 1: Receives messages based on Event Hubs Kafka support using Spring Cloud Stream.
    - Sample 2: Send messages to ditto based on Azure ServiceBus (SDK).
  - [Azure Stream Analytics](https://docs.microsoft.com/en-us/azure/stream-analytics/stream-analytics-introduction) sample that analyses Ditto event stream.
 - Azure IoT Edge end-2-end integration sample.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/358/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/358,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3MzI2ODM1Mg==,ditto,473268352,358,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-03-15T12:32:22Z,2019-03-15T12:32:22Z,"Hi Kai.

Sounds really good, we're happy to see that Microsoft has an interest in Ditto.
Your proposal is not that small at all - if we're planning on doing all that, Ditto on Azure almost could feel like a native service I guess :+1: 

### Deployment

I think it makes most sense to start with that, that should be straight forward.
What will be interesting is whether Ditto can use Azure CosmosDB as MongoDB drop-in replacement.

We are currently working on concepts on how to improve our search feature which currently still makes use of MongoDB ""aggregation pipelines"". That won't be the case in the future, so that Ditto doesn't require too fancy MongoDB features.

### PaaS service integration

#### Azure device twin

Interesting to see that the concepts of Ditto's twin and Azure's twin are not that far apart. Personally, I'm not a fan of synchronizing data (especially in ""master""-""master"" setups where data may be modified in any system), so we should clarify what the benefit of such a synchronization would be.

Could also lead into some problems as the Azure twin has more restrictions on how the twin JSON might look like (e.g. forbids using arrays and usage of some special characters in JSON key names, has stronger restrictions on max size of a twin JSON, etc.).

#### Using a Microsoft mechanism for providing authentication for Ditto

One additional integration could be added which might be covered by the ""Azure key vault"" you mentioned, but I'm not sure.

As Ditto only handles authorization based on already authenticated users/devices, etc. (we call that `authorizationSubject`), a way for providing authentication in front of Ditto would be great.
For the Ditto sandbox we currently simply use nginx with a `.htpasswd` file which provides authentication on HTTP and Websocket resources.

If a similar approach is not sufficient, we are currently working on #348 in order to simplify adding new authentication mechanisms.

### Samples

A deployment guide for Azure would be great, location to be clarified.

Samples could go to https://github.com/eclipse/ditto-examples where we don't need to do CQs for dependencies, so adding Spring Boot dependency hell there would be ok, although personally I'm a fan of simplicity and non-magically behaving applications ;)

----

Would be great to also get feedback of some of our users on that.
@onurakdemir @BobOntario @haijunjiang @kuzuilker @sergiomanso @s-kurauchi @saunakasansol94 @Gaurav047
Any thoughts on the proposal?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3MzI2ODM1Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/358,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc0MzA3ODk1OQ==,ditto,743078959,358,NA,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,NA,2020-12-11T09:23:12Z,2020-12-11T09:23:12Z,Is this issue up to date? Any news?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc0MzA3ODk1OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/358,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2NjA0MzI4MA==,ditto,866043280,358,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-06-22T14:40:43Z,2021-06-22T14:40:43Z,"Now that Ditto added support for Azure's HMAC based singature based authentication (see [Blogpost](https://www.eclipse.org/ditto/2021-06-17-hmac-credentials.html)), the integration options of Ditto with Azure got a lot bigger.

I will close this issue now as there is FMPOV nothing still ""open"" or ""to address"". ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2NjA0MzI4MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/361,https://api.github.com/repos/eclipse-ditto/ditto/issues/361,ditto,423571343,361,Can ditto connect to mosquitto by username:password ,haijunjiang,42160474,,,CLOSED,2019-03-21T04:49:00Z,2021-01-03T18:16:24Z,"Hi, all!
I am setting  username and password as the authorization for mosquito broker.
I find ditto can work with ca certification but how can I connect mosquito by username and password?
Thanks.
![图片](https://user-images.githubusercontent.com/42160474/54733886-2c9c3f80-4bd7-11e9-8d1e-5e9da242dd9d.png)
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/361/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/361,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3NTEyODIyNA==,ditto,475128224,361,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-03-21T06:53:53Z,2019-03-21T06:53:53Z,"Hi.
Hm, this is indeed not documented - but: yes, it can.
Simply put the username and password in the `uri` field like for all uris ;)
`""uri"": ""ssl://my-user:my-password@test.mosquitto.org:8884""`","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3NTEyODIyNA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/361,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3NTIzMDkzOQ==,ditto,475230939,361,NA,haijunjiang,42160474,,,NA,2019-03-21T13:36:20Z,2019-03-21T13:36:20Z,Thanks， that really works. ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3NTIzMDkzOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/361,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc1MzY1NjA5Mw==,ditto,753656093,361,NA,mfbatra,67467201,,,NA,2021-01-03T18:15:58Z,2021-01-03T18:15:58Z,"> Hi.
> Hm, this is indeed not documented - but: yes, it can.
> Simply put the username and password in the `uri` field like for all uris ;)
> `""uri"": ""ssl://my-user:my-password@test.mosquitto.org:8884""`

@thjaeckle If we have a client id as well with the username and pwd, Should we put it in the authorization context?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc1MzY1NjA5Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/366,https://api.github.com/repos/eclipse-ditto/ditto/issues/366,ditto,426442628,366,Sending responses to Azure Service Bus via AMQP 1.0 fails after some time,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2019-03-28T11:32:19Z,2019-04-05T11:15:21Z,"When connecting to [Azure Service Bus](https://azure.microsoft.com/en-us/services/service-bus/) via AMQP 1.0 from Ditto's connectivity service, after some time the Azure Service Bus seems to close the AMQP link (the connection stays open) or seems to no longer accept new links.
From that point on no responses can be sent to that AMQP address.

This was observed for *responses*. The *commands* are still received via another AMQP address - a ""reply-to"" address was specified for those commands via AMQP header, to which the response is sent.

Following log occurs in the log:
```
org.eclipse.ditto.services.connectivity.messaging.amqp.AmqpPublisherActor: Failed to send JMS message: [IllegalStateException] The MessageProducer was closed due to an unrecoverable error.
```

Maybe the Ditto connectivity creates too much links (e.g. when each ""reply-to"" is a new address, e.g. a UUID) so that Azure Service Bus prevents adding new ones.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/366/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/366,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ4MDIzODc3NQ==,ditto,480238775,366,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-04-05T11:15:21Z,2019-04-05T11:15:21Z,Fixed by #367 ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ4MDIzODc3NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/368,https://api.github.com/repos/eclipse-ditto/ditto/issues/368,ditto,426488272,368,testConnection problem,BaerSy,27965673,BaerS,,CLOSED,2019-03-28T13:20:40Z,2019-04-01T12:56:57Z,"When I tried to test connection by using:

curl -X POST 'http://localhost:8080/devops/piggyback/connectivity?timeout=10000' -u 'devops:foobar'  -H 'Content-Type: application/json' -d '{
    ""targetActorSelection"": ""/system/sharding/connection"",
     ""headers"": {
      ""aggregate"": false
    },
    ""piggybackCommand"": {
        ""type"": ""connectivity.commands:testConnection"",
         ""connection"": {}
    }
 }'

I got this problem:

{""?"":{""?"":{""type"":""devops.responses:errorResponse"",""status"":400,""serviceName"":null,""instance"":null,""payload"":{""status"":400,""error"":""json.field.missing"",""message"":
""Error when parsing Json type 'connectivity.commands:testConnection': JSON did not include required </connectionType> field!"",""description"":""Check if all
 required JSON fields were set.""}}}}


Any ideas?

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/368/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/368,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3NzU5MzcxOQ==,ditto,477593719,368,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-03-28T13:26:00Z,2019-03-28T13:26:00Z,"Yes, you forgot the important part of the payload - everything below of ""connection"" ..
As the docs say:
    The content of the connection configuration object is specified in the [Connections section](https://www.eclipse.org/ditto/basic-connections.html).

There you must fill in all of the necessary connection info, e.g.:
* id
* name
* connectionType
* connectionStatus
* uri
* ...","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3NzU5MzcxOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/368,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3NzU5NTU3Mg==,ditto,477595572,368,NA,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,NA,2019-03-28T13:31:00Z,2019-03-28T13:31:00Z,"@thjaeckle Maybe we should make it more clear in the provided JSON, that it cannot be used by just copy pasting it.
https://www.eclipse.org/ditto/connectivity-manage-connections.html#test-connection
shows exactly the JSON provided in this issue. I guess it's copy pasted from here.
```
{
    ""targetActorSelection"": ""/system/sharding/connection"",
    ""headers"": {
      ""aggregate"": false
    },
    ""piggybackCommand"": {
        ""type"": ""connectivity.commands:testConnection"",
        ""connection"": {}
    }
}
```

> ""Analog to the createConnection command, it requires a full connection configuration in the piggyback command."" 

says that the connection needs to be specified, but I suggest making it more clear by using an ellipsis in the connection JSON for the docs.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3NzU5NTU3Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/368,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3NzU5NjIxNA==,ditto,477596214,368,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-03-28T13:32:45Z,2019-03-28T13:32:45Z,Agreed :+1: ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3NzU5NjIxNA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/368,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3NzU5NzI1NQ==,ditto,477597255,368,NA,BaerSy,27965673,BaerS,,NA,2019-03-28T13:35:39Z,2019-03-28T13:35:39Z,"@Yannic92 You are right, I just copy/paste it :)  Do i need fill all of connection info under connection, or i can just fill few necessary ones? 

BTW, how can I know data from MQTT client have been mapped into ditto protocol ? whether these data will be stored in Mongo DB?  I mean live data?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3NzU5NzI1NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/368,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3NzYxNDM5MA==,ditto,477614390,368,NA,BaerSy,27965673,BaerS,,NA,2019-03-28T14:18:22Z,2019-03-28T14:18:22Z,"I got this response for testConnection.  Does this mean the connection ok?

{""?"":{""?"":{""type"":""connectivity.responses:testConnection"",""status"":409,""connectionId"":""mqtt-example-connection-123"",""testResult"":""Connection was already created - no test possible""}}}root@ecs-8738-2:~# 
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3NzYxNDM5MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/368,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3NzY0MDMwMw==,ditto,477640303,368,NA,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,NA,2019-03-28T15:17:30Z,2019-03-28T15:17:30Z,"As the status 409 (Conflict) indicates, this is not an OK (200) response.
The message states that the connection does already exist. 
So a connection with the same ID does already exist.
You can verify the configuration by sending a retrieve connection command and compare the connection with the one you'd like to create.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3NzY0MDMwMw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/368,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3NzY1OTE4NQ==,ditto,477659185,368,NA,BaerSy,27965673,BaerS,,NA,2019-03-28T16:00:08Z,2019-03-28T16:00:08Z,"@Yannic92 thanks.

I checked my connection status and metrics, response with 200.  see below.  Octopus publishing messages are ok, I can see all message from MQTT Client through subscribe. But webapp provided in github can't see these Octopus messages, server send event works, count event 1 by 1.  my.test.octopus panel never change. I used command line to query, only can get one from Webapp saved. I never searched the messages from Octopus. I don't know why?  any advice?

my connection:

curl -X POST 'http://localhost:8080/devops/piggyback/connectivity?timeout=10000' -u 'devops:foobar' -H 'Content-Type: application/json' -d '{

""targetActorSelection"": ""/system/sharding/connection"",
    ""headers"": {
    	""aggregate"": false
    },
    ""piggybackCommand"": {
        ""type"": ""connectivity.commands:createConnection"",
        ""connection"": {
            ""id"": ""mqtt-example-connection-123"",
            ""connectionType"": ""mqtt"",
            ""connectionStatus"": ""open"",
            ""failoverEnabled"": true,
            ""uri"": ""tcp://xx.xx.xx.xx:1883"",
            ""sources"": [{
                ""addresses"": [""ditto-tutorial/#""],
                ""authorizationContext"": [""nginx:ditto""],
                ""qos"": 0,
                ""filters"": []
            }],
            ""targets"": [{
                ""address"": ""ditto-tutorial/{{ thing:id }}"",
                ""topics"": [
                ""_/_/things/twin/events"",
                ""_/_/things/live/messages""
                ],
                ""authorizationContext"": [""nginx:ditto""],
                ""qos"": 0
            }],
            ""mappingContext"": {
                ""mappingEngine"": ""JavaScript"",
                ""options"": {
                    ""incomingScript"": ""function mapToDittoProtocolMsg(headers, textPayload, bytePayload, contentType) {const jsonString = String.fromCharCode.apply(null, new Uint8Array(bytePayload));const jsonData = JSON.parse(jsonString); const thingId = jsonData.thingId; const value = { temp_sensor: { properties: { value: jsonData.temp } },altitude:        {            properties:            {                value: jsonData.alt            }        }    };    return Ditto.buildDittoProtocolMsg('my.test', thingId, 'things', 'twin', 'commands', 'modify', '/features', headers, value);}""
                }
            }
        }
    }
}'



![image](https://user-images.githubusercontent.com/27965673/55172719-dab46600-5150-11e9-8ac6-80e0ff9458ba.png)

![image](https://user-images.githubusercontent.com/27965673/55173159-94133b80-5151-11e9-95ce-c473dfbc1b04.png)


Log information

![image](https://user-images.githubusercontent.com/27965673/55194140-25e56d80-517f-11e9-827d-e06f2825b767.png)




","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3NzY1OTE4NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/368,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3Nzc2OTI2Ng==,ditto,477769266,368,NA,BaerSy,27965673,BaerS,,NA,2019-03-28T21:00:52Z,2019-03-28T21:00:52Z,"@Yannic92   I tried testConnection again with following command and got a response **""null""**, which mean what?

curl -X POST 'http://localhost:8080/devops/piggyback/connectivity?timeout=10000' -u 'devops:foobar' -H 'Content-Type: application/json' -d '{

""targetActorSelection"": ""/system/sharding/connection"",
    ""headers"": {
    	""aggregate"": false
    },
    ""piggybackCommand"": {
        ""type"": ""connectivity.commands:testConnection"",
        ""connection"": {
            ""id"": ""mqtt-example-connection-123"",
            ""connectionType"": ""mqtt"",
            ""connectionStatus"": ""open"",
            ""failoverEnabled"": true,
            ""uri"": ""tcp://mqtt_ip:1883"",
            ""sources"": [{
                ""addresses"": [""ditto-tutorial/#""],
                ""authorizationContext"": [""nginx:ditto""],
                ""qos"": 0,
                ""filters"": []
            }],
            ""targets"": [{
                ""address"": ""ditto-tutorial/{{ thing:id }}"",
                ""topics"": [
                ""_/_/things/twin/events"",
                ""_/_/things/live/messages""
                ],
                ""authorizationContext"": [""nginx:ditto""],
                ""qos"": 0
            }],
            ""mappingContext"": {
                ""mappingEngine"": ""JavaScript"",
                ""options"": {
                    ""incomingScript"": ""function mapToDittoProtocolMsg(headers, textPayload, bytePayload, contentType) {const jsonString = String.fromCharCode.apply(null, new Uint8Array(bytePayload));const jsonData = JSON.parse(jsonString); const thingId = jsonData.thingId; const value = { temp_sensor: { properties: { value: jsonData.temp } },altitude:        {            properties:            {                value: jsonData.alt            }        }    };    return Ditto.buildDittoProtocolMsg('my.test', thingId, 'things', 'twin', 'commands', 'modify', '/features', headers, value);}""
                }
            }
        }
    }
}'




","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3Nzc2OTI2Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/368,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3Nzg5OTc1Mg==,ditto,477899752,368,NA,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,NA,2019-03-29T07:39:05Z,2019-03-29T07:39:05Z,"For questions about usage of ditto please use stackoverflow. Just tag your question with the ""eclipse-ditto"" tag and we'll be notified about it.

Furthermore please do not provide logs as images because it will force people to retype your logs if the want to search for something.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3Nzg5OTc1Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/368,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3Nzk5NDQzNQ==,ditto,477994435,368,NA,BaerSy,27965673,BaerS,,NA,2019-03-29T13:18:59Z,2019-03-29T13:18:59Z,Sorry for making you confused. Comments have been taken.  Appreciate if you could help me out this issue!!!  Thanks,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3Nzk5NDQzNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/368,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3ODU2Nzg3Nw==,ditto,478567877,368,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-04-01T12:56:57Z,2019-04-01T12:56:57Z,Feel free to open an issue for non-questions (e.g. for a bug in Ditto).,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3ODU2Nzg3Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/370,https://api.github.com/repos/eclipse-ditto/ditto/issues/370,ditto,426721910,370,no MessageMappingProcessor available,BaerSy,27965673,BaerS,,CLOSED,2019-03-28T21:47:28Z,2019-04-01T12:56:34Z,"I got a stranger error although I follow guideline in ditto example.  Octopus can published messages to MQTT.  I can see them use MQTT client.  WebApp shows connection established and send send event works. I can change values through ""my.test.octopus"" panel. But when I query it using API, I can only my values from webapp, never got vales from octopus.  I checked connectivity logs, seems mapping problem...I used the following to create connection:

curl -X POST 'http://localhost:8080/devops/piggyback/connectivity?timeout=10000' -u 'devops:foobar' -H 'Content-Type: application/json' -d '{

""targetActorSelection"": ""/system/sharding/connection"",
    ""headers"": {
    	""aggregate"": false
    },
    ""piggybackCommand"": {
        ""type"": ""connectivity.commands:createConnection"",
        ""connection"": {
            ""id"": ""mqtt-example-connection-123"",
            ""connectionType"": ""mqtt"",
            ""connectionStatus"": ""open"",
            ""failoverEnabled"": true,
            ""uri"": ""tcp://mqtt_server_ip:1883"",
            ""sources"": [{
                ""addresses"": [""ditto-tutorial/#""],
                ""authorizationContext"": [""nginx:ditto""],
                ""qos"": 0,
                ""filters"": []
            }],
            ""targets"": [{
                ""address"": ""ditto-tutorial/{{ thing:id }}"",
                ""topics"": [
                ""_/_/things/twin/events"",
                ""_/_/things/live/messages""
                ],
                ""authorizationContext"": [""nginx:ditto""],
                ""qos"": 0
            }],
            ""mappingContext"": {
                ""mappingEngine"": ""JavaScript"",
                ""options"": {
                    ""incomingScript"": ""function mapToDittoProtocolMsg(headers, textPayload, bytePayload, contentType) {const jsonString = String.fromCharCode.apply(null, new Uint8Array(bytePayload));const jsonData = JSON.parse(jsonString); const thingId = jsonData.thingId; const value = { temp_sensor: { properties: { value: jsonData.temp } },altitude:        {            properties:            {                value: jsonData.alt            }        }    };    return Ditto.buildDittoProtocolMsg('my.test', thingId, 'things', 'twin', 'commands', 'modify', '/features', headers, value);}""
                }
            }
        }
    }
}'



![image](https://user-images.githubusercontent.com/27965673/55194886-38f93d00-5181-11e9-86af-f278a4c71e57.png)
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/370/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/370,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3ODE2MjY0NA==,ditto,478162644,370,NA,BaerSy,27965673,BaerS,,NA,2019-03-29T22:00:08Z,2019-03-29T22:00:08Z,"root@ecs-8738-2:~/ditto/deployment/docker# docker-compose logs connectivity

Attaching to docker_connectivity_1_fd9f5d488da3
connectivity_1_fd9f5d488da3 | 22:44:27,153 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback-test.xml]
connectivity_1_fd9f5d488da3 | 22:44:27,153 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback.groovy]
connectivity_1_fd9f5d488da3 | 22:44:27,153 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Found resource [logback.xml] at [jar:file:/opt/ditto/ditto-services-connectivity-starter-0-SNAPSHOT-allinone.jar!/logback.xml]
connectivity_1_fd9f5d488da3 | 22:44:27,233 |-INFO in ch.qos.logback.core.joran.spi.ConfigurationWatchList@1e2fd07b - URL [jar:file:/opt/ditto/ditto-services-connectivity-starter-0-SNAPSHOT-allinone.jar!/logback.xml] is not of type file
connectivity_1_fd9f5d488da3 | 22:44:27,381 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - debug attribute not set
connectivity_1_fd9f5d488da3 | 22:44:27,388 |-INFO in ch.qos.logback.core.joran.action.StatusListenerAction - Added status listener of type [ch.qos.logback.core.status.OnConsoleStatusListener]
connectivity_1_fd9f5d488da3 | 22:44:27,501 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
connectivity_1_fd9f5d488da3 | 22:44:27,527 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [STDOUT]
connectivity_1_fd9f5d488da3 | 22:44:27,549 |-INFO in ch.qos.logback.core.joran.action.NestedComplexPropertyIA - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property
connectivity_1_fd9f5d488da3 | 22:44:27,650 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
connectivity_1_fd9f5d488da3 | 22:44:27,651 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [STDERR]
connectivity_1_fd9f5d488da3 | 22:44:27,652 |-INFO in ch.qos.logback.core.joran.action.NestedComplexPropertyIA - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property
connectivity_1_fd9f5d488da3 | 22:44:27,666 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.mongodb.driver] to WARN
connectivity_1_fd9f5d488da3 | 22:44:27,666 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [akka.management.cluster.bootstrap.contactpoint.HttpClusterBootstrapRoutes] to WARN
connectivity_1_fd9f5d488da3 | 22:44:27,667 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [akka.management.cluster.bootstrap.internal.BootstrapCoordinator] to WARN
connectivity_1_fd9f5d488da3 | 22:44:27,669 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.eclipse.ditto] to INFO
connectivity_1_fd9f5d488da3 | 22:44:27,669 |-INFO in ch.qos.logback.classic.joran.action.RootLoggerAction - Setting level of ROOT logger to INFO
connectivity_1_fd9f5d488da3 | 22:44:27,670 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[ROOT]
connectivity_1_fd9f5d488da3 | 22:44:27,671 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDERR] to Logger[ROOT]
connectivity_1_fd9f5d488da3 | 22:44:27,672 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - End of configuration.
connectivity_1_fd9f5d488da3 | 22:44:27,682 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@328ac2fd - Registering current configuration as safe fallback point
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:27,805 INFO  [] o.e.d.s.u.c.ConfigUtil  - Running with 'Docker' config
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:30,325 INFO  [] o.e.d.s.c.ConnectivityService  - Running with following runtime parameters: [-Xoptionsfile=/opt/java/openjdk/jre/lib/amd64/compressedrefs/options.default, -Xlockword:mode=default,noLockword=java/lang/String,noLockword=java/util/MapEntry,noLockword=java/util/HashMap$Entry,noLockword=org/apache/harmony/luni/util/ModifiedMap$Entry,noLockword=java/util/Hashtable$Entry,noLockword=java/lang/invoke/MethodType,noLockword=java/lang/invoke/MethodHandle,noLockword=java/lang/invoke/CollectHandle,noLockword=java/lang/invoke/ConstructorHandle,noLockword=java/lang/invoke/ConvertHandle,noLockword=java/lang/invoke/ArgumentConversionHandle,noLockword=java/lang/invoke/AsTypeHandle,noLockword=java/lang/invoke/ExplicitCastHandle,noLockword=java/lang/invoke/FilterReturnHandle,noLockword=java/lang/invoke/DirectHandle,noLockword=java/lang/invoke/ReceiverBoundHandle,noLockword=java/lang/invoke/DynamicInvokerHandle,noLockword=java/lang/invoke/FieldHandle,noLockword=java/lang/invoke/FieldGetterHandle,noLockword=java/lang/invoke/FieldSetterHandle,noLockword=java/lang/invoke/StaticFieldGetterHandle,noLockword=java/lang/invoke/StaticFieldSetterHandle,noLockword=java/lang/invoke/IndirectHandle,noLockword=java/lang/invoke/InterfaceHandle,noLockword=java/lang/invoke/VirtualHandle,noLockword=java/lang/invoke/PrimitiveHandle,noLockword=java/lang/invoke/InvokeExactHandle,noLockword=java/lang/invoke/InvokeGenericHandle,noLockword=java/lang/invoke/VarargsCollectorHandle,noLockword=java/lang/invoke/ThunkTuple, -Xjcl:jclse7b_29, -Dcom.ibm.oti.vm.bootstrap.library.path=/opt/java/openjdk/jre/lib/amd64/compressedrefs:/opt/java/openjdk/jre/lib/amd64, -Dsun.boot.library.path=/opt/java/openjdk/jre/lib/amd64/compressedrefs:/opt/java/openjdk/jre/lib/amd64, -Djava.library.path=/opt/java/openjdk/jre/lib/amd64/compressedrefs:/opt/java/openjdk/jre/lib/amd64:/usr/lib64:/usr/lib, -Djava.home=/opt/java/openjdk/jre, -Djava.ext.dirs=/opt/java/openjdk/jre/lib/ext, -Duser.dir=/opt/ditto, -XX:+IgnoreUnrecognizedVMOptions, -XX:+UseContainerSupport, -XX:+IdleTuningCompactOnIdle, -XX:+IdleTuningGcOnIdle, -XX:+ExitOnOutOfMemoryError, -Djava.class.path=., -Djava.class.path=/opt/ditto/starter.jar, -Dsun.java.command=/opt/ditto/starter.jar, -Dsun.java.launcher=SUN_STANDARD, -Dsun.java.launcher.pid=8]
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:30,333 INFO  [] o.e.d.s.c.ConnectivityService  - Available processors: 4
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:32,016 INFO  [] k.m.SystemMetrics  - Starting the Kamon(SystemMetrics) module
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:32,275 INFO  [] o.e.d.s.c.ConnectivityService  - Successfully added Prometheus reporter to Kamon.
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:33,992 INFO  [] a.e.s.Slf4jLogger  - Slf4jLogger started
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:35,253 INFO  [] a.r.a.t.ArteryTcpTransport(akka://ditto-cluster) akka.remote.artery.tcp.ArteryTcpTransport(akka://ditto-cluster) - Remoting started with transport [Artery tcp]; listening on address [akka://ditto-cluster@172.28.0.8:2551] with UID [5088088915771108992]
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:35,320 INFO  [] a.c.Cluster(akka://ditto-cluster) akka.cluster.Cluster(akka://ditto-cluster) - Cluster Node [akka://ditto-cluster@172.28.0.8:2551] - Starting up, Akka version [2.5.17] ...
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:35,719 INFO  [] a.c.Cluster(akka://ditto-cluster) akka.cluster.Cluster(akka://ditto-cluster) - Cluster Node [akka://ditto-cluster@172.28.0.8:2551] - Registered cluster JMX MBean [akka:type=Cluster]
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:35,723 INFO  [] a.c.Cluster(akka://ditto-cluster) akka.cluster.Cluster(akka://ditto-cluster) - Cluster Node [akka://ditto-cluster@172.28.0.8:2551] - Started up successfully
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:35,902 INFO  [] a.c.Cluster(akka://ditto-cluster) akka.cluster.Cluster(akka://ditto-cluster) - Cluster Node [akka://ditto-cluster@172.28.0.8:2551] - No seed-nodes configured, manual cluster join required
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:37,997 INFO  [] a.m.c.b.ClusterBootstrap ClusterBootstrap(akka://ditto-cluster) - Bootstrap using default `akka.discovery` mechanism: DnsSimpleServiceDiscovery
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:39,693 INFO  [] a.m.AkkaManagement AkkaManagement(akka://ditto-cluster) - Including HTTP management routes for ClusterBootstrap
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:39,705 INFO  [] a.m.c.b.ClusterBootstrap ClusterBootstrap(akka://ditto-cluster) - Got self contact point address: http://172.28.0.8:8558
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:39,805 INFO  [] a.m.AkkaManagement AkkaManagement(akka://ditto-cluster) - Binding Akka Management (HTTP) endpoint to: 172.28.0.8:8558
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:40,425 INFO  [] a.m.c.b.ClusterBootstrap ClusterBootstrap(akka://ditto-cluster) - Initiating bootstrap procedure using akka.discovery method...
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:40,488 INFO  [] a.m.AkkaManagement AkkaManagement(akka://ditto-cluster) - Bound Akka Management (HTTP) endpoint to: 172.28.0.8:8558
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:40,505 INFO  [] o.e.d.s.c.ConnectivityService  - Starting actor <statusSupplier>.
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:40,513 INFO  [] o.e.d.s.c.ConnectivityService  - Starting actor <devOpsCommandsActor>.
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:40,517 INFO  [] o.e.d.s.c.ConnectivityService  - Waiting for member to be up before proceeding with further initialisation.
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:40,542 INFO  [] a.d.d.DnsSimpleServiceDiscovery DnsSimpleServiceDiscovery(akka://ditto-cluster) - Resolved Dns.Resolved: Resolved(ditto-cluster,Vector(ditto-cluster/172.28.0.8, ditto-cluster/172.28.0.9, ditto-cluster/172.28.0.7, ditto-cluster/172.28.0.2, ditto-cluster/172.28.0.5, ditto-cluster/172.28.0.6),Vector())
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:40,634 INFO  [] o.e.d.s.u.d.DevOpsCommandsActor$PubSubSubscriberActor akka://ditto-cluster/user/devOpsCommandsActor/pubSubSubscriber - Successfully subscribed to distributed pub/sub on topic 'devops.commands:retrieveLoggerConfig:connectivity:1'
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:40,637 INFO  [] o.e.d.s.u.d.DevOpsCommandsActor$PubSubSubscriberActor akka://ditto-cluster/user/devOpsCommandsActor/pubSubSubscriber - Successfully subscribed to distributed pub/sub on topic 'devops.commands:changeLogLevel:connectivity'
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:40,645 INFO  [] o.e.d.s.u.d.DevOpsCommandsActor$PubSubSubscriberActor akka://ditto-cluster/user/devOpsCommandsActor/pubSubSubscriber - Successfully subscribed to distributed pub/sub on topic 'devops.commands:retrieveLoggerConfig'
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:40,645 INFO  [] o.e.d.s.u.d.DevOpsCommandsActor$PubSubSubscriberActor akka://ditto-cluster/user/devOpsCommandsActor/pubSubSubscriber - Successfully subscribed to distributed pub/sub on topic 'devops.commands:changeLogLevel:connectivity:1'
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:40,645 INFO  [] o.e.d.s.u.d.DevOpsCommandsActor$PubSubSubscriberActor akka://ditto-cluster/user/devOpsCommandsActor/pubSubSubscriber - Successfully subscribed to distributed pub/sub on topic 'devops.commands:executePiggybackCommand'
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:40,646 INFO  [] o.e.d.s.u.d.DevOpsCommandsActor$PubSubSubscriberActor akka://ditto-cluster/user/devOpsCommandsActor/pubSubSubscriber - Successfully subscribed to distributed pub/sub on topic 'devops.commands:executePiggybackCommand:connectivity:1'
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:40,646 INFO  [] o.e.d.s.u.d.DevOpsCommandsActor$PubSubSubscriberActor akka://ditto-cluster/user/devOpsCommandsActor/pubSubSubscriber - Successfully subscribed to distributed pub/sub on topic 'devops.commands:retrieveLoggerConfig:connectivity'
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:40,647 INFO  [] o.e.d.s.u.d.DevOpsCommandsActor$PubSubSubscriberActor akka://ditto-cluster/user/devOpsCommandsActor/pubSubSubscriber - Successfully subscribed to distributed pub/sub on topic 'devops.commands:executePiggybackCommand:connectivity'
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:40,647 INFO  [] o.e.d.s.u.d.DevOpsCommandsActor$PubSubSubscriberActor akka://ditto-cluster/user/devOpsCommandsActor/pubSubSubscriber - Successfully subscribed to distributed pub/sub on topic 'devops.commands:changeLogLevel'
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:41,547 INFO  [] a.m.c.b.LowestAddressJoinDecider LowestAddressJoinDecider(akka://ditto-cluster) - Discovered [6] contact points, confirmed [0], which is less than the required [2], retrying
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:42,085 INFO  [] a.d.d.DnsSimpleServiceDiscovery DnsSimpleServiceDiscovery(akka://ditto-cluster) - Resolved Dns.Resolved: Resolved(ditto-cluster,Vector(ditto-cluster/172.28.0.8, ditto-cluster/172.28.0.9, ditto-cluster/172.28.0.7, ditto-cluster/172.28.0.2, ditto-cluster/172.28.0.5, ditto-cluster/172.28.0.6),Vector())
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:42,516 INFO  [] a.m.c.b.LowestAddressJoinDecider LowestAddressJoinDecider(akka://ditto-cluster) - Discovered [6] contact points, confirmed [0], which is less than the required [2], retrying
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:43,318 INFO  [] a.d.d.DnsSimpleServiceDiscovery DnsSimpleServiceDiscovery(akka://ditto-cluster) - Resolved Dns.Resolved: Resolved(ditto-cluster,Vector(ditto-cluster/172.28.0.8, ditto-cluster/172.28.0.9, ditto-cluster/172.28.0.7, ditto-cluster/172.28.0.2, ditto-cluster/172.28.0.5, ditto-cluster/172.28.0.6),Vector())
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:43,877 INFO  [] a.a.LocalActorRef akka://ditto-cluster/system/bootstrapCoordinator/contactPointProbe-172.28.0.5-8558 - Message [akka.actor.Status$Failure] from Actor[akka://ditto-cluster/system/bootstrapCoordinator/contactPointProbe-172.28.0.5-8558#870674603] to Actor[akka://ditto-cluster/system/bootstrapCoordinator/contactPointProbe-172.28.0.5-8558#870674603] was not delivered. [1] dead letters encountered. If this is not an expected behavior, then [Actor[akka://ditto-cluster/system/bootstrapCoordinator/contactPointProbe-172.28.0.5-8558#870674603]] may have terminated unexpectedly, This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:45,860 INFO  [] a.c.JoinSeedNodeProcess akka://ditto-cluster@172.28.0.8:2551/system/cluster/core/daemon/joinSeedNodeProcess-1 - Received InitJoinAck message from [Actor[akka://ditto-cluster@172.28.0.2:2551/system/cluster/core/daemon#-1315724120]] to [akka://ditto-cluster@172.28.0.8:2551]
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:46,260 INFO  [] a.c.Cluster(akka://ditto-cluster) akka.cluster.Cluster(akka://ditto-cluster) - Cluster Node [akka://ditto-cluster@172.28.0.8:2551] - Welcome from [akka://ditto-cluster@172.28.0.2:2551]
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:46,901 INFO  [] o.e.d.s.c.ConnectivityService  - Member successfully joined the cluster, instantiating remaining actors.
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:46,913 INFO  [] o.e.d.s.c.ConnectivityService  - Starting actor <connectivityRoot>.
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:46,931 INFO  [] o.e.d.s.c.a.ConnectivityRootActor akka://ditto-cluster/user/connectivityRoot - Starting child actor 'healthCheckingActor'
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:47,140 INFO  [] o.e.d.s.c.a.ConnectivityRootActor akka://ditto-cluster/user/connectivityRoot - Starting child actor 'conciergeForwarder'
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:47,574 INFO  [] a.a.EmptyLocalActorRef akka://ditto-cluster/system/sharding/connectionCoordinator/singleton/coordinator - Message [akka.cluster.sharding.ShardCoordinator$Internal$Register] from Actor[akka://ditto-cluster/system/sharding/connection#1632233310] to Actor[akka://ditto-cluster/system/sharding/connectionCoordinator/singleton/coordinator] was not delivered. [2] dead letters encountered. If this is not an expected behavior, then [Actor[akka://ditto-cluster/system/sharding/connectionCoordinator/singleton/coordinator]] may have terminated unexpectedly, This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:47,578 INFO  [] a.c.s.ClusterSingletonManager akka://ditto-cluster@172.28.0.8:2551/system/sharding/connectionCoordinator - Singleton manager starting singleton actor [akka://ditto-cluster/system/sharding/connectionCoordinator/singleton]
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:47,592 INFO  [] a.c.s.ClusterSingletonManager akka://ditto-cluster@172.28.0.8:2551/system/sharding/connectionCoordinator - ClusterSingletonManager state change [Start -> Oldest]
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:47,809 INFO  [] a.c.s.DDataShardCoordinator akka://ditto-cluster@172.28.0.8:2551/system/sharding/connectionCoordinator/singleton/coordinator - Sharding Coordinator was moved to the active state State(Map(),Map(),Set(),Set(),true)
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:48,075 INFO  [] a.c.s.ClusterSingletonManager akka://ditto-cluster@172.28.0.8:2551/user/connectivityRoot/reconnect - Singleton manager starting singleton actor [akka://ditto-cluster/user/connectivityRoot/reconnect/singleton]
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:48,076 INFO  [] a.c.s.ClusterSingletonManager akka://ditto-cluster@172.28.0.8:2551/user/connectivityRoot/reconnect - ClusterSingletonManager state change [Start -> Oldest]
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:48,331 INFO  [] o.e.d.s.c.m.ReconnectActor akka://ditto-cluster/user/connectivityRoot/reconnect/singleton/supervised-child - Scheduling reconnect for all connections with initial delay PT0S and interval PT10M.
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:48,335 INFO  [] o.e.d.s.c.m.ReconnectActor akka://ditto-cluster/user/connectivityRoot/reconnect/singleton/supervised-child - Sending reconnects for Connections. Will be sent again after the configured Interval of PT10M.
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:48,341 INFO  [] a.c.p.m.ScalaMongoDriver  - Applying configuration-specific overrides for driver
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:49,005 INFO  [] o.e.d.s.c.m.ReconnectActor akka://ditto-cluster/user/connectivityRoot/reconnect/singleton/supervised-child - Sending reconnects completed.
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:49,005 INFO  [] o.e.d.s.c.m.ReconnectActor akka://ditto-cluster/user/connectivityRoot/reconnect/singleton/supervised-child - Got reconnects completed.
connectivity_1_fd9f5d488da3 | 2019-03-29 22:47:53,084 INFO  [9197b1dd-4472-4577-9539-f072ab598c61] o.e.d.s.u.d.DevOpsCommandsActor akka://ditto-cluster/user/devOpsCommandsActor - Received PiggybackCommand: <RetrieveConnectionStatus [type=connectivity.commands:retrieveConnectionStatus, dittoHeaders=ImmutableDittoHeaders [{timeout=10000, aggregate=false, correlation-id=9197b1dd-4472-4577-9539-f072ab598c61}], connectionId=mqtt-example-connection-123]> - telling to: </system/sharding/connection>
connectivity_1_fd9f5d488da3 | 2019-03-29 22:47:53,102 INFO  [] a.c.d.LmdbDurableStore akka://ditto-cluster@172.28.0.8:2551/system/sharding/connectivityReplicator/durableStore - Using durable data in LMDB directory [/opt/ditto/ddata-ditto-cluster-connectivityReplicator-2551]
connectivity_1_fd9f5d488da3 | 2019-03-29 22:47:53,528 INFO  [] a.p.Persistence(akka://ditto-cluster) akka.persistence.Persistence(akka://ditto-cluster) - Auto-starting journal plugin `akka-contrib-mongodb-persistence-connection-journal`
connectivity_1_fd9f5d488da3 | 2019-03-29 22:47:53,544 INFO  [] a.p.Persistence(akka://ditto-cluster) akka.persistence.Persistence(akka://ditto-cluster) - Auto-starting snapshot store `akka-contrib-mongodb-persistence-connection-snapshots`
connectivity_1_fd9f5d488da3 | 2019-03-29 22:47:53,569 INFO  [] a.c.p.m.ScalaMongoDriver  - Applying configuration-specific overrides for driver
connectivity_1_fd9f5d488da3 | 2019-03-29 22:47:53,587 INFO  [] a.c.p.m.ScalaMongoDriver  - Applying configuration-specific overrides for driver
connectivity_1_fd9f5d488da3 | 2019-03-29 22:47:53,737 INFO  [] o.e.d.s.c.m.ConnectionActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa - Connection <mqtt-example-connection-123> was recovered: null
connectivity_1_fd9f5d488da3 | 2019-03-29 22:48:26,385 INFO  [8300ec18-d27d-4beb-b97b-53f57502e765] o.e.d.s.u.d.DevOpsCommandsActor akka://ditto-cluster/user/devOpsCommandsActor - Received PiggybackCommand: <RetrieveConnectionStatus [type=connectivity.commands:retrieveConnectionStatus, dittoHeaders=ImmutableDittoHeaders [{timeout=10000, aggregate=false, correlation-id=8300ec18-d27d-4beb-b97b-53f57502e765}], connectionId=mqtt-example-connection-123]> - telling to: </system/sharding/connection>
connectivity_1_fd9f5d488da3 | 2019-03-29 22:50:07,195 INFO  [69769185-b757-43d0-b115-89e038a294ec] o.e.d.s.u.d.DevOpsCommandsActor akka://ditto-cluster/user/devOpsCommandsActor - Received PiggybackCommand: <CreateConnection [type=connectivity.commands:createConnection, dittoHeaders=ImmutableDittoHeaders [{timeout=10000, aggregate=false, correlation-id=69769185-b757-43d0-b115-89e038a294ec}], connection=ImmutableConnection [id=mqtt-example-connection-123, name=null, connectionType=mqtt, connectionStatus=open, failoverEnabled=true, credentials=null, trustedCertificates=hash:31, uri=tcp://49.4.2.72:1883, sources=[ImmutableSource [index=0, addresses=[ditto-tutorial/#], consumerCount=1, qos=0, authorizationContext=ImmutableAuthorizationContext [authorizationSubjects=[nginx:ditto]], enforcement=null, headerMapping=null]], targets=[ImmutableTarget [address=ditto-tutorial/{{ thing:id }}, originalAddress=ditto-tutorial/{{ thing:id }}, topics=[_/_/things/twin/events, _/_/things/live/messages], qos=0, authorizationContext=ImmutableAuthorizationContext [authorizationSubjects=[nginx:ditto]], headerMapping=null]], clientCount=1, validateCertificate=true, processorPoolSize=5, specificConfig={}, mappingContext=ImmutableMappingContext [mappingEngine=JavaScript, options={incomingScript=function mapToDittoProtocolMsg(headers, textPayload, bytePayload, contentType) {const jsonString = String.fromCharCode.apply(null, new Uint8Array(bytePayload));const jsonData = JSON.parse(jsonString); const thingId = jsonData.thingId; const value = { temp_sensor: { properties: { value: jsonData.temp } },altitude:        {            properties:            {                value: jsonData.alt            }        }    };    return Ditto.buildDittoProtocolMsg(my.test, thingId, things, twin, commands, modify, /features, headers, value);}}], tags=[]]]> - telling to: </system/sharding/connection>
connectivity_1_fd9f5d488da3 | 2019-03-29 22:50:07,329 INFO  [] o.e.d.s.c.m.ConnectionActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa - Starting ClientActor for connection <mqtt-example-connection-123> with <1> clients.
connectivity_1_fd9f5d488da3 | 2019-03-29 22:50:07,344 INFO  [] a.a.RepointableActorRef akka://ditto-cluster/system/distributedPubSubMediator - Message [org.eclipse.ditto.signals.events.connectivity.ConnectionCreated] from Actor[akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa#1765586408] to Actor[akka://ditto-cluster/system/distributedPubSubMediator#1544972560] was not delivered. [3] dead letters encountered. If this is not an expected behavior, then [Actor[akka://ditto-cluster/system/distributedPubSubMediator#1544972560]] may have terminated unexpectedly, This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
connectivity_1_fd9f5d488da3 | 2019-03-29 22:50:07,378 INFO  [] o.e.d.s.c.m.m.MqttClientActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa/$a/c1 - Starting MQTT publisher actor.
connectivity_1_fd9f5d488da3 | 2019-03-29 22:50:07,512 INFO  [] o.e.d.s.c.m.m.MqttPublisherActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa/$a/c1/mqttPublisher1 - Publisher ready
connectivity_1_fd9f5d488da3 | 2019-03-29 22:50:07,566 INFO  [] o.e.d.s.c.m.m.MqttClientActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa/$a/c1 - Got DittoRuntimeException during initialization of MessageMappingProcessor: MessageMapperConfigurationFailedException The message mapper configuration failed due to: unterminated regular expression literal (incomingScript#1) - in line/column #1/539, source:
connectivity_1_fd9f5d488da3 | function mapToDittoProtocolMsg(headers, textPayload, bytePayload, contentType) {const jsonString = String.fromCharCode.apply(null, new Uint8Array(bytePayload));const jsonData = JSON.parse(jsonString); const thingId = jsonData.thingId; const value = { temp_sensor: { properties: { value: jsonData.temp } },altitude:        {            properties:            {                value: jsonData.alt            }        }    };    return Ditto.buildDittoProtocolMsg(my.test, thingId, things, twin, commands, modify, /features, headers, value);} - desc: Check the configuration options of your mapper for errors.
connectivity_1_fd9f5d488da3 | 2019-03-29 22:50:07,569 WARN  [] o.e.d.s.c.m.m.MqttClientActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa/$a/c1 - failed to start mapping processor due to org.eclipse.ditto.model.connectivity.MessageMapperConfigurationFailedException [message='The message mapper configuration failed due to: unterminated regular expression literal (incomingScript#1) - in line/column #1/539, source:
connectivity_1_fd9f5d488da3 | function mapToDittoProtocolMsg(headers, textPayload, bytePayload, contentType) {const jsonString = String.fromCharCode.apply(null, new Uint8Array(bytePayload));const jsonData = JSON.parse(jsonString); const thingId = jsonData.thingId; const value = { temp_sensor: { properties: { value: jsonData.temp } },altitude:        {            properties:            {                value: jsonData.alt            }        }    };    return Ditto.buildDittoProtocolMsg(my.test, thingId, things, twin, commands, modify, /features, headers, value);}', errorCode=connectivity:message.mapper.config.failed, statusCode=BAD_REQUEST, description='Check the configuration options of your mapper for errors.', href=null, dittoHeaders=ImmutableDittoHeaders [{}]]
connectivity_1_fd9f5d488da3 | 2019-03-29 22:50:07,593 INFO  [] o.e.d.s.c.m.m.MqttClientActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa/$a/c1 - Got DittoRuntimeException during initialization of MessageMappingProcessor: MessageMapperConfigurationFailedException The message mapper configuration failed due to: unterminated regular expression literal (incomingScript#1) - in line/column #1/539, source:
connectivity_1_fd9f5d488da3 | function mapToDittoProtocolMsg(headers, textPayload, bytePayload, contentType) {const jsonString = String.fromCharCode.apply(null, new Uint8Array(bytePayload));const jsonData = JSON.parse(jsonString); const thingId = jsonData.thingId; const value = { temp_sensor: { properties: { value: jsonData.temp } },altitude:        {            properties:            {                value: jsonData.alt            }        }    };    return Ditto.buildDittoProtocolMsg(my.test, thingId, things, twin, commands, modify, /features, headers, value);} - desc: Check the configuration options of your mapper for errors.
connectivity_1_fd9f5d488da3 | 2019-03-29 22:50:07,596 INFO  [] o.e.d.s.c.m.ConnectionActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa - Running <PerformTask(subscribe for events and schedule CreateConnectionResponse)>
connectivity_1_fd9f5d488da3 | 2019-03-29 22:50:45,845 INFO  [50f7b8a5-474a-4147-a3d1-318cb7eea9bb] o.e.d.s.u.d.DevOpsCommandsActor akka://ditto-cluster/user/devOpsCommandsActor - Received PiggybackCommand: <RetrieveConnectionStatus [type=connectivity.commands:retrieveConnectionStatus, dittoHeaders=ImmutableDittoHeaders [{timeout=10000, aggregate=false, correlation-id=50f7b8a5-474a-4147-a3d1-318cb7eea9bb}], connectionId=mqtt-example-connection-123]> - telling to: </system/sharding/connection>
root@ecs-8738-2:~/ditto/deployment/docker# ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3ODE2MjY0NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/370,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3ODQzODEwOA==,ditto,478438108,370,NA,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,NA,2019-04-01T05:12:26Z,2019-04-01T05:12:26Z,"Thank you for following my advice not to post screen shots of logs this allows to search for them easily. Furthermore code formatting for logs will make them more readable. See below:
```
root@ecs-8738-2:~/ditto/deployment/docker# docker-compose logs connectivity

Attaching to docker_connectivity_1_fd9f5d488da3
connectivity_1_fd9f5d488da3 | 22:44:27,153 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback-test.xml]
connectivity_1_fd9f5d488da3 | 22:44:27,153 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback.groovy]
connectivity_1_fd9f5d488da3 | 22:44:27,153 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Found resource [logback.xml] at [jar:file:/opt/ditto/ditto-services-connectivity-starter-0-SNAPSHOT-allinone.jar!/logback.xml]
connectivity_1_fd9f5d488da3 | 22:44:27,233 |-INFO in ch.qos.logback.core.joran.spi.ConfigurationWatchList@1e2fd07b - URL [jar:file:/opt/ditto/ditto-services-connectivity-starter-0-SNAPSHOT-allinone.jar!/logback.xml] is not of type file
connectivity_1_fd9f5d488da3 | 22:44:27,381 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - debug attribute not set
connectivity_1_fd9f5d488da3 | 22:44:27,388 |-INFO in ch.qos.logback.core.joran.action.StatusListenerAction - Added status listener of type [ch.qos.logback.core.status.OnConsoleStatusListener]
connectivity_1_fd9f5d488da3 | 22:44:27,501 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
connectivity_1_fd9f5d488da3 | 22:44:27,527 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [STDOUT]
connectivity_1_fd9f5d488da3 | 22:44:27,549 |-INFO in ch.qos.logback.core.joran.action.NestedComplexPropertyIA - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property
connectivity_1_fd9f5d488da3 | 22:44:27,650 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
connectivity_1_fd9f5d488da3 | 22:44:27,651 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [STDERR]
connectivity_1_fd9f5d488da3 | 22:44:27,652 |-INFO in ch.qos.logback.core.joran.action.NestedComplexPropertyIA - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property
connectivity_1_fd9f5d488da3 | 22:44:27,666 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.mongodb.driver] to WARN
connectivity_1_fd9f5d488da3 | 22:44:27,666 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [akka.management.cluster.bootstrap.contactpoint.HttpClusterBootstrapRoutes] to WARN
connectivity_1_fd9f5d488da3 | 22:44:27,667 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [akka.management.cluster.bootstrap.internal.BootstrapCoordinator] to WARN
connectivity_1_fd9f5d488da3 | 22:44:27,669 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.eclipse.ditto] to INFO
connectivity_1_fd9f5d488da3 | 22:44:27,669 |-INFO in ch.qos.logback.classic.joran.action.RootLoggerAction - Setting level of ROOT logger to INFO
connectivity_1_fd9f5d488da3 | 22:44:27,670 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[ROOT]
connectivity_1_fd9f5d488da3 | 22:44:27,671 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDERR] to Logger[ROOT]
connectivity_1_fd9f5d488da3 | 22:44:27,672 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - End of configuration.
connectivity_1_fd9f5d488da3 | 22:44:27,682 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@328ac2fd - Registering current configuration as safe fallback point
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:27,805 INFO [] o.e.d.s.u.c.ConfigUtil - Running with 'Docker' config
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:30,325 INFO [] o.e.d.s.c.ConnectivityService - Running with following runtime parameters: [-Xoptionsfile=/opt/java/openjdk/jre/lib/amd64/compressedrefs/options.default, -Xlockword:mode=default,noLockword=java/lang/String,noLockword=java/util/MapEntry,noLockword=java/util/HashMap$Entry,noLockword=org/apache/harmony/luni/util/ModifiedMap$Entry,noLockword=java/util/Hashtable$Entry,noLockword=java/lang/invoke/MethodType,noLockword=java/lang/invoke/MethodHandle,noLockword=java/lang/invoke/CollectHandle,noLockword=java/lang/invoke/ConstructorHandle,noLockword=java/lang/invoke/ConvertHandle,noLockword=java/lang/invoke/ArgumentConversionHandle,noLockword=java/lang/invoke/AsTypeHandle,noLockword=java/lang/invoke/ExplicitCastHandle,noLockword=java/lang/invoke/FilterReturnHandle,noLockword=java/lang/invoke/DirectHandle,noLockword=java/lang/invoke/ReceiverBoundHandle,noLockword=java/lang/invoke/DynamicInvokerHandle,noLockword=java/lang/invoke/FieldHandle,noLockword=java/lang/invoke/FieldGetterHandle,noLockword=java/lang/invoke/FieldSetterHandle,noLockword=java/lang/invoke/StaticFieldGetterHandle,noLockword=java/lang/invoke/StaticFieldSetterHandle,noLockword=java/lang/invoke/IndirectHandle,noLockword=java/lang/invoke/InterfaceHandle,noLockword=java/lang/invoke/VirtualHandle,noLockword=java/lang/invoke/PrimitiveHandle,noLockword=java/lang/invoke/InvokeExactHandle,noLockword=java/lang/invoke/InvokeGenericHandle,noLockword=java/lang/invoke/VarargsCollectorHandle,noLockword=java/lang/invoke/ThunkTuple, -Xjcl:jclse7b_29, -Dcom.ibm.oti.vm.bootstrap.library.path=/opt/java/openjdk/jre/lib/amd64/compressedrefs:/opt/java/openjdk/jre/lib/amd64, -Dsun.boot.library.path=/opt/java/openjdk/jre/lib/amd64/compressedrefs:/opt/java/openjdk/jre/lib/amd64, -Djava.library.path=/opt/java/openjdk/jre/lib/amd64/compressedrefs:/opt/java/openjdk/jre/lib/amd64:/usr/lib64:/usr/lib, -Djava.home=/opt/java/openjdk/jre, -Djava.ext.dirs=/opt/java/openjdk/jre/lib/ext, -Duser.dir=/opt/ditto, -XX:+IgnoreUnrecognizedVMOptions, -XX:+UseContainerSupport, -XX:+IdleTuningCompactOnIdle, -XX:+IdleTuningGcOnIdle, -XX:+ExitOnOutOfMemoryError, -Djava.class.path=., -Djava.class.path=/opt/ditto/starter.jar, -Dsun.java.command=/opt/ditto/starter.jar, -Dsun.java.launcher=SUN_STANDARD, -Dsun.java.launcher.pid=8]
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:30,333 INFO [] o.e.d.s.c.ConnectivityService - Available processors: 4
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:32,016 INFO [] k.m.SystemMetrics - Starting the Kamon(SystemMetrics) module
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:32,275 INFO [] o.e.d.s.c.ConnectivityService - Successfully added Prometheus reporter to Kamon.
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:33,992 INFO [] a.e.s.Slf4jLogger - Slf4jLogger started
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:35,253 INFO [] a.r.a.t.ArteryTcpTransport(akka://ditto-cluster) akka.remote.artery.tcp.ArteryTcpTransport(akka://ditto-cluster) - Remoting started with transport [Artery tcp]; listening on address [akka://ditto-cluster@172.28.0.8:2551] with UID [5088088915771108992]
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:35,320 INFO [] a.c.Cluster(akka://ditto-cluster) akka.cluster.Cluster(akka://ditto-cluster) - Cluster Node [akka://ditto-cluster@172.28.0.8:2551] - Starting up, Akka version [2.5.17] ...
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:35,719 INFO [] a.c.Cluster(akka://ditto-cluster) akka.cluster.Cluster(akka://ditto-cluster) - Cluster Node [akka://ditto-cluster@172.28.0.8:2551] - Registered cluster JMX MBean [akka:type=Cluster]
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:35,723 INFO [] a.c.Cluster(akka://ditto-cluster) akka.cluster.Cluster(akka://ditto-cluster) - Cluster Node [akka://ditto-cluster@172.28.0.8:2551] - Started up successfully
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:35,902 INFO [] a.c.Cluster(akka://ditto-cluster) akka.cluster.Cluster(akka://ditto-cluster) - Cluster Node [akka://ditto-cluster@172.28.0.8:2551] - No seed-nodes configured, manual cluster join required
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:37,997 INFO [] a.m.c.b.ClusterBootstrap ClusterBootstrap(akka://ditto-cluster) - Bootstrap using default akka.discovery mechanism: DnsSimpleServiceDiscovery
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:39,693 INFO [] a.m.AkkaManagement AkkaManagement(akka://ditto-cluster) - Including HTTP management routes for ClusterBootstrap
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:39,705 INFO [] a.m.c.b.ClusterBootstrap ClusterBootstrap(akka://ditto-cluster) - Got self contact point address: http://172.28.0.8:8558
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:39,805 INFO [] a.m.AkkaManagement AkkaManagement(akka://ditto-cluster) - Binding Akka Management (HTTP) endpoint to: 172.28.0.8:8558
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:40,425 INFO [] a.m.c.b.ClusterBootstrap ClusterBootstrap(akka://ditto-cluster) - Initiating bootstrap procedure using akka.discovery method...
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:40,488 INFO [] a.m.AkkaManagement AkkaManagement(akka://ditto-cluster) - Bound Akka Management (HTTP) endpoint to: 172.28.0.8:8558
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:40,505 INFO [] o.e.d.s.c.ConnectivityService - Starting actor .
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:40,513 INFO [] o.e.d.s.c.ConnectivityService - Starting actor .
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:40,517 INFO [] o.e.d.s.c.ConnectivityService - Waiting for member to be up before proceeding with further initialisation.
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:40,542 INFO [] a.d.d.DnsSimpleServiceDiscovery DnsSimpleServiceDiscovery(akka://ditto-cluster) - Resolved Dns.Resolved: Resolved(ditto-cluster,Vector(ditto-cluster/172.28.0.8, ditto-cluster/172.28.0.9, ditto-cluster/172.28.0.7, ditto-cluster/172.28.0.2, ditto-cluster/172.28.0.5, ditto-cluster/172.28.0.6),Vector())
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:40,634 INFO [] o.e.d.s.u.d.DevOpsCommandsActor$PubSubSubscriberActor akka://ditto-cluster/user/devOpsCommandsActor/pubSubSubscriber - Successfully subscribed to distributed pub/sub on topic 'devops.commands:retrieveLoggerConfig:connectivity:1'
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:40,637 INFO [] o.e.d.s.u.d.DevOpsCommandsActor$PubSubSubscriberActor akka://ditto-cluster/user/devOpsCommandsActor/pubSubSubscriber - Successfully subscribed to distributed pub/sub on topic 'devops.commands:changeLogLevel:connectivity'
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:40,645 INFO [] o.e.d.s.u.d.DevOpsCommandsActor$PubSubSubscriberActor akka://ditto-cluster/user/devOpsCommandsActor/pubSubSubscriber - Successfully subscribed to distributed pub/sub on topic 'devops.commands:retrieveLoggerConfig'
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:40,645 INFO [] o.e.d.s.u.d.DevOpsCommandsActor$PubSubSubscriberActor akka://ditto-cluster/user/devOpsCommandsActor/pubSubSubscriber - Successfully subscribed to distributed pub/sub on topic 'devops.commands:changeLogLevel:connectivity:1'
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:40,645 INFO [] o.e.d.s.u.d.DevOpsCommandsActor$PubSubSubscriberActor akka://ditto-cluster/user/devOpsCommandsActor/pubSubSubscriber - Successfully subscribed to distributed pub/sub on topic 'devops.commands:executePiggybackCommand'
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:40,646 INFO [] o.e.d.s.u.d.DevOpsCommandsActor$PubSubSubscriberActor akka://ditto-cluster/user/devOpsCommandsActor/pubSubSubscriber - Successfully subscribed to distributed pub/sub on topic 'devops.commands:executePiggybackCommand:connectivity:1'
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:40,646 INFO [] o.e.d.s.u.d.DevOpsCommandsActor$PubSubSubscriberActor akka://ditto-cluster/user/devOpsCommandsActor/pubSubSubscriber - Successfully subscribed to distributed pub/sub on topic 'devops.commands:retrieveLoggerConfig:connectivity'
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:40,647 INFO [] o.e.d.s.u.d.DevOpsCommandsActor$PubSubSubscriberActor akka://ditto-cluster/user/devOpsCommandsActor/pubSubSubscriber - Successfully subscribed to distributed pub/sub on topic 'devops.commands:executePiggybackCommand:connectivity'
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:40,647 INFO [] o.e.d.s.u.d.DevOpsCommandsActor$PubSubSubscriberActor akka://ditto-cluster/user/devOpsCommandsActor/pubSubSubscriber - Successfully subscribed to distributed pub/sub on topic 'devops.commands:changeLogLevel'
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:41,547 INFO [] a.m.c.b.LowestAddressJoinDecider LowestAddressJoinDecider(akka://ditto-cluster) - Discovered [6] contact points, confirmed [0], which is less than the required [2], retrying
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:42,085 INFO [] a.d.d.DnsSimpleServiceDiscovery DnsSimpleServiceDiscovery(akka://ditto-cluster) - Resolved Dns.Resolved: Resolved(ditto-cluster,Vector(ditto-cluster/172.28.0.8, ditto-cluster/172.28.0.9, ditto-cluster/172.28.0.7, ditto-cluster/172.28.0.2, ditto-cluster/172.28.0.5, ditto-cluster/172.28.0.6),Vector())
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:42,516 INFO [] a.m.c.b.LowestAddressJoinDecider LowestAddressJoinDecider(akka://ditto-cluster) - Discovered [6] contact points, confirmed [0], which is less than the required [2], retrying
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:43,318 INFO [] a.d.d.DnsSimpleServiceDiscovery DnsSimpleServiceDiscovery(akka://ditto-cluster) - Resolved Dns.Resolved: Resolved(ditto-cluster,Vector(ditto-cluster/172.28.0.8, ditto-cluster/172.28.0.9, ditto-cluster/172.28.0.7, ditto-cluster/172.28.0.2, ditto-cluster/172.28.0.5, ditto-cluster/172.28.0.6),Vector())
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:43,877 INFO [] a.a.LocalActorRef akka://ditto-cluster/system/bootstrapCoordinator/contactPointProbe-172.28.0.5-8558 - Message [akka.actor.Status$Failure] from Actor[akka://ditto-cluster/system/bootstrapCoordinator/contactPointProbe-172.28.0.5-8558#870674603] to Actor[akka://ditto-cluster/system/bootstrapCoordinator/contactPointProbe-172.28.0.5-8558#870674603] was not delivered. [1] dead letters encountered. If this is not an expected behavior, then [Actor[akka://ditto-cluster/system/bootstrapCoordinator/contactPointProbe-172.28.0.5-8558#870674603]] may have terminated unexpectedly, This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:45,860 INFO [] a.c.JoinSeedNodeProcess akka://ditto-cluster@172.28.0.8:2551/system/cluster/core/daemon/joinSeedNodeProcess-1 - Received InitJoinAck message from [Actor[akka://ditto-cluster@172.28.0.2:2551/system/cluster/core/daemon#-1315724120]] to [akka://ditto-cluster@172.28.0.8:2551]
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:46,260 INFO [] a.c.Cluster(akka://ditto-cluster) akka.cluster.Cluster(akka://ditto-cluster) - Cluster Node [akka://ditto-cluster@172.28.0.8:2551] - Welcome from [akka://ditto-cluster@172.28.0.2:2551]
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:46,901 INFO [] o.e.d.s.c.ConnectivityService - Member successfully joined the cluster, instantiating remaining actors.
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:46,913 INFO [] o.e.d.s.c.ConnectivityService - Starting actor .
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:46,931 INFO [] o.e.d.s.c.a.ConnectivityRootActor akka://ditto-cluster/user/connectivityRoot - Starting child actor 'healthCheckingActor'
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:47,140 INFO [] o.e.d.s.c.a.ConnectivityRootActor akka://ditto-cluster/user/connectivityRoot - Starting child actor 'conciergeForwarder'
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:47,574 INFO [] a.a.EmptyLocalActorRef akka://ditto-cluster/system/sharding/connectionCoordinator/singleton/coordinator - Message [akka.cluster.sharding.ShardCoordinator$Internal$Register] from Actor[akka://ditto-cluster/system/sharding/connection#1632233310] to Actor[akka://ditto-cluster/system/sharding/connectionCoordinator/singleton/coordinator] was not delivered. [2] dead letters encountered. If this is not an expected behavior, then [Actor[akka://ditto-cluster/system/sharding/connectionCoordinator/singleton/coordinator]] may have terminated unexpectedly, This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:47,578 INFO [] a.c.s.ClusterSingletonManager akka://ditto-cluster@172.28.0.8:2551/system/sharding/connectionCoordinator - Singleton manager starting singleton actor [akka://ditto-cluster/system/sharding/connectionCoordinator/singleton]
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:47,592 INFO [] a.c.s.ClusterSingletonManager akka://ditto-cluster@172.28.0.8:2551/system/sharding/connectionCoordinator - ClusterSingletonManager state change [Start -> Oldest]
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:47,809 INFO [] a.c.s.DDataShardCoordinator akka://ditto-cluster@172.28.0.8:2551/system/sharding/connectionCoordinator/singleton/coordinator - Sharding Coordinator was moved to the active state State(Map(),Map(),Set(),Set(),true)
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:48,075 INFO [] a.c.s.ClusterSingletonManager akka://ditto-cluster@172.28.0.8:2551/user/connectivityRoot/reconnect - Singleton manager starting singleton actor [akka://ditto-cluster/user/connectivityRoot/reconnect/singleton]
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:48,076 INFO [] a.c.s.ClusterSingletonManager akka://ditto-cluster@172.28.0.8:2551/user/connectivityRoot/reconnect - ClusterSingletonManager state change [Start -> Oldest]
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:48,331 INFO [] o.e.d.s.c.m.ReconnectActor akka://ditto-cluster/user/connectivityRoot/reconnect/singleton/supervised-child - Scheduling reconnect for all connections with initial delay PT0S and interval PT10M.
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:48,335 INFO [] o.e.d.s.c.m.ReconnectActor akka://ditto-cluster/user/connectivityRoot/reconnect/singleton/supervised-child - Sending reconnects for Connections. Will be sent again after the configured Interval of PT10M.
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:48,341 INFO [] a.c.p.m.ScalaMongoDriver - Applying configuration-specific overrides for driver
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:49,005 INFO [] o.e.d.s.c.m.ReconnectActor akka://ditto-cluster/user/connectivityRoot/reconnect/singleton/supervised-child - Sending reconnects completed.
connectivity_1_fd9f5d488da3 | 2019-03-29 22:44:49,005 INFO [] o.e.d.s.c.m.ReconnectActor akka://ditto-cluster/user/connectivityRoot/reconnect/singleton/supervised-child - Got reconnects completed.
connectivity_1_fd9f5d488da3 | 2019-03-29 22:47:53,084 INFO [9197b1dd-4472-4577-9539-f072ab598c61] o.e.d.s.u.d.DevOpsCommandsActor akka://ditto-cluster/user/devOpsCommandsActor - Received PiggybackCommand: <RetrieveConnectionStatus [type=connectivity.commands:retrieveConnectionStatus, dittoHeaders=ImmutableDittoHeaders [{timeout=10000, aggregate=false, correlation-id=9197b1dd-4472-4577-9539-f072ab598c61}], connectionId=mqtt-example-connection-123]> - telling to: </system/sharding/connection>
connectivity_1_fd9f5d488da3 | 2019-03-29 22:47:53,102 INFO [] a.c.d.LmdbDurableStore akka://ditto-cluster@172.28.0.8:2551/system/sharding/connectivityReplicator/durableStore - Using durable data in LMDB directory [/opt/ditto/ddata-ditto-cluster-connectivityReplicator-2551]
connectivity_1_fd9f5d488da3 | 2019-03-29 22:47:53,528 INFO [] a.p.Persistence(akka://ditto-cluster) akka.persistence.Persistence(akka://ditto-cluster) - Auto-starting journal plugin akka-contrib-mongodb-persistence-connection-journal
connectivity_1_fd9f5d488da3 | 2019-03-29 22:47:53,544 INFO [] a.p.Persistence(akka://ditto-cluster) akka.persistence.Persistence(akka://ditto-cluster) - Auto-starting snapshot store akka-contrib-mongodb-persistence-connection-snapshots
connectivity_1_fd9f5d488da3 | 2019-03-29 22:47:53,569 INFO [] a.c.p.m.ScalaMongoDriver - Applying configuration-specific overrides for driver
connectivity_1_fd9f5d488da3 | 2019-03-29 22:47:53,587 INFO [] a.c.p.m.ScalaMongoDriver - Applying configuration-specific overrides for driver
connectivity_1_fd9f5d488da3 | 2019-03-29 22:47:53,737 INFO [] o.e.d.s.c.m.ConnectionActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa - Connection was recovered: null
connectivity_1_fd9f5d488da3 | 2019-03-29 22:48:26,385 INFO [8300ec18-d27d-4beb-b97b-53f57502e765] o.e.d.s.u.d.DevOpsCommandsActor akka://ditto-cluster/user/devOpsCommandsActor - Received PiggybackCommand: <RetrieveConnectionStatus [type=connectivity.commands:retrieveConnectionStatus, dittoHeaders=ImmutableDittoHeaders [{timeout=10000, aggregate=false, correlation-id=8300ec18-d27d-4beb-b97b-53f57502e765}], connectionId=mqtt-example-connection-123]> - telling to: </system/sharding/connection>
connectivity_1_fd9f5d488da3 | 2019-03-29 22:50:07,195 INFO [69769185-b757-43d0-b115-89e038a294ec] o.e.d.s.u.d.DevOpsCommandsActor akka://ditto-cluster/user/devOpsCommandsActor - Received PiggybackCommand: <CreateConnection [type=connectivity.commands:createConnection, dittoHeaders=ImmutableDittoHeaders [{timeout=10000, aggregate=false, correlation-id=69769185-b757-43d0-b115-89e038a294ec}], connection=ImmutableConnection [id=mqtt-example-connection-123, name=null, connectionType=mqtt, connectionStatus=open, failoverEnabled=true, credentials=null, trustedCertificates=hash:31, uri=tcp://49.4.2.72:1883, sources=[ImmutableSource [index=0, addresses=[ditto-tutorial/#], consumerCount=1, qos=0, authorizationContext=ImmutableAuthorizationContext [authorizationSubjects=[nginx:ditto]], enforcement=null, headerMapping=null]], targets=[ImmutableTarget [address=ditto-tutorial/{{ thing:id }}, originalAddress=ditto-tutorial/{{ thing:id }}, topics=[//things/twin/events, //things/live/messages], qos=0, authorizationContext=ImmutableAuthorizationContext [authorizationSubjects=[nginx:ditto]], headerMapping=null]], clientCount=1, validateCertificate=true, processorPoolSize=5, specificConfig={}, mappingContext=ImmutableMappingContext [mappingEngine=JavaScript, options={incomingScript=function mapToDittoProtocolMsg(headers, textPayload, bytePayload, contentType) {const jsonString = String.fromCharCode.apply(null, new Uint8Array(bytePayload));const jsonData = JSON.parse(jsonString); const thingId = jsonData.thingId; const value = { temp_sensor: { properties: { value: jsonData.temp } },altitude: { properties: { value: jsonData.alt } } }; return Ditto.buildDittoProtocolMsg(my.test, thingId, things, twin, commands, modify, /features, headers, value);}}], tags=[]]]> - telling to: </system/sharding/connection>
connectivity_1_fd9f5d488da3 | 2019-03-29 22:50:07,329 INFO [] o.e.d.s.c.m.ConnectionActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa - Starting ClientActor for connection with <1> clients.
connectivity_1_fd9f5d488da3 | 2019-03-29 22:50:07,344 INFO [] a.a.RepointableActorRef akka://ditto-cluster/system/distributedPubSubMediator - Message [org.eclipse.ditto.signals.events.connectivity.ConnectionCreated] from Actor[akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa#1765586408] to Actor[akka://ditto-cluster/system/distributedPubSubMediator#1544972560] was not delivered. [3] dead letters encountered. If this is not an expected behavior, then [Actor[akka://ditto-cluster/system/distributedPubSubMediator#1544972560]] may have terminated unexpectedly, This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
connectivity_1_fd9f5d488da3 | 2019-03-29 22:50:07,378 INFO [] o.e.d.s.c.m.m.MqttClientActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa/$a/c1 - Starting MQTT publisher actor.
connectivity_1_fd9f5d488da3 | 2019-03-29 22:50:07,512 INFO [] o.e.d.s.c.m.m.MqttPublisherActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa/$a/c1/mqttPublisher1 - Publisher ready
connectivity_1_fd9f5d488da3 | 2019-03-29 22:50:07,566 INFO [] o.e.d.s.c.m.m.MqttClientActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa/$a/c1 - Got DittoRuntimeException during initialization of MessageMappingProcessor: MessageMapperConfigurationFailedException The message mapper configuration failed due to: unterminated regular expression literal (incomingScript#1) - in line/column #1/539, source:
connectivity_1_fd9f5d488da3 | function mapToDittoProtocolMsg(headers, textPayload, bytePayload, contentType) {const jsonString = String.fromCharCode.apply(null, new Uint8Array(bytePayload));const jsonData = JSON.parse(jsonString); const thingId = jsonData.thingId; const value = { temp_sensor: { properties: { value: jsonData.temp } },altitude: { properties: { value: jsonData.alt } } }; return Ditto.buildDittoProtocolMsg(my.test, thingId, things, twin, commands, modify, /features, headers, value);} - desc: Check the configuration options of your mapper for errors.
connectivity_1_fd9f5d488da3 | 2019-03-29 22:50:07,569 WARN [] o.e.d.s.c.m.m.MqttClientActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa/$a/c1 - failed to start mapping processor due to org.eclipse.ditto.model.connectivity.MessageMapperConfigurationFailedException [message='The message mapper configuration failed due to: unterminated regular expression literal (incomingScript#1) - in line/column #1/539, source:
connectivity_1_fd9f5d488da3 | function mapToDittoProtocolMsg(headers, textPayload, bytePayload, contentType) {const jsonString = String.fromCharCode.apply(null, new Uint8Array(bytePayload));const jsonData = JSON.parse(jsonString); const thingId = jsonData.thingId; const value = { temp_sensor: { properties: { value: jsonData.temp } },altitude: { properties: { value: jsonData.alt } } }; return Ditto.buildDittoProtocolMsg(my.test, thingId, things, twin, commands, modify, /features, headers, value);}', errorCode=connectivity:message.mapper.config.failed, statusCode=BAD_REQUEST, description='Check the configuration options of your mapper for errors.', href=null, dittoHeaders=ImmutableDittoHeaders [{}]]
connectivity_1_fd9f5d488da3 | 2019-03-29 22:50:07,593 INFO [] o.e.d.s.c.m.m.MqttClientActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa/$a/c1 - Got DittoRuntimeException during initialization of MessageMappingProcessor: MessageMapperConfigurationFailedException The message mapper configuration failed due to: unterminated regular expression literal (incomingScript#1) - in line/column #1/539, source:
connectivity_1_fd9f5d488da3 | function mapToDittoProtocolMsg(headers, textPayload, bytePayload, contentType) {const jsonString = String.fromCharCode.apply(null, new Uint8Array(bytePayload));const jsonData = JSON.parse(jsonString); const thingId = jsonData.thingId; const value = { temp_sensor: { properties: { value: jsonData.temp } },altitude: { properties: { value: jsonData.alt } } }; return Ditto.buildDittoProtocolMsg(my.test, thingId, things, twin, commands, modify, /features, headers, value);} - desc: Check the configuration options of your mapper for errors.
connectivity_1_fd9f5d488da3 | 2019-03-29 22:50:07,596 INFO [] o.e.d.s.c.m.ConnectionActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa - Running <PerformTask(subscribe for events and schedule CreateConnectionResponse)>
connectivity_1_fd9f5d488da3 | 2019-03-29 22:50:45,845 INFO [50f7b8a5-474a-4147-a3d1-318cb7eea9bb] o.e.d.s.u.d.DevOpsCommandsActor akka://ditto-cluster/user/devOpsCommandsActor - Received PiggybackCommand: <RetrieveConnectionStatus [type=connectivity.commands:retrieveConnectionStatus, dittoHeaders=ImmutableDittoHeaders [{timeout=10000, aggregate=false, correlation-id=50f7b8a5-474a-4147-a3d1-318cb7eea9bb}], connectionId=mqtt-example-connection-123]> - telling to: </system/sharding/connection>
root@ecs-8738-2:~/ditto/deployment/docker#
```

I think the relevant log statement in here is:
```
connectivity_1_fd9f5d488da3 | 2019-03-29 22:50:07,593 INFO [] o.e.d.s.c.m.m.MqttClientActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa/$a/c1 - Got DittoRuntimeException during initialization of MessageMappingProcessor: MessageMapperConfigurationFailedException The message mapper configuration failed due to: unterminated regular expression literal (incomingScript#1) - in line/column #1/539, source:
```

It states that your incoming payload mapping script seems to have an invalid syntax.
As I'm almost sure the next thing happening is, posting your mapping script in this thread, I ask you again to use stackoverflow for questions about usage and tag them with the `eclipse-ditto` tag. This would've allowed me to just edit your question and prettify your log output instead of posting it again in a readable way.
So far I don't think this is a bug or feature request, but a question about usage.
Don't forget to include the payload mapping script you use in your question.

Feel free to reference to your stackoverflow question from this issue :)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3ODQzODEwOA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/370,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3ODU0MjgyNQ==,ditto,478542825,370,NA,BaerSy,27965673,BaerS,,NA,2019-04-01T11:33:05Z,2019-04-01T11:33:05Z,"I have posted it stackoverflow

https://stackoverflow.com/questions/55454096/no-messagemappingprocessor-available-in-ditto

The  payload mapping script 

""mappingContext"": {
""mappingEngine"": ""JavaScript"",
""options"": {
""incomingScript"": ""function mapToDittoProtocolMsg(headers, textPayload, bytePayload, contentType) {const jsonString = String.fromCharCode.apply(null, new Uint8Array(bytePayload));const jsonData = JSON.parse(jsonString); const thingId = jsonData.thingId; const value = { temp_sensor: { properties: { value: jsonData.temp } },altitude: { properties: { value: jsonData.alt } } }; return Ditto.buildDittoProtocolMsg('my.test', thingId, 'things', 'twin', 'commands', 'modify', '/features', headers, value);}""
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3ODU0MjgyNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/370,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3ODU2Nzc2NQ==,ditto,478567765,370,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-04-01T12:56:34Z,2019-04-01T12:56:34Z,Feel free to open an issue for non-questions (e.g. for a bug in Ditto).,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ3ODU2Nzc2NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/373,https://api.github.com/repos/eclipse-ditto/ditto/issues/373,ditto,428831360,373,"Apply the concept used for GlobalErrorRegistry to Commands, CommandResponses and Events",Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,CLOSED,2019-04-03T15:24:23Z,2019-04-08T07:39:56Z,"I think we can save a lot of code by using the concept of GlobalErrorRegistry for Commands, CommandResponses and Events aswell.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/373/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/373,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ4MDcxOTM5Mg==,ditto,480719392,373,NA,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,NA,2019-04-08T07:38:37Z,2019-04-08T07:38:37Z,Thanks for merging @jufickel-b ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ4MDcxOTM5Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/376,https://api.github.com/repos/eclipse-ditto/ditto/issues/376,ditto,429699726,376,Evaluate Ditto with Azure CosmosDB facade,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2019-04-05T11:02:33Z,2019-12-13T10:48:16Z,"Azure CosmosDB provides a MongoDB facade: 
https://docs.microsoft.com/en-us/azure/cosmos-db/mongodb-introduction

We would like to evaluate whether Ditto can be used with CosmosDB as in-place replacement of MongoDB.

The following services make ""simple"" use (create, delete, read with kind of ""key-value-store"" approach) of MongoDB:
* policies
* things
* concierge
* connectivity

The following service uses MongoDB for ""advanced"" topics (e.g. regex searches, complex filters, array indices, etc.):
* things-search

The goal is to evaluate
* whether the ""simple"" services work on CosmosDB
* whether the ""advanced"" services work on CosmosDB and potentially identify the parts where CosmosDB behaves differently than in MongoDB","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/376/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/376,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5MDU0ODQxMg==,ditto,490548412,376,NA,kaizimmerm,9153035,Kai Zimmermann,,NA,2019-05-08T16:06:56Z,2019-05-08T16:06:56Z,"I am currently running tests against CosmosDB for the ""simple"" use case. So far good results. I will keep you updated.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5MDU0ODQxMg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/376,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU2NTM1NTE1OQ==,ditto,565355159,376,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-12-13T08:48:32Z,2019-12-13T08:48:32Z,@kaizimmerm can we close this by summing the results up in 1-2 sentences? :),"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU2NTM1NTE1OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/376,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU2NTM3NzYyMw==,ditto,565377623,376,NA,kaizimmerm,9153035,Kai Zimmermann,,NA,2019-12-13T09:56:15Z,2019-12-13T09:56:15Z,"Sure!

The simple use case worked fine. I could not identify any issues. As expected, things-search did not work as search on CosmosDB works different then MongoDB and as a result would require code changes. In addition it might generate high service cost.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU2NTM3NzYyMw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/379,https://api.github.com/repos/eclipse-ditto/ditto/issues/379,ditto,431334647,379,Document that MQTT incoming messages are always bytePayload,ffendt,2587759,Florian Fendt,,CLOSED,2019-04-10T06:57:40Z,2019-10-22T09:39:57Z,"When receiving incoming messages via a MQTT connection, the messages are always found in the bytePayload field in payload mapping. There should definitely be some documentation on this pitfall.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/379/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/379,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU0NDg4Mjc2NA==,ditto,544882764,379,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-10-22T09:39:56Z,2019-10-22T09:39:56Z,"Closing this, as this is no longer the case since commit 2b9a792","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU0NDg4Mjc2NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/384,https://api.github.com/repos/eclipse-ditto/ditto/issues/384,ditto,433733559,384,[website] Company logos,kartben,128251,Benjamin Cabé,benjamin@zephyrproject.org,CLOSED,2019-04-16T11:41:28Z,2019-10-07T08:46:30Z,"FWIW the guidelines for Eclipse project websites is that company logos can be shown only for those companies that are members of the Eclipse Foundation, so you may not want to have the Aloxy logo","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/384/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/384,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ4MzY0MTY0MA==,ditto,483641640,384,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-04-16T12:38:30Z,2019-04-16T12:38:30Z,"As far as I understand the [handbook section](https://www.eclipse.org/projects/handbook/#pmi-company-logos) about that, that only applies for the ""Who's Involved"" page at the project's site.

For example the Vert.X start page also lists a lot of companies which are not Eclipse Foundation members:
http://vertx.io/whos_using/","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ4MzY0MTY0MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/384,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ4Mzc2NDQ1OA==,ditto,483764458,384,NA,kartben,128251,Benjamin Cabé,benjamin@zephyrproject.org,NA,2019-04-16T17:15:15Z,2019-04-16T17:15:15Z,"Right but I'm not sure the Eclipse Vert.x webpage is compliant, for what it's worth :-)
See https://www.eclipse.org/lists/iot-pmc/msg04198.html - and @waynebeaton is definitely the one who'd know the definitive answer :)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ4Mzc2NDQ1OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/384,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzODkwMDA4MQ==,ditto,538900081,384,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-10-07T08:46:30Z,2019-10-07T08:46:30Z,This has been resolved by the Eclipse foundation by https://github.com/eclipsefdn/iot.eclipse.org#project-adopters which Ditto implemented in #503 ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzODkwMDA4MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/387,https://api.github.com/repos/eclipse-ditto/ditto/issues/387,ditto,434740237,387,MQTT publish fails if no sources are configured,ffendt,2587759,Florian Fendt,,CLOSED,2019-04-18T12:16:46Z,2019-04-26T08:23:50Z,"If using a MQTT connection that only has targets but no sources, publishing of events will fail with the following log entry:
Cannot handle <any event> signal as there is no MessageMappingProcessor available.""

I think the reason lies in [MqttClientActor:186](https://github.com/eclipse/ditto/blob/6de44b443c5bc3530bbfa9a60b419cb1c1b45c5e/services/connectivity/messaging/src/main/java/org/eclipse/ditto/services/connectivity/messaging/mqtt/MqttClientActor.java#L186) which starts the MessageMappingProcessorActor only if the MQTT connection has sources. In my opinion the actor should be started after starting the publisher actor (in line 182) since the MessageMappingProcessorActor will use the publisher actor that is created in line 181.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/387/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/387,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ4NTg0NjI5OA==,ditto,485846298,387,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-04-23T15:13:01Z,2019-04-23T15:13:01Z,Fixed by #389 ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ4NTg0NjI5OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/395,https://api.github.com/repos/eclipse-ditto/ditto/issues/395,ditto,439207785,395,Question: Is there any theoretical limits to the number of Entries in a Policy?,zubairhamed,2336402,Zubair Hamed,,CLOSED,2019-05-01T15:35:14Z,2019-05-09T07:18:14Z,NT,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/395/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/395,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ4ODMzNjU5NQ==,ditto,488336595,395,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-05-01T16:40:49Z,2019-05-01T16:40:49Z,"The policy (its Json representation) in total can only be 100kB big, apart from that: nope, no limits for the number of entries.  ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ4ODMzNjU5NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/396,https://api.github.com/repos/eclipse-ditto/ditto/issues/396,ditto,439696311,396,BadGateway error running locally on Docker for Windows,srberard,581348,Stephen Berard,,CLOSED,2019-05-02T17:10:28Z,2019-05-03T13:25:17Z,"Similar to issue #340 I'm getting a 502 Bad Gateway on everything except the static site and swagger UI.

I cloned the Ditto project, changed directories to `ditto/deployment/docker` and ran the following:
```docker-compose up -d ```

The main page at http://localhost:8080/ works fine, as does the Swagger UI.  However, if I try to do anything against the local Ditto instance I get a 502 Bad Gateway issue.  Similar to the other issue, the following pages result in 502 erros as well:
    localhost:8080/ws
    localhost:8080/stats
    localhost:8080/status

I'm using the pre-built images for 0.8.0.  I'm running Docker for Windows v2.0.0.3 (latest stable) on Windows 10 with Linux containers.  

I looked at the container status with `docker-compose ps` and saw that the Concierge service existed with an error 137.  I restarted services and tried again with the same result.  

Looking in the logs I didn't see anything that really stood out as the root cause.  I did see a number of these:
```
concierge_1      | 2019-05-02 16:50:02,374 ERROR [] a.m.c.b.i.HttpContactPointBootstrap akka://ditto-cluster@172.20.0.7:2551/system/bootstrapCoordinator/contactPointProbe-172.20.0.8-8558 - Probing [http://172.20.0.8:8558/bootstrap/seed-nodes] failed due to: Probing timeout of [http://172.20.0.8:8558]
concierge_1      | 2019-05-02 16:50:02,377 ERROR [] a.m.c.b.i.HttpContactPointBootstrap akka://ditto-cluster@172.20.0.7:2551/system/bootstrapCoordinator/contactPointProbe-172.20.0.8-8558 - Overdue of probing-failure-timeout, stop probing, signaling that it's failed
```
The above appears in several other services as well.

Any ideas on how to fix or further troubleshoot this?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/396/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/396,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ4ODkzNTE1Ng==,ditto,488935156,396,NA,ffendt,2587759,Florian Fendt,,NA,2019-05-03T04:59:28Z,2019-05-03T04:59:28Z,"Hi srberard,

how much memory do you provide to docker in your Docker for Windows settings (see Advanced tab)? Too less memory might cause these issues when starting the containers. I have this setting on 10GB but I am also running some more containers. When only running Ditto you should probably be alright with less than that. If still one of the services fails starting (with the error log you provided), you can try to restart it manually (docker-compose restart <services>).

The 502 probably means that nginx can't contact the gateway service, so the important logs will probably be nginx (docker-compose logs nginx) and gateway (docker-compose logs gateway). Could you please have a look at them?

Best regards,
Florian




","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ4ODkzNTE1Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/396,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ4OTA5NDExOA==,ditto,489094118,396,NA,srberard,581348,Stephen Berard,,NA,2019-05-03T13:25:16Z,2019-05-03T13:25:16Z,@ffendt thanks for the help.  Your memory suggestion worked.  I tried this on a machine with more memory and allocated 8GB to the VM.  Everything worked as expected.  Thanks!,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ4OTA5NDExOA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/399,https://api.github.com/repos/eclipse-ditto/ditto/issues/399,ditto,441781332,399,Consumers of Azure Service Bus reconnect every couple minutes,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,CLOSED,2019-05-08T15:00:13Z,2019-05-10T10:07:34Z,"## Context

1. Create an AMQP connection to Azure Service Bus with 1 source and no target.
2. Do not send any events to the Service Bus.

## Expected behavior

The connection stays open; AmqpClientActor replies ""open"" on `RetrieveConnectionStatus` command.

## Actual behavior

Live connection status in AmqpClientActor gets set to ""closed"" once every few minutes and then set to ""open"" again after about 10 seconds.

I tried the `specificConfig` below. They do not prevent the connections from closing themselves, nor do they change the interval at which the connections close themselves:

```
failoverEnabled = true
failoverEnabled = false
amqp.idleTimeout = 20000 (minimum value accepted by Qpid)
amqp.idleTimeout = 3600000
amqp.drainTimeout = 3600000
```

Live connection status continued to flicker after the Service Bus was deleted.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/399/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/399,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5MDUyMjIyMw==,ditto,490522223,399,NA,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,NA,2019-05-08T15:01:12Z,2019-05-08T15:01:12Z,@kaizimmerm Do you happen to know why this might happen?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5MDUyMjIyMw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/399,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5MDU0NzM3Mw==,ditto,490547373,399,NA,kaizimmerm,9153035,Kai Zimmermann,,NA,2019-05-08T16:03:59Z,2019-05-08T16:03:59Z,"Do you happen to have a log entry? Service Bus has its own idle timeouts but Qpid should log if the server shuts a link down with a reason. `amqp.idleTimeout` in the URL btw. is client side only. 

""_...every few minutes..._"" is this constant? I would expect 10 minutes.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5MDU0NzM3Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/399,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5MDgyNjM1MQ==,ditto,490826351,399,NA,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,NA,2019-05-09T09:18:17Z,2019-05-09T09:18:17Z,"On 06.05.2019
```
08:46:54.538UTC
Subscribed Connection <...> to sources: [ConsumerData [address=garg, addressWithIndex=garg-0]]

09:05:05.058UTC
javax.jms.JMSException occurred: The link 'G2:1647380:qpid-jms:receiver:ID:9ebd63de-ec24-434f-8acb-cb5bcb7e689a:1:1:1:garg' is force detached by the broker due to errors occurred in consumer(link106418). Detach origin: InnerMessageReceiver was closed. TrackingId:50e533a30000001500019fb25ccff47e_G2_B4, SystemTracker:gargsb:Queue:garg, Timestamp:2019-05-06T09:05:05 [condition = amqp:link:detach-forced]
```
No interaction with Service Bus was logged between creation of the consumer and the force detachment.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5MDgyNjM1MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/399,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5MDgzOTI4Mw==,ditto,490839283,399,NA,kaizimmerm,9153035,Kai Zimmermann,,NA,2019-05-09T09:57:06Z,2019-05-09T09:57:06Z,"Hmm, that is a longer timeframe than I would expect. 

Anyhow, have you configured `amqp.idleTimeout` on the client? It should not keep an idle connection open that long. So maybe `amqp.idleTimeout=120000` is a good starting point to avoid that the server is forced to shut it down.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5MDgzOTI4Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/399,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5MDg3NjUzMw==,ditto,490876533,399,NA,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,NA,2019-05-09T12:08:37Z,2019-05-09T12:08:37Z,"I want to keep the connection open 24/7 so that I know immediately when something gets pushed into the queue. AMQP 1.0 specification ss. 2.4.5 states that idle timeout is negotiated at connection open and heartbeats are sent at intervals half of the actual idle timeout. There should be no reason why I can't keep an idle connection open indefinitely.
> At Connection open each peer communicates the
maximum period between activity (frames) on the connection that it desires from its partner. The
open frame carries the idle-time-out field for this purpose. To avoid spurious time-outs, the value in
idle-time-out should be half the peer’s actual timeout threshold.
If a peer can not, for any reason support a proposed idle time-out, then it should close the connection
using a close frame with an error explaining why. There is no requirement for peers to support
arbitrarily short or long idle time-outs.
The use of idle time-outs is any addition to any network protocol level control. Implementations
should make use of TCP keep-alive wherever possible in order to be good citizens.
If a peer needs to satisfy the need to send traffic to prevent idle time-out, and has nothing to send,
it may send an empty frame, i.e. a frame consisting solely of a frame header, with no frame body.
This frame’s channel can be any valid channel up to channel-max, but is otherwise to be ignored.
Implementations SHOULD use channel 0 for empty frames, and MUST use channel 0 if channel-max
has not yet been negotiated (i.e. before an open frame has been received). Apart from this use, empty
frames have no meaning.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5MDg3NjUzMw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/399,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5MTIwNDM0NA==,ditto,491204344,399,NA,kaizimmerm,9153035,Kai Zimmermann,,NA,2019-05-10T08:23:52Z,2019-05-10T08:23:52Z,"Well, I guess this is the wrong forum to discuss your requirement _""keep an idle connection open indefinitely""_  towards Azure Service Bus and I am for sure the wrong peer.

The issue is btw. discussed here as well https://github.com/Azure/azure-service-bus-java/issues/219#issuecomment-473009343 

However, based on your description it seems Ditto is handling this correctly by means of reopening the link. So, I cannot see an actual issue here.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5MTIwNDM0NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/399,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5MTIzNTk5Ng==,ditto,491235996,399,NA,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,NA,2019-05-10T10:07:34Z,2019-05-10T10:07:34Z,"Good to know, thanks.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5MTIzNTk5Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/412,https://api.github.com/repos/eclipse-ditto/ditto/issues/412,ditto,447202302,412,Fix potential substream unmarshalling errors,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,CLOSED,2019-05-22T15:25:57Z,2019-05-24T14:15:39Z,"The way WebsocketRoute and SseThingsRoute handle non-strict HttpRequest objects triggers [Akka-http issue 745](https://github.com/akka/akka-http/issues/745).

[Issue 117](https://github.com/akka/akka-http/issues/117), once done, is perfect for Ditto due to hard limits on entity sizes.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/412/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/412,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5NTY0ODUwMg==,ditto,495648502,412,NA,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,NA,2019-05-24T14:15:38Z,2019-05-24T14:15:38Z,Closing this - strict requests are not performant.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5NTY0ODUwMg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/414,https://api.github.com/repos/eclipse-ditto/ditto/issues/414,ditto,448073024,414,closed AMQP 1.0 consumer after idle timeout is not restored,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2019-05-24T09:36:50Z,2019-08-30T09:49:30Z,"Azure Service Bus has the behavior that idle AMQP 1.0 links are closed after ~10 minutes of idle timeout.

We get following log message and afterwards the AMQP 1.0 Azure Service Bus connection is in a strange state:
```
Consumer <org.apache.qpid.jms.JmsMessageConsumer@3b8f105d> closed due to JmsConnectionRemotelyClosedException: The connection was inactive for more than the allowed 120000 milliseconds and is closed by container '...'. [condition = amqp:connection:forced]
```

""Strange"" because: after that message we get following messages:
```
May 23rd 2019, 06:56:14.973 Session closed: org.apache.qpid.jms.JmsSession@3230bc47 - Unknown error from remote peer
May 23rd 2019, 06:56:14.975 Connection interrupted: amqps://<...>.servicebus.windows.net:5671?amqp.saslMechanisms=PLAIN&transport.trustAll=true&transport.verifyHost=false
May 23rd 2019, 06:56:16.229 Connection restored: amqps://<...>.servicebus.windows.net:5671?amqp.saslMechanisms=PLAIN&transport.trustAll=true&transport.verifyHost=false
```

The last 2 messages repeat themselves each second.

We could/should react on `org.eclipse.ditto.services.connectivity.messaging.amqp.AmqpClientActor.StatusReportingListener#onConsumerClosed` and restore the connection.

What also can be seen: the default JMS client timeout seems to be 120s (see error message above) - we should increase that to at least 5 min.
Azure Service Bus' timeout seems to be ~9-11 minutes.

I'm not sure why this only happens on Service Bus - as for Eclipse Hono we also have consumers which are ""idling"" 2 minutes. Maybe the AMQP endpoint does however keep them open infinitely.

@kaizimmerm : could you please have a look on this?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/414/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/414,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUwMzIzNjM1OQ==,ditto,503236359,414,NA,kaizimmerm,9153035,Kai Zimmermann,,NA,2019-06-18T17:35:35Z,2019-06-18T17:35:35Z,"@thjaeckle I struggle to reproduce this. My Ditto installation never shows these messages. Even after days of idle time it always reacts promptly to inbound messages so I assume the consumers are alive and well.

I tried different connection setups (all with Azure Service Bus standard plan) but none showed the described behaviour. Tried:
* With or without `failoverEnabled`
* With or without 
```json
""specificConfig"": {
        ""amqp.idleTimeout"": 120000
      }
```
* I even set the client idleTimeout to 20 minutes once to force this, but even then I only got a shutdown of the producer from the server.

Can you give me a bit more input that might help to track this down, e.g. how your connection has been setup?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUwMzIzNjM1OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/414,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUwMzYwNTUzNQ==,ditto,503605535,414,NA,dguggemos,15028977,Dominik Guggemos,dominik.guggemos@bosch.io,NA,2019-06-19T15:17:34Z,2019-06-19T15:17:34Z,"Hi @kaizimmerm,
I just repoduced this by creating a Service Bus instance and connecting to it using the Qpid JMS Client (the client we use in Ditto for connections to AMQP 1.0 brokers). I traced the communication between client and server, the service bus sets an idle timeout of 240000ms in the open frame. This value is interpreted by the Qpid JMS client and it would send a PING to keep the connection open after 120000ms (""remote idle timeout"" / 2). Unfortunately the connection is closed after 60s by the link tracker:
> The connection was inactive for more than the allowed 60000 milliseconds and is closed by container 'LinkTracker'

So it seems that the Service Bus does not respect the idle timeout set by itself. I can provide a simple reproducer if required. The issue was however already reported but closed as expected behavior: https://github.com/Azure/azure-service-bus-java/issues/142 and https://github.com/Azure/azure-service-bus-java/issues/280","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUwMzYwNTUzNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/414,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUwNDg4NDA3MA==,ditto,504884070,414,NA,kaizimmerm,9153035,Kai Zimmermann,,NA,2019-06-24T06:59:08Z,2019-06-24T06:59:08Z,"@dguggemos thx for putting in the work. However, I think it will be hard to provide a fix if we cannot reproduce this with Ditto. Do you happen to be successful in that regard as well?

I will continue to reproduce this in Ditto so I am grateful for hints.

btw. did you use Basic or Standard SB plan for your test?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUwNDg4NDA3MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/414,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUwNTMxNDY5NQ==,ditto,505314695,414,NA,kaizimmerm,9153035,Kai Zimmermann,,NA,2019-06-25T07:01:36Z,2019-06-25T07:01:36Z,"@dguggemos @thjaeckle I fear I am running out of ideas how to reproduce this.

I ran Ditto 0.9.0-M2 with a local setup on my Laptop as well as in k8s on Azure over hours with connections to SB instances in West Europe both on Basic as well as Standard plan. 

I had use cases both with producers as well as consumers running on both sides, i.e. Ditto target+source as well as my two examples with [consumer](https://github.com/eclipse/ditto-examples/blob/master/azure/azure-servicebus-amqp10/src/main/java/org/eclipse/ditto/examples/azure/MessageConsumer.java) and [producer](https://github.com/eclipse/ditto-examples/blob/master/azure/azure-servicebus-amqp10/src/main/java/org/eclipse/ditto/examples/azure/MessageProducer.java).

Never any problems as described by you.

Pls let me know if you managed to reproduce this with Ditto and how.

Kai
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUwNTMxNDY5NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/414,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUwNzU5MjA0NQ==,ditto,507592045,414,NA,dguggemos,15028977,Dominik Guggemos,dominik.guggemos@bosch.io,NA,2019-07-02T09:13:11Z,2019-07-02T09:13:11Z,"@kaizimmerm I made some progress regarding this issue. I could not reproduce the problem, but I think I understand what happens now. For some reasons the existing AMQP session is unexpectedly closed by the Azure Service Bus, but the connection stays alive. And this is probably what the ""LinkTracker"" observes (a connection without any session/consumer/producer) and it closes this connection. This seem to happen randomly, I could not see any pattern. Any way, PR #434 handles the closing of the session and recreates it (and all associated consumers and producers).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUwNzU5MjA0NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/414,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUxNDE5NjA4Mw==,ditto,514196083,414,NA,dguggemos,15028977,Dominik Guggemos,dominik.guggemos@bosch.io,NA,2019-07-23T12:51:39Z,2019-07-23T12:51:39Z,The recovery of the sessions seems to work and no more issues have been reported since then.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUxNDE5NjA4Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/415,https://api.github.com/repos/eclipse-ditto/ditto/issues/415,ditto,448850530,415,Structure architecture by domain instead of technical structure,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,CLOSED,2019-05-27T13:10:01Z,2021-05-17T05:48:18Z,"Right now we have kind of a mixed architecture.

On top level we separate into:
- model
- services
- signals

below these three technical modules we separate into domain specific modules like
- policies
- things
- ...

for the services module it's even more weird.

* model
  * policies
  * ...
* services
  * policies
  * models
    * policies
  * ...
* ...


Wouldn't it be better to have the domain structure on top level and then structure the respective domains in their technical components?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/415/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/415,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5NjIxOTc2OA==,ditto,496219768,415,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-05-27T13:50:53Z,2019-05-27T13:50:53Z,"Hm, `json`, `model`, `protocol-adapter`, `signals` on top-level is not a technical module separation for me. Those are all modules which can be seen as API.
`services` however does not contain API (in the sense of Java API, of course there is API in form of HTTP API in there) which we would want to keep backward compatible.
Also, all sub-modules of `signals` share common dependencies which are defined in the `signals/pom.xml` - I think that would be harder to achieve when splitting on top-level for domains.

What benefits do you have in mind when changing the structure?
What is ""better"" then?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5NjIxOTc2OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/415,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5NjM5MjEwMA==,ditto,496392100,415,NA,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,NA,2019-05-28T07:07:06Z,2019-05-28T07:07:06Z,"For `json` and `protocal-adapter` I'm with you. It's something that can stand alone and does not belong to any service.

For `signals` I'm only partially with you.
I think something like [Command](https://github.com/eclipse/ditto/blob/master/signals/commands/base/src/main/java/org/eclipse/ditto/signals/commands/base/Command.java) should be specified in a separate module like it is right now. I'm not sure if signal is the best name for this, but I don't want to discuss about naming. Maybe we could think about a core module that does hold anything (maybe by sub modules) that is relevant for all services in ditto? But why is it helpful to define the API for a service like policies in a module outside of the policies service module? Couldn't be the signal module for policies a sub module of policies service?

What I would except is that each service of ditto provides all it needs as submodules. Right now the policies service is spread all over the repository.
This makes adding new services or removing/deprecating services more difficult as you have to search all over the repo for things that belong to the service.

This would also make the boundaries of modules more clear. For example why is ditto-model-enforces an API? Should this be used outside of the ditto service? For me this is part of the concierge.
We currently do enforcing for example in ThingSearch, too. Is this intended? Shouldn't be concierge the one service that is responsible for authorization?

Another module is ditto-model-base. There is for example an auth package which is for me an independent module: security.
This module security could contain all AuthenticationProviders and everything that is required for authentication and authorization.
To my understanding it then should be sufficient to include this module in the gateway (authentication) and in concierge (authorization). Maybe in connectivity too because its kind of an API Gateway aswell. But its not required in all services in my opinion.

So in one sentence what I think ""is better then"": I think this would lead to a less confusing architecture with less dependecies to other services, what will lead to more independent microservices with a clearly defined API per service in the end.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5NjM5MjEwMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/415,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5NjQwMTQ0Nw==,ditto,496401447,415,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-05-28T07:38:42Z,2019-05-28T07:38:42Z,"> But why is it helpful to define the API for a service like policies in a module outside of the policies service module?

It's not only the API for service-internals, but also for the Ditto Protocol and the (soon) to be added Java-client. Therefore it is helpful to separate between API and service.
That's the main point of why `model` and `signals` is on top-level.

What we experienced before applying that structure (before the initial Ditto code contribution) is that modules had cyclic dependencies all over the place. With the current structure the following dependency hierarchy is defined:
```
module(s)  |  referenced by
utils      <- json, model, signals, protocol-adapter, services
json       <- model
model      <- signals
signals    <- protocol-adapter
utils, json, model, signals, protocol-adapter <- services
```
So anything in `model` isn't allowed to reference something in `signals`, `protocol-adapter` or `services`.
Anything in `signals` isn't allowed to reference something in `protocol-adapter` or `services`.
And so on..

> This makes adding new services or removing/deprecating services more difficult as you have to search all over the repo for things that belong to the service.

Yes, but it also adds the required structure in order not to completely mess up dependencies.

>  For example why is ditto-model-enforces an API? Should this be used outside of the ditto service?
Because it also can be used as API, e.g. retrieve the policy from the backend and enforce the policy locally before talking to the service.

By having the enforcement as module the complete policy enforcement could be used standalone from the Ditto backend.

> We currently do enforcing for example in ThingSearch, too. Is this intended?

ThingSearch does enforcement on database query level, this is intended, yes. I don't think that it does the same as concierge, it may however need the same information from policies.

> Another module is ditto-model-base. There is for example an auth package which is for me an independent module: security.

Sure, that's a good idea.<br/>
As this would be used in 3 of 6 Ditto services I would also see that as a module built for re-use, but probably not in `models` but in a submodule of `services`.

> I think this would lead to a less confusing architecture with less dependecies to other services, what will lead to more independent microservices with a clearly defined API per service in the end.

I think it's important to define the API of the microservices (which currently is basically JSON commands, responses and events) as separate `model` and really treat those as API. With that approach we seldom had issues with breaking the API and/or JSON format in the past. I'm not convinced that this will be better when we move the models closer to the service implementation.

I agree that we should avoid inter-service dependencies - if services need common functionality, we should extract a new commonly used module.

I however don't see that we have a confusing architecture (at least not on modules level ;) ). Maybe it would help to have a picture in place?

As such a discussion is right to be done before a 1.0 release we should have it now, yes. Could you draw a diagram of how you would ""cut"" the modules architecture including inter-module dependencies?
I think that would help in seeing if that reduces complexity or not.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5NjQwMTQ0Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/415,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5NjQwNjkwMQ==,ditto,496406901,415,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-05-28T07:56:07Z,2019-05-28T07:56:07Z,"That is the current ""dependency matrix"" (generated by IntelliJ) showing that at least we don't have any cycles in it :) and the modules at the bottom are used by the most other modules.
![image](https://user-images.githubusercontent.com/1331526/58460579-435a9780-812e-11e9-89cd-a9b82231cc95.png)
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5NjQwNjkwMQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/415,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5NjQxMjk5NQ==,ditto,496412995,415,NA,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,NA,2019-05-28T08:14:49Z,2019-05-28T08:14:49Z,Thank you for the detailed feeback. I will provide such a diagram the next days.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5NjQxMjk5NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/415,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5NjQxNjk0MA==,ditto,496416940,415,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-05-28T08:26:36Z,2019-05-28T08:26:36Z,"That diagram probably doesn't help (all ditto modules with their dependencies to each other), hotspots however can be seen :wink: 
![dependency-graph](https://user-images.githubusercontent.com/1331526/58462721-bebe4800-8132-11e9-98a3-58ee33bb79c0.png)

Gathered by running:
```
mvn com.github.ferstl:depgraph-maven-plugin:aggregate -Dscope=runtime -DcreateImage=true -DreduceEdges=false ""-Dincludes=org.eclipse.ditto*:*"" ""-Dexcludes=org.eclipse.ditto:ditto-services-legal*:*""
```
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5NjQxNjk0MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/415,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5NjQxODA2NA==,ditto,496418064,415,NA,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,NA,2019-05-28T08:30:02Z,2019-05-28T08:30:02Z,"Maybe I can reduce the number of modules and/or services. We'll see :) I'll investigate this.

> What we experienced before applying that structure (before the initial Ditto code contribution) is that modules had cyclic dependencies all over the place.

This could be an indicator that services are too tightly coupled and should not be two different services.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5NjQxODA2NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/415,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg0MjAwOTM5OQ==,ditto,842009399,415,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-05-17T05:48:11Z,2021-05-17T05:48:11Z,"This was done as part of Ditto 2.0
Thx again @Yannic92 for pulling that off 👍 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg0MjAwOTM5OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/418,https://api.github.com/repos/eclipse-ditto/ditto/issues/418,ditto,451417374,418,Kafka metrics missing for authentication/authorization problems,ffendt,2587759,Florian Fendt,,OPEN,2019-06-03T10:54:31Z,2019-06-03T10:54:31Z,"Hi there,

when playing around with Kafka connections I found a missing metric entry when having authentication problems with the used Kafka service provider.

There are success metrics for the categories dispatched, filtered and mapped but there is missing a failure on the published category.

When looking into the logs if found out that [KafkaPublisherActor](https://github.com/eclipse/ditto/blob/master/services/connectivity/messaging/src/main/java/org/eclipse/ditto/services/connectivity/messaging/kafka/KafkaPublisherActor.java) logs a message when it encounters such problems. However, it does not look as if it would be easy to add the correct metric since the called method does not know the context in which an error occured. It seems as if we would need to rewrite (and enhance) some functionality that is currently part of the alpakka kafka library.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/418/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/419,https://api.github.com/repos/eclipse-ditto/ditto/issues/419,ditto,452359171,419,401 Unauthorized when Operating Ditto,aaron0609,49503795,,,CLOSED,2019-06-05T07:48:25Z,2022-11-11T17:20:31Z,"When testing devops commands in 0.9.0-m2, according to the document https://www.eclipse.org/ditto/installation-operating.html#devops-commands, I got the following error message when retrieving log levels:

/opt/ditto # wget -q -O - http://10.0.0.74:8080/devops/logging
wget: server returned error: HTTP/1.1 401 Unauthorized

And I tried the nginx user/password but doesn't work","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/419/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/419,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5OTAzOTUxMA==,ditto,499039510,419,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-06-05T11:06:25Z,2019-06-05T11:06:25Z,"Hi there.

Ah, sorry - we still have the user/password for the ""devops"" resource not documented (only in the configuration files).
So please use:
* user: devops
* password: foobar","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDQ5OTAzOTUxMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/419,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85OMwYz,ditto,1311966771,419,NA,Felice-Copp56,55912466,Felice Coppola,,NA,2022-11-11T17:20:13Z,2022-11-11T17:20:13Z,"Hi, I have same problem when try to connect in the ditto Explorer Ui connections sections. I have tried devops foobar credentials
@thjaeckle ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85OMwYz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/424,https://api.github.com/repos/eclipse-ditto/ditto/issues/424,ditto,455076267,424,Broken link at Open Eclipse Ditto Feature web page.,andrew-from-pretoria,966067,andrew,,CLOSED,2019-06-12T08:24:32Z,2019-07-10T08:49:03Z,"Broken link at Open Eclipse Ditto Feature web page.

Action:
Open Eclipse Ditto Feature page ( https://www.eclipse.org/ditto/basic-feature.html )

Scroll down to ""Mapping Vorto function block elements""

Follow the link given in ""A Vorto function block consists of different sections defining state and capabilities of a device."" ( https://www.eclipse.org/vorto/documentation/appendix/functionblock-dsl-reference.html#function-block-dsl-semantics )

Result:
New web page opens with message ""404 File not found"".
 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/424/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/424,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUwMTE3Njg0NQ==,ditto,501176845,424,NA,dguggemos,15028977,Dominik Guggemos,dominik.guggemos@bosch.io,NA,2019-06-12T08:39:17Z,2019-06-12T08:39:17Z,"Hi @andrew-from-pretoria,
thanks for reporting, we'll fix it.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUwMTE3Njg0NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/424,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUwOTk3MjAxMA==,ditto,509972010,424,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-07-10T08:49:02Z,2019-07-10T08:49:02Z,Fixed with #441 - removed deep links to Vorto,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUwOTk3MjAxMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/431,https://api.github.com/repos/eclipse-ditto/ditto/issues/431,ditto,459775962,431,"Broken link at ""Connecting Eclipse Ditto to Eclipse Hono""",andrew-from-pretoria,966067,andrew,,CLOSED,2019-06-24T09:07:16Z,2019-07-10T08:48:47Z,"Description:
Broken link to ""Hono telemetry"" on page ""Connecting Eclipse Ditto to Eclipse Hono"" 

Action:
1. Open https://www.eclipse.org/ditto/2018-05-02-connecting-ditto-hono.html
2.  Scroll to second paragraph:  ""By doing so it is for example possible to receive Hono telemetry messages""
3. Click on link ""...Hono telemetry""  < https://www.eclipse.org/hono/api/telemetry-api/ >

Expected: 
Description of Hono telemetry messages, particularly about “Northbound Operations"".

Actual result:
Error 404, page not found.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/431/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/431,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUwOTk3MTkxOA==,ditto,509971918,431,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-07-10T08:48:47Z,2019-07-10T08:48:47Z,Fixed with #441 - removed deep links to Hono,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUwOTk3MTkxOA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/439,https://api.github.com/repos/eclipse-ditto/ditto/issues/439,ditto,465703520,439,ConfigWithFallback breaks contract of AbstractConfigValue.withFallback,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,OPEN,2019-07-09T10:34:05Z,2019-07-09T10:34:05Z,"Reproducer:
```java
ConfigFactory.empty()
        .withFallback(
                ConfigWithFallback.newInstance(
                        ConfigFactory.empty(), ""x"", new KnownConfigValue[0]));
```

Expected behavior: An empty config object.

Actual behavior: ClassCastException thrown.
```
java.lang.ClassCastException: org.eclipse.ditto.services.utils.config.ConfigWithFallback cannot be cast to com.typesafe.config.impl.MergeableValue

	at com.typesafe.config.impl.AbstractConfigValue.withFallback(AbstractConfigValue.java:274)
	at com.typesafe.config.impl.AbstractConfigObject.withFallback(AbstractConfigObject.java:139)
	at com.typesafe.config.impl.SimpleConfig.withFallback(SimpleConfig.java:569)
	at com.typesafe.config.impl.SimpleConfig.withFallback(SimpleConfig.java:41)
```

Workaround: Render the `ConfigWithFallback` and parse it again.

Proposal: Move fallback values from Java code to `.conf` files for better documentation; `ConfigWithFallback` would become unnecessary.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/439/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/443,https://api.github.com/repos/eclipse-ditto/ditto/issues/443,ditto,468165654,443,'The supplied authentication is invalid' with custom devops user,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,CLOSED,2019-07-15T14:37:28Z,2019-10-09T06:30:55Z,"I've setup a Ditto-Instance as in the [deployment/docker](https://github.com/eclipse/ditto/tree/master/deployment/docker) part of the project and changed the devops password to a custom one which I hashed using `openssl passwd --quiet` and updated in `nginx-devops.htpasswd`.

Unfortunately I get the error message `The supplied authentication is invalid` this way when trying to access any `/devops` resource. When using a random username and/or password it returns a ""401 Unauthorized"".

My nginx.conf is as follows

```
   # devops
    location /devops {
      include nginx-cors.conf;

      auth_basic                    ""Authentication required"";
      auth_basic_user_file          nginx-devops.htpasswd;

      proxy_pass                    http://gateway:8080/devops;
      proxy_http_version            1.1;
      proxy_set_header              Host                $http_host;
      proxy_set_header              X-Real-IP           $remote_addr;
      proxy_set_header              X-Forwarded-For     $proxy_add_x_forwarded_for;
      proxy_set_header              X-Forwarded-User    $remote_user;
    }
```

EDIT:

Ok, well, I got closer to an answer. I took the nginx-devops config from the subfolder sandbox because I was searching for a way to work with the devops API and couldn't find something in the docs. Apparently I have to at least configure the same passwort in nginx as well as in the gateway-container through the environment variable `DEVOPS_PASSWORD`. 

I'm wondering if there is a security flaw to only use the gateways-service authorization without nginx?

Is there a reason why this is documented nowhere?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/443/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/443,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUxMTQ0ODAxNg==,ditto,511448016,443,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-07-15T15:23:48Z,2019-07-15T15:23:48Z,"Hi Alexander.

> I'm wondering if there is a security flaw to only use the gateways-service authorization without nginx?

Not at all - good question why we added the `nginx-devops.htpasswd` on the `/devops` route in nginx. 
Should not be necessary to include that one, sorry.

> Is there a reason why this is documented nowhere?

No good reason at all. ;)
The docker-compose of the sandbox is what it is: a sandbox setup which is not necessarily a perfect fit for usage in production.
And the documentation is also what it is: an OpenSource maintained documentation ;) - we will happily  accept PullRequests improving the doc.

We also use nginx in our productive environment in front of the Ditto gateway, but the configuration of that one is of course adjusted to the needs of our commercial offering. 
To answer your question: we also only configure the `DEVOPS_PASSWORD` env variable of the gateway.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUxMTQ0ODAxNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/447,https://api.github.com/repos/eclipse-ditto/ditto/issues/447,ditto,470124983,447,ERROR message pattern bug,liuhu,1286384,Hugo Liu,mail.liuhu@gmail.com,CLOSED,2019-07-19T03:54:22Z,2019-07-19T06:16:50Z,"In `ImmutableThingFromCopyBuilder` class file , at `tryToParseModified` method.

``` java 
private static Instant tryToParseModified(final CharSequence dateTime) {
        try {
            return Instant.parse(dateTime);
        } catch (final DateTimeParseException e) {
            final String msgPattern =""The JSON object's field <{0>' is not in ISO-8601 format as expected!"";
            throw JsonParseException.newBuilder()
                    .message(MessageFormat.format(msgPattern, Thing.JsonFields.MODIFIED.getPointer()))
                    .cause(e)
                    .build();
        }
    }
```
The message pattern `The JSON object's field <{0>' is not in ISO-8601` is wrong,   it is missing `}` 
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/447/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/447,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUxMzEwMzI3Nw==,ditto,513103277,447,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-07-19T06:04:52Z,2019-07-19T06:04:52Z,"Hi.
You mean this line?
https://github.com/eclipse/ditto/blob/master/model/things/src/main/java/org/eclipse/ditto/model/things/ImmutableThingFromCopyBuilder.java#L117

Looks good to me on master and in Ditto 0.9.0.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUxMzEwMzI3Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/447,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUxMzEwNDk1OQ==,ditto,513104959,447,NA,liuhu,1286384,Hugo Liu,mail.liuhu@gmail.com,NA,2019-07-19T06:11:54Z,2019-07-19T06:11:54Z,Sorry. It is my mistake. I forgot to update local source code.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUxMzEwNDk1OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/448,https://api.github.com/repos/eclipse-ditto/ditto/issues/448,ditto,471677254,448,OpenConnection on open connection always times out,dguggemos,15028977,Dominik Guggemos,dominik.guggemos@bosch.io,CLOSED,2019-07-23T12:48:10Z,2019-09-27T13:26:43Z,OpenConnection command is not handled correctly when connection is already open. We should probably return a 200 OK if the connection is open.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/448/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/448,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNTg2OTQ4Nw==,ditto,535869487,448,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-09-27T09:38:48Z,2019-09-27T09:38:48Z,"This should be fixed already, right @dguggemos ?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNTg2OTQ4Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/448,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNTkzODI1Mg==,ditto,535938252,448,NA,dguggemos,15028977,Dominik Guggemos,dominik.guggemos@bosch.io,NA,2019-09-27T13:26:43Z,2019-09-27T13:26:43Z,"Yep, fixed.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNTkzODI1Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/450,https://api.github.com/repos/eclipse-ditto/ditto/issues/450,ditto,472272719,450,MQTT thread leaks / pollution,ffendt,2587759,Florian Fendt,,CLOSED,2019-07-24T13:06:14Z,2019-09-19T09:28:35Z,"With the introduction of #442 (Reconnecting feature for created connections), we can now observe thread leaks produced by our MQTT connections every time a connection to a remote system fails.

It looks like the used [akka/alpakka](https://github.com/akka/alpakka) mqtt client will try to disconnect / close the connection with its [eclipse/paho.mqtt.java](https://github.com/eclipse/paho.mqtt.java) client. The paho client will create several threads in which it will wait e.g. on the successful send of a disconnect message. The threads however will wait forever and stay alive in the JVM. Since we have no direct access to the client, we should start by removing akka/alpakka to have more control over what happens.

Since connections to MQTT brokers are defined by the user, we have to be highly flexible and need a client that will work well with disconnects, reconnects and use as few threads as possible.
As we can observe remaining threads if a disconnect or close is called on a disconnected / disconnecting paho client it might make sense to have a look at another client like e.g. [hivemq/hivemq-mqtt-client](https://github.com/hivemq/hivemq-mqtt-client). It would also provide an async and a reactive API which would fit much better into our code base.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/450/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/450,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUyMzkyMzYwNQ==,ditto,523923605,450,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-08-22T14:11:17Z,2019-08-22T14:11:17Z,"Created CQs for new hivemqtt-mqtt-client dependencies:
https://dev.eclipse.org/ipzilla/show_bug.cgi?id=20711
https://dev.eclipse.org/ipzilla/show_bug.cgi?id=20712
https://dev.eclipse.org/ipzilla/show_bug.cgi?id=20714
https://dev.eclipse.org/ipzilla/show_bug.cgi?id=20715
https://dev.eclipse.org/ipzilla/show_bug.cgi?id=20716
https://dev.eclipse.org/ipzilla/show_bug.cgi?id=20717","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUyMzkyMzYwNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/450,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUyNzc3NTIxNQ==,ditto,527775215,450,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-09-04T07:16:06Z,2019-09-04T07:16:06Z,All CQs were approved.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUyNzc3NTIxNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/450,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzMzA0ODIyOQ==,ditto,533048229,450,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-09-19T09:28:26Z,2019-09-19T09:28:26Z,Resolved by #487 ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzMzA0ODIyOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/458,https://api.github.com/repos/eclipse-ditto/ditto/issues/458,ditto,473901391,458,SmartCoffeeApp.js:456 Uncaught TypeError: Cannot read property 'thing-id' of undefined     at DittoWebSocket.reply (SmartCoffeeApp.js:456)     at SmartCoffeeApp.onTurnOnWaterTankMessage (SmartCoffeeApp.js:273)     at HTMLButtonElement.$.click (SmartCoffeeApp.js:105)     at HTMLButtonElement.dispatch (jquery-3.2.1.min.js:3)     at HTMLButtonElement.q.handle (jquery-3.2.1.min.js:3),SaminaZahidFulda,38786093,,,CLOSED,2019-07-29T07:47:25Z,2019-07-29T13:24:14Z,"How can I create thing with ditto WebSocket?
SmartCoffeeApp.js:456 Uncaught TypeError: Cannot read property 'thing-id' of undefined
    at DittoWebSocket.reply (SmartCoffeeApp.js:456)
    at SmartCoffeeApp.onTurnOnWaterTankMessage (SmartCoffeeApp.js:273)
    at HTMLButtonElement.$.click (SmartCoffeeApp.js:105)
    at HTMLButtonElement.dispatch (jquery-3.2.1.min.js:3)
    at HTMLButtonElement.q.handle (jquery-3.2.1.min.js:3)
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/458/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/458,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUxNTg4NDY1OQ==,ditto,515884659,458,NA,ffendt,2587759,Florian Fendt,,NA,2019-07-29T07:50:09Z,2019-07-29T07:50:09Z,"Hi @SaminaZahidFulda 

it would be nice if you could open this issue in the [ditto-examples](https://github.com/eclipse/ditto-examples) repository as this seems to be an issue with the example and not with Ditto itself.

Best regards
Florian","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUxNTg4NDY1OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/458,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUxNTg4NDkyMA==,ditto,515884920,458,NA,SaminaZahidFulda,38786093,,,NA,2019-07-29T07:50:57Z,2019-07-29T07:50:57Z,I am trying to create Thing with WebSocket. But getting error.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUxNTg4NDkyMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/458,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUxNTg4NTY4Ng==,ditto,515885686,458,NA,SaminaZahidFulda,38786093,,,NA,2019-07-29T07:53:27Z,2019-07-29T07:53:27Z,"
    onMessage(message) {
      
        const data1 =  {
            ""topic"": ""twin.othermo.de/:1aa1e46e-c1e9-45a2-a292-1571f8f0a210/things/live/commands/modify"",
            ""headers"": {
                ""correlation-id"": ""2215ea11-dbe5-413e-a783-24ec9c9f9619"",
                ""response-required"": true,
                ""content-type"": ""application/json"",
                ""auth-subjects"": [
                    ""nginx:demo1""
                ],
                ""version"": 2
            },
            ""path"": ""/"",
            ""value"": {
                ""accelerometer"": {
                    ""properties"": {
                        ""x"": 3.141,
                        ""y"": 2.718,
                        ""z"": 1,
                        ""unit"": ""g""
                    }
                }
            }
        }
            const data = JSON.stringify(data1);
        this.logToConsole(`received: ${data}`);
        this.logReceiveToUI(data);

            try {
                const jsonMessage = JSON.parse(data);
                this.onJsonMessage(jsonMessage);
            } catch (err) {
                this.logToConsole(`error while handling message: ${err}`);
            }
        
    }
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUxNTg4NTY4Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/458,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUxNTg5MzQyMg==,ditto,515893422,458,NA,ffendt,2587759,Florian Fendt,,NA,2019-07-29T08:17:50Z,2019-07-29T08:17:50Z,"Yes, I see that you get an error and you already posted it:
```
SmartCoffeeApp.js:456 Uncaught TypeError: Cannot read property 'thing-id' of undefined
  at DittoWebSocket.reply (SmartCoffeeApp.js:456)
  at SmartCoffeeApp.onTurnOnWaterTankMessage (SmartCoffeeApp.js:273)
  at HTMLButtonElement.$.click (SmartCoffeeApp.js:105)
  at HTMLButtonElement.dispatch (jquery-3.2.1.min.js:3)
  at HTMLButtonElement.q.handle (jquery-3.2.1.min.js:3)
```

However, this is a javascript error in an example in ditto-example, so please post your issue in the ditto-examples repository. Also, your second code snippet does not seem to have any relation to your error log. Please add some more information on how this happened (and maybe a small reproducer) when opening an issue in the ditto-examples repository.

Thanks and regards
Florian","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUxNTg5MzQyMg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/460,https://api.github.com/repos/eclipse-ditto/ditto/issues/460,ditto,475139420,460,Add to documentation that AMQP connection target support topics as well,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2019-07-31T13:17:30Z,2019-10-30T06:43:19Z,"Ditto supports `targets` of connections to be either queues (being the default) or topics:
https://github.com/eclipse/ditto/blob/master/services/connectivity/messaging/src/main/java/org/eclipse/ditto/services/connectivity/messaging/amqp/AmqpTarget.java#L44

We should add documentation for that and explain differences.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/460/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/461,https://api.github.com/repos/eclipse-ditto/ditto/issues/461,ditto,475716470,461,JSON Policy Structure Proposed Revisions,dlouiscastillo,3791159,David Castillo,dlouiscastillo@gmail.com,CLOSED,2019-08-01T14:29:13Z,2019-09-27T09:38:21Z,"In working with the Policies Collection, I found the JSON structure to not feel natural and inconsistent with all of the other JSON document types.

Rather than use key(name)/value pairs, it uses the meaningful data as the key name making it difficult to parse with standard packages such as JMESPath and JSONata.

For example, rather than use a keyname of subjectId with a value of the actual subject data, it uses the subjectId as the keyname and it's type as the value. 

Another example, is used in all three resources Thing, Policy and Message where the path is used as the keyname and the permissions as the value.  

In both of the cases listed, you can't use Javascript dot syntax to Get or Set the data. 

Another suggestion is to use arrays of objects for entries, subjects, policy, thing and message enabling the submission of multiple entries each with a different path for instance.

I make these suggestions only with the intention of reducing unnecessary friction for the developer and playing well in the larger ecosystem.

I've included a proposed sample document for review.

David 

[ThingPolicyProposal.txt](https://github.com/eclipse/ditto/files/3457195/ThingPolicyProposal.txt)

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/461/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/461,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUxNzYwNjg1Nw==,ditto,517606857,461,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-08-02T08:18:20Z,2019-08-02T08:18:20Z,"Hi there.
Thanks for your interest in this project and feedback on such a crucial feature of Ditto.

When we designed the JSON format we decided on purpose to only include arrays at the ""leaves"" (e.g. for `grant` and `revoke` fields containing arbitrary strings of ""permissions"").
The main reason is that parts of the policy JSON document may be updated/queried partially via the HTTP API, where JSON arrays would not feel very natural (you'd have to use index values of the array in order to address e.g. policy entries instead of a meaningful key).

So e.g. (based in your proposal example) in order to retrieve the permissions on ""features"" level of ""thing"" of the `DEFAULT` policy entry role the HTTP API currently is:
`GET /api/2/policies/namespace:policy-name/entries/DEFAULT/resources/thing:/features`
In your proposal it would be: 
`GET /api/2/policies/namespace:policy-name/entries/0/resources/thing/1`

Not very understandable from the outside. And what happens if the order of the arrays change, e.g. because a new entry is added at the position 0? Then existing code using array identifiers will work on false assumptions.

I see your concerns, I personally don't know JMESPath and JSONata, so that didn't influence the design.

I fear using arrays as schema of Ditto's `Thing` or `Policy` entity is something we will always be skeptical about due to the fact that they would have to be addressed via array index at HTTP API level.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUxNzYwNjg1Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/461,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUxNzc0MTE0OA==,ditto,517741148,461,NA,dlouiscastillo,3791159,David Castillo,dlouiscastillo@gmail.com,NA,2019-08-02T15:21:07Z,2019-08-02T15:21:07Z,"Thanks for the quick response to my query. 

While I fully appreciate and understand your explanation about having to know and use an index values from array in an api, I'm not suggesting that you change the API. Nor am I suggesting that a developer needs to represent the data structure in code in the same manner as the API or the JSON message sent over the wire. 

All I'm suggesting is that by conforming to a keyname/value structure in JSON over the wire, it is far easier to parse and Get and Set the relevant data.

For example, If I want to set the path for a thing, I should be able to use dot syntax to do so.
policy.admin.resources.thing.path = ""/features"";
In this way, my intention is to set the path for the admin role for the thing to ""/features"";

If I want to retrieve the path, I should also be able use dot syntax to do so,
var mypath = policy.admin.resources.thing.path;

In the current schema, where there is no path property and the path info is part of the key, I can't use dot syntax'

For example,
policy.admin.resources..thing:/features = ...

Oh, but I can't use "":"" and ""/"" in dot syntax so maybe I could try this

policy.admin.resources.['thing:/']..

we'll, while it may not look pretty, it does work as far as retrieving the data, but what if I want to set it.

policy.admin.resources['thing:/features'] = ...
That also works,  while it doesn't replace the existing path, it instead adds a second key.

In any case, this is the only API that presents this kind of problem that I have discovered in the project.

Call me a lazy developer if you like, but I've gotten use to working with JSON as keyname/value pairs, and dot syntax and I much prefer it.      
 
David
 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUxNzc0MTE0OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/461,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUxNzc0NTI3NQ==,ditto,517745275,461,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-08-02T15:32:11Z,2019-08-02T15:32:11Z,"Ah, but Ditto's ""over-the wire"" JSON format is the same as the HTTP API structure (which is one of the fundamental concept, e.g. in order to enable partial updates and partial queries at the HTTP API), so the JSON format is the API.

I agree that is is not very helpful in Javascript. I also like using the dot-notation wherever possible when I need to code in JS :)

Sorry that I have to state out that the format won't change any time soon - maybe for an API version ""3"", which we have no concrete plans about yet.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUxNzc0NTI3NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/461,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUxNzc1ODMzNg==,ditto,517758336,461,NA,dlouiscastillo,3791159,David Castillo,dlouiscastillo@gmail.com,NA,2019-08-02T16:09:59Z,2019-08-02T16:09:59Z,"Understood, I didn't expect it to change on a dime. I'm able to work around it with a little pre-processing anyway. 

It just seemed reasonable to centralize the pre-processing on server-side before the message is sent out over the wire and then pre-process it server-side when messages, partial or otherwise come back.

Then the rest of us hopefully large numbers of developers some day won't have to reinvent the wheel every time.

Cheers, 

david



","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUxNzc1ODMzNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/461,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNTg2OTMzOA==,ditto,535869338,461,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-09-27T09:38:21Z,2019-09-27T09:38:21Z,closing this as there are currently no plans to change the policies structure/API,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNTg2OTMzOA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/467,https://api.github.com/repos/eclipse-ditto/ditto/issues/467,ditto,478413193,467,Document eventual consistency of the things-search,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2019-08-08T11:31:26Z,2019-10-30T06:43:20Z,"Is still missing from the documentation.
It is not documented that the search only guarantees eventual consistency.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/467/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/473,https://api.github.com/repos/eclipse-ditto/ditto/issues/473,ditto,483340750,473,EC Private Key rejected in MQTT-Connector,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,OPEN,2019-08-21T10:36:25Z,2019-08-21T13:18:15Z,"When setting up an MQTT-Connector over the HTTP-REST API and devops commands ditto responds with a 504 and the following message.

 `/credentials/key: bad format. Expect PEM-encoded PKCS #8 data specified by RFC-7468 starting with '-----BEGIN PRIVATE KEY-----'`

The key is working in other scenarios and is indeed in the compatibility PKCS8 form as EC key. The used curve is secp384r1.

How to reproduce
---

1. Setup ditto 0.9.0
2. Generate an ec key e.g. with `easyrsa --use-algo=ec build-client-full ditto`* (if supplying any certs the error should occur, although the certs are not related to the key)
2. Issue a devops-command for testing the mqtt connection

*or alternatively with

```
openssl genpkey -algorithm EC \
    -pkeyopt ec_paramgen_curve:P-384 \
    -pkeyopt ec_param_enc:named_curve |
  openssl pkcs8 -topk8 -nocrypt -outform PEM > p384-private-key.pem
```

What happens
---

The server rejects the valid PEM PKCS8 formatted key as invalid formatted, if it's an EC-P key.

What should happen
---

Either

a. The server should be able to handle any key algorithm
b. The documentation should limit the algorithms and give information about this","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/473/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/473,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUyMzQ0ODMxNA==,ditto,523448314,473,NA,ffendt,2587759,Florian Fendt,,NA,2019-08-21T13:06:33Z,2019-08-21T13:06:33Z,"Hi @w4tsn,

Thanks for this very detailed issue. It's a nice catch and I was able to reproduce this issue thanks to your description.

With a bit of googling I found out that docker client happened to have a similar issue which [was fixed](https://github.com/spotify/docker-client/pull/1033/files) by using also a `KeyFactory` for EC.

In ditto's code base we would need to test multiple key factories in [SSLContextCreator#233](https://github.com/eclipse/ditto/blob/master/services/connectivity/messaging/src/main/java/org/eclipse/ditto/services/connectivity/messaging/internal/SSLContextCreator.java#L233), (at least RSA and EC, probably all of the defined ones [in the StandardNames docs](https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#KeyFactory)).

We would be very happy to accept a PR for this one.

Best regards,
Florian","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUyMzQ0ODMxNA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/473,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUyMzQ1MjU4Mg==,ditto,523452582,473,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2019-08-21T13:18:15Z,2019-08-21T13:18:15Z,"Happy to help! 

Thanks for the explanation, where the problem lies and how to fix it. I'll have to see for myself if the issue is urgent enough for me to send a PR.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUyMzQ1MjU4Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/474,https://api.github.com/repos/eclipse-ditto/ditto/issues/474,ditto,483408296,474,MQTT-Connector fails to connect if sources array is provided,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,CLOSED,2019-08-21T13:03:37Z,2019-12-13T08:47:13Z,"When running a PiggybackCommand to testConnection of a mqtt-connection with a sources array provided the connection does not work. Providing only the targets object however works.

The broker is configured with let's encrypt certificates and accepts connections over tcp. The client has granted readwrite on topic path `ditto/#`. Also testing to grant the ditto client readwrite on any topic.

How to reproduce
---

1. Setup Ditto 0.9.0
2. Setup a mosquitto broker with certificates for ditto user and configure ACL
3. Run piggybackCommand connectivity.command.testConnection with sources array provided

Use a config like this [mqtt-connection-sources-failure-config.txt](https://github.com/eclipse/ditto/files/3525398/mqtt-connection-sources-failure-config.txt) with the following as important bits:

```
""sources"": [
    {
        ""addresses"": [
            ""ditto/#""
        ],
        ""authorizationContext"": [
            ""ditto:inbound-auth-subject""
        ],
        ""qos"": 0,
        ""filters"": []
    }
],
""targets"": [
    {
        ""address"": ""ditto/{{ thing:id }}"",
        ""topics"": [
            ""_/_/things/twin/events"",
            ""_/_/things/live/messages""
        ],
        ""authorizationContext"": [
            ""ditto:outbound-auth-subject""
        ],
        ""qos"": 0
    }
]
```

What happens
---

The command returns

```json
{
    ""?"": {
        ""?"": {
            ""type"": ""devops.responses:errorResponse"",
            ""status"": 504,
            ""serviceName"": null,
            ""instance"": null,
            ""payload"": {
                ""status"": 504,
                ""error"": ""connectivity:connection.failed"",
                ""message"": ""The Connection with ID 'my-broker' failed to connect."",
                ""description"": ""Cause: Connection reset""
            }
        }
    }
}
```

whenever a sources array is provided. It does not matter if a `targets ` array is provided or not. If only providing the `targets` array however the connection works showing the connection is working in principle.

Following some logs that I get. First of both arrays provided, then only with the `sources` array.

[mqtt-connection-sources-failure.txt](https://github.com/eclipse/ditto/files/3525418/mqtt-connection-sources-failure.txt)
[mqtt-connection-sources-failure2.txt](https://github.com/eclipse/ditto/files/3525419/mqtt-connection-sources-failure2.txt)

What should happen
---

The connection should work for the configured sources when configured following the [documentation](https://www.eclipse.org/ditto/connectivity-protocol-bindings-mqtt.html).

About Environment
---

Mosquitto Broker with certificate based authentication over Port 8883/tcp and ACL configured. `readwrite` to user `ditto` and topic `ditto/#`.

The client cert is RSA 4096 bit.

The server configuration is like this:
[mosquitto-broker-config.txt](https://github.com/eclipse/ditto/files/3535255/mosquitto-broker-config.txt)
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/474/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/474,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUyNDI1MDIzNQ==,ditto,524250235,474,NA,dguggemos,15028977,Dominik Guggemos,dominik.guggemos@bosch.io,NA,2019-08-23T09:45:07Z,2019-08-23T09:45:07Z,"Hi @w4tsn, thanks for reporting! In general consuming messages (having one or more sources in your connection) from an MQTT broker works fine. So I assume this is some problem with your specific setup/broker. Which broker did you use in your tests? Unfortunately the only useful information in the Ditto logs is `<Connection lost (32109) - java.net.SocketException: Connection reset>`. Probably the remote side closed the connection for some reason. Does it work with simple authentication (username/pasword)? I will also try to reproduce this on my machine.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUyNDI1MDIzNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/474,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUyNDM2NzIyNw==,ditto,524367227,474,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2019-08-23T15:52:50Z,2019-08-23T15:52:50Z,"Unfortunately I cannot test password authentication in my setup since it is restricted by policies. I added a mosquitto broker configuration though.

Also strangely the publisher seems to work, so at least this part connects successfully. I'm also able to connect to the broker with the ditto user certificates from another client and subsribe to the ditto/# topic.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUyNDM2NzIyNw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/474,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUyNDc3MDg4OQ==,ditto,524770889,474,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2019-08-26T08:29:04Z,2019-08-26T08:29:04Z,"Ok, after some more testing it works and here are my findings as well as the solution in my case:

I tried cert-less auth against `test.mosquitto.org:1883` which worked. 

My problem was that I used the `tcp://` protocol with certificates. I'd have to use the `ssl://` instead of course. Hence the error `connection reset`.

The question remains to me **why then is it working when a targets array is provided only?**. This gives me a feeling like ""how and why did it work anyway?"". Or let me put it this way: should this ""work""?

A way to avoid this ambiguity is to infer the protocol from the request e.g. using `ssl://` when credentials are provided (and cert-type) and `tcp://` otherwise. Of course it should still accept a custom protocol. For downwards compatibility the uri string should be checked (what it already is) and if the protocol is not specified infer instead of sending back an error.

I also think there should be some more about this in [the docs at uri part](https://www.eclipse.org/ditto/basic-connections.html), that highlights the available protocols and in what context they should be used. Currently the only example is with `amqps://` and further information is only available as error-response from the ditto POST command.

What do you think?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUyNDc3MDg4OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/474,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUyNTczMDgxNQ==,ditto,525730815,474,NA,dguggemos,15028977,Dominik Guggemos,dominik.guggemos@bosch.io,NA,2019-08-28T12:51:18Z,2019-08-28T12:51:18Z,"@w4tsn thanks for testing and sharing your findings. I also think that using `tcp://` together with certificates should result in an error when creating the connection. I cannot tell why this works for 'target only' connection. I will have a look into this...
And you are right that the docs need some improvements here. We are working on the MQTT integration anyway, so we will probably take care of this with #450.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUyNTczMDgxNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/474,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNTg2ODgwNQ==,ditto,535868805,474,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-09-27T09:36:45Z,2019-09-27T09:36:45Z,@dguggemos do we have that covered in #450 and may we close this issue?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNTg2ODgwNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/474,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNTk3OTMzNw==,ditto,535979337,474,NA,dguggemos,15028977,Dominik Guggemos,dominik.guggemos@bosch.io,NA,2019-09-27T15:07:15Z,2019-09-27T15:07:15Z,"I adjusted the validation of the connection to enforce a secure scheme if certificates are provided.
The docs part is still missing.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNTk3OTMzNw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/474,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU2NTM1NDc2Ng==,ditto,565354766,474,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-12-13T08:47:13Z,2019-12-13T08:47:13Z,"as far as I have understood, this is resolved","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU2NTM1NDc2Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/476,https://api.github.com/repos/eclipse-ditto/ditto/issues/476,ditto,485215268,476,Provide a proper way for error responses to CleanupPersistence commands,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,OPEN,2019-08-26T12:39:31Z,2019-08-26T12:42:10Z,"PR #475 revealed that there were two usages of the ID of CleanupPersistenceResponses as message to provide error messages. I think it would be better to provide an actual error response that holds a cause for example.

See: https://github.com/eclipse/ditto/blob/cdd8bb1bdfe65eeb4aa59eb2e7db4ba5454e80a1/services/concierge/actors/src/main/java/org/eclipse/ditto/services/concierge/actors/cleanup/EventSnapshotCleanupCoordinator.java#L367 and https://github.com/eclipse/ditto/blob/cdd8bb1bdfe65eeb4aa59eb2e7db4ba5454e80a1/services/concierge/actors/src/main/java/org/eclipse/ditto/services/concierge/actors/cleanup/EventSnapshotCleanupCoordinator.java#L395","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/476/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/491,https://api.github.com/repos/eclipse-ditto/ditto/issues/491,ditto,495675985,491,Enhance Ditto's connectivity by invoking HTTP endpoints,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2019-09-19T09:19:01Z,2019-10-18T08:09:51Z,"Most of the (public) APIs in the web are HTTP, e.g. all of AWS's services provide HTTP endpoints.
By adding the ""connection type"" HTTP to Ditto's connectivity feature Ditto could perform HTTP calls for the configured ""targets"", e.g.:
* on twin events
* for live messages

As the connectivity feature already contains header-mappings, adding custom HTTP headers would also be no problem.

As already done for the Kafka integration (#224), only ""targets"" need to be supported in the first step.
Having HTTP ""sources"" would need some thinking of what that actually means (as HTTP is not a long-lived-connection-based protocol).

Support for the following verbs should be possible (all including a body of course):
* POST
* PUT
* PATCH","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/491/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/492,https://api.github.com/repos/eclipse-ditto/ditto/issues/492,ditto,495688625,492,Map Hono device connection status to Thing feature,dguggemos,15028977,Dominik Guggemos,dominik.guggemos@bosch.io,CLOSED,2019-09-19T09:42:34Z,2019-11-04T14:48:23Z,"Hono sends notifications about the current connection status of a device ([Device Notifications](https://www.eclipse.org/hono/docs/concepts/device-notifications/#time-until-disconnect-notification) and [Connection Events](https://www.eclipse.org/hono/docs/concepts/connection-events/)). We want to use this information in Ditto to represent the current connection status as a Feature by providing a payload mapper for this purpose. 
Basic implementation idea:
* allow multiple mappings per connection
* result of these mappings (if any) are forwarded to concierge service in same order
* provide Java based mapping for Hono status notifications
  * if the status information is not available, no message is produced by the mapping
  * Feature ID is configurable in the mapping, default is `ConnectionStatus`
  * a vorto definition exists for the connection status feature","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/492/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/492,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNjQ2MzExNg==,ditto,536463116,492,NA,glennergeerts-aloxy,43479096,,,NA,2019-09-30T08:40:36Z,2019-09-30T08:40:36Z,"Hi, this is a very useful feature to have indeed. However, I was wondering how this would work when using something like the `Vorto Semantic Middleware` (as described [here](https://github.com/eclipse/vorto-examples/tree/master/vorto-hono-subscriber) ) sitting in between Hono and Ditto. In this setup Ditto will probably not receive these events currently. This might be fixed by adapting the Vorto middleware to forward this as well (and let Ditto take care of this as proposed here), or by moving this logic (of mapping the status information to the Feature) to the Vorto middleware. If it is the intention to add the Vorto middleware in between Hono and Ditto as a ""preferred"" setup for integrating these projects, I think the second option might make more sense.
What is your view on this?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNjQ2MzExNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/492,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNjQ4MTE5NA==,ditto,536481194,492,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-09-30T09:28:00Z,2019-09-30T09:28:00Z,I guess both alternatives would be valid for a middleware responsible for transformation.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNjQ4MTE5NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/494,https://api.github.com/repos/eclipse-ditto/ditto/issues/494,ditto,497690498,494,Helm chart openshift,BobClaerhout,3315222,Bob Claerhout,,CLOSED,2019-09-24T13:30:55Z,2019-09-27T15:51:06Z,"Hi,

I've just tested the install of 1.0.0-M1a on Openshift. I'm installing it using the helm charts.
I have 1 remark about these helm charts and 1 issue:

- Remark: the documentation contains the namespace in the example scripts (https://github.com/eclipse/ditto/tree/master/deployment/helm) I would suggest removing the namespace specification. If you ommit it, it will be installed in the namespace you are currently which should be right most of the time. Right now, I have to adapt these commands to my needs.
- Issue: Both Nginx and Swagger-UI do not have enough permission in openshift. I had to add following specs before the pods started properly: 

> 
          securityContext:
            capabilities: {}
            runAsUser: 0

I don't know whether this is the proper way to fix it, but it works. Maybe somebody has another fix to get this to work.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/494/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/494,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNDkyODE1NA==,ditto,534928154,494,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-09-25T09:07:58Z,2019-09-25T09:07:58Z,"Hi @BobClaerhout 
Sounds both reasonable for me - but I'm not an expert on Helm charts ..
Could you provide a PR with that changes?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNDkyODE1NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/494,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNTg2ODQ0Mg==,ditto,535868442,494,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-09-27T09:35:45Z,2019-09-27T09:35:45Z,resolved by #497 ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNTg2ODQ0Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/499,https://api.github.com/repos/eclipse-ditto/ditto/issues/499,ditto,498755808,499,Fix findings after persistenceActor refactoring,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2019-09-26T09:04:49Z,2019-10-02T05:20:55Z,"After #488 we identified some minor issues to fix:
* in abstract classes, replace logging ""thing"" with ""entity"" (as this also applies for policy + connection)
* let the etag methods in abstract classes directly return the etag type instead of Optional entity
* fix `Unknown message: org.eclipse.ditto.services.connectivity.messaging.persistence.ConnectionPersistenceActor$CheckLoggingActive@457faec4` in ConnectionPersistenceActor by adding `CheckLoggingActive` to the overwritten ""match unhandled"" method","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/499/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/502,https://api.github.com/repos/eclipse-ditto/ditto/issues/502,ditto,500338860,502,Memory consumption raised in Version 1.0.0-M1a,BobClaerhout,3315222,Bob Claerhout,,CLOSED,2019-09-30T15:05:43Z,2019-10-18T08:31:41Z,"Hi we are noticing a huge difference in memory consumption between version 0.8.0 and version 1.0.0-M1a. Following screenshot is the consumption of version 0.8.0:
![image](https://user-images.githubusercontent.com/3315222/65890724-a80b5480-e3a3-11e9-9c31-31622831a94b.png)
Mongo uses most of the memory (which is about 4GB). In total, the ditto project uses about 7GB which result in a netto consumption of 3GB for the ditto components.
Following screenshots shows the memory consumprion of version 1.0.0-M1a:
![image](https://user-images.githubusercontent.com/3315222/65890859-e7d23c00-e3a3-11e9-8924-a92fe31ae57d.png)
Mongo uses only 130 MB of the memory in this case. In total, the ditto project uses about 20GB (after which our server was running out of memory and killed some processes). In the detailed overview below, you can find following memory consumptions:
- Gateway: 4GB
- Connectivity: 2.21GB
- Things: 1.97GB
- ... (some other services are also using double the amount of memory but these are the most important ones.

Did anyone else notice this as well? Is it possible we made a configuration error?
After the services restarted, the memory consumption came down but slowly increases again.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/502/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/502,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNjg3MDM0NA==,ditto,536870344,502,NA,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,NA,2019-10-01T05:23:55Z,2019-10-01T05:23:55Z,"Uh, that doesn't sound good. Sounds much like a memory leak. Would it be possible to get a heap dump when memory consumption is very high? Would highly appreciate this.
Thank you very much for this finding!","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNjg3MDM0NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/502,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNjg3MjYyNw==,ditto,536872627,502,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-10-01T05:33:27Z,2019-10-01T05:33:27Z,"Hi Bob.
What do you use mainly in the Ditto gateway?
HTTP requests or Websockets? And when you use Websockets: mainly for getting data in or getting data out (events/notifications)?
That way we hopefully can better identify where to look.

And with which Java memory settings (Xmx, Xms) do you run the Ditto services?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNjg3MjYyNw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/502,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNjkzMzU2Mw==,ditto,536933563,502,NA,BobClaerhout,3315222,Bob Claerhout,,NA,2019-10-01T08:41:42Z,2019-10-01T08:41:42Z,"> Would it be possible to get a heap dump when memory consumption is very high? Would highly appreciate this.

Both jmap and jcmd are not available in the container. Any hints on how to get this dump from within the container?

> What do you use mainly in the Ditto gateway?

Mainly (if not only) HTTP requests.

> And with which Java memory settings (Xmx, Xms) do you run the Ditto services?

These are the settnigs we currently use: `-XX:MaxRAMPercentage=80 -XX:InitialRAMPercentage=40 -XX:+ExitOnOutOfMemoryError`

Currently, the concierge is also using 4.6 GB of memory which makes me believe this might be an issue in some base component... Current top usage:
![image](https://user-images.githubusercontent.com/3315222/65947185-071aa900-e438-11e9-8531-001895538c00.png)

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNjkzMzU2Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/502,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNjk2ODIyMA==,ditto,536968220,502,NA,ffendt,2587759,Florian Fendt,,NA,2019-10-01T10:11:02Z,2019-10-01T10:11:02Z,"Hi there,

basically getting a core dump should work the following way:
```bash
# get the container id & open a terminal in it
docker exec -it $theContainerId /bin/sh

# find out the PID of the java service:
ps aux 

# and kill with signal 6 - that will cause a coredump to be written into the container
kill -s 6 $thePIDOfTheJavaProcess

# the docker container will now be stopped - but its data can still be accessed
mkdir tmp/
docker cp $theContainerId:/ tmp/
```
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNjk2ODIyMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/502,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNzAyNzA0MA==,ditto,537027040,502,NA,BobClaerhout,3315222,Bob Claerhout,,NA,2019-10-01T13:06:07Z,2019-10-01T13:06:07Z,"The ditto dump is available here: https://transfer.sh/ytZ0k/ditto-dump.tar.gz (14 days)
**edit:** This is from the gateway service","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNzAyNzA0MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/502,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNzA4MTIzNA==,ditto,537081234,502,NA,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,NA,2019-10-01T15:07:24Z,2019-10-01T15:07:24Z,"Thanks, we will take a look.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNzA4MTIzNA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/502,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNzE0MDY2Ng==,ditto,537140666,502,NA,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,NA,2019-10-01T17:24:18Z,2019-10-01T17:24:18Z,"@BobClaerhout The core dump file is about 16 GB. All heap objects take up ~450 MB, among which only ~100MB are reachable. There is no memory limit placed on the JVM process. Chances are the JVM thinks it has more memory than available on your server. MongoDB was probably experiencing a similar situation. It uses as much memory as it can for throughput.

If this is the issue, setting the JVM arguments
```
-XX:MaxRAMPercentage=3
-XX:InitialRAMPercentage=1
```
or
```
-Xms256m -Xmx512m
```
on the server with 20GB RAM should keep memory use at a reasonable level.

Which deployment did you use?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNzE0MDY2Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/502,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNzM0MjI3MQ==,ditto,537342271,502,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-10-02T05:30:50Z,2019-10-02T05:30:50Z,"Bob mentioned to already have `-XX:MaxRAMPercentage=80 -XX:InitialRAMPercentage=40` configured.
Maybe the docker container has no limits and uses the host OS memory settings?
Could be that an updated JDK in the Ditto image calculates the memory differently which caused the JVM process to ""reserve"" more memory.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNzM0MjI3MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/502,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNzM3MzU2Mg==,ditto,537373562,502,NA,BobClaerhout,3315222,Bob Claerhout,,NA,2019-10-02T07:34:00Z,2019-10-02T07:34:00Z,"@yufei-cai, @thjaeckle, thanks for the assistance. I changed the `-XX:MaxRAMPercentage=80 -XX:InitialRAMPercentage=40` to `-Xms256m -Xmx512m` and the memory usage graph reacted as follows:
![image](https://user-images.githubusercontent.com/3315222/66025701-64c1fa80-e4f7-11e9-99ac-6735de7acdbc.png)
The issue seems to be ressolved.
I am using the images from docker hub (1.0.0-M1a) and using the helm charts (from the master branch) to deploy. The environment variable is coming from the Helm chart:
```
   - name: IBM_JAVA_OPTIONS
     value: ""-XX:MaxRAMPercentage=80 -XX:InitialRAMPercentage=40 -XX:+ExitOnOutOfMemoryError""
```
I suggest changing the environment variable.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNzM3MzU2Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/502,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNzM4MjQyNA==,ditto,537382424,502,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-10-02T08:00:25Z,2019-10-02T08:00:25Z,I would suggest limiting the memory of the docker container in the helm chart instead,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzNzM4MjQyNA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/507,https://api.github.com/repos/eclipse-ditto/ditto/issues/507,ditto,502659221,507,OpenID Connect: make used claim for a policies subject configurable,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,CLOSED,2019-10-04T14:09:34Z,2019-11-11T17:53:09Z,"To make the new OpenID Connect feature (from ditto 1.0.0-M1) more useful there should be a way to configure or use groups and roles supplied within the JWT provided by the OpenID Connect-provider for checks against the subjects of a policy.

An example provider featuring claims specifically for authorization purposes is keycloak where you may receive groups and roles assigned to an authenticated user.

According to my conversation with @jokraehe about the OpenID Connect feature it is currently not possible to use other information provided in the JWT then the subject-claim within a policies subject.

Proposal
---

I propose to make it possible via configuration of an OpenID Connect provider in the gateway service to set a different claim as the used subject claim.

1) If the selected claim is a string, it should be used as is.
2) If the selected claim is an array, it should be treated as multiple subjects in a policy.
3) If it's something else it should be ignored an error logged.

I think this would be a fairly easy way of enhancing the OpenID Connect capability without implementing a whole client. The client may follow in a subsequent approach.

Why
---

Being able to use another claim from the JWT increases flexibility and enables different scenarios e.g. role based policy management. It also hands over more control to authorization to the OpenID Connect provider, which in case of keycloak would be a desired state.

What do you guys think?

Implementation
---

If I find myself some spare time I'd like to start implementing this - Where should I start and what are likely issues I'll encounter on the way?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/507/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/507,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzOTkzNjE0MA==,ditto,539936140,507,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2019-10-09T10:13:16Z,2019-10-09T10:13:16Z,This is related to #512,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzOTkzNjE0MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/507,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU1MjU0NTkxMA==,ditto,552545910,507,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2019-11-11T17:52:41Z,2019-11-11T17:52:41Z,This is actually a duplicate of #512 or the other way around :),"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU1MjU0NTkxMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/508,https://api.github.com/repos/eclipse-ditto/ditto/issues/508,ditto,502663339,508,Add documentation of OpenID Connect provider to the docs,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,CLOSED,2019-10-04T14:17:18Z,2019-10-08T07:33:56Z,"For the upcoming release of ditto 1.0.0 the documentation how to set an openid connect provider should be added to the operational public docs.

The how-to can be extracted from [the blog post](https://www.eclipse.org/ditto/2019-08-28-openid-connect.html).

Maybe also add an example on how to integrate it with keycloak? Keycloak is a reasonable and common OpenID Connect provider. I'm thinking of an example using keycloak-gatekeeper, since the gatekeeper project is easy to setup in a docker environment and provides the logic of issuing and handling the tokens and authorization before forwarding the request to ditto. An argument against that is, that choosing to use gatekeeper as example is somewhat opinionated.

I'd like to do this, since I'm an external user of ditto and had to find out how to do this beginning from nothing. Anything I should consider from your side?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/508/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/509,https://api.github.com/repos/eclipse-ditto/ditto/issues/509,ditto,502995393,509,Multi-tenancy with OpenID Connect JWT claims,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,CLOSED,2019-10-05T17:59:54Z,2022-03-01T13:38:57Z,"Now that ditto has support for OpenID Connect, the so called multi-tenancy, or in other words the possibility to grant/restrict the right to create things in all of ditto, could be handled in a general way by using configurable claims.

Context
---

Currently every authenticated party in ditto has the basic rights to create things and hence has basic access to every namespace. There is currently no enforcement / check on access-rights for namespaces.

This is due to the fact that ditto does not implement any concept for authorization on a tenant level.

A way to get this implemented is now given due to the introduction of the OpenID Connect feature. An OpenID Connect provider like keycloak is used, to handle authorization contexts and access-right-management in a central place. In order for applications to work with the set access-rights from the OIDC provider, the used token for authentication may also contain authorization context in the form of claims, that provide more context on the authenticated user.

These claims can be used to implement a configurable authorization for the tenant level, handing the management to the OIDC provider while avoiding the management of policies on a tenant level.

Implementation
---

The factory `org.eclipse.ditto.services.concierge.starter.proxy.DefaultEnforcerActorFactory` could be a starting point to implement such a feature.

I'm not completely fit in developing java applications, but it'd be a nice exercise on the other hand.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/509/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/509,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzODg2NzIzMQ==,ditto,538867231,509,NA,jokraehe,12512262,Johannes Schneider,johannes.schneider@bosch.io,NA,2019-10-07T07:08:27Z,2019-10-07T07:08:27Z,"Hi @w4tsn 
as stated on gitter, we plan to enhance the configuration of the oidc integration to support arbitrary claims for authorization. I have created a separate issue #512 for this.
I'm not entirely sure what your idea is to implement multi-tenancy to authorize users. Do you want to be able to configure subjects on a service level which are authorized to create things?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzODg2NzIzMQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/509,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzOTE5NTg3Nw==,ditto,539195877,509,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2019-10-07T20:43:36Z,2019-10-07T20:43:36Z,"In contrast to the way the claims shall be used in #512 to enhance how subjects work in policies, this issue is about the possibility to use the used provider or the received claims, groups and/or roles in the jwt, to match this against the namespace, hance restricting the ability to create things everywhere to only a defined set.

I'm not quite sure yet, if it's just a matter of matching the provider to a namespace or if it's better to have information from the jwt like groups or roles (or any other assigned attribute) be the data to be used for the distinction. Using information provided by the OIDC provider in the JWT to see which namespace a user is eligible to add things to would enable a broad range of different infrastructures to integrate ditto on this level with existing authz management.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDUzOTE5NTg3Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/509,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyNzc2NzcwOQ==,ditto,627767709,509,NA,JulianFeinauer,17098762,Julian,,NA,2020-05-13T06:10:00Z,2020-05-13T06:10:00Z,"@w4tsn this is a very interesting idea. But I'm not sure that I fully get your suggestion. Would it fit your suggestion, if initially, one could map one claim as ""namespace"" mapping (probably via REGEX). So that a user is only allowed to create things in a namespace that maps its ""allowed_namespaces"" claim (if it is set).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyNzc2NzcwOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/509,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyNzgwNDkyNw==,ditto,627804927,509,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2020-05-13T07:34:05Z,2020-05-13T07:34:05Z,"@JulianFeinauer yes, I think that would be a reasonable start. There are different ways one could think of segregating tenants via e.g. keycloak. You could use groups, one realm per tenant or just arbitrary claims. I think the latter like you suggested is the most configurable, which covers a lot of use-cases. Having the ability to configure this to use groups or realm names instead would be a quality of life enhancement if the architecture is designed around these concepts, since then have one field less to configure / touch.

The basic functionality to read and use arbitrary claims from a token is shared with #512 .
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyNzgwNDkyNw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/509,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84-6Ozo,ditto,1055452392,509,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-03-01T13:38:57Z,2022-03-01T13:38:57Z,"This now is supported via #1251 
Therefore closing this issue. Please open another one if something is still missing.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84-6Ozo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/512,https://api.github.com/repos/eclipse-ditto/ditto/issues/512,ditto,503267013,512,OIDC integration should support arbitrary claims for authorization subjects,jokraehe,12512262,Johannes Schneider,johannes.schneider@bosch.io,CLOSED,2019-10-07T07:00:13Z,2021-02-19T16:05:19Z,"The current implementation reads the ""sub"" claim only to create authorization subjects from a JSON web token. We should provide configuration options to support any claims.

Implementation suggestion (see below for discussion how we got there) for the configuration ""syntax"":
```
google = {
  issuer = ""accounts.google.com""
  auth-subjects = [
    ""{{ jwt:sub }}"",
    ""{{ jwt:sub }}/{{ jwt:scope }}"",
    ""{{ jwt:sub }}/{{ jwt:scope }}@{{ jwt:client_id }}"",
    ""{{ jwt:sub }}/{{ jwt:scope }}@{{ jwt:non_existing }}"",
    ""{{ jwt:roles/support }}""
  ]
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/512/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/512,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYxOTgzNDE2MA==,ditto,619834160,512,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2020-04-27T08:54:10Z,2020-04-27T08:54:10Z,Is there any advance in this topic?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYxOTgzNDE2MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/512,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYxOTg0NjgyNg==,ditto,619846826,512,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-04-27T09:14:40Z,2020-04-27T09:14:40Z,"No, we don't have that on our short term agenda currently.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYxOTg0NjgyNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/512,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyODg0MTMwOA==,ditto,628841308,512,NA,JulianFeinauer,17098762,Julian,,NA,2020-05-14T19:26:30Z,2020-05-14T19:26:30Z,"Just to get the issue clear. Is the aim to get arbitrary claims as the authorization subject or should the claims be used otherwise, also?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyODg0MTMwOA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/512,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyOTAyMDc5MQ==,ditto,629020791,512,NA,ffendt,2587759,Florian Fendt,,NA,2020-05-15T04:36:27Z,2020-05-15T04:36:27Z,"I think the idea behind this was to provide configuration on how (multiple) authorization subjects would be generated from the claims of a JWT. So basically a mini-DSL for generating the subjects.

So just a small example to clarify what I think this means:
For a token 
```
{
  ""sub"": ""ffendt"",
  ""client_id"": ""ditto-users"",
  ""scp"": [
    ""user"",
    ""admin""
   ],
   ...
}
```
and a configuration for the issuer  `[sub]+[...scp][-@client_id]` (where  `'...' -> 'each array value'` and `'-' -> 'optional'`), Ditto would generate a list of auth subjects: 
```
[
  ""ffendt+user@ditto-users"",
  ""ffendt+user"",
  ""ffendt+admin@ditto-users"",
  ""ffendt+admin""
]
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyOTAyMDc5MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/512,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyOTI2NTMyNA==,ditto,629265324,512,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2020-05-15T14:25:54Z,2020-05-15T14:25:54Z,"@JulianFeinauer @ffendt 

> Just to get the issue clear. Is the aim to get arbitrary claims as the authorization subject or should the claims be used otherwise, also?

In my understanding the main goal is to support e.g. roles and group claims in subjects such that I may add a OIDC role or group to a policy entry instead of a user id. This would already be much more flexible and allow access management being made from e.g. keycloak instead of ditto policies directly. With this I could write policy entries reflecting roles and add these roles to users to give them more capabilites.

Apart from that your idea @ffendt sounds interesting. Could you elaborate a bit more about the use-case that this could enable? I don't have a good feeling about what possibilities this would open up ;)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyOTI2NTMyNA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/512,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwODkyMDIyNw==,ditto,708920227,512,NA,JulianFeinauer,17098762,Julian,,NA,2020-10-15T06:06:32Z,2020-10-15T06:06:32Z,"This is an interesting topic and I see two different tasks in it. I agree with @ffendt in the sense that in some systems it may be preferable to use e.g. the email instead of the subject e.g. for consistency with other systems.
On the other hand I really lik @w4tsn idea of moving roles or groups in a policy.
Probably the most generic and probably ""simple"" way of achieving that would be to have some kind of ""filters"" which could be added to policies based on metadata that the user could have. So besides the prefix and subject as it is right now we could add a key-value map to the user with attribues. And from oauth we could do a generic mapping e.g. of groups and roles in there so that a filter on ""METADATA[""role_admin""] != null"" (we could use arbitrary engine and syntax here, js, JEXL, ...) would allow all users with oatuh role admin.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwODkyMDIyNw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/512,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwODkzMDQ3Ng==,ditto,708930476,512,NA,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,NA,2020-10-15T06:31:09Z,2020-10-15T06:31:09Z,"I'm not sure what the benefit of having METADATA is vs sticking to the already existing mechanism of multiple auth subjects.

If I understood @ffendt correctly you could do the same thing by using the subjects.

> and a configuration for the issuer [sub]+[...scp][-@client_id] (where '...' -> 'each array value' and '-' -> 'optional'), Ditto would generate a list of auth subjects:
> 
> [
>   ""ffendt+user@ditto-users"",
>   ""ffendt+user"",
>   ""ffendt+admin@ditto-users"",
>   ""ffendt+admin""
> ]

If I got this idea right, it allows to configure any structure of the subject that will be generated. This means you could for example configure [-sub+][scp] which would then generate the following list of subjects:
```
[
  ""user"",
  ""ffendt+user"",
  ""admin"",
  ""ffendt+admin""
]
```

This way you also have a subject which reflects only the role (admin and user) taken from the scp.

Did I miss something of your approach @JulianFeinauer?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwODkzMDQ3Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/512,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwODkzMTQzMw==,ditto,708931433,512,NA,JulianFeinauer,17098762,Julian,,NA,2020-10-15T06:33:19Z,2020-10-15T06:33:19Z,"@Yannic92 thanks for the response. Then I missunderstood @ffendt a bit, I guess. I though he wants to genreate only ONE ""subject string"". But if we generate multiple ones I agree, then its better than my suggestion and easier :)
Sorry for the confusion!","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwODkzMTQzMw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/512,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwODk1Nzk2NA==,ditto,708957964,512,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2020-10-15T07:28:42Z,2020-10-15T07:28:42Z,"It took me a moment to fully understand the described approach of @ffendt and I think it's a solid approach!

So one of the next steps then is to propose a actual DSL for this then? Some ideas / implementation notes:

As additional note about the nature of claims: they are auth provider dependent and since they are JSON could have any type such as `array, string, boolean, long, int, (nested) object`. Therefore the DSL has to support something like JSON pointer syntax and the value has to be parsed accordingly. E.g. keycloak supports to put a list of attribute values into something like `resource_access.${client_id}.roles`.

If the value of a claim is a list we can assume to use all it's contents for the auth subjects. No need to specify it explicitly with `[...scp]` because it's not useful to specify a certain list entry (the order could be unreliable). We could of course use this to enforce or loosen the claim parsing: allowing a claim to be either string or array or the other way around reject the JWT / claim if it doesn't match the configured type.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwODk1Nzk2NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/512,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwODk3MzYzNg==,ditto,708973636,512,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-10-15T07:59:26Z,2020-10-15T07:59:26Z,"> If the value of a claim is a list we can assume to use all it's contents for the auth subjects. No need to specify it explicitly with `[...scp]` because it's not useful to specify a certain list entry (the order could be unreliable).

I agree on that.

Regarding the DSL: yes, that one would have to be defined. I just searched if there already is a standard/library for defining such things, but I didn't find any.
We could of course use a ""Json transformation"" library like e.g. [Jolt](https://github.com/bazaarvoice/jolt/blob/master/gettingStarted.md), but it's really crazy what that library and its JSON based DSL can do (also crazy difficult to learn).

So I guess defining our own DSL and parser would be the best option.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwODk3MzYzNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/512,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwODk5MDcxNg==,ditto,708990716,512,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-10-15T08:30:39Z,2020-10-15T08:30:39Z,"The DSL would be part of the [openid-connect-issuers](https://github.com/eclipse/ditto/blob/master/services/gateway/starter/src/main/resources/gateway.conf#L164) configuration in ""gateway.conf"" (and could be specified/overwritten via environment variable or system property).

I guess it would make sense to ""break"" the config format in order to e.g. define for a issuer - so change from plain string to object in the config.

In order to start simple, I would suggest:
* to configure a list of JsonPointers (in `[...]` braces) combined with optional ""static"" characters in between
* if any of the used JsonPointers of one entry can't be resolved/found in the JWT, that complete entry is not added
* each added `[<pointer>]` may be of type string or type array of strings 
   * for type string a single auth subject is extracted
   * for type array of strings multiple auth subjects are extracted

Example config:
```
google = {
  endpoint = ""accounts.google.com""
  auth-subjects-extractors = [
    ""[sub]"",
    ""[sub]+[scp]"",
    ""[sub]+[scp]@[client_id]"",
    ""[sub]+[scp]@[non_existing]"",
    ""[roles/support]""
  ]
}
```

Example token:
```json
{
  ""sub"": ""ffendt"",
  ""client_id"": ""ditto-users"",
  ""scp"": [
    ""user"",
    ""admin""
   ],
  ""roles"": {
    ""support"": [
      ""call-center-agent"",
      ""support.admin""
    ]
  }
}
```

Example extracted auth subjects (to be used in policy ""subjects""):
```
ffendt
ffendt+user
ffendt+admin
ffendt+user@ditto-users
ffendt+admin@ditto-users
call-center-agent
support.admin
```

WDYT? Could this be a simple start already solving 80% of the use cases?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwODk5MDcxNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/512,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwODk5MTUxMg==,ditto,708991512,512,NA,JulianFeinauer,17098762,Julian,,NA,2020-10-15T08:32:04Z,2020-10-15T08:32:04Z,This looks very good @thjaeckle . Woudl at least solve 100% of my use cases (use email and probably use roles / groups). 👍 ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwODk5MTUxMg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/512,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwOTM2MzkwMA==,ditto,709363900,512,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2020-10-15T14:28:21Z,2020-10-15T14:28:21Z,"@thjaeckle I'd like a shorter config option. Just throwing in some ideas:

```
claims = [...]
auth-subjects = [...]
claim-mapper = [...]
subject-mapper = [...]
parser-rules = [...]
```

My favorit being simply `auth-subjects` since that's what we are looking for to extract from the JWT. This actually gives me another idea: would it be interesting to allow fixed subjects in this list such that one could bind policy entries directly to auth-providers? Not sure how useful this is but we e.g. have a strict realm-per-customer infrastructure where it could potentially become a use-case to give ""basic permissions"" to everything coming from one provider.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwOTM2MzkwMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/512,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwOTM3Mzc3OQ==,ditto,709373779,512,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-10-15T14:43:17Z,2020-10-15T14:43:17Z,"Yes, `auth-subjects` is totally fine here 👍 

I think fixed subjects would ""automatically"" be supported if you don't use the `[...]` notation inside an entry.
That could really proof useful as some kind of ""all users"" group for all users which could successfully authenticate with a specific issuer.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwOTM3Mzc3OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/512,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcxMjY4ODE5Ng==,ditto,712688196,512,NA,jokraehe,12512262,Johannes Schneider,johannes.schneider@bosch.io,NA,2020-10-20T08:33:19Z,2020-10-20T08:33:19Z,"I like your approach @thjaeckle, but I have a little issue with the placeholder syntax. I would prefer braces style that we use in connectivity configuration. Maybe even with a type declaration (string/array).
```
google = {
  issuer = ""accounts.google.com""
  auth-subjects = [
    ""{{ sub:string }}"",
    ""{{ sub:string }}/{{ scope:array }}"",
    ""{{ sub:string }}/{{ scope:array }}@{{ client_id:string }}"",
    ""{{ sub:string }}/{{ scope:array }}@{{ non_existing:string }}"",
    ""{{ roles/support:array }}""
  ]
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcxMjY4ODE5Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/512,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcxMjcwNzMxNA==,ditto,712707314,512,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-10-20T09:06:09Z,2020-10-20T09:06:09Z,"@jokraehe that syntax is also good for me 👍 
However I don't think the "":string"" or "":array"" is of much help here - as potentially all claims could be either string or array and we must be able to handle either string or array.

Another proposal, use ""json"" or ""claim"" as prefix:
```
google = {
  issuer = ""accounts.google.com""
  auth-subjects = [
    ""{{ claim:sub }}"",
    ""{{ claim:sub }}/{{ claim:scope }}"",
    ""{{ claim:sub }}/{{ claim:scope }}@{{ claim:client_id }}"",
    ""{{ claim:sub }}/{{ claim:scope }}@{{ claim:non_existing }}"",
    ""{{ claim:roles/support }}""
  ]
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcxMjcwNzMxNA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/512,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcxMjc1OTM0NQ==,ditto,712759345,512,NA,jokraehe,12512262,Johannes Schneider,johannes.schneider@bosch.io,NA,2020-10-20T10:37:58Z,2020-10-20T10:37:58Z,"I had that exact same thought on the prefix 👍
The type would make the config more like a contract to which the provider has to conform. I assume one provider would always return e.g. the ""scope"" claim as array. But you are right, it isn't of much help here and the convention to allow string or array for any claim is also fine by me.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcxMjc1OTM0NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/512,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcxMzYzMTQ5MA==,ditto,713631490,512,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-10-21T14:47:41Z,2020-10-21T14:47:41Z,"I think we reached an agreement on the format (I updated the summary accordingly).
I still don't know when the Ditto team will get the chance to work on this, so I suggest, if this is time-critical for someone, to provide a PullRequest.

Implementation hints:
* the config interface [`OAuthConfig`](https://github.com/eclipse/ditto/blob/master/services/gateway/util/src/main/java/org/eclipse/ditto/services/gateway/util/config/security/OAuthConfig.java) would need to be enhanced to contain the new `issuer` and `auth-subjects` config entries
   * look at [`DefaultOAuthConfig`](https://github.com/eclipse/ditto/blob/master/services/gateway/util/src/main/java/org/eclipse/ditto/services/gateway/util/config/security/DefaultOAuthConfig.java) which loads the issuers from the config file
* create new [`Placeholder`](https://github.com/eclipse/ditto/blob/master/model/placeholders/src/main/java/org/eclipse/ditto/model/placeholders/Placeholder.java) implementation for `ClaimPlaceholder extends Placeholder<JsonObject>` (with `claim:` prefix) which extracts arbitrary claims from a passen in JWT JsonObject
   * add a new facctory method to `PlaceholderFactory`
* enhance [`JwtAuthenticationProvider`](https://github.com/eclipse/ditto/blob/master/services/gateway/security/src/main/java/org/eclipse/ditto/services/gateway/security/authentication/jwt/JwtAuthenticationProvider.java) which creates an `AuthenticationResult` based on a passed in `JsonWebToken` to make use of the 
   * new configured `auth-subjects` patterns
   * in combination with the new introduced `ClaimPlaceholder` in order to resolve claims from placeholders
   * pass in the `OAuthConfig` which the `JwtAuthenticationFactory` holds when creating new `JwtAuthenticationProvider` instances","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcxMzYzMTQ5MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/512,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc2MTE2NjAzOQ==,ditto,761166039,512,NA,oscarfh,3311764,oscarfh,,NA,2021-01-15T19:55:01Z,2021-01-15T19:55:01Z,"Hi,
Is there any updates on this regarding @JulianFeinauer's suggestion in https://github.com/eclipse/ditto/issues/509#issuecomment-627767709 ?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc2MTE2NjAzOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/512,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc2MjA0Njg2Mw==,ditto,762046863,512,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-01-18T07:33:06Z,2021-01-18T07:33:06Z,"@oscarfh not that I am aware of.
As Ditto team we have no interest in supporting multi-tenancy in Ditto, so that one would have to come from the community.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc2MjA0Njg2Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/512,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc2MjMwOTAzOA==,ditto,762309038,512,NA,oscarfh,3311764,oscarfh,,NA,2021-01-18T15:10:14Z,2021-01-18T15:10:14Z,"Ok, thanks a lot for the feedback, @thjaeckle !","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc2MjMwOTAzOA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/526,https://api.github.com/repos/eclipse-ditto/ditto/issues/526,ditto,510659687,526,Deleted things still available in search,ffendt,2587759,Florian Fendt,,CLOSED,2019-10-22T13:33:45Z,2019-10-29T15:58:30Z,"There is a problem in the search API which causes inconsistencies in cursors of the search. The search finds deleted things in its search index but doesn't get back the things from the things service since they are deleted.
This happens because a feature of mongodb is used which lets mongodb choose when to delete documents. We should skip documents that are marked as deleted in the search to avoid those inconsistencies.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/526/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/533,https://api.github.com/repos/eclipse-ditto/ditto/issues/533,ditto,513795789,533,OIDC integration should support issuers with and without protocol,jokraehe,12512262,Johannes Schneider,johannes.schneider@bosch.io,CLOSED,2019-10-29T09:35:50Z,2019-10-30T06:39:33Z,"The current implementation only supports the issuer as configured, e.g. ""https://accounts.google.com"" but not ""accounts.google.com"" at the same time for one subject issuer.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/533/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/537,https://api.github.com/repos/eclipse-ditto/ditto/issues/537,ditto,514674564,537,Remove support for suffixed collections,jokraehe,12512262,Johannes Schneider,johannes.schneider@bosch.io,CLOSED,2019-10-30T13:35:54Z,2019-11-27T09:52:29Z,"Things and Policies use suffixed collections per default. These collections do not scale well with increased amount of namespaces and lead to massive problems with mongodb as sharding can't be used.
This change implies a database migration for which an automated script should be provided.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/537/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/540,https://api.github.com/repos/eclipse-ditto/ditto/issues/540,ditto,517101799,540,Comprehensive AMQP 1.0 support for Ditto command responses,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,CLOSED,2019-11-04T11:49:10Z,2019-11-27T10:21:41Z,"After #525, AMQP properties from Connectivity are retained in Ditto headers. However, further changes are necessary to use those properties to deliver Ditto command responses back to an AMQP broker via connectivity.

1. Header mapping: Currently no header mapping is possible for command responses, making it awkward to set response AMQP properties different from those of the incoming command.

2. Property/application property distinction: AMQP 1.0 permits application properties with the same name as an AMQP property. Ditto has no customization whether a header is written into properties or application properties, but that customization is important to meet the expectation of brokers.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/540/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/540,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU0OTMyNTAwMQ==,ditto,549325001,540,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-11-04T12:05:30Z,2019-11-04T12:05:30Z,"Hm, it's not only about AMQP 1.0 headers, is it?
Shouldn't be the title more generic as this affects all connectivity types as well?

Sure, the AMQP ""properties vs. application properties"" is also a topic which should be addressed.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU0OTMyNTAwMQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/540,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU0OTMyNTUxOA==,ditto,549325518,540,NA,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,NA,2019-11-04T12:07:12Z,2019-11-04T12:07:12Z,"Response header mapping is relevant for RabbitMQ connectivity. It is useful for Kafka and HTTP connections, but those do not support sources for incoming commands yet.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU0OTMyNTUxOA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/545,https://api.github.com/repos/eclipse-ditto/ditto/issues/545,ditto,518325790,545,Historical data from Ditto,,,,,CLOSED,2019-11-06T08:50:36Z,2023-02-07T13:00:43Z,"We are happy users of Ditto and I'd like to share how we use it to see if there is value in extending Ditto to support historical data. (I do not want to imply any desired timeline.)

We use Ditto to provide the last state of devices. Because Ditto does not make historical data of devices available, we run an InfluxDB with a custom service to feed data from Ditto into InfluxDB and to provide the data from InfluxDB to other services, e.g. all features' values since the device was added.

I wonder whether other users of Ditto do similar things and whether it would be desirable to make historical data available directly from Ditto.

I am aware of #174 where @mhumoglu showed interest in such functionality and where @thjaeckle mentioned that historical values are available in the database.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/545/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/545,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU1MDI5Mzc1OA==,ditto,550293758,545,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-11-06T12:45:51Z,2019-11-06T12:45:51Z,"Hi Sebastian.

Indeed the historical values can be available in the database.
By default they are cleaned up - if not configured otherwise via the environment variable `PERSISTENCE_CLEANUP_ENABLED` available in ""concierge"" service:
https://github.com/eclipse/ditto/blob/master/services/concierge/starter/src/main/resources/concierge.conf#L78

The historical values are however a ""side effect"" of the persistence approach Ditto uses. It uses Akka Persistence which itself is built on the [Event Sourcing](https://doc.akka.io/docs/akka/current/persistence.html#event-sourcing) pattern.
With that pattern there are only inserts done to the database, never updates - that way all changes to e.g. ""things"" managed in Ditto are ""delta changes"" persisted as separate documents in MongoDB.

So when never deleting these old events, the complete history may be available.
As said in #174 Ditto however does not have an API to retrieve those historical values.

There are some challenges in order to get this right:
* the Akka Persistence plugin may return a stream of persisted events for a single thing Id
   * the format of this events is however internal, not supposed to be API
   * they could however be transformed to ""Ditto Protocol"" messages which are public API
* so APIs would have to be defined
   * in HTTP and Ditto Protcol (e.g. via WebSocket, AMQP 1.0, etc.)
* authorization would have to be specified/clarified
   * e.g.: which authenticated user/system is allowed to see historical values? is that defined in the policy? is ""READ"" from the policy sufficient?
   * or even: must the configured authorization at the time where a historical entry was added be the one to apply for accessing the historical event?
* the event history would have to be streamed in the cluster message by message

So there are quite a few things to do.
And to be honest: the team does not have that on the Ditto agenda, so we would rely on contributions.

And I don't know if this would really help you solve your problem. That would not at all be comparable with a timeseries database like InfluxDB.
The max. you would get from this API is for one or several things a stream of change events - without any aggregation or statistic calculation.
Is that something which would help you?

What probably could be interesting for you is the recently added ""HTTP Push"" connectivity feature (https://www.eclipse.org/ditto/2019-10-17-http-connectivity.html) which lets you invoke a custom HTTP endpoint e.g. for each ""twin event"" which was done.
In combination with JavaScript based payload transformation you could probably get rid of your ""custom service"" between Ditto and InfluxDB and directly push data in a normalized form via HTTP to the InfluxDB API.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU1MDI5Mzc1OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/545,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU1MjAzMzU1MA==,ditto,552033550,545,NA,demetz,28460533,,,NA,2019-11-08T23:42:59Z,2019-11-08T23:42:59Z,"@selobosi 
we are also currently looking into a) how to feed data to Influx for persistence and b) extracting it again, considering the policy. 

In my opionion, the two biggest issues are:
- proper mapping, i.e. how to relate the fields / tags to the ditto model. 
  Given that we have our things definitions in vorto, we are using the `measurementUnit` to define the name of the measurement the values should be written to in Influx. Every data point is tagged with the thingId as well as the path of the data point.

- handle access to the data as Influx does not support policies. 
  Initially, we were considering to provide the policy as an additional tag. However, the policy could change over time. Furthermore, this will be much more difficult to implement if you are using Flux as query-language as oppsed to InfluxQL.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU1MjAzMzU1MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/545,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU1MjExNDg5OA==,ditto,552114898,545,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-11-09T16:24:29Z,2019-11-09T16:24:29Z,"Just yesterday I was watching an intro video of Apache IoTDB which is a new project intended for storing time series data suited for IoT use cases.
I don't believe that eg InfluxDB or any other conventional time series database is a good fit for massive sensor data.

IoTDB might be worth looking into.

@demetz I think somehow making the authorization via policies work with ts data would be the hardest thing to solve.

What I once thought of: just store the ""read subjects"" of an thing Event as tags to each ts document.
The ""read subjects"" is a list of policy subjects allowed to read an event (eg thing modified) and is already available for each event in Ditto.
That way a query to the time series database could always include a ""where clause"" selecting the ""Auth subjects"" (authenticated subjects, eg a username) and the ts db would only return authorized datasets.

That Approach however would require Ditto to have a deep understanding and integration of a timeseries db.
That is currently not on the project's agenda, but we're open for contributions. :wink:
But first a good fit timeseries db would have to be agreed on. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU1MjExNDg5OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/545,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3MzMyODI1OQ==,ditto,573328259,545,NA,jixuan1989,1021782,Xiangdong Huang,,NA,2020-01-11T15:49:24Z,2020-01-11T15:49:24Z,"Hi, 
I come from IoTDB community.  Lukas Ott and Julian Feinhauer told me about Ditto. 

Indeed in one of our practice, we tried to use an IoTDB instance to manage ～ 600 devices with 6000 metrics (i.e., totally 3.6M time series) with 5Hz data ingestion per time series (i.e., 3.6M*5 points per second). Actually, we tried 800 devices X 8000 metrics, it also works.  All metrics generate float or boolean data.

However, we used a server which has 128GB memory (-Xmx100g) and an Intel XEON E5 CPU and HDD disk.  (Using such a hardware, IoTDB can reach ~ 30Million points per second ingestion throughput, using batch_write api.)

We also tried to manage timeseries with high collection frequency, e.g., 500KHz per time series. 
If we use batch_write api, e.g., write 100 points per api calling, we can support such a high frequency data collection. 

Of course IoTDB can also run on a Raspberry PI. But I did not test how many time series it can support on such a 2GB memory machine (maybe 20K~100K time series is fine.)

I do not know what scenario that Ditto wants to support and which kind of hardware that Ditto wants to run on. Hope the above info can help us to evaluate whether IoTDB is suitable.

Besides, IoTDB can support a good query performance for a time range query. (Indeed we are improving our query performance and may finish it in 0.10 or 0.11).  A known issue is that if there are too many data in IoTDB's memory, the query may be slower than the data on disk for some kinds of queries (very strange, right? It is a design problem, and may be solved in future).

One thing you need to know is that IoTDB's schema is quite different with InfluxDB. we have a concept of Storage Group, which impacts the write performance and memory cost heavily.

 A good thing is that as IoTDB is written in Java, it is glad to find Ditto is also written in Java that can make the integration easier. 

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3MzMyODI1OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/545,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3MzU1OTkwOQ==,ditto,573559909,545,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-01-13T08:43:00Z,2020-01-13T08:43:00Z,"I think it could really be beneficial to look into the integration of IoTDB into Ditto for historical data.

I however don't have the time on working on an implementation or PoC for that as the historical data is nothing we have on our immediate OpenSource and also commercial agenda for Ditto.
I could support when questions arise and maybe do a little PoC during my ""lab day time"" which we get from time to time to experiment with new technology, but that won't be sufficient to get this into a full fledged feature into Ditto.

As starting point when someone wants to proceed evaluation:
* best would be to copy the ""things-search"" service module into a new ""history"" service module
* things-search already subscribes to all `ThingEvent`s and updates a separate search index which is very similar to what an integration with IoTDB could look like
* adjust the code from there on, hopefully utilizing already established pattern ins ""things-search"", e.g. for missed events in the cluster","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3MzU1OTkwOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/545,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3MzU3MTQ3Mg==,ditto,573571472,545,NA,JulianFeinauer,17098762,Julian,,NA,2020-01-13T09:18:55Z,2020-01-13T09:18:55Z,"Hi, just moving over from #592 (thanks for the hint @thjaeckle). To your last question on #592 , there currently is no equivalent to ""tags"" (as e.g. InfluxDB use it) to describe authorization. Currently this would be done on series level not on single points. For many use cases I know, that seems reasonable enough.
Perhaps, if I find some time the next days, I could try to spin up a very example ""gateway"" which translates the journal events to an IoTDB instance.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3MzU3MTQ3Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/545,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyMDY1NzQ5MA==,ditto,620657490,545,NA,JulianFeinauer,17098762,Julian,,NA,2020-04-28T14:53:30Z,2020-04-28T14:53:30Z,"Just a short update here. I am currently running a working example to combine IoTDB as ""history"" with Ditto, see the Diagram: 
![architecture](https://user-images.githubusercontent.com/17098762/80502088-82155500-8970-11ea-8be9-bf57377dd7f4.png)

Major Drawback is the management of different Users at different points (MQTT, Ditto, IoTDB). So I would be highly interested in creating a service in ditto which ""proxies"" all timeseries requests and applies its security context / policy.

@thjaeckle could you see something like that as a ditto feature? And if so, where would be a good starting point from your perspective?
@jixuan1989 I will discuss this with you also!
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyMDY1NzQ5MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/545,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyMDcxMjc4Nw==,ditto,620712787,545,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2020-04-28T16:24:29Z,2020-04-28T16:24:29Z,"We also have a history connected to our things, although we use different tooling.

![ditto-historian-diagram](https://user-images.githubusercontent.com/2271467/80512197-6cf2f300-897d-11ea-93ab-cf094810aa90.jpg)

The components involved are Eclipse Vorto, A Micro-Service serving the two purposes for storing and retrieving history, influxdb, an MQTT-5 connector and a special, configurable proxy serving the actual data from the db.

In our solution the history is managed through a micro-service connected to ditto via websockets which has two main purposes: get incoming changes to the digital twin, store it in influxdb and listen to ditto messages to retrieve data from influxdb.

In order to **not** send big historical queries through ditto (which fails due to limits, is slow due to missing compression etc.) the historian places a query in a configurable proxy with access to influxdb and returns only a temporary link with a Status Code of 303. This way the client can request history under it's policy restrictions through ditto while being able to get high performant queries (almost) directly from influxdb.

Access control is managed mainly through ditto policies. The policy controls what the historian may store through permissions on features:/. Any client via ditto is restricted via policies in the way what history it may retrieve. The historian stores incoming twin changes with their thingid, namespace and property path. With the explicit and implicit information known from the websocket connection the historian may handle requests as intended by the policies. E.g. explicit are thingid and propertyPath and implicit is where the ditto policy allows a subject to send messages to. For deeper application of policies we may incorporate the Policy API and even read policy objects from ditto. MQTT5 allows us to restrict gateways to only write data to things they should via their client ids which is not possible with MQTT3. 

We try to maintain every twin related access through ditto so we can relay on dittos policy framework. Either we query features from a thing or we get additional functionality like the history by additional micro-services answering ditto messages.

I hope this already helps with the issue and gives another idea about practical usage of history and ditto :)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyMDcxMjc4Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/545,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyMDczNDEzNA==,ditto,620734134,545,NA,JulianFeinauer,17098762,Julian,,NA,2020-04-28T17:01:57Z,2020-04-28T17:01:57Z,Thanks for the detailed write up @w4tsn! Your setup looks well thought out. One question that remains for me is what kind of messages you use and how you restrict them? Do you use ditto messages with arbitrary payload?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyMDczNDEzNA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/545,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyMDc2Nzc3Mg==,ditto,620767772,545,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-04-28T18:06:30Z,2020-04-28T18:06:30Z,"@w4tsn
> the historian places a query in a configurable proxy with access to influxdb and returns only a temporary link with a Status Code of 303. This way the client can request history under it's policy restrictions through ditto while being able to get high performant queries (almost) directly from influxdb.

That is really clever. Kudos to that solution.

Could Ditto make this easier in any way?
Basically what @JulianFeinauer thought about as well, eg providing a specific history API. 

Relaying the payload through Ditto is really something which should be prevented here, so the redirect to a temporary URL is great.


It would be great to document this as some kind of ""Pattern"" or best practice for integrating 3rd party aspects of a digital twin via Ditto, still ensuring authorization. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyMDc2Nzc3Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/545,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyMDc2OTAyNQ==,ditto,620769025,545,NA,JulianFeinauer,17098762,Julian,,NA,2020-04-28T18:08:47Z,2020-04-28T18:08:47Z,@thjaeckle @w4tsn indeed. This would be one idea. Another idea could be to add an API in ditto which allows others to use dittos auth mechanism to check specific requests.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyMDc2OTAyNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/545,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyMDc3NDY0OA==,ditto,620774648,545,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-04-28T18:19:22Z,2020-04-28T18:19:22Z,"@JulianFeinauer rather than adding such an API via http I would recommend using the policy and the policy `Enforcer` and evaluate the outcome locally without remote request.
That is already possible, the `PolicyEnforcers` are part of the Java API: https://github.com/eclipse/ditto/blob/master/model/enforcers/src/main/java/org/eclipse/ditto/model/enforcers/PolicyEnforcers.java

You just provide a Policy (eg retrieved via HTTP) and then call methods like `hasUnrestrictedPermissions`, even for resources not known to Ditto and also other permissions in addition to READ and WRITE. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyMDc3NDY0OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/545,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyMDc4MjgxNw==,ditto,620782817,545,NA,JulianFeinauer,17098762,Julian,,NA,2020-04-28T18:34:32Z,2020-04-28T18:34:32Z,"@thjaeckle this is a neat idea, indeed. So one could fetch a Policy and check against existing subjects to see whether they should be allowed to do... things or not?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyMDc4MjgxNw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/545,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyMDc4MzM3NQ==,ditto,620783375,545,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-04-28T18:35:36Z,2020-04-28T18:35:36Z,"@JulianFeinauer yes, exactly. Same api is used in Ditto backend 😉","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyMDc4MzM3NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/545,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyMTAwODE4MA==,ditto,621008180,545,NA,ffendt,2587759,Florian Fendt,,NA,2020-04-29T06:05:08Z,2020-04-29T06:05:08Z,"Just a thought about the history of things and the policy enforcement for it: Do I want the user to only see history of a thing from timestamp x to timestamp y?  Do I want to allow the user to see history of a thing for different periods (E.g. x1 to y1, x2 to y2, ...)?

From my experience I would affirm both questions. A simple solution to this would be to use the policy at timestamp x when getting the data of a thing at timestamp x (e.g. simplified by adding the read subjects to the historical entry of things as @thjaeckle assumed). Users will however only be able to see the history from the point they got added to the policy. Maybe you would want them to see also past this point in time. That's where we would probably need to enhance the policy structure.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyMTAwODE4MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/545,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyMTAxMzY5MQ==,ditto,621013691,545,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-04-29T06:25:18Z,2020-04-29T06:25:18Z,"@ffendt I assumed (for simplicity) that the current policy allows a user to read the complete history or nothing.

If we want to apply the policy also for historical records, I guess the best way would be to add this information to the timeseries database when inserting the data. And building a query which includes the user ""subject"" performing the query.
But as I understood, e.g. IoTDB does not have means to insert additional ""tags"" where such information could be put.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyMTAxMzY5MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/545,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyMTAxNDQxMQ==,ditto,621014411,545,NA,JulianFeinauer,17098762,Julian,,NA,2020-04-29T06:27:39Z,2020-04-29T06:27:39Z,"I agree with @ffendt as best solution. And yes, @thjaeckle is right. But one could also mimic that with an additional layer where one creates a separate iotdb series for each policy... Then this would work. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyMTAxNDQxMQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/545,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyMTAzNzExOA==,ditto,621037118,545,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2020-04-29T07:32:37Z,2020-04-29T07:32:37Z,"Thanks @thjaeckle, that means a lot to me. I could write a first draft down in a PR and you may move it to a section of your choosing in the docs and enrich it with more details from your perspective. I wanted to write something for my blog anyways :)

Regarding an enhancement of the API from Ditto I'll have a coffee about it and talk with my frontend engineers if they have any 'desires' in that regards :+1: 

Regarding policies and historical access, here is my current perspective:

Writing policy information as metadata onto a series is often times also not reversible (in an easy way) and probably also not desired. This implicates that a specific access state is known at write time of the datapoint and will never change in the future. So in order to later change access permissions of a series one would have to change the subjects of 'historical policies'. That means we'd have to store the history of policies, but allow a change of subjects them. Correct me, if I'm wandering off somewhere... @JulianFeinauer I think with additional series in iotdb it's the same? I'm not familiar with iotdbs mechanics so I struggling to understand the implications of separate series per policy. Maybe you could elaborate about that a bit more?

Having policies with an optional timestamp extension for historical data feels much more natural to me, since the policy then is always a current perspective, which may grant/revoke access to the history from a somewhat elevated position.

@ffendt in our scenario, currently, a user either has access to the history or not. There currently are no plans to further restrict this on a per timestamp basis, but who knows when the next feature request comes in. I'm however open for ideas and besides that this topic is quite fascinating.

Oh, and regarding the messages we use @JulianFeinauer:

Indeed we use ditto messages over the live channel with arbitrary payloads which are captured, processed and answered by the micro-service. The payloads (as JSON) are what actually defines the parameters of the query (without the tags, db names and measurements required for authorization). @thjaeckle I suppose that this is one of the things that would be moved to a HTTP API, instead of using loose payloads. The frontend team misses the swagger docs and RESTiness when using our ditto messages APIs :sweat_smile: ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyMTAzNzExOA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/545,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyMTgwMzIwMg==,ditto,621803202,545,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-04-30T12:30:06Z,2020-04-30T12:30:06Z,"@w4tsn 
> I could write a first draft down in a PR and you may move it to a section of your choosing in the docs and enrich it with more details from your perspective. I wanted to write something for my blog anyways :)

That would be great 👍 

> @thjaeckle I suppose that this is one of the things that would be moved to a HTTP API, instead of using loose payloads. The frontend team misses the swagger docs and RESTiness when using our ditto messages APIs 😅

Maybe we can come up with a descriptive approach where a piece of configuration would define which HTTP APIs are provided, basically as a kind of ""facade"" in front of the messages HTTP endpoints.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyMTgwMzIwMg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/545,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyNTY3MzYxOA==,ditto,625673618,545,NA,JulianFeinauer,17098762,Julian,,NA,2020-05-08T07:12:14Z,2020-05-08T07:12:14Z,"I started a Discussion for the IoTDB Approach (in parallel to what @w4tsn suggested). We already had a short discussion that one could extend the Policy Framework to have also a ""READ_HISTORY"" permission Flag. As @thjaeckle suggested one could use the IoTDB Intersector with the PolicyEnforcer to reach the goal via native IoTDB Clients.

See here for the IoTDB Issue: https://issues.apache.org/jira/browse/IOTDB-648","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyNTY3MzYxOA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/545,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyNjEwMTYzNg==,ditto,626101636,545,NA,jixuan1989,1021782,Xiangdong Huang,,NA,2020-05-09T04:03:34Z,2020-05-09T04:03:34Z,"Hi, I come here by tracking IOTDB-648... 

> Do I want the user to only see history of a thing from timestamp x to timestamp y?

> But as I understood, e.g. IoTDB does not have means to insert additional ""tags"" where such information could be put.

Yes, IoTDB does not support add additional ""tags"" for a part of data in a series now. (e.g., add a tag ""alert"" on the data from timestamp x to y in series A).  But I have already been considering the feature, not for permission, but for add some useful information on series data to enrich the query semantic. 
So, if you have more requirement definition about tag on subseries, you can share to me and let's make this feature taking more effect.

Agree to use Ditto to control the permission.
Actually, IoTDB itself has permission control, i.e., allowing a user to read or write on a given time series.  However, database user is totally different with the terminal user (or, client).  A database usually has several users (DBA, user1, user2 etc..), while we may have millions of terminal users (clients).


","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyNjEwMTYzNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/545,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyNzk2NTcxNw==,ditto,627965717,545,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2020-05-13T12:58:01Z,2020-05-13T12:58:01Z,"@thjaeckle 

> Maybe we can come up with a descriptive approach where a piece of configuration would define which HTTP APIs are provided, basically as a kind of ""facade"" in front of the messages HTTP endpoints.

I've spoken to some frontend developers and they really love the idea. I'm also getting pretty excited about it.

My current understanding is that my microservice defines message types / topics it is able to process and registers these to ditto such that a dynamic swagger doc is updated / added that shows new REST endpoints for certain things. Both updated REST API endpoints and an according swagger doc would be really neat.

Currently the micro-service just opens a WS connection and handles all the API logic which messages are actually excepted and processed locally. By the design of the WS and policy it receives all messages it is allowed to read and ditto currently has no idea about what the service is capable of. Right now I communicate the functionality on a separate channel to the developers.

I've opened issue #682 to track this idea.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyNzk2NTcxNw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/545,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYzODA2MDU4MQ==,ditto,638060581,545,NA,JulianFeinauer,17098762,Julian,,NA,2020-06-03T08:56:06Z,2020-06-03T08:56:06Z,Another route that I am driving forward is to use the native IoTDB Interface. I already have implemented an OpenID Connect integration for IoTDB for Login / Authentification and if I would use a Ditto PolicyEnforcer based Authorization module you would be able to normaly work against an IoTDB Instance given you use the same OIDC provider than you use for ditto.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYzODA2MDU4MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/545,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C841fUls,ditto,897403244,545,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2021-08-12T07:11:12Z,2021-08-12T07:11:12Z,"In the meantime we also have a FastAPI backend that uses the token of the requester (from the same keycloak instance used in ditto) to make a request in the name of that user to ditto to see if a request is allowed or not before acting on other things. This is kinda an indirect check and also not as performant as doing the check locally. If I recall correctly that's what's @BobClaerhout is doing as well or at least talked about in the past.

@thjaeckle it would be great if the policy enforcer would have an implementation in the client libraries (for JavaScript in that regard, or for e.g. python if there starts to be a python client some day). This implementation should then allow retrieving (and caching) the policies to do local enforcement.

An HTTP API specifically for checking authorization on certain properties would at least make it more explicit than just making a request in the name of one user. Also elevated resources still need to either impersonate another identity or have to fiddle with policies manually right now, which would be resolved with that more easily.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C841fUls/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/545,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84125qL,ditto,903584395,545,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-08-23T09:09:45Z,2021-08-23T09:09:45Z,"> @thjaeckle it would be great if the policy enforcer would have an implementation in the client libraries (for JavaScript in that regard, or for e.g. python if there starts to be a python client some day). This implementation should then allow retrieving (and caching) the policies to do local enforcement.

For Java, there is this functionality.
For other SDKs, we're open for PullRequests - as those are mainly driven by the community, we're most likely not driving that.
FYI: There recently was an initial contribution for a python SDK: https://github.com/eclipse/ditto-clients-python","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84125qL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/545,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85K2puJ,ditto,1255840649,545,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-09-23T06:27:33Z,2022-09-23T06:27:33Z,"I think it makes sense to close this issue as it is not on Ditto's goals to natively support historical data.
Integration with other TS databases is IMO the better approach - but as this was not driven by anyone in the last years I would close the issue.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85K2puJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/545,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Urqy7,ditto,1420733627,545,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-02-07T13:00:43Z,2023-02-07T13:00:43Z,Accessing historical data was up to recently out of scope in Ditto - now with issue #1498 this will be added in Ditto 3.2.0,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Urqy7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/547,https://api.github.com/repos/eclipse-ditto/ditto/issues/547,ditto,520261003,547,MQTT 5 Support,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,CLOSED,2019-11-08T22:20:03Z,2020-04-27T12:07:42Z,"With #487 the HiveMQTT client was introduced which supports MQTT 5 protocol. A lot of the more advanced features like header mapping and source enforcement are only supported with headers which MQTT 5 provides.

Implementation
---

Not yet implemented MQTT 3 Features

- keepAlive
- willPublish

MQTT 5 client configuration options:

- [ ] sessionExpiryInterval
- [ ] restrictions
- [x] userProperties

Sub-tasks:

- [x] Update Documentation
  - [x] Basic Concepts / Connections
  - [x] Connectivity API / MQTT 5 Protocol Binding
  - [x] Document client-specific config (e.g. `clientId`)
- [x] Implement basic MQTT 5 client based off HiveMQTT 3
  - [x] Tests
- [x] Implement MQTT 5 userProperties
  - [x] Tests
- [x] Implement Header Mapping
  - [x] Tests
- [x] Implement Source Enforcement
  - [x] Tests
- [x] Add to DefaultClientActorPropsFactory.java
  - [x] Tests
- [x] Add mqtt 5 to MqttValidator
  - [x] Tests
- [ ] Implement Mqtt5Config (and Mqtt3Config?)
  - [ ] Tests

Discussion
---

**user properties and header mapping** are the way a client may provide additional header values in MQTT 5. Additional to the user properties, there are fixed and variable properties available. I had a look at the EMQX Broker for a reference of available properties. These are among others `Correlation Data`, `Response Topic` and `Content Type`. Those can be implemented as general available headers for header mapping.

User defined properties for targets can be defined via the specific Configs map in the connections configuration.

**Source Enforcement** for the time being I have no clear idea how to implement the source enforcement. MQTT 5 provides a property `Authentication Method` together with `Authentication Data`. This does not apply for publish and other message types however. 

Question: The clientid is already extracted and some brokers enforce the client id via certificate based authentication. Is this enough to have a first source enforcement?

Additionally to this, the broker would require the ability to set user defined properties per message right? Since the user defined properties are the only headers that are valid for all message types.

**Validator and MQTT5Config?** Is it necessary to have these classes separate from mqtt3? The validator currently has a hard check for `MQTT 3.1.1` in the protocol param. Should there be just an extension for `MQTT 5` or a separate validator? What do you think?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/547/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/547,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU1NDg4NzYyOA==,ditto,554887628,547,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-11-18T07:27:49Z,2019-11-18T07:27:49Z,"Hi @w4tsn 
First of all thank you for start working on the MQTT5 support, that will be a great enhancement 👍 

For your discussion points:
**user properties and header mapping**: yes, makes perfect sense using the pre-defined and user-properties for header mappings in connection sources and targets.
I guess that the HiveMQ mqtt5 client has special setters/getters for the pre-defined properties (like `Content Type`, `Correlation Data` or `Response Topic`) and that those are not duplicated in the `user properties` with e.g. keys ""content-type"" ...
We have a similar challenge in the Amqp10 connection - there we use the Qpid-Jms-Client which also defines methods like `setJmsCorrelationId`. There we want to just use ""correlation-id"" as key in a header mapping.
We solved that by ""mapping"" header keys to methods to be invoked on a `Message` instance, see here:
https://github.com/eclipse/ditto/blob/master/services/connectivity/messaging/src/main/java/org/eclipse/ditto/services/connectivity/messaging/amqp/AmqpPublisherActor.java#L79

We should do the same for the MQTT5 implementation, defining that header keys ""correlation-id"", ""content-type"", ""reply-to"" are mapped to MQTT5 `Correlation Data` , `Content Type` and `Response Topic`.
We are currently working on #540 which will solve that more elegant for AMQP 1.0 header mappings, we will get a WIP PR out so that you may use the same pattern.

**Source Enforcement**: The idea of source enforcement is to extract information towards the device identity from each consumed message (in order to ensure that the targeted thing in the Ditto Protocol message has the same identifier as the device which sent the message). Eclipse Hono for example sets the `device_id` header for each message.
I also don't see a default defined property for that in the MQTT5 properties. 
As you suggested that could however be done via user defined properties. Preferably done by the broker, yes - otherwise the device could still pretend to be another device.

What we suggest for MQTT 3 here is to use the MQTT topic as source of the device id (see also placeholder `{{ source:address }}` documented here: https://www.eclipse.org/ditto/basic-connections.html#source-enforcement
So an enforcement could look like:
```
{
  ""addresses"": [ ""my-mqtt-root-topic/+"" ],
  ""authorizationContext"": [""ditto:inbound-auth-subject""],
  ""enforcement"": {
    ""input"": ""{{ source:address }}"",
    ""filters"": [ ""my-mqtt-root-topic/{{ thing:id }}"" ]
  }
}
```
Under the assumption that a device always sends data to `my-mqtt-root-topic/<device-id>` and the broker enforces (e.g. via ACL in Mosquitto) that only that device may publish data to that topic.

I would also suggest that approach for MQTT5 - or alternatively get the broker to set a `device_id` header :)

**Validator and MQTT5Config**: The validator should be re-usable for MQTT5, yes.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU1NDg4NzYyOA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/550,https://api.github.com/repos/eclipse-ditto/ditto/issues/550,ditto,521128540,550,Add POST things with specified namespace to HTTP API,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,CLOSED,2019-11-11T18:55:08Z,2022-07-05T09:13:27Z,"When using a custom namespaces there is currently no way to get things in a namespace with uuid generated. In this case the client has to generate the uuid itself.

I propose a new option for the `POST /things` endpoint, `namespace` so one can create new things via `POST /things?namespace=my.cool.namespace`","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/550/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/550,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU1MjU3MzQ5Nw==,ditto,552573497,550,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-11-11T19:10:01Z,2019-11-11T19:10:01Z,Sounds good to me :+1:,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU1MjU3MzQ5Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/550,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85CXosC,ditto,1113492226,550,NA,Pranshu-G,85025189,Pranshu Grover,,NA,2022-04-29T16:14:45Z,2022-04-29T16:14:45Z,"Hi @thjaeckle 
I would like to look into this issue.
Any help/hint as to where do I dig in the codebase would be appreciated.
Thanks!","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85CXosC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/550,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Cc9kr,ditto,1114888491,550,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-05-02T13:34:50Z,2022-05-02T13:34:50Z,"Hi @Pranshu-G 
Sure, a start would be:
* POST /things is handled here: https://github.com/eclipse/ditto/blob/f52c275b8888f10ce3d685d1a7154a2ccb263875/gateway/service/src/main/java/org/eclipse/ditto/gateway/service/endpoints/routes/things/ThingsRoute.java#L174
* so in this method you could add another optional parameter ""namespace"": https://github.com/eclipse/ditto/blob/f52c275b8888f10ce3d685d1a7154a2ccb263875/gateway/service/src/main/java/org/eclipse/ditto/gateway/service/endpoints/routes/things/ThingsRoute.java#L287-L301
* inside there `ThingBuilder.generateRandomTypedThing()` is used: https://github.com/eclipse/ditto/blob/f52c275b8888f10ce3d685d1a7154a2ccb263875/gateway/service/src/main/java/org/eclipse/ditto/gateway/service/endpoints/routes/things/ThingsRoute.java#L318
* this would need an alternative, e.g. an overloaded `ThingBuilder.generateRandomTypedThingId(final CharSequence namespace)` which would create a UUID with a provided namespace
* and this would have to be used in the mentioned handling of ""POST"" requests

For connections in Ditto, this would also be required - but let's first get started with the easy part, the HTTP endpoint.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Cc9kr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/551,https://api.github.com/repos/eclipse-ditto/ditto/issues/551,ditto,521407003,551,Support for versioned Ditto documentation after 1.0.0,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2019-11-12T08:44:39Z,2020-01-31T12:25:51Z,"With release 1.0.0 Ditto should provide the documentation in a versioned way.

Proposal:
* the following chapters in the docs should be versioned:
   * Installation
   * Basic concepts
   * Architecture
   * HTTP API
   * Connectivity API
   * Client SDK
   * Ditto Protocol
* the other chapters should be valid across versions
* the Jenkins ""deploy documentation"" job should:
   * keep building the current version from master
       * goal: the links should be the same as currently in order to not mess up SEO and links from other sources to Ditto
   * additionally for each minor release branch (e.g. ""release-1.0"")
       * the docs are build on the release branch
       * the docs are placed in a subfolder with the minor release name (e.g.: ""1.0"") and that way published
* the navigation is enhanced to show a dropdown in order to select the version
   * default is ""current"", so the latest and greatest (probably unreleased) docs
      * show a disclaimer near the dropdown that not all documented features might be released
   * switching the version must have the effect that
      * all links in the navigation use the versioned doc
      * all links from document-to-document used the versioned doc
      * the current page is loaded with the selected version
* nice to have: searching is scoped to the selected version, but I would see that as optional

Maybe we can use a Jekyll plugin in order to help us solving this problem.
I found this one: https://github.com/justwriteclick/versions-jekyll
But it's questionable whether we can use that in our used theme.

See also for inspiration: https://justwriteclick.com/2017/07/30/investigating-jekyll-for-versioned-content/","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/551/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/551,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU4MDcxMjI3MA==,ditto,580712270,551,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-01-31T12:21:11Z,2020-01-31T12:21:11Z,"Fixed in rather naive first approach:
* the CI Job https://ci.eclipse.org/ditto/job/ditto-website-build-and-deploy/
    * checks out ""master"", builds the doc, puts it in folder /
    * checks out ""release-1.0"", builds the doc, puts it in folder 1.0/
* the added dropdown in PR #609 just prepends the ""1.0/"" path suffix when switching to the released version

For new minor releases, we have to
* adjust the Jekyll `_config.yml`, add the release
* enhance the CI job to checkout and build another doc branch

Problems with this approach:
* all resources are duplicated, even the ones which should not be versioned:
    * css
    * javascript scripts
    * blog posts
    * images
    * etc.
* SEO is probably not ideal because of the duplicated pages
* by default we have to select ""development"" as all new blog posts, etc. must be published under ""/"" folder
   * we could have fixed that by introducing a subfolder ""doc"" for all to-be-versioned docs, however would that have broken a lot of links to the Ditto documentation

The good thing about this approach is that 
* the search automatically searches on the selected version
* links should never be broken inside a single version","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU4MDcxMjI3MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/552,https://api.github.com/repos/eclipse-ditto/ditto/issues/552,ditto,525258262,552,Can Ditto be deployed in Kubernetes ?,BaerSy,27965673,BaerS,,CLOSED,2019-11-19T20:49:49Z,2019-11-20T12:51:41Z,Just want to know if Ditto can be deployed in K8S (not minikube)? Whether I can create eclipse-ditto-0.9.0.tgz from folder deployment/helm/eclipse-ditto? Is there any doc to introduce the Ditto deployment in k8S ? ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/552/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/552,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU1NTg2OTE2NQ==,ditto,555869165,552,NA,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,NA,2019-11-20T07:05:21Z,2019-11-20T07:05:21Z,"Since minikube is just a one-node kubernetes cluster, yes it can.
You could choose to deploy via Helm or via kubernetes descriptor files.
See https://github.com/eclipse/ditto/tree/master/deployment","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU1NTg2OTE2NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/552,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU1NTk5MDM5NQ==,ditto,555990395,552,NA,BaerSy,27965673,BaerS,,NA,2019-11-20T12:51:41Z,2019-11-20T12:51:41Z,"Thanks.  I saw kubernetes and helm require minikube. I don't want to use minikube, but regular kubernete that provided by the vendor, like AWS","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU1NTk5MDM5NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/554,https://api.github.com/repos/eclipse-ditto/ditto/issues/554,ditto,528029036,554,Extend Ditto Protocol to support management of policies,dguggemos,15028977,Dominik Guggemos,dominik.guggemos@bosch.io,CLOSED,2019-11-25T11:36:25Z,2020-03-19T13:02:38Z,"The [Ditto Protocol](https://www.eclipse.org/ditto/protocol-overview.html) currently supports CRUD operations on things. We will extend the protocol to also support CRUD operations on policies and its entries and subjects. The protocol can then be use via various [bindings](https://www.eclipse.org/ditto/protocol-bindings.html) e.g. WebSocket, AMQP1.0, etc. to manipulate policies ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/554/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/558,https://api.github.com/repos/eclipse-ditto/ditto/issues/558,ditto,528584603,558,Provide basic Grafana dashboards as starting point,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2019-11-26T09:08:24Z,2022-04-04T15:57:38Z,"In order to set up a monitoring for Eclipse Ditto, we would like to provide some basic Grafana dashboards which we will maintain as part of the Ditto codebase.

E.g. those could be:
- GarbageCollection metrics of all services
- Roundtrip times to MongoDB (as measured by akka-persistence-mongo plugin)
- JVM metrics (all we get from the default MBeans like thread count, etc.)
- ""Hot"" entities count: how many Things/Policies are currently loaded into memory","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/558/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/558,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyNzc2Njk1Ng==,ditto,627766956,558,NA,JulianFeinauer,17098762,Julian,,NA,2020-05-13T06:07:51Z,2020-05-13T06:07:51Z,As we are currently setting up our monitoring of our Ditto instances via prometheus we could help in this area. My colleague Marco (@MarcoNastasi ) will setup some boards this week and could share them here as initial setup. WDYT?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyNzc2Njk1Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/558,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84-6PAf,ditto,1055453215,558,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-03-01T13:39:56Z,2022-03-01T13:39:56Z,"Done.
Grafana dashboards are here: https://github.com/eclipse/ditto/tree/master/deployment/operations/grafana-dashboards","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84-6PAf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/558,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85A1XvV,ditto,1087732693,558,NA,HusoBey21,51913434,Hüseyin Can Şimşek,,NA,2022-04-04T15:57:38Z,2022-04-04T15:57:38Z,How to send datas by time interval via Ditto to Grafana or Prometheus?Can you help me?That is urgent.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85A1XvV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/559,https://api.github.com/repos/eclipse-ditto/ditto/issues/559,ditto,528594728,559,Support for conditional updates via APIs,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2019-11-26T09:26:54Z,2021-09-23T08:04:33Z,"In addition to the ""If-Match"" and ""If-None-Match"" headers already [in place](https://www.eclipse.org/ditto/httpapi-concepts.html#update-write-only-if-the-resource-already-exists) add more advanced mechanism to support updates based on a condition.

The idea is to use an [RQL filter](https://www.eclipse.org/ditto/basic-rql.html) in order to specify a ""condition"" when doing modifying API calls (e.g. a PUT on a thing via HTTP).

For HTTP the condition could be added as query param, e.g.:
```
PUT /api/2/things/org.eclipse.ditto:my-fancy-car-1/features/temperature/properties/value?condition=ne(features/temperature/properties/value,23.9)

body: 23.9
```
In words the above would mean:
> Only update the temperature value when it was changed from the value I provide: 23.9

With a more advanced JSON structure this can also enable conditional updates based on timestamps, e.g. when choosing the following JSON structure:
```json
{
  ""thingId"": ""org.eclipse.ditto:my-fancy-car-1"",
  ""policyId"": ""org.eclipse.ditto:my-fancy-car-1"",
  ""features"": {
    ""temperature"": {
      ""properties"": {
        ""value"": 23.9,
        ""timestamp"": ""2019-11-26T09:05:32Z""
      }
    }
  }
}
```

You are able to formulate a condition which takes the last modification ""timestamp"" into accout, e.g.:
```
PUT /api/2/things/org.eclipse.ditto:my-fancy-car-1/features/temperature/properties/value?condition=lt(features/temperature/properties/timestamp,""2019-11-26T09:00:32Z"")

body: 24.2
```
In words the above would mean:
> Only update the temperature value when it the last reported timestamp is older than 5 minutes.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/559/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/560,https://api.github.com/repos/eclipse-ditto/ditto/issues/560,ditto,529759943,560,Feature: Ditto External Authentication,rpahli,14889169,Rico Pahlisch,,CLOSED,2019-11-28T08:22:03Z,2020-04-27T07:43:00Z,"We are currently started using ditto with JWT authentication. As there is no header support for the javascript websocket client and ditto also only maps the sub claim to authorization subjects we want to use a proxy in front of ditto to authenticate the users. But there is currently no option to pass information like authorization subjects to ditto.
Therefore, we want to implement a new authentication provider which can handle the header information send from the proxy.

Would a PR ok for you?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/560/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/560,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU1OTU5OTkzMA==,ditto,559599930,560,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-11-28T20:42:54Z,2019-11-28T20:42:54Z,"Hi.

In fact there is an option to do that already.
The header ""x-ditto-dummy-auth"" may contain a pre authenticated subject eg injected by a nging proxy server.
While this was originally intended for development, the header name is still strange.
See also the nginx configuration on how to use it:
https://github.com/eclipse/ditto/blob/master/deployment/docker/nginx.conf

Could you check if that is sufficient for you?

Would be great if you could provide a better header name (maybe while still keeping the old one for compatability) via PR together with some documentation. 😉","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU1OTU5OTkzMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/561,https://api.github.com/repos/eclipse-ditto/ditto/issues/561,ditto,531809292,561,Enrich outgoing events/messages with additional fields from Thing,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2019-12-03T08:26:28Z,2020-02-03T11:57:25Z,"Currently, whenever a [change notification](https://www.eclipse.org/ditto/basic-changenotifications.html) / event is published (e.g. via WebSocket or the connectivity - AMQP, MQTT, Kafka, HTTP), only the actually changed values are contained in that published event.

So e.g. when only a temperature is updated (this is the Ditto Protocol message):
```json
{
  ""topic"": ""org.eclipse.ditto/my-fancy-car/things/twin/commands/modify"",
  ""path"": ""/features/temperature/properties/status/value"",
  ""value"": 23.5
}
```
Then a change event will only include exactly that information, as Ditto Protocol message:
```json
{
  ""topic"": ""org.eclipse.ditto/my-fancy-car/things/twin/events/modified"",
  ""path"": ""/features/temperature/properties/status/value"",
  ""value"": 23.5
}
```

There are however cases when there should be more information added to that event, e.g. when some additional metadata is needed when the event is processed.

In such cases it would of course work to do a HTTP GET on the Ditto HTTP API in order to fetch that additional information, but that causes additional roundtrips and additional latency which could be avoided.

So we would like to add the possibility to specify a further [field selector](https://www.eclipse.org/ditto/httpapi-concepts.html#with-field-selector) of additional thing data to select for all channels we send change notifications on:
* WebSocket
* Server Sent Events (SSEs)
* all connectivity types (AMQP, MQTT, ...)

For WebSocket that could e.g. look like:
```
START-SEND-EVENTS?extraFields=attributes,features/location
```

The actual change should/could be ""merged"" with the additionally selected fields, so the resulting Ditto Protocol events could look like:
```json
{
""topic"": ""org.eclipse.ditto/my-fancy-car/things/twin/events/modified"",
""path"": ""/features/temperature/properties/status/value"",
""value"": 23.5,
""extra"": {
  ""attributes"": {
    ""manufacturer"": ""ACME corp""
  },
  ""features"": {
    ""location"": { 
      ""longitude"": 42.123,
      ""latitude"": 3.54
    }
  }
}
}
```

Messages and live commands/events should also be able to be enriched.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/561/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/561,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU2MjI4MzMxOQ==,ditto,562283319,561,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-12-05T19:37:56Z,2019-12-05T19:37:56Z,"One additional idea in order to prevent many remoting roundtrips in the Ditto cluster:

We could cache Things at the Ditto ""edges"" (gateway, connectivity services).
Apply a similar approach to the policy cache in concierge:
* use the Caffeine cache + cache loader in order to load non resolved Things
* the Caffeine cache has to be scoped to a single connection or session
   * scoped to an ""auth subject"" and configured `extraFields`
* for the first event, when the ""enhanced Thing"" is not yet in the cache:
   * load the Thing with `extraFields` via concierge
   * save the result in the cache
   * enhance the data from the event
   * the cache entry needs to be aware of the Thing revision
* for all following events:
   * check if the revision number of the event is the expected ""next one"" compared to the cached Thing
      * if yes: 
         * all data is available, no further ""retrieve"" required --> enhance the fields from the cache
         * do also update the cached Thing with the data from the event
         * increse revision number by 1
      * if no: 
         * apparently the connection/session missed an event
         * remove the cache entry and load it again via cache loader

For the ""happy path"" case (which should happen >99% of the time), only very few additional roundtrips are required.

Ditto needs some more memory consumption at the edges which should however be much better than additional cluster roundtrips.

Only problem with that approach:
* Policy changes might cause that the enriched Thing is not seen the way it should be 
   * that could be fixed by subscribing also for Policy of the Thing's Policy
   * additionally the cache entry could be evicted after a fix amount of time","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU2MjI4MzMxOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/561,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU2NjkzODYzNw==,ditto,566938637,561,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2019-12-18T08:55:29Z,2019-12-18T08:55:29Z,This is a wonderful new feature - I'm currently caching things on the micro-service level to get meta information such as the definition field when processing incoming messages based on information from the model. This would make it much more easier!,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU2NjkzODYzNw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/561,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU2NjkzOTM1MQ==,ditto,566939351,561,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-12-18T08:57:41Z,2019-12-18T08:57:41Z,"Cool, nice to hear that :)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU2NjkzOTM1MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/561,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3MzcyNTEyMg==,ditto,573725122,561,NA,BobClaerhout,3315222,Bob Claerhout,,NA,2020-01-13T15:40:26Z,2020-01-13T15:40:26Z,Nice feature! We are looking forward to this as well!,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3MzcyNTEyMg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/567,https://api.github.com/repos/eclipse-ditto/ditto/issues/567,ditto,535587571,567,Maximum length of Thing and Policy IDs,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,CLOSED,2019-12-10T09:03:31Z,2019-12-11T13:41:19Z,"Right now the length of Thing and Policy IDs is not limited. This could cause issues, if someone decides to use an insanely long ID. 
I suggest to limit the length of those IDs to 256, as I think longer IDs should not be necessary and we should not have problem handling IDs of this length.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/567/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/567,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU2NDU0NTQ2NA==,ditto,564545464,567,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-12-11T13:41:19Z,2019-12-11T13:41:19Z,Closed via #568 ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU2NDU0NTQ2NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/570,https://api.github.com/repos/eclipse-ditto/ditto/issues/570,ditto,536318739,570,Javascript payload mapping misses status parameter,jokraehe,12512262,Johannes Schneider,johannes.schneider@bosch.io,CLOSED,2019-12-11T11:46:02Z,2019-12-11T15:02:39Z,Status is one field of a ditto protocol message which could be relevant for payload mapping.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/570/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/575,https://api.github.com/repos/eclipse-ditto/ditto/issues/575,ditto,537423490,575,Extend Ditto Protocol to support searching for things,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2019-12-13T08:53:27Z,2020-04-16T10:57:44Z,"The [Ditto Protocol](https://www.eclipse.org/ditto/protocol-overview.html) currently supports CRUD operations on things, but not yet [searching for things](https://www.eclipse.org/ditto/basic-search.html).

We need to enhance the Ditto Protocol in order to enable searching via the various [bindings](https://www.eclipse.org/ditto/protocol-bindings.html) (WebSocket, AMQP1.0) and also in the Ditto Java client which makes use of the Ditto Protocol.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/575/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/575,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU4MDc3NTU3MQ==,ditto,580775571,575,NA,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,NA,2020-01-31T15:19:10Z,2020-01-31T15:19:10Z,"@ottlukas and other potential stakeholders: We are starting development on a Ditto protocol extension for the search function. The current idea is to start a finite or infinite (reactive) stream of search results on request over any asynchronous channel (Websocket, AMQP or MQTT). Feel free to comment how you want the API to look like, on the protocol level or for the Ditto java and javascript clients.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU4MDc3NTU3MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/576,https://api.github.com/repos/eclipse-ditto/ditto/issues/576,ditto,538624380,576,1.0.0 migration script broke database,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,CLOSED,2019-12-16T20:04:10Z,2019-12-17T09:52:20Z,"After running the migration script from the [1.0.0 release notes](https://www.eclipse.org/ditto/release_notes_100.html#migration-notes) my database stopped working, or rather the ditto things service complained about 'journal_tag_index' being a duplicate on this database.

First problem I encountered was, that I had to split the script up into things and policies scripts and run them on the respective databases, since the script itself would otherwise just run on test. I suppose it's written for a one-database-for-all scenario? In the docker-compose scenario however, each service uses it's own db in the mongodb instance. That's actually the way the script of the initial commit for the script works (which is not linked in the release notes).

Overall I was quite confused on how this migration works honestly.

My setup
---

I started using ditto at version 0.8.0 and did a migration on 0.9.0. It could be that I failed in doing so correctly which caused the collections `_journal` and `_snaps` to already exist. 

I dropped `things.things_journal`, `things.things_snaps`, `policies.policies_journal` and `policies.policies_snaps` before running this migration, so the migration would work. Propably the indexes, although not shown, were/are still there? The strange thing now is, that the index `journal_tag_index` seems to exist, but is not shown when executing `_journal.getIndexes()`.

Workaround
---

In my case I removed the 'journal_tag_index' index from `things.things_journal` and `policies.policies_journal` respectively.

Implementation
---

I'm not sure yet and quite insecure if this is just a quirk in my setup or a general problem which would require a broader discussion and real solution.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/576/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/576,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU2NjI0NTM0OA==,ditto,566245348,576,NA,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,NA,2019-12-16T21:12:36Z,2019-12-16T21:12:36Z,"Thanks for reporting! The script is fixed in #577. Yes, dropping `journal_tag_index` should fix the issue; I forgot to create it ""sparse"". The script should definitely account for or at least document the case of multi-database setup.

The script copies all documents in suffixed event journals and snapshot stores. To avoid wasting bandwidth transmitting most of the database, the script uses MongoDB's server-side-scripting method `mapReduce`. Since `mapReduce` produces documents in a fixed format not compatible with the persistence plugin, a follow-up aggregation step is needed to fix the document format. Input and output collection name is the same for the aggregation step so that MongoDB can optimize for disk space.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU2NjI0NTM0OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/579,https://api.github.com/repos/eclipse-ditto/ditto/issues/579,ditto,539187083,579,"Wording in documentation ""list of properties""?",boaks,10937819,Achim Kraus,achim.kraus@cloudcoap.net,CLOSED,2019-12-17T16:47:01Z,2020-01-02T08:23:54Z,"According [Feature properties](https://www.eclipse.org/ditto/basic-feature.html#feature-properties) `The data related to Features is managed in form of a list of properties.`

The properties seems to be named, so isn't that rather a map?
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/579/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/579,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU2NjY4OTA3NQ==,ditto,566689075,579,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-12-17T18:27:51Z,2019-12-17T18:27:51Z,"It's not a list in the sense of a Json array, correct.
So one could argue that the docs should speak about a ""named list"" of properties.

Contributions are welcome. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU2NjY4OTA3NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/580,https://api.github.com/repos/eclipse-ditto/ditto/issues/580,ditto,539547407,580,Undocumented breaking change in OpenID Connect configuration,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,CLOSED,2019-12-18T09:06:32Z,2019-12-18T14:50:41Z,"The Ditto Release 1.0.0 introduced a breaking change in the OpenID Connect Configuration by adding an `https://` in-front of the configured URLs.

Configuration option: `-Dditto.gateway.authentication.oauth.openid-connect-issuers.myprovider`

In Ditto 1.0.0-M1a it still worked to have a URL with `https://auth.some.domain`. After the upgrade the following stack trace is thrown:

```
2019-12-18 09:56:11,124 WARN  [] o.e.d.s.g.s.a.TimeMeasuringAuthenticationProvider  - Failed to unwrap DittoRuntimeException from Throwable!
gateway_1        | java.util.concurrent.CompletionException: akka.http.scaladsl.model.IllegalUriException: Illegal URI reference: Invalid input '/', expected userinfo-char, pct-encoded, '@' or port (line 1, column 15): https://https://auth.some.domain/auth/realms/arealm/.well-known/openid-configuration
gateway_1        |               ^
gateway_1        | 	at java.util.concurrent.CompletableFuture.encodeThrowable(Unknown Source)
gateway_1        | 	at java.util.concurrent.CompletableFuture.completeThrowable(Unknown Source)
gateway_1        | 	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
gateway_1        | 	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
gateway_1        | 	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
gateway_1        | 	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
gateway_1        | 	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
gateway_1        | 	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
gateway_1        | Caused by: akka.http.scaladsl.model.IllegalUriException: Illegal URI reference: Invalid input '/', expected userinfo-char, pct-encoded, '@' or port (line 1, column 15): https://https://auth.some.domain/auth/realms/arealm/.well-known/openid-configuration
```

Fix
---

Either this has to be documented in the migration notes, or if this is considered a bug, it should be fixed by also accepting URLs containing https://. Depending on the solution the docs have to be searched and updated accordingly, since in some places the URLs contain `https://` prefix, which does not work at this moment.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/580/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/580,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU2NzAwNzk1OA==,ditto,567007958,580,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2019-12-18T12:15:44Z,2019-12-18T12:15:44Z,"Did you find other places where this must be changed in our docs?
You mentioned:
>  Depending on the solution the docs have to be searched and updated accordingly, since in some places the URLs contain https:// prefix, which does not work at this moment.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU2NzAwNzk1OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/585,https://api.github.com/repos/eclipse-ditto/ditto/issues/585,ditto,541933868,585,Support for GraphQL,ottlukas,19743877,otluk,otluk@apache.org,CLOSED,2019-12-23T23:27:36Z,2020-01-02T08:34:14Z, As REST is often over- and underfetching of Data. GraphQL would enable to query / CRUD specific values already from API. So GraphQL support could come in handy. This is just a question if GraphQL support has been considered and what the ideas / plans behind it could support Eclipse Ditto supporting GraphQL. ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/585/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/585,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3MDE0Mjc1NA==,ditto,570142754,585,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-01-02T08:23:27Z,2020-01-02T08:23:27Z,"Hi @ottlukas 

We already had a look at GraphQL.

And as Ditto does not ""know""/""enforce"" a data schema to the managed things (only stuff like ""attributes"", ""features"" is part of the given Ditto schema) and the user may use arbitrary JSON, with GraphQL there would be the need to always provide a GraphQL schema first prior in doing the powerful queries. That's why I personally think it's too complicated and the benefits from it are too few in order to be of value to the Ditto project.

What you describe with ""over- and underfetching of Data"" is already handled in Ditto quite well, see:
* [Partial updates](https://www.eclipse.org/ditto/httpapi-concepts.html#partial-updates)
* [Partial requests](https://www.eclipse.org/ditto/httpapi-concepts.html#partial-requests)
* [Partial requests with ""fields"" selector](https://www.eclipse.org/ditto/httpapi-concepts.html#with-field-selector)

Based on those concepts, Ditto will further improve on data retrival.
E.g. currently we are working on #561 which will make use of the ""fields"" selector syntax in order to include additional data when e.g. publishing change notifications via WebSocket or connections to brokers.

For what - in addition to the mentioned capabilities of partial updates/responses - do you think a GraphQL API would be helpful for Ditto?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3MDE0Mjc1NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/585,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3MDE0NDU4MA==,ditto,570144580,585,NA,ottlukas,19743877,otluk,otluk@apache.org,NA,2020-01-02T08:34:14Z,2020-01-02T08:34:14Z,"Hi @thjaeckle 

Thank you for you response this was exactly the answer i was asking for! :)

The Partial requests is and [https://github.com/eclipse/ditto/issues/561](url) was exactly the questions I had.

So GraphQL API would as you answered not be needed and would just produce a lot of development effort which would not have more benefits compared to the existing partial request handling.

Thanky! 💯 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3MDE0NDU4MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/586,https://api.github.com/repos/eclipse-ditto/ditto/issues/586,ditto,544622578,586,Support consuming messages from Apache Kafka in Ditto connections,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2020-01-02T15:24:02Z,2022-10-20T05:18:30Z,"Currently Ditto can only [publish](https://www.eclipse.org/ditto/connectivity-protocol-bindings-kafka2.html) messages towards Apache Kafka, but cannot consume from Kafka.

In many architectures Apache Kafka is used at the edge (e.g. as mentioned [here](www.kai-waehner.de/blog/2020/01/01/apache-kafka-edge-computing-industrial-iot-retailing-logistics/)) which would require Device messages also be consumed via Ditto Connection ""sources"".","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/586/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/586,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYwNDQxOTQ0NQ==,ditto,604419445,586,NA,kaiwaehner,813987,Kai Waehner,megachucky@gmail.com,NA,2020-03-26T13:05:16Z,2020-03-26T13:05:16Z,"Looking forward to this feature.

As soon as available, I will build a demo and use this is a lightweight but scalable solution for a Digital Twin architecture 
(relates to my [Digital Twin architectures with Apache Kafka](https://www.kai-waehner.de/blog/2020/03/25/architectures-digital-twin-digital-thread-apache-kafka-iot-platforms-machine-learning/))","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYwNDQxOTQ0NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/586,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc3NzgyNzk0Mg==,ditto,777827942,586,NA,memelet,22981,Barry Kaplan,,NA,2021-02-11T22:14:21Z,2021-02-11T22:14:21Z,Can someone leave a hint as to where in the codebase this would be added? ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc3NzgyNzk0Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/586,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc3ODAyNDcwMA==,ditto,778024700,586,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-02-12T07:18:09Z,2021-02-12T07:18:09Z,"@memelet that would have to be added to the following package:
https://github.com/eclipse/ditto/tree/master/services/connectivity/messaging/src/main/java/org/eclipse/ditto/services/connectivity/messaging/kafka

There we need:
* a `KafkaConsumerActor` extending `BaseConsumerActor`
* this consumer must be started in `KafkaClientActor.startConsumerActors(ClientConnected)` (protected class to be overwritten)
* have to think about consumer offset management (where and how to persist offsets)

The existing consumers for other protocols should give a good example on what needs to be implemented in the consumer:
* [AmqpConsumerActor](https://github.com/eclipse/ditto/blob/master/services/connectivity/messaging/src/main/java/org/eclipse/ditto/services/connectivity/messaging/amqp/AmqpConsumerActor.java)
* [RabbitMQConsumerActor](https://github.com/eclipse/ditto/blob/master/services/connectivity/messaging/src/main/java/org/eclipse/ditto/services/connectivity/messaging/rabbitmq/RabbitMQConsumerActor.java)
* [AbstractMqttConsumerActor](https://github.com/eclipse/ditto/blob/master/services/connectivity/messaging/src/main/java/org/eclipse/ditto/services/connectivity/messaging/mqtt/hivemq/AbstractMqttConsumerActor.java)

The Ditto team has the Kafka consumer topic on its short- to mid-term agenda - as Eclipse Hono now also supports Kafka since the just released version 1.6, that will be the future of connecting Ditto and Hono.

I am however not yet sure if the Kafka consumer will make it in the upcoming Ditto 2.0 release (which we target for March/April).

Are you planning to start working on the Kafka consumer @memelet or is a time horizon of 2-3 months until the Ditto committers start to work on that sufficient for you?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc3ODAyNDcwMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/586,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NzU4NDI3OA==,ditto,787584278,586,NA,memelet,22981,Barry Kaplan,,NA,2021-03-01T02:02:43Z,2021-03-01T02:02:43Z,"@thjaeckle The 2-3 month range is probably fine for us. But we need to do some spikes to see how ditto will handle our loads. We ingest a many MB\s across thousands of industrial devices. Right now we persist that data in bulk and publish some of it live for clients via activemq over websockets. That data also flows into various streaming pipelines, of which some output would be routed back to ditto. 

Could be that we will need to filter/downsample/denounce some of the data before it hits ditto. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NzU4NDI3OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/586,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Mld3Z,ditto,1284890073,586,NA,rajkraleti,77378332,,,NA,2022-10-20T04:00:36Z,2022-10-20T04:00:36Z,"Hello All, 

I have tried integration of Ditto with Apache Kafka by publishing the Ditto Protocol format messages in Kafka & Created a connection to apache Kafka from using Ditto connections as a source(consumer side) , How ever Ditto is not reading any messages , Where can I debug this by checking logs or something , Can we have an example or demonstration for Apache Kafka Integration with eclipse Ditto.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Mld3Z/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/586,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Mlrar,ditto,1284945579,586,NA,DerSchwilk,41327268,David Schwilk,,NA,2022-10-20T05:18:30Z,2022-10-20T05:18:30Z,@rajkraleti answered in https://github.com/eclipse/ditto/issues/1515,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Mlrar/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/591,https://api.github.com/repos/eclipse-ditto/ditto/issues/591,ditto,548561077,591,Connecting Locally running Ditto with Locally running Hono(Helm based deployment),,,,,CLOSED,2020-01-12T12:04:40Z,2020-01-13T06:14:06Z,"sudo curl -i -X POST http://$REGISTRY_IP:28080/v1/tenants
_**Then creating variable and storing my id of tenant in it**_
export MY_TENANT=335280ce-13c0-470b-9bd4-0f8743d17fea

curl -i -X POST http://$REGISTRY_IP:28080/v1/devices/$MY_TENANT
**_then creating variable and storing my id of device in it_**
export MY_DEVICE=85545803-0bf7-4e76-83dd-5fb075d8500f

export MY_PWD=my-pwd
curl -i -X PUT -H ""content-type: application/json"" --data-binary '[{
""type"": ""hashed-password"",
""auth-id"": ""'$MY_DEVICE'"",
""secrets"": [{
""pwd-plain"": ""'$MY_PWD'""
}]
}]' http://$REGISTRY_IP:28080/v1/credentials/$MY_TENANT/$MY_DEVICE

export AMQP_NETWORK_IP=$(sudo kubectl get service hono-dispatch-router-ext --
output='jsonpath={.status.loadBalancer.ingress[0].ip}' -n hono)

_**I didnot started the consumer Downstream Application**_

curl -X POST -i -u ditto:foobar -H 'Content-Type: application/json' -d '{
""targetActorSelection"": ""/system/sharding/connection"",
""headers"": {
""aggregate"": false
},
""piggybackCommand"": {
""type"": ""connectivity.commands:testConnection"",
""connection"": {
""id"": ""hono-sandbox-connection-1"",
""connectionType"": ""amqp-10"",
""connectionStatus"": ""open"",
""uri"": ""amqp://consumer%40HONO:verysecret@$AMQP_NETWORK_IP:15672"",
""failoverEnabled"": true,
""sources"": [{
""addresses"": [
""telemetry/$MY_TENANT"",
""event/$MY_TENANT""
],
""authorizationContext"": [""nginx:demo5""]
}]
}
}
}' http://localhost:8080/devops/piggyback/connectivity?timeout=8000
Enter host password for user '-u':
***on localhost:8080 my ditto is running***

**_Errors:_**
curl: (35) error:1408F10B:SSL routines:ssl3_get_record:wrong version number
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/591/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/591,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3MzQxMzM1Ng==,ditto,573413356,591,NA,JulianFeinauer,17098762,Julian,,NA,2020-01-12T13:03:56Z,2020-01-12T13:03:56Z,"Could you do a `echo $AMQP_NETWORK_IP` after the command `export AMQP_NETWORK_IP=$(sudo kubectl get service hono-dispatch-router-ext --
output='jsonpath={.status.loadBalancer.ingress[0].ip}' -n hono)`, what does it show?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3MzQxMzM1Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/591,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3MzQ0MzAxMg==,ditto,573443012,591,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-01-12T18:25:37Z,2020-01-12T18:25:37Z,"The hostname in the URL of the curl request is wrong:
https://$MY_TENANT/devops/piggyback/connectivity?timeout=8000

Pretty sure that the variable resolves to a uuid which is no valid hostname. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3MzQ0MzAxMg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/591,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3MzUwMTc0MA==,ditto,573501740,591,NA,,,,,NA,2020-01-13T04:15:33Z,2020-01-13T04:15:33Z,"> Could you do a `echo $AMQP_NETWORK_IP` after the command `export AMQP_NETWORK_IP=$(sudo kubectl get service hono-dispatch-router-ext -- output='jsonpath={.status.loadBalancer.ingress[0].ip}' -n hono)`, what does it show?

echo $AMQP_NETWORK_IP
10.96.209.251
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3MzUwMTc0MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/591,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3MzUwNzAwNw==,ditto,573507007,591,NA,,,,,NA,2020-01-13T04:49:27Z,2020-01-13T04:49:27Z,"> The hostname in the URL of the curl request is wrong:
> https://$MY_TENANT/devops/piggyback/connectivity?timeout=8000
> 
> Pretty sure that the variable resolves to a uuid which is no valid hostname.

i tried to use the host where ditto is installed i.e. localhost:8080

it gave me the error:
curl: (35) error:1408F10B:SSL routines:ssl3_get_record:wrong version number","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3MzUwNzAwNw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/591,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3MzUyMDQ3MA==,ditto,573520470,591,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-01-13T06:05:15Z,2020-01-13T06:05:15Z,"> it gave me the error:
curl: (35) error:1408F10B:SSL routines:ssl3_get_record:wrong version number

You don't have a technical background regarding http and web services, do you? 
Use http instead of https.

I'll close this ""issue"" as we don't want to use github issues for very basic understanding questions. 
Please use stackoverflow for that. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3MzUyMDQ3MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/591,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3MzUyMjI4Ng==,ditto,573522286,591,NA,,,,,NA,2020-01-13T06:14:06Z,2020-01-13T06:14:06Z,"HTTP/1.1 401 Unauthorized
Server: nginx/1.13.12
Date: Mon, 13 Jan 2020 06:09:59 GMT
Content-Type: text/plain; charset=UTF-8
Content-Length: 38
Connection: keep-alive
X-Frame-Options: SAMEORIGIN
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Basic realm=""DITTO-DEVOPS"",charset=UTF-8
Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS
Access-Control-Allow-Credentials: true
Access-Control-Allow-Headers: Accept,Authorization,Cache-Control,Content-Type,Content-Length,DNT,If-Match,If-Modified-Since,If-None-Match,Keep-Alive,Origin,User-Agent,X-Requested-With

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3MzUyMjI4Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/592,https://api.github.com/repos/eclipse-ditto/ditto/issues/592,ditto,548582415,592,Use Apache IoTDB as possible Backend / Datastore for Ditto,JulianFeinauer,17098762,Julian,,CLOSED,2020-01-12T15:05:01Z,2020-01-13T08:39:48Z,"Hi folks,

this issue was initially raised by @ottlukas and he was asking if it could be possible to store ""telemetry"" data in Apache IoTDB (http://iotdb.apache.org/ / https://github.com/apache/incubator-iotdb).
I agree on that with Lukas, especially if one has features / properties that sends updates with high frequency (seconds or subsecond frequency).
I guess one could stay on MongoDB for long (as it can scale) but at what price if one is often interested, e.g. in showing the graph of a property as timeseries.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/592/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/592,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3MzQyNDA0NQ==,ditto,573424045,592,NA,JulianFeinauer,17098762,Julian,,NA,2020-01-12T15:06:58Z,2020-01-12T15:06:58Z,"I also had a quick look into the code / database ""structure"" in MongoDB.
It seems to me that Ditto uses event sourcing and the database which could be moved to IoTDB is the journals database.
Although I think the full functionality cannot easily migrated to IoTDB (as it stores lots of metadata) one could think about a ""replication"" of that collection to an IoTDB instance which is then used, e.g. for visualization in grafana or other things.
Then one could even get rid of this collection or clear it (if one keeps the snapshots) and still have full ""telemetry"" informtaion.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3MzQyNDA0NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/592,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3MzUzNzY1Mw==,ditto,573537653,592,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-01-13T07:23:37Z,2020-01-13T07:23:37Z,"Hi Julian.

Replacing MongoDB with IoTDB will not work, We use MongoDB as
* EventSourcing journal
* EventSourcing snapshot store
* Index for Ditto's search feature

So in order to get Ditto with minimal dependencies, a DB would have to cover all of these.
I don't see that IoTDB is a match for that as it focuses on time series.

What could make more sense is what we started discussing in #545 
Ditto currently can't deliver history for its ""thing data"". For that it would be very cool to build e.g. a facade to IoTDB with Ditto where Ditto still enforces authorization, API access, etc.

That could also be what you meant with ""replication"" of the data which would be a best practive for CQRS which we also apply e.g. for our search index.
A new ""ditto-history"" microservice could subscribe to `ThingEvent`s in Ditto's cluster (those are the ones you saw in the event journal collection) and for each event update all of the affected datapoints in an IoTDB instance.
It would also enabled querying the data from IoTDB making sure that only authorized users (via Ditto's policies) have access to the historical data.

Does this make sense?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3MzUzNzY1Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/592,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3MzU0MzU1OQ==,ditto,573543559,592,NA,JulianFeinauer,17098762,Julian,,NA,2020-01-13T07:48:11Z,2020-01-13T07:48:11Z,"Good Morning @thjaeckle and thanks for the quick reply. You describe pretty detailed what I tried to describe, exactly, yes : )
On one hand one could keep dittos regular functionality and change nothing in the core (I agree its not the use case of IoTDB) but on the other hand one could get a nice representation of ""property changes"" as traces (with all benefits like Graphing, etc).
I would be happy to work together with you on this topic if you already have some ideas! :)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3MzU0MzU1OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/592,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3MzU1OTAyMw==,ditto,573559023,592,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-01-13T08:39:47Z,2020-01-13T08:39:47Z,"I would suggest closing this issue in favor of #545 then .. maybe you could add your thoughts to #545 

I indeed have some ideas (also already written some done in #545 ;)), e.g. in order to use ""tags"" (don't know if there is an equivalent in IoTDB) in order to tag data with authorization information.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3MzU1OTAyMw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/593,https://api.github.com/repos/eclipse-ditto/ditto/issues/593,ditto,549360678,593,Test “Command & Control” feature failed,aaron0609,49503795,,,CLOSED,2020-01-14T06:27:30Z,2020-01-28T14:07:20Z,"I'm following the steps in [Using Eclipse Hono's Command&Control with Eclipse Ditto](https://www.eclipse.org/ditto/2018-12-05-example-command-and-control.html)
But I'm not using the sandbox. I created the tenant ""gz"" with device-id ""gz:teapot"" in hono while I created a new thing with namespace ""gz"" & thing-id ""teapot"" using my default ditto nginx user.

Then I created the connection as the following:
`_create = {
    ""targetActorSelection"": ""/system/sharding/connection"",
    ""headers"": {
      ""aggregate"": ""false""
    },
    ""piggybackCommand"": {
        ""type"": ""connectivity.commands:createConnection"",
        ""connection"": {
            ""id"": connection_id,
            ""connectionType"": ""amqp-10"",
            ""connectionStatus"": ""open"",
            ""failoverEnabled"": True,
            ""uri"": ""amqps://hono:*******@hono-messaging.*******.com:5671"",
            ""sources"": [
                {
                    ""addresses"": [
                        ""control/{}/replies"".format(tenant_id)
                    ],
                    ""authorizationContext"": [
                        ""nginx:ditto""
                    ],
                    ""headerMapping"": {
                        ""correation-id"": ""{{ header:correlation-id }}"",
                        ""status"": ""{{ header:status }}"",
                        ""content-type"": ""{{ header:content-type }}""
                    }
                }
            ],
            ""targets"": [{
                ""address"": ""control/{0}/{{ thing:name }}"".format(tenant_id),
                ""authorizationContext"": [
                     ""nginx:ditto""
                    ],
                ""topics"": [""_/_/things/live/messages""],
                ""headerMapping"": {
                     ""message-id"": ""{{ header:correlation-id }}"",
                     ""reply-to"": ""control/gz/replies"",                                                                                                                            
                   }                                                                                                                                                                                  
                }]                                                                                                                                                                                    
            } 
        }
    }`

Then I started the [Signal availability of device](https://www.eclipse.org/ditto/2018-12-05-example-command-and-control.html#signal-availability-of-device) and send the message using the following command:
`curl -i -X POST 'https://ditto-test.*******.com/api/2/things/gz:teapot/inbox/messages/brew?timeout=60' \
     -u ditto:****** \
     -H 'x-correlation-id: command-and-control' \
     -d '{""targetTemperature"":85}'`
Finally I see the error:
`{
  ""status"": 503,
  ""message"": ""Failed to send message: Timed out waiting for credit to send Message"",
  ""description"": ""Sending the message to an external system failed, please check if your connection is configured properly and the target system is available and consuming messages."",
  ""error"": ""connectivity:message.sending.failed""
}`

I checked the document but found nothing about this error, do you have any idea on this?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/593/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/593,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3NDAzOTk1MQ==,ditto,574039951,593,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-01-14T07:23:25Z,2020-01-14T07:23:25Z,"`Failed to send message: Timed out waiting for credit to send Message`
This is an error produced by Eclipse Hono or the AMQP 1.0 network Hono is using.

That happens when there is no device connected to Hono subscribed for receiving commands.
Did you subscribe our device via MQTT to Hono commands?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3NDAzOTk1MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/593,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3OTI2MTgxMQ==,ditto,579261811,593,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-01-28T14:07:20Z,2020-01-28T14:07:20Z,Closing due to: no more input on that ..,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3OTI2MTgxMQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/599,https://api.github.com/repos/eclipse-ditto/ditto/issues/599,ditto,552447769,599,Overloaded protocol adapter methods put live signals in the TWIN channel,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,CLOSED,2020-01-20T18:16:02Z,2020-03-17T08:54:17Z,"These methods produce twin signals even when given a live signal as argument:
```
ProtocolAdapter#toAdaptable(Event)
ProtocolAdapter#toAdaptable(Command)
```
There may be more. This is not intuitive.

Propose to deprecate the overloaded methods and leave only
```
ProtocolAdapter#toAdaptable(Signal)
```
All other `toAdaptable` methods should simply delegate to this method. `ProtocolAdapter#toAdaptable(Signal)` does put signals in the correct channel.

What do you guys think?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/599/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/599,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3NjU4MzQyMA==,ditto,576583420,599,NA,jufickel-b,17162397,Juergen Fickel,,NA,2020-01-21T09:00:56Z,2020-01-21T09:00:56Z,IMHO we should have a deeper look at the interface. The implementation has many chains of 'instanceof' checks which indicates possible abstraction failure.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3NjU4MzQyMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/605,https://api.github.com/repos/eclipse-ditto/ditto/issues/605,ditto,556068329,605,Add devOps api function to get a list of all configured connections,patrickse,2691200,Patrick Sernetz,,CLOSED,2020-01-28T09:00:03Z,2021-02-24T08:55:02Z,"According to @thjaeckle there´s currently no way to use the API to list all the configured connections. The only way to get an overview is querying the connectivity mongodb.

I think, adding a new devOps command to list all configured connections would make the whole connectiviy-api more feature complete and makes ditto connections management a lot easier.

Maybe something like this...

```json
{
    ""targetActorSelection"": ""/system/sharding/connection"",
    ""headers"": {
      ""aggregate"": false
    },
    ""piggybackCommand"": {
        ""type"": ""connectivity.commands:listConnections""
    }
}
```

The response could contain an array of elements with the following properties:
 - connectionId
 - connectionStatus
 - createdOn

That is probably enough to identify the configured connections at the moment.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/605/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/605,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3OTIxMTczMQ==,ditto,579211731,605,NA,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,NA,2020-01-28T11:58:13Z,2020-01-28T11:58:13Z,"I suggest to name this command ""connectivity.commands:retrieveConnections"" to match the name of RetrieveThings for example.

Regarding the content of the response I'd either put only connectionIds in the response or the full JSON of all connections.

The latter would result in a big message, which could be a problem because of the maximum message size in the ditto cluster.

Put these selected fields in the response seems a bit randomly chosen to me.

Would it be enough for your use case to get a list of all connection IDs which you could then retrieve one by one?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3OTIxMTczMQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/605,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3OTI5ODY2Nw==,ditto,579298667,605,NA,patrickse,2691200,Patrick Sernetz,,NA,2020-01-28T15:24:37Z,2020-01-28T15:24:37Z,"I am fine with the name of the command :) good point to reuse the naming scheme. 

And I am pretty sure returning the complete connections details during `retrieveConnections` will make things much more complicated. ;) 

Returning just the `connectionId` is ok for me. 👍 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3OTI5ODY2Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/605,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3OTMwMjk3NA==,ditto,579302974,605,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-01-28T15:33:09Z,2020-01-28T15:33:09Z,"@Yannic92 I'm not sure if `retrieveConnections` would lead to confusions as `retrieveThings` requires a list of IDs passed in and as a result you get the actual payload of the ThingIDs you asked for.

So maybe intentionally choosing another term like
* listConnectionIds
* findConnectionIds
etc. could be beneficial.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU3OTMwMjk3NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/605,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU4MDEwNDQwMg==,ditto,580104402,605,NA,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,NA,2020-01-30T06:34:48Z,2020-01-30T06:34:48Z,"@thjaeckle Valid point. RetrieveAttributes, RetrieveFeatures, RetrieveThings are all commands that receive something based on a given information.
I'm don't want to pedantic about naming, just one last suggestion is `RetrieveAllConnectionIds`.
It is consistent with the ""Retrieve""-naming scheme and it indicates that it contains all existing connection IDs.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU4MDEwNDQwMg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/605,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU5OTI0MzM1Mw==,ditto,599243353,605,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-03-15T17:57:54Z,2020-03-15T17:57:54Z,"When implementing this, getting all ""connection IDs"" should be queried by using the Akka persistene read journal `readJournal.currentPersistenceIds();`, see:
https://doc.akka.io/docs/akka/2.5.30/persistence-query.html#persistenceidsquery-and-currentpersistenceidsquery

The new `RetrieveAllConnectionIds` command should be handled by e.g. a new actor in the ""connectivity"" service.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU5OTI0MzM1Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/611,https://api.github.com/repos/eclipse-ditto/ditto/issues/611,ditto,558139094,611,Support for end-to-end business acknowledges on operations,jufickel-b,17162397,Juergen Fickel,,CLOSED,2020-01-31T13:41:40Z,2020-04-27T07:44:16Z,"Right now Ditto lacks functionality that allows to know and make sure that API calls and message processing is ""successful"" in an end-to-end manner.
Successful means that all individual steps are executed successfully within Ditto but also within subscribers to events that will be informed about the operation.
This way Ditto approaches an at-least-once semantic of execution.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/611/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/616,https://api.github.com/repos/eclipse-ditto/ditto/issues/616,ditto,562615996,616,Improve websocket message queues,jokraehe,12512262,Johannes Schneider,johannes.schneider@bosch.io,CLOSED,2020-02-10T14:56:02Z,2020-04-16T10:42:05Z,"In the current implementation a websocket session handles response correlation by putting messages, which require a response by setting the response-required header, in a list. This list is limited and elements are only removed if a response is dispatched.
Messages without response-required header are treated as if they require a response, so if one makes a mistake and forgets the header Ditto won't respond at all when the correlation list is full.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/616/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/616,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYwNDk5MDA4Nw==,ditto,604990087,616,NA,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,NA,2020-03-27T13:06:46Z,2020-03-27T13:06:46Z,"I don't think the change is an API break because the user does not get any information why or where the message stops. He will question the network transport, all the proxies in between and the websocket client before checking the back-end, which doesn't even log anything in this case (okay that was me).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYwNDk5MDA4Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/621,https://api.github.com/repos/eclipse-ditto/ditto/issues/621,ditto,570667660,621,"Full cluster failure - AskTimeoutException, IndexOptionsConflict, multiple timeouts",w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,CLOSED,2020-02-25T15:51:15Z,2020-02-25T18:34:51Z,"At the moment I'm observing re-occuring AskTimeoutExceptions in the concierge service which causes all other services and requests from both connecitivty as well as gateway to fail.

I have no idea whats going on and if this might be a general problem of the cluster degrading over time or if it's just my setup that is screwed up.

This error is accompanied by a lot of time out error throughout the cluster.

The gateway server is responding with `No response within server request timeout (<PT1M>), shutting actor down.` and nginx follows with 503 for the original PUT request.

The things service emitts strange messages with type SudoStreamModifiedEntities and start and end dates somewhere in 2001.

What is also alarming is a mongodb error thrown in the things service `IndexOptionsConflict: things_snaps_index already exists with different options`

I noticed that it started working again after some time this morning after a reboot. I had to wait a couple of minutes until the error messages dissapeared and the cluster seemed to work properly. Then after another reboot later this day, the cluster started having problems again and did not recover ever since.

The error messages supplied below are a reoccuring pattern.

**Edit 1:** after about 10 to 30 Minutes the cluster seems to catch itself and works again. When restarting it then takes a lot of time again for the system to recover a stable state.

Setup / Environment
---

docker-compose based setup.

Ditto version 1.0.0, official images

Slight configuration changes in message-max-size and akka buffer sizes.

The cluster started at ditto 0.8.0 and lived through two database migrations, which I applied as stated in the documentation.

I had problems with the migration from 0.9.0 to 1.0.0, hence applying the operations manually based off of the supplied script in the documentation. It worked out for several months until now.

The VM running the docker-compose setup has 16 Gig of RAM and 4 CPUs. Ditto raises the CPU load15 to around 5 on average and 8 on startup.

Logs
---

**Concierge service log**

```
concierge_1      | 2020-02-25 15:38:18,599 ERROR [ecb557b3-7260-4f18-bef9-d8049b16fcc3] o.e.d.s.c.e.EnforcerActor akka://ditto-cluster/user/conciergeRoot/enforcer - Unexpected non-DittoRuntimeException error - responding with GatewayInternalErrorException - AskTimeoutException :Ask timed out on [Actor[akka://ditto-cluster/system/sharding/thingProxy#-6024026]] after [30000 ms]. Message of type [org.eclipse.ditto.services.models.things.commands.sudo.SudoRetrieveThing]. A typical reason for `AskTimeoutException` is that the recipient actor didn't send a reply.
concierge_1      | akka.pattern.AskTimeoutException: Ask timed out on [Actor[akka://ditto-cluster/system/sharding/thingProxy#-6024026]] after [30000 ms]. Message of type [org.eclipse.ditto.services.models.things.commands.sudo.SudoRetrieveThing]. A typical reason for `AskTimeoutException` is that the recipient actor didn't send a reply.
concierge_1      | 	at akka.pattern.PromiseActorRef$.$anonfun$defaultOnTimeout$1(AskSupport.scala:648)
concierge_1      | 	at akka.pattern.PromiseActorRef$$$Lambda$258.00000000E527C670.apply(Unknown Source)
concierge_1      | 	at akka.pattern.PromiseActorRef$.$anonfun$apply$1(AskSupport.scala:669)
concierge_1      | 	at akka.pattern.PromiseActorRef$$$Lambda$259.00000000E527D380.apply$mcV$sp(Unknown Source)
concierge_1      | 	at akka.actor.Scheduler$$anon$4.run(Scheduler.scala:202)
concierge_1      | 	at scala.concurrent.Future$InternalCallbackExecutor$.unbatchedExecute(Future.scala:875)
concierge_1      | 	at scala.concurrent.BatchingExecutor.execute(BatchingExecutor.scala:113)
concierge_1      | 	at scala.concurrent.BatchingExecutor.execute$(BatchingExecutor.scala:107)
concierge_1      | 	at scala.concurrent.Future$InternalCallbackExecutor$.execute(Future.scala:873)
concierge_1      | 	at akka.actor.LightArrayRevolverScheduler$TaskHolder.executeTask(LightArrayRevolverScheduler.scala:334)
concierge_1      | 	at akka.actor.LightArrayRevolverScheduler$$anon$3.executeBucket$1(LightArrayRevolverScheduler.scala:285)
concierge_1      | 	at akka.actor.LightArrayRevolverScheduler$$anon$3.nextTick(LightArrayRevolverScheduler.scala:289)
concierge_1      | 	at akka.actor.LightArrayRevolverScheduler$$anon$3.run(LightArrayRevolverScheduler.scala:241)
concierge_1      | 	at java.lang.Thread.run(Unknown Source)
```

**Things service log**

```
things_1         | 2020-02-25 16:22:46,259 INFO  [] o.e.d.s.u.p.m.DefaultPersistenceStreamingActor akka://ditto-cluster/user/thingsRoot/persistenceStreamingActor - Starting stream for <SudoStreamModifiedEntities [type=streaming:org.eclipse.ditto.services.models.streaming.SudoStreamModifiedEntities, dittoHeaders=ImmutableDittoHeaders [{}], start=2001-03-18T09:45:45Z, end=2001-03-18T09:50:50Z, burst=10, timeoutMillis=600000]>
```

**Things service log (mongodb)**

```
things_1         | 2020-02-25 16:29:07,284 ERROR [] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/18/c0011%3A1E021EBF6658E6B7/pa - Got SaveSnapshotFailure(SnapshotMetadata(thing:c0011:1E021EBF6658E6B7,565,0),com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'Index with name: things_snaps_index already exists with different options' on server mongodb:27017. The full response is {""ok"": 0.0, ""errmsg"": ""Index with name: things_snaps_index already exists with different options"", ""code"": 85, ""codeName"": ""IndexOptionsConflict""})
things_1         | com.mongodb.MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'Index with name: things_snaps_index already exists with different options' on server mongodb:27017. The full response is {""ok"": 0.0, ""errmsg"": ""Index with name: things_snaps_index already exists with different options"", ""code"": 85, ""codeName"": ""IndexOptionsConflict""}
things_1         | 	at com.mongodb.internal.connection.ProtocolHelper.getCommandFailureException(ProtocolHelper.java:175)
things_1         | 	at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:390)
things_1         | 	at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:376)
things_1         | 	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:677)
things_1         | 	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:644)
things_1         | 	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:514)
things_1         | 	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:511)
things_1         | 	at com.mongodb.internal.connection.AsynchronousChannelStream$BasicCompletionHandler.completed(AsynchronousChannelStream.java:220)
things_1         | 	at com.mongodb.internal.connection.AsynchronousChannelStream$BasicCompletionHandler.completed(AsynchronousChannelStream.java:203)
things_1         | 	at sun.nio.ch.Invoker.invokeUnchecked(Unknown Source)
things_1         | 	at sun.nio.ch.Invoker.invokeDirect(Unknown Source)
things_1         | 	at sun.nio.ch.UnixAsynchronousSocketChannelImpl.implRead(Unknown Source)
things_1         | 	at sun.nio.ch.AsynchronousSocketChannelImpl.read(Unknown Source)
things_1         | 	at sun.nio.ch.AsynchronousSocketChannelImpl.read(Unknown Source)
things_1         | 	at com.mongodb.internal.connection.AsynchronousSocketChannelStream$AsynchronousSocketChannelAdapter.read(AsynchronousSocketChannelStream.java:137)
things_1         | 	at com.mongodb.internal.connection.AsynchronousChannelStream.readAsync(AsynchronousChannelStream.java:105)
things_1         | 	at com.mongodb.internal.connection.InternalStreamConnection.readAsync(InternalStreamConnection.java:511)
things_1         | 	at com.mongodb.internal.connection.InternalStreamConnection.access$1000(InternalStreamConnection.java:76)
things_1         | 	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:634)
things_1         | 	at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:619)
things_1         | 	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:514)
things_1         | 	at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:511)
things_1         | 	at com.mongodb.internal.connection.AsynchronousChannelStream$BasicCompletionHandler.completed(AsynchronousChannelStream.java:220)
things_1         | 	at com.mongodb.internal.connection.AsynchronousChannelStream$BasicCompletionHandler.completed(AsynchronousChannelStream.java:203)
things_1         | 	at sun.nio.ch.Invoker.invokeUnchecked(Unknown Source)
things_1         | 	at sun.nio.ch.Invoker.invokeDirect(Unknown Source)
things_1         | 	at sun.nio.ch.UnixAsynchronousSocketChannelImpl.implRead(Unknown Source)
things_1         | 	at sun.nio.ch.AsynchronousSocketChannelImpl.read(Unknown Source)
things_1         | 	at sun.nio.ch.AsynchronousSocketChannelImpl.read(Unknown Source)
things_1         | 	at com.mongodb.internal.connection.AsynchronousSocketChannelStream$AsynchronousSocketChannelAdapter.read(AsynchronousSocketChannelStream.java:137)
things_1         | 	at com.mongodb.internal.connection.AsynchronousChannelStream.readAsync(AsynchronousChannelStream.java:105)
things_1         | 	at com.mongodb.internal.connection.InternalStreamConnection.readAsync(InternalStreamConnection.java:511)
things_1         | 	at com.mongodb.internal.connection.InternalStreamConnection.access$1000(InternalStreamConnection.java:76)
things_1         | 	at com.mongodb.internal.connection.InternalStreamConnection$2.onResult(InternalStreamConnection.java:376)
things_1         | 	at com.mongodb.internal.connection.InternalStreamConnection$2.onResult(InternalStreamConnection.java:365)
things_1         | 	at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)
things_1         | 	at com.mongodb.internal.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:468)
things_1         | 	at com.mongodb.internal.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:465)
things_1         | 	at com.mongodb.internal.connection.AsynchronousChannelStream$1.completed(AsynchronousChannelStream.java:91)
things_1         | 	at com.mongodb.internal.connection.AsynchronousChannelStream$1.completed(AsynchronousChannelStream.java:85)
things_1         | 	at com.mongodb.internal.connection.AsynchronousChannelStream$2.completed(AsynchronousChannelStream.java:167)
things_1         | 	at com.mongodb.internal.connection.AsynchronousChannelStream$2.completed(AsynchronousChannelStream.java:161)
things_1         | 	at com.mongodb.internal.connection.AsynchronousChannelStream$AsyncWritableByteChannelAdapter$WriteCompletionHandler.completed(AsynchronousChannelStream.java:192)
things_1         | 	at com.mongodb.internal.connection.AsynchronousChannelStream$AsyncWritableByteChannelAdapter$WriteCompletionHandler.completed(AsynchronousChannelStream.java:183)
things_1         | 	at sun.nio.ch.Invoker.invokeUnchecked(Unknown Source)
things_1         | 	at sun.nio.ch.Invoker$2.run(Unknown Source)
things_1         | 	at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(Unknown Source)
things_1         | 	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
things_1         | 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
things_1         | 	at java.lang.Thread.run(Unknown Source)
```

**Full log (about 10 minutes)**: [ditto_cluster_errors.txt](https://github.com/eclipse/ditto/files/4250833/ditto_cluster_errors.txt)

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/621/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/621,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU5MDk2NTMwNg==,ditto,590965306,621,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-02-25T17:03:53Z,2020-02-25T17:03:53Z,"Hi @w4tsn 
That index exception `Index with name: things_snaps_index already exists with different options` sounds really strange.
Did you try dropping the index `things_snaps_index`? It should be automatically recreated.

That could in fact cause the timeout exception you are seeing in the logs.
However I really have no idea why this should come ""out of the blue"".
Could it be that those errors exist since updating to Ditto 1.0.0?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU5MDk2NTMwNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/621,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU5MTAwMTQ1Mg==,ditto,591001452,621,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2020-02-25T18:34:48Z,2020-02-25T18:34:48Z,"Thanks @thjaeckle,

this solved the problem indeed. I don't know why it just started to fail out of the blue. We are utilizing the cluster more since a few weeks and I did not have to restart it for a while. Since it seems that this mostly impacted the start procedure and ""healed"" off after around 30 minutes it might have not caught my attention earlier.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU5MTAwMTQ1Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/625,https://api.github.com/repos/eclipse-ditto/ditto/issues/625,ditto,572277401,625,Replace rubygems proxy for building Ditto's website,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2020-02-27T18:39:57Z,2020-04-28T13:40:57Z,"We should get rid of the http://rubygems-proxy.torquebox.org in the website build.

Automated PR #617 did find out that we use a ""http"" URL in our pom.xml - and that is the mentioned http://rubygems-proxy.torquebox.org
As there is no SSL version of this proxy, we should get rid of it completely.

The following issues provide more information on that:
jruby-gradle/jruby-gradle-plugin#349
and
jruby-gradle/jruby-gradle-plugin#364","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/625/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/628,https://api.github.com/repos/eclipse-ditto/ditto/issues/628,ditto,575578894,628,Error: Cannot start service swagger-ui when attempting to start Ditto,stfnp,21069852,Stefan Pfeifer,,CLOSED,2020-03-04T17:02:36Z,2020-03-04T18:17:16Z,"Trying to run Ditto by following the instructions in the readme gives me the following error:

    ditto-master\deployment\docker> docker-compose up -d
    Removing docker_swagger-ui_1
    docker_policies_1 is up-to-date
    Recreating be117b1f9e95_docker_swagger-ui_1 ...
    docker_mongodb_1 is up-to-date
    docker_concierge_1 is up-to-date
    docker_things-search_1 is up-to-date
    docker_things_1 is up-to-date
    docker_connectivity_1 is up-to-date
    Recreating be117b1f9e95_docker_swagger-ui_1 ... error                                                                        
    ERROR: for be117b1f9e95_docker_swagger-ui_1  Cannot start service swagger-ui: OCI runtime create failed: container_linux.go:346: starting container process caused ""process_linux.go:449: container init caused \""rootfs_linux.go:58: mounting \\\""/host_mnt/uC/192.168.180.250/Home/Software/ditto-master/deployment/docker/swagger3-index.html\\\"" to rootfs \\\""/var/lib/docker/overlay2/2363352a028798b840a06d1a598fbd429e6adc0e3e643b631baef82ac3c96cff/merged\\\"" at \\\""/var/lib/docker/overlay2/2363352a028798b840a06d1a598fbd429e6adc0e3e643b631baef82ac3c96cff/merged/usr/share/nginx/html/index.html\\\"" caused \\\""not a directory\\\""\"""": unknown: Are you trying to mount a directory onto a file (or vice-versa)? Check if the specified host path exists and is the expected type

    ERROR: for swagger-ui  Cannot start service swagger-ui: OCI runtime create failed: container_linux.go:346: starting container process caused ""process_linux.go:449: container init caused \""rootfs_linux.go:58: mounting \\\""/host_mnt/uC/192.168.180.250/Home/Software/ditto-master/deployment/docker/swagger3-index.html\\\"" to rootfs \\\""/var/lib/docker/overlay2/2363352a028798b840a06d1a598fbd429e6adc0e3e643b631baef82ac3c96cff/merged\\\"" at \\\""/var/lib/docker/overlay2/2363352a028798b840a06d1a598fbd429e6adc0e3e643b631baef82ac3c96cff/merged/usr/share/nginx/html/index.html\\\"" caused \\\""not a directory\\\""\"""": unknown: Are you trying to mount a directory onto a file (or vice-versa)? Check if the specified host path exists and is the expected type
    ERROR: Encountered errors while bringing up the project.

I tried the Ditto 1.0.0 release as well as the current master branch with the same result. I'm running Windows 10 with Docker version 19.03.5 and docker-compose version 1.25.4.

Any ideas what could be wrong here?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/628/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/628,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU5NDcxMTA5Mg==,ditto,594711092,628,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-03-04T18:01:57Z,2020-03-04T18:01:57Z,"Hi.
Is your Docker for windows configured to share drives?
I don't use Docker for windows any longer but as far as I remember you can/must configure to e.g. Share your C drive with Docker.

If that doesn't help: the swagger ui isn't mandatory, so you could remove it from the Docker Compose file.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU5NDcxMTA5Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/628,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU5NDcyMjEwMw==,ditto,594722103,628,NA,stfnp,21069852,Stefan Pfeifer,,NA,2020-03-04T18:16:49Z,2020-03-04T18:16:49Z,"Hello! You're right, putting the files on a local drive and sharing them with Docker solved the problem. They were on a network drive before. Thank you very much for your help!","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDU5NDcyMjEwMw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/635,https://api.github.com/repos/eclipse-ditto/ditto/issues/635,ditto,582391224,635,Add documentation for using custom MQTT clientId,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2020-03-16T15:32:38Z,2020-03-17T13:28:10Z,"This is possible using the following config snippet:
```
...
    ""uri"": ""tcp://test.mosquitto.org:1883"",
    ""specificConfig"": {
      ""clientId"": ""my-awesome-mqtt-client-id""
    },
...
```
when this is not specified, the connection-id is used as clientId.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/635/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/645,https://api.github.com/repos/eclipse-ditto/ditto/issues/645,ditto,588123934,645,spelling mistakes,liuhu,1286384,Hugo Liu,mail.liuhu@gmail.com,CLOSED,2020-03-26T03:16:02Z,2020-03-26T15:48:06Z,"https://github.com/eclipse/ditto/blob/28b44b79a8272ab896e8def16ca6f0a142071329/model/base/src/main/java/org/eclipse/ditto/model/base/entity/Entity.java#L69

misspelled the word `entitity` -> `entity`","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/645/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/645,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYwNDUwNzgwNw==,ditto,604507807,645,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-03-26T15:48:06Z,2020-03-26T15:48:06Z,"Thanks for the hint, will fix that as part of the next PR. :)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYwNDUwNzgwNw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/648,https://api.github.com/repos/eclipse-ditto/ditto/issues/648,ditto,599967132,648,CLM detections in Ditto 1.0.0,aaron0609,49503795,,,CLOSED,2020-04-15T02:06:27Z,2020-04-27T11:18:55Z,"Hi All,
We used Sonatype CLM to scan the jar package in Ditto’s docker image and found some of the security vulnerabilities and open source license issues。

Security Issues:
Problem Code | Component
-- | --
sonatype-2020-0029 | org.eclipse.ditto : ditto-services-concierge-starter : jar : allinone :   1.0.0
CVE-2019-20444 | org.eclipse.ditto :   ditto-services-connectivity-starter : jar : allinone : 1.0.0
CVE-2019-20445 | org.eclipse.ditto : ditto-services-connectivity-starter : jar : allinone   : 1.0.0
sonatype-2018-0590 | org.eclipse.ditto : ditto-services-connectivity-starter : jar : allinone   : 1.0.0
CVE-2019-16869 | org.eclipse.ditto : ditto-services-connectivity-starter : jar : allinone   : 1.0.0
CVE-2020-7238 | org.eclipse.ditto : ditto-services-connectivity-starter : jar : allinone   : 1.0.0
sonatype-2020-0029 | org.eclipse.ditto : ditto-services-connectivity-starter : jar : allinone   : 1.0.0
sonatype-2020-0029 | org.eclipse.ditto : ditto-services-gateway-starter : jar : allinone :   1.0.0
sonatype-2020-0029 | org.eclipse.ditto : ditto-services-policies-starter : jar : allinone :   1.1.0-M2
sonatype-2020-0029 | org.eclipse.ditto : ditto-services-thingsearch-starter : jar : allinone :   1.1.0-M2
sonatype-2020-0029 | org.eclipse.ditto : ditto-services-things-starter : jar : allinone :   1.0.0

License Analysis

License Threat | Component
-- | --
Not Provided, Not Provided | org.eclipse.ditto : ditto-services-concierge-starter : jar : allinone :   1.0.0
Not Provided, Not Supported | org.eclipse.ditto ditto-services-connectivity-mapping 1.0.0
Not Provided, Not Supported | org.eclipse.ditto ditto-services-connectivity-starter 1.0.0
Not Provided, Not Provided | org.eclipse.ditto : ditto-services-connectivity-starter : jar : allinone   : 1.0.0
Not Provided, Not Provided | org.eclipse.ditto : ditto-services-gateway-starter : jar : allinone :   1.0.0
Not Provided, Not Provided | org.eclipse.ditto : ditto-services-things-starter : jar : allinone :   1.0.0
  |  

Actually we are going to use ditto as part of our internal project, but according to the quality gate policy these have to be fixed.
Are there any plans in place to fix these issues by upgrading?
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/648/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/648,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYxMzgzNTg3Ng==,ditto,613835876,648,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-04-15T06:06:01Z,2020-04-15T06:06:01Z,"Hi there.
I changed the title as these ""security vulnerabilities"" do no affect Ditto and are therefore no ""security vulnerabilities"". 
E.g.: CVE-2019-20444, CVE-2019-20445, CVE-2019-16869, CVE-2020-7238 all relate to ""HTTP request smuggling"" in Netty.
As Ditto doesn't use Netty for serving HTTP requests or as HTTP client - but only for AMQP 1.0 connections - this does not affect us.

The ""Sonatype"" ones seems to not exist (both ""doesn't appear to be a valid
Sonatype Vulnerability Identifier""):
https://my.sonatype.com/nexus-intelligence/sonatype-2018-0590
https://my.sonatype.com/nexus-intelligence/sonatype-2020-0029

Do you have more information on them?

Regarding Netty: In the meantime we already updated to latest Netty 4.1.48 which should have addressed the known CVEs.
The upcoming Ditto 1.1.0 will be released in ~2 weeks containing this Netty version.

Regarding the ""open source license issues"" I recommend to contact Sonatype as the license is clearly defined, see:
https://search.maven.org/artifact/org.eclipse.ditto/ditto-services-concierge-starter
https://search.maven.org/artifact/org.eclipse.ditto/ditto-services-concierge-starter/1.0.0/jar
https://repo1.maven.org/maven2/org/eclipse/ditto/ditto-services-concierge-starter/1.0.0/ditto-services-concierge-starter-1.0.0.pom

All places declare clearly and as SPDX-identifiers: `EPL-2.0`","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYxMzgzNTg3Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/648,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYxMzg0NTI3OQ==,ditto,613845279,648,NA,aaron0609,49503795,,,NA,2020-04-15T06:35:29Z,2020-04-15T06:35:29Z,"Hi there,

Thanks for your confirm, very happy to know that we will have Ditto 1.1.0 in the coming weeks.

As I just looked up in the detail report, here is the description for Sonatype ones:

sonatype-2020-0029 | The netty-codec package is vulnerable to a   Denial of Service (DoS). The decode method in JdkZlibDecoder.class,   JZlibDecoder.class, and JZlibDecoder.class do not limit the eventual size of   a compressed buffer after it is decompressed. Consequently, a malicious   request can consume much more memory on a server than the size of the request   would imply. An attacker can exploit this behavior by sending many such   requests, resulting in a DoS situation.
-- | --
sonatype-2018-0590 | The rhino package is vulnerable to XML eXternal Entity Reference (XXE)   attacks. The toXml method in XmlProcessor.class does not properly enforce any   protections against external entities when parsing XML. An attacker can   exploit this vulnerability by using crafted XML data which when evaluated by   the package, causes XXE attacks.

Hope these information can be helpful for you.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYxMzg0NTI3OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/648,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYxMzg2OTcwMA==,ditto,613869700,648,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-04-15T07:34:28Z,2020-04-15T07:34:28Z,"Will sonatype-2020-0029 be fixed with the latest Netty version?

Regarding sonatype-2018-0590: This is fixed in Rhino 1.7.12: https://github.com/mozilla/rhino/releases/tag/Rhino1_7_12_Release

And with Ditto 1.1.0 we will use the latest Rhino 1.7.12.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYxMzg2OTcwMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/648,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYxOTkxNjUyMQ==,ditto,619916521,648,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-04-27T11:18:55Z,2020-04-27T11:18:55Z,All solved with Ditto 1.1.0 to be released this week.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYxOTkxNjUyMQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/651,https://api.github.com/repos/eclipse-ditto/ditto/issues/651,ditto,601872776,651,502-BadGateway,danielanghell,48117672,,,CLOSED,2020-04-17T10:30:20Z,2020-11-02T19:42:53Z,"Hello,

     I have instantiated the Ditto system on my Linux virtual machine but every time I reboot this machine and try to use the localhost:8080/api/2 feature ( for example to search for things ), I get 502 Bad Gateway error. This happens almost every single time. Sometimes it works just to restart the ngninx container, but in the majority of the cases it doesn't work at all. I was wondering if there is any issue regarding the system, or if it's built this way to keep on working without restarting it. 

P.S.: My type of network adapter using VirtualBox is bridged adapter, if this information might help you.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/651/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/651,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYxNTE4NzY4OQ==,ditto,615187689,651,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-04-17T11:11:04Z,2020-04-17T11:11:04Z,"How did you start Ditto?
With `docker-compose`?

I think better suited for an automatically restarting ""service"" like Ditto is a Kubernetes based deployment with a local minikube.

Please be aware that this might however also not work as you intend it to - Ditto is intended to run as (cloud) service 24/7 - the start mechanisms we provide e.g. with `docker-compose` are meant to make it easy to start Ditto for local development.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYxNTE4NzY4OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/651,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYxNTM3MjMxNQ==,ditto,615372315,651,NA,danielanghell,48117672,,,NA,2020-04-17T17:31:41Z,2020-04-17T17:31:41Z,I started it with docker-compose indeed. I might try starting it with Kubernetes. Thank you for advice!,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYxNTM3MjMxNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/656,https://api.github.com/repos/eclipse-ditto/ditto/issues/656,ditto,606353565,656,Ditto tries to use deleted connections for messaging,JulianFeinauer,17098762,Julian,,CLOSED,2020-04-24T14:25:37Z,2020-04-27T14:20:42Z,"What I did:
* Register Connections (mqtt) and delete them afterwards (they also had the messaging topic)
* Try to send a message to the device via HTTP

I get the response:
```
{
  ""status"": 404,
  ""error"": ""connectivity:connection.notfound"",
  ""message"": ""The Connection with ID 'mqtt-example-connection-7' could not be found or requester had insufficient permissions to access it."",
  ""description"": ""Check if the ID of your requested Connection was correct and you have sufficient permissions.""
}
``` 
where the name of the connection is sometimes `mqtt-example-connection-6` and `mqtt-example-connection-7` (both existed and where deleted). It seems like this is random. 

So i have the impression that the deleted connection is still somewhere as reference and is picke by chance.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/656/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/656,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYxOTg4Mjc0Ng==,ditto,619882746,656,NA,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,NA,2020-04-27T10:16:52Z,2020-04-27T10:16:52Z,"Hi @JulianFeinauer, thanks for reporting.

The cause is a missing `UPDATE_SUBSCRIPTIONS` stage in `DeleteConnectionStrategy`. I will prepare a PR.

In the mean time, the error should disappear after the connection persistence actor stops itself. It happens 5 minutes after deletion by default. The 5m interval is configured at `ditto.connectivity.connection.activity-check.deleted-interval` in `connectivity.conf`.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYxOTg4Mjc0Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/657,https://api.github.com/repos/eclipse-ditto/ditto/issues/657,ditto,607338555,657,JWT token refresh does not work with java client,jokraehe,12512262,Johannes Schneider,johannes.schneider@bosch.io,CLOSED,2020-04-27T08:19:41Z,2020-04-27T13:22:22Z,Ditto checks the new token and declines it because the authorization context changed and closes the websocket connection afterwards.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/657/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/657,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYxOTk3OTE3OQ==,ditto,619979179,657,NA,jokraehe,12512262,Johannes Schneider,johannes.schneider@bosch.io,NA,2020-04-27T13:16:21Z,2020-04-27T13:16:21Z,fixed with #655 ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYxOTk3OTE3OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/661,https://api.github.com/repos/eclipse-ditto/ditto/issues/661,ditto,607507206,661,Automatic end-to-end acknowledgement handling for connection sources and targets,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2020-04-27T12:26:21Z,2020-07-27T12:08:23Z,"Building on the work on #611 the in Ditto managed connections shall automatically
* request acknowledgements when configured in sources
* delivering acknowledgements when configured in targets

Connection sources get an additional ""required-acks"" configuration.
Connection targets get an additional ""delivered-acks"" configuration.

For consuming messages via sources, the technical acknowledgement/settlement of the underlying protocols (AMQP 1.0, AMQP 0.9.1, MQTT 3, MQTT 5, Apache Kafka, HTTP) shall be applied accordingly:
* only technically ack/settle a message as ""successfully processed"" when all configured ""required-acks"" were successful
* either issue a technical nack or timeout for unsuccessful processings
* protocols shall redeliver the message when the message was sent with a certain QoS (e.g. ""at least once"")

For publishing messages via targets, wait for the technical confirmation of the client in order to automatically create an acknowledgement from it.
Reasonably fill the ""status"", ""payload"" and ""headers"" of the automatically created acknowledgement, e.g. for HTTP connections, the acknowledgement shall contain the HTTP status code as ""status"" and the response payload as ""payload"", also the HTTP response headers as ""headers"".","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/661/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/667,https://api.github.com/repos/eclipse-ditto/ditto/issues/667,ditto,609919526,667,Provide JWT tokens to Websocket without passing via HTTP headers,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2020-04-30T12:33:14Z,2022-09-14T10:15:06Z,"For the `WebSocket` browser API it is not possible to pass a JWT token as `Authorization` HTTP header as this API does not allow to set custom headers.

So there is no straight-forward way to connect to a Ditto websocket from the browser.

We should enable that by either
* allowing to open an unauthenticated WS session and passing as first message the JWT token via the WS
* or by using the sub-protocol field of the WS (for which there is an API in the browser) in order to transport the JWT token

I would prefer the first one as we already do the JWT token refresh also via a WS message.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/667/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/667,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85KTMYZ,ditto,1246545433,667,NA,ameinhardt,26243798,Axel Meinhardt,,NA,2022-09-14T10:15:06Z,2022-09-14T10:15:06Z,"Browser are able to pass cookies before the upgrade handshake, so the JWT could be passed there, also. That is straight-forward, as long as the browser has gotten a suitable cookie from the ditto domain","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85KTMYZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/668,https://api.github.com/repos/eclipse-ditto/ditto/issues/668,ditto,609925293,668,Pass conditions when applying updates to things,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2020-04-30T12:38:04Z,2020-11-03T14:33:51Z,"Currently it is possible with the [E-Tag and If-Match/If-None-Match](https://www.eclipse.org/ditto/httpapi-concepts.html#etag) headers to do conditional updates to things based on either
* the revision number of the thing when updating a complete thing
* the hash of a part of a thing when only updating a part of a thing

That is not sufficient for many other use cases, e.g.:
* only update the temperature to value 24 if the value is currently **not** 24
* only update a sensor value if its custom `value_timestamp` is older than 5 minutes
* ...

Such `conditions` shall be provided e.g. as HTTP query param in order to only perform the update when the condition is met.
We can therefore utilize the already existing [RQL](https://www.eclipse.org/ditto/basic-rql.html) queries which can already be applied on a ""thing"".","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/668/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/668,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMTE1MjQyNA==,ditto,721152424,668,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-11-03T14:33:47Z,2020-11-03T14:33:47Z,Closed as duplicate of #559 ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMTE1MjQyNA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/672,https://api.github.com/repos/eclipse-ditto/ditto/issues/672,ditto,613634077,672,Postman Collection based on API v1,demetz,28460533,,,CLOSED,2020-05-06T21:47:45Z,2020-11-02T14:27:45Z,"The [Ditto Postman collection](https://www.eclipse.org/ditto/httpapi-postman.html) still uses the API v1, which is now deprecated.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/672/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/672,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyNjc5ODk0Mw==,ditto,626798943,672,NA,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,NA,2020-05-11T16:08:54Z,2020-05-11T16:08:54Z,Thanks for reporting!,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyNjc5ODk0Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/672,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMDQyNDgwNg==,ditto,720424806,672,NA,raujonas,25148277,Jonas Rau,,NA,2020-11-02T11:50:59Z,2020-11-02T11:50:59Z,"@yufei-cai I've created a postman collection for the v2 http api. Everything is tested except the ""Messages"" part because currently I don't know how to test it properly to be honest. So if you're still interested I would love to share it and to create a PR.

If yes, in which directory should I place the collection? Should I also add this page (https://www.eclipse.org/ditto/httpapi-postman.html) again to the docs and update it?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMDQyNDgwNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/672,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMDQzNDk1Mg==,ditto,720434952,672,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-11-02T12:12:37Z,2020-11-02T12:12:37Z,"Oh sh** .. I just noticed that the https://www.eclipse.org/ditto/httpapi-postman.html page is long deleted and should no longer be published (it's also not appearing in the default sidebar of the website).
However, the page is still up and at a quite old version (January 2020).

We could re-add it of course based on e.g. what @raujonas has.
We once decided to delete it as Postman is able to import the Ditto OpenAPI specification which is quite good maintained:
* https://www.eclipse.org/ditto/http-api-doc.html
* Soruce: https://www.eclipse.org/ditto/openapi/ditto-api-2.yml

What does you postman collection contain in addition, @raujonas ?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMDQzNDk1Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/672,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMDQ1Mzc2OA==,ditto,720453768,672,NA,raujonas,25148277,Jonas Rau,,NA,2020-11-02T12:54:11Z,2020-11-02T12:54:11Z,"> We once decided to delete it as Postman is able to import the Ditto OpenAPI specification which is quite good maintained:

I only did it because I was somehow not able to find the yml file at [https://www.eclipse.org/ditto/openapi/ditto-api-2.yml](https://www.eclipse.org/ditto/openapi/ditto-api-2.yml) and did not know how to get this file from the api doc site you've mentioned.

I think I have nothing to offer in addition then, but you can have a look at it if you want: [https://gist.github.com/raujonas/d1834f96ea72e7ccf54a094447a8f540](https://gist.github.com/raujonas/d1834f96ea72e7ccf54a094447a8f540). 
I suited it my needs, for example I use only basic auth, added only the minimal params or added variables in the paths like this {{basePath}}/things/{{thingId}}/features/{{featureId}} but that is of course only my subjective preference.

So I think importing it via your OpenAPI specification is more accurate, but maybe a link on the api doc site would be helpful if it is not obvious and I just overlooked it.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMDQ1Mzc2OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/672,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMDUwMzg4Ng==,ditto,720503886,672,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-11-02T14:26:14Z,2020-11-02T14:26:14Z,"@raujonas thanks for your offer
To be honest, I would prefer to not introduce the postman collection (again) and rely on the OpenAPI docs by importing them in Postman.
If we would add a separate Postman collection again, this would not be that actively maintained whereas the OpenAPI docs are.

We could however re-create the https://www.eclipse.org/ditto/httpapi-postman.html page describing how to import the OpenAPI available at https://www.eclipse.org/ditto/openapi/ditto-api-2.yml into Postman and which variables have to be set where.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMDUwMzg4Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/672,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMDUwNDU1NA==,ditto,720504554,672,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-11-02T14:27:25Z,2020-11-02T14:27:25Z,"I deleted the https://www.eclipse.org/ditto/httpapi-postman.html for now - as it was outdated - this ""resolves"" this issue as Ditto now doesn't host an (outdated) Postman collection.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMDUwNDU1NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/677,https://api.github.com/repos/eclipse-ditto/ditto/issues/677,ditto,615815953,677,Responses should not decide whether they're required,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,CLOSED,2020-05-11T11:36:28Z,2020-07-20T07:27:26Z,"Right now responses to messages are dropped if they have a response-required header set to false.

This can be found [here](https://github.com/eclipse/ditto/blob/57a6f85b3e63c377c08f363e49d45703ea72216f/services/connectivity/messaging/src/main/java/org/eclipse/ditto/services/connectivity/messaging/MessageMappingProcessorActor.java#L593).

In my opinion it does not make sense for a response to decide whether it is required or not.
Only the initial requester knows if a response is required. Therefore the filtering of required responses should not be made based on response headers.

This behaviour already lead to a bug, because ditto client did set response-required to false for responses because they were sent without a response consumer (which is totally valid because we don't want to have a response to the response).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/677/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/677,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY2MDg1NDMzNg==,ditto,660854336,677,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-07-20T07:27:25Z,2020-07-20T07:27:25Z,Fixed via #734 ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY2MDg1NDMzNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/679,https://api.github.com/repos/eclipse-ditto/ditto/issues/679,ditto,616002582,679,Mqtt 3 connection without using certificate validation,BobClaerhout,3315222,Bob Claerhout,,CLOSED,2020-05-11T16:08:16Z,2020-06-10T08:20:44Z,"We recently installed Ditto version 1.1.0 from version 1.0.0 but we aren't able to communicate with the Azure HUB over mqtt anymore. I'm using the exact same connection as it was before (did an export of the database in the old cluster and creating the connection with the same parameters) and still we cannot connect to that host again. (fyi: we stopped the connection in the old cluster since azure HUB cannot have 2 simultanuous connections with the same credentials).   
To try figure out what's going on. I've created a connection to test.mosquitto.org:1883 which is working fine. From the moment I change the host to ssl://test.mosqtuitto.org:1883 (and verifyCertificates is set to false). I'm getting following error in the logs:
```
2020-05-11 14:02:41,138 WARN  [] c.h.c.i.m.h.d.MqttDisconnectHandler  - Exception while disconnecting: {}
io.netty.handler.codec.DecoderException: java.lang.NullPointerException
        at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:468)
        at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
        at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
        at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
        at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:792)
        at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:475)
        at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378)
        at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
        at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
        at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
        at java.base/java.lang.Thread.run(Thread.java:831)
Caused by: java.lang.NullPointerException: null
        at java.base/java.util.Objects.requireNonNull(Objects.java:221)
        at java.base/java.util.Arrays$ArrayList.<init>(Arrays.java:4354)
        at java.base/java.util.Arrays.asList(Arrays.java:4341)
        at org.eclipse.ditto.services.connectivity.messaging.internal.ssl.DittoTrustManager.isServerCertificateInTrustStore(DittoTrustManager.java:94)
        at org.eclipse.ditto.services.connectivity.messaging.internal.ssl.DittoTrustManager.checkServerTrusted(DittoTrustManager.java:83)
        at java.base/sun.security.ssl.AbstractTrustManagerWrapper.checkServerTrusted(SSLContextImpl.java:1524)
        at java.base/sun.security.ssl.CertificateMessage$T12CertificateConsumer.checkServerCerts(CertificateMessage.java:619)
        at java.base/sun.security.ssl.CertificateMessage$T12CertificateConsumer.onCertificate(CertificateMessage.java:460)
        at java.base/sun.security.ssl.CertificateMessage$T12CertificateConsumer.consume(CertificateMessage.java:360)
        at java.base/sun.security.ssl.SSLHandshake.consume(SSLHandshake.java:392)
        at java.base/sun.security.ssl.HandshakeContext.dispatch(HandshakeContext.java:443)
        at java.base/sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:1061)
        at java.base/sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:1048)
```
In the stacktrace, you can find following line: `org.eclipse.ditto.services.connectivity.messaging.internal.ssl.DittoTrustManager.isServerCertificateInTrustStore(DittoTrustManager.java:94)`. It's a bit weird to me since I configured it to not check the certificates. Did something change from 1.0.0 to 1.1.0 considering this?  

I noticed following issue: eclipse/ditto#547. This issue is about support for MQTT 5 in ditto so it might be related to this?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/679/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/679,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0MDU0NDU0OQ==,ditto,640544549,679,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2020-06-08T11:27:10Z,2020-06-08T11:27:10Z,"I'm not sure yet, if mqtt 5 is really connected to this. I've not touched mqtt3 to my knowledge, except for little refactoring which left almost everything as it is for mqtt3.

I'll have a look into the changes introduced via #547 and see if I can find something.

> ssl://test.mosqtuitto.org:1883

I suppose the typo is not in your actual configuration ;) Apart from that I don't think it'll work to use an ssl connection to the non-ssl endpoint on 1883. At least it should not as I understand it.

From the documentation I read that 

> validateCertificates: Must be true

Which sounds pretty mandatory to me. Not sure about that.

That said, I don't yet understand why it worked before 1.0.0 and now it doesn't. Can you provide more context?
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0MDU0NDU0OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/679,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0MTczODUyOA==,ditto,641738528,679,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-06-10T05:50:42Z,2020-06-10T05:50:42Z,This is clearly a bug in Ditto which was easily spotted and fixed in #688 ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0MTczODUyOA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/680,https://api.github.com/repos/eclipse-ditto/ditto/issues/680,ditto,617175939,680,Support for adding arbitrary _metadata for features / properties,JulianFeinauer,17098762,Julian,,CLOSED,2020-05-13T06:22:22Z,2020-08-31T07:59:50Z,"Hi all,
if considering using some kind of History API (see #545 ) it gets more and more relevant to know the timestamp of a specific value from a thing. Also in scenarios where you have no direct connection like HTTP / WS but have messaging involved like MQTT or generally Hono you can not rely that the timestamp when you receive an update message is roughly equivalent to the timestamp when it was measured. 

I thus suggest to enable explicit support for ""last_modified"" timestamp which could be either set explicitly in the message or implicitly with the ""ingestion time"" and which is then available for a possible history service and for users to see how ""valid"" their datasets are.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/680/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/680,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0MTM0OTkxMw==,ditto,641349913,680,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-06-09T14:53:42Z,2020-06-09T14:53:42Z,"Indeed that would be useful to have as metainformation for each property.
As we can't simply store the timestamp or any additional meta data it in the ""target JSON"" without modifying the user/device provided JSON structure, that would have to be stored besides the ""target JSON"" structure.
E.g. under a `_metadata` field:
```json
{
  ""thingId"": ""org.eclipse.ditto:thing-1"",
  ""policyId"": ""..."",
  ""features"": {
    ""lamp"": {
      ""properties"": {
        ""on"": true,
        ""color"": {
          ""r"": 0,
          ""g"": 255,          
          ""b"": 255,
        }
      }
    }
  },
  ""_modified"": ""2020-06-09T14:30:00Z"",
  ""_revision"": 42,
  ""_metadata"": {
    ""policyId"": {
      ""_modified"": ""2020-06-09T14:00:00Z"",
      ""_revision"": 1
    },
    ""features"": {
      ""lamp"": {
        ""properties"": {
          ""on"": {
            ""_modified"": ""2020-06-09T14:30:00Z"",
            ""_revision"": 42
          },
          ""color"": {
            ""r"": {
              ""_modified"": ""2020-06-09T14:15:00Z"",
              ""_revision"": 23
            },
            ""g"": {
              ""_modified"": ""2020-06-09T14:15:00Z"",
              ""_revision"": 23
            },
            ""b"": {
              ""_modified"": ""2020-06-09T14:15:00Z"",
              ""_revision"": 23
            }
          }
        }
      }
    }
  }
}
```

Basically each ""leaf"" in the JSON gets an JsonObject containing additional meta information.
That could also be aggregated upwards, so in the provided example above you would know that the ""lamp"" feature is also of revision `42` last modified at the timestamp `14:30`.

I would also want to see the ""revision"" as meta information at a property level, so that you can e.g. see (like in Subversion) which revision a part of the subtree of a Thing or even a single property has.
But that may be a topic for another issue. :)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0MTM0OTkxMw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/680,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0MTM1MTc1NQ==,ditto,641351755,680,NA,JulianFeinauer,17098762,Julian,,NA,2020-06-09T14:56:30Z,2020-06-09T14:56:30Z,"Hey @thjaeckle welcome back : )
I would try to take care of the implementation if you generally agree. Do you have a pointer for me where to look at as start?
And I think we should also try to differentiate two things: date of last modification and timestamp of the value (which may be the same but maybe totally different also)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0MTM1MTc1NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/680,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0MTM5MjE0Nw==,ditto,641392147,680,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-06-09T15:47:22Z,2020-06-09T15:47:22Z,"> I would try to take care of the implementation if you generally agree. Do you have a pointer for me where to look at as start?
Cool, I think this would a great addition to Ditto without breaking existing functionality.

The best way I can think of is to enhance the [AbstractThingEventStrategy](https://github.com/eclipse/ditto/blob/master/services/things/persistence/src/main/java/org/eclipse/ditto/services/things/persistence/actors/strategies/events/AbstractThingEventStrategy.java#L49) to - in addition to the already set ""setRevision(long)"" and ""setModified(Instant)"" also invoke something like `setMetadata(JsonPointer, Metadata)`.
At the mentioned spot you have the `ThingEvent` containing which `JsonPointer getResourcePath()` was affected (which you need in order to set the `Metadata` information on the right JSON ""level""), containing the `Optional<JsonValue> getEntity()` and also containing `DittoHeaders getDittoHeaders()` (which might e.g. include the ""actual device modification timestamp"" - propsal: `""_issuedAt""` - which could be a different one).

Having found that place, additional things are needed to be implemented:
* the `ThingBuilder`s (`ThingBuilder.FromCopy` and `ThingBuilder.FromScratch`) need to be enhanced by setting the new additional ""meta"" information
* we would need a new type (Interface + immutable implementation) e.g. `Metadata` in package `org.eclipse.ditto.model.base.entity`
** the `Metadata` interface would define (with an inner subclass for the `JsonFields`) which metadata information can be expected and which Json+Java type this metadata has - for example please have a look at `Thing.JsonFields`
* the `org.eclipse.ditto.model.base.entity.Entity` needs to be enhanced by a getter and setter for this ""Metadata"" instance (I would add that on `Entity` rather than on `Thing` so that the `Policy` also being an `Entity` might also benefit from that)
* the `Thing.JsonFields` needs to be enhanced by a new constant for the `""_metadata""` JSON field
* the `ImmutableThing`'s `JsonObject toJson(JsonSchemaVersion, Predicate<JsonField>)` needs to write the new ""_meta"" field when serializing a Thing Java object to JSON
* the `ImmutableThingFromCopyBuilder of(JsonObject)` needs to read the ""_meta"" field when deserializing to a Thing Java object again from JSON
* I also think we need to enhance the `DittoHeaderDefinition` with a special header specifying the modification timestamp coming from a device
** then, also `DittoHeaders`, `DittoHeadersBuilder` and the implementations need to be adjusted accordingly (incl. JSON serialization)

Do you need that new meta information also in each Event emitted via Ditto (I guess so)?
Then the `org.eclipse.ditto.signals.events.base.Event` would need to be enhanced with that ""Metadata"" information as well, as well as serialization to JSON and deserialization back to Java objects in the implementations responsible for JSON serialization (e.g. in `AbstractThingEvent`).

Those are the first things popping into my mind.
That might seem a lot but I think this is a rather low hanging fruit - the main effort is in enhancing the Ditto ""model"" around Entity/Thing by adding the `Metadata` type and to enhance the ""Event"" as well.

Making the ""_metadata"" field in the `Thing.JsonFields` a `FieldType.SPECIAL, FieldType.HIDDEN` field (like e.g. also `""_modified""`, the field will not by default be returned when retrieving a Thing via the HTTP API - it should work automatically then to provide a ""fields"" query in order to retrieve that information, e.g.:
`GET /api/2/things/org.eclipse.ditto:thing-1?fields=policyId,features,_revision,_metadata`

> And I think we should also try to differentiate two things: date of last modification and timestamp of the value (which may be the same but maybe totally different also)
Yes, maybe we can provide a ""_modified"" field and in addition an optional ""_issuedAt"" field.
If both are the same, it is sufficient to only set the ""_modified"" - if they differ, both values are set in the created instance of `Metadata`.
The `Optional<Instant> getIssuedAt()` in `Metadata` interface would indicate that by using an `Optional` return type.

What do you think?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0MTM5MjE0Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/680,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1NDEyODY3OA==,ditto,654128678,680,NA,JulianFeinauer,17098762,Julian,,NA,2020-07-06T09:40:24Z,2020-07-06T09:40:24Z,"Hi all, I had a discussion with @thjaeckle about whether we should send the information ""issuedAt"" in a Ditto Header or allow the user to write it through the Thing object himself. Currently there is the convention that ""_xxx"" fields are write protected and read only for the user. I move this discussion here that everybody can participate.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1NDEyODY3OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/680,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1NDE2NTc0Nw==,ditto,654165747,680,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-07-06T11:03:59Z,2020-07-06T11:03:59Z,"I would like to keep the pattern that all JSON fields starting with `_` are 
* hidden by default (e.g. when doing a GET request)
* and are read only by default (and always set by Ditto only)

Having thought about it a while I see this variant which might ease things up:
* keep `_metadata` and as a result make everything in it read only
* have specific metadata fields which Ditto automatically sets (currently: `_revision` and `_modified`)
* define a prefix for header fields which should be added by Ditto into the _metadata section, e.g.: `ditto-metadata:`
   * by default, a set metadata value is applied to all JSON leaves affected by a modifying command, e.g.: `ditto-metadata:issuedAt`
   * similar to policy resources, the ditto-metadata could contain an optional JsonPointer of which property to address the metadata value to if a metadata value should not be applied to all affected JSON fields of a processed command


Example headers when modifying a complete thing (`ModifyThing` command - [example](https://www.eclipse.org/ditto/protocol-examples-modifything.html#modifything)):
```json
{
  ""topic"": ""org.eclipse.ditto/thing-1/things/twin/commands/modify"",
  ""headers"": {
    ""ditto-metadata:issuedAt"": ""2020-06-09T14:29:00Z"",
    ""ditto-metadata:/features/lamp/properties/color/r/issuedAt"": ""2020-06-09T14:14:00Z"",
    ""ditto-metadata:/features/lamp/properties/color/g/issuedAt"": ""2020-06-09T14:14:00Z"",
    ""ditto-metadata:/features/lamp/properties/color/b/issuedAt"": ""2020-06-09T14:14:00Z""
  },
  ""path"": ""/"",
  ""value"": {
    ""features"": {
      ""lamp"": {
        ""properties"": {
          ""on"": false,
          ""color"": {
            ""r"": 255,
            ""g"": 255,
            ""b"": 0
          }
        }
      }
    }
  }
}
```

Another example for modifying the feature properties of a thing (`ModifyFeatureProperties` command - [example](https://www.eclipse.org/ditto/protocol-examples-modifyproperties.html#modifyfeatureproperties):
```json
{
  ""topic"": ""org.eclipse.ditto/thing-1/things/twin/commands/modify"",
  ""headers"": {
    ""ditto-metadata:issuedAt"": ""2020-06-09T14:29:00Z"",
    ""ditto-metadata:/color/r/issuedAt"": ""2020-06-09T14:14:00Z"",
    ""ditto-metadata:/color/g/issuedAt"": ""2020-06-09T14:14:00Z"",
    ""ditto-metadata:/color/b/issuedAt"": ""2020-06-09T14:14:00Z""
  },
  ""path"": ""/features/lamp/properties"",
  ""value"": {
    ""on"": false,
    ""color"": {
      ""r"": 255,
      ""g"": 255,
      ""b"": 0
    }
  }
}
```

The resulting JSON for both of the above commands would e.g. look like:
```json
{
  ""thingId"": ""org.eclipse.ditto:thing-1"",
  ""policyId"": ""..."",
  ""features"": {
    ""lamp"": {
      ""properties"": {
        ""on"": true,
        ""color"": {
          ""r"": 0,
          ""g"": 255,          
          ""b"": 255,
        }
      }
    }
  },
  ""_modified"": ""2020-06-09T14:30:00Z"",
  ""_revision"": 42,
  ""_metadata"": {
    ""policyId"": {
      ""_modified"": ""2020-06-09T14:00:00Z"",
      ""_revision"": 1
    },
    ""features"": {
      ""lamp"": {
        ""properties"": {
          ""on"": {
            ""_modified"": ""2020-06-09T14:30:00Z"",
            ""_revision"": 42,
            ""issuedAt"": ""2020-06-09T14:29:00Z""
          },
          ""color"": {
            ""r"": {
              ""_modified"": ""2020-06-09T14:30:00Z"",
              ""_revision"": 42,
              ""issuedAt"": ""2020-06-09T14:14:00Z""
            },
            ""g"": {
              ""_modified"": ""2020-06-09T14:30:00Z"",
              ""_revision"": 42,
              ""issuedAt"": ""2020-06-09T14:14:00Z""
            },
            ""b"": {
              ""_modified"": ""2020-06-09T14:30:00Z"",
              ""_revision"": 42,
              ""issuedAt"": ""2020-06-09T14:14:00Z""
            }
          }
        }
      }
    }
  }
}
```

I think that would support the principle: ""Make simple things simple, make complex things possible.
* the ""simple things"": by adding a single header, e.g. `""ditto-metadata:issuedAt"": ""2020-06-09T14:29:00Z""` all affected JSON keys in the command will get that same metadata information
* the ""complex things"": if that is not sufficient, a header for each differing metadata field can be added

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1NDE2NTc0Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/680,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1NDE5OTczMQ==,ditto,654199731,680,NA,JulianFeinauer,17098762,Julian,,NA,2020-07-06T12:19:31Z,2020-07-06T12:19:31Z,"Hey @thjaeckle I really like your idea as it makes it easy to add other metadata values and is not fixed add ""add timestamps"". So I will try to go on like that. Thanks!","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1NDE5OTczMQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/680,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY2NjI4NDE4OQ==,ditto,666284189,680,NA,jufickel-b,17162397,Juergen Fickel,,NA,2020-07-30T10:27:34Z,2020-07-30T10:27:34Z,"The suggested header syntax has one major drawback.
Assuming a command modifies a complete thing (`ModifyThing` command) like the following:
```
{
  ""topic"": ""org.eclipse.ditto/thing-1/things/twin/commands/modify"",
  ""headers"": {
    ""ditto-metadata:issuedAt"": ""2020-06-09T14:29:00Z"",
    ...
  },
  ""path"": ""/"",
  ""value"": {
    ""features"": {
      ""lamp"": {
        ""properties"": {
          ""on"": false,
          ""color"": {
            ""r"": 255,
            ""g"": 255,
            ""b"": 0
          }
        }
      }
    }
  }
}
```
Then the value of ""issuedAt"" would be applied to all feature properties, i. e. `on`, `r`, `g`, `b`.
This way it is impossible to set a metadata value exclusively at the root level (`/`), i. e. the thing itself.

How about a syntax which allows to determine the level more specifically?
**Example one:**
```
{
  ""topic"": ""org.eclipse.ditto/thing-1/things/twin/commands/modify"",
  ""headers"": {
    ""ditto-metadata:issuedAt"": ""2020-06-09T14:29:00Z"",
    ...
  },
  ""path"": ""/"",
  ""value"": {
    ""features"": {
      ""lamp"": {
        ""properties"": {
          ""on"": false,
          ""color"": {
            ""r"": 255,
            ""g"": 255,
            ""b"": 0
          }
        }
      }
    }
  }
}
```
Example one is interpreted in a way to set the value of ""issuedAt"" only at the root level (path `/`).

**Example two:**
```
{
  ""topic"": ""org.eclipse.ditto/thing-1/things/twin/commands/modify"",
  ""headers"": {
    ""ditto-metadata:*/issuedAt"": ""2020-06-09T14:29:00Z"",
    ...
  },
  ""path"": ""/"",
  ""value"": {
    ""features"": {
      ""lamp"": {
        ""properties"": {
          ""on"": false,
          ""color"": {
            ""r"": 255,
            ""g"": 255,
            ""b"": 0
          }
        }
      }
    }
  }
}
```
In example two the asterisk implies that the value of ""issuedAt"" should be applied to all the affected JSON leaves, in this case `on`, `r`, `g` and `b`.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY2NjI4NDE4OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/680,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY2NjMxNzEzOQ==,ditto,666317139,680,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-07-30T11:46:24Z,2020-07-30T11:46:24Z,"> How about a syntax which allows to determine the level more specifically?

I like that concept 👍 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY2NjMxNzEzOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/680,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY2NzI5NTQwNA==,ditto,667295404,680,NA,JulianFeinauer,17098762,Julian,,NA,2020-07-31T18:44:39Z,2020-07-31T18:44:39Z,"@jufickel-b thanks, this is a neat idea. From an application perspective I would always prefer the second example as it saves some algorithmic complexity. But just to assure.. in both cases the algorithm would hold and stay consistend 

```
check if there is an issuedAt at your node
if not, go to parent and repeat until you found one
```

Or can there be a sequence of messages that leads to a situation where aboves algorithm would yield a wrong response? I'm not sure ATM.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY2NzI5NTQwNA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/680,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY3MTcyNDU1Mw==,ditto,671724553,680,NA,jufickel-b,17162397,Juergen Fickel,,NA,2020-08-11T04:55:56Z,2020-08-11T04:55:56Z,"@JulianFeinauer I think so, too. I cannot think of a message sequence which disturbs the algorithm.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY3MTcyNDU1Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/680,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY3MTczMjMwMQ==,ditto,671732301,680,NA,jufickel-b,17162397,Juergen Fickel,,NA,2020-08-11T05:22:41Z,2020-08-11T05:22:41Z,"With commit [74af61f](https://github.com/JulianFeinauer/ditto/commit/74af61fc320f52e3271a13b1735b92364bfe6cf5) an implementation of my suggestion dated 2020-07-30 exists.

Tests showed however, that there is a problem: HTTP headers are not allowed to contain slashes or colons. Thus the syntax of the metadata header should be changed.

I already had a discussion with @thjaeckle regarding this issue. We think that it would be best to change the syntax of metadata header as follows:

Header name: `metadata` as the prefix `ditto-` implies that it cannot be set externally but only internally by Ditto itself.
Header value: `PATH=VALUE` where `PATH` is either a regular JSON Pointer or a ""wildcard path"" like for example `/*/issuedAt`. `VALUE` is a valid JSON value. Multiple metadata key-value pairs are separated by a comma `,`.

A HTTP header for setting metadata could look as follows – the leading slash (`/`) of the paths is optional:

    metadata: /*/issuedAt=""2020-06-09T14:29:00Z"",/color/r/someCounter=23

This approach has the advantage that `metadata` could become a well-known `DittoHeaderDefinition` as it is no longer just a prefix.

@JulianFeinauer what do you think about this topic?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY3MTczMjMwMQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/680,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY3MTc0OTU2OA==,ditto,671749568,680,NA,JulianFeinauer,17098762,Julian,,NA,2020-08-11T06:12:32Z,2020-08-11T06:12:32Z,"Thanks for all the effort you put into the topic @jufickel-b and @thjaeckle !
The suggestion is fine for me although we could probably look for a well known format to transport the list of metadata like JSON to make it easier (from an application perspective) to parse and serialize the information.

WDYT?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY3MTc0OTU2OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/680,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY3MTc2ODk0OQ==,ditto,671768949,680,NA,jufickel-b,17162397,Juergen Fickel,,NA,2020-08-11T07:05:02Z,2020-08-11T07:05:02Z,"We discussed this, too and this is also fine. If the header value was a JSON object the example would look like

    metadata: {""/*/issuedAt"":""2020-06-09T14:29:00Z"",""/color/r/someCounter"":23}

The advantage, like you already mentioned, is a well-known format (JSON) which makes it easier for applications to handle.
A possible drawback could be that the header value could be confused with the effective `Metadata` object of the thing (_metadata).

Should we go with JSON?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY3MTc2ODk0OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/680,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY3MTc3Njk1Mw==,ditto,671776953,680,NA,JulianFeinauer,17098762,Julian,,NA,2020-08-11T07:24:09Z,2020-08-11T07:24:09Z,"From a users perspective definetly JSON but I get your point.
But I think there are few alternatives if we have multiple informations in one header fields payload, or?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY3MTc3Njk1Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/680,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY3MTg5MzM1NQ==,ditto,671893355,680,NA,jufickel-b,17162397,Juergen Fickel,,NA,2020-08-11T11:36:12Z,2020-08-11T11:36:12Z,"Yes, indeed. So JSON it is :-)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY3MTg5MzM1NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/680,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY3MjY4NzYwOQ==,ditto,672687609,680,NA,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,NA,2020-08-12T07:28:27Z,2020-08-12T07:28:27Z,"I think we could run into problems with the single JSON-Object as Metadata value.
Our JSON parsing will parse this meta data : 
`meta-data: {""/features/lamp/properties/color/r"":{""issuedAt"":someTimestamp, ""issuedBy"":{""name"": ""me"", ""mail"":""me@mail.com""}}}`

To the following JSON Object. After this parsing we can't get the initial path `/features/lamp/properties/color/r` anymore
```
{
  ""features"": {
    ""lamp"": {
      ""properties"": {
        ""color"": {
          ""r"": {
            ""issuedAt"": ""someTimeStamp"",
            ""issuedBy"": {
              ""name"": ""me"",
              ""mail"": ""me@mail.com""
            }
          }
        }
      }
    }
  }
}
```

Therefore I suggest a format like this:

```
meta-data: [{
  ""path"" : ""/features/lamp/properties/color/r"":
  ""value"" : {""issuedAt"":someTimestamp, ""issuedBy"":{""name"": ""me"", ""mail"":""me@mail.com""}}
}]
```
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY3MjY4NzYwOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/680,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY3MjcwMDE1Ng==,ditto,672700156,680,NA,jufickel-b,17162397,Juergen Fickel,,NA,2020-08-12T07:46:09Z,2020-08-12T07:46:09Z,"@Yannic92 this is exactly the behaviour I experienced while playing around.
Your suggestion seems to be a reasonable solution.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY3MjcwMDE1Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/680,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY3NTQ0NjQ4MA==,ditto,675446480,680,NA,jufickel-b,17162397,Juergen Fickel,,NA,2020-08-18T12:24:15Z,2020-08-18T12:24:15Z,"With commit https://github.com/JulianFeinauer/ditto/commit/97229c2c61416e33bc2dcd9f20ccfd909c39546d we have a working state for setting metadata via headers.

A valid HTTP header of this implementation looks like for example (formatted for better readability)
```
metadata: [
  {
    ""key"":""/features/lamp/properties/color/r"",
    ""value"":{""issuedAt"":someTimestamp,""issuedBy"":{""name"":""me"",""mail"":""me@mail.com""}}
  },
  {
    ""key"":""*/"",
    ""value"":""bar""
  }
]
```

I wonder how one could get rid of unused metadata, as headers only allow to set metadata. An already working solution could be to set the value to the `null` literal at an appropriate level. What do you think?

Still missing is proper documentation of the feature in `ditto-documentation`. @JulianFeinauer do you want to add some?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY3NTQ0NjQ4MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/680,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY3NTQ1ODYwNQ==,ditto,675458605,680,NA,JulianFeinauer,17098762,Julian,,NA,2020-08-18T12:50:20Z,2020-08-18T12:50:20Z,"First, thanks for your strong support @jufickel-b and @thjaeckle . I will add documentation and I would be fine with deleting them via ""setting"" them to null.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY3NTQ1ODYwNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/680,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY3ODk2OTg5Nw==,ditto,678969897,680,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-08-24T07:53:51Z,2020-08-24T07:53:51Z,I adjusted the title of the issue as this turned out to be a more generic approach (which I highly appreciate :+1:),"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY3ODk2OTg5Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/681,https://api.github.com/repos/eclipse-ditto/ditto/issues/681,ditto,617387459,681,Error messages for connection domain blacklists are confusing,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,OPEN,2020-05-13T11:58:07Z,2021-05-17T05:49:49Z,"When creating an mqtt-connector:

In case the domain of e.g. an mqtt service for a connector is not only publicly available but also via an alias within a docker network directly reachable through the local network the connector will not be created and an error will be thrown that the domain `mqtt.public-and-valid.org` is blacklisted. This happens, because the domain is internally translated to local addresses, which is indeed an undesired target from the point of view of the implementation. The problem however is, that the error message does not provide any hint about this being the case and instead complains that the valid domain is blacklisted which is not the case.

The error messages in this case need to give more details about what is happening. This has to become more agnostic to the underlying networking behavior.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/681/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/681,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYzNTI5NjM5OA==,ditto,635296398,681,NA,dguggemos,15028977,Dominik Guggemos,dominik.guggemos@bosch.io,NA,2020-05-28T12:02:44Z,2020-05-28T12:02:44Z,"That's a good point, we should provide more details why the url was blacklisted e.g. the host resolved to a local address etc. We plan to enhance the url validation check anyways, so we can improve the error messages in one go.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYzNTI5NjM5OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/682,https://api.github.com/repos/eclipse-ditto/ditto/issues/682,ditto,617426473,682,Add custom HTTP REST API facades wrapping Ditto message commands,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,OPEN,2020-05-13T12:57:33Z,2022-10-28T10:41:36Z,"Use-Case
---

A micro-service providing certain additional functionality to a thing, e.g. managing historical time series data, is registered to ditto via e.g. websockets and processes certain messages send to digital twins. A client application may now send messages to a thing to get it's history. For this to work it has to know what messages exist, what parameters they expect and what the response looks like. Typical API knowledge.

Currently this knowledge has to be managed outside the ecosystem with a third-party application / channel.

Basic Idea
---

A micro-service may use a descriptive interface to ditto to share it's capabilities in a way that ditto may serve dynamic REST endpoints according to the specification of the service.

Further Thoughts
---

It would be handy to have also a dynamic swagger doc reflecting addtional functionality.

Ditto should cache this registered API and also provide means to integrate this into health check requests.

Discussion
---

Let's discuss!","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/682/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/682,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyNzk3MDEwOQ==,ditto,627970109,682,NA,JulianFeinauer,17098762,Julian,,NA,2020-05-13T13:05:04Z,2020-05-13T13:05:04Z,"Thanks for the initiative @w4tsn!
So you suggest to have another service beneath e.g. search that is ""history"" and that exposes its own Ditto API? I highly +1 that!
For the format it would be interesting to discuss typical use cases (I can share some of ours here, and you may also have some), or what do you suggest for next steps?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyNzk3MDEwOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/682,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyOTI2MjQyNQ==,ditto,629262425,682,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2020-05-15T14:20:26Z,2020-05-15T14:20:26Z,"@JulianFeinauer 

> For the format it would be interesting to discuss typical use cases (I can share some of ours here, and you may also have some)

Great idea! I will prepare something next week.

Let me add some more thoughts / bit of rephrasing what I have in mind. Basically this is about the possibility to provide our own ""custom"" services in a transparent way which would also allow us to provide them in other languages and runtimes.

In our specific use-case we added a micro-service providing our custom history API. We want to have this API simply be available through ditto messages and secured by the policy framework of ditto. Our frontend developers however want to have a typical REST API with Swagger docs. Of course they can use the generic REST API for ditto messages, but this is not really an expressive way of exposing our API.

Right now we communicate the API capabilities in a separate document in our own ""swagger-ish"" language which is a bit of a pain in the *** for both sides - especially because API spec is an already solved problem so to speak. The micro-service expects certain ditto message topics, fields in the messages payload etc.

This is only one service with one additional functionality. We might come up with additional services in the future which face similar problems. In order to solve this it would be nice to define the API in a descriptive way (maybe through Vorto Models / Generators, Operations and Events come to mind) and provide this to ditto so it may update it's available REST API for twins and features dynamically according to the new services API spec.

EDIT on 2021.08.12:

The API facade needs to allow all kinds of REST API methods. Currently with ditto messages API every request is a POST. One problem with this are semantics of the resulting API a thing (or a delegate service) exposes. E.g. if I just want to GET data, I don't want to send a POST. The other problem is actually a technical one: in our tests we discovered a bug in Firefox that would prevent using a POST that is answered with a `303 See Other`. While this use-case is covered in RFC 2616 it seems to be so uncommon that even well-known browsers don't implement that right.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYyOTI2MjQyNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/685,https://api.github.com/repos/eclipse-ditto/ditto/issues/685,ditto,626436705,685,Support for policy wildcard in message:/features,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,CLOSED,2020-05-28T11:32:23Z,2020-06-25T11:34:23Z,"It is possible to assign READ and WRITE permissions for /inbox and /outbox on a thing level or specific feature level. From the documentation however it seems that a wildcard of the form `message:/features/*/inbox` is not possible.

For a use-case I'd like to enforce the usage of message:/features/*/inbox instead of message:/inbox, but I don't care about the actual feature in the policy and I don't want to write down every possible feature there is in the policy. I require the full feature / property path in the message because of the metadata it contains.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/685/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/685,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYzNTI5ODYxOQ==,ditto,635298619,685,NA,dguggemos,15028977,Dominik Guggemos,dominik.guggemos@bosch.io,NA,2020-05-28T12:08:00Z,2020-05-28T12:08:00Z,"Actually we also have the very same task in our backlog, but currently no plans to implement it.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDYzNTI5ODYxOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/685,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0OTQ4NTM2OQ==,ditto,649485369,685,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-06-25T11:34:23Z,2020-06-25T11:34:23Z,I'll close this in favor of #708 where the wildcard in policies should also be supported not only for the `message:` resource but also for the `thing:` resource.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0OTQ4NTM2OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/686,https://api.github.com/repos/eclipse-ditto/ditto/issues/686,ditto,630177684,686,Ditto sandbox is down,stfnp,21069852,Stefan Pfeifer,,CLOSED,2020-06-03T17:19:08Z,2020-06-09T08:45:47Z,The sandbox at https://ditto.eclipse.org/ seems to be down. Or has it been moved somewhere else?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/686/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/686,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0MTEzMjA2Mg==,ditto,641132062,686,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-06-09T08:45:46Z,2020-06-09T08:45:46Z,Hi @stfnp - We just restarted it and it is running again.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0MTEzMjA2Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/690,https://api.github.com/repos/eclipse-ditto/ditto/issues/690,ditto,636382451,690,Additional x.y container release tag,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,CLOSED,2020-06-10T16:19:08Z,2020-07-01T13:17:59Z,"Just as an idea useful for a certain container update pattern it could be useful to additionally publish a tag on the container registry (docker hub) of the form x.y for every z release (x.y.z).

Example:

There is a tag for 1.1.0. If now a version 1.1.1 is pushed, two tags are published: 1.1.1 and latest with this image. If there would be another tag 1.1, which is always updated when there is a release for 1.1.x then one could pin to that version and automatically receive all hotfix/maintenance updates without touching the configuration. This is a useful container update pattern I like to use ;)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/690/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/690,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0MzkzNDI0Mg==,ditto,643934242,690,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-06-15T06:39:15Z,2020-06-15T06:39:15Z,"Yes, that's indeed a good idea 👍 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0MzkzNDI0Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/690,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1MjQxMzA0Ng==,ditto,652413046,690,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-07-01T13:17:59Z,2020-07-01T13:17:59Z,"@w4tsn the just built 1.1.2 release is now on Docker Hub and tagged with:
* 1.1.2
* 1.1
* 1
* latest

See: https://hub.docker.com/r/eclipse/ditto-things/tags?page=1&ordering=last_updated","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1MjQxMzA0Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/691,https://api.github.com/repos/eclipse-ditto/ditto/issues/691,ditto,638521392,691,DLL files detected in docker images,aaron0609,49503795,,,CLOSED,2020-06-15T03:56:04Z,2020-06-15T09:07:24Z,"I retrieved the jar files from official docker images eclipse/ditto-XXXX:1.1.0 and made a Sonatype scan based on Ditto components, but from the Sonatype report, it seems the jar file contains some windows dll files which is marked as ""Policy Violations"".

- jffi-1.2.dll

- lmdbjava-native-windows-x86_64.dll

Are these “dll” components really necessary for Ditto? Or is there any way to resolve that issue to pass the Sonatype check?
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/691/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/691,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0MzkzMzk3OA==,ditto,643933978,691,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-06-15T06:38:34Z,2020-06-15T06:38:34Z,"Hi @aaron0609 

The DDL files are part of 2 transitive dependencies, jffi and lmbdjava which Ditto relies on.
The jar files of those include native libraries for various operating systems.

The ""allinone"" jars of Ditto are [""shaded""](https://maven.apache.org/plugins/maven-shade-plugin/) jars extracting all used jars, so the native libraries also appear in them.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0MzkzMzk3OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/696,https://api.github.com/repos/eclipse-ditto/ditto/issues/696,ditto,641255240,696,[epic] Distinguish between reported and desired state in twins,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2020-06-18T14:30:37Z,2020-12-02T11:02:19Z,"## Problem statement

A feature which was long on the roadmap of Eclipse Ditto (see also former GH issue #125 where previous discussions were done) is the ability to distinguish between reported and desired twin state.
`reported` twin state can be seen as data/state coming from the actual device (the current ""truth"") whereas the `desiredProperties` state is something an application in the backend or a mobile app would set as the new requested target state for a property.

## Example

For example, take a room thermostat:
* the actual device reports that the measured-temperature (reported) is 20°
* the currently configured target-temperature (reported) is also 20°
* the user feels chilly, so via a mobile app the (desired) target-temperature is set to 22°
* the actual device receives this desired target-temperature as change notification and sets its `reported` target-temperature also to 22
* when this change was done and `reported = desired` for the target-temperature, the desired target-temperature is removed from the twin
* the measured-temperature in this moment is still 20, and the device will now start heating up the room until the measured-temperature reaches the (reported) target-temperature
* now if the device was offline during the desired target-temperature was configured, upon reconnection it can ask its twin ""give me a delta for the desired state to apply"" and can apply those missed changes


### Sequence diagram

The following sequence diagram shall illustrate the interaction pattern:

![Untitled (2)](https://user-images.githubusercontent.com/1331526/100864184-f16a9e80-3495-11eb-8f10-c15c584ed620.png)


<details>
  <summary>Show sequencediagram.org source of sequence diagram</summary>
  
  ```
  title Eclipse Ditto reported/desired feature state

participant Mobile App
participant Ditto
participant Device

==Device has connection==

Mobile App->Ditto:set ""desired"" property\nThermo/desiredProperties/configuration/targetTemp
activate Mobile App
activate Ditto
activate Device
Ditto->Ditto:update twin\nThermo/desiredProperties/configuration/targetTemp
Mobile App<-Ditto:response
deactivate Mobile App

Ditto->Device:send modified event regarding\nThermo/desiredProperties/configuration/targetTemp
deactivate Ditto

Device->Device:apply config change

Device->Ditto:confirm by setting actual property\nin ""properties"" with same name:\nThermo/properties/configuration/targetTemp
activate Ditto

Ditto->Ditto:update twin\nThermo/properties/configuration/targetTemp
Mobile App<--Ditto:send modified event regarding\nThermo/properties/configuration/targetTemp

Ditto->Ditto:remove twin\nThermo/desiredProperties/configuration/targetTemp
Mobile App<--Ditto:send modified event regarding\nThermo/desiredProperties/configuration/targetTemp

deactivate Ditto
deactivate Device

==Device looses connection==

Mobile App->Ditto:set ""desiredProperties"" property\nThermo/desiredProperties/configuration/targetTemp
activate Mobile App
activate Ditto
Ditto->Ditto:update twin\nThermo/desiredProperties/configuration/targetTemp
Mobile App<-Ditto:response
deactivate Mobile App

note right of Ditto:ineffective modified event
deactivate Ditto

==on Device re-connect==

Device->Ditto:request outstanding desired changes
activate Ditto
activate Device
Ditto->Device:send back all outstanding (non-deleted) \ndesired properties
deactivate Ditto

Device->Device:apply delta\nchanges to\ndesired
Device->Ditto:confirm by setting adjusted actual property\nin ""properties"" with same name:\nThermo/properties/configuration/targetTemp
activate Ditto

Ditto->Ditto:update twin\nThermo/properties/configuration/targetTemp
Mobile App<--Ditto:send modified event regarding\nThermo/properties/configuration/targetTemp

Ditto->Ditto:remove twin\nThermo/desiredProperties/configuration/targetTemp
Mobile App<--Ditto:send modified event regarding\nThermo/desiredProperties/configuration/targetTemp

deactivate Ditto
deactivate Device

====
note over Mobile App,Device:Sequence diagram created using the awesome online tool http://sequencediagram.org/
  ```
</details>


## Benefits

Currently, Eclipse Ditto foresees `features` of a `thing` (aka the digital twin) to contain data/state from real devices in the `properties` of the features.
It is however not defined if those properties are reported or desired state. Up to now this had to be defined by the application developer modeling the data 
to store in Ditto.

By defining in Ditto what is `reported` and what `desired` property state, Ditto can provide several benefits for application developers:
* at any time (e.g. when a device is not connected) the reported and desired properties are clearly distinguishable in the twin
* devices which are offline during changing `desiredProperties` can retrieve all desired state of a digital twin, e.g. on (re-)connection of the device
* delta changes can be calculated by Ditto in order to get a list of changes to be done for an out-of-sync-device to reach its configured desired state
* the `definition` (the information about the contained properties and their types) of a feature applies for both, reported and desired state
* automatic cleanup/deletion of desiredProperties state by Ditto when reported state eventually reaches the desired state
* policies may be applied based on reported/desired, so e.g. a device may be prohibited to change the `desiredProperties` state whereas an end user may be prohibited from changing the `reported` state
* search capabilities based on the desired state, e.g. finding all twins where the desired state is not yet met
* automatic delta calculation and publishing to the device upon device connection
* maintaining order (modification timestamp) of desired/reported changes in order to not apply a desired change when a change done to the actual device was done at a later point in time

This GitHub issue shall act as the overall ""epic"" for all issues regarding the ""desiredProperties"" feature addition.


## EPIC issues 

### Phase 1
* #697: Enhance model and APIs with ""desiredProperties"" for Features
* #700: Support wildcard in ""fields"" selectors in order to receive all ""desired"" properties of all features of a thing
* #698: Delete value of a ""desiredProperties"" feature property once the actual ""property"" was set to the same value
* #701: Convenient creation of parent objects for modify commands with nested JSON paths

### Phase 1+x
* #708: Support for using wildcard in place of feature name in policies
* #702: Search for things/features with pending ""desiredProperties""
* #704: Provide information about desired property changes which could not be applied
* #706: Don't apply desired property if ""applied"" property was changed by device more recently
* #703: Automatically publish remaining desired state upon device connection
* #705: Emit a special event once a single and/or all ""desiredProperties"" were cleared
* #699: Provide a command + APIs in order to calculate+retrieve deltas of desiredProperties vs. properties

Please feel free to start discussions about the overall concept in this issue and regarding the more specific topics in the linked issues.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/696/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/696,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0NjUxNDczMA==,ditto,646514730,696,NA,jufickel-b,17162397,Juergen Fickel,,NA,2020-06-19T08:35:08Z,2020-06-19T08:35:08Z,"At least one corner case came to my mind: what happens if a property with a desired state gets deleted or renamed?

Deletion, probably, is no problem because the desired state gets deleted as well.

However when a property is renamed will its desired property renamed, too? If so, how does Ditto maintain the association of the former name to the new name for received state changes?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0NjUxNDczMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/696,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0NjUxNjkwMg==,ditto,646516902,696,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-06-19T08:40:56Z,2020-06-19T08:40:56Z,"> At least one corner case came to my mind: what happens if a property with a desired state gets deleted or renamed?

I think that this is a cornercase which can only happen during development - once the model/structure of a feature is defined by a fixed ""definition"", there is no renaming of properties.

When updating the major version of a definition (according to semantic versioning this would be the only way to rename a field), there would have to be a migration done anyways, so that migration must migrate properties as well as desired fields the same way.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0NjUxNjkwMg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/697,https://api.github.com/repos/eclipse-ditto/ditto/issues/697,ditto,641266997,697,"Enhance model and APIs with ""desiredProperties"" for Features",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2020-06-18T14:44:34Z,2020-11-09T14:19:29Z,"Actual issue for implementing the model discussed first in #125 and now being part of #696 

The latest proposal is the following JSON structure containing the ""desiredProperties"" needed for #696:
```json
{
  ""thingId"": ""org.eclipse.ditto:my-thermostat-1"",
  ""policyId"": ""org.eclipse.ditto:my-thermostat-1"",
  ""features"": {
    ""Thermostat"": {
      ""definition"": [ ""org.eclipse.ditto:Thermostat:1.0.0"" ],
      ""properties"": {
        ""status"": {
          ""measured-temperature"": 20
        },
        ""configuration"": {
          ""target-temperature"": 20.0
        }
      },
      ""desiredProperties"": {
        ""configuration"": {
          ""target-temperature"": 22.0
        }
      }
    }
  }
}
```

Explanation:
* aside to `properties` the new Ditto managed field `desiredProperties` is added
* the same `definition` applies for both `properties` and `desiredProperties`
   * however, inside `desiredProperties` all mandatory properties defined by the definition are optional
* once a `desiredProperties` property is set (e.g. by a backend application or mobile app), the actual device has the task to apply that and reflect the applied `desiredProperties` property in the same one below the `properties` object
* when `desiredProperties` is not existing or is empty, all desired property changes were applied, none are pending

The pros/cons of this approach (other formats were already discussed in #125) are:

`+`:
* same definition is shared for properties and desired
   * (future topic relevant for schema validation): however, for desired the ""required"" properties defined in the Vorto model probably have all to be optional
* defines fine grained which deltas should be sent downlink
* policy may be written in a way which defines different access rights for properties/desiredProperties
* search can use desiredProperties and/or reported properties (even in combination)
* reduced unneeded payload duplication (besides properties hierarchy structure in JSON)
* no need for a `desired` channel in addition to `twin/live` - that would be ""just"" another JsonPointer path in the twin

`-`:
* is currently NOT possible by convention before implementing the model enhancement

## Interim format until model is implemented

In order to mitigate the negative point, that this format is not usable in the meantime until the Ditto model was enhanced, the following interim format is suggested:

<details>
  <summary>Click to see the interim format</summary>
  
  ```json
{
  ""thingId"": ""org.eclipse.ditto:my-thermostat-1"",
  ""policyId"": ""org.eclipse.ditto:my-thermostat-1"",
  ""features"": {
    ""Thermostat"": {
      ""definition"": [ ""org.eclipse.ditto:Thermostat:1.0.0"" ],
      ""properties"": {
        ""~properties"": {
          ""status"": {
            ""measured-temperature"": 20
          },
          ""configuration"": {
            ""target-temperature"": 20.0
         }
        },
        ""~desiredProperties"": {
          ""configuration"": {
            ""target-temperature"": 22.0
          }
        }
      }
    }
  }
}
  ```
</details>

All API calls would work very similar to the future structure. Partial GET/PUT semantics are similarly supported.

The character prefix `""~""` is used to mark that this is the preliminary convention and this allows a simpler migration towards the target format.

Migration is later possible by:
* rewriting all paths: ""properties/~properties"" → ""properties"" and ""properties/~desiredProperties"" → ""desiredProperties""

A script could optionally migrate existing things/policies from the interim format to the actual one once implemented.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/697/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/698,https://api.github.com/repos/eclipse-ditto/ditto/issues/698,ditto,641277312,698,"Delete value of a ""desired"" feature property once the actual ""property"" was set to the same value",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2020-06-18T14:56:33Z,2020-10-15T14:12:58Z,"As part of #696 the goal is to have an empty or even removed ""desiredProperties"" section in a feature once all desired properties were applied by a device.

This can be done automatically by Ditto whenever a feature property is changed to the same value as an existing desired property with the same access path.

Example:
Given we have our simple room thermostat:
```json
{
  ""thingId"": ""org.eclipse.ditto:my-thermostat-1"",
  ""policyId"": ""org.eclipse.ditto:my-thermostat-1"",
  ""features"": {
    ""Thermostat"": {
      ""definition"": [ ""org.eclipse.ditto:Thermostat:1.0.0"" ],
      ""properties"": {
        ""status"": {
          ""measured-temperature"": 20
        },
        ""configuration"": {
          ""target-temperature"": 20.0
        }
      }
    }
  }
}
```

And now e.g. a mobile app sets that the lamp should not be on by setting `target-temperature` should be adjusted by setting `desiredProperties/configuration/target-temperature` to `22.0`:
```json
{
  ""thingId"": ""org.eclipse.ditto:my-thermostat-1"",
  ""policyId"": ""org.eclipse.ditto:my-thermostat-1"",
  ""features"": {
    ""Thermostat"": {
      ""definition"": [ ""org.eclipse.ditto:Thermostat:1.0.0"" ],
      ""properties"": {
        ""status"": {
          ""measured-temperature"": 20
        },
        ""configuration"": {
          ""target-temperature"": 20.0
        }
      },
      ""desiredProperties"": {
        ""configuration"": {
          ""target-temperature"": 22.0
        }
      }
    }
  }
}
```

* the device registers this change by a received event
* then, it actually performs the hardware action (changing the target temperature, turning the heating on)
* when that was a success, it sets its `properties/configuration/target-temperature` to the applied state: `22.0`
* Ditto will persist this change and automatically remove the `desiredProperties/configuration/target-temperature` as this has now the same value as the `properties/configuration/target-temperature`
   * JSON numbers are semantically compared, that e.g. means `22.0 == 22`
* Ditto will also delete empty JSON objects ""the way up"", including the `desiredProperties` object if all desired changes were confirmed
```json
{
  ""thingId"": ""org.eclipse.ditto:my-thermostat-1"",
  ""policyId"": ""org.eclipse.ditto:my-thermostat-1"",
  ""features"": {
    ""Thermostat"": {
      ""definition"": [ ""org.eclipse.ditto:Thermostat:1.0.0"" ],
      ""properties"": {
        ""status"": {
          ""measured-temperature"": 20
        },
        ""configuration"": {
          ""target-temperature"": 22.0
        }
      }
    }
  }
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/698/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/698,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0ODgxNTM4Mg==,ditto,648815382,698,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-06-24T13:20:13Z,2020-06-24T13:20:13Z,"Include a ""delta"" for applying the deletion for numbers.
E.g: 1.0 == 1","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0ODgxNTM4Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/698,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0OTUzMTgwMA==,ditto,649531800,698,NA,geglock,14750235,Gerald Glocker,,NA,2020-06-25T13:11:56Z,2020-06-25T13:11:56Z,"I think the automatic cleanup could be unwanted for certain scenarios, e.g. when there is not ""full trust"" towards the devices or due to audit requirements.
To address this, we could make it optional by having some ""desired handling strategy"" configuration per Thing, which allows to turn off the automatic cleanup.

In this case the ""delta calculation"" issue (#699) would be important to avoid redundant desired property transmission.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0OTUzMTgwMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/698,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0OTU1MjU4Ng==,ditto,649552586,698,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-06-25T13:48:42Z,2020-06-25T13:48:42Z,"> To address this, we could make it optional by having some ""desired handling strategy"" configuration per Thing, which allows to turn off the automatic cleanup.

We could add a section for configuring such things, e.g.:
```json
{
  ""thingId"": ""org.eclipse.ditto:my-thermostat-1"",
  ""policyId"": ""org.eclipse.ditto:my-thermostat-1"",
  ""features"": {
    ""Thermostat"": {
      ""definition"": [ ""org.eclipse.ditto:Thermostat:1.0.0"" ],
      ""properties"": {},
      ""desired"": {},
      ""desiredSettings"": {
        ""desiredDeletionStrategy"": [
          ""reported-reaches-desired""
        ]
      }
    }
  }
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0OTU1MjU4Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/698,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwMDgzNjk3Mg==,ditto,700836972,698,NA,ffendt,2587759,Florian Fendt,,NA,2020-09-29T16:40:51Z,2020-09-29T16:40:51Z,"As far as I understand #696, the desired section is especially meant (and useful) for configuration values (in contrast to measured values). Like in the above example the `target-temperature`.

If we aim this feature at configuration values, I don't think that we need a check on ""same value"" at all when deleting the desired value for a property. The user sets a desired configuration value and the device updates the reported configuration value. For me this would mean that the desired value becomes obsolete and can be deleted and thus there's no need to automagically compare the values.

If updates from user and device are expected to cause race conditions for devices, ETags could be used to ensure that the desired/reported state is only updated if the Thing is in the expected state.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwMDgzNjk3Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/698,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwMDg1MzQ5MA==,ditto,700853490,698,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-09-29T17:08:59Z,2020-09-29T17:08:59Z,"True, equality is not a requirement for the cleanup of desired properties.
I think that we somehow should make it configurable nonetheless as the requirements on how the desired state is used could be very different. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwMDg1MzQ5MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/698,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwMTE2MjMxNw==,ditto,701162317,698,NA,ffendt,2587759,Florian Fendt,,NA,2020-09-30T05:21:37Z,2020-09-30T05:21:37Z,"Maybe it would be sufficient to have the configuration in a way in which Ditto doesn't have to interpret a whole lot into possible use-cases, but just its default use case (e.g. delete desired when new reported) and one configuration that allows users to freely implement behavior for it as they like (e.g. Ditto does nothing when a new reported value comes in). If a user has some special use-case where the configuration value increases slowly towards the desired value, he/she should still be able to implement this behavior on his/her own.

From a Ditto POV I think we shouldn't do hasty assumptions on how the users would use such a feature. If we have the handling configurable, new configurations can still be contributed by users when it becomes obvious that there is a widely used pattern for how they are handling desired/reported states.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwMTE2MjMxNw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/698,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwMTE3OTgwNw==,ditto,701179807,698,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-09-30T06:14:40Z,2020-09-30T06:14:40Z,"> one configuration that allows users to freely implement behavior for it as they like

That sounds like dynamic script invocation :) Do you think in the same direction (providing e.g. a JS snippet) or how could this be achieved?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwMTE3OTgwNw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/698,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwMTE4MjEwOA==,ditto,701182108,698,NA,ffendt,2587759,Florian Fendt,,NA,2020-09-30T06:20:34Z,2020-09-30T06:20:34Z,"Actually I meant that we don't do anything when a new value comes and the user can decide if he/she wants to use our default API to delete a desired value or not.

But I also thought in the direction of providing a separate place for e.g. JS snippets with which the user could define own behavior. That way Ditto wouldn't have to implement different strategies, but just needs like 1-2 default strategies (e.g. delete / not-delete) and another one which references a custom behavior.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwMTE4MjEwOA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/698,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwMTIzOTg1NA==,ditto,701239854,698,NA,geglock,14750235,Gerald Glocker,,NA,2020-09-30T08:19:30Z,2020-09-30T08:19:30Z,"I think we don't have to discuss ""JS snippets"" etc. but just use the standard event notification way: an application could listen to all reported changes and decide on it's on if it wants to delete desired values (with or without comparison of the values).
The ""strategy"" approach could be just a convenience to support some strategies built-into Ditto.
I.e.
""no strategy"" = do nothing - the application can optionally use event notifications and do whatever logic it needs""
""delete desired - strategy"" = delete desired property for each updated reported property without comparison
""delete desired if same value is reported - strategy"" = ...
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwMTIzOTg1NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/698,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwMjU1OTg1Mg==,ditto,702559852,698,NA,ffendt,2587759,Florian Fendt,,NA,2020-10-02T06:50:53Z,2020-10-02T06:50:53Z,"I agree that it would be nice to have some convenience, but in my opinion we should start as simple as possible. Time will tell how the feature is used and what users expect from it. Then we can think of the places where we need to add convenience.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwMjU1OTg1Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/699,https://api.github.com/repos/eclipse-ditto/ditto/issues/699,ditto,641282213,699,Provide a command + APIs in order to calculate+retrieve deltas of desired vs. properties,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2020-06-18T15:01:56Z,2020-10-15T14:12:31Z,"As part of #696 a new functionality shall be introduced in order to calculate a delta/diff/patch between the `desiredProperties` and the `properties` (or reported) state of a digital twin (thing) or of a single feature of it.

The format has to be defined, it could be:
* a JSON patch document: https://tools.ietf.org/html/rfc6902
* a simpler, self defined JSON format
* ...?

The following APIs are added:
* HTTP endpoint(s) in order to retrieve that deltas for complete things and for single features
* Ditto Protocol counterparts in order to do the same via WebSocket and connections","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/699/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/699,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0NjUwMTQwMQ==,ditto,646501401,699,NA,jufickel-b,17162397,Juergen Fickel,,NA,2020-06-19T08:06:19Z,2020-06-19T08:06:19Z,I prefer a JSON Patch document as it matches the requirements and first and foremost because it is a well-known standard.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0NjUwMTQwMQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/699,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0OTM0MTMzMg==,ditto,649341332,699,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-06-25T08:02:17Z,2020-06-25T08:02:17Z,"Maybe this is not required at all and #700 is sufficient in order for a device to retrieve all ""unapplied"" `desired` changes.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0OTM0MTMzMg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/699,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1MjI0MjA4NQ==,ditto,652242085,699,NA,ffendt,2587759,Florian Fendt,,NA,2020-07-01T07:23:49Z,2020-07-01T07:23:49Z,"From my point of view, the desired properties already are the ""delta"" (or diff/patch). Moreover, the device knows best how to calculate the delta (if it even needs one) for its business case and the value types it uses.
Thus basically I see no real reason how this functionality would help Ditto users achieving their goals, or am I missing something here?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1MjI0MjA4NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/699,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1MjI1MTQ0Mg==,ditto,652251442,699,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-07-01T07:43:21Z,2020-07-01T07:43:21Z,"@ffendt one concern could be that the `desired` state should not be cleared when the `properties` state reached the desired value.
That's where a delta would still be beneficial, e.g. in order to save payload.

Not clearing the `desired` properties could be a requirement, e.g. in order to apply the complete last known ""desired"" state when a device does a reset to factory settings.
When Ditto would clear the `desired` state, the last known overall desired state is not tracked.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1MjI1MTQ0Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/699,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1MjI2MDM5OA==,ditto,652260398,699,NA,ffendt,2587759,Florian Fendt,,NA,2020-07-01T08:01:23Z,2020-07-01T08:01:23Z,"Imho we should never clear the desired state automatically and leave this to the device itself. It would be convenient to just return the diff between the reported and desired values to the device (or, using a query flag, returning all desired values). If the device wants to have a clean desired representation, it can delete the unwanted values itself.

Btw: did I misunderstand the meaning of `delta` in this case? (When thinking of a `delta`, I think about `reported=6`, `desired=8`, --> send `delta=2` to the device.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1MjI2MDM5OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/699,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1MjI3MTU1MQ==,ditto,652271551,699,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-07-01T08:23:19Z,2020-07-01T08:23:19Z,"> Btw: did I misunderstand the meaning of delta in this case? (When thinking of a delta, I think about reported=6, desired=8, --> send delta=2 to the device.

Oh, that's not what I meant.
With ""delta"" I meant something like calculating a JSON patch for the ""reported"" `properties` which currently differ from the `desiredProperties` ones, e.g.:
```json
[
  { ""op"": ""replace"", ""path"": ""/features/Thermostat/properties/configuration/target-temperature"", ""value"": 22.0 }
]
```
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1MjI3MTU1MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/700,https://api.github.com/repos/eclipse-ditto/ditto/issues/700,ditto,641290599,700,"Support wildcard in ""fields"" selectors in order to receive all ""desired"" properties of all features of a thing",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2020-06-18T15:11:23Z,2022-01-25T17:25:05Z,"As part of #696, but also as a general useful enhancement of Ditto, the ""fields"" selector which can be used to perform [partial requests with field selector](https://www.eclipse.org/ditto/httpapi-concepts.html#with-field-selector) shall support the wildcard `_` (similarly to MQTT, targeting only 1 level) in order to define ""anything"" for a certain JSON pointer segment.

## In scope of the ""desired"" project

Such queries are needed in order to get all the (unapplied) ""desiredProperties"" of a thing, e.g. with such a query:
```
GET /api/2/things/org.eclipse.ditto:my-thermostat-1?fields=features/_/desiredProperties
```

When using the search API, also all ""desiredProperties"" fields may be selected as result of the search:
```
GET /api/2/search/things?filter=like(attributes/manufacturer,""ACME*"")&fields=features/_/desiredProperties
```


## In general

That is very useful when feature names of a thing are unknown and special parts of all features shall be retrieved with one command.

Example: For the given thing JSON:
```json
{
  ""thingId"": ""org.eclipse.ditto:traffic-light"",
  ""policyId"": ""org.eclipse.ditto:traffic-light"",
  ""features"": {
    ""red-lamp"": {
      ""properties"": {
        ""on"": true,
        ""color"": ""red""
      }
    },
    ""yellow-lamp"": {
      ""properties"": {
        ""on"": true,
        ""color"": ""yellow""
      }
    },
    ""green-lamp"": {
      ""properties"": {
        ""on"": false,
        ""color"": ""green""
      }
    }
  }
}
```

The goal is to get only the ""on"" properties of all lamps of a traffic light.

That could be done with the following HTTP request:
```
GET /api/2/things/org.eclipse.ditto:traffic-light?fields=features/_/properties/on
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/700/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/700,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C8484cvQ,ditto,1021430736,700,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-01-25T17:25:05Z,2022-01-25T17:25:05Z,"This should be already available via the recently done PR #1277 

Syntax: 
```
GET /api/2/things/org.eclipse.ditto:my-thermostat-1?fields=features/*/desiredProperties

GET /api/2/things/org.eclipse.ditto:traffic-light?fields=features/*/properties/on
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C8484cvQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/701,https://api.github.com/repos/eclipse-ditto/ditto/issues/701,ditto,641307559,701,Convenient creation of parent objects for modify commands with nested JSON paths,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2020-06-18T15:29:17Z,2022-06-29T09:32:19Z,"As part of #696, but also as a general useful enhancement of Ditto, it shall be supported to create/modify nested JSON fields inside a thing without the need that their parents in the JSON are create before.

Currently, when you have the following thing JSON (which you can do, this is valid):
```json
{
  ""thingId"": ""org.eclipse.ditto:my-thermostat-1"",
  ""policyId"": ""org.eclipse.ditto:my-thermostat-1"",
  ""features"": {
    ""Thermostat"": {
      ""definition"": [ ""org.eclipse.ditto:Thermostat:1.0.0"" ]
    }
  }
}
```

it is not possible to ""just"" create the ""on"" property with the following HTTP PUT request:
```
PUT /api/2/things/org.eclipse.ditto:my-thermostat-1/features/Thermostat/properties/on
true
```
Up to now, you would get a HTTP error 404 (not found) as the `properties` object was not yet created.

This shall be simplified by automatically creating missing JSON objects, which also the `desired` properties API will benefit from.
There, when you want to create one single desired property, you would just have to make an HTTP call:

```
PUT /api/2/things/org.eclipse.ditto:my-thermostat-1/features/Thermostat/desired/configuration/target-temperature
22.0
```
This API call will be accepted and the thing JSON will look like:
```json
{
  ""thingId"": ""org.eclipse.ditto:my-thermostat-1"",
  ""policyId"": ""org.eclipse.ditto:my-thermostat-1"",
  ""features"": {
    ""Thermostat"": {
      ""definition"": [ ""org.eclipse.ditto:Thermostat:1.0.0"" ],
      ""desired"": {
        ""configuration"": {
          ""target-temperature"": 22.0
        }
      }
    }
  }
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/701/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/701,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85FuQ5Y,ditto,1169755736,701,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-06-29T09:32:19Z,2022-06-29T09:32:19Z,"When using the [merge thing](https://www.eclipse.org/ditto/protocol-specification-things-merge.html) done in #950 the implicit convenient creation of parent objects already exists.

So we might also close this issue.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85FuQ5Y/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/702,https://api.github.com/repos/eclipse-ditto/ditto/issues/702,ditto,641728306,702,"Search for things/features with pending ""desired"" properties",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2020-06-19T06:04:43Z,2020-10-15T14:11:31Z,"As an enhancement of #696 it should be possible via the Ditto search to find out which things have pending (not yet applied) ""desiredProperties"".

The syntax for that could be:
```
exists(features/*/desiredProperties)     // if we also delete an empty ""desiredProperties"" when all desired properties were cleared
exists(features/*/desiredProperties/*)

# or introducing a new RQL keyword for checking if a JSON value (object, array, string?) is empty:
empty(features/*/desiredProperties)
not(empty(features/*/desiredProperties))
```

* define the RQL syntax
* implement the query to do against the search index to support that","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/702/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/702,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0NjUwNTg4Mg==,ditto,646505882,702,NA,jufickel-b,17162397,Juergen Fickel,,NA,2020-06-19T08:15:46Z,2020-06-19T08:15:46Z,"I favor the ""exists"" approach. If a feature has no desired state then there shouldn't be a ""desired"" field in the JSON object – even if it is empty. I. e. as soon as the desired state is reached the ""desired"" field should be deleted.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0NjUwNTg4Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/703,https://api.github.com/repos/eclipse-ditto/ditto/issues/703,ditto,641730582,703,Automatically publish remaining desired state upon device connection,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2020-06-19T06:10:41Z,2020-10-15T14:11:01Z,"As an enhancement of #696 all remaining `desiredProperties` state selectable for a thing after implementing #700 shall be returned whenever a device reconnects to its cloud backend.
For Eclipse Hono this can be determined by the [TTD](https://www.eclipse.org/hono/docs/concepts/device-notifications/#time-until-disconnect-notification) value Hono sends for messages indicating how long a device is connected and may receive downlink messages.

Ditto's [ConnectionStatus](https://www.eclipse.org/ditto/connectivity-mapping.html#connectionstatus-mapper) mapper already uses that information to automatically manage a feature `ConnectionStatus` as part of a thing. 

Based in this information (when a device connected to Hono connects), the remaining `desiredProperties` of a Thing are sent to the device.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/703/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/704,https://api.github.com/repos/eclipse-ditto/ditto/issues/704,ditto,641735301,704,Provide information about desired property changes which could not be applied,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2020-06-19T06:21:23Z,2021-01-27T09:47:27Z,"As an enhancement of #696 for the case that a device could not apply the ""desiredProperties"" state of a property to its actual state, the device shall send that ""unable to apply desired state"" information back to Ditto.

* sync-state revision number of desired property information is ""piggy backed"" as part of a normal command as `""put-metadata"": {""key"": ""/desiredSyncRevision"", ""value"": 42}`
* sync-state metadata information is ""piggy backed"" as part of a normal command as `""put-metadata"": {""key"": ""/desiredSyncState"", ""value"": ""applied""}`
   * 1st option: the desired change could be _""applied""_
   * 2nd option: it is still trying to apply the desired state: _""pending-application""_
   * 3rd option: it is impossible as the desired property is not processable _""not-applicable""_
   * in addition, e.g. for the 3rd option, a metadata `""desiredSyncStateDetails""` is optionally provided
      * should be filled by the device itself
* persist that information as part of the `_metadata` section introduced in #680 
* emit as part of a ""normal"" change event so that a backend application which set that ""desired"" property may react on that

## Implementation details

As suggested in [#680](https://github.com/eclipse/ditto/issues/680#issuecomment-654165747) this sync-state metadata information is ""piggy backed"" as part of a normal command, e.g.:
```json
{
  ""topic"": ""org.eclipse.ditto/my-thermostat-1/things/twin/commands/modify"",
  ""headers"": {
    ""put-metadata"": [
      {
        ""key"": ""/desiredSyncRevision"",
        ""value"":  42
      },
      {
        ""key"": ""/desiredSyncState"",
        ""value"":  ""not-applicable""
      },
      {
        ""key"": ""/desiredSyncStateDetails"",
        ""value"":  ""invalid target range""
      },
    ]
  },
  ""path"": ""/features/Thermostat/properties/configuration/target-temperature"",
  ""value"": 20.0
}
```

The `_metadata` structure would look like:
```json
{
  ""thingId"": ""org.eclipse.ditto:my-thermostat-1"",
  ""policyId"": ""..."",
  ""features"": {
    ""Thermostat"": {
      ""properties"": {
        ""configuration"": {
          ""target-temperature"": 20.0
        }
      },
      ""desiredProperties"": {
        ""configuration"": {
          ""target-temperature"": 50.0
        }
      }
    }
  },
  ""_modified"": ""2020-06-09T14:30:00Z"",
  ""_revision"": 44,
  ""_metadata"": {
    ""policyId"": {
      ""_modified"": ""2020-06-09T14:00:00Z"",
      ""_revision"": 1
    },
    ""features"": {
      ""Thermostat"": {
        ""properties"": {
          ""configuration"": {
            ""target-temperature"": {
              ""_modified"": ""2020-06-09T14:35:00Z"",
              ""_revision"": 44,
              ""desiredSyncRevision"": 42,
              ""desiredSyncState"": ""not-applicable"",
              ""desiredSyncStateDetails"": ""invalid target range""
            }
          }
        },
        ""desiredProperties"": {
          ""configuration"": {
            ""target-temperature"": {
              ""_modified"": ""2020-06-09T14:30:00Z"",
              ""_revision"": 42
            }
          }
        }
      }
    }
  }
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/704/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/705,https://api.github.com/repos/eclipse-ditto/ditto/issues/705,ditto,641736679,705,"Emit a special event once a single and/or all ""desired"" properties were cleared",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2020-06-19T06:24:35Z,2020-06-19T06:24:35Z,As an enhancement of #696 whenever a property is cleaned up as part of #698 there shall be a special event emitted that the desired state was reached for that property.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/705/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/706,https://api.github.com/repos/eclipse-ditto/ditto/issues/706,ditto,642796237,706,"Don't apply desired property if ""applied"" property was changed by device more recently",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2020-06-22T06:29:42Z,2021-04-01T14:24:18Z,"As an enhancement of #696 it shall be made possible that a local change from a device may be prioritized above the `desired` change of a property.

## Problem statement

A `desiredProperties` property change could be outdated compared to the `reported` property which was e.g. directly changed at a device.
In such cases it does not make sense to apply the `desiredProperties` property.

### Example 

That is useful in e.g. the following scenario. Take the room thermostat again as an example:
* the property `target-temperature` is at 20
* the room thermostat looses its internet connectivity (e.g. due to an ISP outage)
* user feels chilly, so the `desiredProperties` property `configuration/target-temperature` is set via mobile app to 22
* as the device doesn't get this change right away as it is not online, nothing happens
* after some time the user notices that it's not getting warmer so use stands up and changes the `configuration/target-temperature` manually at the room thermostat device to 23
* room thermostat re-establishes connectivity and starts to apply missed `desiredProperties` state changes
* now, the reported/desired feature implemented in #696 would lead to:
   * desired state (`desiredProperties/configuration/target-temperature=22`) differs from actual/reported state (`properties/configuration/target-temperature=23`)
   * the device would apply the desiredProperties `configuration/target-temperature` of 22 as a result and overwrite the locally set `23`
   * the user wonders why the `configuration/target-temperature` is now at 22

What would have been desirable in this scenario:
* if the actual property `configuration/target-temperature` was modified more recently, the desiredProperties `configuration/target-temperature` is no longer valid and deleted
* this is a configurable behavior

## Improvement

After introducing #680 where `_metadata` is added to each property in a thing, it can be found out which `revision` each property has and e.g. _why_ (e.g. due to `""desired-sync""` or `""manual-overwrite""`) it was changed. 
So both the device but also Ditto itself could find out if the property or the desiredProperties property `target-temperature` was updated more recently.

Example Ditto Protocol command (where one of the 2 `""ditto-metadata:changeReason""` values is chosen):
```json
{
  ""topic"": ""org.eclipse.ditto/my-thermostat-1/things/twin/commands/modify"",
  ""headers"": {
    ""ditto-metadata:changeReason"": ""desired-sync"",
    ""ditto-metadata:changeReason"": ""manual-overwrite""
  },
  ""path"": ""/features/Thermostat/properties/configuration/target-temperature"",
  ""value"": 20.0
}
```

Ditto know `""changeReson""` values:
* `desired-sync`
* `manual-overwrite`

A device would have the means to determine by itself whether `desiredProperties` or actual reported `properties` are the more recent configuration state and whether the reported `properties` were e.g. modified based on a manual overwrite.

Ditto could also apply a deletion strategy based on the `_revision` and the `changeReason`:
* `reported-more-recent-manual-overwrite`: would delete the `desiredProperties` property if there is a more recently changed reported `property` with a `manual-overwrite` changeReason.

```json
{
  ""definition"": [],
  ""properties"": {
    ""status"": {
      ""measured-temperature"": 20
    },
    ""configuration"": {
      ""target-temperature"": 23
    }
  },
  ""desiredProperties"": {
    ""configuration"": {
      ""target-temperature"": 23
    }
  },
  ""desiredSettings"": {
    ""desiredDeletionStrategy"": [ 
      ""reported-reaches-desired"",
      ""reported-more-recent-manual-overwrite""
    ]
  },
  ""_metadata"": {
    ""policyId"": {
      ""_modified"": ""2020-06-09T14:00:00Z"",
      ""_revision"": 1
    },
    ""features"": {
      ""Thermostat"": {
        ""properties"": {
          ""configuration"": {
            ""target-temperature"": {
              ""_modified"": ""2020-06-09T14:40:00Z"",
              ""_revision"": 44,
              ""changeReason"": ""manual-overwrite""
            }
          }
        },
        ""desiredProperties"": {
          ""configuration"": {
            ""target-temperature"": {
              ""_modified"": ""2020-06-09T14:30:00Z"",
              ""_revision"": 42
            }
          }
        }
      }
    }
  }
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/706/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/706,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0OTUzNTU2MQ==,ditto,649535561,706,NA,geglock,14750235,Gerald Glocker,,NA,2020-06-25T13:18:32Z,2020-06-25T13:18:32Z,"I would give the full control to the devices, based on the last-updated timestamp an/or revision information for each ""desired"" property. 
Based on this, the device can decide if a pending desired change is outdated (but was delivered late), compared to some newer local device-side reconfigurations.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0OTUzNTU2MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/706,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1MjI0NDIyNg==,ditto,652244226,706,NA,ffendt,2587759,Florian Fendt,,NA,2020-07-01T07:28:39Z,2020-07-01T07:28:39Z,"I agree with @geglock to leave this to the device itself. In my opinion we will add unneeded complexity by also adding settings to the ""desired"" functionality.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1MjI0NDIyNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/706,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgxMTk0NDA5MQ==,ditto,811944091,706,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-04-01T14:24:18Z,2021-04-01T14:24:18Z,Closed as the device can and should find out by itself with the implicitly created metadata: #778 ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgxMTk0NDA5MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/707,https://api.github.com/repos/eclipse-ditto/ditto/issues/707,ditto,643053461,707,"""Create new Thing"" operation returns wrong ""Thing ID""",ctron,202474,Jens Reimann,ctron@dentrassi.de,CLOSED,2020-06-22T13:02:24Z,2020-06-22T13:45:27Z,"Executing the ""create new thing"" operation from API v2 (`POST /things`), providing the default example content, using the Swagger UI, returns:

~~~json
{
  ""thingId"": "":304cd223-fca7-491a-8dc0-53fe271d478e"",
  ""policyId"": "":304cd223-fca7-491a-8dc0-53fe271d478e"",
  ""definition"": ""com.acme:coffeebrewer:0.1.0"",
  ""attributes"": {
    ""manufacturer"": ""ACME demo corp."",
    ""location"": ""Berlin, main floor"",
    ""serialno"": ""42"",
    ""model"": ""Speaking coffee machine""
  },
  ""features"": {
    ""coffee-brewer"": {
      ""definition"": [
        ""com.acme:coffeebrewer:0.1.0""
      ],
      ""properties"": {
        ""brewed-coffees"": 0
      }
    },
    ""water-tank"": {
      ""properties"": {
        ""configuration"": {
          ""smartMode"": true,
          ""brewingTemp"": 87,
          ""tempToHold"": 44,
          ""timeoutSeconds"": 6000
        },
        ""status"": {
          ""waterAmount"": 731,
          ""temperature"": 44
        }
      }
    }
  }
}
~~~

I would expect the thing ID to be `304cd223-fca7-491a-8dc0-53fe271d478e`, however that is not accepted by calls to the other APIs.

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/707/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/707,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0NzUxMzE5MA==,ditto,647513190,707,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-06-22T13:17:16Z,2020-06-22T13:17:16Z,"I think you missed the colon before the ID.
The `POST` endpoint will always create a thingId (a UUID in an empty namespace, thus `:<UUID>`).

A `thingId` in Ditto always consists of thing ""namespace"" and ""name"" separated with a colon, however the namespace may be empty:
https://www.eclipse.org/ditto/basic-namespaces-and-names.html","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0NzUxMzE5MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/707,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0NzUyOTM0OA==,ditto,647529348,707,NA,ctron,202474,Jens Reimann,ctron@dentrassi.de,NA,2020-06-22T13:45:27Z,2020-06-22T13:45:27Z,Yes … that was indeed the case :facepalm: … PEBKAC :grin: Sorry for that.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY0NzUyOTM0OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/708,https://api.github.com/repos/eclipse-ditto/ditto/issues/708,ditto,645482992,708,Support for using wildcard in place of feature name in policies,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2020-06-25T11:23:33Z,2023-07-27T06:49:33Z,"As an enhancement of #696 it should be possible to define in a policy that all features of a single thing are addressed in the `resources` section of the policy.
Therefore it should not be required to write all feature names in the policy as sharing policies for many things would also be very limited by this approach.

* using the wildcard `*` as part of this story is only supported as replacement for the feature name
* it shall be possible to use the wildcard for following resource types:
   * `thing`: `thing:/features/*/properties`
   * `message` (which was already requested by another issue: #685 - the other issue will be closed as duplicate): `message:/features/*/inbox`
* the 

Example policy:
```json
{
    ""policyId"": ""org.eclipse.ditto:policy-1"",
    ""entries"": {
      ""owner"": {
        ""subjects"": {
          ""nginx:ditto"": {
            ""type"": ""nginx basic auth user""
          }
        },
        ""resources"": {
          ""thing:/features/*/properties"": {
            ""grant"": [""READ""],
            ""revoke"": []
          },
          ""thing:/features/*/desiredProperties"": {
            ""grant"": [""READ"",""WRITE""],
            ""revoke"": []
          },
          ""message:/features/*/inbox"": {
            ""grant"": [""WRITE""],
            ""revoke"": []
          },
          ""message:/features/*/outbox"": {
            ""grant"": [""READ""],
            ""revoke"": []
          },
          ""policy:/"": {
            ""grant"": [""READ"", ""WRITE""],
            ""revoke"": []
          }
        }
      },
      ""device"": {
        ""subjects"": {
          ""pre-authenticated:hono"": {
            ""type"": ""connection to Hono""
          }
        },
        ""resources"": {
          ""thing:/features/*/properties"": {
            ""grant"": [""READ"",""WRITE""],
            ""revoke"": []
          },
          ""thing:/features/*/desiredProperties"": {
            ""grant"": [""READ""],
            ""revoke"": []
          },
          ""message:/features/*/inbox"": {
            ""grant"": [""READ""],
            ""revoke"": []
          },
          ""message:/features/*/outbox"": {
            ""grant"": [""WRITE""],
            ""revoke"": []
          }
        }
      },
      ""all_features_reader"": {
        ""subjects"": {
          ""nginx:some-users"": {
            ""type"": ""a group of users""
          },
          ""resources"": {
            ""thing:/features/*"": {
              ""grant"": [""READ""],
              ""revoke"": []
            }
          }
        }
      }
    }
  }
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/708/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/708,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ihusV,ditto,1653009173,708,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-07-27T06:49:33Z,2023-07-27T06:49:33Z,"I am getting interested in this again - would be very useful for e.g. defining ""end user"" `""WRITE""` permission to all `""desiredProperties""`, but only `""READ""` to all `""properties""`.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ihusV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/710,https://api.github.com/repos/eclipse-ditto/ditto/issues/710,ditto,647377048,710,Enrichment: Support for a wildcard/placeholder identifying the changed feature in order to enrich e.g. its `definition`,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,CLOSED,2020-06-29T13:28:28Z,2022-04-12T14:01:15Z,"I've stumbled upon the following use-case with the enrichment feature introduced in 1.1.0. I'm opening a WS connection and receive change events of many different things. The events are from different features which I don't know at the time of opening the WS connection.

Together with the state change events I also need to know the feature definition field. Right now I take the feature of an incoming message and query it's definition for each event. What I'd like to do is to request the corresponding definition of the feature the updated property belongs to.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/710/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/710,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1MjM4MTg2OQ==,ditto,652381869,710,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-07-01T12:13:04Z,2020-07-01T12:13:04Z,Sounds like a good idea/enhancement.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1MjM4MTg2OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/710,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcxMjY5NzA1NQ==,ditto,712697055,710,NA,BobClaerhout,3315222,Bob Claerhout,,NA,2020-10-20T08:49:20Z,2020-10-20T08:49:20Z,"We are using the enrichment feature as well and encountered the same use-case so would be nice to have this addition. I'm a bit confused however with the title of this issue. How would wildcards help you in this? From my point of view it would be nice to enrich a message with properties relative to the feature. If you do that,  you can enrich a message with the definition but you can also enrich it with any metadata (assuming the metadata is the same on all features of course)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcxMjY5NzA1NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/710,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcxMjcxNjExNA==,ditto,712716114,710,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-10-20T09:20:55Z,2020-10-20T09:20:55Z,"Well, using e.g. `extraFields=features/*/definition` would allow you to get *all* Feature definitions of a Thing enriched when it is updated, so e.g. as Ditto Protocol event:
```json
{
  ""topic"": ""org.eclipse.ditto/fancy-thing/things/twin/events/modified"",
  ""headers"": {},
  ""path"": ""/features/temperature/properties/value"",
  ""value"": 23.42,
  ""revision"": 34,
  ""extra"": {
    ""features"": {
      ""temperature"": {
        ""definition"": [
          ""org.eclipse.vorto:Temperature:1.0.0""
        ]
      },
      ""humidity"": {
        ""definition"": [
          ""org.eclipse.vorto:Humidity:1.0.0""
        ]
      }
    }
  }
}
```

And as you have in the ""path"", that the ""temperature"" feature was changed, you can find out its ""definition"" as well.
I agree that this could be optimized (in order to only send the ""definition"" of the actually modified feature), but as a first step this is much better than doing another roundtrip for fetching the definition, don't you agree @BobClaerhout ?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcxMjcxNjExNA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/710,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcxMjcxOTM3MQ==,ditto,712719371,710,NA,BobClaerhout,3315222,Bob Claerhout,,NA,2020-10-20T09:26:23Z,2020-10-20T09:26:23Z,"yes, sure. as a first step this is excellent! But indeed, my question/remark was more concerned the fact that you would receive the definition of all features. But again: excellent first step!","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcxMjcxOTM3MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/710,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcxMzY1MDQ5OA==,ditto,713650498,710,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-10-21T15:14:36Z,2020-10-21T15:14:36Z,"I don't have a good idea (yet) to specify somehow in the existing syntax to only retrieve the definition of changed features as `extraFields`.
Not sure if this is even the right ""place"" to define that this information should always be included.

Any ideas from our community?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcxMzY1MDQ5OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/710,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMjIzNTI1Mw==,ditto,722235253,710,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-11-05T08:49:45Z,2020-11-05T08:49:45Z,"A simpler alternative than providing the wildcard in the enrichment would be the proposal in #874 
Kudos to @jokraehe for that idea.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMjIzNTI1Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/710,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMjI1MTMyNg==,ditto,722251326,710,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2020-11-05T09:19:21Z,2020-11-05T09:19:21Z,"As for the syntax you could potentially introduce a new operator like `+` which then has the semantics of only returning properties as extra fields at this level matching exactly what is sent in the signal. Opposed to the `*` operator which returns all the properties / fields of a level.

So if I specify `extraFields=features/+/definition` the enrichment should look at the signal path and use the same level as a kind of replacement. Giving me:

```
{
  ""topic"": ""org.eclipse.ditto/fancy-thing/things/twin/events/modified"",
  ""headers"": {},
  ""path"": ""/features/temperature/properties/value"",
  ""value"": 23.42,
  ""revision"": 34,
  ""extra"": {
    ""features"": {
      ""temperature"": {
        ""definition"": [
          ""org.eclipse.vorto:Temperature:1.0.0""
        ]
      }
    }
  }
}
```

Regardless of this I think #874 is a good approach.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMjI1MTMyNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/710,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMjMyODEzMw==,ditto,722328133,710,NA,desislava-marinova,32883994,Desislava Marinova,,NA,2020-11-05T11:47:19Z,2020-11-05T11:47:19Z,"@thjaeckle, is it possible at the moment to get all definitions using ```extraFields=features/*/definition```?

IMHO, extra fields with wildcards should be evaluated towards signal path or value (in case of several features/properties update).
I could not imagine a case where the user will need the definitions of all features of a thing while a single feature or a subset of features are changed, the definition (or any other feature properties) could be useful in the context of the changed feature, isn't it so? ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMjMyODEzMw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/710,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMjM2NDE3Mw==,ditto,722364173,710,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-11-05T13:02:51Z,2020-11-05T13:02:51Z,"@desislava-marinova no, currently using wildcards is not possible, that's what this issue is about.
However #874 would provide a much simpler approach to always include the feature ""definition"" for feature modification events.

Using wildcard in the `extraFields` might still be useful in order to e.g. enrich all temperature values of several sensors, e.g.:
`extraFields=features/temperature*/properties/value`
But IMO this looses urgency when we would have #874","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMjM2NDE3Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/710,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMjU0MjQwOQ==,ditto,722542409,710,NA,desislava-marinova,32883994,Desislava Marinova,,NA,2020-11-05T18:00:39Z,2020-11-05T18:00:39Z,"@thjaeckle, thanks. 
I fully agree that wildcards in extra fields are very useful no doubt, I have commented only the ```features/*/definition``` case.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMjU0MjQwOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/710,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C848zRdW,ditto,1020073814,710,NA,ctron,202474,Jens Reimann,ctron@dentrassi.de,NA,2022-01-24T12:59:48Z,2022-01-24T12:59:48Z,I would also be interested in this feature.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C848zRdW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/711,https://api.github.com/repos/eclipse-ditto/ditto/issues/711,ditto,647934612,711,Does Ditto supports HA in K8s?,tiexinyang,13174634,杨铁鑫,546676557@qq.com,CLOSED,2020-06-30T07:25:22Z,2020-07-01T15:04:16Z,"I'm using ditto 1.1.0 in K8s cluster, it works well while using single pod for each component.
But when I try to extend component Things & Policies with multi replicas, pods will not able to join the ditto-cluster and show some wrong status.

> [XXX ditto-1.1.0]$ kubectl get pods
> NAME                             READY   STATUS             RESTARTS   AGE
> concierge-6b79df446b-vpz2w       0/1     Running            2          25m
> connectivity-5cc955ddcb-x6r9g    0/1     Running            1          25m
> gateway-5d9fc78f5b-pv699         1/1     Running            2          25m
> gateway-5d9fc78f5b-vbglp         1/1     Running            2          25m
> nginx-c7447b4bc-sq29p            1/1     Running            0          25m
> nginx-c7447b4bc-tz7j7            1/1     Running            0          25m
> policies-5b8b479546-dxlnw        0/1     Running            2          22m
> policies-5b8b479546-fs8jz        0/1     Running            2          25m
> policies-5b8b479546-fvn9r        0/1     Running            3          22m
> policies-5b8b479546-zczgj        0/1     CrashLoopBackOff   1          22m
> swagger-ui-9588fd54b-vkztc       1/1     Running            0          25m
> things-5cf78667d-n99bd           0/1     CrashLoopBackOff   1          17m
> things-5cf78667d-q7j4c           0/1     Running            2          25m
> things-5cf78667d-x56nz           0/1     Running            3          17m
> things-5cf78667d-zbjqz           0/1     Running            2          17m
> things-search-757c9b74fb-nzlhl   0/1     Running            1          25m


Does it mean that ditto cannot support HA in K8s? Or is there any proper solutions?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/711/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/711,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1MTYyMjU3Nw==,ditto,651622577,711,NA,stmaute,17831060,Stefan Maute,,NA,2020-06-30T07:59:42Z,2020-06-30T07:59:42Z,"Hi @tiexinyang 
are you sure you have enough cpu and memory to run multiple instances of things and policies service?
Could you share the kubernetes logs of these pods and if available the log of things or policies service?
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1MTYyMjU3Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/711,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1MjE2MTA0NQ==,ditto,652161045,711,NA,tiexinyang,13174634,杨铁鑫,546676557@qq.com,NA,2020-07-01T03:10:01Z,2020-07-01T03:10:01Z,"> Hi @tiexinyang
> are you sure you have enough cpu and memory to run multiple instances of things and policies service?
> Could you share the kubernetes logs of these pods and if available the log of things or policies service?

Hi,
Thanks for your notification.
I checked the log and found there is some delay on the heartbeat, which cause the pods dropped by the ditto cluster from time to time, that's because I set the resource limits for both CPU & Memory in case of the OOM, now I removed the limits and found everything runs well.
Ditto is now able to support HA smoothly. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1MjE2MTA0NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/711,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1MjE3NjAyOA==,ditto,652176028,711,NA,stmaute,17831060,Stefan Maute,,NA,2020-07-01T04:03:24Z,2020-07-01T04:03:24Z,@tiexinyang Great to hear that. I will close this issue than. ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1MjE3NjAyOA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/711,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1MjQ2ODU2Mw==,ditto,652468563,711,NA,liuhu,1286384,Hugo Liu,mail.liuhu@gmail.com,NA,2020-07-01T14:56:03Z,2020-07-01T14:56:03Z,"Ditto 集群底层是用 Akka cluster，天生支持高可用哦。
Java 系的想学习 Akka，Ditto 是非常推荐研究的项目。","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1MjQ2ODU2Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/719,https://api.github.com/repos/eclipse-ditto/ditto/issues/719,ditto,649508315,719,Is there a secure way to share devops account with multi ditto users?,tiexinyang,13174634,杨铁鑫,546676557@qq.com,CLOSED,2020-07-02T01:40:24Z,2020-08-28T05:48:51Z,"As we know devops user can operate ditto connections, but it seems there could be only one devops user available in ditto cluster
Is there a proper way to share devops account among multi ditto users without affecting each other?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/719/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/719,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1Mjc4ODgwMg==,ditto,652788802,719,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-07-02T05:21:11Z,2020-07-02T05:21:11Z,"Yes, there is only one devops (or admin) user in Ditto and this user has very broad rights using the [DevOps commands](https://www.eclipse.org/ditto/installation-operating.html#devops-commands).

What do you mean with ""share devops account among multi ditto users without affecting each other""?
Sharing that account basically means that each one can administer the Ditto installation (e.g. creating/modifying connections but also accessing things/policies, etc.).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1Mjc4ODgwMg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/719,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1MjgwNTM5OQ==,ditto,652805399,719,NA,tiexinyang,13174634,杨铁鑫,546676557@qq.com,NA,2020-07-02T06:12:41Z,2020-07-02T06:12:41Z,"> Yes, there is only one devops (or admin) user in Ditto and this user has very broad rights using the [DevOps commands](https://www.eclipse.org/ditto/installation-operating.html#devops-commands).
> 
> What do you mean with ""share devops account among multi ditto users without affecting each other""?
> Sharing that account basically means that each one can administer the Ditto installation (e.g. creating/modifying connections but also accessing things/policies, etc.).

Yes the situation is I would like to make each user has full access to his own resources, including creating & managing their own connections, without the risk of affecting others' connections(e.g. User a cannot delete connection which is created by user B)
Well it seems not possible right now, unless creating another ditto cluster for dedicated user. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1MjgwNTM5OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/719,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1MjgwNjUwNg==,ditto,652806506,719,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-07-02T06:16:00Z,2020-07-02T06:16:00Z,"Yes, unfortunately that's not possible as Ditto is intended to be run under a ""single tenant"".
Multi tenancy is one of the commercial features of the commercial offering based on Ditto, the [Bosch IoT Things](https://developer.bosch-iot-suite.com/service/things/) service.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1MjgwNjUwNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/719,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY2Mjg5MzA4OA==,ditto,662893088,719,NA,JulianFeinauer,17098762,Julian,,NA,2020-07-23T08:52:51Z,2020-07-23T08:52:51Z,@thjaeckle if this question is allowed... how do you model the multi tenancy in Bosch IoT Suite? Multiple instances in the background or an Extension of Ditto with native implementation?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY2Mjg5MzA4OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/719,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY2MjkwMjI5Mg==,ditto,662902292,719,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-07-23T09:13:48Z,2020-07-23T09:13:48Z,"@JulianFeinauer you may ;)
It is a single instance with native, closed source, enhancements for multi tenant management.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY2MjkwMjI5Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/725,https://api.github.com/repos/eclipse-ditto/ditto/issues/725,ditto,653549681,725,Building Ditto on Raspberry Pi (ARM),marioverhaeg,46836831,,,CLOSED,2020-07-08T19:44:00Z,2020-08-28T05:48:18Z,"Hi, 

I was hoping to use Ditto for a home automation project and run it on a Raspberry Pi, hoping this would be powerful enough for small environments. While building Ditto I run into an error. It seems like it doesn't build on the ARM environment. Is there something wrong in my environment or is this ""as-designed""?

Greetings from a Bosch colleague :-)

Summary:
[ERROR] : java.lang.UnsatisfiedLinkError: /tmp/swoval-jni/2522452405523835701-libswoval-files0.so: /tm                                                                                                         p/swoval-jni/2522452405523835701-libswoval-files0.so: cannot open shared object file: No such file or                                                                                                          directory (**Possible cause: can't load IA 32-bit .so on a ARM-bit platform**)

Full trace:

[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  28:48 min
[INFO] Finished at: 2020-07-08T21:16:11+02:00
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal net.alchim31.maven:scala-maven-plugin:4.1.0:compile (default) on projec                                                                                                         t ditto-model-rql-parser: Execution default of goal net.alchim31.maven:scala-maven-plugin:4.1.0:compil                                                                                                         e failed: An API incompatibility was encountered while executing net.alchim31.maven:scala-maven-plugin                                                                                                         :4.1.0:compile: java.lang.ExceptionInInitializerError: null
[ERROR] -----------------------------------------------------
[ERROR] realm =    plugin>net.alchim31.maven:scala-maven-plugin:4.1.0
[ERROR] strategy = org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy
[ERROR] urls[0] = file:/home/pi/.m2/repository/net/alchim31/maven/scala-maven-plugin/4.1.0/scala-maven                                                                                                         -plugin-4.1.0.jar
[ERROR] urls[1] = file:/home/pi/.m2/repository/org/apache/maven/maven-builder-support/3.3.9/maven-buil                                                                                                         der-support-3.3.9.jar
[ERROR] urls[2] = file:/home/pi/.m2/repository/com/google/guava/guava/18.0/guava-18.0.jar
[ERROR] urls[3] = file:/home/pi/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.21/plexus-in                                                                                                         terpolation-1.21.jar
[ERROR] urls[4] = file:/home/pi/.m2/repository/javax/enterprise/cdi-api/1.0/cdi-api-1.0.jar
[ERROR] urls[5] = file:/home/pi/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.inject/0.3.2/org.ecli                                                                                                         pse.sisu.inject-0.3.2.jar
[ERROR] urls[6] = file:/home/pi/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.6/pl                                                                                                         exus-component-annotations-1.6.jar
[ERROR] urls[7] = file:/home/pi/.m2/repository/org/apache/maven/reporting/maven-reporting-api/3.0/mave                                                                                                         n-reporting-api-3.0.jar
[ERROR] urls[8] = file:/home/pi/.m2/repository/org/eclipse/aether/aether-util/1.0.2.v20150114/aether-u                                                                                                         til-1.0.2.v20150114.jar
[ERROR] urls[9] = file:/home/pi/.m2/repository/com/google/inject/guice/4.0/guice-4.0-no_aop.jar
[ERROR] urls[10] = file:/home/pi/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar
[ERROR] urls[11] = file:/home/pi/.m2/repository/org/sonatype/plexus/plexus-sec-dispatcher/1.3/plexus-s                                                                                                         ec-dispatcher-1.3.jar
[ERROR] urls[12] = file:/home/pi/.m2/repository/org/sonatype/plexus/plexus-cipher/1.4/plexus-cipher-1.                                                                                                         4.jar
[ERROR] urls[13] = file:/home/pi/.m2/repository/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4                                                                                                         .jar
[ERROR] urls[14] = file:/home/pi/.m2/repository/org/apache/maven/shared/maven-dependency-tree/3.0.1/ma                                                                                                         ven-dependency-tree-3.0.1.jar
[ERROR] urls[15] = file:/home/pi/.m2/repository/org/apache/commons/commons-exec/1.3/commons-exec-1.3.j                                                                                                         ar
[ERROR] urls[16] = file:/home/pi/.m2/repository/org/codehaus/plexus/plexus-utils/3.2.0/plexus-utils-3.                                                                                                         2.0.jar
[ERROR] urls[17] = file:/home/pi/.m2/repository/org/codehaus/plexus/plexus-archiver/4.1.0/plexus-archi                                                                                                         ver-4.1.0.jar
[ERROR] urls[18] = file:/home/pi/.m2/repository/org/codehaus/plexus/plexus-io/3.1.1/plexus-io-3.1.1.ja                                                                                                         r
[ERROR] urls[19] = file:/home/pi/.m2/repository/org/apache/commons/commons-compress/1.18/commons-compr                                                                                                         ess-1.18.jar
[ERROR] urls[20] = file:/home/pi/.m2/repository/org/iq80/snappy/snappy/0.4/snappy-0.4.jar
[ERROR] urls[21] = file:/home/pi/.m2/repository/org/tukaani/xz/1.8/xz-1.8.jar
[ERROR] urls[22] = file:/home/pi/.m2/repository/backport-util-concurrent/backport-util-concurrent/3.1/                                                                                                         backport-util-concurrent-3.1.jar
[ERROR] urls[23] = file:/home/pi/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar
[ERROR] urls[24] = file:/home/pi/.m2/repository/org/apache/maven/maven-archiver/3.4.0/maven-archiver-3                                                                                                         .4.0.jar
[ERROR] urls[25] = file:/home/pi/.m2/repository/org/apache/maven/shared/maven-shared-utils/3.2.1/maven                                                                                                         -shared-utils-3.2.1.jar
[ERROR] urls[26] = file:/home/pi/.m2/repository/commons-io/commons-io/2.5/commons-io-2.5.jar
[ERROR] urls[27] = file:/home/pi/.m2/repository/org/apache/maven/doxia/doxia-sink-api/1.9/doxia-sink-a                                                                                                         pi-1.9.jar
[ERROR] urls[28] = file:/home/pi/.m2/repository/org/apache/maven/doxia/doxia-logging-api/1.9/doxia-log                                                                                                         ging-api-1.9.jar
[ERROR] urls[29] = file:/home/pi/.m2/repository/org/apache/maven/shared/maven-invoker/3.0.1/maven-invo                                                                                                         ker-3.0.1.jar
[ERROR] urls[30] = file:/home/pi/.m2/repository/org/scala-sbt/zinc_2.12/1.3.0-M7/zinc_2.12-1.3.0-M7.ja                                                                                                         r
[ERROR] urls[31] = file:/home/pi/.m2/repository/org/scala-lang/scala-library/2.12.8/scala-library-2.12                                                                                                         .8.jar
[ERROR] urls[32] = file:/home/pi/.m2/repository/org/scala-sbt/zinc-core_2.12/1.3.0-M7/zinc-core_2.12-1                                                                                                         .3.0-M7.jar
[ERROR] urls[33] = file:/home/pi/.m2/repository/org/scala-sbt/zinc-apiinfo_2.12/1.3.0-M7/zinc-apiinfo_                                                                                                         2.12-1.3.0-M7.jar
[ERROR] urls[34] = file:/home/pi/.m2/repository/org/scala-sbt/compiler-bridge_2.12/1.3.0-M7/compiler-b                                                                                                         ridge_2.12-1.3.0-M7.jar
[ERROR] urls[35] = file:/home/pi/.m2/repository/org/scala-sbt/zinc-classpath_2.12/1.3.0-M7/zinc-classp                                                                                                         ath_2.12-1.3.0-M7.jar
[ERROR] urls[36] = file:/home/pi/.m2/repository/org/scala-lang/scala-compiler/2.12.8/scala-compiler-2.                                                                                                         12.8.jar
[ERROR] urls[37] = file:/home/pi/.m2/repository/org/scala-sbt/compiler-interface/1.3.0-M7/compiler-int                                                                                                         erface-1.3.0-M7.jar
[ERROR] urls[38] = file:/home/pi/.m2/repository/org/scala-sbt/util-interface/1.3.0-M6/util-interface-1                                                                                                         .3.0-M6.jar
[ERROR] urls[39] = file:/home/pi/.m2/repository/com/trueaccord/scalapb/scalapb-runtime_2.12/0.6.0/scal                                                                                                         apb-runtime_2.12-0.6.0.jar
[ERROR] urls[40] = file:/home/pi/.m2/repository/com/trueaccord/lenses/lenses_2.12/0.4.12/lenses_2.12-0                                                                                                         .4.12.jar
[ERROR] urls[41] = file:/home/pi/.m2/repository/com/lihaoyi/fastparse_2.12/0.4.2/fastparse_2.12-0.4.2.                                                                                                         jar
[ERROR] urls[42] = file:/home/pi/.m2/repository/com/lihaoyi/fastparse-utils_2.12/0.4.2/fastparse-utils                                                                                                         _2.12-0.4.2.jar
[ERROR] urls[43] = file:/home/pi/.m2/repository/com/lihaoyi/sourcecode_2.12/0.1.3/sourcecode_2.12-0.1.                                                                                                         3.jar
[ERROR] urls[44] = file:/home/pi/.m2/repository/org/scala-sbt/io_2.12/1.3.0-M10/io_2.12-1.3.0-M10.jar
[ERROR] urls[45] = file:/home/pi/.m2/repository/com/swoval/file-tree-views/2.1.1/file-tree-views-2.1.1                                                                                                         .jar
[ERROR] urls[46] = file:/home/pi/.m2/repository/net/java/dev/jna/jna/4.5.0/jna-4.5.0.jar
[ERROR] urls[47] = file:/home/pi/.m2/repository/net/java/dev/jna/jna-platform/4.5.0/jna-platform-4.5.0                                                                                                         .jar
[ERROR] urls[48] = file:/home/pi/.m2/repository/org/scala-sbt/util-logging_2.12/1.3.0-M6/util-logging_                                                                                                         2.12-1.3.0-M6.jar
[ERROR] urls[49] = file:/home/pi/.m2/repository/com/eed3si9n/sjson-new-core_2.12/0.8.2/sjson-new-core_                                                                                                         2.12-0.8.2.jar
[ERROR] urls[50] = file:/home/pi/.m2/repository/jline/jline/2.14.6/jline-2.14.6.jar
[ERROR] urls[51] = file:/home/pi/.m2/repository/org/apache/logging/log4j/log4j-api/2.11.2/log4j-api-2.                                                                                                         11.2.jar
[ERROR] urls[52] = file:/home/pi/.m2/repository/org/apache/logging/log4j/log4j-core/2.11.2/log4j-core-                                                                                                         2.11.2.jar
[ERROR] urls[53] = file:/home/pi/.m2/repository/com/lmax/disruptor/3.4.2/disruptor-3.4.2.jar
[ERROR] urls[54] = file:/home/pi/.m2/repository/com/eed3si9n/sjson-new-scalajson_2.12/0.8.2/sjson-new-                                                                                                         scalajson_2.12-0.8.2.jar
[ERROR] urls[55] = file:/home/pi/.m2/repository/com/eed3si9n/shaded-scalajson_2.12/1.0.0-M4/shaded-sca                                                                                                         lajson_2.12-1.0.0-M4.jar
[ERROR] urls[56] = file:/home/pi/.m2/repository/org/spire-math/jawn-parser_2.12/0.10.4/jawn-parser_2.1                                                                                                         2-0.10.4.jar
[ERROR] urls[57] = file:/home/pi/.m2/repository/org/scala-lang/scala-reflect/2.12.8/scala-reflect-2.12                                                                                                         .8.jar
[ERROR] urls[58] = file:/home/pi/.m2/repository/org/scala-sbt/util-relation_2.12/1.3.0-M6/util-relatio                                                                                                         n_2.12-1.3.0-M6.jar
[ERROR] urls[59] = file:/home/pi/.m2/repository/org/scala-sbt/zinc-persist_2.12/1.3.0-M7/zinc-persist_                                                                                                         2.12-1.3.0-M7.jar
[ERROR] urls[60] = file:/home/pi/.m2/repository/org/scala-sbt/sbinary_2.12/0.4.4/sbinary_2.12-0.4.4.ja                                                                                                         r
[ERROR] urls[61] = file:/home/pi/.m2/repository/org/scala-lang/modules/scala-xml_2.12/1.0.5/scala-xml_                                                                                                         2.12-1.0.5.jar
[ERROR] urls[62] = file:/home/pi/.m2/repository/org/scala-sbt/zinc-compile-core_2.12/1.3.0-M7/zinc-com                                                                                                         pile-core_2.12-1.3.0-M7.jar
[ERROR] urls[63] = file:/home/pi/.m2/repository/org/scala-sbt/launcher-interface/1.0.0/launcher-interf                                                                                                         ace-1.0.0.jar
[ERROR] urls[64] = file:/home/pi/.m2/repository/org/scala-lang/modules/scala-parser-combinators_2.12/1                                                                                                         .1.2/scala-parser-combinators_2.12-1.1.2.jar
[ERROR] urls[65] = file:/home/pi/.m2/repository/org/scala-sbt/util-control_2.12/1.3.0-M6/util-control_                                                                                                         2.12-1.3.0-M6.jar
[ERROR] urls[66] = file:/home/pi/.m2/repository/org/scala-sbt/zinc-classfile_2.12/1.3.0-M7/zinc-classf                                                                                                         ile_2.12-1.3.0-M7.jar
[ERROR] urls[67] = file:/home/pi/.m2/repository/com/google/protobuf/protobuf-java/3.7.0/protobuf-java-                                                                                                         3.7.0.jar
[ERROR] urls[68] = file:/home/pi/.m2/repository/org/scala-lang/modules/scala-java8-compat_2.12/0.9.0/s                                                                                                         cala-java8-compat_2.12-0.9.0.jar
[ERROR] Number of foreign imports: 1
[ERROR] import: Entry[import  from realm ClassRealm[project>org.eclipse.ditto:ditto-json:0-SNAPSHOT, p                                                                                                         arent: ClassRealm[maven.api, parent: null]]]
[ERROR]
[ERROR] -----------------------------------------------------
[ERROR] : java.lang.UnsatisfiedLinkError: /tmp/swoval-jni/2522452405523835701-libswoval-files0.so: /tm                                                                                                         p/swoval-jni/2522452405523835701-libswoval-files0.so: cannot open shared object file: No such file or                                                                                                          directory (**Possible cause: can't load IA 32-bit .so on a ARM-bit platform**)
[ERROR] -> [Help 1]
[ERROR]
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR]
[ERROR] For more information about the errors and possible solutions, please read the following articl                                                                                                         es:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/PluginContainerException
[ERROR]
[ERROR] After correcting the problems, you can resume the build with the command
[ERROR]   mvn <goals> -rf :ditto-model-rql-parser
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/725/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/725,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1NTkwNTcwNA==,ditto,655905704,725,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-07-09T05:15:00Z,2020-07-09T05:15:00Z,"Hi @marioverhaeg 

We never tried before building for ARM, so I guess things will go wrong compiling Ditto.
But I would love to see that working as well.

Which JDK did you use for building Ditto?
You would need the JDK 11 for ARM which is e.g. provided by Adoptopenjdk:
https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.7%2B10/OpenJDK11U-jdk_arm_linux_hotspot_11.0.7_10.tar.gz

The error you highlighted **Possible cause: can't load IA 32-bit .so on a ARM-bit platform** from ""swoval-jni"" (included in swoval file-tree-views) sounds like the ""swoval-jni"" only included shared objects for x64 or x86 architectures.
I would guess that this ""swoval-jni"" is a dependency used in ""SBT"" (the build tool for Scala) which is invoked by the scala-maven-plugin, that's why this also appears in the failure stack.

I think that it should be able to compile Scala code with SBT on ARM architecture (I didn't find anything which states the opposite).

What you could try is using the latest ""scala-maven-plugin"" (4.4.0) which uses a more up-to-date SBT zinc comiler [1.3.5](https://github.com/davidB/scala-maven-plugin/blob/master/pom.xml#L208).

Ditto uses [scala-maven-plugin 4.1.0](https://github.com/eclipse/ditto/blob/master/pom.xml#L493).

If this doesn't help maybe asking a question either in https://github.com/davidB/scala-maven-plugin or in https://github.com/sbt/sbt could help. Then I'm also out of ideas ;)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1NTkwNTcwNA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/725,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1NTk0MDA5Ng==,ditto,655940096,725,NA,ffendt,2587759,Florian Fendt,,NA,2020-07-09T06:58:48Z,2020-07-09T06:58:48Z,"Hi @marioverhaeg,

how about just downloading the jar artifacts from [maven central](https://search.maven.org/search?q=g:org.eclipse.ditto) and running them?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1NTk0MDA5Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/725,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1NTk0NTg3NA==,ditto,655945874,725,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-07-09T07:11:16Z,2020-07-09T07:11:16Z,"@ffendt has made a very good point :)
The built .jars should also run with an ARM Java.
The ""starter"" jars are executable: [see here](https://search.maven.org/search?q=g:org.eclipse.ditto%20starter)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1NTk0NTg3NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/725,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1NzEwODQ2OA==,ditto,657108468,725,NA,marioverhaeg,46836831,,,NA,2020-07-11T18:32:41Z,2020-07-11T18:32:41Z,"[Let me rephrase my question]
That's a good idea. I've downloaded the jars and got them up and running. However, the configuration is a bit unclear to me. I've looked at: https://www.eclipse.org/ditto/architecture-overview.html 
Your suggestion basically means that I need to setup MongoDB and NGINX next to Ditto. Is there any guidance on the configuration of this set-up? 
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1NzEwODQ2OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/725,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1NzExNjI3NQ==,ditto,657116275,725,NA,marioverhaeg,46836831,,,NA,2020-07-11T19:25:59Z,2020-07-11T19:25:59Z,"Regarding the build process: I've updated to scala-maven-plugin to 4.4.0 but it's stuck again:

`[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 4.292 s <<< FAILURE! - in org.eclipse.ditto.services.utils.persistence.mongo.indices.IndexInitializerIT
[ERROR] org.eclipse.ditto.services.utils.persistence.mongo.indices.IndexInitializerIT  Time elapsed: 4.243 s  <<< ERROR!
java.lang.NullPointerException
        at org.eclipse.ditto.services.utils.persistence.mongo.indices.IndexInitializerIT.startMongoResource(IndexInitializerIT.java:102)

[INFO] Running org.eclipse.ditto.services.utils.persistence.mongo.streaming.MongoReadJournalIT
[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.064 s <<< FAILURE! - in org.eclipse.ditto.services.utils.persistence.mongo.streaming.MongoReadJournalIT
[ERROR] org.eclipse.ditto.services.utils.persistence.mongo.streaming.MongoReadJournalIT  Time elapsed: 0.015 s  <<< ERROR!
java.lang.NullPointerException
        at org.eclipse.ditto.services.utils.persistence.mongo.streaming.MongoReadJournalIT.startMongoResource(MongoReadJournalIT.java:60)

[INFO] Running org.eclipse.ditto.services.utils.persistence.mongo.streaming.MongoTimestampPersistenceIT
[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.042 s <<< FAILURE! - in org.eclipse.ditto.services.utils.persistence.mongo.streaming.MongoTimestampPersistenceIT
[ERROR] org.eclipse.ditto.services.utils.persistence.mongo.streaming.MongoTimestampPersistenceIT  Time elapsed: 0.001 s  <<< ERROR!
java.lang.NullPointerException
        at org.eclipse.ditto.services.utils.persistence.mongo.streaming.MongoTimestampPersistenceIT.startMongoResource(MongoTimestampPersistenceIT.java:61)

[INFO]
[INFO] Results:
[INFO]
[ERROR] Errors:
[ERROR]   IndexInitializerIT.startMongoResource:102 » NullPointer
[ERROR]   MongoReadJournalIT.startMongoResource:60 » NullPointer
[ERROR]   MongoTimestampPersistenceIT.startMongoResource:61 » NullPointer
`

This seems to be in the ditto-services-utils-persistence. I've installed MongoDB to see if this would be some sort of prerequisite but that didn't help. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1NzExNjI3NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/725,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1NzM2ODE1OQ==,ditto,657368159,725,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-07-13T05:33:33Z,2020-07-13T05:33:33Z,"> That's a good idea. I've downloaded the jars and got them up and running. However, the configuration is a bit unclear to me. I've looked at: https://www.eclipse.org/ditto/architecture-overview.html
> Your suggestion basically means that I need to setup MongoDB and NGINX next to Ditto. Is there any guidance on the configuration of this set-up?

Yes, MongoDB is a hard requirement for Ditto. Nginx acts as an optional reverse proxy in front of Ditto - you need it for example, when you want to authenticate users via Basic auth.
If you don't need user authentication (as you are running it locally on a Raspberry this might not be needed), you can also use the [pre-authentication](https://www.eclipse.org/ditto/installation-operating.html#pre-authentication) header `x-ditto-pre-authenticated` and add this to your HTTP requests.

Regards the compiling of Ditto on ARM: This should really not be required.
If you would manage to get the build running, you would create the ""starter"" .jar files which I linked above.
You would still need to run them.

In the [docker-compose](https://github.com/eclipse/ditto/blob/master/deployment/docker/docker-compose.yml) file you can see with which parameters the MongoDB and the Ditto services are started:
* the environment variables also have to be set prior to running each starter .jar
* the `command` for the Ditto services is simply `java -jar starter.jar` (where `starter.jar` has to be replaced with each specific ""*-starter.jar"")

Then, the Ditto services should come up and form a cluster.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1NzM2ODE1OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/725,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1NzM2ODI1OA==,ditto,657368258,725,NA,ffendt,2587759,Florian Fendt,,NA,2020-07-13T05:33:57Z,2020-07-13T05:33:57Z,"Hi @marioverhaeg,

Regarding your first question: you can find a docker-compose setup with MongoDB and NGINX in [deployment/docker](https://github.com/eclipse/ditto/tree/master/deployment/docker).

Regarding the build process: There should be no need to install MongoDB yourself.  If I remember correctly, we're using [flapdoodle](https://github.com/flapdoodle-oss/de.flapdoodle.embed.mongo) for unit testing with MongoDB. It should download a binary of MongoDB itself and run it in the unit tests. There should be some logging output what version it tries to download and start. Can you check if that version would be working on your Raspi?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1NzM2ODI1OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/725,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1Nzk4MDc5Mw==,ditto,657980793,725,NA,marioverhaeg,46836831,,,NA,2020-07-14T05:46:57Z,2020-07-14T05:46:57Z,Thank you for the comments. I'm getting close now and used the starter jars combined with parts of the docker-compose file to get NGINX and MongoDB up and running. My RPI4 only has 2GB of memory and I'm running into some performance issues. I might need to order an 8GB RPI to get all of this up and running on one system. ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY1Nzk4MDc5Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/725,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY2MDUyODAwMQ==,ditto,660528001,725,NA,marioverhaeg,46836831,,,NA,2020-07-18T19:11:39Z,2020-07-18T19:11:39Z,"I gave in... I ordered a small Intel NUC and am running Ditto now on an Intel platform. I needed a bit more processing power anyway :-). The RPIs will serve as ""edge"" nodes.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY2MDUyODAwMQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/742,https://api.github.com/repos/eclipse-ditto/ditto/issues/742,ditto,663204075,742,Running Ditto (in Docker) on CentOS 8,marioverhaeg,46836831,,,CLOSED,2020-07-21T18:00:13Z,2020-08-28T05:48:37Z,"Hi again :-),

Just sharing some experience this time.

I've spend the last week or so trying to get Ditto running on CentOS 8. However, Docker does not seem to like the firewalld service that CentOS 8 uses. This causes some conflict as Docker pre-configures iptables. This results in the Ditto ""Bad gateway"" error. 

Summary: Google: ""Centos 8 docker firewalld""
Solution: move the docker0 interface to the public zone of the firewall and apply masquerading:

https://serverfault.com/questions/987686/no-network-connectivity-to-from-docker-ce-container-on-centos-8 

ip link show
sudo firewall-cmd --get-active-zones
sudo firewall-cmd --get-zone-of-interface=docker0
sudo nmcli connection modify docker0 connection.zone public
sudo firewall-cmd --zone=public --add-masquerade --permanent
sudo firewall-cmd --reload
sudo systemctl restart docker

Edit: I struggled getting this to work after my post. It seems there is even an influence in timing. If the docker containers spin up to fast it still doesn't work. At this moment I've figured out that I need to start the containers manually after the machine is fully booted. I need to create a script that delays the startup of the containers.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/742/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/746,https://api.github.com/repos/eclipse-ditto/ditto/issues/746,ditto,664303880,746,Time to live (TTL) for Ditto Properties with auto removal,JulianFeinauer,17098762,Julian,,OPEN,2020-07-23T08:49:15Z,2020-08-04T08:35:32Z,"In some scenarios one may record some kind of limited history in a twin like e.g. productivity of the last 12 hours.
This can be modelled today with arrays or a special struct architecture but not very elegant (with simple updates of one value).

This could be overcome if each property could have an optional TTL and Ditto takes care of automatically removing the property when the TTL is expired.
Then one could simply push values (as in the example above) as properties ""timestamp"" -> value and set the TTL accordingly to 12h.

One idea could be to implement this with regards to the extended metadata model in #680.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/746/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/746,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY2ODQ1NjcyOQ==,ditto,668456729,746,NA,JulianFeinauer,17098762,Julian,,NA,2020-08-04T08:22:42Z,2020-08-04T08:22:42Z,"I would try to start with the implementation of this after #680 / #745 is finished. My first approach would be to store a special metadata about the TTL in the metadata of the thing and check in the `AbstractThingEventStrategy` if a property needs to be removed.
Does that make sense or do you suggest another approach @thjaeckle ?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY2ODQ1NjcyOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/746,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY2ODQ2MzIxOQ==,ditto,668463219,746,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-08-04T08:35:32Z,2020-08-04T08:35:32Z,"That sounds reasonable.
What we would need then is a class/enum/whatever where the Ditto ""known metadata"" fields are defined.
""Knowing"" meaning that Ditto has to apply semantic meaning to that metadata and does something automagically.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY2ODQ2MzIxOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/748,https://api.github.com/repos/eclipse-ditto/ditto/issues/748,ditto,666861920,748,Add GH Action to validate license header creation year,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2020-07-28T08:12:37Z,2020-12-21T12:39:02Z,"The build for PullRequests with invalid license header year for new created files should fail.

E.g. use: https://pre-commit.com/
In combination with: https://github.com/pre-commit/action

And an example to check for the correct year for new files: https://medium.com/cognitio/verify-license-header-before-commit-2eb0c1841121","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/748/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/749,https://api.github.com/repos/eclipse-ditto/ditto/issues/749,ditto,666900378,749,Add '_created' timestamp to things,dguggemos,15028977,Dominik Guggemos,dominik.guggemos@bosch.io,CLOSED,2020-07-28T09:00:14Z,2020-08-24T07:52:21Z,"- the timestamp when a thing was created is stored in the top-level property `_created`
- the field is filled at creation time and readonly afterwards
- the field can be used in searches","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/749/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/749,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY3ODk2OTExMw==,ditto,678969113,749,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-08-24T07:52:15Z,2020-08-24T07:52:15Z,Resolved by #763,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY3ODk2OTExMw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/757,https://api.github.com/repos/eclipse-ditto/ditto/issues/757,ditto,671875943,757,Add support for e2e acknowledgements also for live messages/commands,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2020-08-03T07:46:42Z,2020-08-26T14:57:03Z,"As a follow up of #611 and #661 requesting and providing acknowledgements shall also be supported for the ""live"" channel, for:
* live messages
* live commands

A sender of a live message shall e.g. decide that the successful delivery of the live message to a 3rd party shall be acknowledged.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/757/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/760,https://api.github.com/repos/eclipse-ditto/ditto/issues/760,ditto,675932429,760,Implicit creation of Things,jokraehe,12512262,Johannes Schneider,johannes.schneider@bosch.io,CLOSED,2020-08-10T07:35:07Z,2020-09-10T10:10:07Z,"Based on a notification by Eclipse Hono [#2053](https://github.com/eclipse/hono/issues/2053) it should be possible to create a Thing. The structure of the new Thing can be defined in the Hono connection. The idea is, to implement a payload mapper which is triggered by the notification and emits the create command.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/760/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/762,https://api.github.com/repos/eclipse-ditto/ditto/issues/762,ditto,678283516,762,Concierge cannot access another actor,fxulusoy,1167958,Fatih Ulusoy,,CLOSED,2020-08-13T09:13:15Z,2020-09-21T12:52:23Z,"I have a ditto instance running on the Kubernetes and all the pods are running fine. Everything was working before. There can be some changes regarding to the users but I am not sure how it can cause this error. 
I receive the following error message when I call the things API endpoint (`api/2/things/<my_thing_id>`) on Ditto:

```
{
  ""status"": 500,
  ""error"": ""gateway:internalerror"",
  ""message"": ""There was a rare case of an unexpected internal error."",
  ""description"": ""Please contact the service team.""
}
```

These logs are from ditto-congierce service. As far as I understand that the congierce service cannot access one of other actor. But I am not sure which one is it. I guess, it is the thing service. What else should I check?

```
2020-08-12 16:10:28,030 ERROR [c06a3803-5ca4-487c-a528-7019991777f6] o.e.d.s.c.e.EnforcerActor akka://ditto-cluster/user/conciergeRoot/enforcer - Unexpected non-DittoRuntimeException error - responding with GatewayInternalErrorException - AskTimeoutException :Ask timed out on [Actor[akka://ditto-cluster/system/sharding/thingProxy#-878452685]] after [30000 ms]. Message of type [org.eclipse.ditto.services.models.things.commands.sudo.SudoRetrieveThing]. A typical reason for `AskTimeoutException` is that the recipient actor didn't send a reply.
akka.pattern.AskTimeoutException: Ask timed out on [Actor[akka://ditto-cluster/system/sharding/thingProxy#-878452685]] after [30000 ms]. Message of type [org.eclipse.ditto.services.models.things.commands.sudo.SudoRetrieveThing]. A typical reason for `AskTimeoutException` is that the recipient actor didn't send a reply.
	at akka.pattern.PromiseActorRef$.$anonfun$defaultOnTimeout$1(AskSupport.scala:648)
	at akka.pattern.PromiseActorRef$$$Lambda$251.00000000DD12D5B0.apply(Unknown Source)
	at akka.pattern.PromiseActorRef$.$anonfun$apply$1(AskSupport.scala:669)
	at akka.pattern.PromiseActorRef$$$Lambda$252.00000000DD14DE20.apply$mcV$sp(Unknown Source)
	at akka.actor.Scheduler$$anon$4.run(Scheduler.scala:202)
	at scala.concurrent.Future$InternalCallbackExecutor$.unbatchedExecute(Future.scala:875)
	at scala.concurrent.BatchingExecutor.execute(BatchingExecutor.scala:113)
	at scala.concurrent.BatchingExecutor.execute$(BatchingExecutor.scala:107)
	at scala.concurrent.Future$InternalCallbackExecutor$.execute(Future.scala:873)
	at akka.actor.LightArrayRevolverScheduler$TaskHolder.executeTask(LightArrayRevolverScheduler.scala:334)
	at akka.actor.LightArrayRevolverScheduler$$anon$3.executeBucket$1(LightArrayRevolverScheduler.scala:285)
	at akka.actor.LightArrayRevolverScheduler$$anon$3.nextTick(LightArrayRevolverScheduler.scala:289)
	at akka.actor.LightArrayRevolverScheduler$$anon$3.run(LightArrayRevolverScheduler.scala:241)
	at java.lang.Thread.run(Unknown Source)
2020-08-12 16:10:28,237 WARN [] a.c.s.ShardRegion akka://ditto-cluster@10.244.2.82:2551/system/sharding/thingProxy - thing: No coordinator found to register. Probably, no seed-nodes configured and manual cluster join not performed? Total [8] buffered messages.
2020-08-12 16:10:30,238 WARN [] a.c.s.ShardRegion akka://ditto-cluster@10.244.2.82:2551/system/sharding/thingProxy - thing: No coordinator found to register. Probably, no seed-nodes configured and manual cluster join not performed? Total [8] buffered messages.
2020-08-12 16:10:32,238 WARN [] a.c.s.ShardRegion akka://ditto-cluster@10.244.2.82:2551/system/sharding/thingProxy - thing: No coordinator found to register. Probably, no seed-nodes configured and manual cluster join not performed? Total [8] buffered messages.
```




","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/762/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/762,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY3ODk2ODcwMg==,ditto,678968702,762,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-08-24T07:51:21Z,2020-08-24T07:51:21Z,"Are you sure that the Ditto cluster is in a healthy state?
Does not seem like it ..
Did you check the `/status/health` HTTP endpoint of Ditto's `gateway` service? This should aggregate to `UP` - I would guess that this is not the case.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY3ODk2ODcwMg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/764,https://api.github.com/repos/eclipse-ditto/ditto/issues/764,ditto,678935620,764,Can Ditto connect to mosquitto by username:password with tcp url ?,vu-nhan,17136903,Nguyen Vu Nhan,,CLOSED,2020-08-14T06:32:21Z,2020-09-21T12:52:15Z,"Hi all

I try do connect Ditto with Mosquitto with the basic authentication.

But Ditto can not connect to Mosquitto, here's my json config.

 ""piggybackCommand"": {
        ""type"": ""connectivity.commands:createConnection"",
        ""connection"": {
            ""id"": ""my id"",
            ""connectionType"": ""mqtt"",
            ""connectionStatus"": ""open"",
            ""failoverEnabled"": true,
            ""uri"": ""tcp://username:password@my-ip:my-port"",
            .....
        }
    }


Thank you.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/764/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/764,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY3ODk2NzkxMA==,ditto,678967910,764,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-08-24T07:49:27Z,2020-08-24T07:49:27Z,"Yes, Ditto can connect via plain TCP and username/password to an MQTT broker.
What's the error message you encounter?
Did you check the logs of the `connectivity` service for further information?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY3ODk2NzkxMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/766,https://api.github.com/repos/eclipse-ditto/ditto/issues/766,ditto,681646215,766,Persistence actor mailbox capacity not limited?,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,CLOSED,2020-08-19T08:22:53Z,2020-12-11T09:21:29Z,Connectivity sent 100 000 commands to a thing persistence actor; it worked on them for half an hour. However the persistence actor mailbox capacity is only 100. Is the configuration taking effect? Where are the commands buffered?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/766/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/770,https://api.github.com/repos/eclipse-ditto/ditto/issues/770,ditto,684953888,770,Connectivity service does not consume message after reconnect to AMQP (0.9.1) ,qthuy,13472700,QuocThanh Thuy,,CLOSED,2020-08-24T20:45:07Z,2020-09-02T12:21:36Z,"Ditto connectivity service does not consume message after reconnect to AMQP (0.9.1).

Ditto version: 1.1.3
AMQP: rabbitmq:3.8.5
Environment: kubernetes 1.14

Step to reproduce:
1. Configure ditto connectivity service to consume from AMQP.
2. Confirm that ditto can consume and process ditto message from AMQP.
3. Delete rabbitmq cluster PODs (simulate rolling upgrade on rabbitmq).
4. Confirm that rabbitmq cluster re-created ok.
5. Confirm that ditto connectivity service re-connect to AMQP ok.
6. Send ditto message on AMQP.
7. Expect ditto connectivity service to consume and process the message, but it does not until I restart the ditto connectivity POD.

I collected log for ditto connectivity service below.
[ditto-connectivity.log](https://github.com/eclipse/ditto/files/5120169/ditto-connectivity.log)
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/770/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/770,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY3OTg1ODM2Nw==,ditto,679858367,770,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-08-25T07:36:17Z,2020-08-25T07:36:17Z,"Thank you for your bug report.

From the logs, do I understand correctly that:
* you have 2 AMQP 0.9.1 connections 
   * `rabbit-ditto-connection-source-3` with both sources (consuming from RabbitMQ) and targets (publishing to RabbitMQ)?
   * `rabbit-ditto-connection-target-3` only with a target (publishing to RabbitMQ)?
* the connectiond are successfully re-established
   `2020-08-24 22:24:15,222 INFO  ... Established RMQ connection: amqp://ditto-user@172.20.204.247:5672/`
* however neither consuming messages (via the sources) or publishing messages (via the targets) works?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY3OTg1ODM2Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/770,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY3OTk4ODAxNQ==,ditto,679988015,770,NA,qthuy,13472700,QuocThanh Thuy,,NA,2020-08-25T12:15:06Z,2020-08-25T12:15:06Z,"I setup rabbit-ditto-connection-source-3 as source only (send message to ditto) and rabbit-ditto-connection-target-3 as target only (get notifications from ditto).

Yes, connectivity service stop consuming message from rabbit-ditto-connection-source-3 with this bug. I usually only get notification after I send a modify message to ditto using rabbit-ditto-connection-source-3, so not sure if ditto still continue to send to rabbit-ditto-connection-target-3 or not.

rabbit-ditto-connection-source-3:
```
{
    ""targetActorSelection"": ""/system/sharding/connection"",
    ""headers"": {
        ""aggregate"": false
    },
    ""piggybackCommand"": {
        ""type"": ""connectivity.commands:modifyConnection"",
        ""connection"": {
            ""id"": ""rabbit-ditto-connection-source-3"",
            ""connectionType"": ""amqp-091"",
            ""connectionStatus"": ""open"",
            ""failoverEnabled"": true,
            ""uri"": ""amqp://ditto-user:xyz@external-components-rabbitmq-ha.external-components.svc.cluster.local:5672"",
            ""sources"": [
                {
                    ""addresses"": [
                        ""ditto-source""
                    ],
                    ""authorizationContext"": [""nginx:ditto""]
                }
            ]
        }
    }
}
```
rabbit-ditto-connection-target-3:
```
{
    ""targetActorSelection"": ""/system/sharding/connection"",
    ""headers"": {
        ""aggregate"": false
    },
    ""piggybackCommand"": {
        ""type"": ""connectivity.commands:modifyConnection"",
        ""connection"": {
            ""id"": ""rabbit-ditto-connection-target-3"",
            ""connectionType"": ""amqp-091"",
            ""connectionStatus"": ""open"",
            ""failoverEnabled"": true,
            ""uri"": ""amqp://ditto-user:xyz@external-components-rabbitmq-ha.external-components.svc.cluster.local:5672"",
            ""targets"": [
                {
                    ""address"": ""ditto-target/msg"",
                    ""topics"": [
                        ""_/_/things/twin/events"",
                        ""_/_/things/live/messages"",
                        ""_/_/things/live/commands"",
                        ""_/_/things/live/events""
                    ],
                    ""authorizationContext"": [""nginx:ditto""]
                }
            ]
        }
    }
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY3OTk4ODAxNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/770,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4MDA2OTA0Nw==,ditto,680069047,770,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-08-25T14:43:51Z,2020-08-25T14:43:51Z,"Thanks, we'll have a look on it.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4MDA2OTA0Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/770,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4MzY4OTQ3NA==,ditto,683689474,770,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-08-31T10:09:07Z,2020-08-31T10:09:07Z,"Will be fixed in Ditto 1.2.0 which we build today.
@qthuy would be great, if you could verify that your problem is solved with Ditto 1.2.0 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4MzY4OTQ3NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/770,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4Mzc0MDYwMQ==,ditto,683740601,770,NA,qthuy,13472700,QuocThanh Thuy,,NA,2020-08-31T12:12:32Z,2020-08-31T12:12:32Z,"Will do, thank you for the quick response. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4Mzc0MDYwMQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/770,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4NTEwNjMyNA==,ditto,685106324,770,NA,qthuy,13472700,QuocThanh Thuy,,NA,2020-09-01T20:14:06Z,2020-09-01T20:14:06Z,Confirmed that Ditto 1.2.0 fixed this issue.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4NTEwNjMyNA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/770,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4NTQ5MTQ1Nw==,ditto,685491457,770,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-09-02T09:28:09Z,2020-09-02T09:28:09Z,@qthuy do you use Ditto for commercial purposes? It would be great then to show your adoption of it via the https://iot.eclipse.org/adopters/ page. ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4NTQ5MTQ1Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/770,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4NTY5NjY2OQ==,ditto,685696669,770,NA,qthuy,13472700,QuocThanh Thuy,,NA,2020-09-02T12:21:36Z,2020-09-02T12:21:36Z,We are currently evaluating Ditto in our product. Will add my company to the adopters page once we finalize on Ditto.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4NTY5NjY2OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/772,https://api.github.com/repos/eclipse-ditto/ditto/issues/772,ditto,685563484,772,Retrieve thing metadata when not retrieving complete thing,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2020-08-25T15:03:19Z,2022-08-15T07:06:00Z,"With #680 (addition of `_metadata` to a thing) now arbitrary metadata may be added to the JSON hierarchy of a thing.

This metadata can also be queried, but currently only when retrieving the complete thing, e.g.:
```
GET /api/2/things/org.eclipse.ditto:fancy-car?fields=thingId,features,_revision,_metadata

response:
{
  ""thingId"": ""org.eclipse.ditto:fancy-car"",
  ""features"": {
    ""Vehicle"": {
      ""properties"": {
        ""speed"": 42
      }
    }
  },
  ""_revision"": 23,
  ""_metadata"": {
    ""features"": {
      ""Vehicle"": {
        ""properties"": {
          ""speed"": {
            ""issuedAt"": ""some timestamp ....""
          }
        }
      }
    }
  }
}
```
The same is true for the Ditto Protocol JSON API.

As an enhancement of enabling that basic query we should add the possibility to query for metadata even when doing a ""partial retrieve"", e.g. via HTTP:
```
GET /api/2/things/org.eclipse.ditto:fancy-car/features/Vehicle/properties/speed

response payload:
42
```

Now, the `""fields""` selector is not supported at this level `""/features/Vehicle/properties/speed""` and this would also be strange as strictly speaking at this location in the JSON there is no metadata.

So I suggest to e.g. define a HTTP header (or in addition a HTTP query param) in order to select metadata.
The HTTP response would include the requested metadata (if it was existing) as HTTP response header.

HTTP Example:
```
GET /api/2/things/org.eclipse.ditto:fancy-car/features/Vehicle/properties/speed?get-metadata=issuedAt

response payload:
42

response headers:
  metadata: ""[{""issuedAt"": ""some timestamp ....""}]""
```

The format could be just a comma separated list of metadata to retrieve relatively to the selected path.

Any thoughts and opinions on that @JulianFeinauer and @jufickel-b ?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/772/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/773,https://api.github.com/repos/eclipse-ditto/ditto/issues/773,ditto,686165967,773,Logging might cause NPE,jufickel-b,17162397,Juergen Fickel,,CLOSED,2020-08-26T09:30:15Z,2020-10-05T12:44:55Z,"`ThingCommandEnforcement` uses a `DittoDiagnosticLoggingAdapter`.
As all of Ditto's loggers, this logger is not thread-safe. However, `ThingCommandEnforcement` happens to access the logger in parallel. This leads to a `NullPointerException` where in `DittoDiagnosticLoggingAdapter` the correlation ID is made a String.

A first, defensive, approach to circumvent that NPE is to not call `toString` on the correlation ID but passing it down to LogUtil as CharSequence. Furthermore, `ThingCommandEnforcement` should not use its parent's logger but its own (which should be a `DittoLogger`).
Both measures do not remedy the problem of tangled correlation IDs due to parallel calls to logger. To address this it would be necessary to introduce a synchronized wrapper for `DittoLogger` and `DittoDiagnosticLoggingAdapter` which could be used where needed.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/773/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/773,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4MDc3ODg4OA==,ditto,680778888,773,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-08-26T09:49:20Z,2020-08-26T09:49:20Z,"> introduce a synchronized wrapper

Veto, I think that is performance wise a really bad idea. Better to have some wrongly correlated log-statements then IMO.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4MDc3ODg4OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/773,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4MjU4NjMwNg==,ditto,682586306,773,NA,jufickel-b,17162397,Juergen Fickel,,NA,2020-08-28T13:51:01Z,2020-08-28T13:51:01Z,"Veto is veto.

How about a new type like `ThreadSafeDittoLogger` which differs from the already existing `DittoLogger` in a way that it only provides the `withCorrelationId` methods as well as the `discardCorrelationId` method.

An immutable implementation of that type could return a new logger instance for each of those methods which guarantees thread safety.

Furthermore a different type with an obvious name might prevent unnecessary usage.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4MjU4NjMwNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/774,https://api.github.com/repos/eclipse-ditto/ditto/issues/774,ditto,686278046,774,Upgrade Akka and Akka HTTP versions to latest 2.6.x and 10.2.x,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2020-08-26T12:26:48Z,2020-09-21T11:50:11Z,"+ Typesafe config 1.4.0
+ used Scala version to 2.13
+ transitive updates","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/774/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/774,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4MDg1MTg2OQ==,ditto,680851869,774,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-08-26T12:35:19Z,2020-08-26T12:35:19Z,"Already created CQs:
* com.github.luben:zstd-jni:1.4.4-7: https://dev.eclipse.org/ipzilla/show_bug.cgi?id=22420 ✔️ 
* com.github.scullxbones:akka-persistence-mongo-common_2.13:3.0.3: https://dev.eclipse.org/ipzilla/show_bug.cgi?id=22421 ✔️
* com.github.scullxbones:akka-persistence-mongo-scala_2.13:3.0.3: https://dev.eclipse.org/ipzilla/show_bug.cgi?id=22422 ✔️
* com.hierynomus:asn-one:0.4.0: https://dev.eclipse.org/ipzilla/show_bug.cgi?id=22423 ✔️ 
* com.hivemq:hivemq-mqtt-client:1.2.0: https://dev.eclipse.org/ipzilla/show_bug.cgi?id=22424 ✔️ 
* com.newmotion:akka-rabbitmq_2.13:5.1.2: https://dev.eclipse.org/ipzilla/show_bug.cgi?id=22425 ✔️
* Akka 2.6.8: https://dev.eclipse.org/ipzilla/show_bug.cgi?id=22426 ✔️
* com.typesafe:ssl-config-core_2.13:0.4.1: https://dev.eclipse.org/ipzilla/show_bug.cgi?id=22427 ✔️
* io.kamon:kamon-core_2.13:2.1.4: https://dev.eclipse.org/ipzilla/show_bug.cgi?id=22428 ✔️
* io.kamon:kamon-prometheus_2.13:2.1.4: https://dev.eclipse.org/ipzilla/show_bug.cgi?id=22429 ✔️ 
* io.kamon:kamon-system-metrics_2.13:2.1.4: https://dev.eclipse.org/ipzilla/show_bug.cgi?id=22430 ✔️ 
* org.mongodb.scala:mongo-scala-bson_2.13:2.9.0: https://dev.eclipse.org/ipzilla/show_bug.cgi?id=22431 ✔️ 
* org.mongodb.scala:mongo-scala-driver_2.13:2.9.0: https://dev.eclipse.org/ipzilla/show_bug.cgi?id=22432 ✔️ 
* org.lmdbjava:lmdbjava:0.7.0: https://dev.eclipse.org/ipzilla/show_bug.cgi?id=22433 ✔️ 
* nl.grons:metrics4-akka_a25_2.13:4.1.9: https://dev.eclipse.org/ipzilla/show_bug.cgi?id=22434 ✔️ 
* nl.grons:metrics4-scala_2.13:4.1.9: https://dev.eclipse.org/ipzilla/show_bug.cgi?id=22435 ✔️ 
* Akka-HTTP 10.2.0: https://dev.eclipse.org/ipzilla/show_bug.cgi?id=22447 ✔️","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4MDg1MTg2OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/777,https://api.github.com/repos/eclipse-ditto/ditto/issues/777,ditto,687058286,777,Add a payload mapper to convert directly between message command payload and external messages,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,CLOSED,2020-08-27T08:41:29Z,2020-09-09T06:39:47Z,"The payload mapper should behave similarly to the messages HTTP API in that it converts between the payload of message commands and the payload of messages over protocols such as AMQP, MQTT and Kafka. For incoming messages, the mapper may optimize the presentation of the payload for the Ditto protocol JSON format according to content type.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/777/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/778,https://api.github.com/repos/eclipse-ditto/ditto/issues/778,ditto,687274224,778,Implicit metadata creation on JSON leaves,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2020-08-27T14:09:05Z,2020-09-21T12:35:26Z,"Following up on Ditto being able to manage arbitrary metadata with #680 it could be useful in some use cases to automatically create/inject certain metadata on each modification of a digital twin.

The 3 obvious implicit metadata fields coming to my mind:
* `_revision`: the thing `_revision` in which the JSON leaf (e.g. a feature property or an attribute) was modified for the last time
* `_modified`: the modification date at which the JSON leaf (e.g. a feature property or an attribute) was modified for the last time
* `_created`: the creation date at which the JSON leaf (e.g. a feature property or an attribute) was created

I suggest keeping the underscore prefix `_` in order to ""mark"" that those are automatic / Ditto managed metadata fields.

An example thing JSON document could look like this:
```
{
  ""thingId"": ""org.eclipse.ditto:thing-1"",
  ""policyId"": ""..."",
  ""features"": {
    ""lamp"": {
      ""properties"": {
        ""on"": true,
        ""color"": {
          ""r"": 0,
          ""g"": 255,          
          ""b"": 255,
        }
      }
    }
  },
  ""_created"": ""2020-06-01T10:00:00Z"",
  ""_modified"": ""2020-06-09T14:30:00Z"",
  ""_revision"": 42,
  ""_metadata"": {
    ""settings"": {
      ""auto-metadata"": [
        ""_revision"",
        ""_modified""
      ]
    },
    ""policyId"": {
      ""_modified"": ""2020-06-09T14:00:00Z"",
      ""_revision"": 1
    },
    ""features"": {
      ""lamp"": {
        ""properties"": {
          ""on"": {
            ""_modified"": ""2020-06-09T14:30:00Z"",
            ""_revision"": 42
          },
          ""color"": {
            ""r"": {
              ""_modified"": ""2020-06-09T14:15:00Z"",
              ""_revision"": 23
            },
            ""g"": {
              ""_modified"": ""2020-06-09T14:15:00Z"",
              ""_revision"": 23
            },
            ""b"": {
              ""_modified"": ""2020-06-09T14:15:00Z"",
              ""_revision"": 23
            }
          }
        }
      }
    }
  }
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/778/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/778,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4MjM1OTMxMA==,ditto,682359310,778,NA,jufickel-b,17162397,Juergen Fickel,,NA,2020-08-28T06:47:06Z,2020-08-28T06:47:06Z,How does Ditto know what fields to set implicitly? I assume that this should not be hard-coded but at least global configuration. Or is this configurable by the user somehow?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4MjM1OTMxMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/778,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4MjM2MzI2Nw==,ditto,682363267,778,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-08-28T06:58:34Z,2020-08-28T06:58:34Z,"I also thought about this and see 2 options:
* always set the built-in metadata
* make it configurable on thing level, maybe as part of the `""_metadata""` object, e.g.:
```
""_metadata"": {
  ""settings"": {
    ""auto-metadata"": [
      ""_revision"",
      ""_modified""
    ]
  }
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4MjM2MzI2Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/778,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5MjAyNTk5Mg==,ditto,692025992,778,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2020-09-14T12:41:16Z,2020-09-14T12:41:16Z,Does providing a metadata field which is also auto-injected by ditto (configurable or not) take precedence? E.g. if I want to have ditto set the modified field automatically if I don't provide one myself?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5MjAyNTk5Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/778,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5MjA0MDIxNg==,ditto,692040216,778,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-09-14T13:08:15Z,2020-09-14T13:08:15Z,"@w4tsn that's to discuss. It could be very useful when you e.g. want to provide a custom `modified` timestamp that your defined `modified` has priority above the ""fallback"" issued by Ditto.
For the `revision` however that would not make sense FMPOV - this is an ""internal only"" metadata.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5MjA0MDIxNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/778,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5MjA1MjAyMA==,ditto,692052020,778,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2020-09-14T13:27:49Z,2020-09-14T13:27:49Z,"Then following up on other discussion on this topic it might be better to have the internal `_modified` anyways and an additional `issuedAt` which is either set automatically by ditto as a fallback or via a header which then takes precedence. In the default case this might turn out to be redundant but in the end you might wanna know when a value was set in ditto and when it was actually issued by the device.

Ok, but then again you could also implement it in the client that if there is no `issuedAt` provided just fallback to `_modified`","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5MjA1MjAyMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/778,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5MjA3ODcyNA==,ditto,692078724,778,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-09-14T14:11:08Z,2020-09-14T14:11:08Z,"> Ok, but then again you could also implement it in the client that if there is no `issuedAt` provided just fallback to `_modified`

Exactly, I would prevent duplicating metadata :)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5MjA3ODcyNA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/778,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5MjUwMTA0Mw==,ditto,692501043,778,NA,jufickel-b,17162397,Juergen Fickel,,NA,2020-09-15T06:40:06Z,2020-09-15T06:40:06Z,"> ```
> ""_metadata"": {
>   ""settings"": {
>     ""auto-metadata"": [
>       ""_revision"",
>       ""_modified""
>     ]
>   }
> }
> ```

This could indeed be a way to go. Probably we also need the possibility to define default values for auto-metadata fields.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5MjUwMTA0Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/778,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5MjU0OTk3MA==,ditto,692549970,778,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-09-15T08:18:14Z,2020-09-15T08:18:14Z,"> > ```
> > ""_metadata"": {
> >   ""settings"": {
> >     ""auto-metadata"": [
> >       ""_revision"",
> >       ""_modified""
> >     ]
> >   }
> > }
> > ```
> 
> This could indeed be a way to go. Probably we also need the possibility to define default values for auto-metadata fields.

Why would we? Defaults can only be static, can't they?
What would be the benefit to have an implicit Metadata with the same static default value for each Json leaf? ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5MjU0OTk3MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/778,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5MzI0OTgwOQ==,ditto,693249809,778,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2020-09-16T08:14:27Z,2020-09-16T08:14:27Z,"I'm not sure if there is a use-case that justifies deactivating built-in metadata. Maybe that's a unnecessary complexity right now.

I think static metadata defaults would only make sense if one can also specify for which paths those defaults apply. This would make it possible to load a vorto model as kind-of prototype into the metadata which would then automatically apply metadata to incoming data of this model / the provided auto-metadata definition. However for most parts this could also be written initially on thing creation. Anyways this is how I would image something like this:

```json
  ""_metadata"": {
    ""prototype"": {
      ""features"": {
        ""temperature"": {
          ""properties"": {
            ""value"": {
              ""measurementUnit"": ""°C""
            }
          }
        }
      }
    }
  }
```

Which produces this thing:

```json
{
  ""thingId"": ""org.eclipse.ditto:thing-1"",
  ""policyId"": ""..."",
  ""features"": {
    ""temperature"": {
      ""properties"": {
        ""value"": true
      }
    }
  },
  ""_created"": ""2020-06-01T10:00:00Z"",
  ""_modified"": ""2020-06-09T14:30:00Z"",
  ""_revision"": 42,
  ""_metadata"": {
    ""prototype"": {
      ""features"": {
        ""temperature"": {
          ""properties"": {
            ""value"": {
              ""measurementUnit"": ""°C""
            }
          }
        }
      }
    },
    ""policyId"": {
      ""_modified"": ""2020-06-09T14:00:00Z"",
      ""_revision"": 1
    },
    ""features"": {
      ""temperature"": {
        ""properties"": {
          ""value"": {
            ""_modified"": ""2020-06-09T14:30:00Z"",
            ""_revision"": 42,
            ""measurementUnit"": ""°C""
          }
        }
      }
    }
  }
}
```

If one would change the model / auto-metadata of this kind then new incoming data would automatically cause a change of the attached metadata.

A use-case for this could be a status property which is a map of wireless device in range which is dynamically filled. I know which metadata the objects of this map would have, but they are not present on thing creation.

**One problem I stumbled upon with current metadata in general**: in the above example the color object is not a leaf and hence has no metadata assigned. In terms of `_modified` and `_revision` I can infer the data by going through each leaf and see which one is the ""oldest"". If we think about other metadata e.g. from vorto like the description, measurementUnit or editable flag, those can also be set for the color object hence the requirement for metadata not only for leafs.

**Other interesting built-in**:

* _created - we have a status property containing a map of several wireless nodes which is dynamically filled with wireless nodes in range. It would be useful to see when an entry to this map was first created. In this case: how does metadata cope with arrays?
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5MzI0OTgwOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/778,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5MzI5MTU2Mg==,ditto,693291562,778,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-09-16T09:35:08Z,2020-09-16T09:35:08Z,"> I'm not sure if there is a use-case that justifies deactivating built-in metadata. Maybe that's a unnecessary complexity right now.

Sure - simply in order to save on the additional data volume when someone does not need it at all.
Also, Ditto managed things do have a max. size in bytes (by default 100kB). The implicit metadata could probably half this max. reachable size.

> I think static metadata defaults would only make sense if one can also specify for which paths those defaults apply. [...]

I could not follow your thoughts here and don't see why this is an added value comparing to setting the metadata when e.g. creating the thing JSON based on a Vorto model.

> [...] those can also be set for the color object hence the requirement for metadata not only for leafs.

Yes, that's why the current `_metadata` implementation allows setting metadata also on objects.
I do not yet see that as requirement for implicitly created metadata (like the mentioned ones _modified and _revision or even _created) as those can be determined by their ""children"" as you mentioned.

> If we think about other metadata e.g. from vorto like the description, measurementUnit or editable flag, those can also be set for the color object hence the requirement for metadata not only for leafs.

Yes, that's possible right now - should have nothing to do with implicitly added metadata.

> _created [...]

Agreed, that could be useful as well. We also added `_created` on thing level in Ditto 1.2.0

> [...] how does metadata cope with arrays?

What do you mean with that?
A metadata's value should be able to be an array.
Setting the metadata on an array value should be possible as well.
Setting the metadata to a JsonObject inside an array is most probably not possible as Ditto (ditto-json and the JsonPointer implementation we have in place) does not handle Json arrays very well.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5MzI5MTU2Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/778,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5MzMxMjUzOA==,ditto,693312538,778,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2020-09-16T10:16:30Z,2020-09-16T10:16:30Z,"> > I'm not sure if there is a use-case that justifies deactivating built-in metadata. Maybe that's a unnecessary complexity right now.
>
> Sure - simply in order to save on the additional data volume when someone does not need it at all.
> Also, Ditto managed things do have a max. size in bytes (by default 100kB). The implicit metadata could probably half this max. reachable size.

Fair enough! In that case: should built-in metadata be enabled or disabled by default? Is `auto-metadata` opt-in or opt-out? This behavior could be controlled on a global level or even per namespace.

Furthermore an alternative approach could be to set it this way:

```json
""_metadata"": {
  ""settings"": {
    ""auto-metadata"": {
      ""_revision"": true,
      ""_modified"": true
    }
  }
}
```

> > I think static metadata defaults would only make sense if one can also specify for which paths those defaults apply. [...]
>
> I could not follow your thoughts here and don't see why this is an added value comparing to setting the metadata when e.g. creating the thing JSON based on a Vorto model.

Imagine a feature with a property tracking wireless devices in range (e.g. LoRa Gateways or Devices):

```json
""LoRaGateways"": {
  ""properties"": {
    ""status"": {
      ""gatewaysInRange"": {
        ""some-id-ab79dc8d8f0f"": {
          ""signalStrength"": -7,
          ""noise"": 100
        }
      }
    }
  }
}
```

and metadata:

```json
""_metadata"": {
  ""features"": {
    ""LoRaGateways"": {
      ""properties"": {
        ""status"": {
          ""gatewaysInRange"": {
            ""some-id-ab79dc8d8f0f"": {
              ""noise"": {
                ""measurementUnit"": ""dB""
              }
            }
          }
        }
      }
    }
  }
}
```

In this case I know the metadata from the model in advance, but I don't know / have the actual objects in the `gatewaysInRange` map. I'd have to get the vorto model to be able to write the metadata for each new object in the map. I'd rather like to have this set once and ditto filling it in automatically.

To be able to do this I'd need the ability to set this metadata with the correct path from the vorto model at thing creation (or update it later of course) and ditto needs to apply this everytime I put a new object into such a map. This is a problem of complex data types and it may be argued if it's in dittos responsibility to manage this.

> > [...] how does metadata cope with arrays?
>
> What do you mean with that?

I was wondering if I could apply metadata to the contents of an array and your last response answered this. So a work-around or solution is to use a map / object instead of an array in those cases.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5MzMxMjUzOA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/779,https://api.github.com/repos/eclipse-ditto/ditto/issues/779,ditto,687283255,779,Make is possible to delete metadata from a thing,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2020-08-27T14:20:41Z,2022-08-15T07:06:00Z,"With #680 it is possible to put/set arbitrary metadata to a digital twin (thing).
It however is not possible to delete a once set metadata - it is only possible to e.g. set the metadata's value to `null`.

In scenarios where deletion is favorable it would be good to make deletion possible.

The syntax of deletion could look like, as an additional header ""delete-metadata"":
```
delete-metadata:
[
  ""issuedAt""
]
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/779/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/779,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4MjM1MjI0Ng==,ditto,682352246,779,NA,jufickel-b,17162397,Juergen Fickel,,NA,2020-08-28T06:28:17Z,2020-08-28T06:28:17Z,"As the header names for metadata now contain verbs, this is a nice approach IMHO.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4MjM1MjI0Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/785,https://api.github.com/repos/eclipse-ditto/ditto/issues/785,ditto,692058690,785,Provide documentation for _metadata feature,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2020-09-03T15:14:19Z,2020-09-23T08:45:38Z,"Was not done as part of #680, so must still be done.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/785/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/785,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4NzU4NTc5MA==,ditto,687585790,785,NA,JulianFeinauer,17098762,Julian,,NA,2020-09-05T10:23:07Z,2020-09-05T10:23:07Z,@thjaeckle and @jufickel-b I started to work on the documentation in this branch: https://github.com/JulianFeinauer/ditto/tree/feature/785-documentation-metadata do you agree with the current setup?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4NzU4NTc5MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/785,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4ODA2Mjk0Mw==,ditto,688062943,785,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-09-07T06:18:57Z,2020-09-07T06:18:57Z,"@JulianFeinauer cool - I just had a brief look.
* adding it as a new page is good - as it is a new concept
* then you also must add it to the `_data/sidebards/ditto_sidebar.yml` or else it won't show in the navigation
* the current implementation does not have any predefined metadata, even not `issuedAt` - so that one also is not implicitly set
    * I created #778 in order to bring `modified` and `revision` as predefined (and Ditto managed) metadata

I'm not sure if that will work:
```json
{
  ""key"":""*/"",
  ""value"":{""issuedAt"": someTimestamp }
}
```

I would have expected to look like:
```json
{
  ""key"": ""*/issuedAt"",
  ""value"": someTimestamp
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4ODA2Mjk0Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/785,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4ODA4MDM3OQ==,ditto,688080379,785,NA,JulianFeinauer,17098762,Julian,,NA,2020-09-07T06:57:35Z,2020-09-07T06:57:35Z,Hey @thjaeckle thanks for the feedback.. I did not finish it the weekent because I wanted to sit down and try it out myself as I did not track all changes you and @jufickel-b did in the code so before submitting it as PR I will try to test it.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4ODA4MDM3OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/785,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4ODYxNjc4NQ==,ditto,688616785,785,NA,jufickel-b,17162397,Juergen Fickel,,NA,2020-09-08T04:49:42Z,2020-09-08T04:49:42Z,"@thjaeckle your expectation is correct.
@JulianFeinauer you can have a look at the unit tests to see the format of metadata headers: [DefaultMetadataHeaderTest](https://github.com/eclipse/ditto/blob/3d326f065c08e185a7f945a9b9e5df125cd61c1d/model/base/src/test/java/org/eclipse/ditto/model/base/headers/metadata/DefaultMetadataHeaderTest.java)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4ODYxNjc4NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/785,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5MjAwOTMwOQ==,ditto,692009309,785,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2020-09-14T12:06:05Z,2020-09-14T12:06:05Z,"This not only needs to be added to the doc pages but also to the swagger docs.

@jufickel-b so I suppose that all complex json objects have to be broken down such that I get one array entry for each leaf. E.g. the issuedBy example from the docs proposal would have to be split up into two entries, correct?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5MjAwOTMwOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/785,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5MjAyNDI2NA==,ditto,692024264,785,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2020-09-14T12:37:45Z,2020-09-14T12:37:45Z,"The API example / specification under [basic-thing.md](https://github.com/JulianFeinauer/ditto/blob/feature/785-documentation-metadata/documentation/src/main/resources/pages/ditto/basic-thing.md) needs to be updated to.

In the current docs: https://www.eclipse.org/ditto/basic-thing.html","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5MjAyNDI2NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/785,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5NzIyNDc2OA==,ditto,697224768,785,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-09-23T08:45:38Z,2020-09-23T08:45:38Z,Closed via merged #806 ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5NzIyNDc2OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/790,https://api.github.com/repos/eclipse-ditto/ditto/issues/790,ditto,693294904,790,Ditto JSON is not OSGi compatible due to missing imports,kaloyanrradev,50838998,Kaloyan Radev,,CLOSED,2020-09-04T15:23:49Z,2020-09-09T11:04:16Z,"Please check this line in the maven-bundle-plugin config of the Ditto JSON client bundle:

https://github.com/eclipse/ditto/blob/1ba630b5f07086c9a5127ef9a5b3a28650bc8343/json/pom.xml#L176

It needs to be cleared or extended with a star in the end, otherwise it will hide (not import) the Jackson packages used:

`<Import-Package>com.eclipsesource.json,*</Import-Package>`

Currently the single imported package actually allows the bundle to be resolved in OSGi environments, but it will actually have a ClassNotFound exception once it tries to uses most of its functionality (unless the class is loaded by the caller code).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/790/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/790,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4NzI4OTQzNA==,ditto,687289434,790,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-09-04T17:40:40Z,2020-09-04T17:40:40Z,"Hi.
Jackson should not be a required dependency for Ditto-json. It's only used in Ditto's backend for doing CBOR serialization.
When not available on the classpath, Ditto-json should still work. 
Do you have a stack trace where the Jackson class is being loaded? ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4NzI4OTQzNA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/790,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4ODA2ODE3Ng==,ditto,688068176,790,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-09-07T06:31:49Z,2020-09-07T06:31:49Z,"Probably we did something wrong here.

ditto-json in fact has imports to `com.fasterxml.jackson.core` and `com.fasterxml.jackson.dataformat.cbor` - however catches a `NoClassDefFoundError` when they can't be loaded during runtime.

See https://github.com/eclipse/ditto/blob/master/json/src/main/java/org/eclipse/ditto/json/CborAvailabilityChecker.java#L38-L48

This `CborAvailabilityChecker` is used in both JsonObject and JsonArray implementations.
We somehow need to dynamically determine and load the CBOR classes - but in OSGi environments that could get tricky. Will have to investigate ...
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4ODA2ODE3Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/790,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4ODM4MTg5Ng==,ditto,688381896,790,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-09-07T15:06:23Z,2020-09-07T15:06:23Z,"We're working on it.
Goal is to ship ""ditto-json"" with no dependency to any Jackson library, also not in scope of OSGi ""imports"".","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4ODM4MTg5Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/790,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4ODc5Mzk0OA==,ditto,688793948,790,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-09-08T11:02:22Z,2020-09-08T11:02:22Z,"@kaloyanrradev how exactly did you produce this error?
We're wondering as this change is already in ditto-json since Ditto 1.1.0 which was released in April this year.
And we just tried out using the ditto-client 1.1.0 and 1.2.0 (which uses ditto-json as well) in a Felix container which worked.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4ODc5Mzk0OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/790,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4ODgwMTE2NA==,ditto,688801164,790,NA,desislava-marinova,32883994,Desislava Marinova,,NA,2020-09-08T11:15:51Z,2020-09-08T11:15:51Z,"@thjaeckle, as we used ditto 1.0.0 and we had no such issues, in ditto 1.1.5 the problem is also experienced. 

Is the following stack trace helpful? 
`Caused by: java.lang.ClassNotFoundException: com.fasterxml.jackson.core.JsonFactory, from bundle org.eclipse.ditto.json
	at com.prosyst.mbs.impl.framework.DefaultClassProvider.loadClass_(DefaultClassProvider.java:603) ~[?:?]
	at com.prosyst.mbs.impl.framework.DefaultClassProvider.loadClass(DefaultClassProvider.java:453) ~[?:?]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[?:1.8.0_171]
	at org.eclipse.ditto.json.ImmutableJsonArray$SoftReferencedValueList.parseToList(ImmutableJsonArray.java:409) ~[?:?]
	at org.eclipse.ditto.json.ImmutableJsonArray$SoftReferencedValueList.recoverValues(ImmutableJsonArray.java:394) ~[?:?]
	at org.eclipse.ditto.json.ImmutableJsonArray$SoftReferencedValueList.values(ImmutableJsonArray.java:386) ~[?:?]
	at org.eclipse.ditto.json.ImmutableJsonArray$SoftReferencedValueList.getStream(ImmutableJsonArray.java:422) ~[?:?]
	at org.eclipse.ditto.json.ImmutableJsonArray.stream(ImmutableJsonArray.java:249) ~[?:?]
	at org.eclipse.ditto.model.base.headers.AbstractDittoHeaders.getAcknowledgementRequests(AbstractDittoHeaders.java:308) ~[?:?]
	at org.eclipse.ditto.client.internal.AbstractHandle.validateAckRequests(AbstractHandle.java:263) ~[?:?]
	at org.eclipse.ditto.client.internal.AbstractHandle.askThingCommand(AbstractHandle.java:167) ~[?:?]
	at org.eclipse.ditto.client.management.internal.FeatureHandleImpl.retrieve(FeatureHandleImpl.java:130) ~[?:?]
	at com.bosch.iot.dm.devices.remote.impl.DeviceInventoryRemoteImpl.lambda$null$16(DeviceInventoryRemoteImpl.java:387) ~[?:?]
	at com.bosch.iot.dm.async.CompletableFuture.lambda$null$24(CompletableFuture.java:973) ~[?:?]
	at com.bosch.iot.dm.auth.AuthCtx.callWithMDCSubscrId(AuthCtx.java:300) ~[?:?]
	at com.bosch.iot.dm.auth.AuthCtx.callWithMDCAuthCtx(AuthCtx.java:280) ~[?:?]
	at com.bosch.iot.dm.auth.AuthCtx.callAs(AuthCtx.java:239) ~[?:?]
	at com.bosch.iot.dm.auth.AuthCtx.callAs(AuthCtx.java:216) ~[?:?]
	at com.bosch.iot.dm.async.CompletableFuture.lambda$authCtxAware$25(CompletableFuture.java:973) ~[?:?]
	at java.util.concurrent.CompletableFuture.uniCompose(CompletableFuture.java:952) ~[?:1.8.0_171]
	at java.util.concurrent.CompletableFuture$UniCompose.tryFire(CompletableFuture.java:926) ~[?:1.8.0_171]
	... 51 more`","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4ODgwMTE2NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/790,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4ODgwMjc2Ng==,ditto,688802766,790,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-09-08T11:19:34Z,2020-09-08T11:19:34Z,"@desislava-marinova yes, this helps - thanks 👍 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4ODgwMjc2Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/790,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4ODgwNTAzNA==,ditto,688805034,790,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-09-08T11:24:56Z,2020-09-08T11:24:56Z,"Ok, our fix in PR #793 will fix that, of that I'm certain.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4ODgwNTAzNA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/790,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4ODg2NDI5NA==,ditto,688864294,790,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-09-08T13:25:45Z,2020-09-08T13:25:45Z,"Released as part of Ditto 1.2.1: https://www.eclipse.org/ditto/release_notes_121.html
Artifacts were published to Maven central which should have them available very soon.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4ODg2NDI5NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/790,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4OTQ4OTU0NA==,ditto,689489544,790,NA,kaloyanrradev,50838998,Kaloyan Radev,,NA,2020-09-09T11:04:16Z,2020-09-09T11:04:16Z,"Hi @thjaeckle, applogies for the late response - I was on a vacation last few days and many thanks for the quick reaction and fix!","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4OTQ4OTU0NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/791,https://api.github.com/repos/eclipse-ditto/ditto/issues/791,ditto,694049021,791,Provide Grafana Integration for Visualisation of values,JulianFeinauer,17098762,Julian,,OPEN,2020-09-05T09:51:56Z,2022-10-28T10:41:49Z,"In some use situations we just want to provide some dashboards about our twins (or only a specific twin). Grafana is a great tool for exactly that purpose but right now there exists no way how to integrate both systems with each other. 

One simple Idea I had is to provide a ""bridge"" between Grafana and Ditto by using the SimpleJson Plugin that is already available by Grafana (https://grafana.com/grafana/plugins/grafana-simple-json-datasource).

If one runs Grafana with OAuth / Keycloak auth one could even pass the access token to Ditto directly and ensure complete end-to-end security for all values.

WDYT?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/791/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/791,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4ODI2OTExNg==,ditto,688269116,791,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-09-07T11:38:41Z,2020-09-07T11:38:41Z,"I don't see how the SimpleJson plugin should work - as it states in the docs:
> Your backend needs to implement 4 urls:
> `/` should return 200 ok. Used for ""Test connection"" on the datasource config page.
`/search` used by the find metric options on the query tab in panels.
`/query` should return metrics based on input.
`/annotations` should return annotations.

Maybe you could add a mapping ""magic"" to nginx sitting in front of Ditto providing these APIs, but I don't see Ditto providing APIs for Grafana specific plugin.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4ODI2OTExNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/791,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4ODI3MDQ1Nw==,ditto,688270457,791,NA,JulianFeinauer,17098762,Julian,,NA,2020-09-07T11:41:30Z,2020-09-07T11:41:30Z,"Sorry, if my suggestion was not clear enough. But indeed, i would not change Ditto.
My Idea was to have a little ""Bridge"" Server running between Grafana and Ditto (I already have a little stub implementation running).
The Bridge could be behind the same NGINX or not. But if Grafana and Ditto would use the same Oatuh provider the Bridge would get the Oauth Access token which it could again pass to Ditto so we could use the straightforward auth approach.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4ODI3MDQ1Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/791,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4ODI3OTA2MQ==,ditto,688279061,791,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-09-07T11:59:48Z,2020-09-07T11:59:48Z,"Ah, ok. I did overread that :)
Yes, that should work.

Would the bridge than subscribe to events and build a little history itself? As I undestood the SimpleJson plugin the response is already a timeseries.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY4ODI3OTA2MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/792,https://api.github.com/repos/eclipse-ditto/ditto/issues/792,ditto,694127040,792,Make custom acknowledgement labels unique for each subscriber,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,CLOSED,2020-09-05T17:06:08Z,2020-10-28T15:30:23Z,"As a follow up of #611, #661 and #757, a uniqueness constraint shall be imposed on acknowledgement labels each subscriber (websocket or connection) may issue. This is to prevent racing in fulfillment of acknowledgement requests and to detect misconfiguration early.

- Require each subscriber to declare a list of acknowledgement labels it may issue.
- Prevent subscribers to send acknowledgements whose labels do not match any in the declared list.
- Add a distributed data to check for global uniqueness at subscription time.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/792/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/801,https://api.github.com/repos/eclipse-ditto/ditto/issues/801,ditto,700890472,801,Putting _metadata while creating a Thing does not work,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2020-09-14T08:28:19Z,2020-09-22T07:28:16Z,"When creating a thing, the ""put-metadata"" is not considered in order to put metadata.
This only works when updating an already existing thing.

To reproduce:

# Create Thing via HTTP

```
PUT https://ditto.eclipse.org/api/2/things/org.eclipse.ditto:metadata-test-2
Header:
put-metadata: [{""key"": ""*/creator"", ""value"": ""TJ the great""}]
```

# Retrieve metadata

```
GET https://ditto.eclipse.org/api/2/things/org.eclipse.ditto:metadata-test-2?fields=thingId,attributes,_metadata
```

## Result

```json
{
    ""thingId"": ""org.eclipse.ditto:metadata-test-2"",
    ""attributes"": {
        ""foo"": 42
    }
```

## Expected Result

```json
{
    ""thingId"": ""org.eclipse.ditto:metadata-test-2"",
    ""attributes"": {
        ""foo"": 42
    },
    ""_metadata"": {
        ""thingId"": {
            ""creator"": ""TJ the great""
        },
        ""policyId"": {
            ""creator"": ""TJ the great""
        },
        ""attributes"": {
            ""foo"": {
                ""creator"": ""TJ the great""
            }
        }
    }
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/801/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/801,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5NjA1MjExMg==,ditto,696052112,801,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-09-21T11:19:13Z,2020-09-21T11:19:13Z,"Also observed behavior which is still not as desired:

When updating e.g. only a single attribute ""x"" of a Thing and specifying e.g. `""put-metadata""` to apply to put a metadata to all affected leaves with `""key`"": `""*/foo""`

Not only the attibute ""x"" is updated with that new ""foo"" metadata, but all JSON leaves in the existing Thing, also ""thingId"", etc.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5NjA1MjExMg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/801,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5NjU1NTU2Ng==,ditto,696555566,801,NA,jufickel-b,17162397,Juergen Fickel,,NA,2020-09-22T07:28:16Z,2020-09-22T07:28:16Z,Fixed with PR https://github.com/eclipse/ditto/pull/813,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5NjU1NTU2Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/805,https://api.github.com/repos/eclipse-ditto/ditto/issues/805,ditto,702720477,805,Since 1.2.0 json responses from http api messages are escaped,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,CLOSED,2020-09-16T12:24:35Z,2020-10-15T14:39:04Z,"I've updated ditto 1.1.x to 1.2.1 and since then I'm observing json responses of ditto messages being escaped where they were not before the update.

I've a micro service which is reachable through dittos messaging API via HTTP calls using the WebSocket API. The service answers the calls with a JSON object. The object is stringyfied before it's returned as a response. A `'content-type': 'application/json'` is provided with the response.

```
POST /api/2/things/test:3AF63B05432A65C32A/features/Lamp/inbox/messages/unit
``` 

Before the update the response would just be a stringyfied JSON string, since 1.2 it's escaped.

```
# Before 1.2
{""feature"":""Lamp"",""property"":""active"",""measurementUnit"":""state""}

# Since 1.2
""{\""feature\"":\""Lamp\"",\""property\"":\""active\"",\""measurementUnit\"":\""state\""}""
```

I've not tested it with other content types than application/json.

EDIT: I've now downgraded from 1.2.1 to 1.1.5 and can verify that the behavior returned back to normal / that this change is introduced somewhere in 1.2 or 1.2.1.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/805/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/805,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5NDIyODU4NA==,ditto,694228584,805,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-09-17T13:21:22Z,2020-09-17T13:21:22Z,"We can confirm that this is a bug.
The fix is part of PR #809 
We expect to do a Ditto 1.3.0 release in the upcoming week(s) in order to get a fix out soon.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5NDIyODU4NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/805,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5NTk4NzkyOQ==,ditto,695987929,805,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2020-09-21T08:55:02Z,2020-09-21T08:55:02Z,"Just in case this takes longer than this week I'd actually expect a patch release 1.2.2 since this is a breaking change which is blocking us from upgrading to 1.2.x entirely.

Since this problem did not get caught earlier do you know if it's rather unusual how we use ditto protocol messages in micro services connected through websockets? @thjaeckle ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5NTk4NzkyOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/805,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5NTk5Njg4MA==,ditto,695996880,805,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-09-21T09:14:52Z,2020-09-21T09:14:52Z,"> I'd actually expect a patch release 1.2.2 since this is a breaking change which is blocking us from upgrading to 1.2.x entirely.

There won't be a backport of the bugfix to 1.2 as this would cause too much overhead and merge effort.

> Since this problem did not get caught earlier do you know if it's rather unusual how we use ditto protocol messages in micro services connected through websockets?

It's a quite advanced ""pattern"" which is not used too widely yet.
Please also keep in mind that a commercial offering might bring a bugfix sooner into production than the fix being available in a public Ditto release.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5NTk5Njg4MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/805,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5NjA4NTAwMg==,ditto,696085002,805,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-09-21T12:34:40Z,2020-09-21T12:34:40Z,Fixed by #809,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5NjA4NTAwMg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/805,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwMjE1MTkwMA==,ditto,702151900,805,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2020-10-01T13:54:02Z,2020-10-01T13:54:02Z,"@thjaeckle after the upgrade to 1.3 today, I'm still facing this problem. The response is still escaped. I'm not yet sure why and have to take a deeper look to give you even more information.

Our websocket connected service is sending it's response with a `""content-type"": ""application/json""` header.

Is it possible that something changed in the way that messages and responses are processed, that has to be configured now and differs from the implicit default behavior of ditto < 1.2? In 1.2 and 1.3 a lot changed in the area of messages, so do I have to use special headers or anything now?

Also what else could help you debug this?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwMjE1MTkwMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/805,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwMjIwNjAyOQ==,ditto,702206029,805,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-10-01T15:15:15Z,2020-10-01T15:15:15Z,I'll try to reproduce on Monday when I'm back in the office.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwMjIwNjAyOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/805,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwMzU0MTgxOQ==,ditto,703541819,805,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-10-05T10:22:32Z,2020-10-05T10:22:32Z,"Ok, just tried the ""happy path"" on the Ditto Sandbox:

### Subscribed to WS for messages

* open https://www.websocket.org/echo.html
* connect to `wss://ditto:ditto@ditto.eclipse.org/ws/2`
* send message `START-SEND-MESSAGES`

### HTTP request
```
POST https://ditto:ditto@ditto.eclipse.org/api/2/things/org.eclipse.ditto:test-message-response/inbox/messages/hello?timeout=1m
```
Headers:
* Content-Type: application/json

Body:
```json
{
    ""json"": ""value""
}
```

### Receive message in WS session

```json
{
	""topic"": ""org.eclipse.ditto/test-message-response/things/live/messages/hello"",
	""headers"": {
		""x-ditto-pre-authenticated"": ""nginx:ditto"",
		""correlation-id"": ""2a84dba5-df72-48d9-86e6-2d16910ed38e"",
		""x-forwarded-for"": ""194.39.218.10"",
		""version"": 2,
		""timeout"": ""1m"",
		""accept"": ""*/*"",
		""authorization"": ""Basic ZGl0dG86ZGl0dG8="",
		""x-real-ip"": ""194.39.218.10"",
		""x-forwarded-user"": ""ditto"",
		""response-required"": true,
		""ditto-originator"": ""nginx:ditto"",
		""host"": ""ditto.eclipse.org"",
		""content-type"": ""application/json"",
		""accept-encoding"": ""gzip, deflate, br"",
		""timestamp"": ""2020-10-05T12:09:03.960541112+02:00"",
		""user-agent"": ""PostmanRuntime/7.26.5""
	},
	""path"": ""/inbox/messages/hello"",
	""value"": {
		""json"": ""value""
	}
}
```

### Answer via WS message

```json
{
	""topic"": ""org.eclipse.ditto/test-message-response/things/live/messages/hello"",
	""headers"": {
		""correlation-id"": ""2a84dba5-df72-48d9-86e6-2d16910ed38e"",
		""version"": 2,
		""content-type"": ""application/json""
	},
	""path"": ""/inbox/messages/hello"",
	""value"": {
		""my response"": ""is this""
	},
	""status"": 200
}
```

### Received HTTP response

Headers:
* Content-Type: application/json
* correlation-id: 2a84dba5-df72-48d9-86e6-2d16910ed38e
* ...

Body:
```json
{
    ""my response"": ""is this""
}
```

## Unhappy path

The only way I can reproduce is by sending an escaped JSON as ""value"":

```json
{
	""topic"": ""org.eclipse.ditto/test-message-response/things/live/messages/hello"",
	""headers"": {
		""correlation-id"": ""239b383f-fc09-48e1-86e2-70477fc71e88"",
		""version"": 2,
		""content-type"": ""application/json""
	},
	""path"": ""/inbox/messages/hello"",
	""value"": ""\""my response\"": \""is this\"""",
	""status"": 200
}
```

This leads - as expected - to the HTTP response:
```json
""\""my response\"": \""is this\""""
```

@w4tsn could you re-check what you are sending as message response? Maybe there were changes in Ditto which now handle this ""correctly"" and cause the escaped JSON string - but more as a bug of an old Ditto version which is fixed since 1.2.0.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwMzU0MTgxOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/805,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwOTM2ODYyOQ==,ditto,709368629,805,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2020-10-15T14:35:24Z,2020-10-15T14:35:24Z,"@thjaeckle as you said the problem was that we adopted a bug while working with ditto < 1.2.0. For some reason we changed responses from plain JSON to it's unescaped stringified representation a while ago. Since the content-type was correct and ditto did nothing special with the response it worked. Now it does escape string type responses which is fair, but breaking with our micro-services. After changing back to plain JSON responses everything is fine now.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwOTM2ODYyOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/805,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwOTM3MDkyMQ==,ditto,709370921,805,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-10-15T14:39:03Z,2020-10-15T14:39:03Z,"Ok, thx for following up on this 👍 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwOTM3MDkyMQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/814,https://api.github.com/repos/eclipse-ditto/ditto/issues/814,ditto,706185238,814,Sever Sent Event ( question),Geonjae-Joo,62494715,,,CLOSED,2020-09-22T08:37:26Z,2020-09-22T13:20:14Z,"I try to do SSE.
No idea what is wrong here. anyone help me out please? 
I deployed with helm. It seems there's a problem with CORS but I dont know how to fix it.

![image](https://user-images.githubusercontent.com/62494715/93860192-a98f0480-fcf9-11ea-8371-e5676ae5ae64.png)

![image](https://user-images.githubusercontent.com/62494715/93860903-aea08380-fcfa-11ea-943f-7eac56e2b831.png)


![image](https://user-images.githubusercontent.com/62494715/93860377-fffc4300-fcf9-11ea-939f-0ce28fcf4748.png)

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/814/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/814,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5NjU5NDI1NQ==,ditto,696594255,814,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-09-22T08:55:32Z,2020-09-22T08:55:32Z,"As the chrome error message states:
It seems that it is not allowed to return `Access-Control-Allow-Origin: *` in combination with using an `EventSource` containing `withCredentials: true`.

Ditto's `CorsEnablingDirective` sets this wildcard cross-origin-header.
I suggest that you disable the Ditto-built-in CORS header addition by configuring the gateway's env var `ENABLE_CORS` (see https://github.com/eclipse/ditto/blob/master/services/gateway/starter/src/main/resources/gateway.conf#L30 ) to false and to add the CORS headers e.g. in an nginx in front of Ditto where you don't set the wildcard `*` but use the requests.

In nginx you can do it like in this example: https://gist.github.com/alexjs/4165271

That uses the `$http_origin` to put into the `Access-Control-Allow-Origin` instead of the wildcard:
```
...
add_header 'Access-Control-Allow-Origin' ""$http_origin"";
add_header 'Access-Control-Allow-Credentials' 'true';
add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
...
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5NjU5NDI1NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/814,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5NjcxNjc5OA==,ditto,696716798,814,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-09-22T13:20:14Z,2020-09-22T13:20:14Z,"Will be improved by PR #816 
The suggested behavior (which can also be done in nginx) will then be done by Ditto itself.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5NjcxNjc5OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/818,https://api.github.com/repos/eclipse-ditto/ditto/issues/818,ditto,708183653,818,How do I filter by key values if I do not know the exact spelling of the key?,oscarfh,3311764,oscarfh,,CLOSED,2020-09-24T13:42:27Z,2020-09-25T06:14:53Z,"In [the search API](https://www.eclipse.org/ditto/http-api-doc.html?urls.primaryName=Ditto%20API%20v2#/Things-Search/get_search_things), I read

> The search is case sensitive. In case you don't know how exactly the spelling of the namespace, name, attribute, feature etc. is, use the like notation for filtering

that leads me to think that I can do something like this

`eq(like(attributes/location.*),""kitchen"")`

To retrieve all things in which there is an attribute that starts with `location` and has a value `kitchen`.

Is my interpretation correct? If yes, how can I build such a query? I am getting 400's errors for all alternatives I am trying.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/818/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/818,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5ODc0MjY5MA==,ditto,698742690,818,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-09-25T06:14:38Z,2020-09-25T06:14:38Z,"Sorry, that is currently not possible, you have to know the attribute names.
`like` is only usable for values.
Also, [the RQL syntax](https://github.com/persvr/rql) does not even provide the possibility to do this AFAIK.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDY5ODc0MjY5MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/822,https://api.github.com/repos/eclipse-ditto/ditto/issues/822,ditto,709874005,822,SSE thing search ,Geonjae-Joo,62494715,,,CLOSED,2020-09-28T01:59:50Z,2020-10-23T09:28:33Z,"I changed nginx-cors.conf  Acess-Control-Allow-Origin wild card to $http_origin in order to perform SSE, and It worked successfully.

but when I try to SSE search/things, the CORS issue pops up again.
anyone knows how to fix it?

![image](https://user-images.githubusercontent.com/62494715/94382947-8e007f80-0179-11eb-86cf-4fc51f112d4c.png)
![image](https://user-images.githubusercontent.com/62494715/94382970-a4a6d680-0179-11eb-87ed-6fabb4ec66d9.png)
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/822/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/822,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwMDUyMTA1MA==,ditto,700521050,822,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-09-29T07:57:22Z,2020-09-29T07:57:22Z,"Can you inspect via browser which HTTP Headers are sent back on the SSE search call?
CORS should work for SSE search as well as for other HTTP calls.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwMDUyMTA1MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/822,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwMDY5MjA3Mg==,ditto,700692072,822,NA,Geonjae-Joo,62494715,,,NA,2020-09-29T13:11:11Z,2020-09-29T13:11:11Z,"@thjaeckle oh, thank you for the reply, i will check on that right after vacation. It's a long holiday week in South Korea :)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwMDY5MjA3Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/822,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwMzM1NjUzMQ==,ditto,703356531,822,NA,Geonjae-Joo,62494715,,,NA,2020-10-05T01:53:44Z,2020-10-05T01:53:44Z,"@thjaeckle 
this is my http header for normal SSE:
![image](https://user-images.githubusercontent.com/62494715/95033345-d29b9600-06f8-11eb-84a0-ec1e7bfa373a.png)

and this is http header for thing search SSE:
![image](https://user-images.githubusercontent.com/62494715/95033415-227a5d00-06f9-11eb-83f5-2a9090686079.png)

I still have no idea what is wrong here. maybe the content-type it responses?
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwMzM1NjUzMQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/822,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwMzUyODQzMg==,ditto,703528432,822,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-10-05T09:55:15Z,2020-10-05T09:55:15Z,"I think you found a bug - I can't successfully create a SSE for search, regardless of the CORS headers.
I even wonder why you run into the CORS problem as Ditto should report a HTTP status 501.

I created PR #831 which should fix that ..","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwMzUyODQzMg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/822,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwMzU2NjAzNw==,ditto,703566037,822,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-10-05T11:16:01Z,2020-10-05T11:16:01Z,"The `Content-Type` is another potential problem - but as long as the SSE for search is not working at all, I can't repdroduce it.
Probably the `nginx-cors.conf` has to be adjusted that it doesn't statically set the content-type to `text/plain` - at least that's my feeling.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwMzU2NjAzNw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/822,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwMzk3MDE3Mg==,ditto,703970172,822,NA,Geonjae-Joo,62494715,,,NA,2020-10-06T01:06:31Z,2020-10-06T01:06:31Z,"Yeap! That's my feeling too.
Thanks for your help :)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwMzk3MDE3Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/823,https://api.github.com/repos/eclipse-ditto/ditto/issues/823,ditto,709993466,823,Metadata isn't yet persisted correctly for event journal entries,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2020-09-28T06:51:14Z,2020-09-30T14:40:37Z,"Current, when putting metadata, the added metadata is not persisted in the Akka event journal.

It is only applied to the in-memory state of the `thing`. 
When the snapshot mechanism of our persistence stores a snapshot, the metadata contained in the thing is persisted in the snapshot. 

However, if no snapshot is done and e.g. Ditto shuts down, the in-memory metadata information is lost and can't be recovered.

The only correct way to solve that is to add the `metadata` to the persisted event (e.g. similar to `_timestamp` of the event).
By doing that, the ThingPersistenceActor can access this information when replaying events and apply it to the in-memory state.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/823/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/829,https://api.github.com/repos/eclipse-ditto/ditto/issues/829,ditto,711916741,829,Metadata is not deleted when thing parts are deleted,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,CLOSED,2020-09-30T12:47:16Z,2022-08-15T07:06:01Z,"To reproduce:
- Create a feature property or attribute.
- Put metadata for the feature property or attribute.
- Delete the feature property or attribute.

Expected behavior:
- Metadata of the feature property or attribute is deleted.

Actual behavior:
- Metadata of the feature property or attribute is not deleted.

References: #680 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/829/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/832,https://api.github.com/repos/eclipse-ditto/ditto/issues/832,ditto,714739804,832,The Ditto server crashes while running,nisus91,13584173,,,CLOSED,2020-10-05T11:02:18Z,2020-11-02T12:13:01Z,"I'm running the ditto on docker.
My ditto are using kafka connectivity for twin events. 
The things in ditto are updated every 10 seconds.
BTW, It leaves the following logs.
The connectivity and gateway module of ditto exited with code 137.
And after that, the response about put request returns http return code 408.
Please tell me why the server is down. 
===================================================================
things-search_1  | 2020-10-05 19:41:32,180 INFO  [] o.e.d.s.t.p.w.s.EnforcementFlow  - Updating search index of <18> things
things-search_1  | 2020-10-05 19:41:32,246 INFO  [] o.e.d.s.t.p.w.s.EnforcementFlow  - Got SudoRetrieveThingResponse <18> times
**mongodb_1        | 2020-10-05T19:41:32.580+0900 I NETWORK  [conn103] end connection 172.18.0.9:38488 (107 connections now open)
mongodb_1        | 2020-10-05T19:41:32.580+0900 I NETWORK  [conn10] end connection 172.18.0.9:38072 (105 connections now open)
mongodb_1        | 2020-10-05T19:41:32.581+0900 I NETWORK  [conn21] end connection 172.18.0.9:38094 (103 connections now open)
mongodb_1        | 2020-10-05T19:41:32.581+0900 I NETWORK  [conn108] end connection 172.18.0.9:40034 (102 connections now open)
mongodb_1        | 2020-10-05T19:41:32.581+0900 I NETWORK  [conn13] end connection 172.18.0.9:38078 (101 connections now open)
mongodb_1        | 2020-10-05T19:41:32.580+0900 I NETWORK  [conn14] end connection 172.18.0.9:38080 (106 connections now open)
mongodb_1        | 2020-10-05T19:41:32.583+0900 I NETWORK  [conn11] end connection 172.18.0.9:38074 (100 connections now open)
mongodb_1        | 2020-10-05T19:41:32.583+0900 I NETWORK  [conn22] end connection 172.18.0.9:38096 (99 connections now open)
mongodb_1        | 2020-10-05T19:41:32.583+0900 I NETWORK  [conn23] end connection 172.18.0.9:38098 (98 connections now open)
mongodb_1        | 2020-10-05T19:41:32.583+0900 I NETWORK  [conn12] end connection 172.18.0.9:38076 (97 connections now open)
mongodb_1        | 2020-10-05T19:41:32.580+0900 I NETWORK  [conn20] end connection 172.18.0.9:38092 (104 connections now open)**
nginx_1          | 128.134.187.177 - carpediem [05/Oct/2020:19:41:32 +0900] ""GET /ws/2/carpediem.test.d101.h115 HTTP/1.1"" 101 100 ""-"" ""Go-http-client/1.1""
**root_connectivity_1 exited with code 137
root_gateway_1 exited with code 137**
things-search_1  | 2020-10-05 19:41:33,343 INFO  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/user/thingsSearchRoot/searchUpdaterRoot/StreamSupervisor-15) - [SearchUpdaterStream/BulkWriteResult] Element: Acknowledged: Success[ack=true,errors=0,matched=18,upserts=0,inserted=0,modified=18,deleted=0]
things-search_1  | 2020-10-05 19:41:36,285 WARN  [] a.c.Cluster(akka://ditto-cluster) akka.cluster.Cluster(akka://ditto-cluster) - Cluster Node [akka://ditto-cluster@172.18.0.5:2551] - Marking node(s) as UNREACHABLE [Member(address = akka://ditto-cluster@172.18.0.9:2551, status = Up)]. Node roles [things-search, blocked-namespaces-aware, thing-event-aware, dc-default]
concierge_1      | 2020-10-05 19:41:36,674 WARN  [] a.c.Cluster(akka://ditto-cluster) akka.cluster.Cluster(akka://ditto-cluster) - Cluster Node [akka://ditto-cluster@172.18.0.7:2551] - Marking node(s) as UNREACHABLE [Member(address = akka://ditto-cluster@172.18.0.9:2551, status = Up)]. Node roles [concierge, blocked-namespaces-aware, live-signal-aware, dc-default]
things_1         | 2020-10-05 19:41:37,208 WARN  [] a.c.Cluster(akka://ditto-cluster) akka.cluster.Cluster(akka://ditto-cluster) - Cluster Node [akka://ditto-cluster@172.18.0.6:2551] - Marking node(s) as UNREACHABLE [Member(address = akka://ditto-cluster@172.18.0.9:2551, status = Up)]. Node roles [things, thing-event-aware, dc-default]
things-search_1  | 2020-10-05 19:41:37,282 WARN  [] a.c.Cluster(akka://ditto-cluster) akka.cluster.Cluster(akka://ditto-cluster) - Cluster Node [akka://ditto-cluster@172.18.0.5:2551] - Marking node(s) as UNREACHABLE [Member(address = akka://ditto-cluster@172.18.0.8:2551, status = Up)]. Node roles [things-search, blocked-namespaces-aware, thing-event-aware, dc-default]
policies_1       | 2020-10-05 19:41:37,477 WARN  [] a.c.Cluster(akka://ditto-cluster) akka.cluster.Cluster(akka://ditto-cluster) - Cluster Node [akka://ditto-cluster@172.18.0.2:2551] - Marking node(s) as UNREACHABLE [Member(address = akka://ditto-cluster@172.18.0.8:2551, status = Up), Member(address = akka://ditto-cluster@172.18.0.9:2551, status = Up)]. Node roles [policies, dc-default]
concierge_1      | 2020-10-05 19:41:37,672 WARN  [] a.c.Cluster(akka://ditto-cluster) akka.cluster.Cluster(akka://ditto-cluster) - Cluster Node [akka://ditto-cluster@172.18.0.7:2551] - Marking node(s) as UNREACHABLE [Member(address = akka://ditto-cluster@172.18.0.8:2551, status = Up)]. Node roles [concierge, blocked-namespaces-aware, live-signal-aware, dc-default]
things_1         | 2020-10-05 19:41:38,198 WARN  [] a.c.Cluster(akka://ditto-cluster) akka.cluster.Cluster(akka://ditto-cluster) - Cluster Node [akka://ditto-cluster@172.18.0.6:2551] - Marking node(s) as UNREACHABLE [Member(address = akka://ditto-cluster@172.18.0.8:2551, status = Up)]. Node roles [things, thing-event-aware, dc-default]
things-search_1  | 2020-10-05 19:41:38,635 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.9:2551], control stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
things-search_1  | 2020-10-05 19:41:38,638 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
things-search_1  | 2020-10-05 19:41:38,642 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.9:2551], message stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
things-search_1  | 2020-10-05 19:41:38,642 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
things_1         | 2020-10-05 19:41:38,700 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.9:2551], control stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
things_1         | 2020-10-05 19:41:38,702 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
policies_1       | 2020-10-05 19:41:38,720 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.9:2551], control stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
concierge_1      | 2020-10-05 19:41:38,721 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.9:2551], control stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
concierge_1      | 2020-10-05 19:41:38,722 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
policies_1       | 2020-10-05 19:41:38,722 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
concierge_1      | 2020-10-05 19:41:38,872 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.8:2551], control stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
concierge_1      | 2020-10-05 19:41:38,873 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
things-search_1  | 2020-10-05 19:41:38,883 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.8:2551], message stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
things-search_1  | 2020-10-05 19:41:38,883 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
things_1         | 2020-10-05 19:41:38,888 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.8:2551], control stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
things_1         | 2020-10-05 19:41:38,888 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
things_1         | 2020-10-05 19:41:38,917 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.8:2551], message stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
things_1         | 2020-10-05 19:41:38,917 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
things-search_1  | 2020-10-05 19:41:38,922 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.8:2551], control stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
things-search_1  | 2020-10-05 19:41:38,923 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
concierge_1      | 2020-10-05 19:41:38,961 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.8:2551], message stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
concierge_1      | 2020-10-05 19:41:38,962 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
policies_1       | 2020-10-05 19:41:38,967 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.8:2551], control stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
policies_1       | 2020-10-05 19:41:38,968 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
things_1         | 2020-10-05 19:41:39,217 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.9:2551], message stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
things_1         | 2020-10-05 19:41:39,217 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
concierge_1      | 2020-10-05 19:41:39,461 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.9:2551], message stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
concierge_1      | 2020-10-05 19:41:39,462 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
policies_1       | 2020-10-05 19:41:39,496 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.8:2551], message stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
policies_1       | 2020-10-05 19:41:39,497 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
policies_1       | 2020-10-05 19:41:41,566 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.9:2551], message stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
policies_1       | 2020-10-05 19:41:41,566 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
things-search_1  | 2020-10-05 19:41:44,703 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.9:2551], message stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
things-search_1  | 2020-10-05 19:41:44,703 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
things-search_1  | 2020-10-05 19:41:44,753 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.9:2551], control stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
things-search_1  | 2020-10-05 19:41:44,753 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
things_1         | 2020-10-05 19:41:44,838 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.9:2551], control stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
things_1         | 2020-10-05 19:41:44,838 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
policies_1       | 2020-10-05 19:41:44,847 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.9:2551], control stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
policies_1       | 2020-10-05 19:41:44,847 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
concierge_1      | 2020-10-05 19:41:44,852 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.9:2551], control stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
concierge_1      | 2020-10-05 19:41:44,853 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
things_1         | 2020-10-05 19:41:44,950 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.8:2551], control stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
things_1         | 2020-10-05 19:41:44,950 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
concierge_1      | 2020-10-05 19:41:45,001 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.8:2551], control stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
concierge_1      | 2020-10-05 19:41:45,002 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
things-search_1  | 2020-10-05 19:41:45,012 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.8:2551], message stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
things-search_1  | 2020-10-05 19:41:45,013 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
concierge_1      | 2020-10-05 19:41:45,032 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.8:2551], message stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
concierge_1      | 2020-10-05 19:41:45,032 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
policies_1       | 2020-10-05 19:41:45,047 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.8:2551], control stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
policies_1       | 2020-10-05 19:41:45,048 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
things_1         | 2020-10-05 19:41:45,057 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.8:2551], message stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
things_1         | 2020-10-05 19:41:45,058 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
things-search_1  | 2020-10-05 19:41:45,063 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.8:2551], control stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
things-search_1  | 2020-10-05 19:41:45,063 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
things_1         | 2020-10-05 19:41:45,287 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.9:2551], message stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
things_1         | 2020-10-05 19:41:45,287 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
things-search_1  | 2020-10-05 19:41:45,303 INFO  [] c.a.s.DowningActor akka://ditto-cluster@172.18.0.5:2551/system/cluster/core/daemon/downingProvider - Network partition detected. I am in the surviving partition, but I am not the responsible node, so nothing needs to be done
policies_1       | 2020-10-05 19:41:45,328 WARN  [] c.a.s.DowningActor akka://ditto-cluster@172.18.0.2:2551/system/cluster/core/daemon/downingProvider - Network partition detected. I am the responsible node in the surviving partition --> terminating unreachable nodes Set(Member(address = akka://ditto-cluster@172.18.0.9:2551, status = Up), Member(address = akka://ditto-cluster@172.18.0.8:2551, status = Up))
policies_1       | 2020-10-05 19:41:45,329 INFO  [] a.c.Cluster(akka://ditto-cluster) akka.cluster.Cluster(akka://ditto-cluster) - Cluster Node [akka://ditto-cluster@172.18.0.2:2551] - Marking unreachable node [akka://ditto-cluster@172.18.0.9:2551] as [Down]
policies_1       | 2020-10-05 19:41:45,330 INFO  [] a.c.Cluster(akka://ditto-cluster) akka.cluster.Cluster(akka://ditto-cluster) - Cluster Node [akka://ditto-cluster@172.18.0.2:2551] - Marking unreachable node [akka://ditto-cluster@172.18.0.8:2551] as [Down]
concierge_1      | 2020-10-05 19:41:45,592 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.9:2551], message stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
concierge_1      | 2020-10-05 19:41:45,592 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
policies_1       | 2020-10-05 19:41:45,617 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.8:2551], message stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
policies_1       | 2020-10-05 19:41:45,618 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
concierge_1      | 2020-10-05 19:41:45,692 INFO  [] c.a.s.DowningActor akka://ditto-cluster@172.18.0.7:2551/system/cluster/core/daemon/downingProvider - Network partition detected. I am in the surviving partition, but I am not the responsible node, so nothing needs to be done
things_1         | 2020-10-05 19:41:46,058 INFO  [] c.a.s.DowningActor akka://ditto-cluster@172.18.0.6:2551/system/cluster/core/daemon/downingProvider - Network partition detected. I am in the surviving partition, but I am not the responsible node, so nothing needs to be done
policies_1       | 2020-10-05 19:41:47,480 INFO  [] a.c.Cluster(akka://ditto-cluster) akka.cluster.Cluster(akka://ditto-cluster) - Cluster Node [akka://ditto-cluster@172.18.0.2:2551] - Leader is removing unreachable node [akka://ditto-cluster@172.18.0.9:2551]
policies_1       | 2020-10-05 19:41:47,481 INFO  [] a.c.Cluster(akka://ditto-cluster) akka.cluster.Cluster(akka://ditto-cluster) - Cluster Node [akka://ditto-cluster@172.18.0.2:2551] - Leader is removing unreachable node [akka://ditto-cluster@172.18.0.8:2551]
policies_1       | 2020-10-05 19:41:47,482 INFO  [] a.c.s.ClusterSingletonManager akka://ditto-cluster@172.18.0.2:2551/system/sharding/policyCoordinator - Member removed [akka://ditto-cluster@172.18.0.8:2551]
policies_1       | 2020-10-05 19:41:47,483 WARN  [] a.r.a.Association(akka://ditto-cluster) akka.remote.artery.Association(akka://ditto-cluster) - Association to [akka://ditto-cluster@172.18.0.8:2551] with UID [-8733449169459228014] is irrecoverably failed. UID is now quarantined and all messages to this UID will be delivered to dead letters. Remote ActorSystem must be restarted to recover from this situation. Reason: Cluster member removed, previous status [Down]
policies_1       | 2020-10-05 19:41:47,484 INFO  [] a.c.s.ClusterSingletonManager akka://ditto-cluster@172.18.0.2:2551/system/sharding/policyCoordinator - Member removed [akka://ditto-cluster@172.18.0.9:2551]
policies_1       | 2020-10-05 19:41:47,488 WARN  [] a.r.a.Association(akka://ditto-cluster) akka.remote.artery.Association(akka://ditto-cluster) - Association to [akka://ditto-cluster@172.18.0.9:2551] with UID [-3851811366792709145] is irrecoverably failed. UID is now quarantined and all messages to this UID will be delivered to dead letters. Remote ActorSystem must be restarted to recover from this situation. Reason: Cluster member removed, previous status [Down]
policies_1       | 2020-10-05 19:41:47,657 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.9:2551], message stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
policies_1       | 2020-10-05 19:41:47,657 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
things_1         | 2020-10-05 19:41:48,212 INFO  [] a.c.s.ClusterSingletonManager akka://ditto-cluster@172.18.0.6:2551/system/sharding/thingCoordinator - Member removed [akka://ditto-cluster@172.18.0.8:2551]
things_1         | 2020-10-05 19:41:48,212 INFO  [] a.c.s.ClusterSingletonManager akka://ditto-cluster@172.18.0.6:2551/system/sharding/thingCoordinator - Member removed [akka://ditto-cluster@172.18.0.9:2551]
things_1         | 2020-10-05 19:41:48,212 INFO  [] o.e.d.s.u.p.a.PubUpdater akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/pubUpdater1 - Removing subscribers on removed member <akka://ditto-cluster@172.18.0.8:2551>
things_1         | 2020-10-05 19:41:48,213 WARN  [] a.r.a.Association(akka://ditto-cluster) akka.remote.artery.Association(akka://ditto-cluster) - Association to [akka://ditto-cluster@172.18.0.8:2551] with UID [-8733449169459228014] is irrecoverably failed. UID is now quarantined and all messages to this UID will be delivered to dead letters. Remote ActorSystem must be restarted to recover from this situation. Reason: Cluster member removed, previous status [Down]
things_1         | 2020-10-05 19:41:48,216 INFO  [] o.e.d.s.u.p.a.PubUpdater akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/pubUpdater1 - Removing subscribers on removed member <akka://ditto-cluster@172.18.0.9:2551>
things_1         | 2020-10-05 19:41:48,224 WARN  [] a.r.a.Association(akka://ditto-cluster) akka.remote.artery.Association(akka://ditto-cluster) - Association to [akka://ditto-cluster@172.18.0.9:2551] with UID [-3851811366792709145] is irrecoverably failed. UID is now quarantined and all messages to this UID will be delivered to dead letters. Remote ActorSystem must be restarted to recover from this situation. Reason: Cluster member removed, previous status [Down]
things-search_1  | 2020-10-05 19:41:48,293 INFO  [] a.c.s.ClusterSingletonManager akka://ditto-cluster@172.18.0.5:2551/system/sharding/search-updaterCoordinator - Member removed [akka://ditto-cluster@172.18.0.8:2551]
things-search_1  | 2020-10-05 19:41:48,294 INFO  [] a.c.s.ClusterSingletonManager akka://ditto-cluster@172.18.0.5:2551/system/sharding/search-updaterCoordinator - Member removed [akka://ditto-cluster@172.18.0.9:2551]
things-search_1  | 2020-10-05 19:41:48,294 INFO  [] a.c.s.ClusterSingletonManager akka://ditto-cluster@172.18.0.5:2551/user/thingsSearchRoot/searchUpdaterRoot/newEventForwarder - Member removed [akka://ditto-cluster@172.18.0.8:2551]
things-search_1  | 2020-10-05 19:41:48,294 INFO  [] a.c.s.ClusterSingletonManager akka://ditto-cluster@172.18.0.5:2551/user/thingsSearchRoot/searchUpdaterRoot/newEventForwarder - Member removed [akka://ditto-cluster@172.18.0.9:2551]
things-search_1  | 2020-10-05 19:41:48,294 INFO  [] a.c.s.ClusterSingletonManager akka://ditto-cluster@172.18.0.5:2551/user/thingsSearchRoot/searchUpdaterRoot/backgroundSync - Member removed [akka://ditto-cluster@172.18.0.8:2551]
things-search_1  | 2020-10-05 19:41:48,294 INFO  [] a.c.s.ClusterSingletonManager akka://ditto-cluster@172.18.0.5:2551/user/thingsSearchRoot/searchUpdaterRoot/backgroundSync - Member removed [akka://ditto-cluster@172.18.0.9:2551]
things-search_1  | 2020-10-05 19:41:48,297 WARN  [] a.r.a.Association(akka://ditto-cluster) akka.remote.artery.Association(akka://ditto-cluster) - Association to [akka://ditto-cluster@172.18.0.8:2551] with UID [-8733449169459228014] is irrecoverably failed. UID is now quarantined and all messages to this UID will be delivered to dead letters. Remote ActorSystem must be restarted to recover from this situation. Reason: Cluster member removed, previous status [Down]
things-search_1  | 2020-10-05 19:41:48,307 WARN  [] a.r.a.Association(akka://ditto-cluster) akka.remote.artery.Association(akka://ditto-cluster) - Association to [akka://ditto-cluster@172.18.0.9:2551] with UID [-3851811366792709145] is irrecoverably failed. UID is now quarantined and all messages to this UID will be delivered to dead letters. Remote ActorSystem must be restarted to recover from this situation. Reason: Cluster member removed, previous status [Down]
concierge_1      | 2020-10-05 19:41:48,485 INFO  [] a.c.s.ClusterSingletonManager akka://ditto-cluster@172.18.0.7:2551/user/blockedNamespacesUpdater - Member removed [akka://ditto-cluster@172.18.0.8:2551]
concierge_1      | 2020-10-05 19:41:48,485 INFO  [] a.c.s.ClusterSingletonManager akka://ditto-cluster@172.18.0.7:2551/user/conciergeRoot/eventSnapshotCleanupCoordinator - Member removed [akka://ditto-cluster@172.18.0.8:2551]
concierge_1      | 2020-10-05 19:41:48,486 INFO  [] a.c.s.ClusterSingletonManager akka://ditto-cluster@172.18.0.7:2551/user/blockedNamespacesUpdater - Member removed [akka://ditto-cluster@172.18.0.9:2551]
concierge_1      | 2020-10-05 19:41:48,486 INFO  [] a.c.s.ClusterSingletonManager akka://ditto-cluster@172.18.0.7:2551/user/conciergeRoot/eventSnapshotCleanupCoordinator - Member removed [akka://ditto-cluster@172.18.0.9:2551]
concierge_1      | 2020-10-05 19:41:48,486 INFO  [] o.e.d.s.u.p.a.PubUpdater akka://ditto-cluster/user/conciergeRoot/live-signal-aware-pub-supervisor/pubUpdater1 - Removing subscribers on removed member <akka://ditto-cluster@172.18.0.8:2551>
concierge_1      | 2020-10-05 19:41:48,489 WARN  [] a.r.a.Association(akka://ditto-cluster) akka.remote.artery.Association(akka://ditto-cluster) - Association to [akka://ditto-cluster@172.18.0.8:2551] with UID [-8733449169459228014] is irrecoverably failed. UID is now quarantined and all messages to this UID will be delivered to dead letters. Remote ActorSystem must be restarted to recover from this situation. Reason: Cluster member removed, previous status [Down]
concierge_1      | 2020-10-05 19:41:48,494 INFO  [] o.e.d.s.u.p.a.PubUpdater akka://ditto-cluster/user/conciergeRoot/live-signal-aware-pub-supervisor/pubUpdater1 - Removing subscribers on removed member <akka://ditto-cluster@172.18.0.9:2551>
concierge_1      | 2020-10-05 19:41:48,498 WARN  [] a.r.a.Association(akka://ditto-cluster) akka.remote.artery.Association(akka://ditto-cluster) - Association to [akka://ditto-cluster@172.18.0.9:2551] with UID [-3851811366792709145] is irrecoverably failed. UID is now quarantined and all messages to this UID will be delivered to dead letters. Remote ActorSystem must be restarted to recover from this situation. Reason: Cluster member removed, previous status [Down]
policies_1       | 2020-10-05 19:41:50,509 INFO  [] a.r.RemoteActorRefProvider$RemoteDeadLetterActorRef akka://ditto-cluster/deadLetters - Message [akka.cluster.ClusterHeartbeatSender$Heartbeat] from Actor[akka://ditto-cluster/system/cluster/core/daemon/heartbeatSender#801408210] to Actor[akka://ditto-cluster/deadLetters] was not delivered. [3] dead letters encountered. If this is not an expected behavior, then [Actor[akka://ditto-cluster/deadLetters]] may have terminated unexpectedly, This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
policies_1       | 2020-10-05 19:41:50,511 INFO  [] a.r.RemoteActorRefProvider$RemoteDeadLetterActorRef akka://ditto-cluster/deadLetters - Message [akka.cluster.ClusterHeartbeatSender$Heartbeat] from Actor[akka://ditto-cluster/system/cluster/core/daemon/heartbeatSender#801408210] to Actor[akka://ditto-cluster/deadLetters] was not delivered. [4] dead letters encountered. If this is not an expected behavior, then [Actor[akka://ditto-cluster/deadLetters]] may have terminated unexpectedly, This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
policies_1       | 2020-10-05 19:41:50,511 INFO  [] a.r.RemoteActorRefProvider$RemoteDeadLetterActorRef akka://ditto-cluster/deadLetters - Message [akka.cluster.pubsub.DistributedPubSubMediator$Internal$Status] from Actor[akka://ditto-cluster/system/distributedPubSubMediator#-628875394] to Actor[akka://ditto-cluster/deadLetters] was not delivered. [5] dead letters encountered. If this is not an expected behavior, then [Actor[akka://ditto-cluster/deadLetters]] may have terminated unexpectedly, This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
policies_1       | 2020-10-05 19:41:50,512 INFO  [] a.r.RemoteActorRefProvider$RemoteDeadLetterActorRef akka://ditto-cluster/deadLetters - Message [akka.cluster.ClusterHeartbeatSender$Heartbeat] from Actor[akka://ditto-cluster/system/cluster/core/daemon/heartbeatSender#801408210] to Actor[akka://ditto-cluster/deadLetters] was not delivered. [6] dead letters encountered. If this is not an expected behavior, then [Actor[akka://ditto-cluster/deadLetters]] may have terminated unexpectedly, This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
policies_1       | 2020-10-05 19:41:50,512 INFO  [] a.r.RemoteActorRefProvider$RemoteDeadLetterActorRef akka://ditto-cluster/deadLetters - Message [akka.cluster.ClusterHeartbeatSender$Heartbeat] from Actor[akka://ditto-cluster/system/cluster/core/daemon/heartbeatSender#801408210] to Actor[akka://ditto-cluster/deadLetters] was not delivered. [7] dead letters encountered. If this is not an expected behavior, then [Actor[akka://ditto-cluster/deadLetters]] may have terminated unexpectedly, This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
policies_1       | 2020-10-05 19:41:50,512 INFO  [] a.r.RemoteActorRefProvider$RemoteDeadLetterActorRef akka://ditto-cluster/deadLetters - Message [akka.cluster.pubsub.DistributedPubSubMediator$Internal$Status] from Actor[akka://ditto-cluster/system/distributedPubSubMediator#-628875394] to Actor[akka://ditto-cluster/deadLetters] was not delivered. [8] dead letters encountered. If this is not an expected behavior, then [Actor[akka://ditto-cluster/deadLetters]] may have terminated unexpectedly, This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
policies_1       | 2020-10-05 19:41:50,513 INFO  [] a.r.RemoteActorRefProvider$RemoteDeadLetterActorRef akka://ditto-cluster/deadLetters - Message [akka.cluster.ClusterHeartbeatSender$Heartbeat] from Actor[akka://ditto-cluster/system/cluster/core/daemon/heartbeatSender#801408210] to Actor[akka://ditto-cluster/deadLetters] was not delivered. [9] dead letters encountered. If this is not an expected behavior, then [Actor[akka://ditto-cluster/deadLetters]] may have terminated unexpectedly, This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
policies_1       | 2020-10-05 19:41:50,513 INFO  [] a.r.RemoteActorRefProvider$RemoteDeadLetterActorRef akka://ditto-cluster/deadLetters - Message [akka.cluster.ClusterHeartbeatSender$Heartbeat] from Actor[akka://ditto-cluster/system/cluster/core/daemon/heartbeatSender#801408210] to Actor[akka://ditto-cluster/deadLetters] was not delivered. [10] dead letters encountered, no more dead letters will be logged. If this is not an expected behavior, then [Actor[akka://ditto-cluster/deadLetters]] may have terminated unexpectedly, This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
policies_1       | 2020-10-05 19:41:50,513 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.8:2551], message stream] Upstream failed, cause: Association$OutboundStreamStopQuarantinedSignal$:
policies_1       | 2020-10-05 19:41:50,514 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.9:2551], message stream] Upstream failed, cause: Association$OutboundStreamStopQuarantinedSignal$:
policies_1       | 2020-10-05 19:41:50,515 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.9:2551], control stream] Upstream failed, cause: Association$OutboundStreamStopQuarantinedSignal$:
policies_1       | 2020-10-05 19:41:50,516 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.8:2551], control stream] Upstream failed, cause: Association$OutboundStreamStopQuarantinedSignal$:
things-search_1  | 2020-10-05 19:41:50,802 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.9:2551], message stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
things-search_1  | 2020-10-05 19:41:50,803 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
things-search_1  | 2020-10-05 19:41:50,821 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.9:2551], control stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
things-search_1  | 2020-10-05 19:41:50,821 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
things_1         | 2020-10-05 19:41:50,947 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.9:2551], control stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
things_1         | 2020-10-05 19:41:50,948 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
concierge_1      | 2020-10-05 19:41:50,962 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.9:2551], control stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
concierge_1      | 2020-10-05 19:41:50,962 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.9:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
things_1         | 2020-10-05 19:41:51,007 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.8:2551], control stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
things_1         | 2020-10-05 19:41:51,008 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
concierge_1      | 2020-10-05 19:41:51,071 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.8:2551], control stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
concierge_1      | 2020-10-05 19:41:51,072 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
things-search_1  | 2020-10-05 19:41:51,122 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.8:2551], control stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
things-search_1  | 2020-10-05 19:41:51,123 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.8:2551], message stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
things-search_1  | 2020-10-05 19:41:51,123 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
things-search_1  | 2020-10-05 19:41:51,123 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
concierge_1      | 2020-10-05 19:41:51,171 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.8:2551], message stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
concierge_1      | 2020-10-05 19:41:51,172 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
things_1         | 2020-10-05 19:41:51,188 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.8:2551], message stream] Upstream failed, cause: StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired
things_1         | 2020-10-05 19:41:51,188 WARN  [] a.s.s.RestartWithBackoffFlow RestartWithBackoffFlow(akka://ditto-cluster) - Restarting graph due to failure. stack_trace:  (akka.stream.StreamTcpException: Tcp command [Connect(172.18.0.8:2551,None,List(),Some(5000 milliseconds),true)] failed because of akka.io.TcpOutgoingConnection$$anon$2: Connect timeout of Some(5000 milliseconds) expired)
things_1         | 2020-10-05 19:41:51,242 INFO  [] a.r.RemoteActorRefProvider$RemoteDeadLetterActorRef akka://ditto-cluster/deadLetters - Message [akka.cluster.ClusterHeartbeatSender$Heartbeat] from Actor[akka://ditto-cluster/system/cluster/core/daemon/heartbeatSender#-621419702] to Actor[akka://ditto-cluster/deadLetters] was not delivered. [6] dead letters encountered. If this is not an expected behavior, then [Actor[akka://ditto-cluster/deadLetters]] may have terminated unexpectedly, This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
things_1         | 2020-10-05 19:41:51,242 INFO  [] a.r.RemoteActorRefProvider$RemoteDeadLetterActorRef akka://ditto-cluster/deadLetters - Message [akka.cluster.ClusterHeartbeatSender$Heartbeat] from Actor[akka://ditto-cluster/system/cluster/core/daemon/heartbeatSender#-621419702] to Actor[akka://ditto-cluster/deadLetters] was not delivered. [7] dead letters encountered. If this is not an expected behavior, then [Actor[akka://ditto-cluster/deadLetters]] may have terminated unexpectedly, This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
things_1         | 2020-10-05 19:41:51,242 INFO  [] a.r.RemoteActorRefProvider$RemoteDeadLetterActorRef akka://ditto-cluster/deadLetters - Message [akka.cluster.ddata.Replicator$Internal$Status] from Actor[akka://ditto-cluster/user/thing-event-aware-replicator#1135649118] to Actor[akka://ditto-cluster/deadLetters] was not delivered. [8] dead letters encountered. If this is not an expected behavior, then [Actor[akka://ditto-cluster/deadLetters]] may have terminated unexpectedly, This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
things_1         | 2020-10-05 19:41:51,242 INFO  [] a.r.RemoteActorRefProvider$RemoteDeadLetterActorRef akka://ditto-cluster/deadLetters - Message [akka.cluster.pubsub.DistributedPubSubMediator$Internal$Status] from Actor[akka://ditto-cluster/system/distributedPubSubMediator#480358631] to Actor[akka://ditto-cluster/deadLetters] was not delivered. [9] dead letters encountered. If this is not an expected behavior, then [Actor[akka://ditto-cluster/deadLetters]] may have terminated unexpectedly, This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
things_1         | 2020-10-05 19:41:51,242 INFO  [] a.r.RemoteActorRefProvider$RemoteDeadLetterActorRef akka://ditto-cluster/deadLetters - Message [akka.cluster.ClusterHeartbeatSender$Heartbeat] from Actor[akka://ditto-cluster/system/cluster/core/daemon/heartbeatSender#-621419702] to Actor[akka://ditto-cluster/deadLetters] was not delivered. [10] dead letters encountered, no more dead letters will be logged. If this is not an expected behavior, then [Actor[akka://ditto-cluster/deadLetters]] may have terminated unexpectedly, This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
things_1         | 2020-10-05 19:41:51,244 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.9:2551], message stream] Upstream failed, cause: Association$OutboundStreamStopQuarantinedSignal$:
things-search_1  | 2020-10-05 19:41:51,326 INFO  [] a.r.RemoteActorRefProvider$RemoteDeadLetterActorRef akka://ditto-cluster/deadLetters - Message [akka.cluster.ClusterHeartbeatSender$Heartbeat] from Actor[akka://ditto-cluster/system/cluster/core/daemon/heartbeatSender#2063009362] to Actor[akka://ditto-cluster/deadLetters] was not delivered. [2] dead letters encountered. If this is not an expected behavior, then [Actor[akka://ditto-cluster/deadLetters]] may have terminated unexpectedly, This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
things-search_1  | 2020-10-05 19:41:51,326 INFO  [] a.r.RemoteActorRefProvider$RemoteDeadLetterActorRef akka://ditto-cluster/deadLetters - Message [akka.cluster.ddata.Replicator$Internal$Status] from Actor[akka://ditto-cluster/user/thing-event-aware-replicator#1525639559] to Actor[akka://ditto-cluster/deadLetters] was not delivered. [3] dead letters encountered. If this is not an expected behavior, then [Actor[akka://ditto-cluster/deadLetters]] may have terminated unexpectedly, This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
things-search_1  | 2020-10-05 19:41:51,327 INFO  [] a.r.RemoteActorRefProvider$RemoteDeadLetterActorRef akka://ditto-cluster/deadLetters - Message [akka.cluster.pubsub.DistributedPubSubMediator$Internal$Status] from Actor[akka://ditto-cluster/system/distributedPubSubMediator#-1196794180] to Actor[akka://ditto-cluster/deadLetters] was not delivered. [4] dead letters encountered. If this is not an expected behavior, then [Actor[akka://ditto-cluster/deadLetters]] may have terminated unexpectedly, This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
things-search_1  | 2020-10-05 19:41:51,327 INFO  [] a.r.RemoteActorRefProvider$RemoteDeadLetterActorRef akka://ditto-cluster/deadLetters - Message [akka.cluster.ClusterHeartbeatSender$Heartbeat] from Actor[akka://ditto-cluster/system/cluster/core/daemon/heartbeatSender#2063009362] to Actor[akka://ditto-cluster/deadLetters] was not delivered. [5] dead letters encountered. If this is not an expected behavior, then [Actor[akka://ditto-cluster/deadLetters]] may have terminated unexpectedly, This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
things-search_1  | 2020-10-05 19:41:51,327 INFO  [] a.r.RemoteActorRefProvider$RemoteDeadLetterActorRef akka://ditto-cluster/deadLetters - Message [akka.cluster.ClusterHeartbeatSender$Heartbeat] from Actor[akka://ditto-cluster/system/cluster/core/daemon/heartbeatSender#2063009362] to Actor[akka://ditto-cluster/deadLetters] was not delivered. [6] dead letters encountered. If this is not an expected behavior, then [Actor[akka://ditto-cluster/deadLetters]] may have terminated unexpectedly, This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
things-search_1  | 2020-10-05 19:41:51,327 INFO  [] a.r.RemoteActorRefProvider$RemoteDeadLetterActorRef akka://ditto-cluster/deadLetters - Message [akka.cluster.ddata.Replicator$Internal$Status] from Actor[akka://ditto-cluster/user/thing-event-aware-replicator#1525639559] to Actor[akka://ditto-cluster/deadLetters] was not delivered. [7] dead letters encountered. If this is not an expected behavior, then [Actor[akka://ditto-cluster/deadLetters]] may have terminated unexpectedly, This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
things-search_1  | 2020-10-05 19:41:51,328 INFO  [] a.r.RemoteActorRefProvider$RemoteDeadLetterActorRef akka://ditto-cluster/deadLetters - Message [akka.cluster.pubsub.DistributedPubSubMediator$Internal$Status] from Actor[akka://ditto-cluster/system/distributedPubSubMediator#-1196794180] to Actor[akka://ditto-cluster/deadLetters] was not delivered. [8] dead letters encountered. If this is not an expected behavior, then [Actor[akka://ditto-cluster/deadLetters]] may have terminated unexpectedly, This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
things-search_1  | 2020-10-05 19:41:51,328 INFO  [] a.r.RemoteActorRefProvider$RemoteDeadLetterActorRef akka://ditto-cluster/deadLetters - Message [akka.cluster.ddata.Replicator$Internal$Status] from Actor[akka://ditto-cluster/user/thing-event-aware-replicator#1525639559] to Actor[akka://ditto-cluster/deadLetters] was not delivered. [9] dead letters encountered. If this is not an expected behavior, then [Actor[akka://ditto-cluster/deadLetters]] may have terminated unexpectedly, This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
things-search_1  | 2020-10-05 19:41:51,328 INFO  [] a.r.RemoteActorRefProvider$RemoteDeadLetterActorRef akka://ditto-cluster/deadLetters - Message [akka.cluster.ClusterHeartbeatSender$Heartbeat] from Actor[akka://ditto-cluster/system/cluster/core/daemon/heartbeatSender#2063009362] to Actor[akka://ditto-cluster/deadLetters] was not delivered. [10] dead letters encountered, no more dead letters will be logged. If this is not an expected behavior, then [Actor[akka://ditto-cluster/deadLetters]] may have terminated unexpectedly, This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
concierge_1      | 2020-10-05 19:41:51,518 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/StreamSupervisor-0) - [outbound connection to [akka://ditto-cluster@172.18.0.9:2551], message stream] Upstream failed, cause: Association$OutboundStreamStopQuarantinedSignal$:","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/832/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/832,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwNDA0NzgxOA==,ditto,704047818,832,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-10-06T06:01:27Z,2020-10-06T06:01:27Z,"Exit code 137 means that the processes ran out of memory.
I suggest increasing the memory of the affected containers.

And please provide some more information:
* which Ditto version are you running?
* which deployment (all are Docker based)? Docker Swarm? Docker Compose? Kubernetes? The Helm chart? Openshift?
* how many resources does your system have (CPUs, memory)?
* how many instances of each Ditto service did you start?
* ..","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwNDA0NzgxOA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/832,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwNDA2MTk4Ng==,ditto,704061986,832,NA,nisus91,13584173,,,NA,2020-10-06T06:33:26Z,2020-10-06T06:33:26Z,"Thanks for your reply.
My ditto environment is following.

 which Ditto version are you running? **latest version**
 which deployment (all are Docker based)? Docker Swarm? Docker Compose? Kubernetes? The Helm chart? Openshift? **Docker Compose**
 how many resources does your system have (CPUs, memory)? **8core, 16G**
 how many instances of each Ditto service did you start? **just one**","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwNDA2MTk4Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/832,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwNDA2MzcyNg==,ditto,704063726,832,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-10-06T06:37:32Z,2020-10-06T06:37:32Z,Then my advise would be to increase the `mem_limit: 384m` in the docker-compose.yml to at least `mem_limit: 768m`,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwNDA2MzcyNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/832,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwNDE2NjMwNQ==,ditto,704166305,832,NA,nisus91,13584173,,,NA,2020-10-06T10:03:35Z,2020-10-06T10:03:35Z,"Thanks so much. I will try it (change mem_limit :364m to mem_limit :768m).
Then I will tell you the result.

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwNDE2NjMwNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/834,https://api.github.com/repos/eclipse-ditto/ditto/issues/834,ditto,716284848,834,mqtt connection with username and password,vicanfon,8578283,,,CLOSED,2020-10-07T07:44:18Z,2020-10-07T08:13:00Z,"I want to establish a connection to an MQTT broker that requires a username and password.
Is this type of connection supported by ditto?

I can only see in the documentation the CERT-based authentication.

Thanks,","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/834/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/834,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwNDc2MjUyNg==,ditto,704762526,834,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-10-07T07:53:38Z,2020-10-07T07:53:38Z,"Hi @vicanfon 

Yes, it is .. it seems not to be documented very well however :(

Just use the username and password as part of the connection URI, e.g.:
```
tpc://user:password@localhost:1883
```

If you want to improve the documentation, we would really appreciate a PullRequest adding this to the docs:
* for MQTT 3.1.1: https://github.com/eclipse/ditto/blob/master/documentation/src/main/resources/pages/ditto/connectivity-protocol-bindings-mqtt.md
* for MQTT 5: https://github.com/eclipse/ditto/blob/master/documentation/src/main/resources/pages/ditto/connectivity-protocol-bindings-mqtt5.md","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwNDc2MjUyNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/842,https://api.github.com/repos/eclipse-ditto/ditto/issues/842,ditto,721912943,842,docker containers excited with code 255,silence3322,40905688,,,CLOSED,2020-10-15T02:07:21Z,2020-10-16T06:16:05Z,"policies_1       | 2020-10-15 04:04:07,854 WARN  [] a.r.a.Association Association(akka://ditto-cluster) - Association to [akka://ditto-cluster@172.18.0.8:2551] with UID [-4534051078360594105] is irrecoverably failed. UID is now quarantined and all messages to this UID will be delivered to dead letters. Remote ActorSystem must be restarted to recover from this situation. Reason: Cluster member removed, previous status [Down]
policies_1       | 2020-10-15 04:04:07,868 INFO  [] a.c.ClusterGossip akka://ditto-cluster@172.18.0.3:2551/system/cluster/core/daemon - Cluster Node [akka://ditto-cluster@172.18.0.3:2551] - Ignoring received gossip from unknown [UniqueAddress(akka://ditto-cluster@172.18.0.7:2551,-8127987181220488590)]
policies_1       | 2020-10-15 04:04:07,974 INFO  [] a.c.ClusterGossip akka://ditto-cluster@172.18.0.3:2551/system/cluster/core/daemon - Cluster Node [akka://ditto-cluster@172.18.0.3:2551] - Ignoring received gossip from unknown [UniqueAddress(akka://ditto-cluster@172.18.0.7:2551,-8127987181220488590)]
policies_1       | 2020-10-15 04:04:08,045 WARN  [] a.r.a.Association Association(akka://ditto-cluster) - Association to [akka://ditto-cluster@172.18.0.6:2551] with UID [2407170556327880823] is irrecoverably failed. UID is now quarantined and all messages to this UID will be delivered to dead letters. Remote ActorSystem must be restarted to recover from this situation. Reason: Cluster member removed, previous status [Down]
policies_1       | 2020-10-15 04:04:08,054 INFO  [] a.c.ClusterGossip akka://ditto-cluster@172.18.0.3:2551/system/cluster/core/daemon - Cluster Node [akka://ditto-cluster@172.18.0.3:2551] - Ignoring received gossip from unknown [UniqueAddress(akka://ditto-cluster@172.18.0.7:2551,-8127987181220488590)]
policies_1       | 2020-10-15 04:04:08,063 INFO  [] a.c.ClusterGossip akka://ditto-cluster@172.18.0.3:2551/system/cluster/core/daemon - Cluster Node [akka://ditto-cluster@172.18.0.3:2551] - Ignoring received gossip from unknown [UniqueAddress(akka://ditto-cluster@172.18.0.7:2551,-8127987181220488590)]
policies_1       | 2020-10-15 04:04:08,242 INFO  [] a.c.ClusterGossip akka://ditto-cluster@172.18.0.3:2551/system/cluster/core/daemon - Cluster Node [akka://ditto-cluster@172.18.0.3:2551] - Ignoring received gossip from unknown [UniqueAddress(akka://ditto-cluster@172.18.0.7:2551,-8127987181220488590)]
policies_1       | 2020-10-15 04:04:08,314 INFO  [] a.c.ClusterGossip akka://ditto-cluster@172.18.0.3:2551/system/cluster/core/daemon - Cluster Node [akka://ditto-cluster@172.18.0.3:2551] - Ignoring received gossip from unknown [UniqueAddress(akka://ditto-cluster@172.18.0.7:2551,-8127987181220488590)]
policies_1       | 2020-10-15 04:04:08,430 INFO  [] a.c.ClusterGossip akka://ditto-cluster@172.18.0.3:2551/system/cluster/core/daemon - Cluster Node [akka://ditto-cluster@172.18.0.3:2551] - Ignoring received gossip from unknown [UniqueAddress(akka://ditto-cluster@172.18.0.7:2551,-8127987181220488590)]
policies_1       | 2020-10-15 04:04:08,454 INFO  [] a.c.ClusterGossip akka://ditto-cluster@172.18.0.3:2551/system/cluster/core/daemon - Cluster Node [akka://ditto-cluster@172.18.0.3:2551] - Ignoring received gossip from unknown [UniqueAddress(akka://ditto-cluster@172.18.0.7:2551,-8127987181220488590)]
policies_1       | 2020-10-15 04:04:08,552 INFO  [] a.c.ClusterGossip akka://ditto-cluster@172.18.0.3:2551/system/cluster/core/daemon - Cluster Node [akka://ditto-cluster@172.18.0.3:2551] - Ignoring received gossip from unknown [UniqueAddress(akka://ditto-cluster@172.18.0.7:2551,-8127987181220488590)]
policies_1       | 2020-10-15 04:04:08,620 INFO  [] a.c.ClusterGossip akka://ditto-cluster@172.18.0.3:2551/system/cluster/core/daemon - Cluster Node [akka://ditto-cluster@172.18.0.3:2551] - Ignoring received gossip from unknown [UniqueAddress(akka://ditto-cluster@172.18.0.7:2551,-8127987181220488590)]
policies_1       | 2020-10-15 04:04:16,834 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/Materializers/StreamSupervisor-1) - [outbound connection to [akka://ditto-cluster@172.18.0.6:2551], message stream] Upstream failed, cause: StreamTcpException: The connection has been aborted
policies_1       | 2020-10-15 04:04:16,836 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/Materializers/StreamSupervisor-1) - [outbound connection to [akka://ditto-cluster@172.18.0.6:2551], control stream] Upstream failed, cause: StreamTcpException: The connection has been aborted
things_1         | 2020-10-15 04:04:07,802 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/Materializers/StreamSupervisor-1) - [outbound connection to [akka://ditto-cluster@172.18.0.7:2551], message stream] Upstream failed, cause: StreamTcpException: The connection has been aborted
things_1         | 2020-10-15 04:04:08,467 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/Materializers/StreamSupervisor-1) - [outbound connection to [akka://ditto-cluster@172.18.0.8:2551], control stream] Upstream failed, cause: StreamTcpException: The connection has been aborted
things_1         | 2020-10-15 04:04:08,717 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/Materializers/StreamSupervisor-1) - [outbound connection to [akka://ditto-cluster@172.18.0.9:2551], control stream] Upstream failed, cause: StreamTcpException: The connection has been aborted
things_1         | 2020-10-15 04:04:11,398 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/Materializers/StreamSupervisor-1) - [outbound connection to [akka://ditto-cluster@172.18.0.8:2551], message stream] Upstream failed, cause: StreamTcpException: The connection has been aborted
things_1         | 2020-10-15 04:04:11,662 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/Materializers/StreamSupervisor-1) - [outbound connection to [akka://ditto-cluster@172.18.0.6:2551], message stream] Upstream failed, cause: StreamTcpException: The connection has been aborted
things_1         | 2020-10-15 04:04:11,777 INFO  [] a.r.RemoteActorRefProvider$RemotingTerminator akka://ditto-cluster@172.18.0.5:2551/system/remoting-terminator - Shutting down remote daemon.
things_1         | 2020-10-15 04:04:12,007 INFO  [] a.r.RemoteActorRefProvider$RemotingTerminator akka://ditto-cluster@172.18.0.5:2551/system/remoting-terminator - Remote daemon shut down; proceeding with flushing remote transports.
things_1         | 2020-10-15 04:04:12,563 ERROR [] a.r.a.Association Association(akka://ditto-cluster) - Outbound message stream to [akka://ditto-cluster@172.18.0.9:2551] failed after shutdown. 
things_1         | akka.remote.artery.Association$OutboundStreamStopQuarantinedSignal$: 
things_1         | 2020-10-15 04:04:12,563 ERROR [] a.r.a.Association Association(akka://ditto-cluster) - Outbound message stream to [akka://ditto-cluster@172.18.0.9:2551] failed after shutdown. 
things_1         | akka.remote.artery.Association$OutboundStreamStopQuarantinedSignal$: 
things_1         | 2020-10-15 04:04:12,810 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/Materializers/StreamSupervisor-1) - [outbound connection to [akka://ditto-cluster@172.18.0.3:2551], control stream] Upstream failed, cause: StreamTcpException: The connection has been aborted
things_1         | 2020-10-15 04:04:12,929 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/Materializers/StreamSupervisor-1) - [outbound connection to [akka://ditto-cluster@172.18.0.3:2551], message stream] Upstream failed, cause: StreamTcpException: The connection has been aborted
things_1         | 2020-10-15 04:04:13,050 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/Materializers/StreamSupervisor-1) - [outbound connection to [akka://ditto-cluster@172.18.0.6:2551], control stream] Upstream failed, cause: StreamTcpException: The connection has been aborted
things_1         | 2020-10-15 04:04:13,267 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/Materializers/StreamSupervisor-1) - [outbound connection to [akka://ditto-cluster@172.18.0.8:2551], control stream] Upstream failed, cause: StreamTcpException: The connection has been aborted
things_1         | 2020-10-15 04:04:13,584 INFO  [] a.r.RemoteActorRefProvider$RemotingTerminator akka://ditto-cluster@172.18.0.5:2551/system/remoting-terminator - Remoting shut down.
docker_things_1 exited with code 255
things-search_1  | 2020-10-15 04:04:30,320 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/Materializers/StreamSupervisor-1) - [outbound connection to [akka://ditto-cluster@172.18.0.3:2551], message stream] Upstream failed, cause: StreamTcpException: The connection has been aborted
things-search_1  | 2020-10-15 04:04:30,381 WARN  [] a.s.Materializer akka.stream.Log(akka://ditto-cluster/system/Materializers/StreamSupervisor-1) - [outbound connection to [akka://ditto-cluster@172.18.0.3:2551], control stream] Upstream failed, cause: StreamTcpException: The connection has been aborted
things-search_1  | 2020-10-15 04:04:30,466 INFO  [] a.r.RemoteActorRefProvider$RemotingTerminator akka://ditto-cluster@172.18.0.6:2551/system/remoting-terminator - Remoting shut down.
mongodb_1        | 2020-10-15T04:04:30.594+0200 I NETWORK  [conn13] end connection 172.18.0.6:55554 (6 connections now open)
mongodb_1        | 2020-10-15T04:04:30.595+0200 I NETWORK  [conn11] end connection 172.18.0.6:55550 (5 connections now open)
mongodb_1        | 2020-10-15T04:04:30.596+0200 I NETWORK  [conn9] end connection 172.18.0.6:55520 (4 connections now open)
docker_things-search_1 exited with code 255
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/842/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/842,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwODg0OTA3Mg==,ditto,708849072,842,NA,silence3322,40905688,,,NA,2020-10-15T02:10:49Z,2020-10-15T02:10:49Z,"Anybody can help me?  By the way, i started ditto with docker-compose,and i have rose the limited memory to 768m, if it's helpful.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwODg0OTA3Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/842,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwODkyNTM0MA==,ditto,708925340,842,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-10-15T06:19:13Z,2020-10-15T06:19:13Z,"The Ditto cluster nodes might get to few CPU power in order to quickly form the cluster.
How many CPUs do you have/give the Docker daemon?

If less than 4, try the following command instead for starting Ditto:
```
docker-compose start mongodb; sleep 30; docker-compose start policies things; sleep 60; docker-compose start concierge; sleep 60; docker-compose start things-search; sleep 60; docker-compose start connectivity; sleep 60; docker-compose up -d
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwODkyNTM0MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/842,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwOTY4MzE1NA==,ditto,709683154,842,NA,silence3322,40905688,,,NA,2020-10-16T01:55:50Z,2020-10-16T01:55:50Z,"> 
> 
> The Ditto cluster nodes might get to few CPU power in order to quickly form the cluster.
> How many CPUs do you have/give the Docker daemon?
> 
> If less than 4, try the following command instead for starting Ditto:
> 
> ```
> docker-compose start mongodb; sleep 30; docker-compose start policies things; sleep 60; docker-compose start concierge; sleep 60; docker-compose start things-search; sleep 60; docker-compose start connectivity; sleep 60; docker-compose up -d
> ```

I applied your method, now it does work. Thank you so much 💯 !","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwOTY4MzE1NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/844,https://api.github.com/repos/eclipse-ditto/ditto/issues/844,ditto,722542306,844,Lower-case location header is removed by ditto via websocket response,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,CLOSED,2020-10-15T17:49:32Z,2020-10-23T09:28:34Z,"I'm on ditto 1.3 using a websocket connection to process a ditto live message. The response receives a status of 303 and a location header. If the location header is all-lower-case `location` it is not returned to the client of the original ditto message. Only if the header is `Location` it is returned (and all-lowercase again at the client, at least with curl).

I've verified (via log) that the location header is present until the point right before it's returned via the websocket send operation. I've also verified that this happens from ditto v1.1 to 1.3. For < 1.1 I don't know.

According to the HTTP RFCs 2616 and 7230 HTTP headers should be case-**in**sensitive.

How to reproduce
---

1. Connect via websocket to ditto's live channel
2. Send an arbitrary live message to the websocket listener
3. Send a `location` or `Location` header with the response
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/844/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/845,https://api.github.com/repos/eclipse-ditto/ditto/issues/845,ditto,723050874,845,Web Socket Error. Unexpected server response: 401,silence3322,40905688,,,CLOSED,2020-10-16T09:15:26Z,2020-10-16T09:21:57Z,"I can not link to the service  through ws://localhost:8080/ws/1 or ws://localhost:8080/ws/2.
Then i tested the web socket service by a tool named wscat and got an error like below:

root@raspberry:/home# wscat -c ws://localhost:8080/ws/2
error: Unexpected server response: 401

How can i fix it?

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/845/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/845,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwOTkzMjgzMA==,ditto,709932830,845,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-10-16T09:21:45Z,2020-10-16T09:21:45Z,"Apply authentication .. e.g. by using `ws://ditto:ditto@localhost:8080/ws/2`

For additional questions, please use Stackoverflow and the ""eclipse-ditto"" tag instead, GitHub issues are meant for tracking problems/bugs/features and not for trivial questions.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcwOTkzMjgzMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/852,https://api.github.com/repos/eclipse-ditto/ditto/issues/852,ditto,728030540,852,Prevent endless redelivery for filtered out events requesting acknowledgements,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,CLOSED,2020-10-23T08:43:00Z,2020-11-17T14:32:59Z,"After #611, #661, #757, #792, Ditto has enough information to detect misconfigured publisher-subscriber pairs, for example:
- The subscriber that declared an ack label requested by the publisher is not authorized to receive the published signal, or
- The subscriber that declared an ack label requested by the publisher discards the published signal due to namespace or RQL filtering.

Resending the signal will not help in these situations. Ditto should rather emit a ""weak acknowledgement"" that does not trigger redelivery.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/852/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/857,https://api.github.com/repos/eclipse-ditto/ditto/issues/857,ditto,729601230,857,Header mapping for Feature ID,jokraehe,12512262,Johannes Schneider,johannes.schneider@bosch.io,CLOSED,2020-10-26T14:15:06Z,2020-11-17T16:21:28Z,"I would like to use the Feature ID ~~as well as the Message Subject~~ as [placeholders in Connectivity header mappings](https://www.eclipse.org/ditto/basic-placeholders.html#scope-connections). This way, I can forward thing updates/messages to endpoints which use those fields within the address (URL).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/857/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/857,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcxOTMxODQ4MA==,ditto,719318480,857,NA,jokraehe,12512262,Johannes Schneider,johannes.schneider@bosch.io,NA,2020-10-30T07:00:45Z,2020-10-30T07:00:45Z,Message Subject is already implemented as {{ topic:subject }} placeholder.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcxOTMxODQ4MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/858,https://api.github.com/repos/eclipse-ditto/ditto/issues/858,ditto,729689735,858,Massive package drops in mqtt connectors,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,CLOSED,2020-10-26T15:56:58Z,2021-04-30T09:34:08Z,"I can observe lots of package drops in the mqtt connectors (both mqtt and mqtt-5) lately. Accompanied by warnings in the logs only 10-20% of mqtt packages now make it through to ditto and get persistet. From the logs I suppose that the packages arrive at the connectivity stack but do not get persisted.

This problem first occurred in ditto 1.2. I'm currently operating ditto 1.3.x.

From the connectivity service logs I observe a lot of HiveMQTT client warnings and I'm pretty sure that those did not appear before 1.2:

```
connectivity_1   | 2020-10-26 16:54:58,112 WARN  [] c.h.c.i.m.h.p.i.MqttIncomingPublishService  - No publish flow registered for MqttStatefulPublish{stateless=MqttPublish{topic=ditto/in, payload=226byte, qos=AT_MOST_ONCE, retain=false}, packetIdentifier=-1, dup=false, topicAlias=0, subscriptionIdentifiers=[]}.
connectivity_1   | 2020-10-26 16:54:58,112 WARN  [] c.h.c.i.m.h.p.i.MqttIncomingPublishService  - No publish flow registered for MqttStatefulPublish{stateless=MqttPublish{topic=ditto/in, payload=505byte, qos=AT_MOST_ONCE, retain=false}, packetIdentifier=-1, dup=false, topicAlias=0, subscriptionIdentifiers=[]}.
connectivity_1   | 2020-10-26 16:54:58,389 INFO  [e81d6548-c0b2-45c0-bd4e-92155a174506] o.e.d.s.m.c.a.ConciergeForwarderActor akka://ditto-cluster/user/connectivityRoot/conciergeForwarder - Forwarding signal with ID <8A5EF0FC400F19AA> and type <things.commands:modifyFeatureProperty> to concierge enforcer
connectivity_1   | 2020-10-26 16:54:58,389 INFO  [e81d6548-c0b2-45c0-bd4e-92155a174506] o.e.d.s.m.a.AcknowledgementAggregatorActor akka://ditto-cluster/system/sharding/connection/7/mqtt-5/pa/$a/c1/messageMappingProcessor/ackr3aa-e81d6548-c0b2-45c0-bd4e-92155a174506 - Starting to wait for all requested acknowledgements <[twin-persisted]> for a maximum duration of <PT1M5S>.
```

I've an extensive array of stored history of metrics from past months and can confirm via deployment and rollback times of ditto 1.1, 1.2 and 1.3 that this issue was introduced somewhere between 1.1 and 1.2. 

One more side-note: the metrics from the devops endpoint seem not to include those failed attempts as failures in a connection sense

EDIT:

I found those additional log entries but I don't know if they are related:

```
connectivity_1   | 2020-10-26 16:57:33,022 INFO  [] o.e.d.s.c.m.MessageMappingProcessorActor akka://ditto-cluster/system/sharding/connection/7/mqtt-5/pa/$a/c1/messageMappingProcessor - Got DittoRuntimeException 'json.field.missing' when ExternalMessage was processed: JSON did not include required </path> field! - Check if all required JSON fields were set.
connectivity_1   | 2020-10-26 16:58:09,766 INFO  [] o.e.d.s.c.m.MessageMappingProcessorActor akka://ditto-cluster/system/sharding/connection/7/mqtt-5-othermo-de/pa/$a/c1/messageMappingProcessor - Got DittoRuntimeException 'json.key.invalid' when ExternalMessage was processed: The JSON key <Vorlauf-Solltemperatur Anlagen / Kessel> is invalid! - Neither slashes nor any control characters are allowed.
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/858/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/858,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMDU0MDgyNw==,ditto,720540827,858,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-11-02T15:26:27Z,2020-11-02T15:26:27Z,"Based on this issue https://github.com/hivemq/hivemq-mqtt-client/issues/367 the warning `""No publish flow registered for MqttStatefulPublish""` means:
> The message means that the client received a message, but you did not register a callback and therefore the message is dropped.

Thanks for reporting, we'll look into it.
- HiveMQ client was updated in Ditto 1.3.0 to HiveMQ client 1.2.0
- Ditto 1.2.0 already contained a refactoring of having an abstraction for MQTT3 and MQTT5 common code, the `AbstractMqttConsumerActor` .. probably something broke with this refactoring","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMDU0MDgyNw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/858,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMDU0NjgwNA==,ditto,720546804,858,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2020-11-02T15:35:57Z,2020-11-02T15:35:57Z,"Sounds good, Thanks!

Meanwhile I've built a tiny node app translating the messages from the mqtt broker to websocket message and vice versa :sweat_smile: ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMDU0NjgwNA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/858,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMDU1MjY0MQ==,ditto,720552641,858,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-11-02T15:45:44Z,2020-11-02T15:45:44Z,"@w4tsn can you provide a reproducer?
We have integration tests which test MQTT connections and they don't face any issues.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMDU1MjY0MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/858,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMzkwNTM5MQ==,ditto,723905391,858,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2020-11-09T09:59:18Z,2020-11-09T09:59:18Z,"Hmm. Not really a reproducer in that sense, but here's what I'm doing.

This is my mqtt-connector config. Doesn't really matter if it's `mqtt` or `mqtt-5`. It's a SSL connection though, so you'll need certificates for a test.

```json
{
    ""targetActorSelection"": ""/system/sharding/connection"",
    ""headers"": {
        ""aggregate"": false
    },
    ""piggybackCommand"": {
        ""type"": ""connectivity.commands:createConnection"",
        ""connection"": {
            ""id"": ""mqtt-5-mosquitto-org"",
            ""name"": ""dropping MQTT Gateway"",
            ""connectionType"": ""mqtt-5"",
            ""connectionStatus"": ""open"",
            ""failoverEnabled"": true,
            ""uri"": ""ssl://test.mosquitto.org:8883"",
            ""validateCertificates"": true,
            ""ca"": ""REDACTED"",
            ""credentials"": {
                ""type"": ""client-cert"",
                ""cert"": ""REDACTED"",
                ""key"": ""REDACTED""
            },
            ""sources"": [
                {
                    ""addresses"": [
                        ""ditto/in/#""
                    ],
                    ""authorizationContext"": [""nginx:ditto""],
                    ""qos"": 0,
                    ""filters"": []
                }
            ],
            ""targets"": [
                {
                    ""address"": ""ditto/out/{{ topic:full }}"",
                    ""topics"": [
                        ""_/_/things/twin/events"",
                        ""_/_/things/live/messages""
                    ],
                    ""authorizationContext"": [
                        ""nginx:ditto""
                    ],
                    ""qos"": 0
                }
            ]
        }
    }
}
```

The broker in use is a mosquitto broker with certificate based authentication and an ACL file managing permissions on the ditto/in and ditto/out topics.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMzkwNTM5MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/858,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgxODYxNjU0Ng==,ditto,818616546,858,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2021-04-13T10:05:43Z,2021-04-13T10:05:43Z,"@thjaeckle I still have no reproducer :S Do your integration tests cover percentage package drops? I suspect some kind of load issue, since some data goes through but the majority is dropped.

I now also know that if I turn off the newly introduced configuration options `reconnectForRedelivery` and `separatePublisherClient` the warnings about the missing publish flow go away. This has no influence on the package drops however, so I think this wasn't related to begin with. As a side-note on this: I'm using a TLS certificate connection and the broker is configured to only allow singular authorization per certificate so the option `separatePublisherClient` can't actually work if I understand this correctly. One of both clients is either dropped when the other connects or connection is denied for one of them, don't know for sure.

I'm operating a little work-around translating the mqtt-messages to ditto via websockets and vice-versa. This way I don't see the package drops although the load on the server and cluster did not change.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgxODYxNjU0Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/858,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgxODY2MTI4OA==,ditto,818661288,858,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2021-04-13T11:26:02Z,2021-04-13T11:26:02Z,"Update: OK, well, it seems that the problem was due to a polluted connectivity service. There were multiple connections trying to access the broker with the same credentials which lead to constant reconnects and thus package drops. 

Restarting the connectivity service solved the issue. I thought I had already tried that, but I suppose I did when those multiple connections were still present and didn't thought about it after actually removing all other connections.

In return that means somehow older connections survived the piggyback removal and stayed open / active until I restarted the service (I did not recreate the container). I've confirmed in mongodb that there were three connections in total, 2 marked as deleted, one of them as active. But I could observe multiple clients trying to connect until I restartet the connectivity service.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgxODY2MTI4OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/858,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgxODcyMDcxMw==,ditto,818720713,858,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-04-13T13:06:35Z,2021-04-13T13:06:35Z,"> In return that means somehow older connections survived the piggyback removal and stayed open / active until I restarted the service (I did not recreate the container). I've confirmed in mongodb that there were three connections in total, 2 marked as deleted, one of them as active. But I could observe multiple clients trying to connect until I restartet the connectivity service.

Hi @w4tsn 
That's both good to hear and bad to hear :-D
Good that you fixed it and that is not a fundamental problem in Ditto's MQTT connectivity.
Not easy to reproduce this however as this is probably an update issue of an older Ditto version to a newer one.

If you find out how to reproduce we would be happy to look into this - that's the first time we saw an issue like that.

Regarding the warning and settings of `reconnectForRedelivery` and `separatePublisherClient` we will look into it.
Maybe the default should be not `true` for the both settings, but only when configured specifically.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgxODcyMDcxMw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/858,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgxODczOTEwNA==,ditto,818739104,858,NA,BobClaerhout,3315222,Bob Claerhout,,NA,2021-04-13T13:32:50Z,2021-04-13T13:32:50Z,"I would like to add my 2 cents in this as well.
We also encountered this issue (the connection being kept alive multiple times). I don't have any way to reproduce this easily but I think the chances of encountering this issue is higher when you are creating faulty connections. I usually need a few iterations when creating a new connection to configure it correctly. During these re-configurations a connection might get ""lost"" in the sense that this connection will live on its own.
This results in multiple connections targeting the same (external) host. This host does not allow multiple connections with the same credentials resulting in disconnections all the time. Restarting the ditto-connectivity service ensures only 1 connection is created again which solves the problem.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgxODczOTEwNA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/858,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgyOTQ2MTM1MA==,ditto,829461350,858,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-04-29T17:43:51Z,2021-04-29T17:43:51Z,"I could not reproduce with the current master which will soon be released as Ditto 2.0.
I guess this was fixed in some feature enhancement between 1.5 and 2.0","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgyOTQ2MTM1MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/860,https://api.github.com/repos/eclipse-ditto/ditto/issues/860,ditto,731050121,860,base64 payload incomming from hono ,Geonjae-Joo,62494715,,,CLOSED,2020-10-28T03:13:14Z,2020-12-07T20:24:58Z,"I am using kura - Hono -Ditto.


Here's log from connection logger
![image](https://user-images.githubusercontent.com/62494715/97531938-a70a8380-19f8-11eb-8357-df477c58f6a6.png)

decoding the payload
![image](https://user-images.githubusercontent.com/62494715/97531969-bd184400-19f8-11eb-9806-571994c8c7bf.png)


How should I decode the base64 in payloadmapping Engine, or is there any other way to config it??
Please help!","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/860/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/860,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcxODQ2MjA4NA==,ditto,718462084,860,NA,Geonjae-Joo,62494715,,,NA,2020-10-29T08:12:55Z,2020-10-29T08:12:55Z,"I solved it

""mappingDefinitions"": {
        ""temp-mapping"": {
          ""mappingEngine"": ""JavaScript"",
          ""options"": {
            ""incomingScript"": ""function mapToDittoProtocolMsg(\n  headers,\n  textPayload,\n  bytePayload,\n  contentType\n) {\n  const jsonString = **_String.fromCharCode.apply(null, new Uint8Array(bytePayload))_**;\n let temp = JSON.parse(jsonString);\n let payloadFields = temp.metrics;\n\n  let featuresObj = {\n    temperature: {\n      properties: {\n        value: payloadFields.Temp_from_Pressure\n      }\n    },\n    pressure: {\n      properties: {\n        value: payloadFields['""'""'Pressure'""'""']\n      }\n    },\n    humidity: {\n      properties: {\n        value: payloadFields['""'""'Humidity'""'""']\n      }\n    }\n  };\n  \n  return Ditto.buildDittoProtocolMsg(\n    '""'""'org.acme'""'""',\n    headers['""'""'device_id'""'""'],\n    '""'""'things'""'""',\n    '""'""'twin'""'""',\n    '""'""'commands'""'""',\n    '""'""'modify'""'""',\n    '""'""'/features'""'""',\n    headers,\n    featuresObj\n  );\n}"",
            ""outgoingScript"": ""function mapFromDittoProtocolMsg() { return null; }"",
            ""loadBytebufferJS"": ""true"",
            ""loadLongJS"": ""false""

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcxODQ2MjA4NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/864,https://api.github.com/repos/eclipse-ditto/ditto/issues/864,ditto,732166415,864,implement industry information models,fransvanderlek,1907049,,,CLOSED,2020-10-29T09:53:33Z,2020-12-09T10:48:04Z,"Currently Ditto is using Eclipse specific informationmodels for things ( Things/Atributes/Feature )+ Vorto,  as well as Ditto specific communication protocols ( Ditto Protocol, Ditto REST API ). 
Instead, Ditto could adopt the w3c WOT recommendation https://www.w3.org/TR/wot-thing-description/ , optionally implemented using mozilla's web thing API  ( https://iot.mozilla.org/wot/) as a basis. 
In addition, it should be considered how standardization can be achieved by using information models standards across the industry, for example Industry Foundation Classes ( https://www.buildingsmart.org/standards/bsi-standards/industry-foundation-classes/ ) / Brickschema ( https://brickschema.org/ ) for buildings, Semantic Sensor Network ( https://www.w3.org/TR/vocab-ssn/ ) for sensors, QUDT ( http://qudt.org/ ) for units and measurements, etc. It is true that it is possible to reference these models in principle, but this is just a reference and not enforced.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/864/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/864,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMDU2NDUzNg==,ditto,720564536,864,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-11-02T16:04:49Z,2020-11-02T16:04:49Z,"Hi @franckverrot and thanks for your thoughts on the modeling.

Eclipse Ditto is domain agnostic in order to not only enable industrial (IoT) use cases, but also consumer-oriented ones (like e.g. providing ""digital twins"" also as a metaphor in order to interact with smart homes).
It therefore does not make sense to adopt one (or several) of the domain specific models you mentioned.

What will not happen is replacing the well established and stable APIs of Ditto with WoT APIs, just because.
What could however make sense is to additionally adopt W3C WoT (e.g. via an additional WoT compatibility layer) which is also domain agnostic.
Eclipse Vorto is currently investigating how to generate WoT models based on Vorto models, see: https://github.com/eclipse/vorto/issues/2344
That way WoT could also map easier to Ditto as well.

If you have a more concrete idea how Web of Things could be applied on top of Ditto, please share your thoughts on that.
As I see it, WoT can't replace Ditto's APIs as Ditto provides at some parts more functionality and flexibility than WoT (e.g. when it comes to [authorization based on Ditto policies](https://www.eclipse.org/ditto/basic-policy.html)).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMDU2NDUzNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/874,https://api.github.com/repos/eclipse-ditto/ditto/issues/874,ditto,736715482,874,Enhance all Feature events with the feature definition,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2020-11-05T08:20:20Z,2022-03-01T13:44:14Z,"We could simply add the Feature ""definition"" to all Feature events.
That way, the definition would not have to be ""enriched"" (e.g. as also requested in issue #710) but would always be available (similar to the Feature's ID).

We could also add a Placeholder `{{ feature:definition }}` in order to e.g. add the definition in a header mapping (e.g. putting the definition as HTTP header for HTTP push connections).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/874/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/874,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMjIzMjgxNg==,ditto,722232816,874,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-11-05T08:45:07Z,2020-11-05T08:45:07Z,"Implementation suggestions:
* add new interface `WithFeatureDefinition` which all FeatureEvents implement
* add `definition` field to all FeatureEvents (also add it to the serialized JSON)
* for DittoProtocol JSON, the `definition` would have to find its place e.g. in the headers, e.g.:
```json
{
  ""topic"": ""com.acme/xdk_53/things/twin/events/modified"",
  ""headers"": {
    ""feature-definition"": [
      ""org.eclipse.vorto:Foobar:1.0.0""
    ]
  },
  ""path"": ""/features/accelerometer/properties/x"",
  ""value"": 42,
  ""revision"": 1
}
```
* another option would be to add it ""toplevel"" to the DittoProtocol JSON, like:
```json
{
  ""topic"": ""com.acme/xdk_53/things/twin/events/modified"",
  ""path"": ""/features/accelerometer/properties/x"",
  ""value"": 42,
  ""definition"": [
    ""org.eclipse.vorto:Foobar:1.0.0""
  ],
  ""revision"": 1
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMjIzMjgxNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/874,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMjIzNTI5Mg==,ditto,722235292,874,NA,jokraehe,12512262,Johannes Schneider,johannes.schneider@bosch.io,NA,2020-11-05T08:49:49Z,2020-11-05T08:49:49Z,"I think the top-level `definition` in ditto-protocol would make sense, because we also could support the definition of a thing with this approach. We could name the interface `WithDefinition` then we can reuse it for thing events.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMjIzNTI5Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/874,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMjIzNTk4Mw==,ditto,722235983,874,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-11-05T08:51:08Z,2020-11-05T08:51:08Z,"Ok, but then the definition depends on the changed `""path""` which could be confusing.
We could also add toplevel `""definition""` and optionally `""feature-definition""` (when a feature was affected).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMjIzNTk4Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/874,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMjIzOTA5Ng==,ditto,722239096,874,NA,jokraehe,12512262,Johannes Schneider,johannes.schneider@bosch.io,NA,2020-11-05T08:56:44Z,2020-11-05T08:56:44Z,"Yes, you are right. The top-level definition is not unambiguous for feature related events. Maybe we could add something like
`""definitions"": {
""thing"": [""org.eclipse.vorto:Foobar:1.0.0""],
""feature"": [""org.eclipse.vorto:Baz:1.0.0""]
}`","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMjIzOTA5Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/874,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMjI0MDc5NQ==,ditto,722240795,874,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-11-05T08:59:50Z,2020-11-05T08:59:50Z,"that leads me to: what if an event contained updates for several features - then the JSON should probably look like:
```json
...
""definitions"": { 
  ""thing"": ""org.eclipse.vorto:Foobar:1.0.0"", 
  ""features"": {
    ""featureA"": [""org.eclipse.vorto:Baz:1.0.0""],
    ""featureB"": [""org.eclipse.vorto:BazBaz:1.0.0""] 
  }
}
...
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyMjI0MDc5NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/874,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84-6P3x,ditto,1055456753,874,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-03-01T13:44:13Z,2022-03-01T13:44:13Z,Closing in favor of #710,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84-6P3x/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/876,https://api.github.com/repos/eclipse-ditto/ditto/issues/876,ditto,738835901,876,Having trouble adding oauth configuration via docker-compose.yml,raujonas,25148277,Jonas Rau,,CLOSED,2020-11-09T09:03:22Z,2020-11-10T09:46:49Z,"Hello! I'm having trouble with adding an oauth configuration with the prebuilt docker images. What I tried is adding these two lines to the gateway service in the docker-compose.yml like described here [https://www.eclipse.org/ditto/installation-operating.html#openid-connect](https://www.eclipse.org/ditto/installation-operating.html#openid-connect)
```
      - Dditto.gateway.authentication.oauth.protocol=http
      - Dditto.gateway.authentication.oauth.openid-connect-issuers.keycloak=keycloak.localhost:8090/auth/realms/twin
```
Complete service configuration:
```
  gateway:
    image: docker.io/eclipse/ditto-gateway:${DITTO_VERSION:-latest}
    mem_limit: 384m
    networks:
      default:
        aliases:
          - ditto-cluster
    depends_on:
      - policies
      - concierge
    ports:
      - ""8081:8080""
    environment:
      - TZ=Europe/Berlin
      - INSTANCE_INDEX=1
      - BIND_HOSTNAME=0.0.0.0
      - ENABLE_DUMMY_AUTH=true
      - OPENJ9_JAVA_OPTIONS=-XX:+ExitOnOutOfMemoryError -Xtune:virtualized -Xss512k -XX:MaxRAMPercentage=80 -Dakka.coordinated-shutdown.exit-jvm=on -Dakka.cluster.shutdown-after-unsuccessful-join-seed-nodes=120s
      # You may use the environment for setting the devops password
      #- DEVOPS_PASSWORD=foobar
    # Set additional configuration options here
    # -Dditto.gateway...
      - Dditto.gateway.authentication.oauth.protocol=http
      - Dditto.gateway.authentication.oauth.openid-connect-issuers.keycloak=keycloak.localhost:8090/auth/realms/twin
    # Setting the devops password via java VM environment
    command: java -Dditto.gateway.authentication.devops.password=foobar -jar starter.jar
```
This results in the following http error if I try to use the api with postman:
```
{
    ""status"": 401,
    ""error"": ""gateway:jwt.issuer.notsupported"",
    ""message"": ""The JWT issuer 'http://keycloak.localhost:8090/auth/realms/twin' is not supported."",
    ""description"": ""Check if your JWT is correct.""
}
```
However if I build the docker images locally and add the following part in the gateway.conf it works:
```
ditto {
  ...
  gateway {
    ...
    authentication {
    ...
      oauth {
        protocol = ""http""
        openid-connect-issuers = {
          keycloak = ""keycloak.localhost:8090/auth/realms/twin""
        }
      }
  ...
```
What am I missing here? Is there something wrong with my environment variables?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/876/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/876,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyNDU3Mjk0Mg==,ditto,724572942,876,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-11-10T09:17:34Z,2020-11-10T09:17:34Z,"Hi.

There is something wrong with your environment variables ;)

Correct would be:
```yaml
    environment:
      - TZ=Europe/Berlin
      - INSTANCE_INDEX=1
      - BIND_HOSTNAME=0.0.0.0
      - ENABLE_DUMMY_AUTH=true
      - OPENJ9_JAVA_OPTIONS=-XX:+ExitOnOutOfMemoryError -Xtune:virtualized -Xss512k -XX:MaxRAMPercentage=80 -Dakka.coordinated-shutdown.exit-jvm=on -Dakka.cluster.shutdown-after-unsuccessful-join-seed-nodes=120s
      # You may use the environment for setting the devops password
      #- DEVOPS_PASSWORD=foobar
    # Set additional configuration options here
    # -Dditto.gateway...
    # Setting the devops password via java VM environment
    command: java -Dditto.gateway.authentication.devops.password=foobar -Dditto.gateway.authentication.oauth.protocol=http -Dditto.gateway.authentication.oauth.openid-connect-issuers.keycloak=keycloak.localhost:8090/auth/realms/twin -jar starter.jar
```

The inline comment probably doesn't make that quite clear that those `-D` configuration have to be set at the `""command""` level.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyNDU3Mjk0Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/876,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyNDU4OTQ4Mg==,ditto,724589482,876,NA,raujonas,25148277,Jonas Rau,,NA,2020-11-10T09:46:49Z,2020-11-10T09:46:49Z,"Oh well, now that I see it it is quite obvious though. It is working now, thank you for pointing this out!","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyNDU4OTQ4Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/878,https://api.github.com/repos/eclipse-ditto/ditto/issues/878,ditto,739185726,878,"Add ""group"" to Ditto pubsub",yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,CLOSED,2020-11-09T16:41:39Z,2020-12-07T20:24:37Z,"Add a ""group"" concept to Ditto pubsub similar to groups in Akka pubsub.

- Subscribers may subscribe with a group name.
- Published signals are delivered to exactly 1 subscriber within each group chosen consistently according to the entity ID.

WIth this feature, the event publishing at connections will scale with the number of client actors by having the client actors subscribe for events directly using the connection ID as group.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/878/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/884,https://api.github.com/repos/eclipse-ditto/ditto/issues/884,ditto,745581013,884,Add initial-metadata support to thing creation,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,CLOSED,2020-11-18T11:32:50Z,2022-08-15T07:06:01Z,"When creating a thing it'd be useful to directly include a `_metadata` structure.

An interesting use-case is if the ditto-skeleton generator for vorto eventually receives metadata support this could be directly used with ditto.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/884/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/884,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyOTYzNTIyNA==,ditto,729635224,884,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-11-18T12:05:22Z,2020-11-18T12:05:22Z,"I agree 👍 
This also already is the ""pattern"" when creating a new thing with an ""inline"" `_policy`.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyOTYzNTIyNA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/885,https://api.github.com/repos/eclipse-ditto/ditto/issues/885,ditto,745584403,885,Add support to post arbitraty json-formatted metadata with a key of `/`,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,OPEN,2020-11-18T11:37:58Z,2020-11-18T14:10:32Z,"If updating a (complex) property it'd be useful to add an arbitrary json object as metadata of the property written in the request. In order to do this it has to be supported to use a key of `/` which is currently not supported. Ditto will complain that a metadata requires a path.

In contrast, without this it is required to decompose the json object containing the metadata and create multiple entries for the put-metadata header to achieve the same thing.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/885/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/885,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyOTcwMjUwNQ==,ditto,729702505,885,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-11-18T14:10:32Z,2020-11-18T14:10:32Z,"I also agree that this should be made possible (and can be very convenient), however with the following limitations/restrictions:
* when using `""/""` as `""key""` for putting metadata, the value **must** be a JsonObject
* all of the included JSON paths in the provided JsonObject must also be present as part of the modification of the thing

E.g.:
```json
{
  ""topic"": ""com.acme/foo-1/things/twin/commands/modify"",
  ""headers"": {
    ""put-metadata"": [
      {
        ""key"": ""/"",
        ""value"": {
          ""attributes"": {
            ""location"": {
              ""latitude"": {
                ""type"": ""double""
              },
              ""longitude"": {
                ""type"": ""double""
              }
            }
          }
        }
      }
    ]
  },
  ""path"": ""/"",
  ""value"": {
    ""thingId"": ""com.acme:foo-1"",
    ""attributes"": {
      ""location"": {
        ""latitude"": 44.673856,
        ""longitude"": 8.261719
      }
    }
  }
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyOTcwMjUwNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/886,https://api.github.com/repos/eclipse-ditto/ditto/issues/886,ditto,745590036,886,put-metadata on a thing's root does not work,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,CLOSED,2020-11-18T11:46:43Z,2021-09-13T12:04:14Z,"I tried to use put-metadata on a thing update (PUT) to write a series of metadata on different features and properties but it did not work.

What I did
---

I retrieved the whole thing first via GET, then added based on it's contents and a model a series of put-metadata header entries and finally pushed the whole thing back to ditto. The metadata entries had keys beginning at the things root like this `/features/lamp/properties/status/active` and values of arbitrary json. 

What happened
---

The metadata was not written. An empty `_metadata` object appeared in the thing. After this I tried to do this on the properties and properties/<specific-property> level which resulted in a deeper `_metadata` object but with empty leafs. Turned out I still used the full paths in the keys where I should have used relative ones. Didn't tried to update the keys because I already decomposed everything into single requests for all properties with metadata keys now being just one level and values being primitive.

Expectation
---

The metadata should have been written. I expect if I PUT a whole thing and provide a put-metadata header with like 20 different entries, everyone with a property path from the root to the property as the key that the value, either primitive or arbitrary json, is written.

/kind bug","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/886/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/886,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyOTczMTQ2NQ==,ditto,729731465,886,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-11-18T14:53:52Z,2020-11-18T14:53:52Z,"@w4tsn I can't reproduce, could you please provide e.g. a reproducer with the cURL commands you executed?

What I did:
## Create Thing
```sh
curl --location --request PUT 'https://ditto.eclipse.org/api/2/things/org.eclipse.ditto.tjaeckle:test-3' \
--header 'Content-Type: application/json' \
--header 'Authorization: Basic ZGl0dG86ZGl0dG8=' \
--data '{}'
```

## Modify existing Thing setting metadata

```sh
curl --location --request PUT 'https://ditto.eclipse.org/api/2/things/org.eclipse.ditto.tjaeckle:test-3' \
--header 'Content-Type: application/json' \
--header 'put-metadata: [{""key"": ""/attributes/foo/bar"",""value"":true},{""key"": ""/features/temp/properties/status/value/creator"",""value"":""Thomas""}]' \
--header 'Authorization: Basic ZGl0dG86ZGl0dG8=' \
--data '{
    ""thingId"": ""org.eclipse.ditto.tjaeckle:test-3"",
    ""policyId"": ""org.eclipse.ditto.tjaeckle:test-3"",
    ""attributes"": {
        ""foo"": 42
    },
    ""features"": {
        ""temp"": {
            ""properties"": {
                ""status"": {
                    ""value"": 42.23
                }
            }
        }
    }
}'
```

## Get the Thing with metadata

```sh
curl --location --request GET 'https://ditto.eclipse.org/api/2/things/org.eclipse.ditto.tjaeckle:test-3?fields=thingId,attributes,features,_metadata' \
--header 'Content-Type: application/json' \
--header 'put-metadata: [{""key"": ""/attributes/foo/bar"",""value"":true},{""key"": ""/features/temp/properties/status/value/creator"",""value
--header 'Authorization: Basic ZGl0dG86ZGl0dG8='
```

results in:
```json
{
  ""thingId"": ""org.eclipse.ditto.tjaeckle:test-3"",
  ""attributes"": {
    ""foo"": 42
  },
  ""features"": {
    ""temp"": {
      ""properties"": {
        ""status"": {
          ""value"": 42.23
        }
      }
    }
  },
  ""_metadata"": {
    ""attributes"": {
      ""foo"": {
        ""bar"": true
      }
    },
    ""features"": {
      ""temp"": {
        ""properties"": {
          ""status"": {
            ""value"": {
              ""creator"": ""Thomas""
            }
          }
        }
      }
    }
  }
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDcyOTczMTQ2NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/886,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczMDQyMTMwOQ==,ditto,730421309,886,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2020-11-19T14:44:24Z,2020-11-19T14:44:24Z,"@thjaeckle the only difference I can spot is that I used arbitrary json objects as my values in the metadata entries. I wanted to set four different metadata key/value pairs at once. Maybe I should just split that up :thinking: 

Apart from that I'll prepare a reproducer next week.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczMDQyMTMwOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/886,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C841tTzG,ditto,901070022,886,NA,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,NA,2021-08-18T12:25:42Z,2021-08-18T12:25:42Z,@w4tsn any update?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C841tTzG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/886,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842UMIK,ditto,911262218,886,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2021-09-02T06:36:12Z,2021-09-02T06:36:12Z,I'll work on the code where I encountered this within the next 3 weeks or so,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842UMIK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/886,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842uXK-,ditto,918123198,886,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2021-09-13T12:04:13Z,2021-09-13T12:04:13Z,"I tried to reproduce this with the following on the current eclipseprojects.io sandbox with Ditto 2.0.1

```
curl --location --request PUT 'https://ditto.eclipseprojects.io/api/2/things/org.eclipse.ditto.w4tsn:issue-886' \
--header 'Content-Type: application/json' \
--header 'put-metadata: [{""key"":""/attributes"",""value"":{""foo"":{""bar"":true}}},{""key"":""/features"",""value"":{""temp"":{""properties"":{""status"":{""value"":{""creator"": ""Alex"", ""foo"": ""bar""},""value2"":{""creator"": ""Alex"", ""foo"": ""bar2""}}}}}}]' \
--header 'Authorization: Basic ZGl0dG86ZGl0dG8=' \
--data '{
    ""thingId"": ""org.eclipse.ditto.w4tsn:issue-886"",
    ""policyId"": ""org.eclipse.ditto.w4tsn:issue-886"",
    ""attributes"": {
        ""foo"": 42
    },
    ""features"": {
        ""temp"": {
            ""properties"": {
                ""status"": {
                    ""value"": 42.23,
                    ""value2"": 73
                }
            }
        }
    }
}'
```

This indeed works as expected. The thing with metadata looks like this:

```
{
    ""thingId"": ""org.eclipse.ditto.w4tsn:issue-886"",
    ""attributes"": {
        ""foo"": 42
    },
    ""features"": {
        ""temp"": {
            ""properties"": {
                ""status"": {
                    ""value"": 42.23,
                    ""value2"": 73
                }
            }
        }
    },
    ""_metadata"": {
        ""attributes"": {
            ""foo"": {
                ""bar"": true
            }
        },
        ""features"": {
            ""temp"": {
                ""properties"": {
                    ""status"": {
                        ""value"": {
                            ""creator"": ""Alex"",
                            ""foo"": ""bar""
                        },
                        ""value2"": {
                            ""creator"": ""Alex"",
                            ""foo"": ""bar2""
                        }
                    }
                }
            }
        }
    }
}
```

I tried this on my current Ditto 1.5.x Stack (wasn't able to upgrade yet) and it seems to be broken there. No metadata created if using a complex json object as value and a simple key. I'm working around this by splitting up the bigger json object value and flattening it so I get an array with key/value pairs for every leaf.

I guess this is fixed in recent ditto so I'll close this with the knowledge that this problem goes away once I manage to upgrade the cluster.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842uXK-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/887,https://api.github.com/repos/eclipse-ditto/ditto/issues/887,ditto,746342676,887,Support for detecting concurrent modifications,pravussum,5208777,,,OPEN,2020-11-19T08:01:59Z,2020-11-19T18:42:04Z,"Thing modifications in Ditto are subject to the classic ""lost updates"" problem known from relational databases. 
With support for a per-feature _revision field being in the loop (#778) it would be possible to detect concurrent modifications.

1. a twin exists in Ditto having feature XYZ set to 1 (revision 0)
1. client A sends feature update (XYZ=2, rev. 0)
1. Ditto processes client As request 
1. client B sends feature update (XYZ=3, rev. 0)
1. Ditto updates the twins feature to XYZ=2, rev. 1 and sends an event to client B (client A doesn't receive one since it initiated the update)
1. client B receives the event and updates its internal state to XYZ=2, rev. 1
1. Ditto processes client Bs request

In this last step with the current implementation Ditto would just update the twins feature to XYZ=3, rev. 2 and send the update event to client A (but not B), leaving client B with a wrong state (its update is lost).

In a future implementation Ditto should compare the revision sent along with the request of client B (rev. 0) with the twins feature revision at that time (rev. 1 after As update) and raise an error that the feature has been modified in the meanwhile. 

Probably its reasonable to make this behavior configurable (system wide or per client / request)

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/887/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/887,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczMDU2NDE3MA==,ditto,730564170,887,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-11-19T18:42:04Z,2020-11-19T18:42:04Z,"Ah, I see. On the thing level this is already possible today using conditional requests with ""If-Match"" header and the Thing's revision:
https://www.eclipse.org/ditto/httpapi-concepts.html#conditional-headers

What is missing is providing that as well on a feature or even on a deeper level. There currently only the hash can be used for using in the conditional request and this hash is the Java hash code which is most of the times difficult to calculate.

So once we would have the revision number in each Json leaf as metadata, the conditional request could be done everywhere. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczMDU2NDE3MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/889,https://api.github.com/repos/eclipse-ditto/ditto/issues/889,ditto,747284878,889,Support receiving cloud events using HTTP endpoint,ctron,202474,Jens Reimann,ctron@dentrassi.de,CLOSED,2020-11-20T08:23:19Z,2020-12-09T10:47:38Z,"I think it makes sense for Ditto to support receiving Ditto Protocol JSON messages also via [Cloud Events](https://cloudevents.io/).

While cloud events provide bindings for Kafka, MQTT, … they also have an [HTTP endpoint binding](https://github.com/cloudevents/spec/blob/v1.0/http-protocol-binding.md), which can easily be used in the combination with [Knative](https://knative.dev/). So it would be possible, to easily map incoming messages from any [Knative eventing source](https://knative.dev/docs/eventing/), to Ditto, acting as a Knative eventing sink.

The payload of these events would be expected to be ""Ditto Protocol payload (JSON)"".

I would be volunteering to work on this.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/889/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/889,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczMTA4ODY0Mw==,ditto,731088643,889,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-11-20T10:34:50Z,2020-11-20T10:34:50Z,"Cool 👍 
As discussed in Gitter.IM we would appreciate such a contribution.
Implementation hints:
* HTTP handling in Ditto is done with [Akka HTTP](https://doc.akka.io/docs/akka-http/current/index.html)
* the Ditto service responsible for terminating HTTP requests is the [gateway service](https://www.eclipse.org/ditto/architecture-services-gateway.html), see also the [architecture](https://www.eclipse.org/ditto/architecture-overview.html)
* [`RootRoute.buildApiSubRoutes(RequestContext, DittoHeaders)`](https://github.com/eclipse/ditto/blob/master/services/gateway/endpoints/src/main/java/org/eclipse/ditto/services/gateway/endpoints/routes/RootRoute.java#L264) would be the place to add a new top-level route below `/api/2/`
* the ""ditto-protocol-adapter"" module must be used in order to parse Ditto Protocol JSON messages to `Signals` which have to be forwarded in the cluster
   * https://search.maven.org/artifact/org.eclipse.ditto/ditto-protocol-adapter/1.4.0/bundle
   * Example use:
```java
private Signal<?> jsonToDittoSignal(final String jsonString) {
   final JsonObject jsonObject = JsonObject.of(jsonString);
   final JsonifiableAdaptable jsonifiableAdaptable = ProtocolFactory.jsonifiableAdaptableFromJson(jsonObject);
   final DittoProtocolAdapter dittoProtocolAdapter = DittoProtocolAdapter.newInstance();
   return dittoProtocolAdapter.fromAdaptable(jsonifiableAdaptable);
}
```
* The created `Signal` has to be passed into a `handlePerRequest` variant of `org.eclipse.ditto.services.gateway.endpoints.routes.AbstractRoute`

Regarding naming and verb of the new endpoint I would suggest:
* using `POST` as verb
* regarding the ""noun"" I am not yet sure ..
   *  `/events` for example would not fit IMO as Ditto Protocol JSON messages are not always events, but also commands
   * `/protocolMessages` could be an option, however I would like to prevent using camel case or a dash in the endpoint
   * maybe `/signals` as all Ditto Protocol JSON messages represent Signals: https://www.eclipse.org/ditto/basic-signals.html","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczMTA4ODY0Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/889,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc0MTY5MTE2Mg==,ditto,741691162,889,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-12-09T10:47:37Z,2020-12-09T10:47:37Z,I would close this as the basic functionality is available via #895,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc0MTY5MTE2Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/890,https://api.github.com/repos/eclipse-ditto/ditto/issues/890,ditto,747554828,890,"Add support for ""expiry"" of policy subjects",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2020-11-20T14:56:33Z,2020-12-23T12:17:19Z,"In order to give access for a certain ""authorized subject"" only until a fixed timestamp, a `Policy` subject shall be optionally provided with an `""expiry""` timestamp (being an ISO-8601 string).

Once the `""expiry""` timestamp was reached, the subject shall be automatically removed from the policy (that change being persisted) and as a result this subject would immediately no longer have access.

Example Policy:
```json
{
  ""policyId"": ""my.namespace:policy-a"",
  ""entries"": {
    ""owner"": {
      ""subjects"": {
        ""nginx:house-owner-user"": {
          ""type"": ""This is the owner of the house""
        },
        ""nginx:neighbor-user"": {
          ""type"": ""This is the neighbor which shall manage the smart house during a vacation"",
          ""expiry"": ""2020-11-26T11:00Z""
        }
      },
      ""resources"": {
        ""thing:/"": {
          ""grant"": [
            ""READ"",
            ""WRITE""
          ],
          ""revoke"": []
        },
        ""policy:/"": {
          ""grant"": [
            ""READ"",
            ""WRITE""
          ],
          ""revoke"": []
        },
        ""message:/"": {
          ""grant"": [
            ""READ"",
            ""WRITE""
          ],
          ""revoke"": []
        }
      }
    }
  }
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/890/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/897,https://api.github.com/repos/eclipse-ditto/ditto/issues/897,ditto,749750336,897,Ditto SDK enhancements,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,OPEN,2020-11-24T14:24:43Z,2020-11-24T14:24:43Z,"Since live commands are implemented on devices the ditto SDK (Java AND JavaScript, capital 'and' since I fear the latter is a bit under-developed feature wise :sweat_smile:) needs to provide as much guidance / abstraction as possible to ease the agent implementation. Some initial thoughts on this:

- if a command is not yet implemented for a feature on the live channel a 400 with an ""unimplemented"" notice should be returned. 400, because I don't know if there's any better suited status. 406 sound similar, but is semantically different.
- implementing the commands needs an API to 'plug-in' implementations
- for AMQP and MQTT connected clients I suppose (at least for mqtt) that the client will need an implementation to interact with an mqtt / amqp client ? As additional data channel to websocket and REST

My basic idea here is to have as much of the API as possible defined as ditto protocol for commands, such that I don't need to worry much about status codes and such. Opposed to the messages API where implementation is highly use-case and device specific, which is good since e.g. (vorto) operations implemented as messages follow a custom API.

A bit of background where I'm coming from with this: I'm implementing python and js agents for IoT devices. There is also a node-red project, where the js client will receive a node-red contrib wrapper node to allow graphical interaction with ditto in node-red.

I'll additionally require a python SDK for some devices which I plan to open-source / contribute.

This will probably end up in multiple issues I suppose - let's discuss!","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/897/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/898,https://api.github.com/repos/eclipse-ditto/ditto/issues/898,ditto,750658441,898,Add support for twin life-cycle events,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,CLOSED,2020-11-25T09:41:58Z,2021-10-12T08:09:25Z,"In order to integrate other components and services of an infrastructure for some use-cases it's crucial to act on life-cycle events of a twin. E.g. to register the twin on it's creation with monitoring, etc. Or to de-register when it is decommissioned.

Therefore the connectivity, HTTP and websocket APIs need means to filter for those events only. Otherwise one would have to listen on a potentially large data stream to manually fish out life-cycle events.

There is certainly even more potential in this concept, so let's discuss!","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/898/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/898,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczNjMyMzM4Mw==,ditto,736323383,898,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-12-01T08:56:46Z,2020-12-01T08:56:46Z,"This makes sense, yes.
Would you also expect ""lifecycle events"" for e.g. created/removed features? I think that could be useful as well.
On a feature property/attribute level however I don't think that e.g. ""attribute created"" as separate lifecycle event would be so useful.

Regarding syntax: we would have to support it in the RQL queries, some ideas:
* `eq(__lifecycle,""CREATED"")` and `eq(__lifecycle,""DELETED"")`
* ... ?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczNjMyMzM4Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/898,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczNzMxNzgyOA==,ditto,737317828,898,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2020-12-02T15:51:03Z,2020-12-02T15:51:03Z,"For the features part, nice addition! I could think of RQL queries for those like this `eq(__lifecycle/features/lamp,""CREATED"")`.

So I'm currently further tracking life cycle states which might be really use-case dependent and not that helpful for a general implementation. Would have to think about that a bit more first, but here you go:

* `ACTIVE` as in ""put into duty"" to mark that the device history is written to prod systems and those kind of things so we keep the initialization stuff separated from production
* `INACTIVE` if the device is relocated, receives off the grid maintenance / upgrades or other things which are not considered ""production updates""
* `RETIRED` to mark that this device is now put out of service and maybe deleted or archived for later reference (our devices have unique IDs that also tie together history, alerting etc.)

I agree that property/attribute level events seem to be a bit over-kill ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczNzMxNzgyOA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/898,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg3OTk1ODU4Mg==,ditto,879958582,898,NA,thlandgraf,45935153,Thomas Landgraf,,NA,2021-07-14T14:49:27Z,2021-07-14T14:49:27Z,"Hi,

in our systems, we have a period of calibration validity (in german ""Eichgültigkeit"") in our lifecycle. Maybe, a ""OUT_OF_GUARANEE"" makes also sense.

    best
       Thomas","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg3OTk1ODU4Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/898,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg3OTk3MDU4Nw==,ditto,879970587,898,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-07-14T15:04:29Z,2021-07-14T15:04:29Z,"Hi @thlandgraf 
That sounds like a rather domain specific lifecycle (Ditto is domain agnostic) - can't this be an `attribute` instead?
On attributes, searching and filtering is already supported.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg3OTk3MDU4Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/898,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842uh4l,ditto,918167077,898,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-09-13T13:02:27Z,2021-09-13T13:02:27Z,"We start working on this issue.
The suggested approach is to make it possible to use `topic:action` (see [connection scoped placeholders](https://www.eclipse.org/ditto/basic-placeholders.html#scope-connections)) in RQL expressions, e.g.:
```
eq(topic:action,'created')

or(eq(topic:action,'created'),eq(topic:action,'deleted'))

and(eq(topic:action,'created'),eq(attributes/location,'kitchen'))
```

Targeted is only the lifecycle of the thing/twin (as the title of the issue also suggests), feature lifecycle is out of scope for this issue.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842uh4l/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/900,https://api.github.com/repos/eclipse-ditto/ditto/issues/900,ditto,752370855,900,Command and control (Hono integration) leads to error: dead letters encountered,mariolpantunes,1313150,Mário Antunes,mariolpantunes@gmail.com,CLOSED,2020-11-27T16:41:34Z,2020-12-07T08:30:13Z,"We deployed a Ditto and connected it with our Hono broker.
The devices from Hono are registered on the Ditto, and for each tenant, there is an incoming mapping function and the corresponding command and control connection.
The command and control connection is working as expected, except the reply from the command.

Some times the reply is not delivered and the logs show this error:

> 2020-11-27 16:40:58,994 INFO  [] a.a.LocalActorRef akka://ditto-cluster/user/$H/ackr0-command-and-control - Message [org.eclipse.ditto.signals.commands.messages.SendThingMessageResponse] from Actor[akka://ditto-cluster@172.21.0.9:2551/system/sharding/connection/16/hono-command-control-drtenant3/pa/$a/c1/amqpConsumerActor-0-control%2Fdrtenant3%2Freplies-03/$l#-1871092360] to Actor[akka://ditto-cluster/user/$H/ackr0-command-and-control#-150707102] was not delivered. [12] dead letters encountered, of which 1 were not logged. The counter will be reset now. If this is not an expected behavior then Actor[akka://ditto-cluster/user/$H/ackr0-command-and-control#-150707102] may have terminated unexpectedly. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/900/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/900,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczNDk1NzE5OA==,ditto,734957198,900,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-11-27T19:11:47Z,2020-11-27T19:11:47Z,"Hi @mariolpantunes 
Could you please provide some more information:
* how does the configured connection to Hono look like (complete JSON would be best)?
* do I understand you scenario correctly?
   * you invoke a message via Ditto's HTTP API which should be sent to a device connected to Hono? 
   * the device responds accordingly, but the device's response is not correlated in Ditto?
* how does the reply message from the device then look like?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczNDk1NzE5OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/900,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczNzI3MzA2Mw==,ditto,737273063,900,NA,mariolpantunes,1313150,Mário Antunes,mariolpantunes@gmail.com,NA,2020-12-02T14:43:16Z,2020-12-02T14:43:16Z,"Hi @thjaeckle, I will provide the required information:

1. Here is a sample of the JSON used to create a connection:

```json
{
	""targetActorSelection"": ""/system/sharding/connection"",
	""headers"": {
		""aggregate"": false
	},
	""piggybackCommand"": {
		""type"": ""connectivity.commands:createConnection"",
		""connection"": {
			""id"": ""connection_id"",
			""connectionType"": ""amqp-10"",
			""connectionStatus"": ""open"",
			""uri"": ""uri"",
			""failoverEnabled"": true,
			""sources"": [{
				""addresses"": [""control/tenant/replies""],
				""authorizationContext"": [""nginx:tenant""],
				""headerMapping"": {
					""correlation-id"": ""{{ header:correlation-id }}"",
					""status"": ""{{ header:status }}"",
					""content-type"": ""{{ header:content-type }}""
				}
			}],
			""targets"": [{
				""address"": ""control/tenant/{{ thing:name }}"",
				""authorizationContext"": [""nginx:tenant""],
				""topics"": [""_/_/things/live/messages""],
				""headerMapping"": {
					""message-id"": ""{{ header:correlation-id }}"",
					""subject"": ""{{ topic:subject }}"",
					""content-type"": ""application/vnd.eclipse.ditto+json"",
					""reply-to"": ""control/tenant/replies""
				}
			}]
		}
	}
}
```

2. Yes, that is the scenario.
3. Sample from the reply message:
```json
{
	""topic"": ""drtenant3/drdummy/things/live/messages/command"",
	""headers"": {
		""content-type"": ""application/json"",
		""correlation-id"": ""command-and-control""
	},
	""path"": ""/inbox/messages/command"",
	""value"": {
		""status"": ""200 OK""
	},
	""status"": 200
}
```

*edit by @thjaeckle formatted JSON snippets in order to be able to read them","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczNzI3MzA2Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/900,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczODA3NDcyMA==,ditto,738074720,900,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-12-03T15:21:46Z,2020-12-03T15:21:46Z,"And how long does the device need in order to respond to the Ditto message with a response? 
Looks like a timeout could be the problem (default timeout for POST /messages in Ditto is 10 seconds).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczODA3NDcyMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/900,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczODE3NzIwOQ==,ditto,738177209,900,NA,mariolpantunes,1313150,Mário Antunes,mariolpantunes@gmail.com,NA,2020-12-03T17:53:18Z,2020-12-03T17:53:18Z,"The reply is almost instantaneous.
The device is a dummy sensor.

Some messages (command replies) pass without any issue. But the majority of them is blocked with that error. Whenever the dummy device replies that log appears on the logs","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczODE3NzIwOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/900,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczODYwNjg0Mg==,ditto,738606842,900,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-12-04T07:00:22Z,2020-12-04T07:00:22Z,"I think I am still missing some context:
* do you set an explicit ""timeout"" when sending the message via `POST /messages`?
* do you re-use the ""correlation-id"" `""command-and-control""`? you cannot do this - the correlation-ids have to be unique (at least in a timeframe of 1 minute)
* is there the possibility that the dummy sensor answers several times to one single message?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczODYwNjg0Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/900,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczODY0MDUzMQ==,ditto,738640531,900,NA,mariolpantunes,1313150,Mário Antunes,mariolpantunes@gmail.com,NA,2020-12-04T08:25:29Z,2020-12-04T08:25:29Z,"I will reply to each one of the topics:
1. We define a timeout in the POST message of 60 seconds

2. Maybe that is the issue, we are using the correlation-id command and control for everything. I will try different strings. Based on the examples I thought it was mandatory to be command and control.

3. It only replies once.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczODY0MDUzMQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/900,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczODcwNDU2OA==,ditto,738704568,900,NA,mariolpantunes,1313150,Mário Antunes,mariolpantunes@gmail.com,NA,2020-12-04T10:27:52Z,2020-12-04T10:27:52Z,"I tried to change the correlation id (random string generated with python) on the POST message (the dummy_sensor reads replies to the same correlation id).
However, the issue still remains.

This is the code that I use for the command:
```
def get_random_string(length):
    letters = string.ascii_lowercase
    result_str = ''.join(random.choice(letters) for i in range(length))
    return result_str
```

```
def send_command(args, command, timeout=60):
    headers = {'x-correlation-id': get_random_string(8)}
    params = (('timeout', timeout),)
    url = '{}/api/2/things/{}:{}/inbox/messages/command'.format(args.u, args.t, args.d)
    data = json.dumps(command)
    t = time.time_ns()
    response = requests.post(url=url, headers=headers, params=params, data=data, auth=(args.t, args.p))
    logger.info('%d,%f',command['id'],t)
    logger.debug(response)
    logger.info(response.text)
```

This is the code that replies to the command:

```
def on_message(client, userdata, msg):
    t = time.time_ns()
    logger.info(msg.payload)
    incoming = json.loads(msg.payload)
    topic = incoming['topic']
    path = incoming['path']
    value = incoming['value']
    correlation_id = incoming['headers']['correlation-id']
    data = json.loads(base64.b64decode(value))
    logger.debug('On message {}'.format(data))
    global rate
    rate = data['rate']
    logger.info('%d,%f', data['id'], t)
    reply_topic = 'control///res/013command-and-controlreplies/200'
    msg = {'topic': topic,
        'headers': {'content-type': 'application/json',
        'correlation-id': correlation_id},
        'path': path,
        'value': {'status': '200 OK'},
        'status': 200}
    print(msg)
    client.publish(reply_topic, json.dumps(msg), qos=0)
    return
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczODcwNDU2OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/900,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczODc5OTIwOQ==,ditto,738799209,900,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-12-04T13:59:54Z,2020-12-04T13:59:54Z,"`... reply_topic = 'control///res/013command-and-controlreplies ...` 

That is wrong, via Hono MQTT, you need to reply on the topic with the actual `req-id`, you can't use a static value here, see also:
https://www.eclipse.org/hono/docs/user-guide/mqtt-adapter/#sending-a-response-to-a-command-authenticated-device

Which example did you use in order to build your setup on? Seems like there are some things in there which can be misunderstood ;)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczODc5OTIwOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/900,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczODk0NzgwMg==,ditto,738947802,900,NA,mariolpantunes,1313150,Mário Antunes,mariolpantunes@gmail.com,NA,2020-12-04T18:34:31Z,2020-12-04T18:34:31Z,"Thanks for the reply, I do not found req-id within the headers of the message.
From here do I read the req-id?

I used this tutorial: https://www.eclipse.org/ditto/2018-12-05-example-command-and-control.html","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczODk0NzgwMg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/900,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczODk1ODEwOA==,ditto,738958108,900,NA,mariolpantunes,1313150,Mário Antunes,mariolpantunes@gmail.com,NA,2020-12-04T18:56:39Z,2020-12-04T18:56:39Z,"Based on your comment I have updated the function that replies to the command:

```
def on_message(client, userdata, msg):
    t = time.time_ns()
    logger.info('Incoming topic: %s', msg.topic)
    #logger.info(msg.payload)
    incoming = json.loads(msg.payload)
    topic = incoming['topic']
    path = incoming['path']
    value = incoming['value']
    correlation_id = incoming['headers']['correlation-id']

    data = json.loads(base64.b64decode(value))
    logger.debug('On message {}'.format(data))
    global rate
    rate = data['rate']

    #logger.info('%d,%f', data['id'], t)
    
    #reply_topic = 'control///res/013command-and-controlreplies/200'
    req_id = msg.topic.split('/')[4]
    reply_topic = 'command///res/{}/200'.format(req_id)
    
    #msg = {'topic': topic,
    #    'headers': {'content-type': 'application/json',
    #    'correlation-id': correlation_id},
    #    'path': path,
    #    'value': {'status': '200 OK'},
    #    'status': 200}
    #print(msg)
    logger.info('Topic %s', reply_topic)
    
    msg={'status': 200}
    logger.info(msg)
    client.publish(reply_topic, json.dumps(msg), qos=0)
    return
```


But the code does not work as well, the error is bellow:


```2020-12-04 18:55:07,581 INFO  [wofaxcfx] o.e.d.s.g.s.a.p.PreAuthenticatedAuthenticationProvider  - Pre-authentication has been applied resulting in AuthorizationContext <ImmutableAuthorizationContext [type=pre-authenticated-http, authorizationSubjects=[nginx:drtenant3]]>.
2020-12-04 18:55:07,584 INFO  [wofaxcfx] o.e.d.s.m.c.a.ConciergeForwarderActor akka://ditto-cluster/user/gatewayRoot/conciergeForwarder - Forwarding signal with ID <drtenant3:drdummy> and type <messages.commands:thingMessage> to concierge enforcer
2020-12-04 18:55:07,584 INFO  [wofaxcfx] o.e.d.s.m.a.AcknowledgementAggregatorActor akka://ditto-cluster/user/$Gi/ackr0-wofaxcfx - Starting to wait for all requested acknowledgements <[live-response]> for a maximum duration of <PT1M>.
2020-12-04 18:55:11,587 INFO  [mespbdtu] o.e.d.s.m.a.AcknowledgementAggregatorActor akka://ditto-cluster/user/$Fi/ackr0-mespbdtu - Timed out waiting for all requested acknowledgements, completing Acknowledgements with timeouts...
2020-12-04 18:55:11,587 INFO  [mespbdtu] o.e.d.s.g.e.a.HttpRequestActor akka://ditto-cluster/user/$Fi - Got <ReceiveTimeout> when a response was expected after timeout <PT1M>.
2020-12-04 18:55:11,588 INFO  [mespbdtu] o.e.d.s.g.e.a.HttpRequestActor akka://ditto-cluster/user/$Fi - DittoRuntimeException <gateway:command.timeout>: <The Command reached the specified timeout of 60,000ms.>.
2020-12-04 18:55:11,588 INFO  [mespbdtu] o.e.d.s.g.e.d.RequestResultLoggingDirective  - StatusCode of request POST '/api/2/things/drtenant3:drdummy/inbox/messages/command?timeout=60' was: 408
2020-12-04 18:55:11,588 INFO  [] a.a.RepointableActorRef akka://ditto-cluster/user/$Fi - Message [org.eclipse.ditto.signals.commands.things.ThingErrorResponse] to Actor[akka://ditto-cluster/user/$Fi#1343860784] was not delivered. [5] dead letters encountered. If this is not an expected behavior then Actor[akka://ditto-cluster/user/$Fi#1343860784] may have terminated unexpectedly. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
2020-12-04 18:55:11,588 WARN  [mespbdtu] o.e.d.s.g.e.d.RequestTimeoutHandlingDirective  - Encountered slow HTTP request which took over <1000> ms: <60025> ms!```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczODk1ODEwOA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/900,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczOTEzNjMwMA==,ditto,739136300,900,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-12-05T06:52:21Z,2020-12-05T06:52:21Z,"> ```#msg = {'topic': topic,
> #    'headers': {'content-type': 'application/json',
> #    'correlation-id': correlation_id},
> #    'path': path,
> #    'value': {'status': '200 OK'},
> #    'status': 200}
> #print(msg)
> logger.info('Topic %s', reply_topic)
> 
> msg={'status': 200}
> ```

Why did you change the response format?
Please change back to the commented out `msg`  and you should be good.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczOTEzNjMwMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/900,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczOTc1NDU3Nw==,ditto,739754577,900,NA,mariolpantunes,1313150,Mário Antunes,mariolpantunes@gmail.com,NA,2020-12-07T08:19:17Z,2020-12-07T08:19:17Z,"I think I was able to fix it:

```
def on_message(client, userdata, msg):
    t = time.time_ns()
    logger.info('Incoming topic: %s', msg.topic)
    #logger.info(msg.payload)
    incoming = json.loads(msg.payload)
    topic = incoming['topic']
    path = incoming['path']
    value = incoming['value']
    correlation_id = incoming['headers']['correlation-id']

    data = json.loads(base64.b64decode(value))
    logger.debug('On message {}'.format(data))
    global rate
    rate = data['rate']

    #logger.info('%d,%f', data['id'], t)
    
    #reply_topic = 'control///res/013command-and-controlreplies/200'
    req_id = msg.topic.split('/')[4]
    reply_topic = 'control///res/{}/200'.format(req_id)
    
    msg = {'topic': topic,
        'headers': {'content-type': 'application/json',
        'correlation-id': correlation_id},
        'path': path,
        'value': {'status': '200 OK'},
        'status': 200}
    #print(msg)
    logger.info('Topic %s', reply_topic)
    
    #msg={'status': 200}
    logger.info(msg)
    client.publish(reply_topic, json.dumps(msg), qos=0)
    return
```
I did change the response on the previous attempted since the [link ](https://www.eclipse.org/hono/docs/user-guide/mqtt-adapter/#sending-a-response-to-a-command-authenticated-device) had this example:

```
mosquitto_pub -u 'gw@DEFAULT_TENANT' -P gw-secret -t command//4711/res/1010f8ab0b53-bd96-4d99-9d9c-56b868474a6a/200 -m '{""lumen"": 200}'
```

Where the message was quite simple.
The main issue was that the reply topic is ` 'control///res/{}/200'.format(req_id)` and not command. We are still using an older version of Hono and Ditto.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczOTc1NDU3Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/900,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczOTc2MDg1NQ==,ditto,739760855,900,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-12-07T08:30:13Z,2020-12-07T08:30:13Z,"Glad to hear that you solved it 👍 
Yes, the Hono topics changed before 1.0 was released, so the blogpost from 2018 is probably also outdated.

The most up-to-date documentation on the Hono-Ditto integration is located in the IoT Packages project:
https://www.eclipse.org/packages/packages/cloud2edge/tour/","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczOTc2MDg1NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/903,https://api.github.com/repos/eclipse-ditto/ditto/issues/903,ditto,754133412,903,CloudEvents route follow up tasks,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2020-12-01T07:42:55Z,2020-12-10T09:24:24Z,"After the first part of adding a `/cloudevents` route done in #889 and PR #895 there are some follow ups:
- [x] in addition to `application/json` content-type, also accept the Ditto Protocol content type `application/vnd.eclipse.ditto+json` (#905)
- [x] also accept content-types suffixed with a charset (#905)
- [x] make the `ce-dataschema` optional - but if it is provided, it must start with `ditto:` (#905)
- [x] enhance OpenAPI docs adding the new `/cloudevents` route and providing the Ditto Protocol JSON schema inline in the OpenAPI doc (#911)
- [ ] provide unit tests for HTTP route
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/903/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/903,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczODY4MDA0MA==,ditto,738680040,903,NA,ctron,202474,Jens Reimann,ctron@dentrassi.de,NA,2020-12-04T09:37:50Z,2020-12-04T09:37:50Z,"I created PR https://github.com/eclipse/ditto/pull/905 … following up in content-type suffix , optional data schema and additional content type.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczODY4MDA0MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/903,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc0MjM5NTM2Mw==,ditto,742395363,903,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2020-12-10T09:24:23Z,2020-12-10T09:24:23Z,@ctron I added OpenAPI documetation in #911 (wanted to have that in the release and the docs for the release).,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc0MjM5NTM2Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/904,https://api.github.com/repos/eclipse-ditto/ditto/issues/904,ditto,754141229,904,Adjust response handling for CloudEvents route,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2020-12-01T07:48:49Z,2020-12-10T12:15:04Z,"Currently with #889 and #895 the `/cloudevents` POST endpoint acts as ""sink"" only:
* accepting (HTTP code 202) all successfully persisted Ditto Protocol commands
* for errors (e.g. missing permissions, conflict, other ""bad requests), responding with the corresponding HTTP code and the error payload

However, no response payload in ""Ditto Protocol JSON"" is returned.
The [cloud event spec for HTTP](https://github.com/cloudevents/spec/blob/master/http-protocol-binding.md#3-http-message-mapping) defines:

> The event binding is identical for both HTTP request and response messages.

IMO the route's response behavior has to be adjusted:
* the content-mode must be preserved (when invocation did happen with ""structured content mode"", the response must be also in ""structured content mode"")
* the passed-in cloudevent headers have to be preserved and returned in the HTTP response
* the response payload must also be in Ditto Protocol JSON
   * the response payload could also be defined by specifying the `Accept` HTTP header and applying content negotiation","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/904/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/904,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczODY0MjA4NA==,ditto,738642084,904,NA,ctron,202474,Jens Reimann,ctron@dentrassi.de,NA,2020-12-04T08:29:12Z,2020-12-04T08:29:12Z,"To my understanding the following:

> The event binding is identical for both HTTP request and response messages.

Simply states that the cloud event binding for HTTP **can** be used the same way for request and response. However there is no requirement that the endpoint must response with a cloud event.

Taking a look at the example code from cloudevents seems to confirm this:

https://github.com/cloudevents/sdk-rust/blob/6f5a767f196cea6bf732cde9680c1c233fbddf80/example-projects/actix-web-example/src/main.rs#L6-L11

https://github.com/cloudevents/sdk-python/blob/b83bfc58eb851f9b91a96f4665754d9bb82cd74e/samples/http-json-cloudevents/json_sample_server.py#L33

However, I think it may make sense for Ditto to respond with something other than ""ok, I processed the event"". If Ditto can provide additional information, as the outcome of the operation, then it could provide this.

I am not sure how the `Accept` header fits into the picture. I don't think the header is used by the cloud events spec. And so I don't think Ditto should introduce a new concept, which is not covered by the HTTP cloud events mapping.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDczODY0MjA4NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/904,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc0MjQ4NDcwMw==,ditto,742484703,904,NA,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,NA,2020-12-10T12:15:04Z,2020-12-10T12:15:04Z,"The cloudevents endpoint cannot support query, message and search commands without responses. I'm fine with not supporting those, especially search commands where additional session management would be necessary, but the error message should probably be clearer than ""Query commands must not have the header 'response-required' set to 'false'"".","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc0MjQ4NDcwMw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/914,https://api.github.com/repos/eclipse-ditto/ditto/issues/914,ditto,762141260,914,Add a built-in acknowledgement label for search index update,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,CLOSED,2020-12-11T09:31:41Z,2020-12-23T09:23:39Z,"The search index is only eventually consistent. Applications that rely on search to for twin interactions will need to know when a change is reflected in the search index. It is straightforward to support that by adding a built-in acknowledgement label ""search-persisted"" for twin modify commands and issue acknowledgements after search index update completes.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/914/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/921,https://api.github.com/repos/eclipse-ditto/ditto/issues/921,ditto,770108683,921,Allow to work with all possible HTTP status codes,jufickel-b,17162397,Juergen Fickel,,CLOSED,2020-12-17T14:46:57Z,2021-01-20T08:48:54Z,"Currently the `HttpStatusCode` enum has constants for all major HTTP status codes. However there might be scenarios where one defines a custom code like for example 209.

This is relevant for at least `HttpPublisherActor` which produces a `MessageSendingFailedException` if it publishes a signal to a HTTP endpoint and that endpoint's response status code is not reflected `HttpStatusCode` constant.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/921/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/921,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc2MzQzOTIwNQ==,ditto,763439205,921,NA,jufickel-b,17162397,Juergen Fickel,,NA,2021-01-20T08:48:54Z,2021-01-20T08:48:54Z,Deprecated enum `HttpStatusCode` and replaced it with class `HttpStatus` where possible.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc2MzQzOTIwNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/926,https://api.github.com/repos/eclipse-ditto/ditto/issues/926,ditto,772181281,926,Support injection of temporary policy subjects from JWTs,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,CLOSED,2020-12-21T13:45:04Z,2021-02-25T15:31:27Z,"After #890, temporary authorization subjects based on expiring JWT is possible. However, adding such subjects require WRITE permission on the policy. It would be better to inject the temporary subjects when the user presents a JWT without elevated privilege.

One way to achieve it:
- Add HTTP API to inject authorization subjects based on the JWT in the request
- Add a new permission EXECUTE to authorize subject injection","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/926/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/926,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NTk0NzkyMg==,ditto,785947922,926,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2021-02-25T14:46:44Z,2021-02-25T14:46:44Z,"Just to check back about the new situation with #512 being implemented now. If it's not already implemented, should there be a follow up for this issue to also provide ability to parse temporary subjects from JWT claims?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NTk0NzkyMg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/926,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NTk4ODI1MA==,ditto,785988250,926,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-02-25T15:31:27Z,2021-02-25T15:31:27Z,"It is already implemented as part of this PR, see also the blogpost (and documentation) about it: 
https://www.eclipse.org/ditto/2021-01-22-policy-subject-activate-token-integration.html","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NTk4ODI1MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/930,https://api.github.com/repos/eclipse-ditto/ditto/issues/930,ditto,774318336,930,Docs on Protocol/Create+Modify still use ACL concept,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,CLOSED,2020-12-24T10:28:11Z,2021-04-29T17:41:38Z,"In the current version of the docs on Ditto Protocol e.g. for Thing Creation the description still uses ACL to describe the auth context. This should be updated to policies. *Using this issue to remind me.*

https://www.eclipse.org/ditto/protocol-specification-things-create-or-modify.html","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/930/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/930,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgyOTQ1OTgxMQ==,ditto,829459811,930,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-04-29T17:41:30Z,2021-04-29T17:41:30Z,Fixed with upcoming Ditto 2.0 changes. ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgyOTQ1OTgxMQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/935,https://api.github.com/repos/eclipse-ditto/ditto/issues/935,ditto,782059871,935,AMQP 1.0 message interpreted as JMS,tobias-zeptio,72976141,Tobias Månsson,,CLOSED,2021-01-08T11:41:06Z,2021-01-12T14:57:35Z,"When I publish a message using the rhea library to a Artemis broker, ditto receives the message but interprets it as JMS.
```
Received JmsMessage from AMQP 1.0: JmsObjectMessageFacade { org.apache.qpid.jms.provider.amqp.message.AmqpJmsObjectMessageFacade@e00d9d45 } with Properties: java.util.Collections$3@c79393a3 and AckType 1
Received message at 'iot.hdt.in' of unsupported type (org.apache.qpid.jms.message.JmsObjectMessage) with headers: {to=iot.hdt.in, absolute-expiry-time=1610104746153}
Received message from AMQP 1.0 with externalMessageHeaders: {absolute-expiry-time=1610104746153, to=iot.hdt.in}
Received message from AMQP 1.0 with payload: binary
``` 
This results in both payload, headers and content-type to be null in the `mapToDittoProtocolMsg` payload mapper.
Is there any way to configure the connection to interpret the message as AMQP?
I have set `""connectionType"": ""amqp-10""`.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/935/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/935,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc1Njc0MTIzMA==,ditto,756741230,935,NA,ffendt,2587759,Florian Fendt,,NA,2021-01-08T12:55:03Z,2021-01-08T12:55:03Z,"Hi there,
`JmsMessage` is the correct datatype used by the AMQP client Ditto uses (qpid).

The signature of the mapper method is:
```
function mapToDittoProtocolMsg(
  headers,
  textPayload,
  bytePayload,
  contentType
)
```
Is `bytePayload` also `null` in your case? 
Does the message you send have content? 
Can you send an arbitrary header with your message (or maybe just a known header like `content-type`) and verify if it is listed in the log line ""Received message from AMQP 1.0 with externalMessageHeaders""?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc1Njc0MTIzMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/935,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc1NzY2NDA3NA==,ditto,757664074,935,NA,tobias-zeptio,72976141,Tobias Månsson,,NA,2021-01-11T07:01:58Z,2021-01-11T07:01:58Z,"Oh, I see. So it will always say JmsMessage from AMQP 1.0? If, I think that's a bit confusing. But maybe it's just me...

I was sending a javascript object using rhea, expecting it to convert that to JSON. But maybe it doesn't. After converting the object to a string and sending that as the message it worked.

Still confused about the message format and why headers and contentType was null.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc1NzY2NDA3NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/935,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc1NzY5OTUyOQ==,ditto,757699529,935,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-01-11T08:21:15Z,2021-01-11T08:21:15Z,"> If, I think that's a bit confusing. But maybe it's just me...

Indeed - however, this is the concept of the used [Qpid AMQP 1.0 client](https://qpid.apache.org/components/jms/index.html) which is unfortunately the only usable AMQP 1.0 client for Java.
This client ""wraps"" the AMQP 1.0 interaction via JMS API, so the Ditto codebase has no other option than using JMS API which could lead to confusion in e.g. logs.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc1NzY5OTUyOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/944,https://api.github.com/repos/eclipse-ditto/ditto/issues/944,ditto,789775732,944,Include detail message in equals and hashCode method of DittoRuntimeException,jufickel-b,17162397,Juergen Fickel,,CLOSED,2021-01-20T08:54:19Z,2021-06-22T14:13:34Z,Currently the detail message (aka message) of a `DittoRuntimeException` is not regarded when checking for equality or generating the hash code. This is a shortcoming as the message may be freely set when building a DittoRuntimeException. Two exceptions where everything is equal but the messages are not equal after all.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/944/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/947,https://api.github.com/repos/eclipse-ditto/ditto/issues/947,ditto,795090349,947,"Merging ""extraFields"" with modified events did use the data from ""extra"" to overwrite actually changed data from the event",raujonas,25148277,Jonas Rau,,CLOSED,2021-01-27T13:13:28Z,2021-02-08T15:48:41Z,"Hello. I have a question about using the ""extraFields"" parameter together with server sent events.

Let's say I want to retrieve all attributes and all features together with the changed data. I specified the event source and the extraFields like this:
```
let eventSourceInitDict = { headers: { Authorization: `Bearer ${tokenResponse.access_token}` }, withCredentials: true };
let es = new EventSource(environment.dittoUrl + '/things?extraFields=features,attributes', eventSourceInitDict);
```

For testing I used the example thing from the documentation which looks like this at the beginning:
```json
{
    ""thingId"": ""org.eclipse.ditto:my-coffeebrewer"",
    ""policyId"": ""org.eclipse.ditto:my-coffeebrewer"",
    ""definition"": ""com.acme:coffeebrewer:0.1.0"",
    ""attributes"": {
        ""manufacturer"": ""ACME demo corp."",
        ""location"": ""Berlin, main floor"",
        ""serialno"": ""42"",
        ""model"": ""Speaking coffee machine""
    },
    ""features"": {
        ""coffee-brewer"": {
            ""properties"": {
                ""brewed-coffees"": 0
            }
        },
        ""water-tank"": {
            ""properties"": {
                ""configuration"": {
                    ""smartMode"": true
                }
            }
        }
    }
}
```

In the next step I updated the attribute ""manufacturer"" to the value ""ACME demo corp. test test test"". I received all features from the server sent event like expected. However, there's only the updated attribute included and not the other ones:
```json
{
  ""thingId"": ""org.eclipse.ditto:my-coffeebrewer"",
  ""attributes"": {
    ""manufacturer"": ""ACME demo corp. test test test""
  },
  ""features"": {
    ""coffee-brewer"": {
      ""properties"": {
        ""brewed-coffees"": 0
      }
    },
    ""water-tank"": {
      ""properties"": {
        ""configuration"": {
          ""smartMode"": true
        }
      }
    }
  }
}
```

The same thing happens if I try to update a feature instead. If I try to update the feature ""coffee-brewer"" to 
```json
{
  ""properties"": {
    ""brewed-coffees"": 100
  }
}
```
then all attributes are included but the other features are missing, I receive the following from the sse:
```json
{
  ""thingId"": ""org.eclipse.ditto:my-coffeebrewer"",
  ""attributes"": {
    ""manufacturer"": ""ACME demo corp. test test test"",
    ""location"": ""Berlin, main floor"",
    ""serialno"": ""42"",
    ""model"": ""Speaking coffee machine""
  },
  ""features"": {
    ""coffee-brewer"": {
      ""properties"": {
        ""brewed-coffees"": 100
      }
    }
  }
}
```

I'm aware that it might not be the best idea to return all features and attributes on every change of the thing, but my question is, is this the expected behaviour when all features and attributes are included in the extraFields like this: `/things?extraFields=features,attributes` or did I miss something here to retrieve the missing attributes and features in this case?

I don't know if I've missed something crucial here and any clarification is very appreciated. Thank you very much!

Final thing looks like this:

```json
{
    ""thingId"": ""org.eclipse.ditto:my-coffeebrewer"",
    ""policyId"": ""org.eclipse.ditto:my-coffeebrewer"",
    ""definition"": ""com.acme:coffeebrewer:0.1.0"",
    ""attributes"": {
        ""manufacturer"": ""ACME demo corp. test test test"",
        ""location"": ""Berlin, main floor"",
        ""serialno"": ""42"",
        ""model"": ""Speaking coffee machine""
    },
    ""features"": {
        ""coffee-brewer"": {
            ""properties"": {
                ""brewed-coffees"": 100
            }
        },
        ""water-tank"": {
            ""properties"": {
                ""configuration"": {
                    ""smartMode"": true
                }
            }
        }
    }
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/947/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/947,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc2OTYxMDYyMQ==,ditto,769610621,947,NA,ffendt,2587759,Florian Fendt,,NA,2021-01-29T06:37:58Z,2021-01-29T06:37:58Z,"Hi @raujonas,

thank you very much for taking the time to create a detailed explanation for your finding 👍. This looks like a bug to me. The SSE message you receive should be returned in the outcome you expected. I.e. an update on a single attribute should return all attributes when registered using `extraFields=attributes`.

We're currently focusing on getting Ditto 2.0.0 ready for a release. I don't know if we'll be tackle this bug early enough to get it in there.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc2OTYxMDYyMQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/964,https://api.github.com/repos/eclipse-ditto/ditto/issues/964,ditto,805385551,964,Notify subscribers when their authorization subjects are about to expire,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,CLOSED,2021-02-10T10:32:07Z,2021-03-04T18:33:59Z,"#890 and #926 added temporary subjects in policies based on expiring JSON web tokens. For the subscribers using such subjects, it is convenient to get an announcement shortly before subject expiration so that they can renew their subjects with a fresh JSON web token.
- Add a new signal type ""Announcement""
- Add to policy expiry a configurable duration for announcements before expiration
- Publish announcements when subjects are about to expire","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/964/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/971,https://api.github.com/repos/eclipse-ditto/ditto/issues/971,ditto,809919843,971,Connection Target Error ,Geonjae-Joo,62494715,,,CLOSED,2021-02-17T07:04:41Z,2021-03-10T01:44:25Z,"Hi, I was using eclipse iot Package v0.1.2 (which includes ditto:1.3, hono:1.3.19) and all functions worked fine.
In order to use ""desiredProperties"" I upgraded the version to 0.1.3 ( ditto:1.5.1, hono: 1.4.21),
Then I got a problem sending out ""command"" to device via hono as below. 

Connection Log:
target successfully dispatched, filtered and mapped, but can not publish

![image](https://user-images.githubusercontent.com/62494715/108167579-3f0fb280-7139-11eb-8d79-843695530a7f.png)

Connection:

![image](https://user-images.githubusercontent.com/62494715/108167882-bc3b2780-7139-11eb-8bf9-59b01095b772.png)

Pleas help me out,
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/971/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/971,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4MDM2MTE5Ng==,ditto,780361196,971,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-02-17T07:22:55Z,2021-02-17T07:22:55Z,"@Geonjae-Joo the message ""timed out waiting for credit to send Message"" normally indicates that in Hono currently the device is not connected / subscribed to receive commands.
Are you sure that a device with the deviceId `Xavier-1` is connected via Hono and subscribed for commands?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4MDM2MTE5Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/971,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4MDM2NzYzOQ==,ditto,780367639,971,NA,Geonjae-Joo,62494715,,,NA,2021-02-17T07:37:41Z,2021-02-17T07:37:41Z,"@thjaeckle  Oh I am sorry I posted wrong log

![image](https://user-images.githubusercontent.com/62494715/108171129-6917a380-713e-11eb-86f3-b8ce4a5d08da.png)

This is the error.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4MDM2NzYzOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/971,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4MDYzMzM4MQ==,ditto,780633381,971,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-02-17T15:27:15Z,2021-02-17T15:27:15Z,"@Geonjae-Joo did you verify that Hono is consuming messages and the amqp 10 network is working correctly?
I don't see how this connection problem would be related to Ditto. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4MDYzMzM4MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/971,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4Mzg2MjI2Ng==,ditto,783862266,971,NA,Geonjae-Joo,62494715,,,NA,2021-02-23T04:06:53Z,2021-02-23T04:06:53Z,"@thjaeckle Yeap, I am sure the codes are working on version eclipse-iot 0.1.2 (which includes ditto:1.3, hono:1.3.19) package.
I tried ( ditto:1.5.1, hono: 1.3.19), but it shows the same error as above. I have no idea what is wrong. Do you have any suggestion I can try to solve this error?
 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4Mzg2MjI2Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/971,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NDcwODU4OQ==,ditto,784708589,971,NA,Geonjae-Joo,62494715,,,NA,2021-02-24T02:46:06Z,2021-02-24T02:46:06Z,"This  is my connection command by the way.


curl -i -X POST -u devops:${DITTO_DEVOPS_PWD} -H 'Content-Type: application/json' --data '{
  ""targetActorSelection"": ""/system/sharding/connection"",
  ""headers"": {
    ""aggregate"": false
  },
  ""piggybackCommand"": {
    ""type"": ""connectivity.commands:createConnection"",
    ""connection"": {
      ""id"": ""hono-connection-for-'""${HONO_TENANT}""'"",
      ""connectionType"": ""amqp-10"",
      ""connectionStatus"": ""open"",
      ""uri"": ""amqp://consumer%40HONO:verysecret@'""${RELEASE}""'-dispatch-router-ext:15672"",
      ""failoverEnabled"": true,
      ""sources"": [
        {
          ""addresses"": [
            ""telemetry/'""${HONO_TENANT}""'"",
            ""event/'""${HONO_TENANT}""'""
          ],
          ""authorizationContext"": [
            ""pre-authenticated:hono-connection""
          ],
          ""enforcement"": {
            ""input"": ""{{ header:device_id }}"",
            ""filters"": [
              ""{{ entity:id }}""
            ]
          },
          ""headerMapping"": {
            ""hono-device-id"": ""{{ header:device_id }}"",
            ""content-type"": ""{{ header:content-type }}""
          },
          ""replyTarget"": {
            ""enabled"": true,
            ""address"": ""{{ header:reply-to }}"",
            ""headerMapping"": {
              ""to"": ""command/'""${HONO_TENANT}""'/{{ header:hono-device-id }}"",
              ""subject"": ""{{ header:subject | fn:default(topic:action-subject) | fn:default(topic:criterion) }}-response"",
              ""correlation-id"": ""{{ header:correlation-id }}"",
              ""content-type"": ""{{ header:content-type | fn:default('""'""'application/vnd.eclipse.ditto+json'""'""') }}""
            },
            ""expectedResponseTypes"": [
              ""response"",
              ""error""
            ]
          },
          ""acknowledgementRequests"": {
            ""includes"": [],
            ""filter"": ""fn:filter(header:qos,'""'""'ne'""'""','""'""'0'""'""')""
          }
        },
        {
          ""addresses"": [
            ""command_response/'""${HONO_TENANT}""'/replies""
          ],
          ""authorizationContext"": [
            ""pre-authenticated:hono-connection""
          ],
          ""headerMapping"": {
            ""content-type"": ""{{ header:content-type }}"",
            ""correlation-id"": ""{{ header:correlation-id }}"",
            ""status"": ""{{ header:status }}""
          },
          ""replyTarget"": {
            ""enabled"": false,
            ""expectedResponseTypes"": [
              ""response"",
              ""error""
            ]
          }
        }
      ],
     ""targets"": [
        {
          ""address"": ""command/'""${HONO_TENANT}""'"",
          ""authorizationContext"": [
            ""pre-authenticated:hono-connection""
          ],
          ""topics"": [
            ""_/_/things/live/commands"",
            ""_/_/things/live/messages""
          ],
          ""headerMapping"": {
            ""to"": ""command/'""${HONO_TENANT}""'/{{ thing:id }}"",
            ""subject"": ""{{ header:subject | fn:default(topic:action-subject) }}"",
            ""content-type"": ""{{ header:content-type | fn:default('""'""'application/vnd.eclipse.ditto+json'""'""') }}"",
            ""correlation-id"": ""{{ header:correlation-id }}"",
            ""reply-to"": ""{{ fn:default('""'""'command_response/'""${HONO_TENANT}""'/replies'""'""') | fn:filter(header:response-required,'""'""'ne'""'""','""'""'false'""'""') }}""
          }
        },
        {
          ""address"": ""command/'""${HONO_TENANT}""'"",
          ""authorizationContext"": [
            ""pre-authenticated:hono-connection""
          ],
          ""topics"": [
            ""_/_/things/twin/events"",
            ""_/_/things/live/events""
          ],
          ""headerMapping"": {
            ""to"": ""command/'""${HONO_TENANT}""'/{{ thing:id }}"",
            ""subject"": ""{{ header:subject | fn:default(topic:action-subject) }}"",
            ""content-type"": ""{{ header:content-type | fn:default('""'""'application/vnd.eclipse.ditto+json'""'""') }}"",
            ""correlation-id"": ""{{ header:correlation-id }}""
          }
        }
      ]
    }
  }
}' http://${DITTO_API_IP}:${DITTO_API_PORT_HTTP}/devops/piggyback/connectivity

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NDcwODU4OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/971,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NDg0MTE0Ng==,ditto,784841146,971,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-02-24T06:59:39Z,2021-02-24T06:59:39Z,"> @thjaeckle Yeap, I am sure the codes are working on version eclipse-iot 0.1.2 (which includes ditto:1.3, hono:1.3.19) package.

That's not what I asked .. are you sure that all AMQP and Hono containers are up and running?

One more thing to try out: do you have the same problem if you start a new cluster instead of updating an old one?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NDg0MTE0Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/971,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NDg0NDE3NA==,ditto,784844174,971,NA,Geonjae-Joo,62494715,,,NA,2021-02-24T07:04:55Z,2021-02-24T07:04:55Z,"![image](https://user-images.githubusercontent.com/62494715/108960647-92de4680-76b9-11eb-8678-ee3c97c06a15.png)

They are up and running well, and I double checked Device Registry in Hono and AMQP Network service url. 
I deleted the cluster and installed it several times. Got the same problem. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NDg0NDE3NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/971,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NDg0NzgwMQ==,ditto,784847801,971,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-02-24T07:11:24Z,2021-02-24T07:11:24Z,Does the other direction - sending telemetry + events from the device - work?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NDg0NzgwMQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/971,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NDg1MDMzOA==,ditto,784850338,971,NA,Geonjae-Joo,62494715,,,NA,2021-02-24T07:15:53Z,2021-02-24T07:15:53Z,"Yeap, working fine. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NDg1MDMzOA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/971,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NDg1MjM3Nw==,ditto,784852377,971,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-02-24T07:19:18Z,2021-02-24T07:19:18Z,"In your first configuration screenshot you have in the target ""headerMapping"":
```json
""to"": ""command/'""${HONO_TENANT}""'/{{ thing:name }}"",
```

In the configuration you pasted inline today you have:
```json
""to"": ""command/'""${HONO_TENANT}""'/{{ thing:id }}"",
```

So which of those is it?
And most important: which device-id has the device created in Hono? This must match the last part in the `""to""` field.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NDg1MjM3Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/971,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NDg1Mzg4Ng==,ditto,784853886,971,NA,Geonjae-Joo,62494715,,,NA,2021-02-24T07:21:39Z,2021-02-24T07:21:39Z,"Oh, I changed Hono Device registry in order to try both of them. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NDg1Mzg4Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/971,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NDg1NTI1Ng==,ditto,784855256,971,NA,Geonjae-Joo,62494715,,,NA,2021-02-24T07:23:55Z,2021-02-24T07:23:55Z,"now it is thing:id

HONO DeviceId= keti:Xavier-1
Ditto thingId= keti:Xavier-1","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NDg1NTI1Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/971,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NDg1OTQ1MA==,ditto,784859450,971,NA,Geonjae-Joo,62494715,,,NA,2021-02-24T07:30:22Z,2021-02-24T07:30:22Z,"Hono registry:
 tenant: 
![image](https://user-images.githubusercontent.com/62494715/108963356-56ace500-76bd-11eb-8c25-6f1b75f40abf.png)
device:
![image](https://user-images.githubusercontent.com/62494715/108963391-62001080-76bd-11eb-9344-d8e2be9e2ded.png)
credential:
![image](https://user-images.githubusercontent.com/62494715/108963438-6f1cff80-76bd-11eb-9b87-e2d53f88f275.png)


Ditto:
policy:
![image](https://user-images.githubusercontent.com/62494715/108963502-865bed00-76bd-11eb-9b89-e4d4b122af1c.png)
thing:
![image](https://user-images.githubusercontent.com/62494715/108963531-9378dc00-76bd-11eb-95f7-e56765ceea59.png)



","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NDg1OTQ1MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/971,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NDg2Mjg3NQ==,ditto,784862875,971,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-02-24T07:35:50Z,2021-02-24T07:35:50Z,"And just to make sure: the device consumes commands, e.g. by subscribing to Hono's correct MQTT ""command"" topic?
https://www.eclipse.org/hono/docs/user-guide/mqtt-adapter/#receiving-commands-authenticated-device","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NDg2Mjg3NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/971,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NDg2NTUwOA==,ditto,784865508,971,NA,Geonjae-Joo,62494715,,,NA,2021-02-24T07:40:32Z,2021-02-24T07:40:32Z,"Yeap, it worked just fine with the previous version 
![image](https://user-images.githubusercontent.com/62494715/108964479-dbe4c980-76be-11eb-8637-4ee53061202c.png)
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NDg2NTUwOA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/971,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NDg2OTAyNQ==,ditto,784869025,971,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-02-24T07:46:52Z,2021-02-24T07:46:52Z,"Please try out one more thing - reading the connection and therefore checking if all bash variables have successfully been resolved:
```bash
curl -i -X POST -u devops:${DITTO_DEVOPS_PWD} -H 'Content-Type: application/json' --data '{
  ""targetActorSelection"": ""/system/sharding/connection"",
  ""headers"": {
    ""aggregate"": false
  },
  ""piggybackCommand"": {
    ""type"": ""connectivity.commands:retrieveConnection"",
    ""connectionId"": ""hono-connection-for-'""${HONO_TENANT}""'""
  }
}' http://${DITTO_API_IP}:${DITTO_API_PORT_HTTP}/devops/piggyback/connectivity
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NDg2OTAyNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/971,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NDg2OTUzMw==,ditto,784869533,971,NA,Geonjae-Joo,62494715,,,NA,2021-02-24T07:47:51Z,2021-02-24T07:47:51Z,"{
""?"":{
""?"":{
""type"":""connectivity.responses:retrieveConnection"",
""status"":200,
""connection"":{
""id"":""hono-connection-for-keti-tenant-0"",
""name"":null,
""connectionType"":""amqp-10"",
""connectionStatus"":""open"",
""uri"":""amqp://consumer%40HONO:verysecret@c2e-dispatch-router-ext:15672"",
""sources"":[
{
""addresses"":[
""telemetry/keti-tenant-0"",
""event/keti-tenant-0""
],
""consumerCount"":1,
""authorizationContext"":[
""pre-authenticated:hono-connection""
],
""enforcement"":{
""input"":""{{ header:device_id }}"",
""filters"":[
""{{ entity:id }}""
]
},
""acknowledgementRequests"":{
""includes"":[
],
""filter"":""fn:filter(header:qos,'ne','0')""
},
""headerMapping"":{
""hono-device-id"":""{{ header:device_id }}"",
""content-type"":""{{ header:content-type }}""
},
""replyTarget"":{
""address"":""{{ header:reply-to }}"",
""headerMapping"":{
""content-type"":""{{ header:content-type | fn:default('application/vnd.eclipse.ditto+json') }}"",
""to"":""command/keti-tenant-0/{{ header:hono-device-id }}"",
""subject"":""{{ header:subject | fn:default(topic:action-subject) | fn:default(topic:criterion) }}-response"",
""correlation-id"":""{{ header:correlation-id }}""
},
""expectedResponseTypes"":[
""error"",
""response""
],
""enabled"":true
}
},
{
""addresses"":[
""command_response/keti-tenant-0/replies""
],
""consumerCount"":1,
""authorizationContext"":[
""pre-authenticated:hono-connection""
],
""headerMapping"":{
""content-type"":""{{ header:content-type }}"",
""correlation-id"":""{{ header:correlation-id }}"",
""status"":""{{ header:status }}""
},
""replyTarget"":{
""enabled"":false
}
}
],
""targets"":[
{
""address"":""command/keti-tenant-0"",
""topics"":[
""//things/live/commands"",
""//things/live/messages""
],
""authorizationContext"":[
""pre-authenticated:hono-connection""
],
""headerMapping"":{
""content-type"":""{{ header:content-type | fn:default('application/vnd.eclipse.ditto+json') }}"",
""to"":""command/keti-tenant-0/{{ thing:id }}"",
""reply-to"":""{{ fn:default('command_response/keti-tenant-0/replies') | fn:filter(header:response-required,'ne','false') }}"",
""subject"":""{{ header:subject | fn:default(topic:action-subject) }}"",
""correlation-id"":""{{ header:correlation-id }}""
}
},
{
""address"":""command/keti-tenant-0"",
""topics"":[
""//things/twin/events"",
""//things/live/events""
],
""authorizationContext"":[
""pre-authenticated:hono-connection""
],
""headerMapping"":{
""content-type"":""{{ header:content-type | fn:default('application/vnd.eclipse.ditto+json') }}"",
""to"":""command/keti-tenant-0/{{ thing:id }}"",
""subject"":""{{ header:subject | fn:default(topic:action-subject) }}"",
""correlation-id"":""{{ header:correlation-id }}""
}
}
],
""clientCount"":1,
""failoverEnabled"":true,
""validateCertificates"":true,
""processorPoolSize"":5,
""tags"":[
]
}
}
}
}","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NDg2OTUzMw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/971,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NDg3MTUwMQ==,ditto,784871501,971,NA,Geonjae-Joo,62494715,,,NA,2021-02-24T07:51:26Z,2021-02-24T07:51:26Z,"Yes, It looks same with my  connection creation","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NDg3MTUwMQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/971,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NDg3NDEzMg==,ditto,784874132,971,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-02-24T07:56:18Z,2021-02-24T07:56:18Z,"Connection looks all good from Ditto side 👍 
Please use [markdown code blocks](https://docs.github.com/en/github/writing-on-github/creating-and-highlighting-code-blocks#fenced-code-blocks) in the future to not loose any information (e.g. the underscores were lost in your snippet).

You could activate debug logging in Ditto by setting the environment variable `LOG_LEVEL_APPLICATION` to `DEBUG` on the `connectivity` service - maybe you get some more insight on why sending the message to Hono fails. But I fear that you get the same information as you already have: ""Delivery failed. Released by receiver"".

I suggest to ask the Hono or the Packages project for help.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NDg3NDEzMg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/971,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NDg3NDk2OQ==,ditto,784874969,971,NA,Geonjae-Joo,62494715,,,NA,2021-02-24T07:57:52Z,2021-02-24T07:57:52Z,"@thjaeckle  Thank you so much for helping. I will update the post as soon as I figure it out!
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NDg3NDk2OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/971,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5NDcxOTgwOQ==,ditto,794719809,971,NA,Geonjae-Joo,62494715,,,NA,2021-03-10T01:44:00Z,2021-03-10T01:44:00Z,"Solved!
https://github.com/eclipse/packages/issues/202 
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5NDcxOTgwOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/978,https://api.github.com/repos/eclipse-ditto/ditto/issues/978,ditto,811834195,978,[Discussion] The road to Ditto 2.0 with some breaking changes on the way,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,CLOSED,2021-02-19T08:57:30Z,2021-05-04T12:23:40Z,"As we plan to release Ditto 2.0 in the near future (March/April 2021), it's time to discuss some breaking changes helping the Ditto core team in the future development (reducing maintenance of e.g. already `@Deprecated` marked APIs) but also keep an eye on the effort that would be required by our users to migrate from Ditto 1.x to Ditto 2.x.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/978/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/978,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4MjE2OTkzNQ==,ditto,782169935,978,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-02-19T16:03:35Z,2021-02-19T16:03:35Z,"Here is what we currently foresee as ""breaking changes"" regarding our ""API compatibility""/semantic versioning definition in https://github.com/eclipse/ditto/blob/master/documentation/src/main/resources/architecture/DADR-0005-semantic-versioning.md#api-compatibility

We mainly focus on binary incompatible changes to Ditto's model classes - the HTTP APIs (in API version `2`) are not affected and are still compatible. API version `1` will be dropped as we already deprecated API version `1` some time ago.

---

## 1. remove `setDittoHeaders(DittoHeaders)` from `WithDittoHeaders`
Not every class implementing `WithDittoHeaders` should also be capable of setting `DittoHeaders`. Extract a new interface for setting `DittoHeaders`.

## 2. Rework default connection behavior of Ditto Java client
By default a newly created Ditto client shall not connect itself automatically, but only when a `connect()` method is explicitly invoked. As this requires a breaking API change, this is listed here.

## 3. Make `AbstractDittoHeaders` implement `Map<String,String>`
The functionality from AbstractMap is currently overwritten in AbstractDittoHeader's implementation, so there is no added value in extending from AbstractMap.

## 4. Java Client API handlers should return `CompletionStage` instead of `CompletableFuture`
In Ditto Java Client 1.x all APIs return a `CompletableFuture`. That is bad as the Ditto client user may complete this `CompletableFuture` by himself which could break things in the client.  
Therefore all APIs formerly returned `CompletableFuture` will return a `CompletionStage` instead - on this the Ditto client user may still call `.toCompletableFuture()` in order to get a ""new"" CompletableFuture.

## 5. Make `DittoRuntimeException` abstract
We don't want to instantiate `DittoRuntimeException` itself, but only concrete implementation with a better context about the exception.

## 6. Remove dependency of placeholders model on all signals
In order to get some dependency 

## 7. Move live signals to Ditto Java client
The `ditto-signals-*-live` modules are only used in the Java client, so move it there.

## 8. Remove API 1 from models, signals, routes
API 1 (with the ""ACL"" based authorization) will be completely removed, both from the codebase as well as from the HTTP endpoints.

## 9. Fix `EntityId`+`WithId` and remove from `Signal` interface
Not every signal actually has a `EntityId`, but `Signal` extends `WithId` -> fix that.

## 10. Enforce Non-nullable in `PolicyResponse`s
A really small one ..

## 11. Remove all APIs marked with `@Deprecated`
Most of API 1 APIs are already marked as `@Deprecated` in the Ditto codebased, but also other methods/classes for which we already have an alternative which should be used.
Delete all of them.

## 12. Remove all remaining raw types where generics should be used
Pull through generics magic.

## 13. Re-structure Ditto's maven modules + packages
The Maven modules of Ditto are often defined technically and not feature wise. In order to fix that a lot of moving/consolidation of modules and packages is required.

---

We'll add more text to the headings if you need more input on a topic, just wanted to lay out a first (rough) direction of the work on our plate for Ditto 2.0.

What is important to note:  
We do aim to provide minimal impact on updating a Ditto 1.5.x installation to a Ditto 2.0.0 installation - there should be minimal migration effort (e.g. only affecting very few configuration settings of Ditto).

---

We ask you - our community - if you have any concerns on our road towards the breaking changes Ditto 2.0.0 to ask your questions and raise your concerns here so that we can get into a discussion.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4MjE2OTkzNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/978,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgwMzc5MDYyNg==,ditto,803790626,978,NA,jufickel-b,17162397,Juergen Fickel,,NA,2021-03-22T06:11:58Z,2021-03-22T06:11:58Z,"I noticed a thing that annoys me a bit. Interface `Event` defines `getRevision()` and `setRevision()`. However, not each event even supports a revision number.

Some always return `0L` for getRevision and `this` for setRevision. My suggestion is to move this two methods into a ""mixin"" interface called `WithRevision` and let only events with an actual revision number implement it. Btw. Ditto has a type called `Revision`, why not use this instead of a `long`?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgwMzc5MDYyNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/978,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgwMzgzNTU4OA==,ditto,803835588,978,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-03-22T07:33:21Z,2021-03-22T07:33:21Z,"@jufickel-b which `Event`s are that?
Because IMO no `Event` (Ditto uses to do the ""event sourcing"" pattern *with* persisting the event before optionally publishing it to the cluster) should have no revision.
So those entities are probably not `Event`s at all but another (new) type?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgwMzgzNTU4OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/978,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgwMzgzNzUwMg==,ditto,803837502,978,NA,jufickel-b,17162397,Juergen Fickel,,NA,2021-03-22T07:36:46Z,2021-03-22T07:36:46Z,For example `org.eclipse.ditto.signals.events.connectivity.ConnectivityEvent`. Its default implementation even throws an `UnsupportedOperationException` for both methods.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgwMzgzNzUwMg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/978,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgwMzg0MDMzNg==,ditto,803840336,978,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-03-22T07:42:02Z,2021-03-22T07:42:02Z,"I don't see why `ConnectivityEvent` should throw an `UnsupportedOperationException` - we should add the revision here as those events are ""event sourcing"" compatible.
For the `setRevision(long)` I currently don't see any non-test usage - so that method could even be removed, can't it?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgwMzg0MDMzNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/978,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgwMzg3NjUwMA==,ditto,803876500,978,NA,jufickel-b,17162397,Juergen Fickel,,NA,2021-03-22T08:42:51Z,2021-03-22T08:42:51Z,"I, too, see no reason for having `setRevision(long)`.
Regarding `ConnectivityEvent`. Is the current default implementation faulty, then? If so, then I think this should be fixed with Ditto 2.0.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgwMzg3NjUwMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/978,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgwMzg4MTE0OQ==,ditto,803881149,978,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-03-22T08:49:35Z,2021-03-22T08:49:35Z,"> Regarding `ConnectivityEvent`. Is the current default implementation faulty, then? If so, then I think this should be fixed with Ditto 2.0.

Yes, I think so too.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgwMzg4MTE0OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/981,https://api.github.com/repos/eclipse-ditto/ditto/issues/981,ditto,813332681,981,"Document use of ""desired"" properties together with definitions",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2021-02-22T09:49:58Z,2021-09-21T17:22:27Z,"The current [""The link to Vorto""](https://www.eclipse.org/ditto/basic-feature.html#the-link-to-eclipse-vorto) documentation of Ditto's ""features"" do not yet mention the added [""desired"" properties](https://www.eclipse.org/ditto/basic-feature.html#feature-desired-properties).

Also think about extracting a new separate doc. page describing ""The link to Vorto"".","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/981/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/981,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NTk0NDEzMg==,ditto,785944132,981,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2021-02-25T14:41:42Z,2021-02-25T14:41:42Z,"Maybe this can be generalized a bit since the definition is more or less only the link to the model of a thing and vorto happens to be a first go-to-solution that integrates well with ditto. In theory you could use any other model system if I'm not mistaken. So in general the problem is more about if I want to have a model for my data, how to link it with the thing and what to gain from that, right?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NTk0NDEzMg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/981,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NTk5MTkxMw==,ditto,785991913,981,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-02-25T15:36:42Z,2021-02-25T15:36:42Z,"Yes, however the [""The link to Vorto""](https://www.eclipse.org/ditto/basic-feature.html#the-link-to-eclipse-vorto) section is about Vorto :D

Maybe we can add some words to the ""general"" concept of linking to a foreign model description. However, that would be really abstract as we did not ever try out another modeling system than Vorto.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NTk5MTkxMw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/984,https://api.github.com/repos/eclipse-ditto/ditto/issues/984,ditto,817100481,984,MQTT 3.1.1 connections prevent adding a header mapping,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2021-02-26T07:02:59Z,2021-04-29T17:40:46Z,"MQTT 3.1.1 does not support protocol side headers (or ""user properties"" like MQTT 5).
However, Ditto provides 3 special headers when using MQTT 3.1.1, like also [documented](https://www.eclipse.org/ditto/connectivity-protocol-bindings-mqtt.html#source-header-mapping).

When creating a connection like documented with the ""source"" header mapping there however is an exception returned:
```json
{
   ""status"": 400,
   ""error"": ""connectivity:connection.configuration.invalid"",
   ""message"": ""Header mapping is not supported for MQTT 3.1.1 sources."",
   ""description"": ""Make sure all required properties are set and valid in the configuration.""
}
```
That should not be the case and is a bug.

Looking at [AbstractMqttConsumerActor](https://github.com/eclipse/ditto/blob/release-1.5/services/connectivity/messaging/src/main/java/org/eclipse/ditto/services/connectivity/messaging/mqtt/hivemq/AbstractMqttConsumerActor.java#L199) the headers are always added to MQTT sources (if no other header mapping is provided - which cannot be done with MQTT 3.1.1).
So this works as designed, but then the documentation for MQTT 3.1.1 is wrong (header mapping is not possible).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/984/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/984,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgyOTQ1OTIyNA==,ditto,829459224,984,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-04-29T17:40:37Z,2021-04-29T17:40:37Z,Fixed by #1021,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgyOTQ1OTIyNA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/985,https://api.github.com/repos/eclipse-ditto/ditto/issues/985,ditto,817173579,985,Support managed connection via SSH tunnel ,dguggemos,15028977,Dominik Guggemos,dominik.guggemos@bosch.io,CLOSED,2021-02-26T09:03:31Z,2021-04-06T08:51:52Z,Add support for connecting to an external system from Ditto via an SSH tunnel.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/985/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/985,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NjUxMTA1MA==,ditto,786511050,985,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-02-26T09:04:56Z,2021-02-26T09:04:56Z,"Created CQs for ""sshd"" library to be used for this (clealydefined score is only 72):
https://dev.eclipse.org/ipzilla/show_bug.cgi?id=23086
https://dev.eclipse.org/ipzilla/show_bug.cgi?id=23087","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NjUxMTA1MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/986,https://api.github.com/repos/eclipse-ditto/ditto/issues/986,ditto,817481743,986,SSE sends empty data,ArashJavan,5918827,Arash,a.javan.gh@gmail.com,CLOSED,2021-02-26T16:12:12Z,2021-03-11T14:47:34Z,"Hi,

I installed Ditto through the helm chart as described in [cloud2edge](https://www.eclipse.org/packages/packages/cloud2edge/installation/).

I also changed the configmap of nginx as described in this [commit](https://github.com/eclipse/packages/pull/193).

In my frontend I use SSE to get devcie events. Everything worked fine for a while.
But now today I just reinstalled the ""cloud2edge"" chart again, and suddenly I get empty ""data"" using SSE.
Also command-line curl verifies this effect.

Did the way SSE works changed in Ditto since the last release?

Thanks","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/986/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/986,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NzcwOTM0Mg==,ditto,787709342,986,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-03-01T07:09:24Z,2021-03-01T07:09:24Z,"@ArashJavan each second there is an ""empty"" element emitted to the SSE when no other event is sent out.
That was always the case. Did you make sure that your SSE is ""allowed"" to receive the events you are expecting instead of the ""empty heartbeat"" messages?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NzcwOTM0Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/986,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NzkwODk2Ng==,ditto,787908966,986,NA,ArashJavan,5918827,Arash,a.javan.gh@gmail.com,NA,2021-03-01T12:23:25Z,2021-03-01T12:23:25Z,"@thjaeckle Thanks for your reply. What do you actually mean by check if SSE is ""allowed"". Where do I check this?

Neverthelless I checked the Ditto-Logfiles, which are as follows:

**ditto-gateway**
This is the log of gateway after enabling the SSE from frontend.


```
2021-03-01 13:13:29,247 INFO  [6324839d-1c00-47c6-969b-67acad67b58e] o.e.d.s.g.e.d.RequestResultLoggingDirective  - StatusCode of request GET '/api/2/things?ids=de.iot1:dev1' was: 200
2021-03-01 13:13:29,248 INFO  [6324839d-1c00-47c6-969b-67acad67b58e] o.e.d.s.g.s.a.StreamingSessionActor akka://ditto-cluster/user/gatewayRoot/streaming/d-6324839d-1c00-47c6-969b-67acad67b58e - Declaring acknowledgement labels <[]>
2021-03-01 13:13:29,249 INFO  [6324839d-1c00-47c6-969b-67acad67b58e] o.e.d.s.g.s.a.StreamingSessionActor akka://ditto-cluster/user/gatewayRoot/streaming/d-6324839d-1c00-47c6-969b-67acad67b58e - Acknowledgement label declaration successful for labels: <[]>
```

__ditto-concierge__
This is the log of concierge after enabling the SSE from frontend.
```
2021-03-01 13:13:28,303 INFO  [d5d3b0eb-9113-4780-93f4-cb05e724f70b] o.e.d.s.c.e.EnforcerActor akka://ditto-cluster/user/conciergeRoot/enforcer - before building JsonView - ThingPreconditionNotModifiedException: The comparison of precondition header 'if-none-match' for the requested Thing resource evaluated to false. Expected: '""hash:c72ec265""' not to match actual: '""hash:c72ec265""'.
2021-03-01 13:13:28,303 INFO  [d5d3b0eb-9113-4780-93f4-cb05e724f70b] o.e.d.s.c.e.EnforcerActor akka://ditto-cluster/user/conciergeRoot/enforcer - Error thrown during enforcement - ThingPreconditionNotModifiedException: The comparison of precondition header 'if-none-match' for the requested Thing resource evaluated to false. Expected: '""hash:c72ec265""' not to match actual: '""hash:c72ec265""'.
2021-03-01 13:14:59,496 INFO  [] o.e.d.s.c.a.c.EventSnapshotCleanupCoordinator akka://ditto-cluster/user/conciergeRoot/eventSnapshotCleanupCoordinator/singleton/supervised-child - Woke up.
2021-03-01 13:14:59,602 INFO  [] o.e.d.s.c.a.c.EventSnapshotCleanupCoordinator akka://ditto-cluster/user/conciergeRoot/eventSnapshotCleanupCoordinator/singleton/supervised-child - Stream terminated. Result=<Done> Error=
2021-03-01 13:14:59,602 INFO  [] o.e.d.s.c.a.c.EventSnapshotCleanupCoordinator akka://ditto-cluster/user/conciergeRoot/eventSnapshotCleanupCoordinator/singleton/supervised-child - Stream terminated. Will restart after quiet period.
```

__ditto-policy__
This is the log of policy after enabling the SSE from frontend.

```
2021-03-01 13:19:59,655 INFO  [] o.e.d.s.u.p.m.DefaultPersistenceStreamingActor akka://ditto-cluster/user/policiesRoot/persistenceStreamingActor - Starting stream for <SudoStreamPids [type=streaming:SudoStreamPids, dittoHeaders=ImmutableDittoHeaders [{}], burst=25, timeoutMillis=10800000, lowerBound=LowerBound [id=:_, revision=0]]>
```

Only error I can see  is in the concierge-modul? right? Also nginx did not log any error!

Thanks in advance!","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4NzkwODk2Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/986,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4ODAzNjA3MQ==,ditto,788036071,986,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-03-01T15:29:13Z,2021-03-01T15:29:13Z,"> What do you actually mean by check if SSE is ""allowed"". Where do I check this?

With that I mean whether the SSE channel has the proper [authorization](https://www.eclipse.org/ditto/basic-auth.html#authorization), so the authenticated user/client is allowed to `READ` the things in order to get notfications.

Given you log in `concierge`:
```
2021-03-01 13:13:28,303 INFO  [d5d3b0eb-9113-4780-93f4-cb05e724f70b] o.e.d.s.c.e.EnforcerActor akka://ditto-cluster/user/conciergeRoot/enforcer - before building JsonView - ThingPreconditionNotModifiedException: The comparison of precondition header 'if-none-match' for the requested Thing resource evaluated to false. Expected: '""hash:c72ec265""' not to match actual: '""hash:c72ec265""'.
```

Do you intentionally set the `If-None-Match` header when modifying the Thing?
If not I assume your browser automatically sets that which prevents that the Thing is updated at all as long as the value you want to update does not change.

That would also explain that you don't get events via SSE - because there are not modifications to the thing at all because of that `If-None-Match` optimization.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc4ODAzNjA3MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/986,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5NjUyNDI0Mw==,ditto,796524243,986,NA,ArashJavan,5918827,Arash,a.javan.gh@gmail.com,NA,2021-03-11T07:22:46Z,2021-03-11T07:22:46Z,"@thjaeckle Thanks for your reply! Sorry for the delay I was struggling with other IoT stuff.
Well, I do not set ""If-none-match"". But, interestingly my frontend works with the cloud2edge version v0.1.2, which also includes Ditto 1.3.0! But nevertheless, I will investigate more time today to find out what is going wrong and report here.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5NjUyNDI0Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/986,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5NjY3OTU0NQ==,ditto,796679545,986,NA,ArashJavan,5918827,Arash,a.javan.gh@gmail.com,NA,2021-03-11T11:48:12Z,2021-03-11T11:48:12Z,"@thjaeckle Ok, I am now pretty sure, that it is not the frontend's fault. And yes, all rights are given to the client.
Even using curl (see cmd below) produces the following behavior:

```
curl -i -X POST -u ditto:ditto -H 'Content-Type: application/json' -w '\n' --data 'true' http://$DITTO_API_IP:$DITTO_API_PORT_HTTP/api/2/things/de.iot1:dev1/features/led/inbox/messages/led-state?timeout=1

HTTP/1.1 408 Request Timeout
Server: nginx/1.17.5
Date: Thu, 11 Mar 2021 11:42:49 GMT
Content-Type: application/json
Content-Length: 165
Connection: keep-alive
version: 2
timeout: 1
response-required: false
correlation-id: 3c9f0f36-12f9-42e1-b97a-583826f1c235
Access-Control-Allow-Origin: *
Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS
Access-Control-Allow-Credentials: true
Access-Control-Allow-Headers: Accept,Authorization,Cache-Control,Content-Type,Content-Length,DNT,If-Match,If-Modified-Since,If-None-Match,Keep-Alive,Origin,User-Agent,X-Requested-With

{""status"":408,""error"":""gateway:command.timeout"",""message"":""The Command reached the specified timeout of 1,000ms."",""description"":""Try increasing the command timeout""}

```

This is the log of __nginx__:

```
172.17.0.1 - ditto [11/Mar/2021:11:42:02 +0000] ""POST /api/2/things/de.iot1:dev1/features/led/inbox/messages/led-state?timeout=1 HTTP/1.1"" 408 165 ""-"" ""curl/7.68.0""
172.17.0.1 - ditto [11/Mar/2021:11:42:49 +0000] ""POST /api/2/things/de.iot1:dev1/features/led/inbox/messages/led-state?timeout=1 HTTP/1.1"" 408 165 ""-"" ""curl/7.68.0""
```

This is the log of __gateway__-module:

```
2021-03-11 12:42:01,819 INFO  [f592d47d-458f-4e72-b6f5-5693d5a2c105] o.e.d.s.g.s.a.p.PreAuthenticatedAuthenticationProvider  - Pre-authentication has been applied resulting in AuthorizationContext <ImmutableAuthorizationContext [type=pre-authenticated-http, authorizationSubjects=[nginx:ditto]]>.
2021-03-11 12:42:01,835 INFO  [f592d47d-458f-4e72-b6f5-5693d5a2c105] o.e.d.s.m.c.a.ConciergeForwarderActor akka://ditto-cluster/user/gatewayRoot/conciergeForwarder - Forwarding signal with ID <de.iot1:dev1> and type <messages.commands:featureMessage> to concierge enforcer
2021-03-11 12:42:01,836 INFO  [f592d47d-458f-4e72-b6f5-5693d5a2c105] o.e.d.s.m.a.AcknowledgementAggregatorActor akka://ditto-cluster/user/$b/ackr0-f592d47d-458f-4e72-b6f5-5693d5a2c105 - Starting to wait for all requested acknowledgements <[live-response]> for a maximum duration of <PT1S>.
2021-03-11 12:42:02,851 INFO  [f592d47d-458f-4e72-b6f5-5693d5a2c105] o.e.d.s.m.a.AcknowledgementAggregatorActor akka://ditto-cluster/user/$b/ackr0-f592d47d-458f-4e72-b6f5-5693d5a2c105 - Timed out waiting for all requested acknowledgements, completing Acknowledgements with timeouts...
2021-03-11 12:42:02,855 INFO  [f592d47d-458f-4e72-b6f5-5693d5a2c105] o.e.d.s.g.e.a.HttpRequestActor akka://ditto-cluster/user/$b - DittoRuntimeException <gateway:command.timeout>: <The Command reached the specified timeout of 1,000ms.>.
2021-03-11 12:42:02,857 INFO  [f592d47d-458f-4e72-b6f5-5693d5a2c105] o.e.d.s.g.e.d.RequestResultLoggingDirective  - StatusCode of request POST '/api/2/things/de.iot1:dev1/features/led/inbox/messages/led-state?timeout=1' was: 408
2021-03-11 12:42:02,858 WARN  [f592d47d-458f-4e72-b6f5-5693d5a2c105] o.e.d.s.g.e.d.RequestTimeoutHandlingDirective  - Encountered slow HTTP request which took over <1000> ms: <1041> ms!
2021-03-11 12:42:48,200 INFO  [3c9f0f36-12f9-42e1-b97a-583826f1c235] o.e.d.s.g.s.a.p.PreAuthenticatedAuthenticationProvider  - Pre-authentication has been applied resulting in AuthorizationContext <ImmutableAuthorizationContext [type=pre-authenticated-http, authorizationSubjects=[nginx:ditto]]>.
2021-03-11 12:42:48,210 INFO  [3c9f0f36-12f9-42e1-b97a-583826f1c235] o.e.d.s.m.c.a.ConciergeForwarderActor akka://ditto-cluster/user/gatewayRoot/conciergeForwarder - Forwarding signal with ID <de.iot1:dev1> and type <messages.commands:featureMessage> to concierge enforcer
2021-03-11 12:42:48,212 INFO  [3c9f0f36-12f9-42e1-b97a-583826f1c235] o.e.d.s.m.a.AcknowledgementAggregatorActor akka://ditto-cluster/user/$c/ackr0-3c9f0f36-12f9-42e1-b97a-583826f1c235 - Starting to wait for all requested acknowledgements <[live-response]> for a maximum duration of <PT1S>.
2021-03-11 12:42:49,232 INFO  [3c9f0f36-12f9-42e1-b97a-583826f1c235] o.e.d.s.m.a.AcknowledgementAggregatorActor akka://ditto-cluster/user/$c/ackr0-3c9f0f36-12f9-42e1-b97a-583826f1c235 - Timed out waiting for all requested acknowledgements, completing Acknowledgements with timeouts...
2021-03-11 12:42:49,236 INFO  [3c9f0f36-12f9-42e1-b97a-583826f1c235] o.e.d.s.g.e.a.HttpRequestActor akka://ditto-cluster/user/$c - DittoRuntimeException <gateway:command.timeout>: <The Command reached the specified timeout of 1,000ms.>.
2021-03-11 12:42:49,238 INFO  [3c9f0f36-12f9-42e1-b97a-583826f1c235] o.e.d.s.g.e.d.RequestResultLoggingDirective  - StatusCode of request POST '/api/2/things/de.iot1:dev1/features/led/inbox/messages/led-state?timeout=1' was: 408
2021-03-11 12:42:49,238 WARN  [3c9f0f36-12f9-42e1-b97a-583826f1c235] o.e.d.s.g.e.d.RequestTimeoutHandlingDirective  - Encountered slow HTTP request which took over <1000> ms: <1041> ms!
```

This is the log of __concierge__-module

```
2021-03-11 12:37:04,059 INFO  [] a.c.s.ClusterSingletonProxy akka://ditto-cluster@172.17.0.8:2551/user/conciergeRoot/eventSnapshotCleanupCoordinatorProxy - Singleton identified at [akka://ditto-cluster/user/conciergeRoot/eventSnapshotCleanupCoordinator/singleton]
2021-03-11 12:38:03,105 INFO  [] o.m.d.connection  - Opened connection [connectionId{localValue:2, serverValue:49}] to ditto-mongodb:27017
2021-03-11 12:42:03,159 INFO  [] o.e.d.s.c.a.c.EventSnapshotCleanupCoordinator akka://ditto-cluster/user/conciergeRoot/eventSnapshotCleanupCoordinator/singleton/supervised-child - Woke up.
2021-03-11 12:42:03,574 INFO  [] o.e.d.s.c.a.c.EventSnapshotCleanupCoordinator akka://ditto-cluster/user/conciergeRoot/eventSnapshotCleanupCoordinator/singleton/supervised-child - Stream terminated. Result=<Done> Error=<null>
2021-03-11 12:42:03,575 INFO  [] o.e.d.s.c.a.c.EventSnapshotCleanupCoordinator akka://ditto-cluster/user/conciergeRoot/eventSnapshotCleanupCoordinator/singleton/supervised-child - Stream terminated. Will restart after quiet period.
```
It seems to me now that the concierge module does not even get the message? Am I wrong?

It is worth mentioning that with the prev. version of cloud2edge (0.1.2) sending commands worked!

Any help is welcome!
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5NjY3OTU0NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/986,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5NjcwMDQ2MA==,ditto,796700460,986,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-03-11T12:26:47Z,2021-03-11T12:26:47Z,"@ArashJavan what you are posting now has nothing to do with what you originally asked.
Originally you said that you get empty SSE events - now you say that messages to devices get a timeout.

Did you see the latest bugfixes of the Hono setup in the packages project?
E.g. https://github.com/eclipse/packages/issues/202","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5NjcwMDQ2MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/986,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5NjcwMjk0OQ==,ditto,796702949,986,NA,ArashJavan,5918827,Arash,a.javan.gh@gmail.com,NA,2021-03-11T12:31:33Z,2021-03-11T12:31:33Z,"@thjaeckle you are right, sorry my fault! Since I was just confused, because of many troubles with the new version of cloud2edge 0.1.3 so I just mixed the topics. Ok, thanks for the link, I will set the whole cluster again with the right config for hono and see if the problems with events and commands are gone! thanks again!","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5NjcwMjk0OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/986,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5Njc4OTc1Mg==,ditto,796789752,986,NA,ArashJavan,5918827,Arash,a.javan.gh@gmail.com,NA,2021-03-11T14:47:34Z,2021-03-11T14:47:34Z,"@thjaeckle The new cloud2edge version (0.1.4) is released. Now everything works fine! 

Thanks a lot!","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5Njc4OTc1Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/989,https://api.github.com/repos/eclipse-ditto/ditto/issues/989,ditto,820854300,989,Improve documentation about Ditto Protocol error responses,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2021-03-03T07:56:34Z,2021-04-29T17:39:09Z,"The protocol ""specification"" pages, e.g. at https://www.eclipse.org/ditto/protocol-specification-things-create-or-modify.html#create-or-modify-a-single-property-of-a-feature describe for their ""Responses"" that the error code may be e.g. 404 or 403.
That however is misleading as the `""topic""` and the `""path""` when creating error responses are not preserved but changed according to the [error specification](https://www.eclipse.org/ditto/protocol-specification-errors.html).

The [examples for error responses](https://www.eclipse.org/ditto/protocol-examples-errorresponses.html) are correct as well.
That could be improved.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/989/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/989,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgyOTQ1ODIwMA==,ditto,829458200,989,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-04-29T17:38:58Z,2021-04-29T17:38:58Z,Fixed by #1037,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgyOTQ1ODIwMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/991,https://api.github.com/repos/eclipse-ditto/ditto/issues/991,ditto,821334052,991,Allow multiple policies per Thing,vhdirk,1424486,Dirk Van Haerenborgh,,CLOSED,2021-03-03T17:39:15Z,2022-09-01T15:46:55Z,"As discussed with @thjaeckle over gitter, we're looking for a way to assign multiple policies to a Thing. That would make granular permission control a lot easier to implement.

Below a simple demonstration of what we'd like to achieve:
![multiple-policies](https://user-images.githubusercontent.com/1424486/109845953-f59d8800-7c4d-11eb-9ee1-c632de1f3c83.png)
Take for example a situation where Things are installed at 2 physical locations. Operators on site would have permission to view properties of the Thing, but not modify (Teams A and B). Overseeing all operations is Team X, which has permission to modify/delete every Thing. Additionally, there's a maintenance team (Team C) that can travel to both physical locations, but only has permission to change specific features of Things (not necessarily restricted that much), for a specific subset of Things.

To achieve something like that, it would be (for a ditto developer) a lot easier if things could be assigned multiple policies.

Compare that to what we currently would have to configure:
![single-policy](https://user-images.githubusercontent.com/1424486/109845958-f6361e80-7c4d-11eb-9778-ccded1331ced.png)

We understood that this may have a negative performance impact on the thingssearch index, as it would have to be rebuilt if a policy is modified. However, whether using multiple policies or not, that bottleneck is always going to be there.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/991/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/991,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5MDM4NTEyNQ==,ditto,790385125,991,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-03-04T07:24:55Z,2021-03-04T07:24:55Z,"Just to clarify: #298 would also let you do exactly what you described, won't it?
Because I think that this would API-wise be a better enhancement than e.g. adding an optional `""additionalPolicyIds""` to the Thing JSON.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5MDM4NTEyNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/991,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5MDQwOTU2OA==,ditto,790409568,991,NA,vhdirk,1424486,Dirk Van Haerenborgh,,NA,2021-03-04T08:01:48Z,2021-03-04T08:01:48Z,"Yes, indeed. #298 would make this situation possible, but it has some drawbacks, too.

What we're proposing here would mean breaking the current API: a Thing would really just take an array of `PolicyId`s, rather than a single one. This would keep the possibility to filter things based on policyId. With the 'import' proposal made in #298, that would require an indirection: You'd first have to find all policies that import the one you're querying, and then match those with the actual devices. 
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5MDQwOTU2OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/991,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5MDQxODA0Mg==,ditto,790418042,991,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-03-04T08:15:54Z,2021-03-04T08:15:54Z,"I'm afraid that breaking the JSON API is not a short- to midterm option, at least not until Ditto requires other JSON breakages in the ""thing JSON"" which would justify an ""API schema version 3"" (e.g. `/api/3` at HTTP level). 
With Ditto 2.0 we remove ""API schema version 1"" (ACL based) and maintaining several schema versions at the same time is a huge amount of additional maintenance work.

Additionally, as policies may also be used by other entities than things (e.g. also policies itself), all those other entities would also need to support containing a list of policyIds. Better in terms of re-use from my point of view is to make the policy more mighty (e.g. by the imports mentioned in #298).

Filtering things based on policyId is for me another use case which should be tracked separately.
Technically this would probably be another search index.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5MDQxODA0Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/991,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Jk-Sx,ditto,1234429105,991,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-09-01T15:19:50Z,2022-09-01T15:19:50Z,Closing as duplicate of #298 ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Jk-Sx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1000,https://api.github.com/repos/eclipse-ditto/ditto/issues/1000,ditto,825875176,1000,Ditto 2.0,stmaute,17831060,Stefan Maute,,CLOSED,2021-03-09T12:47:38Z,2021-05-06T08:05:17Z,"As we already started the discussion in #978 the work on Ditto 2.0 is in progress.

We keep #978 for the discussion on the topics Ditto 2.0 aims to ""break"" and use this issue to track progress on the actual doing.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1000/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1001,https://api.github.com/repos/eclipse-ditto/ditto/issues/1001,ditto,829100064,1001,Question/Bug: Websocket events no longer pushed through after update,mvniekerk,1570687,Michael van Niekerk,,CLOSED,2021-03-11T12:19:54Z,2021-04-08T06:15:10Z,"Hello
I've upgraded my K8s hosted instance of Ditto using Helm.

Now websocket events are no longer pushed through after sending START-SEND-EVENTS (the ACK does come through though).

How can I debug what on what container to see what went wrong?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1001/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1001,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5NjcwMzAyNg==,ditto,796703026,1001,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-03-11T12:31:43Z,2021-03-11T12:31:43Z,You could enable `DEBUG` logging in all services by setting the environment variable `LOG_LEVEL_APPLICATION` to `DEBUG`.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5NjcwMzAyNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1001,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5NzQ4NDMxNA==,ditto,797484314,1001,NA,mvniekerk,1570687,Michael van Niekerk,,NA,2021-03-12T13:17:53Z,2021-03-12T13:17:53Z,"Thank you.
Is there a design doc that can help me see which service decided to stop any websocket packets coming through?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5NzQ4NDMxNA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1001,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5NzQ4NjgxNQ==,ditto,797486815,1001,NA,mvniekerk,1570687,Michael van Niekerk,,NA,2021-03-12T13:22:24Z,2021-03-12T13:22:24Z,"Gleaning from https://www.eclipse.org/ditto/architecture-overview.html, I see I should first look at concierge service.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5NzQ4NjgxNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1001,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTI0MTU2NA==,ditto,799241564,1001,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-03-15T08:58:35Z,2021-03-15T08:58:35Z,"You should check whether the ""authSubjects""/""authContext"" you open the WebSocket session with are allowed to receive the emitted events.
The `gateway` logs a `INFO` message: `Creating WebSocket for connection authContext: <....>` when opening a new websocket.
Please check the content of this log message.

The second thing to check would be the `things` service - there you have to increase the log level to `DEBUG` as described before.
For each persisted and published event the `things` service logs a `DEBUG` message: `Persisting Event<...>`.
Please check the content of this log message - this includes a Ditto event containing DittoHeaders.
The `DittoHeaders` contain a `ditto-read-subjects` entry. This entry must contain one of the subjects ( ""authSubjects""/""authContext"") with which your WebSocket session was created.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTI0MTU2NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1001,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTI0NzcxNQ==,ditto,799247715,1001,NA,mvniekerk,1570687,Michael van Niekerk,,NA,2021-03-15T09:07:01Z,2021-03-15T09:07:01Z,Thank you @thjaeckle this is very helpful,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTI0NzcxNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1001,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTI2NTMwNw==,ditto,799265307,1001,NA,mvniekerk,1570687,Michael van Niekerk,,NA,2021-03-15T09:30:41Z,2021-03-15T09:30:41Z,"I'm getting java.lang.ClassCastException: akka.util.ByteString$ByteString1C incompatible with java.lang.String on the `thing` microservice

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTI2NTMwNw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1001,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTI2OTk5Ng==,ditto,799269996,1001,NA,mvniekerk,1570687,Michael van Niekerk,,NA,2021-03-15T09:36:50Z,2021-03-15T09:36:50Z,I've created another bug report https://github.com/eclipse/ditto/issues/1004 because this one is marked as a question,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTI2OTk5Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1002,https://api.github.com/repos/eclipse-ditto/ditto/issues/1002,ditto,831530080,1002,ImplicitThingCreation mapper (question),Geonjae-Joo,62494715,,,CLOSED,2021-03-15T07:54:09Z,2021-04-08T06:14:59Z,"Hi, I try to use the mapper to create thing automatically.
I am having hard time get it done.
I am currently using Eclipse IoT packages 0.1.3 and Hono's tenant, credential, device registry are all set.


Here is my connection sources and mapping Definition codes:

~~~ json

curl -i -X POST -u devops:${DITTO_DEVOPS_PWD} -H 'Content-Type: application/json' --data '{
  ""targetActorSelection"": ""/system/sharding/connection"",
  ""headers"": {
    ""aggregate"": false
  },
  ""piggybackCommand"": {
    ""type"": ""connectivity.commands:createConnection"",
    ""connection"": {
      ""id"": ""hono-connection-for-'""${HONO_TENANT}""'"",
      ""connectionType"": ""amqp-10"",
      ""connectionStatus"": ""open"",
      ""uri"": ""amqp://consumer%40HONO:verysecret@'""${RELEASE}""'-dispatch-router-ext:15672"",
      ""failoverEnabled"": true,
      ""sources"": [
        {
          ""addresses"": [
            ""telemetry/'""${HONO_TENANT}""'"",
            ""event/'""${HONO_TENANT}""'""
          ],
          ""authorizationContext"": [
            ""pre-authenticated:hono-connection""
          ],
          ""enforcement"": {
            ""input"": ""{{ header:device_id }}"",
            ""filters"": [
              ""{{ entity:id }}""
            ]
          },
          ""headerMapping"": {
            ""hono-device-id"": ""{{ header:device_id }}"",
            ""content-type"": ""{{ header:content-type }}""
          },
          ""acknowledgementRequests"": {
            ""includes"": [],
            ""filter"": ""fn:filter(header:qos,'""'""'ne'""'""','""'""'0'""'""')""
          },
          ""payloadMapping"": [""autocreation""]
        },
        {
          ""addresses"": [
            ""command_response/'""${HONO_TENANT}""'/replies""
          ],
          ""authorizationContext"": [
            ""pre-authenticated:hono-connection""
          ],
          ""headerMapping"": {
            ""content-type"": ""{{ header:content-type }}"",
            ""correlation-id"": ""{{ header:correlation-id }}"",
            ""status"": ""{{ header:status }}""
          },
          ""replyTarget"": {
            ""enabled"": false,
            ""expectedResponseTypes"": [
              ""response"",
              ""error""
            ]
          }
        }
      ],
     ""targets"": [
        {
          ""address"": ""command/'""${HONO_TENANT}""'"",
          ""authorizationContext"": [
            ""pre-authenticated:hono-connection""
          ],
          ""topics"": [
            ""_/_/things/live/commands"",
            ""_/_/things/live/messages""
            
          ],
          ""headerMapping"": {
            ""to"": ""command/'""${HONO_TENANT}""'/{{ thing:id }}"",
            ""subject"": ""{{ header:subject | fn:default(topic:action-subject) }}"",
            ""content-type"": ""{{ header:content-type | fn:default('""'""'application/vnd.eclipse.ditto+json'""'""') }}"",
            ""correlation-id"": ""{{ header:correlation-id }}"",
            ""reply-to"": ""{{ fn:default('""'""'command_response/'""${HONO_TENANT}""'/replies'""'""') | fn:filter(header:response-required,'""'""'ne'""'""','""'""'false'""'""') }}""
          }
        },
        {
          ""address"": ""command/'""${HONO_TENANT}""'"",
          ""authorizationContext"": [
            ""pre-authenticated:hono-connection""
          ],
          ""topics"": [
            ""_/_/things/twin/events"",
            ""_/_/things/live/events""
          ],
          ""headerMapping"": {
            ""to"": ""command/'""${HONO_TENANT}""'/{{ thing:id }}"",
            ""subject"": ""{{ header:subject | fn:default(topic:action-subject) }}"",
            ""content-type"": ""{{ header:content-type | fn:default('""'""'application/vnd.eclipse.ditto+json'""'""') }}"",
            ""correlation-id"": ""{{ header:correlation-id }}""
          }
        }
      ],
      ""mappingDefinitions"": {
        ""autocreation"": {
          ""mappingEngine"": ""ImplicitThingCreation"",
          ""options"": {
            ""thing"": {
              ""thingId"": ""{{ header:device_id }}"",
              ""policyId"": ""'""${MY_POLICY}""'"",
              ""attributes"": {
                ""CreatedBy"": ""ImplicitThingCreation""
              }
            }
          }
        }
      }
    }
  }
}' http://${DITTO_API_IP}:${DITTO_API_PORT_HTTP}/devops/piggyback/connectivity


~~~

And here is my log from connection logger:

~~~ json
{
""?"":{
    ""?"":{
        ""type"":""connectivity.responses:retrieveConnectionLogs"",
        ""status"":200,
        ""connectionId"":""hono-connection-for-keti-tenant-1"",
        ""connectionLogs"":[
        {
        ""correlationId"":""e879eda7-bac0-4fa1-b462-6112225bef13"",
        ""timestamp"":""2021-03-15T07:21:05.880919961Z"",
        ""category"":""connection"",
        ""type"":""other"",
        ""level"":""success"",
        ""message"":""Successfully reset the logs.""
        },
        {
        ""correlationId"":""<not-provided>"",
        ""timestamp"":""2021-03-15T07:21:07.768597876Z"",
        ""category"":""source"",
        ""type"":""consumed"",
        ""level"":""success"",
        ""message"":""Received signal. - Message headers: [orig_adapter=hono-mqtt, qos=0, device_id=keti:Xavier-1, creation-time=1615792867767, message-id=ID:AMQP_NO_PREFIX:TelemetrySenderImpl-1744, content-type=application/octet-stream, to=telemetry/keti-tenant-1, orig_address=telemetry] - Message payload: eyJ0b3BpYyI6ICJrZXRpL1hhdmllci0xL3RoaW5ncy90d2luL2NvbW1hbmRzL21vZGlmeSIsICJwYXRoIjogIi9mZWF0dXJlcy90ZW1wZXJhdHVyZS9wcm9wZXJ0aWVzIiwgInZhbHVlIjogeyJ2YWx1ZSI6IDI5Ljd9fQ=="",
        ""address"":""telemetry/keti-tenant-1""
        },
        {
        ""correlationId"":""<not-provided>"",
        ""timestamp"":""2021-03-15T07:21:07.770244384Z"",
        ""category"":""source"",
        ""type"":""consumed"",
        ""level"":""success"",
        ""message"":""Received signal. - Message headers: [orig_adapter=hono-mqtt, qos=0, device_id=keti:Xavier-1, creation-time=1615792867768, message-id=ID:AMQP_NO_PREFIX:TelemetrySenderImpl-1745, content-type=application/octet-stream, to=telemetry/keti-tenant-1, orig_address=telemetry] - Message payload: eyJ0b3BpYyI6ICJrZXRpL1hhdmllci0xL3RoaW5ncy90d2luL2NvbW1hbmRzL21vZGlmeSIsICJwYXRoIjogIi9mZWF0dXJlcy9odW1pZGl0eS9wcm9wZXJ0aWVzIiwgInZhbHVlIjogeyJ2YWx1ZSI6IDQyLjR9fQ=="",
        ""address"":""telemetry/keti-tenant-1""
        },
        {
        ""correlationId"":""<not-provided>"",
        ""timestamp"":""2021-03-15T07:21:07.770536986Z"",
        ""category"":""source"",
        ""type"":""mapped"",
        ""level"":""success"",
        ""message"":""Successfully mapped incoming signal with mapper <autocreation>."",
        ""address"":""telemetry/keti-tenant-1""
        },
        {
        ""correlationId"":""<not-provided>"",
        ""timestamp"":""2021-03-15T07:21:07.770762787Z"",
        ""category"":""source"",
        ""type"":""enforced"",
        ""level"":""success"",
        ""message"":""Successfully applied enforcement on incoming signal. - Message headers: [ditto-origin=hono-connection-for-keti-tenant-1, ditto-inbound-payload-mapper=autocreation, ditto-auth-context={\""type\"":\""pre-authenticated-connection\"",\""subjects\"":[\""pre-authenticated:hono-connection\""]}, content-type=application/octet-stream, ditto-entity-id=keti:Xavier-1, ditto-expected-response-types=[\""error\"",\""response\""], hono-device-id=keti:Xavier-1, ditto-reply-target=0, allow-policy-lockout=true, requested-acks=[]] - Message payload: {\""type\"":\""things.commands:createThing\"",\""thing\"":{\""thingId\"":\""keti:Xavier-1\"",\""policyId\"":\""keti:xavier-policy\"",\""attributes\"":{\""CreatedBy\"":\""ImplicitThingCreation\""}}}"",
        ""address"":""telemetry/keti-tenant-1"",
        ""thingId"":""keti:Xavier-1""
        },
        {
        ""correlationId"":""<not-provided>"",
        ""timestamp"":""2021-03-15T07:21:07.770782087Z"",
        ""category"":""source"",
        ""type"":""consumed"",
        ""level"":""success"",
        ""message"":""Received signal. - Message headers: [orig_adapter=hono-mqtt, qos=0, device_id=keti:Xavier-1, creation-time=1615792867768, message-id=ID:AMQP_NO_PREFIX:TelemetrySenderImpl-1746, content-type=application/octet-stream, to=telemetry/keti-tenant-1, orig_address=telemetry] - Message payload: eyJ0b3BpYyI6ICJrZXRpL1hhdmllci0xL3RoaW5ncy90d2luL2NvbW1hbmRzL21vZGlmeSIsICJwYXRoIjogIi9mZWF0dXJlcy9MRUQvcHJvcGVydGllcyIsICJ2YWx1ZSI6IHsidmFsdWUiOiAwfX0="",
        ""address"":""telemetry/keti-tenant-1""
        },
        {
        ""correlationId"":""<not-provided>"",
        ""timestamp"":""2021-03-15T07:21:07.771169589Z"",
        ""category"":""source"",
        ""type"":""mapped"",
        ""level"":""success"",
        ""message"":""Successfully mapped incoming signal with mapper <autocreation>."",
        ""address"":""telemetry/keti-tenant-1""
        },
        {
        ""correlationId"":""<not-provided>"",
        ""timestamp"":""2021-03-15T07:21:07.771333590Z"",
        ""category"":""source"",
        ""type"":""consumed"",
        ""level"":""success"",
        ""message"":""Received signal. - Message headers: [orig_adapter=hono-mqtt, qos=0, device_id=keti:Xavier-1, creation-time=1615792867768, message-id=ID:AMQP_NO_PREFIX:TelemetrySenderImpl-1747, content-type=application/octet-stream, to=telemetry/keti-tenant-1, orig_address=telemetry] - Message payload: eyJ0b3BpYyI6ICJrZXRpL1hhdmllci0xL3RoaW5ncy90d2luL2NvbW1hbmRzL21vZGlmeSIsICJwYXRoIjogIi9mZWF0dXJlcy9tb2RpZmllZCB0aW1lL3Byb3BlcnRpZXMiLCAidmFsdWUiOiB7InZhbHVlIjogIjIwMjEtMDMtMTVUMDc6MjE6MDcuNjc4ODE3In19"",
        ""address"":""telemetry/keti-tenant-1""
        },
        {
        ""correlationId"":""<not-provided>"",
        ""timestamp"":""2021-03-15T07:21:07.771434690Z"",
        ""category"":""source"",
        ""type"":""enforced"",
        ""level"":""success"",
        ""message"":""Successfully applied enforcement on incoming signal. - Message headers: [ditto-origin=hono-connection-for-keti-tenant-1, ditto-inbound-payload-mapper=autocreation, ditto-auth-context={\""type\"":\""pre-authenticated-connection\"",\""subjects\"":[\""pre-authenticated:hono-connection\""]}, content-type=application/octet-stream, ditto-entity-id=keti:Xavier-1, ditto-expected-response-types=[\""error\"",\""response\""], hono-device-id=keti:Xavier-1, ditto-reply-target=0, allow-policy-lockout=true, requested-acks=[]] - Message payload: {\""type\"":\""things.commands:createThing\"",\""thing\"":{\""thingId\"":\""keti:Xavier-1\"",\""policyId\"":\""keti:xavier-policy\"",\""attributes\"":{\""CreatedBy\"":\""ImplicitThingCreation\""}}}"",
        ""address"":""telemetry/keti-tenant-1"",
        ""thingId"":""keti:Xavier-1""
        },
        {
        ""correlationId"":""<not-provided>"",
        ""timestamp"":""2021-03-15T07:21:07.771901493Z"",
        ""category"":""source"",
        ""type"":""mapped"",
        ""level"":""success"",
        ""message"":""Successfully mapped incoming signal with mapper <autocreation>."",
        ""address"":""telemetry/keti-tenant-1""
        },
        {
        ""correlationId"":""<not-provided>"",
        ""timestamp"":""2021-03-15T07:21:07.772051593Z"",
        ""category"":""source"",
        ""type"":""enforced"",
        ""level"":""success"",
        ""message"":""Successfully applied enforcement on incoming signal. - Message headers: [ditto-origin=hono-connection-for-keti-tenant-1, ditto-inbound-payload-mapper=autocreation, ditto-auth-context={\""type\"":\""pre-authenticated-connection\"",\""subjects\"":[\""pre-authenticated:hono-connection\""]}, content-type=application/octet-stream, ditto-entity-id=keti:Xavier-1, ditto-expected-response-types=[\""error\"",\""response\""], hono-device-id=keti:Xavier-1, ditto-reply-target=0, allow-policy-lockout=true, requested-acks=[]] - Message payload: {\""type\"":\""things.commands:createThing\"",\""thing\"":{\""thingId\"":\""keti:Xavier-1\"",\""policyId\"":\""keti:xavier-policy\"",\""attributes\"":{\""CreatedBy\"":\""ImplicitThingCreation\""}}}"",
        ""address"":""telemetry/keti-tenant-1"",
        ""thingId"":""keti:Xavier-1""
        },
        {
        ""correlationId"":""<not-provided>"",
        ""timestamp"":""2021-03-15T07:21:07.773018898Z"",
        ""category"":""source"",
        ""type"":""acknowledged"",
        ""level"":""success"",
        ""message"":""Sending success acknowledgement: <accepted> - Message headers: [orig_adapter=hono-mqtt, qos=0, device_id=keti:Xavier-1, creation-time=1615792867768, message-id=ID:AMQP_NO_PREFIX:TelemetrySenderImpl-1746, content-type=application/octet-stream, to=telemetry/keti-tenant-1, orig_address=telemetry] - Message payload: null"",
        ""address"":""telemetry/keti-tenant-1""
        },
        {
        ""correlationId"":""<not-provided>"",
        ""timestamp"":""2021-03-15T07:21:07.773780302Z"",
        ""category"":""source"",
        ""type"":""acknowledged"",
        ""level"":""success"",
        ""message"":""Sending success acknowledgement: <accepted> - Message headers: [orig_adapter=hono-mqtt, qos=0, device_id=keti:Xavier-1, creation-time=1615792867767, message-id=ID:AMQP_NO_PREFIX:TelemetrySenderImpl-1744, content-type=application/octet-stream, to=telemetry/keti-tenant-1, orig_address=telemetry] - Message payload: null"",
        ""address"":""telemetry/keti-tenant-1""
        },
        {
        ""correlationId"":""<not-provided>"",
        ""timestamp"":""2021-03-15T07:21:07.775271510Z"",
        ""category"":""source"",
        ""type"":""acknowledged"",
        ""level"":""success"",
        ""message"":""Sending success acknowledgement: <accepted> - Message headers: [orig_adapter=hono-mqtt, qos=0, device_id=keti:Xavier-1, creation-time=1615792867768, message-id=ID:AMQP_NO_PREFIX:TelemetrySenderImpl-1745, content-type=application/octet-stream, to=telemetry/keti-tenant-1, orig_address=telemetry] - Message payload: null"",
        ""address"":""telemetry/keti-tenant-1""
        },
        {
        ""correlationId"":""<not-provided>"",
        ""timestamp"":""2021-03-15T07:21:07.775699212Z"",
        ""category"":""source"",
        ""type"":""mapped"",
        ""level"":""success"",
        ""message"":""Successfully mapped incoming signal with mapper <autocreation>."",
        ""address"":""telemetry/keti-tenant-1""
        },
        {
        ""correlationId"":""<not-provided>"",
        ""timestamp"":""2021-03-15T07:21:07.775954913Z"",
        ""category"":""source"",
        ""type"":""enforced"",
        ""level"":""success"",
        ""message"":""Successfully applied enforcement on incoming signal. - Message headers: [ditto-origin=hono-connection-for-keti-tenant-1, ditto-inbound-payload-mapper=autocreation, ditto-auth-context={\""type\"":\""pre-authenticated-connection\"",\""subjects\"":[\""pre-authenticated:hono-connection\""]}, content-type=application/octet-stream, ditto-entity-id=keti:Xavier-1, ditto-expected-response-types=[\""error\"",\""response\""], hono-device-id=keti:Xavier-1, ditto-reply-target=0, allow-policy-lockout=true, requested-acks=[]] - Message payload: {\""type\"":\""things.commands:createThing\"",\""thing\"":{\""thingId\"":\""keti:Xavier-1\"",\""policyId\"":\""keti:xavier-policy\"",\""attributes\"":{\""CreatedBy\"":\""ImplicitThingCreation\""}}}"",
        ""address"":""telemetry/keti-tenant-1"",
        ""thingId"":""keti:Xavier-1""
        },
        {
        ""correlationId"":""<not-provided>"",
        ""timestamp"":""2021-03-15T07:21:07.777499821Z"",
        ""category"":""source"",
        ""type"":""acknowledged"",
        ""level"":""success"",
        ""message"":""Sending success acknowledgement: <accepted> - Message headers: [orig_adapter=hono-mqtt, qos=0, device_id=keti:Xavier-1, creation-time=1615792867768, message-id=ID:AMQP_NO_PREFIX:TelemetrySenderImpl-1747, content-type=application/octet-stream, to=telemetry/keti-tenant-1, orig_address=telemetry] - Message payload: null"",
        ""address"":""telemetry/keti-tenant-1""
        },
        {
        ""correlationId"":""<not-provided>"",
        ""timestamp"":""2021-03-15T07:21:07.781297040Z"",
        ""category"":""response"",
        ""type"":""dispatched"",
        ""level"":""failure"",
        ""message"":""Response was not successful. This may be the case for when a thing could not be found or the authorization subject of the consuming source was not allowed to write a thing. - Message headers: [ditto-read-revoked-subjects=[], ditto-reply-target=0, allow-policy-lockout=true, requested-acks=[], ditto-origin=hono-connection-for-keti-tenant-1, ditto-inbound-payload-mapper=autocreation, response-required=false, ditto-originator=pre-authenticated:hono-connection, ditto-read-subjects=[\""pre-authenticated:hono-connection\""], ditto-auth-context={\""type\"":\""pre-authenticated-connection\"",\""subjects\"":[\""pre-authenticated:hono-connection\""]}, ditto-entity-id=keti:Xavier-1, content-type=application/octet-stream, ditto-expected-response-types=[\""error\"",\""response\""], hono-device-id=keti:Xavier-1] - Message payload: {\""type\"":\""things.responses:errorResponse\"",\""status\"":409,\""thingId\"":\""keti:Xavier-1\"",\""payload\"":{\""status\"":409,\""error\"":\""things:thing.conflict\"",\""message\"":\""The Thing with ID 'keti:Xavier-1' already exists\"",\""description\"":\""Choose another Thing ID\""}}"",
        ""address"":""_responses"",
        ""thingId"":""keti:Xavier-1""
        },
        {
        ""correlationId"":""<not-provided>"",
        ""timestamp"":""2021-03-15T07:21:07.783106749Z"",
        ""category"":""response"",
        ""type"":""mapped"",
        ""level"":""failure"",
        ""message"":""Ran into a failure when mapping outgoing signal: The Thing with ID 'keti:Xavier-1' already exists Choose another Thing ID"",
        ""address"":""_responses"",
        ""thingId"":""keti:Xavier-1""
        },
        {
        ""correlationId"":""<not-provided>"",
        ""timestamp"":""2021-03-15T07:21:07.787385370Z"",
        ""category"":""response"",
        ""type"":""dispatched"",
        ""level"":""failure"",
        ""message"":""Response was not successful. This may be the case for when a thing could not be found or the authorization subject of the consuming source was not allowed to write a thing. - Message headers: [ditto-read-revoked-subjects=[], ditto-reply-target=0, allow-policy-lockout=true, requested-acks=[], ditto-origin=hono-connection-for-keti-tenant-1, ditto-inbound-payload-mapper=autocreation, response-required=false, ditto-originator=pre-authenticated:hono-connection, ditto-read-subjects=[\""pre-authenticated:hono-connection\""], ditto-auth-context={\""type\"":\""pre-authenticated-connection\"",\""subjects\"":[\""pre-authenticated:hono-connection\""]}, ditto-entity-id=keti:Xavier-1, content-type=application/octet-stream, ditto-expected-response-types=[\""error\"",\""response\""], hono-device-id=keti:Xavier-1] - Message payload: {\""type\"":\""things.responses:errorResponse\"",\""status\"":409,\""thingId\"":\""keti:Xavier-1\"",\""payload\"":{\""status\"":409,\""error\"":\""things:thing.conflict\"",\""message\"":\""The Thing with ID 'keti:Xavier-1' already exists\"",\""description\"":\""Choose another Thing ID\""}}"",
        ""address"":""_responses"",
        ""thingId"":""keti:Xavier-1""
        },
        {
        ""correlationId"":""<not-provided>"",
        ""timestamp"":""2021-03-15T07:21:07.788514076Z"",
        ""category"":""response"",
        ""type"":""mapped"",
        ""level"":""failure"",
        ""message"":""Ran into a failure when mapping outgoing signal: The Thing with ID 'keti:Xavier-1' already exists Choose another Thing ID"",
        ""address"":""_responses"",
        ""thingId"":""keti:Xavier-1""
        },
        {
        ""correlationId"":""<not-provided>"",
        ""timestamp"":""2021-03-15T07:21:07.792814797Z"",
        ""category"":""response"",
        ""type"":""dispatched"",
        ""level"":""failure"",
        ""message"":""Response was not successful. This may be the case for when a thing could not be found or the authorization subject of the consuming source was not allowed to write a thing. - Message headers: [ditto-read-revoked-subjects=[], ditto-reply-target=0, allow-policy-lockout=true, requested-acks=[], ditto-origin=hono-connection-for-keti-tenant-1, ditto-inbound-payload-mapper=autocreation, response-required=false, ditto-originator=pre-authenticated:hono-connection, ditto-read-subjects=[\""pre-authenticated:hono-connection\""], ditto-auth-context={\""type\"":\""pre-authenticated-connection\"",\""subjects\"":[\""pre-authenticated:hono-connection\""]}, ditto-entity-id=keti:Xavier-1, content-type=application/octet-stream, ditto-expected-response-types=[\""error\"",\""response\""], hono-device-id=keti:Xavier-1] - Message payload: {\""type\"":\""things.responses:errorResponse\"",\""status\"":409,\""thingId\"":\""keti:Xavier-1\"",\""payload\"":{\""status\"":409,\""error\"":\""things:thing.conflict\"",\""message\"":\""The Thing with ID 'keti:Xavier-1' already exists\"",\""description\"":\""Choose another Thing ID\""}}"",
        ""address"":""_responses"",
        ""thingId"":""keti:Xavier-1""
        },
        {
        ""correlationId"":""<not-provided>"",
        ""timestamp"":""2021-03-15T07:21:07.794335505Z"",
        ""category"":""response"",
        ""type"":""mapped"",
        ""level"":""failure"",
        ""message"":""Ran into a failure when mapping outgoing signal: The Thing with ID 'keti:Xavier-1' already exists Choose another Thing ID"",
        ""address"":""_responses"",
        ""thingId"":""keti:Xavier-1""
        },
        {
        ""correlationId"":""<not-provided>"",
        ""timestamp"":""2021-03-15T07:21:07.797633321Z"",
        ""category"":""response"",
        ""type"":""dispatched"",
        ""level"":""failure"",
        ""message"":""Response was not successful. This may be the case for when a thing could not be found or the authorization subject of the consuming source was not allowed to write a thing. - Message headers: [ditto-read-revoked-subjects=[], ditto-reply-target=0, allow-policy-lockout=true, requested-acks=[], ditto-origin=hono-connection-for-keti-tenant-1, ditto-inbound-payload-mapper=autocreation, response-required=false, ditto-originator=pre-authenticated:hono-connection, ditto-read-subjects=[\""pre-authenticated:hono-connection\""], ditto-auth-context={\""type\"":\""pre-authenticated-connection\"",\""subjects\"":[\""pre-authenticated:hono-connection\""]}, ditto-entity-id=keti:Xavier-1, content-type=application/octet-stream, ditto-expected-response-types=[\""error\"",\""response\""], hono-device-id=keti:Xavier-1] - Message payload: {\""type\"":\""things.responses:errorResponse\"",\""status\"":409,\""thingId\"":\""keti:Xavier-1\"",\""payload\"":{\""status\"":409,\""error\"":\""things:thing.conflict\"",\""message\"":\""The Thing with ID 'keti:Xavier-1' already exists\"",\""description\"":\""Choose another Thing ID\""}}"",
        ""address"":""_responses"",
        ""thingId"":""keti:Xavier-1""
        },
        {
        ""correlationId"":""<not-provided>"",
        ""timestamp"":""2021-03-15T07:21:07.798486425Z"",
        ""category"":""response"",
        ""type"":""mapped"",
        ""level"":""failure"",
        ""message"":""Ran into a failure when mapping outgoing signal: The Thing with ID 'keti:Xavier-1' already exists Choose another Thing ID"",
        ""address"":""_responses"",
        ""thingId"":""keti:Xavier-1""
        }
        ],
        ""enabledSince"":""2021-03-15T07:21:07.978914825Z"",
        ""enabledUntil"":""2021-03-15T08:21:07.979076326Z""
        }
    }
}
~~~





the log says ""autocreation"" mapper worked successfully and message was consummed.
But the creation didn't happen. And I got an error response:

~~~ json
{
  ""status"": 404,
  ""error"": ""things:thing.notfound"",
  ""message"": ""The Thing with ID 'keti:Xavier-1' could not be found or requester had insufficient permissions to access it."",
  ""description"": ""Check if the ID of your requested Thing was correct and you have sufficient permissions.""
}
~~~




Did I miss anything?
Thanks for the help.



","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1002/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1002,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTI1MzY1MQ==,ditto,799253651,1002,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-03-15T09:15:34Z,2021-03-15T09:15:34Z,"Hi @Geonjae-Joo 
The packages chart version `0.1.3` contains Hono chart version `1.4.21` which contains Eclipse Hono `1.5.1`.
As far as I know, `auto-provisioning` came to Eclipse Hono in version `1.6.0`, so the packages you are running does not support that yet, see also the release notes of Hono for ""1.6.0"": https://www.eclipse.org/hono/release-notes/:

> Hono now supports `auto-provisioning` of devices that connect via gateway.

I did not look at your logs yet because I think the versions just mismatch.
Also: for the future, please 
* don't paste sreenshots, that makes copy&paste impossible
* format your JSON codes via markdown","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTI1MzY1MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1002,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTg4ODE3Mg==,ditto,799888172,1002,NA,Geonjae-Joo,62494715,,,NA,2021-03-16T02:09:35Z,2021-03-16T02:09:35Z,"@thjaeckle , thank you for replying, and I fixed previous comment.

I registered hono's tenant, registration and credential. So I think the error is not related to Hono. (because I am not using auto-provisioning function on Hono). Is the ImplicitThingcreation mapper can be used independently, or need to be used with hono auto-provisioning function?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTg4ODE3Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1002,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgwMDAwMTc0OA==,ditto,800001748,1002,NA,DerSchwilk,41327268,David Schwilk,,NA,2021-03-16T06:49:09Z,2021-03-16T06:49:09Z,"Hi @Geonjae-Joo,
you can use the `ImplicitThingCreationMapper` independent of Eclipse Hono `auto-provisioning`.

The `auto-provisioning` feature can be used for filtering when to invoke the `ImplicitThingCreationMapper`.
i.e. setting the mappingDefinition:
```
""mappingDefinitions"": {
	""autoCreation"": {
		""mappingEngine"": ""ImplicitThingCreation"",
		""incomingConditions"": {
			""hono-registration"": ""fn:filter(header:hono_registration_status, 'eq', 'NEW')""
		},
		""options"": {
			""thing"": {
				""thingId"": ""{{ header:device_id }}"",
				""policyId"": ""'""${MY_POLICY}""'"",
				""attributes"": {
					""CreatedBy"": ""ImplicitThingCreation""
				}
			}
		}
	}
}
```
would invoke the `ImplicitThingCreationMapper` only when a new device is registered in Eclispe Hono, thus not causing the log errors: `""Ran into a failure when mapping outgoing signal: The Thing with ID 'keti:Xavier-1' already exists Choose another Thing ID""`

Since the logs state that the `ImplicitThingCreationMapper` was applied correctly for that device, I would think the problem is the used authorization-subject. Can you check whether the authorization-subject granted permissions in `""${MY_POLICY}""` matches the authorization-subject via which you're authenticating the thing-retrieval? You can use the [whoami endpoint](https://www.eclipse.org/ditto/http-api-doc.html#/Policies/get_whoami) for that.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgwMDAwMTc0OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1002,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgwMDAxNDkxOQ==,ditto,800014919,1002,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-03-16T07:12:43Z,2021-03-16T07:12:43Z,"> I registered hono's tenant, registration and credential. So I think the error is not related to Hono. (because I am not using auto-provisioning function on Hono). Is the ImplicitThingcreation mapper can be used independently, or need to be used with hono auto-provisioning function?

Well, yes and no - it can be used independently from Hono as @DerSchwilk already explained - but you need to be able to define a ""condition"" which evaluates to `true` only for incoming messages indicating that a new device was created. And this is for example the case for Hono's [Automatic provisioning](https://www.eclipse.org/hono/docs/concepts/device-provisioning/#automatic-device-provisioning) via the sent [device provisioning notification](https://www.eclipse.org/hono/docs/api/event/#device-provisioning-notification).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgwMDAxNDkxOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1004,https://api.github.com/repos/eclipse-ditto/ditto/issues/1004,ditto,831620436,1004,[Thing service] Publisher crashes with cast exception,mvniekerk,1570687,Michael van Niekerk,,CLOSED,2021-03-15T09:36:15Z,2021-06-22T14:14:56Z,"I'm getting updater publisher crashes after each update:

````log
2021-03-15 10:32:41,513 INFO  [] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Successfully persisted Event <things.events:featurePropertyModified>.
2021-03-15 10:32:41,516 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Publisher unavailable. Dropping <org.eclipse.ditto.services.utils.pubsub.actors.Publisher$Publish@d5fa7e5f>
2021-03-15 10:32:41,516 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Publisher unavailable. Dropping <org.eclipse.ditto.services.utils.pubsub.actors.Publisher$Publish@d5fa7e5f>
2021-03-15 10:32:43,787 DEBUG [] o.e.d.s.u.p.a.PubUpdater akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/pubUpdater57 - started (org.eclipse.ditto.services.utils.pubsub.actors.PubUpdater@496c0f3a)
2021-03-15 10:32:43,787 DEBUG [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - now supervising Actor[akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/pubUpdater57#-1795954696]
2021-03-15 10:32:43,787 DEBUG [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - now supervising Actor[akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/publisher58#2118356483]
2021-03-15 10:32:43,787 DEBUG [] o.e.d.s.u.p.a.PubUpdater akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/pubUpdater57 - now watched by Actor[akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor#-1978375204]
2021-03-15 10:32:43,787 DEBUG [] o.e.d.s.u.p.a.Publisher akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/publisher58 - started (org.eclipse.ditto.services.utils.pubsub.actors.Publisher@fe32a091)
2021-03-15 10:32:43,788 DEBUG [] o.e.d.s.u.p.a.Publisher akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/publisher58 - now watched by Actor[akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor#-1978375204]
2021-03-15 10:32:43,788 DEBUG [] o.e.d.s.u.p.a.Publisher akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/publisher58 - now watched by Actor[akka://ditto-cluster/user/thingsRoot/acks-aware-ack-supervisor/ackUpdater1#1400304943]
2021-03-15 10:32:43,788 DEBUG [] o.e.d.s.u.p.a.Publisher akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/publisher58 - now watched by Actor[akka://ditto-cluster/user/thing-event-aware-replicator#-1624380656]
2021-03-15 10:32:43,789 INFO  [] o.e.d.s.u.p.a.PubUpdater akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/pubUpdater57 - Got <CurrentClusterState(TreeSet(Member(address = akka://ditto-cluster@10.244.0.174:2551, status = Up, roles = HashSet(thing-event-aware, acks-aware, live-signal-aware, dc-default, connectivity)), Member(address = akka://ditto-cluster@10.244.0.80:2551, status = Up, roles = Set(things, thing-event-aware, acks-aware, dc-default)), Member(address = akka://ditto-cluster@10.244.1.10:2551, status = Up, roles = HashSet(acks-aware, live-signal-aware, blocked-namespaces-aware, concierge, dc-default)), Member(address = akka://ditto-cluster@10.244.1.103:2551, status = Up, roles = Set(policies, dc-default)), Member(address = akka://ditto-cluster@10.244.1.123:2551, status = Up, roles = HashSet(thing-event-aware, acks-aware, live-signal-aware, gateway, dc-default)), Member(address = akka://ditto-cluster@10.244.1.34:2551, status = Up, roles = Set(things-search, blocked-namespaces-aware, thing-event-aware, dc-default))), Set(), HashSet(akka://ditto-cluster@10.244.1.123:2551, akka://ditto-cluster@10.244.1.103:2551, akka://ditto-cluster@10.244.0.174:2551, akka://ditto-cluster@10.244.1.10:2551, akka://ditto-cluster@10.244.1.34:2551, akka://ditto-cluster@10.244.0.80:2551), Some(akka://ditto-cluster@10.244.0.174:2551), HashMap(things-search -> Some(akka://ditto-cluster@10.244.1.34:2551), thing-event-aware -> Some(akka://ditto-cluster@10.244.0.174:2551), acks-aware -> Some(akka://ditto-cluster@10.244.0.174:2551), live-signal-aware -> Some(akka://ditto-cluster@10.244.0.174:2551), blocked-namespaces-aware -> Some(akka://ditto-cluster@10.244.1.10:2551), gateway -> Some(akka://ditto-cluster@10.244.1.123:2551), concierge -> Some(akka://ditto-cluster@10.244.1.10:2551), things -> Some(akka://ditto-cluster@10.244.0.80:2551), dc-default -> Some(akka://ditto-cluster@10.244.0.174:2551), connectivity -> Some(akka://ditto-cluster@10.244.0.174:2551), policies -> Some(akka://ditto-cluster@10.244.1.103:2551)))>
2021-03-15 10:32:43,789 DEBUG [] o.e.d.s.u.p.a.PubUpdater akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/pubUpdater57 - now watched by Actor[akka://ditto-cluster/system/eventStreamUnsubscriber-1#-1119856457]
2021-03-15 10:32:44,167 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Child <Actor[akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/publisher58#2118356483]> crashed. Restarting all children after <PT10S>
java.lang.ClassCastException: akka.util.ByteString$ByteString1C incompatible with java.lang.String
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher$$Lambda$2141/0x00000000a24369b0.apply(Unknown Source)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at scala.collection.convert.JavaCollectionWrappers$SetWrapper$$anon$1.forEachRemaining(JavaCollectionWrappers.scala:146)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:497)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:487)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:239)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher.deserializeGroupedHashes(Publisher.java:190)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher.lambda$topicSubscribersChanged$3(Publisher.java:178)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher$$Lambda$2138/0x00000000a2407d10.apply(Unknown Source)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at scala.collection.convert.JavaCollectionWrappers$MapWrapper$$anon$2$$anon$3.forEachRemaining(JavaCollectionWrappers.scala:232)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:497)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:487)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:239)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher.topicSubscribersChanged(Publisher.java:179)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher$$Lambda$1921/0x00000000304933b0.apply(Unknown Source)
	at akka.japi.pf.UnitCaseStatement.apply(CaseStatements.scala:24)
	at akka.japi.pf.UnitCaseStatement.apply(CaseStatements.scala:20)
	at scala.PartialFunction.applyOrElse(PartialFunction.scala:187)
	at scala.PartialFunction.applyOrElse$(PartialFunction.scala:186)
	at akka.japi.pf.UnitCaseStatement.applyOrElse(CaseStatements.scala:20)
	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:241)
	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:242)
	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:242)
	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:242)
	at akka.actor.Actor.aroundReceive(Actor.scala:537)
	at akka.actor.Actor.aroundReceive$(Actor.scala:535)
	at akka.actor.AbstractActor.aroundReceive(AbstractActor.scala:220)
	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:577)
	at akka.actor.ActorCell.invoke(ActorCell.scala:547)
	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:270)
	at akka.dispatch.Mailbox.run(Mailbox.scala:231)
	at akka.dispatch.Mailbox.exec(Mailbox.scala:243)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)
2021-03-15 10:32:44,168 ERROR [] a.a.AllForOneStrategy akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/publisher58 - akka.util.ByteString$ByteString1C incompatible with java.lang.String
java.lang.ClassCastException: akka.util.ByteString$ByteString1C incompatible with java.lang.String
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher$$Lambda$2141/0x00000000a24369b0.apply(Unknown Source)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at scala.collection.convert.JavaCollectionWrappers$SetWrapper$$anon$1.forEachRemaining(JavaCollectionWrappers.scala:146)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:497)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:487)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:239)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher.deserializeGroupedHashes(Publisher.java:190)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher.lambda$topicSubscribersChanged$3(Publisher.java:178)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher$$Lambda$2138/0x00000000a2407d10.apply(Unknown Source)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at scala.collection.convert.JavaCollectionWrappers$MapWrapper$$anon$2$$anon$3.forEachRemaining(JavaCollectionWrappers.scala:232)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:497)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:487)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:239)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher.topicSubscribersChanged(Publisher.java:179)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher$$Lambda$1921/0x00000000304933b0.apply(Unknown Source)
	at akka.japi.pf.UnitCaseStatement.apply(CaseStatements.scala:24)
	at akka.japi.pf.UnitCaseStatement.apply(CaseStatements.scala:20)
	at scala.PartialFunction.applyOrElse(PartialFunction.scala:187)
	at scala.PartialFunction.applyOrElse$(PartialFunction.scala:186)
	at akka.japi.pf.UnitCaseStatement.applyOrElse(CaseStatements.scala:20)
	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:241)
	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:242)
	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:242)
	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:242)
	at akka.actor.Actor.aroundReceive(Actor.scala:537)
	at akka.actor.Actor.aroundReceive$(Actor.scala:535)
	at akka.actor.AbstractActor.aroundReceive(AbstractActor.scala:220)
	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:577)
	at akka.actor.ActorCell.invoke(ActorCell.scala:547)
	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:270)
	at akka.dispatch.Mailbox.run(Mailbox.scala:231)
	at akka.dispatch.Mailbox.exec(Mailbox.scala:243)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)
2021-03-15 10:32:44,168 DEBUG [] o.e.d.s.u.p.a.PubUpdater akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/pubUpdater57 - stopped
2021-03-15 10:32:44,168 DEBUG [] o.e.d.s.u.p.a.Publisher akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/publisher58 - stopped
2021-03-15 10:32:44,168 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Updater terminated, restart scheduled: <Actor[akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/pubUpdater57#-1795954696]>
2021-03-15 10:32:44,167 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Child <Actor[akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/publisher58#2118356483]> crashed. Restarting all children after <PT10S>
java.lang.ClassCastException: akka.util.ByteString$ByteString1C incompatible with java.lang.String
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher$$Lambda$2141/0x00000000a24369b0.apply(Unknown Source)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at scala.collection.convert.JavaCollectionWrappers$SetWrapper$$anon$1.forEachRemaining(JavaCollectionWrappers.scala:146)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:497)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:487)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:239)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher.deserializeGroupedHashes(Publisher.java:190)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher.lambda$topicSubscribersChanged$3(Publisher.java:178)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher$$Lambda$2138/0x00000000a2407d10.apply(Unknown Source)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at scala.collection.convert.JavaCollectionWrappers$MapWrapper$$anon$2$$anon$3.forEachRemaining(JavaCollectionWrappers.scala:232)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:497)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:487)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:239)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher.topicSubscribersChanged(Publisher.java:179)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher$$Lambda$1921/0x00000000304933b0.apply(Unknown Source)
	at akka.japi.pf.UnitCaseStatement.apply(CaseStatements.scala:24)
	at akka.japi.pf.UnitCaseStatement.apply(CaseStatements.scala:20)
	at scala.PartialFunction.applyOrElse(PartialFunction.scala:187)
	at scala.PartialFunction.applyOrElse$(PartialFunction.scala:186)
	at akka.japi.pf.UnitCaseStatement.applyOrElse(CaseStatements.scala:20)
	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:241)
	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:242)
	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:242)
	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:242)
	at akka.actor.Actor.aroundReceive(Actor.scala:537)
	at akka.actor.Actor.aroundReceive$(Actor.scala:535)
	at akka.actor.AbstractActor.aroundReceive(AbstractActor.scala:220)
	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:577)
	at akka.actor.ActorCell.invoke(ActorCell.scala:547)
	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:270)
	at akka.dispatch.Mailbox.run(Mailbox.scala:231)
	at akka.dispatch.Mailbox.exec(Mailbox.scala:243)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)
2021-03-15 10:32:44,168 ERROR [] a.a.AllForOneStrategy akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/publisher58 - akka.util.ByteString$ByteString1C incompatible with java.lang.String
java.lang.ClassCastException: akka.util.ByteString$ByteString1C incompatible with java.lang.String
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher$$Lambda$2141/0x00000000a24369b0.apply(Unknown Source)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at scala.collection.convert.JavaCollectionWrappers$SetWrapper$$anon$1.forEachRemaining(JavaCollectionWrappers.scala:146)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:497)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:487)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:239)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher.deserializeGroupedHashes(Publisher.java:190)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher.lambda$topicSubscribersChanged$3(Publisher.java:178)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher$$Lambda$2138/0x00000000a2407d10.apply(Unknown Source)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at scala.collection.convert.JavaCollectionWrappers$MapWrapper$$anon$2$$anon$3.forEachRemaining(JavaCollectionWrappers.scala:232)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:497)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:487)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:239)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher.topicSubscribersChanged(Publisher.java:179)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher$$Lambda$1921/0x00000000304933b0.apply(Unknown Source)
	at akka.japi.pf.UnitCaseStatement.apply(CaseStatements.scala:24)
	at akka.japi.pf.UnitCaseStatement.apply(CaseStatements.scala:20)
	at scala.PartialFunction.applyOrElse(PartialFunction.scala:187)
	at scala.PartialFunction.applyOrElse$(PartialFunction.scala:186)
	at akka.japi.pf.UnitCaseStatement.applyOrElse(CaseStatements.scala:20)
	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:241)
	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:242)
	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:242)
	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:242)
	at akka.actor.Actor.aroundReceive(Actor.scala:537)
	at akka.actor.Actor.aroundReceive$(Actor.scala:535)
	at akka.actor.AbstractActor.aroundReceive(AbstractActor.scala:220)
	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:577)
	at akka.actor.ActorCell.invoke(ActorCell.scala:547)
	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:270)
	at akka.dispatch.Mailbox.run(Mailbox.scala:231)
	at akka.dispatch.Mailbox.exec(Mailbox.scala:243)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)
2021-03-15 10:32:44,168 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Updater terminated, restart scheduled: <Actor[akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/pubUpdater57#-1795954696]>
````

This causes https://github.com/eclipse/ditto/issues/1001","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1004/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1004,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTI3NDUzNg==,ditto,799274536,1004,NA,mvniekerk,1570687,Michael van Niekerk,,NA,2021-03-15T09:42:40Z,2021-03-15T09:42:40Z,"Trace logs - (I couldn't find an attach button so not to clog this page with logs)
````
2021-03-15 10:40:33,654 TRACE [] o.e.d.s.u.c.AbstractJsonifiableWithDittoHeadersSerializer  - fromBinary CBOR which got 'in
2021-03-15 10:40:33,656 DEBUG [] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Handling by strategy: <ModifyFeature [type=things.commands:modifyFeature, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=242b7baf-113e-46af-b346-79ccc6edfc8d, mqtt.retain=false, mqtt.topic=application/1/device/5e0cfad574ac2772/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, feature=ImmutableFeature [featureId=speed, definition=null, properties={""configuration"":{""on"":false,""throttle"":50,""wet"":false}}, desiredProperties=null]]>
2021-03-15 10:40:33,656 DEBUG [242b7baf-113e-46af-b346-79ccc6edfc8d] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Applying command <ModifyFeature [type=things.commands:modifyFeature, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=242b7baf-113e-46af-b346-79ccc6edfc8d, mqtt.retain=false, mqtt.topic=application/1/device/5e0cfad574ac2772/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, feature=ImmutableFeature [featureId=speed, definition=null, properties={""configuration"":{""on"":false,""throttle"":50,""wet"":false}}, desiredProperties=null]]>
2021-03-15 10:40:33,656 DEBUG [242b7baf-113e-46af-b346-79ccc6edfc8d] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Applying command <ModifyFeature [type=things.commands:modifyFeature, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=242b7baf-113e-46af-b346-79ccc6edfc8d, mqtt.retain=false, mqtt.topic=application/1/device/5e0cfad574ac2772/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, feature=ImmutableFeature [featureId=speed, definition=null, properties={""configuration"":{""on"":false,""throttle"":50,""wet"":false}}, desiredProperties=null]]>
2021-03-15 10:40:33,670 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Publisher unavailable. Dropping <org.eclipse.ditto.services.utils.pubsub.actors.Publisher$Publish@5c316a8>
2021-03-15 10:40:33,657 DEBUG [242b7baf-113e-46af-b346-79ccc6edfc8d] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Validating conditional headers with currentETagValue <""hash:678c629f""> on command <ModifyFeature [type=things.commands:modifyFeature, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=242b7baf-113e-46af-b346-79ccc6edfc8d, mqtt.retain=false, mqtt.topic=application/1/device/5e0cfad574ac2772/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, feature=ImmutableFeature [featureId=speed, definition=null, properties={""configuration"":{""on"":false,""throttle"":50,""wet"":false}}, desiredProperties=null]]>.
2021-03-15 10:40:33,657 DEBUG [242b7baf-113e-46af-b346-79ccc6edfc8d] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Validating conditional headers succeeded.
2021-03-15 10:40:33,657 DEBUG [242b7baf-113e-46af-b346-79ccc6edfc8d] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Applying command <ModifyFeature [type=things.commands:modifyFeature, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=242b7baf-113e-46af-b346-79ccc6edfc8d, mqtt.retain=false, mqtt.topic=application/1/device/5e0cfad574ac2772/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, feature=ImmutableFeature [featureId=speed, definition=null, properties={""configuration"":{""on"":false,""throttle"":50,""wet"":false}}, desiredProperties=null]]>
2021-03-15 10:40:33,659 TRACE [] o.e.d.s.u.c.AbstractJsonifiableWithDittoHeadersSerializer  - fromBinary CBOR which got 'in
2021-03-15 10:40:33,661 DEBUG [242b7baf-113e-46af-b346-79ccc6edfc8d] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Persisting Event <things.events:featureModified>.
2021-03-15 10:40:33,667 TRACE [] o.e.d.s.u.c.AbstractJsonifiableWithDittoHeadersSerializer  - fromBinary CBOR which got 'in
2021-03-15 10:40:33,668 TRACE [] o.e.d.s.u.m.i.t.StoppedKamonTimer  - Timer with name <akka-persistence-mongo.journal.scala-official.write.append> and segment <overall> was stopped after <5319567> nanoseconds
2021-03-15 10:40:33,668 INFO  [] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Successfully persisted Event <things.events:featureModified>.
2021-03-15 10:40:33,670 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Publisher unavailable. Dropping <org.eclipse.ditto.services.utils.pubsub.actors.Publisher$Publish@5c316a8>
2021-03-15 10:40:33,670 DEBUG [] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Handling by strategy: <ModifyFeature [type=things.commands:modifyFeature, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=baa5306e-a654-4b78-b83e-4f31d3a4b6bb, mqtt.retain=false, mqtt.topic=application/1/device/5e0cfad574ac2772/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, feature=ImmutableFeature [featureId=pressure, definition=null, properties={""value"":0.5433333,""warn_low"":false,""warn_high"":false}, desiredProperties=null]]>
2021-03-15 10:40:33,670 DEBUG [baa5306e-a654-4b78-b83e-4f31d3a4b6bb] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Applying command <ModifyFeature [type=things.commands:modifyFeature, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=baa5306e-a654-4b78-b83e-4f31d3a4b6bb, mqtt.retain=false, mqtt.topic=application/1/device/5e0cfad574ac2772/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, feature=ImmutableFeature [featureId=pressure, definition=null, properties={""value"":0.5433333,""warn_low"":false,""warn_high"":false}, desiredProperties=null]]>
2021-03-15 10:40:33,670 DEBUG [baa5306e-a654-4b78-b83e-4f31d3a4b6bb] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Applying command <ModifyFeature [type=things.commands:modifyFeature, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=baa5306e-a654-4b78-b83e-4f31d3a4b6bb, mqtt.retain=false, mqtt.topic=application/1/device/5e0cfad574ac2772/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, feature=ImmutableFeature [featureId=pressure, definition=null, properties={""value"":0.5433333,""warn_low"":false,""warn_high"":false}, desiredProperties=null]]>
2021-03-15 10:40:33,671 DEBUG [baa5306e-a654-4b78-b83e-4f31d3a4b6bb] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Validating conditional headers with currentETagValue <""hash:c39846ac""> on command <ModifyFeature [type=things.commands:modifyFeature, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=baa5306e-a654-4b78-b83e-4f31d3a4b6bb, mqtt.retain=false, mqtt.topic=application/1/device/5e0cfad574ac2772/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, feature=ImmutableFeature [featureId=pressure, definition=null, properties={""value"":0.5433333,""warn_low"":false,""warn_high"":false}, desiredProperties=null]]>.
2021-03-15 10:40:33,671 DEBUG [baa5306e-a654-4b78-b83e-4f31d3a4b6bb] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Validating conditional headers succeeded.
2021-03-15 10:40:33,671 DEBUG [baa5306e-a654-4b78-b83e-4f31d3a4b6bb] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Applying command <ModifyFeature [type=things.commands:modifyFeature, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=baa5306e-a654-4b78-b83e-4f31d3a4b6bb, mqtt.retain=false, mqtt.topic=application/1/device/5e0cfad574ac2772/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, feature=ImmutableFeature [featureId=pressure, definition=null, properties={""value"":0.5433333,""warn_low"":false,""warn_high"":false}, desiredProperties=null]]>
2021-03-15 10:40:33,673 DEBUG [baa5306e-a654-4b78-b83e-4f31d3a4b6bb] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Persisting Event <things.events:featureModified>.
2021-03-15 10:40:33,678 TRACE [] o.e.d.s.u.m.i.t.StoppedKamonTimer  - Timer with name <akka-persistence-mongo.journal.scala-official.write.append> and segment <overall> was stopped after <4243993> nanoseconds
2021-03-15 10:40:33,679 INFO  [] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Successfully persisted Event <things.events:featureModified>.
2021-03-15 10:40:33,680 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Publisher unavailable. Dropping <org.eclipse.ditto.services.utils.pubsub.actors.Publisher$Publish@35355a3c>
2021-03-15 10:40:33,680 DEBUG [] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Handling by strategy: <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=d695b215-0cfd-4a2f-8f84-9083217ba0ba, mqtt.retain=false, mqtt.topic=application/1/device/5e0cfad574ac2772/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, featureId=direction, propertyPointer=/configuration/clockwise, propertyValue=true]>
2021-03-15 10:40:33,680 DEBUG [d695b215-0cfd-4a2f-8f84-9083217ba0ba] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Applying command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=d695b215-0cfd-4a2f-8f84-9083217ba0ba, mqtt.retain=false, mqtt.topic=application/1/device/5e0cfad574ac2772/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, featureId=direction, propertyPointer=/configuration/clockwise, propertyValue=true]>
2021-03-15 10:40:33,681 DEBUG [d695b215-0cfd-4a2f-8f84-9083217ba0ba] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Applying command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=d695b215-0cfd-4a2f-8f84-9083217ba0ba, mqtt.retain=false, mqtt.topic=application/1/device/5e0cfad574ac2772/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, featureId=direction, propertyPointer=/configuration/clockwise, propertyValue=true]>
2021-03-15 10:40:33,681 DEBUG [d695b215-0cfd-4a2f-8f84-9083217ba0ba] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Validating conditional headers with currentETagValue <""hash:4ee""> on command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=d695b215-0cfd-4a2f-8f84-9083217ba0ba, mqtt.retain=false, mqtt.topic=application/1/device/5e0cfad574ac2772/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, featureId=direction, propertyPointer=/configuration/clockwise, propertyValue=true]>.
2021-03-15 10:40:33,681 DEBUG [d695b215-0cfd-4a2f-8f84-9083217ba0ba] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Validating conditional headers succeeded.
2021-03-15 10:40:33,682 DEBUG [d695b215-0cfd-4a2f-8f84-9083217ba0ba] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Applying command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=d695b215-0cfd-4a2f-8f84-9083217ba0ba, mqtt.retain=false, mqtt.topic=application/1/device/5e0cfad574ac2772/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, featureId=direction, propertyPointer=/configuration/clockwise, propertyValue=true]>
2021-03-15 10:40:33,684 DEBUG [d695b215-0cfd-4a2f-8f84-9083217ba0ba] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Persisting Event <things.events:featurePropertyModified>.
2021-03-15 10:40:33,680 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Publisher unavailable. Dropping <org.eclipse.ditto.services.utils.pubsub.actors.Publisher$Publish@35355a3c>
2021-03-15 10:40:33,690 TRACE [] o.e.d.s.u.m.i.t.StoppedKamonTimer  - Timer with name <akka-persistence-mongo.journal.scala-official.write.append> and segment <overall> was stopped after <4795099> nanoseconds
2021-03-15 10:40:33,692 INFO  [] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Successfully persisted Event <things.events:featurePropertyModified>.
2021-03-15 10:40:33,694 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Publisher unavailable. Dropping <org.eclipse.ditto.services.utils.pubsub.actors.Publisher$Publish@6687638f>
2021-03-15 10:40:33,694 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Publisher unavailable. Dropping <org.eclipse.ditto.services.utils.pubsub.actors.Publisher$Publish@6687638f>
2021-03-15 10:40:37,737 TRACE [] o.e.d.s.u.c.AbstractJsonifiableWithDittoHeadersSerializer  - fromBinary CBOR which got 'in
2021-03-15 10:40:37,739 DEBUG [] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Handling by strategy: <ModifyFeature [type=things.commands:modifyFeature, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=b06c2d91-8b29-4227-a138-83745400d37f, mqtt.retain=false, mqtt.topic=application/1/device/c44330243f0915b2/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, feature=ImmutableFeature [featureId=location, definition=null, properties={""longitude"":26.49337,""latitude"":-27.28195}, desiredProperties=null]]>
2021-03-15 10:40:37,739 DEBUG [b06c2d91-8b29-4227-a138-83745400d37f] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Applying command <ModifyFeature [type=things.commands:modifyFeature, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=b06c2d91-8b29-4227-a138-83745400d37f, mqtt.retain=false, mqtt.topic=application/1/device/c44330243f0915b2/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, feature=ImmutableFeature [featureId=location, definition=null, properties={""longitude"":26.49337,""latitude"":-27.28195}, desiredProperties=null]]>
2021-03-15 10:40:37,739 DEBUG [b06c2d91-8b29-4227-a138-83745400d37f] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Applying command <ModifyFeature [type=things.commands:modifyFeature, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=b06c2d91-8b29-4227-a138-83745400d37f, mqtt.retain=false, mqtt.topic=application/1/device/c44330243f0915b2/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, feature=ImmutableFeature [featureId=location, definition=null, properties={""longitude"":26.49337,""latitude"":-27.28195}, desiredProperties=null]]>
2021-03-15 10:40:37,739 DEBUG [b06c2d91-8b29-4227-a138-83745400d37f] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Validating conditional headers with currentETagValue <""hash:b646f388""> on command <ModifyFeature [type=things.commands:modifyFeature, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=b06c2d91-8b29-4227-a138-83745400d37f, mqtt.retain=false, mqtt.topic=application/1/device/c44330243f0915b2/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, feature=ImmutableFeature [featureId=location, definition=null, properties={""longitude"":26.49337,""latitude"":-27.28195}, desiredProperties=null]]>.
2021-03-15 10:40:37,740 TRACE [] o.e.d.s.u.c.AbstractJsonifiableWithDittoHeadersSerializer  - fromBinary CBOR which got 'in
2021-03-15 10:40:37,740 DEBUG [b06c2d91-8b29-4227-a138-83745400d37f] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Validating conditional headers succeeded.
2021-03-15 10:40:37,740 DEBUG [b06c2d91-8b29-4227-a138-83745400d37f] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Applying command <ModifyFeature [type=things.commands:modifyFeature, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=b06c2d91-8b29-4227-a138-83745400d37f, mqtt.retain=false, mqtt.topic=application/1/device/c44330243f0915b2/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, feature=ImmutableFeature [featureId=location, definition=null, properties={""longitude"":26.49337,""latitude"":-27.28195}, desiredProperties=null]]>
2021-03-15 10:40:37,746 TRACE [] o.e.d.s.u.c.AbstractJsonifiableWithDittoHeadersSerializer  - fromBinary CBOR which got 'in
2021-03-15 10:40:37,749 DEBUG [b06c2d91-8b29-4227-a138-83745400d37f] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Persisting Event <things.events:featureModified>.
2021-03-15 10:40:37,756 TRACE [] o.e.d.s.u.c.AbstractJsonifiableWithDittoHeadersSerializer  - fromBinary CBOR which got 'in
2021-03-15 10:40:37,761 TRACE [] o.e.d.s.u.c.AbstractJsonifiableWithDittoHeadersSerializer  - fromBinary CBOR which got 'in
2021-03-15 10:40:37,766 TRACE [] o.e.d.s.u.m.i.t.StoppedKamonTimer  - Timer with name <akka-persistence-mongo.journal.scala-official.write.append> and segment <overall> was stopped after <14540276> nanoseconds
2021-03-15 10:40:37,768 INFO  [] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Successfully persisted Event <things.events:featureModified>.
2021-03-15 10:40:37,769 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Publisher unavailable. Dropping <org.eclipse.ditto.services.utils.pubsub.actors.Publisher$Publish@3cfca4c3>
2021-03-15 10:40:37,769 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Publisher unavailable. Dropping <org.eclipse.ditto.services.utils.pubsub.actors.Publisher$Publish@3cfca4c3>
2021-03-15 10:40:37,770 DEBUG [] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Handling by strategy: <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=7cef79fd-c42b-439e-b422-da4d9875e0d8, mqtt.retain=false, mqtt.topic=application/1/device/c44330243f0915b2/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, featureId=direction, propertyPointer=/status, propertyValue={""direction"":125.9521,""passed_point"":false}]>
2021-03-15 10:40:37,770 DEBUG [7cef79fd-c42b-439e-b422-da4d9875e0d8] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Applying command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=7cef79fd-c42b-439e-b422-da4d9875e0d8, mqtt.retain=false, mqtt.topic=application/1/device/c44330243f0915b2/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, featureId=direction, propertyPointer=/status, propertyValue={""direction"":125.9521,""passed_point"":false}]>
2021-03-15 10:40:37,772 DEBUG [7cef79fd-c42b-439e-b422-da4d9875e0d8] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Applying command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=7cef79fd-c42b-439e-b422-da4d9875e0d8, mqtt.retain=false, mqtt.topic=application/1/device/c44330243f0915b2/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, featureId=direction, propertyPointer=/status, propertyValue={""direction"":125.9521,""passed_point"":false}]>
2021-03-15 10:40:37,772 DEBUG [7cef79fd-c42b-439e-b422-da4d9875e0d8] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Validating conditional headers with currentETagValue <""hash:7abccca3""> on command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=7cef79fd-c42b-439e-b422-da4d9875e0d8, mqtt.retain=false, mqtt.topic=application/1/device/c44330243f0915b2/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, featureId=direction, propertyPointer=/status, propertyValue={""direction"":125.9521,""passed_point"":false}]>.
2021-03-15 10:40:37,772 DEBUG [7cef79fd-c42b-439e-b422-da4d9875e0d8] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Validating conditional headers succeeded.
2021-03-15 10:40:37,773 DEBUG [7cef79fd-c42b-439e-b422-da4d9875e0d8] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Applying command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=7cef79fd-c42b-439e-b422-da4d9875e0d8, mqtt.retain=false, mqtt.topic=application/1/device/c44330243f0915b2/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, featureId=direction, propertyPointer=/status, propertyValue={""direction"":125.9521,""passed_point"":false}]>
2021-03-15 10:40:37,782 DEBUG [7cef79fd-c42b-439e-b422-da4d9875e0d8] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Persisting Event <things.events:featurePropertyModified>.
2021-03-15 10:40:37,792 TRACE [] o.e.d.s.u.m.i.t.StoppedKamonTimer  - Timer with name <akka-persistence-mongo.journal.scala-official.write.append> and segment <overall> was stopped after <7749937> nanoseconds
2021-03-15 10:40:37,793 INFO  [] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Successfully persisted Event <things.events:featurePropertyModified>.
2021-03-15 10:40:37,794 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Publisher unavailable. Dropping <org.eclipse.ditto.services.utils.pubsub.actors.Publisher$Publish@f878caca>
2021-03-15 10:40:37,794 DEBUG [] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Handling by strategy: <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=ea01c159-fcbc-42c3-8a62-06b92ebcc5c0, mqtt.retain=false, mqtt.topic=application/1/device/c44330243f0915b2/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, featureId=direction, propertyPointer=/configuration/midPosition, propertyValue={""longitude"":26.49611,""latitude"":-27.28368}]>
2021-03-15 10:40:37,795 DEBUG [ea01c159-fcbc-42c3-8a62-06b92ebcc5c0] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Applying command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=ea01c159-fcbc-42c3-8a62-06b92ebcc5c0, mqtt.retain=false, mqtt.topic=application/1/device/c44330243f0915b2/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, featureId=direction, propertyPointer=/configuration/midPosition, propertyValue={""longitude"":26.49611,""latitude"":-27.28368}]>
2021-03-15 10:40:37,795 DEBUG [ea01c159-fcbc-42c3-8a62-06b92ebcc5c0] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Applying command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=ea01c159-fcbc-42c3-8a62-06b92ebcc5c0, mqtt.retain=false, mqtt.topic=application/1/device/c44330243f0915b2/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, featureId=direction, propertyPointer=/configuration/midPosition, propertyValue={""longitude"":26.49611,""latitude"":-27.28368}]>
2021-03-15 10:40:37,795 DEBUG [ea01c159-fcbc-42c3-8a62-06b92ebcc5c0] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Validating conditional headers with currentETagValue <""hash:f8248921""> on command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=ea01c159-fcbc-42c3-8a62-06b92ebcc5c0, mqtt.retain=false, mqtt.topic=application/1/device/c44330243f0915b2/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, featureId=direction, propertyPointer=/configuration/midPosition, propertyValue={""longitude"":26.49611,""latitude"":-27.28368}]>.
2021-03-15 10:40:37,795 DEBUG [ea01c159-fcbc-42c3-8a62-06b92ebcc5c0] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Validating conditional headers succeeded.
2021-03-15 10:40:37,795 DEBUG [ea01c159-fcbc-42c3-8a62-06b92ebcc5c0] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Applying command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=ea01c159-fcbc-42c3-8a62-06b92ebcc5c0, mqtt.retain=false, mqtt.topic=application/1/device/c44330243f0915b2/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, featureId=direction, propertyPointer=/configuration/midPosition, propertyValue={""longitude"":26.49611,""latitude"":-27.28368}]>
2021-03-15 10:40:37,794 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Publisher unavailable. Dropping <org.eclipse.ditto.services.utils.pubsub.actors.Publisher$Publish@f878caca>
2021-03-15 10:40:37,798 DEBUG [ea01c159-fcbc-42c3-8a62-06b92ebcc5c0] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Persisting Event <things.events:featurePropertyModified>.
2021-03-15 10:40:37,804 TRACE [] o.e.d.s.u.m.i.t.StoppedKamonTimer  - Timer with name <akka-persistence-mongo.journal.scala-official.write.append> and segment <overall> was stopped after <4951369> nanoseconds
2021-03-15 10:40:37,805 INFO  [] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Successfully persisted Event <things.events:featurePropertyModified>.
2021-03-15 10:40:37,806 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Publisher unavailable. Dropping <org.eclipse.ditto.services.utils.pubsub.actors.Publisher$Publish@fb042aa2>
2021-03-15 10:40:37,807 DEBUG [] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Handling by strategy: <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=ac7c35b7-5986-46f0-8725-ff2ee11550dd, mqtt.retain=false, mqtt.topic=application/1/device/c44330243f0915b2/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, featureId=direction, propertyPointer=/configuration/endPosition, propertyValue=0]>
2021-03-15 10:40:37,807 DEBUG [ac7c35b7-5986-46f0-8725-ff2ee11550dd] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Applying command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=ac7c35b7-5986-46f0-8725-ff2ee11550dd, mqtt.retain=false, mqtt.topic=application/1/device/c44330243f0915b2/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, featureId=direction, propertyPointer=/configuration/endPosition, propertyValue=0]>
2021-03-15 10:40:37,807 DEBUG [ac7c35b7-5986-46f0-8725-ff2ee11550dd] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Applying command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=ac7c35b7-5986-46f0-8725-ff2ee11550dd, mqtt.retain=false, mqtt.topic=application/1/device/c44330243f0915b2/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, featureId=direction, propertyPointer=/configuration/endPosition, propertyValue=0]>
2021-03-15 10:40:37,807 DEBUG [ac7c35b7-5986-46f0-8725-ff2ee11550dd] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Validating conditional headers with currentETagValue <""hash:0""> on command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=ac7c35b7-5986-46f0-8725-ff2ee11550dd, mqtt.retain=false, mqtt.topic=application/1/device/c44330243f0915b2/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, featureId=direction, propertyPointer=/configuration/endPosition, propertyValue=0]>.
2021-03-15 10:40:37,807 DEBUG [ac7c35b7-5986-46f0-8725-ff2ee11550dd] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Validating conditional headers succeeded.
2021-03-15 10:40:37,807 DEBUG [ac7c35b7-5986-46f0-8725-ff2ee11550dd] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Applying command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=ac7c35b7-5986-46f0-8725-ff2ee11550dd, mqtt.retain=false, mqtt.topic=application/1/device/c44330243f0915b2/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, featureId=direction, propertyPointer=/configuration/endPosition, propertyValue=0]>
2021-03-15 10:40:37,806 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Publisher unavailable. Dropping <org.eclipse.ditto.services.utils.pubsub.actors.Publisher$Publish@fb042aa2>
2021-03-15 10:40:37,810 DEBUG [ac7c35b7-5986-46f0-8725-ff2ee11550dd] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Persisting Event <things.events:featurePropertyModified>.
2021-03-15 10:40:37,821 TRACE [] o.e.d.s.u.m.i.t.StoppedKamonTimer  - Timer with name <akka-persistence-mongo.journal.scala-official.write.append> and segment <overall> was stopped after <10569472> nanoseconds
2021-03-15 10:40:37,823 INFO  [] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Successfully persisted Event <things.events:featurePropertyModified>.
2021-03-15 10:40:37,825 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Publisher unavailable. Dropping <org.eclipse.ditto.services.utils.pubsub.actors.Publisher$Publish@dfd10225>
2021-03-15 10:40:37,825 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Publisher unavailable. Dropping <org.eclipse.ditto.services.utils.pubsub.actors.Publisher$Publish@dfd10225>
2021-03-15 10:40:37,825 DEBUG [] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Handling by strategy: <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=95a81c31-1c46-4082-861b-97fdf9ef6703, mqtt.retain=false, mqtt.topic=application/1/device/c44330243f0915b2/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, featureId=direction, propertyPointer=/configuration/offset, propertyValue=-275]>
2021-03-15 10:40:37,826 DEBUG [95a81c31-1c46-4082-861b-97fdf9ef6703] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Applying command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=95a81c31-1c46-4082-861b-97fdf9ef6703, mqtt.retain=false, mqtt.topic=application/1/device/c44330243f0915b2/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, featureId=direction, propertyPointer=/configuration/offset, propertyValue=-275]>
2021-03-15 10:40:37,840 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Publisher unavailable. Dropping <org.eclipse.ditto.services.utils.pubsub.actors.Publisher$Publish@f8323f45>
2021-03-15 10:40:37,826 DEBUG [95a81c31-1c46-4082-861b-97fdf9ef6703] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Applying command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=95a81c31-1c46-4082-861b-97fdf9ef6703, mqtt.retain=false, mqtt.topic=application/1/device/c44330243f0915b2/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, featureId=direction, propertyPointer=/configuration/offset, propertyValue=-275]>
2021-03-15 10:40:37,826 DEBUG [95a81c31-1c46-4082-861b-97fdf9ef6703] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Validating conditional headers with currentETagValue <""hash:fffffeed""> on command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=95a81c31-1c46-4082-861b-97fdf9ef6703, mqtt.retain=false, mqtt.topic=application/1/device/c44330243f0915b2/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, featureId=direction, propertyPointer=/configuration/offset, propertyValue=-275]>.
2021-03-15 10:40:37,827 DEBUG [95a81c31-1c46-4082-861b-97fdf9ef6703] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Validating conditional headers succeeded.
2021-03-15 10:40:37,827 DEBUG [95a81c31-1c46-4082-861b-97fdf9ef6703] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Applying command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=95a81c31-1c46-4082-861b-97fdf9ef6703, mqtt.retain=false, mqtt.topic=application/1/device/c44330243f0915b2/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, featureId=direction, propertyPointer=/configuration/offset, propertyValue=-275]>
2021-03-15 10:40:37,832 DEBUG [95a81c31-1c46-4082-861b-97fdf9ef6703] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Persisting Event <things.events:featurePropertyModified>.
2021-03-15 10:40:37,837 TRACE [] o.e.d.s.u.m.i.t.StoppedKamonTimer  - Timer with name <akka-persistence-mongo.journal.scala-official.write.append> and segment <overall> was stopped after <4811245> nanoseconds
2021-03-15 10:40:37,838 INFO  [] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Successfully persisted Event <things.events:featurePropertyModified>.
2021-03-15 10:40:37,840 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Publisher unavailable. Dropping <org.eclipse.ditto.services.utils.pubsub.actors.Publisher$Publish@f8323f45>
2021-03-15 10:40:39,004 DEBUG [] o.e.d.s.u.p.a.PubUpdater akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/pubUpdater13 - started (org.eclipse.ditto.services.utils.pubsub.actors.PubUpdater@3c4a03e2)
2021-03-15 10:40:39,005 DEBUG [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - now supervising Actor[akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/pubUpdater13#1236384876]
2021-03-15 10:40:39,005 DEBUG [] o.e.d.s.u.p.a.PubUpdater akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/pubUpdater13 - now watched by Actor[akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor#-1713157646]
2021-03-15 10:40:39,005 DEBUG [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - now supervising Actor[akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/publisher14#-264690097]
2021-03-15 10:40:39,005 DEBUG [] o.e.d.s.u.p.a.Publisher akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/publisher14 - started (org.eclipse.ditto.services.utils.pubsub.actors.Publisher@1b37d40b)
2021-03-15 10:40:39,005 DEBUG [] o.e.d.s.u.p.a.Publisher akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/publisher14 - now watched by Actor[akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor#-1713157646]
2021-03-15 10:40:39,005 DEBUG [] o.e.d.s.u.p.a.Publisher akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/publisher14 - now watched by Actor[akka://ditto-cluster/user/thingsRoot/acks-aware-ack-supervisor/ackUpdater1#1979099173]
2021-03-15 10:40:39,006 DEBUG [] o.e.d.s.u.p.a.Publisher akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/publisher14 - now watched by Actor[akka://ditto-cluster/user/thing-event-aware-replicator#-975100306]
2021-03-15 10:40:39,006 INFO  [] o.e.d.s.u.p.a.PubUpdater akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/pubUpdater13 - Got <CurrentClusterState(TreeSet(Member(address = akka://ditto-cluster@10.244.0.174:2551, status = Up, roles = HashSet(thing-event-aware, acks-aware, live-signal-aware, dc-default, connectivity)), Member(address = akka://ditto-cluster@10.244.1.10:2551, status = Up, roles = HashSet(acks-aware, live-signal-aware, blocked-namespaces-aware, concierge, dc-default)), Member(address = akka://ditto-cluster@10.244.1.103:2551, status = Up, roles = Set(policies, dc-default)), Member(address = akka://ditto-cluster@10.244.1.123:2551, status = Up, roles = HashSet(thing-event-aware, acks-aware, live-signal-aware, gateway, dc-default)), Member(address = akka://ditto-cluster@10.244.1.34:2551, status = Up, roles = Set(things-search, blocked-namespaces-aware, thing-event-aware, dc-default)), Member(address = akka://ditto-cluster@10.244.1.35:2551, status = Up, roles = Set(things, thing-event-aware, acks-aware, dc-default))), Set(), HashSet(akka://ditto-cluster@10.244.1.123:2551, akka://ditto-cluster@10.244.1.103:2551, akka://ditto-cluster@10.244.0.174:2551, akka://ditto-cluster@10.244.1.10:2551, akka://ditto-cluster@10.244.1.35:2551, akka://ditto-cluster@10.244.1.34:2551), Some(akka://ditto-cluster@10.244.0.174:2551), HashMap(things-search -> Some(akka://ditto-cluster@10.244.1.34:2551), thing-event-aware -> Some(akka://ditto-cluster@10.244.0.174:2551), acks-aware -> Some(akka://ditto-cluster@10.244.0.174:2551), live-signal-aware -> Some(akka://ditto-cluster@10.244.0.174:2551), blocked-namespaces-aware -> Some(akka://ditto-cluster@10.244.1.10:2551), gateway -> Some(akka://ditto-cluster@10.244.1.123:2551), concierge -> Some(akka://ditto-cluster@10.244.1.10:2551), things -> Some(akka://ditto-cluster@10.244.1.35:2551), dc-default -> Some(akka://ditto-cluster@10.244.0.174:2551), connectivity -> Some(akka://ditto-cluster@10.244.0.174:2551), policies -> Some(akka://ditto-cluster@10.244.1.103:2551)))>
2021-03-15 10:40:39,006 DEBUG [] o.e.d.s.u.p.a.PubUpdater akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/pubUpdater13 - now watched by Actor[akka://ditto-cluster/system/eventStreamUnsubscriber-1#-44248250]
2021-03-15 10:40:39,385 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Child <Actor[akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/publisher14#-264690097]> crashed. Restarting all children after <PT10S>
java.lang.ClassCastException: akka.util.ByteString$ByteString1C incompatible with java.lang.String
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher$$Lambda$2151/0x000000000c059b80.apply(Unknown Source)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at scala.collection.convert.JavaCollectionWrappers$SetWrapper$$anon$1.forEachRemaining(JavaCollectionWrappers.scala:146)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:497)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:487)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:239)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher.deserializeGroupedHashes(Publisher.java:190)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher.lambda$topicSubscribersChanged$3(Publisher.java:178)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher$$Lambda$2145/0x000000000c057a90.apply(Unknown Source)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at scala.collection.convert.JavaCollectionWrappers$MapWrapper$$anon$2$$anon$3.forEachRemaining(JavaCollectionWrappers.scala:232)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:497)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:487)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:239)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher.topicSubscribersChanged(Publisher.java:179)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher$$Lambda$2014/0x000000001c07d530.apply(Unknown Source)
	at akka.japi.pf.UnitCaseStatement.apply(CaseStatements.scala:24)
	at akka.japi.pf.UnitCaseStatement.apply(CaseStatements.scala:20)
	at scala.PartialFunction.applyOrElse(PartialFunction.scala:187)
	at scala.PartialFunction.applyOrElse$(PartialFunction.scala:186)
	at akka.japi.pf.UnitCaseStatement.applyOrElse(CaseStatements.scala:20)
	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:241)
	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:242)
	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:242)
	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:242)
	at akka.actor.Actor.aroundReceive(Actor.scala:537)
	at akka.actor.Actor.aroundReceive$(Actor.scala:535)
	at akka.actor.AbstractActor.aroundReceive(AbstractActor.scala:220)
	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:577)
	at akka.actor.ActorCell.invoke(ActorCell.scala:547)
	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:270)
	at akka.dispatch.Mailbox.run(Mailbox.scala:231)
	at akka.dispatch.Mailbox.exec(Mailbox.scala:243)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)
2021-03-15 10:40:39,386 ERROR [] a.a.AllForOneStrategy akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/publisher14 - akka.util.ByteString$ByteString1C incompatible with java.lang.String
java.lang.ClassCastException: akka.util.ByteString$ByteString1C incompatible with java.lang.String
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher$$Lambda$2151/0x000000000c059b80.apply(Unknown Source)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at scala.collection.convert.JavaCollectionWrappers$SetWrapper$$anon$1.forEachRemaining(JavaCollectionWrappers.scala:146)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:497)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:487)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:239)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher.deserializeGroupedHashes(Publisher.java:190)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher.lambda$topicSubscribersChanged$3(Publisher.java:178)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher$$Lambda$2145/0x000000000c057a90.apply(Unknown Source)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at scala.collection.convert.JavaCollectionWrappers$MapWrapper$$anon$2$$anon$3.forEachRemaining(JavaCollectionWrappers.scala:232)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:497)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:487)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:239)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher.topicSubscribersChanged(Publisher.java:179)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher$$Lambda$2014/0x000000001c07d530.apply(Unknown Source)
	at akka.japi.pf.UnitCaseStatement.apply(CaseStatements.scala:24)
	at akka.japi.pf.UnitCaseStatement.apply(CaseStatements.scala:20)
	at scala.PartialFunction.applyOrElse(PartialFunction.scala:187)
	at scala.PartialFunction.applyOrElse$(PartialFunction.scala:186)
	at akka.japi.pf.UnitCaseStatement.applyOrElse(CaseStatements.scala:20)
	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:241)
	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:242)
	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:242)
	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:242)
	at akka.actor.Actor.aroundReceive(Actor.scala:537)
	at akka.actor.Actor.aroundReceive$(Actor.scala:535)
	at akka.actor.AbstractActor.aroundReceive(AbstractActor.scala:220)
	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:577)
	at akka.actor.ActorCell.invoke(ActorCell.scala:547)
	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:270)
	at akka.dispatch.Mailbox.run(Mailbox.scala:231)
	at akka.dispatch.Mailbox.exec(Mailbox.scala:243)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)
2021-03-15 10:40:39,387 DEBUG [] o.e.d.s.u.p.a.PubUpdater akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/pubUpdater13 - stopped
2021-03-15 10:40:39,387 DEBUG [] o.e.d.s.u.p.a.Publisher akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/publisher14 - stopped
2021-03-15 10:40:39,387 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Updater terminated, restart scheduled: <Actor[akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/pubUpdater13#1236384876]>
2021-03-15 10:40:39,385 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Child <Actor[akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/publisher14#-264690097]> crashed. Restarting all children after <PT10S>
java.lang.ClassCastException: akka.util.ByteString$ByteString1C incompatible with java.lang.String
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher$$Lambda$2151/0x000000000c059b80.apply(Unknown Source)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at scala.collection.convert.JavaCollectionWrappers$SetWrapper$$anon$1.forEachRemaining(JavaCollectionWrappers.scala:146)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:497)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:487)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:239)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher.deserializeGroupedHashes(Publisher.java:190)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher.lambda$topicSubscribersChanged$3(Publisher.java:178)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher$$Lambda$2145/0x000000000c057a90.apply(Unknown Source)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at scala.collection.convert.JavaCollectionWrappers$MapWrapper$$anon$2$$anon$3.forEachRemaining(JavaCollectionWrappers.scala:232)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:497)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:487)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:239)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher.topicSubscribersChanged(Publisher.java:179)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher$$Lambda$2014/0x000000001c07d530.apply(Unknown Source)
	at akka.japi.pf.UnitCaseStatement.apply(CaseStatements.scala:24)
	at akka.japi.pf.UnitCaseStatement.apply(CaseStatements.scala:20)
	at scala.PartialFunction.applyOrElse(PartialFunction.scala:187)
	at scala.PartialFunction.applyOrElse$(PartialFunction.scala:186)
	at akka.japi.pf.UnitCaseStatement.applyOrElse(CaseStatements.scala:20)
	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:241)
	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:242)
	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:242)
	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:242)
	at akka.actor.Actor.aroundReceive(Actor.scala:537)
	at akka.actor.Actor.aroundReceive$(Actor.scala:535)
	at akka.actor.AbstractActor.aroundReceive(AbstractActor.scala:220)
	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:577)
	at akka.actor.ActorCell.invoke(ActorCell.scala:547)
	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:270)
	at akka.dispatch.Mailbox.run(Mailbox.scala:231)
	at akka.dispatch.Mailbox.exec(Mailbox.scala:243)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)
2021-03-15 10:40:39,386 ERROR [] a.a.AllForOneStrategy akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/publisher14 - akka.util.ByteString$ByteString1C incompatible with java.lang.String
java.lang.ClassCastException: akka.util.ByteString$ByteString1C incompatible with java.lang.String
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher$$Lambda$2151/0x000000000c059b80.apply(Unknown Source)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at scala.collection.convert.JavaCollectionWrappers$SetWrapper$$anon$1.forEachRemaining(JavaCollectionWrappers.scala:146)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:497)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:487)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:239)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher.deserializeGroupedHashes(Publisher.java:190)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher.lambda$topicSubscribersChanged$3(Publisher.java:178)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher$$Lambda$2145/0x000000000c057a90.apply(Unknown Source)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at scala.collection.convert.JavaCollectionWrappers$MapWrapper$$anon$2$$anon$3.forEachRemaining(JavaCollectionWrappers.scala:232)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:497)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:487)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:239)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher.topicSubscribersChanged(Publisher.java:179)
	at org.eclipse.ditto.services.utils.pubsub.actors.Publisher$$Lambda$2014/0x000000001c07d530.apply(Unknown Source)
	at akka.japi.pf.UnitCaseStatement.apply(CaseStatements.scala:24)
	at akka.japi.pf.UnitCaseStatement.apply(CaseStatements.scala:20)
	at scala.PartialFunction.applyOrElse(PartialFunction.scala:187)
	at scala.PartialFunction.applyOrElse$(PartialFunction.scala:186)
	at akka.japi.pf.UnitCaseStatement.applyOrElse(CaseStatements.scala:20)
	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:241)
	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:242)
	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:242)
	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:242)
	at akka.actor.Actor.aroundReceive(Actor.scala:537)
	at akka.actor.Actor.aroundReceive$(Actor.scala:535)
	at akka.actor.AbstractActor.aroundReceive(AbstractActor.scala:220)
	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:577)
	at akka.actor.ActorCell.invoke(ActorCell.scala:547)
	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:270)
	at akka.dispatch.Mailbox.run(Mailbox.scala:231)
	at akka.dispatch.Mailbox.exec(Mailbox.scala:243)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)
2021-03-15 10:40:39,387 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Updater terminated, restart scheduled: <Actor[akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor/pubUpdater13#1236384876]>
2021-03-15 10:40:41,949 TRACE [] o.e.d.s.u.c.AbstractJsonifiableWithDittoHeadersSerializer  - fromBinary CBOR which got 'in': A26C646974746F48656164657273AE686D7174742E716F736130781B646974746F2D726561642D7265766F6B65642D7375626A65637473806E636F7272656C6174696F6E2D6964782461313136373162372D333138642D343664332D613439362D6564373130323538343437346B6D7174742E72657461696E6566616C73656A6D7174742E746F706963782E6170706C69636174696F6E2F342F6465766963652F373266613536653563393563343731392F6576656E742F75706E7265717565737465642D61636B73806C646974746F2D6F726967696E781E6368697270737461636B2D636F6E6E656374696F6E2D7669612D6D717474781C646974746F2D696E626F756E642D7061796C6F61642D6D6170706572726368697270737461636B2D6D617070696E676849662D4D61746368612A71726573706F6E73652D7265717569726564F470646974746F2D6F726967696E61746F72782F617574687A3170726F643A39303834666139392D396263382D346365662D383530362D64663537343431323038326172646974746F2D617574682D636F6E74657874A26474797065781C7072652D61757468656E746963617465642D636F6E6E656374696F6E687375626A6563747381782F617574687A3170726F643A39303834666139392D396263382D346365662D383530362D64663537343431323038326173646974746F2D726561642D7375626A6563747382782F617574687A3170726F643A39303834666139392D396263382D346365662D383530362D646635373434313230383261782F617574687A3170726F643A32316439636365382D386232632D343161352D393263302D3161346433316431643936366F646974746F2D656E746974792D6964783D7A612E636F2E61677269696F2E7069766F743A70726F64312D32613030613832622D303134662D346563642D623862652D633235666265633539303266677061796C6F6164A46474797065781D7468696E67732E636F6D6D616E64733A6D6F6469667946656174757265677468696E674964783D7A612E636F2E61677269696F2E7069766F743A70726F64312D32613030613832622D303134662D346563642D623862652D63323566626563353930326669666561747572654964686C6F636174696F6E6766656174757265A26F5F5F736368656D6156657273696F6E026A70726F70657274696573A2696C6F6E67697475646500686C6174697475646500
2021-03-15 10:40:41,951 DEBUG [] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Handling by strategy: <ModifyFeature [type=things.commands:modifyFeature, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=a11671b7-318d-46d3-a496-ed7102584474, mqtt.retain=false, mqtt.topic=application/4/device/72fa56e5c95c4719/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:21d9cce8-8b2c-41a5-92c0-1a4d31d1d966""], ditto-entity-id=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f}], thingId=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f, feature=ImmutableFeature [featureId=location, definition=null, properties={""longitude"":0,""latitude"":0}, desiredProperties=null]]>
2021-03-15 10:40:41,951 DEBUG [a11671b7-318d-46d3-a496-ed7102584474] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Applying command <ModifyFeature [type=things.commands:modifyFeature, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=a11671b7-318d-46d3-a496-ed7102584474, mqtt.retain=false, mqtt.topic=application/4/device/72fa56e5c95c4719/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:21d9cce8-8b2c-41a5-92c0-1a4d31d1d966""], ditto-entity-id=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f}], thingId=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f, feature=ImmutableFeature [featureId=location, definition=null, properties={""longitude"":0,""latitude"":0}, desiredProperties=null]]>
2021-03-15 10:40:41,951 DEBUG [a11671b7-318d-46d3-a496-ed7102584474] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Applying command <ModifyFeature [type=things.commands:modifyFeature, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=a11671b7-318d-46d3-a496-ed7102584474, mqtt.retain=false, mqtt.topic=application/4/device/72fa56e5c95c4719/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:21d9cce8-8b2c-41a5-92c0-1a4d31d1d966""], ditto-entity-id=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f}], thingId=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f, feature=ImmutableFeature [featureId=location, definition=null, properties={""longitude"":0,""latitude"":0}, desiredProperties=null]]>
2021-03-15 10:40:41,952 DEBUG [a11671b7-318d-46d3-a496-ed7102584474] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Validating conditional headers with currentETagValue <""hash:e224c717""> on command <ModifyFeature [type=things.commands:modifyFeature, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=a11671b7-318d-46d3-a496-ed7102584474, mqtt.retain=false, mqtt.topic=application/4/device/72fa56e5c95c4719/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:21d9cce8-8b2c-41a5-92c0-1a4d31d1d966""], ditto-entity-id=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f}], thingId=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f, feature=ImmutableFeature [featureId=location, definition=null, properties={""longitude"":0,""latitude"":0}, desiredProperties=null]]>.
2021-03-15 10:40:41,952 DEBUG [a11671b7-318d-46d3-a496-ed7102584474] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Validating conditional headers succeeded.
2021-03-15 10:40:41,952 DEBUG [a11671b7-318d-46d3-a496-ed7102584474] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Applying command <ModifyFeature [type=things.commands:modifyFeature, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=a11671b7-318d-46d3-a496-ed7102584474, mqtt.retain=false, mqtt.topic=application/4/device/72fa56e5c95c4719/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:21d9cce8-8b2c-41a5-92c0-1a4d31d1d966""], ditto-entity-id=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f}], thingId=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f, feature=ImmutableFeature [featureId=location, definition=null, properties={""longitude"":0,""latitude"":0}, desiredProperties=null]]>
2021-03-15 10:40:41,954 DEBUG [a11671b7-318d-46d3-a496-ed7102584474] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Persisting Event <things.events:featureModified>.
2021-03-15 10:40:41,958 TRACE [] o.e.d.s.u.c.AbstractJsonifiableWithDittoHeadersSerializer  - fromBinary CBOR which got 'in
2021-03-15 10:40:41,962 TRACE [] o.e.d.s.u.c.AbstractJsonifiableWithDittoHeadersSerializer  - fromBinary CBOR which got 'in
2021-03-15 10:40:41,975 TRACE [] o.e.d.s.u.m.i.t.StoppedKamonTimer  - Timer with name <akka-persistence-mongo.journal.scala-official.write.append> and segment <overall> was stopped after <13490570> nanoseconds
2021-03-15 10:40:41,976 INFO  [] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Successfully persisted Event <things.events:featureModified>.
2021-03-15 10:40:41,977 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Publisher unavailable. Dropping <org.eclipse.ditto.services.utils.pubsub.actors.Publisher$Publish@8607f0d1>
2021-03-15 10:40:41,977 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Publisher unavailable. Dropping <org.eclipse.ditto.services.utils.pubsub.actors.Publisher$Publish@8607f0d1>
2021-03-15 10:40:41,978 DEBUG [] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Handling by strategy: <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=59e88e79-756c-4458-97e9-797089c8aaa8, mqtt.retain=false, mqtt.topic=application/4/device/72fa56e5c95c4719/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:21d9cce8-8b2c-41a5-92c0-1a4d31d1d966""], ditto-entity-id=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f}], thingId=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f, featureId=direction, propertyPointer=/status, propertyValue={""direction"":0,""passed_point"":false}]>
2021-03-15 10:40:41,978 DEBUG [59e88e79-756c-4458-97e9-797089c8aaa8] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Applying command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=59e88e79-756c-4458-97e9-797089c8aaa8, mqtt.retain=false, mqtt.topic=application/4/device/72fa56e5c95c4719/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:21d9cce8-8b2c-41a5-92c0-1a4d31d1d966""], ditto-entity-id=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f}], thingId=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f, featureId=direction, propertyPointer=/status, propertyValue={""direction"":0,""passed_point"":false}]>
2021-03-15 10:40:41,979 DEBUG [59e88e79-756c-4458-97e9-797089c8aaa8] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Applying command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=59e88e79-756c-4458-97e9-797089c8aaa8, mqtt.retain=false, mqtt.topic=application/4/device/72fa56e5c95c4719/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:21d9cce8-8b2c-41a5-92c0-1a4d31d1d966""], ditto-entity-id=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f}], thingId=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f, featureId=direction, propertyPointer=/status, propertyValue={""direction"":0,""passed_point"":false}]>
2021-03-15 10:40:41,979 DEBUG [59e88e79-756c-4458-97e9-797089c8aaa8] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Validating conditional headers with currentETagValue <""hash:ff32eb30""> on command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=59e88e79-756c-4458-97e9-797089c8aaa8, mqtt.retain=false, mqtt.topic=application/4/device/72fa56e5c95c4719/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:21d9cce8-8b2c-41a5-92c0-1a4d31d1d966""], ditto-entity-id=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f}], thingId=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f, featureId=direction, propertyPointer=/status, propertyValue={""direction"":0,""passed_point"":false}]>.
2021-03-15 10:40:41,979 DEBUG [59e88e79-756c-4458-97e9-797089c8aaa8] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Validating conditional headers succeeded.
2021-03-15 10:40:41,979 DEBUG [59e88e79-756c-4458-97e9-797089c8aaa8] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Applying command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=59e88e79-756c-4458-97e9-797089c8aaa8, mqtt.retain=false, mqtt.topic=application/4/device/72fa56e5c95c4719/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:21d9cce8-8b2c-41a5-92c0-1a4d31d1d966""], ditto-entity-id=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f}], thingId=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f, featureId=direction, propertyPointer=/status, propertyValue={""direction"":0,""passed_point"":false}]>
2021-03-15 10:40:41,981 DEBUG [59e88e79-756c-4458-97e9-797089c8aaa8] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Persisting Event <things.events:featurePropertyModified>.
2021-03-15 10:40:41,986 TRACE [] o.e.d.s.u.c.AbstractJsonifiableWithDittoHeadersSerializer  - fromBinary CBOR which got 'in
2021-03-15 10:40:41,987 TRACE [] o.e.d.s.u.m.i.t.StoppedKamonTimer  - Timer with name <akka-persistence-mongo.journal.scala-official.write.append> and segment <overall> was stopped after <4391212> nanoseconds
2021-03-15 10:40:41,988 INFO  [] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Successfully persisted Event <things.events:featurePropertyModified>.
2021-03-15 10:40:41,989 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Publisher unavailable. Dropping <org.eclipse.ditto.services.utils.pubsub.actors.Publisher$Publish@8a983ff8>
2021-03-15 10:40:41,989 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Publisher unavailable. Dropping <org.eclipse.ditto.services.utils.pubsub.actors.Publisher$Publish@8a983ff8>
2021-03-15 10:40:41,989 DEBUG [] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Handling by strategy: <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=b40ec989-d0ab-4430-ac6c-6592fd87744c, mqtt.retain=false, mqtt.topic=application/4/device/72fa56e5c95c4719/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:21d9cce8-8b2c-41a5-92c0-1a4d31d1d966""], ditto-entity-id=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f}], thingId=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f, featureId=direction, propertyPointer=/configuration/midPosition, propertyValue={""longitude"":26.52596,""latitude"":-27.35086}]>
2021-03-15 10:40:41,990 DEBUG [b40ec989-d0ab-4430-ac6c-6592fd87744c] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Applying command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=b40ec989-d0ab-4430-ac6c-6592fd87744c, mqtt.retain=false, mqtt.topic=application/4/device/72fa56e5c95c4719/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:21d9cce8-8b2c-41a5-92c0-1a4d31d1d966""], ditto-entity-id=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f}], thingId=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f, featureId=direction, propertyPointer=/configuration/midPosition, propertyValue={""longitude"":26.52596,""latitude"":-27.35086}]>
2021-03-15 10:40:41,990 DEBUG [b40ec989-d0ab-4430-ac6c-6592fd87744c] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Applying command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=b40ec989-d0ab-4430-ac6c-6592fd87744c, mqtt.retain=false, mqtt.topic=application/4/device/72fa56e5c95c4719/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:21d9cce8-8b2c-41a5-92c0-1a4d31d1d966""], ditto-entity-id=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f}], thingId=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f, featureId=direction, propertyPointer=/configuration/midPosition, propertyValue={""longitude"":26.52596,""latitude"":-27.35086}]>
2021-03-15 10:40:41,990 DEBUG [b40ec989-d0ab-4430-ac6c-6592fd87744c] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Validating conditional headers with currentETagValue <""hash:826e57f6""> on command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=b40ec989-d0ab-4430-ac6c-6592fd87744c, mqtt.retain=false, mqtt.topic=application/4/device/72fa56e5c95c4719/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:21d9cce8-8b2c-41a5-92c0-1a4d31d1d966""], ditto-entity-id=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f}], thingId=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f, featureId=direction, propertyPointer=/configuration/midPosition, propertyValue={""longitude"":26.52596,""latitude"":-27.35086}]>.
2021-03-15 10:40:41,990 DEBUG [b40ec989-d0ab-4430-ac6c-6592fd87744c] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Validating conditional headers succeeded.
2021-03-15 10:40:41,991 DEBUG [b40ec989-d0ab-4430-ac6c-6592fd87744c] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Applying command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=b40ec989-d0ab-4430-ac6c-6592fd87744c, mqtt.retain=false, mqtt.topic=application/4/device/72fa56e5c95c4719/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:21d9cce8-8b2c-41a5-92c0-1a4d31d1d966""], ditto-entity-id=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f}], thingId=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f, featureId=direction, propertyPointer=/configuration/midPosition, propertyValue={""longitude"":26.52596,""latitude"":-27.35086}]>
2021-03-15 10:40:41,994 TRACE [] o.e.d.s.u.c.AbstractJsonifiableWithDittoHeadersSerializer  - fromBinary CBOR which got 'in
2021-03-15 10:40:41,995 DEBUG [b40ec989-d0ab-4430-ac6c-6592fd87744c] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Persisting Event <things.events:featurePropertyModified>.
2021-03-15 10:40:42,004 TRACE [] o.e.d.s.u.m.i.t.StoppedKamonTimer  - Timer with name <akka-persistence-mongo.journal.scala-official.write.append> and segment <overall> was stopped after <7476903> nanoseconds
2021-03-15 10:40:42,005 INFO  [] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Successfully persisted Event <things.events:featurePropertyModified>.
2021-03-15 10:40:42,005 DEBUG [] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Handling by strategy: <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=9fc51700-055d-4c70-9924-1a365975f031, mqtt.retain=false, mqtt.topic=application/4/device/72fa56e5c95c4719/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:21d9cce8-8b2c-41a5-92c0-1a4d31d1d966""], ditto-entity-id=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f}], thingId=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f, featureId=direction, propertyPointer=/configuration/endPosition, propertyValue=0]>
2021-03-15 10:40:42,006 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Publisher unavailable. Dropping <org.eclipse.ditto.services.utils.pubsub.actors.Publisher$Publish@34d4a60f>
2021-03-15 10:40:42,006 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Publisher unavailable. Dropping <org.eclipse.ditto.services.utils.pubsub.actors.Publisher$Publish@34d4a60f>
2021-03-15 10:40:42,006 DEBUG [9fc51700-055d-4c70-9924-1a365975f031] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Applying command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=9fc51700-055d-4c70-9924-1a365975f031, mqtt.retain=false, mqtt.topic=application/4/device/72fa56e5c95c4719/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:21d9cce8-8b2c-41a5-92c0-1a4d31d1d966""], ditto-entity-id=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f}], thingId=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f, featureId=direction, propertyPointer=/configuration/endPosition, propertyValue=0]>
2021-03-15 10:40:42,006 DEBUG [9fc51700-055d-4c70-9924-1a365975f031] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Applying command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=9fc51700-055d-4c70-9924-1a365975f031, mqtt.retain=false, mqtt.topic=application/4/device/72fa56e5c95c4719/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:21d9cce8-8b2c-41a5-92c0-1a4d31d1d966""], ditto-entity-id=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f}], thingId=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f, featureId=direction, propertyPointer=/configuration/endPosition, propertyValue=0]>
2021-03-15 10:40:42,006 DEBUG [9fc51700-055d-4c70-9924-1a365975f031] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Validating conditional headers with currentETagValue <""hash:0""> on command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=9fc51700-055d-4c70-9924-1a365975f031, mqtt.retain=false, mqtt.topic=application/4/device/72fa56e5c95c4719/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:21d9cce8-8b2c-41a5-92c0-1a4d31d1d966""], ditto-entity-id=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f}], thingId=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f, featureId=direction, propertyPointer=/configuration/endPosition, propertyValue=0]>.
2021-03-15 10:40:42,007 DEBUG [9fc51700-055d-4c70-9924-1a365975f031] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Validating conditional headers succeeded.
2021-03-15 10:40:42,007 DEBUG [9fc51700-055d-4c70-9924-1a365975f031] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Applying command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=9fc51700-055d-4c70-9924-1a365975f031, mqtt.retain=false, mqtt.topic=application/4/device/72fa56e5c95c4719/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:21d9cce8-8b2c-41a5-92c0-1a4d31d1d966""], ditto-entity-id=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f}], thingId=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f, featureId=direction, propertyPointer=/configuration/endPosition, propertyValue=0]>
2021-03-15 10:40:42,009 DEBUG [9fc51700-055d-4c70-9924-1a365975f031] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Persisting Event <things.events:featurePropertyModified>.
2021-03-15 10:40:42,014 TRACE [] o.e.d.s.u.m.i.t.StoppedKamonTimer  - Timer with name <akka-persistence-mongo.journal.scala-official.write.append> and segment <overall> was stopped after <4667283> nanoseconds
2021-03-15 10:40:42,015 INFO  [] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Successfully persisted Event <things.events:featurePropertyModified>.
2021-03-15 10:40:42,017 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Publisher unavailable. Dropping <org.eclipse.ditto.services.utils.pubsub.actors.Publisher$Publish@779bdbf1>
2021-03-15 10:40:42,017 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Publisher unavailable. Dropping <org.eclipse.ditto.services.utils.pubsub.actors.Publisher$Publish@779bdbf1>
2021-03-15 10:40:42,018 DEBUG [] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Handling by strategy: <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=b36c3813-34b4-4812-9340-b5bac2242075, mqtt.retain=false, mqtt.topic=application/4/device/72fa56e5c95c4719/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:21d9cce8-8b2c-41a5-92c0-1a4d31d1d966""], ditto-entity-id=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f}], thingId=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f, featureId=direction, propertyPointer=/configuration/offset, propertyValue=125]>
2021-03-15 10:40:42,018 DEBUG [b36c3813-34b4-4812-9340-b5bac2242075] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Applying command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=b36c3813-34b4-4812-9340-b5bac2242075, mqtt.retain=false, mqtt.topic=application/4/device/72fa56e5c95c4719/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:21d9cce8-8b2c-41a5-92c0-1a4d31d1d966""], ditto-entity-id=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f}], thingId=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f, featureId=direction, propertyPointer=/configuration/offset, propertyValue=125]>
2021-03-15 10:40:42,018 DEBUG [b36c3813-34b4-4812-9340-b5bac2242075] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Applying command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=b36c3813-34b4-4812-9340-b5bac2242075, mqtt.retain=false, mqtt.topic=application/4/device/72fa56e5c95c4719/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:21d9cce8-8b2c-41a5-92c0-1a4d31d1d966""], ditto-entity-id=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f}], thingId=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f, featureId=direction, propertyPointer=/configuration/offset, propertyValue=125]>
2021-03-15 10:40:42,019 DEBUG [b36c3813-34b4-4812-9340-b5bac2242075] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Validating conditional headers with currentETagValue <""hash:7d""> on command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=b36c3813-34b4-4812-9340-b5bac2242075, mqtt.retain=false, mqtt.topic=application/4/device/72fa56e5c95c4719/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:21d9cce8-8b2c-41a5-92c0-1a4d31d1d966""], ditto-entity-id=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f}], thingId=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f, featureId=direction, propertyPointer=/configuration/offset, propertyValue=125]>.
2021-03-15 10:40:42,019 DEBUG [b36c3813-34b4-4812-9340-b5bac2242075] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Validating conditional headers succeeded.
2021-03-15 10:40:42,019 DEBUG [b36c3813-34b4-4812-9340-b5bac2242075] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Applying command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=b36c3813-34b4-4812-9340-b5bac2242075, mqtt.retain=false, mqtt.topic=application/4/device/72fa56e5c95c4719/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:21d9cce8-8b2c-41a5-92c0-1a4d31d1d966""], ditto-entity-id=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f}], thingId=za.co.agriio.pivot:prod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f, featureId=direction, propertyPointer=/configuration/offset, propertyValue=125]>
2021-03-15 10:40:42,024 DEBUG [b36c3813-34b4-4812-9340-b5bac2242075] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Persisting Event <things.events:featurePropertyModified>.
2021-03-15 10:40:42,032 TRACE [] o.e.d.s.u.m.i.t.StoppedKamonTimer  - Timer with name <akka-persistence-mongo.journal.scala-official.write.append> and segment <overall> was stopped after <5021194> nanoseconds
2021-03-15 10:40:42,034 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Publisher unavailable. Dropping <org.eclipse.ditto.services.utils.pubsub.actors.Publisher$Publish@1fde3673>
2021-03-15 10:40:42,033 INFO  [] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/9/za.co.agriio.pivot%3Aprod1-2a00a82b-014f-4ecd-b8be-c25fbec5902f/pa - Successfully persisted Event <things.events:featurePropertyModified>.
2021-03-15 10:40:42,034 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Publisher unavailable. Dropping <org.eclipse.ditto.services.utils.pubsub.actors.Publisher$Publish@1fde3673>
2021-03-15 10:40:43,723 TRACE [] o.e.d.s.u.c.AbstractJsonifiableWithDittoHeadersSerializer  - fromBinary CBOR which got 'in
2021-03-15 10:40:43,726 DEBUG [] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Handling by strategy: <ModifyFeature [type=things.commands:modifyFeature, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=30e4bd95-b0af-41a3-89e4-b9b354007e1d, mqtt.retain=false, mqtt.topic=application/1/device/5e0cfad574ac2772/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, feature=ImmutableFeature [featureId=speed, definition=null, properties={""configuration"":{""on"":false,""throttle"":50,""wet"":false}}, desiredProperties=null]]>
2021-03-15 10:40:43,726 DEBUG [30e4bd95-b0af-41a3-89e4-b9b354007e1d] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Applying command <ModifyFeature [type=things.commands:modifyFeature, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=30e4bd95-b0af-41a3-89e4-b9b354007e1d, mqtt.retain=false, mqtt.topic=application/1/device/5e0cfad574ac2772/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, feature=ImmutableFeature [featureId=speed, definition=null, properties={""configuration"":{""on"":false,""throttle"":50,""wet"":false}}, desiredProperties=null]]>
2021-03-15 10:40:43,726 DEBUG [30e4bd95-b0af-41a3-89e4-b9b354007e1d] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Applying command <ModifyFeature [type=things.commands:modifyFeature, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=30e4bd95-b0af-41a3-89e4-b9b354007e1d, mqtt.retain=false, mqtt.topic=application/1/device/5e0cfad574ac2772/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, feature=ImmutableFeature [featureId=speed, definition=null, properties={""configuration"":{""on"":false,""throttle"":50,""wet"":false}}, desiredProperties=null]]>
2021-03-15 10:40:43,726 TRACE [] o.e.d.s.u.c.AbstractJsonifiableWithDittoHeadersSerializer  - fromBinary CBOR which got 'in
2021-03-15 10:40:43,727 DEBUG [30e4bd95-b0af-41a3-89e4-b9b354007e1d] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Validating conditional headers with currentETagValue <""hash:678c629f""> on command <ModifyFeature [type=things.commands:modifyFeature, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=30e4bd95-b0af-41a3-89e4-b9b354007e1d, mqtt.retain=false, mqtt.topic=application/1/device/5e0cfad574ac2772/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, feature=ImmutableFeature [featureId=speed, definition=null, properties={""configuration"":{""on"":false,""throttle"":50,""wet"":false}}, desiredProperties=null]]>.
2021-03-15 10:40:43,727 DEBUG [30e4bd95-b0af-41a3-89e4-b9b354007e1d] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Validating conditional headers succeeded.
2021-03-15 10:40:43,727 DEBUG [30e4bd95-b0af-41a3-89e4-b9b354007e1d] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Applying command <ModifyFeature [type=things.commands:modifyFeature, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=30e4bd95-b0af-41a3-89e4-b9b354007e1d, mqtt.retain=false, mqtt.topic=application/1/device/5e0cfad574ac2772/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, feature=ImmutableFeature [featureId=speed, definition=null, properties={""configuration"":{""on"":false,""throttle"":50,""wet"":false}}, desiredProperties=null]]>
2021-03-15 10:40:43,731 TRACE [] o.e.d.s.u.c.AbstractJsonifiableWithDittoHeadersSerializer  - fromBinary CBOR which got 'in
2021-03-15 10:40:43,733 DEBUG [30e4bd95-b0af-41a3-89e4-b9b354007e1d] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Persisting Event <things.events:featureModified>.
2021-03-15 10:40:43,742 TRACE [] o.e.d.s.u.m.i.t.StoppedKamonTimer  - Timer with name <akka-persistence-mongo.journal.scala-official.write.append> and segment <overall> was stopped after <5934025> nanoseconds
2021-03-15 10:40:43,743 INFO  [] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Successfully persisted Event <things.events:featureModified>.
2021-03-15 10:40:43,744 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Publisher unavailable. Dropping <org.eclipse.ditto.services.utils.pubsub.actors.Publisher$Publish@d7bc04fe>
2021-03-15 10:40:43,744 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Publisher unavailable. Dropping <org.eclipse.ditto.services.utils.pubsub.actors.Publisher$Publish@d7bc04fe>
2021-03-15 10:40:43,745 DEBUG [] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Handling by strategy: <ModifyFeature [type=things.commands:modifyFeature, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=7dadcfdd-4265-4adf-be5e-a459bdd854c6, mqtt.retain=false, mqtt.topic=application/1/device/5e0cfad574ac2772/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, feature=ImmutableFeature [featureId=pressure, definition=null, properties={""value"":0.5406666,""warn_low"":false,""warn_high"":false}, desiredProperties=null]]>
2021-03-15 10:40:43,747 DEBUG [7dadcfdd-4265-4adf-be5e-a459bdd854c6] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Applying command <ModifyFeature [type=things.commands:modifyFeature, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=7dadcfdd-4265-4adf-be5e-a459bdd854c6, mqtt.retain=false, mqtt.topic=application/1/device/5e0cfad574ac2772/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, feature=ImmutableFeature [featureId=pressure, definition=null, properties={""value"":0.5406666,""warn_low"":false,""warn_high"":false}, desiredProperties=null]]>
2021-03-15 10:40:43,747 DEBUG [7dadcfdd-4265-4adf-be5e-a459bdd854c6] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Applying command <ModifyFeature [type=things.commands:modifyFeature, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=7dadcfdd-4265-4adf-be5e-a459bdd854c6, mqtt.retain=false, mqtt.topic=application/1/device/5e0cfad574ac2772/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, feature=ImmutableFeature [featureId=pressure, definition=null, properties={""value"":0.5406666,""warn_low"":false,""warn_high"":false}, desiredProperties=null]]>
2021-03-15 10:40:43,747 DEBUG [7dadcfdd-4265-4adf-be5e-a459bdd854c6] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Validating conditional headers with currentETagValue <""hash:3eacf45d""> on command <ModifyFeature [type=things.commands:modifyFeature, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=7dadcfdd-4265-4adf-be5e-a459bdd854c6, mqtt.retain=false, mqtt.topic=application/1/device/5e0cfad574ac2772/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, feature=ImmutableFeature [featureId=pressure, definition=null, properties={""value"":0.5406666,""warn_low"":false,""warn_high"":false}, desiredProperties=null]]>.
2021-03-15 10:40:43,747 DEBUG [7dadcfdd-4265-4adf-be5e-a459bdd854c6] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Validating conditional headers succeeded.
2021-03-15 10:40:43,747 DEBUG [7dadcfdd-4265-4adf-be5e-a459bdd854c6] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Applying command <ModifyFeature [type=things.commands:modifyFeature, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=7dadcfdd-4265-4adf-be5e-a459bdd854c6, mqtt.retain=false, mqtt.topic=application/1/device/5e0cfad574ac2772/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, feature=ImmutableFeature [featureId=pressure, definition=null, properties={""value"":0.5406666,""warn_low"":false,""warn_high"":false}, desiredProperties=null]]>
2021-03-15 10:40:43,752 DEBUG [7dadcfdd-4265-4adf-be5e-a459bdd854c6] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Persisting Event <things.events:featureModified>.
2021-03-15 10:40:43,758 TRACE [] o.e.d.s.u.m.i.t.StoppedKamonTimer  - Timer with name <akka-persistence-mongo.journal.scala-official.write.append> and segment <overall> was stopped after <4383579> nanoseconds
2021-03-15 10:40:43,759 INFO  [] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Successfully persisted Event <things.events:featureModified>.
2021-03-15 10:40:43,761 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Publisher unavailable. Dropping <org.eclipse.ditto.services.utils.pubsub.actors.Publisher$Publish@54102dda>
2021-03-15 10:40:43,761 DEBUG [] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Handling by strategy: <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=e0c0b66c-c68f-418e-abea-f55242fca30b, mqtt.retain=false, mqtt.topic=application/1/device/5e0cfad574ac2772/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, featureId=direction, propertyPointer=/configuration/clockwise, propertyValue=true]>
2021-03-15 10:40:43,761 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Publisher unavailable. Dropping <org.eclipse.ditto.services.utils.pubsub.actors.Publisher$Publish@54102dda>
2021-03-15 10:40:43,761 DEBUG [e0c0b66c-c68f-418e-abea-f55242fca30b] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Applying command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=e0c0b66c-c68f-418e-abea-f55242fca30b, mqtt.retain=false, mqtt.topic=application/1/device/5e0cfad574ac2772/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, featureId=direction, propertyPointer=/configuration/clockwise, propertyValue=true]>
2021-03-15 10:40:43,762 DEBUG [e0c0b66c-c68f-418e-abea-f55242fca30b] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Applying command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=e0c0b66c-c68f-418e-abea-f55242fca30b, mqtt.retain=false, mqtt.topic=application/1/device/5e0cfad574ac2772/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, featureId=direction, propertyPointer=/configuration/clockwise, propertyValue=true]>
2021-03-15 10:40:43,762 DEBUG [e0c0b66c-c68f-418e-abea-f55242fca30b] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Validating conditional headers with currentETagValue <""hash:4ee""> on command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=e0c0b66c-c68f-418e-abea-f55242fca30b, mqtt.retain=false, mqtt.topic=application/1/device/5e0cfad574ac2772/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, featureId=direction, propertyPointer=/configuration/clockwise, propertyValue=true]>.
2021-03-15 10:40:43,762 DEBUG [e0c0b66c-c68f-418e-abea-f55242fca30b] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Validating conditional headers succeeded.
2021-03-15 10:40:43,763 DEBUG [e0c0b66c-c68f-418e-abea-f55242fca30b] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Applying command <ModifyFeatureProperty [type=things.commands:modifyFeatureProperty, dittoHeaders=ImmutableDittoHeaders [{mqtt.qos=0, ditto-read-revoked-subjects=[], correlation-id=e0c0b66c-c68f-418e-abea-f55242fca30b, mqtt.retain=false, mqtt.topic=application/1/device/5e0cfad574ac2772/event/up, requested-acks=[], ditto-origin=chirpstack-connection-via-mqtt, ditto-inbound-payload-mapper=chirpstack-mapping, If-Match=*, response-required=false, ditto-originator=authz1prod:9084fa99-9bc8-4cef-8506-df574412082a, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a""]}, ditto-read-subjects=[""authz1prod:9084fa99-9bc8-4cef-8506-df574412082a"",""authz1prod:91f28d37-57e2-49c2-8165-4753af5d369b""], ditto-entity-id=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578}], thingId=za.co.agriio.pivot:prod1-ffa5158e-45ba-4145-838a-00dbea84f578, featureId=direction, propertyPointer=/configuration/clockwise, propertyValue=true]>
2021-03-15 10:40:43,767 DEBUG [e0c0b66c-c68f-418e-abea-f55242fca30b] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Persisting Event <things.events:featurePropertyModified>.
2021-03-15 10:40:43,772 TRACE [] o.e.d.s.u.m.i.t.StoppedKamonTimer  - Timer with name <akka-persistence-mongo.journal.scala-official.write.append> and segment <overall> was stopped after <3270370> nanoseconds
2021-03-15 10:40:43,773 INFO  [] o.e.d.s.t.p.a.ThingPersistenceActor akka://ditto-cluster/system/sharding/thing/12/za.co.agriio.pivot%3Aprod1-ffa5158e-45ba-4145-838a-00dbea84f578/pa - Successfully persisted Event <things.events:featurePropertyModified>.
2021-03-15 10:40:43,776 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Publisher unavailable. Dropping <org.eclipse.ditto.services.utils.pubsub.actors.Publisher$Publish@55305b56>
2021-03-15 10:40:43,776 ERROR [] o.e.d.s.u.p.a.PubSupervisor akka://ditto-cluster/user/thingsRoot/thing-event-aware-pub-supervisor - Publisher unavailable. Dropping <org.eclipse.ditto.services.utils.pubsub.actors.Publisher$Publish@55305b56>
````","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTI3NDUzNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1004,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTI4MzgyMQ==,ditto,799283821,1004,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-03-15T09:55:33Z,2021-03-15T09:55:33Z,"@mvniekerk which version of Ditto are you running? The latest released `1.5.1`?
And did you ensure that all nodes are running the same Ditto version?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTI4MzgyMQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1004,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTI4NDE4MQ==,ditto,799284181,1004,NA,mvniekerk,1570687,Michael van Niekerk,,NA,2021-03-15T09:56:01Z,2021-03-15T09:56:01Z,"1.5.1
All nodes running same version - it is Helm deployed","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTI4NDE4MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1004,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTI4NDcyOQ==,ditto,799284729,1004,NA,mvniekerk,1570687,Michael van Niekerk,,NA,2021-03-15T09:56:47Z,2021-03-15T09:56:47Z,"The code in question that is crashing is https://github.com/eclipse/ditto/commit/12800d66d5f8b9cf4c6000a934a98261d7024038#diff-fd2a92b7b7d5db1d7a1385141ead10c3aa5a818144c6c497e527211565b8c92f

deserializeGroupedHashes

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTI4NDcyOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1004,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTI4NTg2Nw==,ditto,799285867,1004,NA,mvniekerk,1570687,Michael van Niekerk,,NA,2021-03-15T09:58:40Z,2021-03-15T09:58:40Z,"Could this be a DB upgrade issue, as I've went to the latest version (using Helm)?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTI4NTg2Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1004,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTMwODQwMw==,ditto,799308403,1004,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-03-15T10:32:05Z,2021-03-15T10:32:05Z,"@mvniekerk no, this cannot be related to updating the DB","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTMwODQwMw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1004,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTMxMDQxMg==,ditto,799310412,1004,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-03-15T10:35:22Z,2021-03-15T10:35:22Z,@mvniekerk do you have some specific configuration differing from the chart's defaults?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTMxMDQxMg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1004,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTMxNDcwOA==,ditto,799314708,1004,NA,mvniekerk,1570687,Michael van Niekerk,,NA,2021-03-15T10:42:31Z,2021-03-15T10:42:31Z,"I've got an MQTT connector added post-install (that in turns serves as a queue for Chirpstack). Although I don't expect that to be the problem seeing that the events to get persisted.

Apart from that, no.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTMxNDcwOA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1004,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTMzMDg4MQ==,ditto,799330881,1004,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-03-15T11:06:38Z,2021-03-15T11:06:38Z,"The problem seems not to be persisting the events - if you check, they should be persisted to the MongoDB (also retrieving the  ""thing"" via the API later e.g. with a HTTP GET should work).

What isn't working for you is the Ditto internal pub/sub of the event to e.g. the Websocket .. 
I can however not imagine why this would fail with a `ClassCastException` - I also cannot reproduce.
That's why I asked what could be different in your setup.

You did update an existing cluster of Ditto, didn't you?
Just to rule out a problem with the ""migration"": could you please try setting up a complete new/fresh cluster with that version? ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTMzMDg4MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1004,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTMzNTY2Mg==,ditto,799335662,1004,NA,mvniekerk,1570687,Michael van Niekerk,,NA,2021-03-15T11:14:02Z,2021-03-15T11:14:02Z,"It was an upgrade, yes.
It is my prod cluster though, a complete new database will be a papercut to the eye.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTMzNTY2Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1004,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTM1NzMzMQ==,ditto,799357331,1004,NA,mvniekerk,1570687,Michael van Niekerk,,NA,2021-03-15T11:50:24Z,2021-03-15T11:50:24Z,"I've rewritten the deserializeGroupedHashes and currently building a docker image, will let you know on progress
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTM1NzMzMQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1004,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTM2NTkwOA==,ditto,799365908,1004,NA,mvniekerk,1570687,Michael van Niekerk,,NA,2021-03-15T12:04:28Z,2021-03-15T12:04:28Z,"> I've rewritten the deserializeGroupedHashes and currently building a docker image, will let you know on progress

Image failing to start up due a missing manifest. Will check how I can rig this and come back","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTM2NTkwOA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1004,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTQwMTE0OQ==,ditto,799401149,1004,NA,mvniekerk,1570687,Michael van Niekerk,,NA,2021-03-15T13:02:03Z,2021-03-15T13:02:03Z,"Changing the function:
````java
private static List<Grouped<Long>> deserializeGroupedHashes(final scala.collection.immutable.Set<?> strings) {
        List<Grouped<Long>> ret = new ArrayList<>(strings.size());
        scala.collection.Iterator<?> stringsIter = strings.iterator();
        while (stringsIter.hasNext()) {
            Object c = stringsIter.next();
            String next;
            if (c instanceof ByteString.ByteString1C) {
                ByteString.ByteString1C nextVal = (ByteString.ByteString1C) c;
                next = nextVal.utf8String();
            } else {
                next = (String) c;
            }
            ret.add(Grouped.fromJson(JsonObject.of(next), JsonValue::asLong));
        }
        return ret;
    }
````

This causes exceptions:
org.eclipse.ditto.json.JsonParseException: Failed to parse JSON string '��'!

Looking at the Bytestring set passed, they look like:
<Set(ByteString(-125, -126), ByteString(-117, 95), ByteString(81, -78), ByteString(-40, 102), ByteString(-32, 85), ByteString(9, 9), ByteString(17, 38), ByteString(40, 19), ByteString(-10, 126), ByteString(119, 109), ByteString(107, 112), ByteString(-2, -74), ByteString(-12, 79), ByteString(-115, -93), ByteString(-112, -73), ByteString(38, 38), ByteString(-17, 17), ByteString(-18, 103), ByteString(13, -14), ByteString(-109, 57))>

Where are these bytestrings built from?
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTQwMTE0OQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1004,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTQxMzQwOQ==,ditto,799413409,1004,NA,mvniekerk,1570687,Michael van Niekerk,,NA,2021-03-15T13:20:10Z,2021-03-15T13:20:10Z,"I've put the *fromJson in a try/catch, and now I'm geting Websocket events.


    private static List<Grouped<Long>> deserializeGroupedHashes(final scala.collection.immutable.Set<?> strings) {
        List<Grouped<Long>> ret = new ArrayList<>(strings.size());
        scala.collection.Iterator<?> stringsIter = strings.iterator();
        while (stringsIter.hasNext()) {
            Object c = stringsIter.next();
            String next;
            if (c instanceof ByteString.ByteString1C) {
                ByteString.ByteString1C nextVal = (ByteString.ByteString1C) c;
                next = nextVal.utf8String();
            } else {
                next = (String) c;
            }
            try {
                ret.add(Grouped.fromJson(JsonObject.of(next), JsonValue::asLong));
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        return ret;
    }","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTQxMzQwOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1004,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTQzMzgzNw==,ditto,799433837,1004,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-03-15T13:48:17Z,2021-03-15T13:48:17Z,"Seems that the `deserializeGroupedHashes` is triggered by a `Replicator.Changed` message which contains a different content of the event than expected with Ditto `1.5.1`.

As a workaround you can set the environment variable `DITTO_PUBSUB_RESTART_DELAY` to `0s` (defaults to `10s`), this should cause that after such an error, the `Publisher` gets immediately restarted.
However, events might still be ""lost"".

The only explanation I have is that some local directory to the container is still present which contains an old format of the events in Akka's ""ddata"". Probably the format changed between releases and we didn't notice ourself as we always create new containers instead of re-using old ones.
Do you have a persistent mount or something which would cause that some old data written to the filesystem with an older Ditto version might after the update still be available?

Again, my recommdendation:
> Just to rule out a problem with the ""migration"": could you please try setting up a complete new/fresh cluster with that version?

And I do *not* mean throwing away the database - that one and the data in it can remain. Just a new k8s deployment connecting to the same database.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTQzMzgzNw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1004,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTQ0NDE3NA==,ditto,799444174,1004,NA,mvniekerk,1570687,Michael van Niekerk,,NA,2021-03-15T14:01:28Z,2021-03-15T14:01:28Z,"Thanks @thjaeckle 
Looking at the logs of the thing service, after the first few bytestrings that rolled through the try/catch of my custom container, the service is now chugging along.

As to any PVs, it is only mongodb that has one. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDc5OTQ0NDE3NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1021,https://api.github.com/repos/eclipse-ditto/ditto/issues/1021,ditto,852199199,1021,Support Last Will for managed MQTT connections,VadimGue,51698101,Vadim Günther,,CLOSED,2021-04-07T09:13:44Z,2021-04-20T09:06:57Z,Add Last Will support for managed  MQTT connections,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1021/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1029,https://api.github.com/repos/eclipse-ditto/ditto/issues/1029,ditto,859651792,1029,Allow setting MQTT retain flag depending on message header,dguggemos,15028977,Dominik Guggemos,dominik.guggemos@bosch.io,CLOSED,2021-04-16T09:42:17Z,2021-04-29T04:50:58Z,The retain flag of MQTT messages published via a managed connection is set according to the message header `mqtt.retain`. The topic and qos level can also modified in the same way.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1029/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1034,https://api.github.com/repos/eclipse-ditto/ditto/issues/1034,ditto,864661401,1034,Web of Things (WoT) Model in Ditto,BobClaerhout,3315222,Bob Claerhout,,CLOSED,2021-04-22T08:00:20Z,2022-03-03T13:30:05Z,"Hi all,
I would like to open up the discussion of using WoT to describe a feature/thing.
Vorto was the go-to solution to describe a thing but it looks like this will be discontinued. Therefore, we are looking for another solution to describe our models. WoT, more specifically the ""Thing Model"", has been mentioned several times in the gitter chat and looks like a good fit.
We would like to get everyone on the same page concerning this so we can easily use a possible future integration between Ditto and WoT. 
The ultimate result of this issue/discussion IMO would be a best practice article in Ditto documentation which will be a guideline for a future integration. In order to have that, we should agree upon this best practice.
WDYT?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1034/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1034,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgyNDc2NDA3Mg==,ditto,824764072,1034,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-04-22T11:38:22Z,2021-04-22T11:38:22Z,"I have a close watch to WoT ""Thing Model"" currently documented here (but also in active ""development"" of the spec):
https://w3c.github.io/wot-thing-description/#thing-model

WoT quote:
> ""This paradigm can be compared with abstract class or interface definition (~Thing Model) in object-oriented programming to create objects (~Thing Descriptions).""

A WoT ""Thing Model"":
> [...] mainly describes interaction affordances such as the [Properties](https://w3c.github.io/wot-thing-description/#dfn-property), [Actions](https://w3c.github.io/wot-thing-description/#dfn-action), and [Events](https://w3c.github.io/wot-thing-description/#dfn-event) and common metadata.

A Ditto Thing is unfortunately not a good fit for the WoT ""Thing Model"" - because a Thing in Ditto may consist of several features, all of which can follow ""interface definitions"".
However I think that a Ditto ""Feature"" (part of a Thing) is the perfect match for being backed by a WoT ""Thing Model"".

| WoT Thing Model concept | Ditto concept |
| ---                                       | ---                   |
| [Properties](https://w3c.github.io/wot-thing-description/#dfn-property) | [Feature properties](https://www.eclipse.org/ditto/basic-feature.html#feature-properties) + Feature desired properties |
| [Actions](https://w3c.github.io/wot-thing-description/#dfn-action) | Feature ""inbox"" (TO the thing) [messages](https://www.eclipse.org/ditto/basic-messages.html#elements) |
| [Events](https://w3c.github.io/wot-thing-description/#dfn-event) | Feature ""outbox"" (FROM the thing) [messages](https://www.eclipse.org/ditto/basic-messages.html#elements) |

The [Feature definition](https://www.eclipse.org/ditto/basic-feature.html#feature-definition) is a Json Array of String, currently limited to the form:
* `<namespace>:<name>:<version>`

Which is obviously targeted to Vorto models.
I think we could relax this restriction and also accept URIs ... that way you could define URIs to WoT ""Thing Models"" (JSON-LD files available via HTTP, e.g. hosted by a GitHub repo).

The [Thing level definition](https://www.eclipse.org/ditto/basic-thing.html#definition) currently does not have a match to a WoT concept.
It could (to think about!) make sense to apply the thing level definition, also accepting a WoT ""Thing Model"" to the Thing attributes + to the messages (actions/events in WoT speak) you can directly send/receive from a Thing.

What I really like about the WoT ""Thing Model"" is the closeness to ""JSON Schema"" - IMO that would be the best way to do a validation of JSON data, e.g. for feature properties or messages.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgyNDc2NDA3Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1034,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgyNTUwNDk0Mw==,ditto,825504943,1034,NA,tuve,694923,Tuve Nordius,tuve@dotfunc.com,NA,2021-04-23T08:47:08Z,2021-04-23T08:47:08Z,"> Vorto was the go-to solution to describe a thing but it looks like this will be discontinued.

I can't find any information on vorto is going to be discontinued, in fact version 1.0.0 vas released last November? Or is it the ditto plugin? Anyone from the Vorto project who can comment on this? @aedelmann @mena-bosch @t-gauss 

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgyNTUwNDk0Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1034,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgyNTUxNTc2MA==,ditto,825515760,1034,NA,kolotu,56577255,Kevin Olotu,,NA,2021-04-23T09:04:25Z,2021-04-23T09:04:25Z,"@tuve Vorto is not being explicitly discontinued, but there is currently no further development (or maintenance) planned within the project. Also the Vorto repository that you can currently find here https://vorto.eclipseprojects.io/ will be shut down in July. You can find more detailed information on the Gitter channel eclipse/vorto. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDgyNTUxNTc2MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1034,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg3MTUwODg5NQ==,ditto,871508895,1034,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-06-30T15:35:28Z,2021-06-30T15:35:28Z,"Started a discussion at https://github.com/w3c/wot-thing-description/issues/1177 for the currently (in my opinion) missing replacement for Vorto ""InformationModel"" being used in the Ditto Thing toplevel ""definition"".

If anyone wants to join into that discussion, please go ahead and do so :)

In the meantime another potential OpenSource option did arise for modeling structure and semantics: [Open Manufacturing Platform BAMM](https://github.com/OpenManufacturingPlatform/sds-bamm-aspect-meta-model).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg3MTUwODg5NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1043,https://api.github.com/repos/eclipse-ditto/ditto/issues/1043,ditto,870615208,1043,Add methods to TopicPath to make its evaluation easier,jufickel-b,17162397,Juergen Fickel,,CLOSED,2021-04-29T05:07:15Z,2021-05-04T14:52:24Z,"There are situations where a `TopicPath` of a Ditto Protocol Message should be evaluated.
For example, if one wants to know whether the group is ""Things"" or the its action is ""create"", the appropriate getter methods have to be called.
The result of those getters is sometimes an `Optional` which puts another indirection to the evaluation.

To make evaluation of a `TopicPath` easier, methods should be added which return `boolean` like for example
```
public boolean isGroup(final Group expectedGroup) { ... }
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1043/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1052,https://api.github.com/repos/eclipse-ditto/ditto/issues/1052,ditto,877108173,1052,Inform target endpoint when managed connection is opend or closed,VadimGue,51698101,Vadim Günther,,CLOSED,2021-05-06T05:59:42Z,2021-05-26T12:44:18Z,"A ""Welcome""/""Goodbye"" message should be send to the target endpoint, when a managed connection is opening and also when its graceful closing","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1052/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1060,https://api.github.com/repos/eclipse-ditto/ditto/issues/1060,ditto,890231057,1060,Add HMAC-based authentication for Azure monitor and AWS in HTTP connections,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,CLOSED,2021-05-12T15:46:05Z,2021-06-22T14:13:35Z,"For better integration with Azure and AWS ecosystems, Ditto HTTP connections should support HMAC-based authentication methods such as that of [Azure Monitor Data Collector](https://docs.microsoft.com/en-us/azure/azure-monitor/logs/data-collector-api#authorization) and [AWS Signature Version 4](https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1060/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1060,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg0MjMzOTA4NQ==,ditto,842339085,1060,NA,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,NA,2021-05-17T13:47:48Z,2021-05-17T13:47:48Z,Changing milestone to 2.1.0 due to model extension.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg0MjMzOTA4NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1061,https://api.github.com/repos/eclipse-ditto/ditto/issues/1061,ditto,891864289,1061,[Documentation] Links not working,IrishWhiskey,47793460,Vincenzo Territo,,CLOSED,2021-05-14T12:00:12Z,2021-05-17T04:42:01Z,Hello! Here https://github.com/eclipse/ditto/blame/master/documentation/src/main/resources/pages/ditto/installation-operating.md#L38-L43 the links do not work.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1061/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1061,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg0MTk3OTI5MQ==,ditto,841979291,1061,NA,stmaute,17831060,Stefan Maute,,NA,2021-05-17T04:42:01Z,2021-05-17T04:42:01Z,"Hi @IrishWhiskey,
thank you for reporting the broken links. They links should work again.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg0MTk3OTI5MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1068,https://api.github.com/repos/eclipse-ditto/ditto/issues/1068,ditto,896568690,1068,how to link node red with eclipse ditto ?,bachir-abdo,84325239,,,CLOSED,2021-05-20T09:53:30Z,2021-05-31T10:54:52Z,"i'm new in eclipse ditto i never work with it and i try to create a virtual smart traffic signals (twins) and i need to link ditto with node red bc we simulate traffic signal with node red and sensors with ditto api(v2) ,firts i create Thing Model,
{
  ""thingId"": ""the.namespace:Vehicle_sensor(the-thing-id)"",
  ""policyId"": ""the.namespace:policy(the-policy-id)"",
  ""definition"": ""digitaltwin:DigitaltwinExample:1.0.0"",
  ""attributes"": {
    ""ID_sensor"": ""1""
	""ID_intersection"": ""1""
	""ID_road"": ""1""
  },
  ""features"": {
    ""battery"": {
       ""properties"": {}
     }
	""camera"": {
       ""properties"": {}
     }
	""process"": {
       ""properties"": {}
     }
	""vehicale_arvl_s"": {
       ""properties"": {}
     }
	""vehicale_dprt_s"": {
       ""properties"": {}
     }
	""speed_sensor"": {
       ""properties"": {}
     }
	 
  }
}
i didn't install ditto yet , i was have problem with my pc, i will try to install eclipse ditto ,
after installing ditto, how i can put my model in ditto api v2,then how i can link ditto with node red.
for more contact: bachir.abderrahmane.ab@gmail.com.
thanks for help us.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1068/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1070,https://api.github.com/repos/eclipse-ditto/ditto/issues/1070,ditto,898123229,1070,Change return type of `JsonValue.of` to `JsonNumber` for number arguments,jufickel-b,17162397,Juergen Fickel,,CLOSED,2021-05-21T14:52:18Z,2022-09-07T14:39:43Z,"Currently all variants of `JsonValue.of` return a `JsonValue`.
For number arguments, however, it is desirable to obtain a `JsonNumber` without being forced to manually cast.
As `JsonNumber` extends `JsonValue`, changing the method signatures would be a low hanging fruit that improves ditto-json API a bit. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1070/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1070,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg0NjAxNzkyMA==,ditto,846017920,1070,NA,jufickel-b,17162397,Juergen Fickel,,NA,2021-05-21T15:05:30Z,2021-05-21T15:05:30Z,Additionally it is worth to think about introducing a `JsonFieldDefinition` for `JsonNumber`.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg0NjAxNzkyMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1070,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C841axeP,ditto,896210831,1070,NA,theexplorist,36664705,Kartik,,NA,2021-08-10T18:17:40Z,2021-08-10T18:17:40Z,"@jufickel-b Hi I am an open source enthusiast who contributes to java projects and previous google summer of code student developer, I am looking for new challenge so can you please tell me if I can contribute here?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C841axeP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1070,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C841cr1b,ditto,896712027,1070,NA,jufickel-b,17162397,Juergen Fickel,,NA,2021-08-11T10:39:29Z,2021-08-11T10:39:29Z,"Hi @theexplorist, thanks for reaching out to us. Of course you can contribute here. Before doing so, it is crucial that you have a look at [CONTRIBUTING.md](https://github.com/eclipse/ditto/blob/master/CONTRIBUTING.md) – especially the legal requirements.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C841cr1b/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1072,https://api.github.com/repos/eclipse-ditto/ditto/issues/1072,ditto,903510577,1072,Wrong domain name (cluster.local) inside Kubernetes cluster,ericxkcd,84906936,,,CLOSED,2021-05-27T10:13:34Z,2021-05-27T14:24:37Z,"Hi, I'm trying to run Ditto inside K8s. Unfortunately, the nodes try to find each other using names like `1_2_3_4.<namespace>.pod.cluster.local`, where the domain name _seems_ to be configured somewhere to `cluster.local`. However, I need to run this on a cluster with a custom internal domain name, not being `cluster.local`.

As far as I can see, this probably has to do with how Akka determines the domain names of the other hosts. It looks like Akka is using the IP, with dots substituted for underscores. Like `1_2_3_4.<namespace>.pod` and then appends `cluster.local`.

From what I can see, [Akka has a setting in its `reference.conf` called pod-domain](https://github.com/akka/akka-management/blob/master/discovery-kubernetes-api/src/main/resources/reference.conf), which defaults to `cluster.local`. So I suspect that I need a way to override this value with a custom domain. Could that be made into one the of ENV variables I can set in the K8s yaml definitions? Is there another way for me to set this value?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1072/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1072,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg0OTY3OTE2MQ==,ditto,849679161,1072,NA,ericxkcd,84906936,,,NA,2021-05-27T14:24:37Z,2021-05-27T14:24:37Z,"For anyone experiencing this issue, you can set _any_ config with the OPENJ9_JAVA_OPTIONS env var. E.g., add this to what is already in the K8s configuration file:

`-Dakka.discovery.kubernetes-api.pod-domain=<your custom domain>`","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg0OTY3OTE2MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1073,https://api.github.com/repos/eclipse-ditto/ditto/issues/1073,ditto,904920373,1073,Ditto 2.0.1: Failed to parse JWT! - ExpiredJwtException,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,CLOSED,2021-05-28T08:15:06Z,2021-06-01T07:59:45Z,"With Ditto 2.0.1 I'm seeing INFO level messages associated with exceptions printed in the logs. I don't think those exceptions should be printed into the log. I suppose one of the clients does not update it's JWT, hence it's invalid. The INFO is OK, but instead of the exception it should probably show more details in the INFO message.

```
gateway_1        | 	io.jsonwebtoken.ExpiredJwtException: JWT expired at 2021-05-28T08:08:52Z. Current time: 2021-05-28T08:11:03Z, a difference of 131436 milliseconds.  Allowed clock skew: 0 milliseconds.
gateway_1        | 	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:448)
gateway_1        | 	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:550)
gateway_1        | 	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:610)
gateway_1        | 	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.jwt.DefaultJwtValidator.validateWithPublicKey(DefaultJwtValidator.java:84)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.jwt.DefaultJwtValidator.tryToValidateWithPublicKey(DefaultJwtValidator.java:72)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.jwt.DefaultJwtValidator.lambda$validate$0(DefaultJwtValidator.java:61)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.jwt.DefaultJwtValidator$$Lambda$4284/0x00000000c001b6d0.apply(Unknown Source)
gateway_1        | 	at java.base/java.util.Optional.map(Optional.java:265)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.jwt.DefaultJwtValidator.lambda$validate$2(DefaultJwtValidator.java:61)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.jwt.DefaultJwtValidator$$Lambda$3335/0x00000000ec05c7d0.apply(Unknown Source)
gateway_1        | 	at java.base/java.util.concurrent.CompletableFuture.uniApplyNow(CompletableFuture.java:680)
gateway_1        | 	at java.base/java.util.concurrent.CompletableFuture.uniApplyStage(CompletableFuture.java:658)
gateway_1        | 	at java.base/java.util.concurrent.CompletableFuture.thenApply(CompletableFuture.java:2094)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.jwt.DefaultJwtValidator.validate(DefaultJwtValidator.java:60)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.jwt.JwtAuthenticationProvider.getAuthenticationResult(JwtAuthenticationProvider.java:132)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.jwt.JwtAuthenticationProvider.tryToAuthenticate(JwtAuthenticationProvider.java:122)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.TimeMeasuringAuthenticationProvider.authenticate(TimeMeasuringAuthenticationProvider.java:65)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.AuthenticationChain$AuthResultAccumulator.andThen(AuthenticationChain.java:176)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.AuthenticationChain.lambda$authenticate$0(AuthenticationChain.java:95)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.AuthenticationChain$$Lambda$3012/0x00000000500a44a0.apply(Unknown Source)
gateway_1        | 	at java.base/java.util.concurrent.CompletableFuture$UniCompose.tryFire(CompletableFuture.java:1072)
gateway_1        | 	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:478)
gateway_1        | 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:53)
gateway_1        | 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
gateway_1        | 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
gateway_1        | 	at java.base/java.lang.Thread.run(Thread.java:836)

```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1073/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1073,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg1MTQwMTgzNA==,ditto,851401834,1073,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-05-31T10:46:15Z,2021-05-31T10:46:15Z,I agree and created PR #1075 ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg1MTQwMTgzNA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1074,https://api.github.com/repos/eclipse-ditto/ditto/issues/1074,ditto,906731059,1074,"curl -X POST ,curl: (7) Failed to connect to ditto.eclipseprojects.io port 443: Connection refused!!",bachir-abdo,84325239,,,CLOSED,2021-05-30T11:53:22Z,2021-06-21T15:05:29Z,"when i try to create a new things in  api/2 - online ditto sandbox i got this error ""curl: (7) Failed""  : 
curl -X POST ""https://ditto.eclipseprojects.io/api/2/things"" -H  ""accept: application/json"" -H  ""Authorization: Basic ZGl0dG86ZGl0dG8="" -H  ""Content-Type: application/json"" -d ""{\""definition\"":\""com.acme:coffeebrewer:0.1.0\"",\""attributes\"":{\""manufacturer\"":\""ACME demo corp.\"",\""location\"":\""Berlin, main floor\"",\""serialno\"":\""42\"",\""model\"":\""Speaking coffee machine\""},\""features\"":{\""coffee-brewer\"":{\""definition\"":[\""com.acme:coffeebrewer:0.1.0\""],\""properties\"":{\""brewed-coffees\"":0}},\""water-tank\"":{\""properties\"":{\""configuration\"":{\""smartMode\"":true,\""brewingTemp\"":87,\""tempToHold\"":44,\""timeoutSeconds\"":6000},\""status\"":{\""waterAmount\"":731,\""temperature\"":44}}}}}""
**curl: (7) Failed to connect to ditto.eclipseprojects.io port 443: Connection refused**

-----------------------------------

and when i try to create a new things in  api/2 - local ditto i got Bad Gateway : 
curl -X POST ""http://localhost:8080/api/2/things"" -H  ""accept: application/json"" -H  ""Authorization: Basic ZGl0dG86ZGl0dG8="" -H  ""Content-Type: application/json"" -d ""{\""definition\"":\""com.acme:coffeebrewer:0.1.0\"",\""attributes\"":{\""manufacturer\"":\""ACME demo corp.\"",\""location\"":\""Berlin, main floor\"",\""serialno\"":\""42\"",\""model\"":\""Speaking coffee machine\""},\""features\"":{\""coffee-brewer\"":{\""definition\"":[\""com.acme:coffeebrewer:0.1.0\""],\""properties\"":{\""brewed-coffees\"":0}},\""water-tank\"":{\""properties\"":{\""configuration\"":{\""smartMode\"":true,\""brewingTemp\"":87,\""tempToHold\"":44,\""timeoutSeconds\"":6000},\""status\"":{\""waterAmount\"":731,\""temperature\"":44}}}}}""
<html>
<head><title>502 Bad Gateway</title></head>
<body>
<center><h1>502 Bad Gateway</h1></center>
<hr><center>nginx/1.20.1</center>
</body>
</html> ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1074/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1074,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg1MTQwNTU3NQ==,ditto,851405575,1074,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-05-31T10:53:54Z,2021-05-31T10:53:54Z,"Thanks for reporting.

The sandbox at https://ditto.eclipseprojects.io was down - I started it again. Please be aware that this can always be the case, the sandbox is not operated in a ""high availability"" setup.

Regarding your question of the ""502"":
* how do you start your Ditto stack?
* did it start successfully?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg1MTQwNTU3NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1074,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg1MjU0MDQzMA==,ditto,852540430,1074,NA,bachir-abdo,84325239,,,NA,2021-06-01T22:56:35Z,2021-06-01T22:56:35Z,i start ditto with : docker-compose up -d ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg1MjU0MDQzMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1074,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg1NDQ4ODkxNw==,ditto,854488917,1074,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-06-04T08:43:42Z,2021-06-04T08:43:42Z,"To quote myself:
> did it start successfully?

You can check that by executing `docker-compose ps`","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg1NDQ4ODkxNw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1074,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg1NDY1MDQ3Ng==,ditto,854650476,1074,NA,bachir-abdo,84325239,,,NA,2021-06-04T11:57:17Z,2021-06-04T11:57:17Z,"i check with docker-compose ps and i got :

Name                       Command               State                      Ports
--------------------------------------------------------------------------------------------------------------
docker_concierge_1       /sbin/tini -- java -jar st ...   Up      8080/tcp
docker_connectivity_1    /sbin/tini -- java -jar st ...   Up      8080/tcp
docker_gateway_1         /sbin/tini -- java -Dditto ...   Up      0.0.0.0:8081->8080/tcp,:::8081->8080/tcp
docker_mongodb_1         docker-entrypoint.sh mongo ...   Up      0.0.0.0:27017->27017/tcp,:::27017->27017/tcp
docker_nginx_1           /docker-entrypoint.sh ngin ...   Up      0.0.0.0:8080->80/tcp,:::8080->80/tcp
docker_policies_1        /sbin/tini -- java -jar st ...   Up      8080/tcp
docker_swagger-ui_1      /docker-entrypoint.sh ngin ...   Up      80/tcp, 8080/tcp
docker_things-search_1   /sbin/tini -- java -jar st ...   Up      8080/tcp
docker_things_1          /sbin/tini -- java -jar st ...   Up      8080/tcp
-------------------------------------------------------------------------------------------------------------
 ditto are started successfully i think","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg1NDY1MDQ3Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1074,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg1NTU3MTY1OA==,ditto,855571658,1074,NA,stmaute,17831060,Stefan Maute,,NA,2021-06-07T04:44:29Z,2021-06-07T04:44:29Z,"Hi @bachir-abdo, 
The command output looks good. 
But it seems the nginx still can not connect to the gateway service.
Can you try the following request and post the output?
`curl -X GET ""http://localhost:8081/health"" -H ""Authorization: Basic ZGl0dG86Zm9vYmFy""`","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg1NTU3MTY1OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1074,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg1NTg2NTUzMg==,ditto,855865532,1074,NA,bachir-abdo,84325239,,,NA,2021-06-07T12:01:17Z,2021-06-07T12:01:17Z,"i try curl -X GET ""http://localhost:8081/health"" -H ""Authorization: Basic ZGl0dG86Zm9vYmFy""
curl: (7) Failed to connect to localhost port 8081: Connection refused

_________________________________

or you mean ""http://localhost:8080/health""(8080) i try that too and i got Bad Gateway (nginx/1.20.1) :
<ht.ml>
<h.e.ad><titl.e>502 Bad Gateway</tit.le></he.ad>
<bo..dy>
<cent.er><.h.1>502 Bad Gateway</h1></cen.ter>
<h.r><ce.n.r>nginx/1.20.1</ce.nter>
</bo.dy>
</ht.ml>","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg1NTg2NTUzMg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1074,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg1NjY3NTkxMA==,ditto,856675910,1074,NA,stmaute,17831060,Stefan Maute,,NA,2021-06-08T11:17:19Z,2021-06-08T11:17:19Z,"it seems that the Ditto cluster can not be formed up.
Can you provide the logs of one container? e.g. gatewy","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg1NjY3NTkxMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1074,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2MzAyODE4OA==,ditto,863028188,1074,NA,stmaute,17831060,Stefan Maute,,NA,2021-06-17T08:09:48Z,2021-06-17T08:09:48Z,"@bachir-abdo Did you manage to get Ditto running?
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2MzAyODE4OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1078,https://api.github.com/repos/eclipse-ditto/ditto/issues/1078,ditto,907626442,1078,Add SASL authentication for Azure IoT Hub,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,CLOSED,2021-05-31T17:26:27Z,2021-06-22T14:13:35Z,"For better integration with Azure IoT Hub, Ditto AMQP and HTTP connections should support its shared access signature authentication.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1078/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1081,https://api.github.com/repos/eclipse-ditto/ditto/issues/1081,ditto,908422064,1081,Implicit creation of things based on gateway device auto registration,VadimGue,51698101,Vadim Günther,,CLOSED,2021-06-01T15:34:15Z,2021-07-12T09:23:29Z,Based on #760 it should be possible now to choose the thing template in the implicit creation mapping based on previously defined conditions.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1081/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1081,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg3ODExODUzMA==,ditto,878118530,1081,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-07-12T09:23:29Z,2021-07-12T09:23:29Z,Resolved via #1111,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg3ODExODUzMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1082,https://api.github.com/repos/eclipse-ditto/ditto/issues/1082,ditto,909632618,1082,Performance drop in gateway service with many JWT providers,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,CLOSED,2021-06-02T15:36:46Z,2021-07-28T08:04:29Z,"After the upgrade from Ditto 1.5.x to 2.0.1 I'm experiencing massive performance issues in the gateway service. The load increased by around 300%, after 5 minutes of runtime all requests are answered with a 503, the logs are full of timeout errors, JWT errors and warnings about increasingly slow HTTP connections. Let's go into the details what is happening:

First the cluster starts and reports an overall OK status. New log entries appear of INFO level stating that JWTs are successfully validated (this is already somewhat ""slow"" compared to the amount of JWT-based requests that should go through). No warnings or errors yet. The business applications already show that requests are really slow, although most still succeed. After around 3 minutes of runtime the problems begin to pile up. In the log of the gateway service the first warnings about 60s timeouts and slow HTTP connections show up. The timeouts as well as the HTTP warnings grow larger and larger in both their ""overdue"" time and quantity in the log. Then the successful JWT INFO messages disappear and are replaced by more and more JWT invalidation errors, because the JWTs provided are expired. The duration since expiration increases over time as if either the provided JWTs don't get refreshed (this I doubt) or messages get validated increasingly late.

Details about my setup
---

The special case of my setup is that I'm using a lot of issuers. 20 by the time of this writing. This is because every auth realm has it's own distinct issuer endpoint. Maybe that is a problem or at least something not accounted for in the tests?

How I upgraded
---

I changed the container image version numbers and updated the JWT issuer configuration, such that the newly introduced object level with the `issuer` key is accounted for. 

I've yet to monitor the whole log of the cluster. Maybe there are other issues in other services as well. I only took a brief look into the cluster log, because that one is massive. The gateway log stood out to me, so I investigated this one first.

Logs
---

Some log output after a restart

```
gateway_1        | 2021-06-02 08:58:24,864 DEBUG [e7427bde-4460-4186-94b1-d758f9408a7a] o.e.d.g.s.e.a.HttpRequestActor akka://ditto-cluster/user/$yb - Got <devops.responses:aggregatedResponse> message.
gateway_1        | 2021-06-02 08:58:24,865 DEBUG [e7427bde-4460-4186-94b1-d758f9408a7a] o.e.d.g.s.e.a.HttpRequestActor akka://ditto-cluster/user/$yb - Enhancing response with external headers <ImmutableDittoHeaders [{correlation-id=e7427bde-4460-4186-94b1-d758f9408a7a, response-required=false}]>.
gateway_1        | 2021-06-02 08:58:24,865 DEBUG [] o.e.d.g.s.e.a.HttpRequestActor akka://ditto-cluster/user/$yb - Responding with HTTP response code <200>.
gateway_1        | 2021-06-02 08:58:24,865 DEBUG [] o.e.d.g.s.e.a.HttpRequestActor akka://ditto-cluster/user/$yb - Responding with entity <HttpEntity.Strict(application/json,130 bytes total)>.
gateway_1        | 2021-06-02 08:58:24,928 DEBUG [] o.e.d.b.s.d.DevOpsCommandsActor$DevOpsCommandResponseCorrelationActor akka://ditto-cluster/user/devOpsCommandsActor/e7427bde-4460-4186-94b1-d758f9408a7a - stopped
gateway_1        | 2021-06-02 08:58:24,947 INFO  [ab869c23-944f-464d-b5ba-db7fd9e999a3] o.e.d.g.s.e.d.RequestResultLoggingDirective  - StatusCode of request PUT '/devops/logging/gateway' was: 200
gateway_1        | 2021-06-02 08:58:24,947 DEBUG [] o.e.d.g.s.e.a.HttpRequestActor akka://ditto-cluster/user/$yb - stopped
gateway_1        | 2021-06-02 08:58:25,029 DEBUG [ab869c23-944f-464d-b5ba-db7fd9e999a3] o.e.d.g.s.e.d.RequestResultLoggingDirective  - Raw request URI was: Raw-Request-URI: /devops/logging/gateway
gateway_1        | 2021-06-02 08:58:25,030 DEBUG [ab869c23-944f-464d-b5ba-db7fd9e999a3] o.e.d.g.s.e.d.RequestTimeoutHandlingDirective  - Finished timer <StartedKamonTimer [name=roundtrip_http, tags={ditto.request.path=/other, ditto.statusCode=200, ditto.request.method=PUT, segment=overall}, onStopHandlers=[org.eclipse.ditto.internal.utils.metrics.instruments.timer.OnStopHandler@60c806b0], segments={}, startTimestamp=17602639006485774, stoppedTimer=StoppedKamonTimer [name=roundtrip_http, tags={ditto.request.path=/other, ditto.statusCode=200, ditto.request.method=PUT, segment=overall}, startTimestamp=17602639006485774, endTimestamp=17602644501881223]]> with status <200>.
gateway_1        | 2021-06-02 08:58:25,032 WARN  [ab869c23-944f-464d-b5ba-db7fd9e999a3] o.e.d.g.s.e.d.RequestTimeoutHandlingDirective  - Encountered slow HTTP request which took over <1000> ms: <5495> ms!
gateway_1        | 2021-06-02 08:58:25,375 DEBUG [e3467eed-6adb-47a1-b2e3-25e294a95d71] o.e.d.g.s.e.d.CorrelationIdEnsuringDirective  - Created new correlation ID <e3467eed-6adb-47a1-b2e3-25e294a95d71>.
gateway_1        | 2021-06-02 08:58:25,376 DEBUG [] o.e.d.i.u.t.TraceUriGenerator  - Generated traceUri for '/api/2/things/c0000:CA941651884F8042/features/SiteStatus/properties/status/ConnectionStatus': 'TraceInformation{traceUri='/api/2/things/x', tags={ditto.request.path=/api/2/things/x/features/x}}'
gateway_1        | 2021-06-02 08:58:25,378 DEBUG [e3467eed-6adb-47a1-b2e3-25e294a95d71] o.e.d.g.s.e.d.RequestTimeoutHandlingDirective  - Started mutable timer <StartedKamonTimer [name=roundtrip_http, tags={ditto.request.path=/api/2/things/x/features/x, ditto.request.method=PUT, segment=overall}, onStopHandlers=[org.eclipse.ditto.internal.utils.metrics.instruments.timer.OnStopHandler@e295c292], segments={}, startTimestamp=17602644849946821, stoppedTimer=null]>.
gateway_1        | 2021-06-02 08:58:25,937 DEBUG [9e2726fb-70be-417d-a910-6eb754f83216] o.e.d.g.s.e.d.CorrelationIdEnsuringDirective  - Created new correlation ID <9e2726fb-70be-417d-a910-6eb754f83216>.
gateway_1        | 2021-06-02 08:58:25,939 DEBUG [] o.e.d.i.u.t.TraceUriGenerator  - Generated traceUri for '/api/2/things/c0007:56BE111F4CAD7282/features/DifferentialPressure/properties/status': 'TraceInformation{traceUri='/api/2/things/x', tags={ditto.request.path=/api/2/things/x/features/x}}'
gateway_1        | 2021-06-02 08:58:25,940 DEBUG [9e2726fb-70be-417d-a910-6eb754f83216] o.e.d.g.s.e.d.RequestTimeoutHandlingDirective  - Started mutable timer <StartedKamonTimer [name=roundtrip_http, tags={ditto.request.path=/api/2/things/x/features/x, ditto.request.method=PUT, segment=overall}, onStopHandlers=[org.eclipse.ditto.internal.utils.metrics.instruments.timer.OnStopHandler@ffcb5a64], segments={}, startTimestamp=17602645412157647, stoppedTimer=null]>.
gateway_1        | 2021-06-02 08:58:25,945 INFO  [541878fa-6a00-4160-b7a4-9ebfaa1b391a] o.e.d.g.s.s.a.j.JwtAuthenticationProvider  - Completed JWT authentication successfully.
gateway_1        | 2021-06-02 08:58:26,351 INFO  [c1aee384-057e-4b12-be71-937c945e4ef9] o.e.d.g.s.s.a.j.JwtAuthenticationProvider  - Completed JWT authentication successfully.
```

Log output after 10 minutes

```
gateway_1        | 2021-06-02 08:53:21,438 WARN  [6b3d8bbc-7836-43a8-bf4c-7ebe53d7b6c0] o.e.d.g.s.e.d.RequestTimeoutHandlingDirective  - Request <GET /api/2/search/things?filter=eq(features/Certificate/properties/status/subjectName,%22g0020%22)> timed out after <PT1M>!
gateway_1        | 2021-06-02 08:53:21,438 INFO  [6b3d8bbc-7836-43a8-bf4c-7ebe53d7b6c0] o.e.d.g.s.e.d.RequestTimeoutHandlingDirective  - Status code of request <GET /api/2/search/things?filter=eq(features/Certificate/properties/status/subjectName,%22g0020%22)> was <503>.
gateway_1        | 2021-06-02 08:53:21,438 DEBUG [6b3d8bbc-7836-43a8-bf4c-7ebe53d7b6c0] o.e.d.g.s.e.d.RequestTimeoutHandlingDirective  - Raw request URI was <Raw-Request-URI: /api/2/search/things?filter=eq(features/Certificate/properties/status/subjectName,%22g0020%22)>.
gateway_1        | 2021-06-02 08:53:21,438 DEBUG [6b3d8bbc-7836-43a8-bf4c-7ebe53d7b6c0] o.e.d.g.s.e.d.RequestTimeoutHandlingDirective  - Finished mutable timer <StartedKamonTimer [name=roundtrip_http, tags={ditto.request.path=/api/2/search/things/x, ditto.statusCode=503, ditto.request.method=GET, segment=overall}, onStopHandlers=[org.eclipse.ditto.internal.utils.metrics.instruments.timer.OnStopHandler@b5eae7a], segments={}, startTimestamp=17602280892355908, stoppedTimer=StoppedKamonTimer [name=roundtrip_http, tags={ditto.request.path=/api/2/search/things/x, ditto.statusCode=503, ditto.request.method=GET, segment=overall}, startTimestamp=17602280892355908, endTimestamp=17602340910398057]]> after a request timeout with status <503>
gateway_1        | 2021-06-02 08:53:21,540 INFO  [] o.e.d.g.s.s.a.j.DefaultJwtValidator  - Failed to parse JWT!
gateway_1        | io.jsonwebtoken.ExpiredJwtException: JWT expired at 2021-06-02T06:52:01Z. Current time: 2021-06-02T06:53:21Z, a difference of 80540 milliseconds.  Allowed clock skew: 0 milliseconds.
gateway_1        | 	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:448)
gateway_1        | 	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:550)
gateway_1        | 	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:610)
gateway_1        | 	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.jwt.DefaultJwtValidator.validateWithPublicKey(DefaultJwtValidator.java:84)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.jwt.DefaultJwtValidator.tryToValidateWithPublicKey(DefaultJwtValidator.java:72)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.jwt.DefaultJwtValidator.lambda$validate$0(DefaultJwtValidator.java:61)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.jwt.DefaultJwtValidator$$Lambda$4271/0x0000000088013010.apply(Unknown Source)
gateway_1        | 	at java.base/java.util.Optional.map(Optional.java:265)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.jwt.DefaultJwtValidator.lambda$validate$2(DefaultJwtValidator.java:61)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.jwt.DefaultJwtValidator$$Lambda$4221/0x0000000080015d70.apply(Unknown Source)
gateway_1        | 	at java.base/java.util.concurrent.CompletableFuture.uniApplyNow(CompletableFuture.java:680)
gateway_1        | 	at java.base/java.util.concurrent.CompletableFuture.uniApplyStage(CompletableFuture.java:658)
gateway_1        | 	at java.base/java.util.concurrent.CompletableFuture.thenApply(CompletableFuture.java:2094)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.jwt.DefaultJwtValidator.validate(DefaultJwtValidator.java:60)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.jwt.JwtAuthenticationProvider.getAuthenticationResult(JwtAuthenticationProvider.java:132)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.jwt.JwtAuthenticationProvider.tryToAuthenticate(JwtAuthenticationProvider.java:122)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.TimeMeasuringAuthenticationProvider.authenticate(TimeMeasuringAuthenticationProvider.java:65)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.AuthenticationChain$AuthResultAccumulator.andThen(AuthenticationChain.java:176)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.AuthenticationChain.lambda$authenticate$0(AuthenticationChain.java:95)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.AuthenticationChain$$Lambda$2792/0x00000000701f0fb0.apply(Unknown Source)
gateway_1        | 	at java.base/java.util.concurrent.CompletableFuture$UniCompose.tryFire(CompletableFuture.java:1072)
gateway_1        | 	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:478)
gateway_1        | 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:53)
gateway_1        | 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
gateway_1        | 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
gateway_1        | 	at java.base/java.lang.Thread.run(Thread.java:836)
gateway_1        | 2021-06-02 08:53:21,540 DEBUG [418abbd0-34ed-44f4-8ee0-41d6ce126299] o.e.d.g.s.s.a.j.JwtAuthenticationProvider  - The JWT is invalid.
gateway_1        | io.jsonwebtoken.ExpiredJwtException: JWT expired at 2021-06-02T06:52:01Z. Current time: 2021-06-02T06:53:21Z, a difference of 80540 milliseconds.  Allowed clock skew: 0 milliseconds.
gateway_1        | 	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:448)
gateway_1        | 	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:550)
gateway_1        | 	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:610)
gateway_1        | 	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.jwt.DefaultJwtValidator.validateWithPublicKey(DefaultJwtValidator.java:84)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.jwt.DefaultJwtValidator.tryToValidateWithPublicKey(DefaultJwtValidator.java:72)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.jwt.DefaultJwtValidator.lambda$validate$0(DefaultJwtValidator.java:61)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.jwt.DefaultJwtValidator$$Lambda$4271/0x0000000088013010.apply(Unknown Source)
gateway_1        | 	at java.base/java.util.Optional.map(Optional.java:265)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.jwt.DefaultJwtValidator.lambda$validate$2(DefaultJwtValidator.java:61)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.jwt.DefaultJwtValidator$$Lambda$4221/0x0000000080015d70.apply(Unknown Source)
gateway_1        | 	at java.base/java.util.concurrent.CompletableFuture.uniApplyNow(CompletableFuture.java:680)
gateway_1        | 	at java.base/java.util.concurrent.CompletableFuture.uniApplyStage(CompletableFuture.java:658)
gateway_1        | 	at java.base/java.util.concurrent.CompletableFuture.thenApply(CompletableFuture.java:2094)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.jwt.DefaultJwtValidator.validate(DefaultJwtValidator.java:60)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.jwt.JwtAuthenticationProvider.getAuthenticationResult(JwtAuthenticationProvider.java:132)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.jwt.JwtAuthenticationProvider.tryToAuthenticate(JwtAuthenticationProvider.java:122)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.TimeMeasuringAuthenticationProvider.authenticate(TimeMeasuringAuthenticationProvider.java:65)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.AuthenticationChain$AuthResultAccumulator.andThen(AuthenticationChain.java:176)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.AuthenticationChain.lambda$authenticate$0(AuthenticationChain.java:95)
gateway_1        | 	at org.eclipse.ditto.gateway.service.security.authentication.AuthenticationChain$$Lambda$2792/0x00000000701f0fb0.apply(Unknown Source)
gateway_1        | 	at java.base/java.util.concurrent.CompletableFuture$UniCompose.tryFire(CompletableFuture.java:1072)
gateway_1        | 	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:478)
gateway_1        | 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:53)
gateway_1        | 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
gateway_1        | 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
gateway_1        | 	at java.base/java.lang.Thread.run(Thread.java:836)
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1082/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1082,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg1MzMxODgxOQ==,ditto,853318819,1082,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-06-02T19:16:35Z,2021-06-02T19:16:35Z,"Hm, maybe try increasing the cache size for OpenId connect public keys:
https://github.com/eclipse/ditto/blob/8270f5a6fc2dcae65191c6795f8f6763f9f9e669/gateway/service/src/main/resources/gateway.conf#L277

This is by default only 32
Maybe more than one public keys are retrieved per issuer and the size is not sufficient so that the public keys have to be retrieved too often (in the worst case per http request one public key retrieval).
But this is only a wild guess ;) ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg1MzMxODgxOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1082,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2NTEwOTYzNQ==,ditto,865109635,1082,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-06-21T15:06:16Z,2021-06-21T15:06:16Z,@w4tsn did you find out what the problem was here?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2NTEwOTYzNQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1082,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2NTExNzk4MQ==,ditto,865117981,1082,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2021-06-21T15:16:54Z,2021-06-21T15:16:54Z,"@thjaeckle I was too busy to try it, but it's definitely on my short-term agenda","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2NTExNzk4MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1082,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84072AX,ditto,888102935,1082,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2021-07-28T08:04:18Z,2021-07-28T08:04:18Z,"Hey @thjaeckle, I confirm that increasing the cache size for public keys solves the issue.

I'm still seeing 502 Bad Gateway errors, where there were none before the upgrade but that's another issue. Probably even just some quirk with our specific deployment.

Also the gateway service still reports Slow HTTP connections. My guess is, that those were slow even before the upgrade but ditto starts to complain about this since 2.0?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84072AX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1083,https://api.github.com/repos/eclipse-ditto/ditto/issues/1083,ditto,910298763,1083,How can I save data as a text file?,bear1004,62101255,,,CLOSED,2021-06-03T09:22:46Z,2021-06-22T14:16:58Z,"I am now running an example of getting data from Raspberry Pi in the Ditto example. 
I received data from Raspberry Pi by Ditto and succeeded in expressing the data through the web app. However, I couldn't find a way to save the data I received from the web app as a text file. 
Can you help me?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1083/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1083,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg1NDQ5MTIzMg==,ditto,854491232,1083,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-06-04T08:47:18Z,2021-06-04T08:47:18Z,"Sorry, I don't get your question.
Ditto serves the current state of the digital twin of devices e.g. via an HTTP API.
Simply invoking that API with the correct credentials will give you a JSON representation of that ""thing"", see the [example in the documentation](https://www.eclipse.org/ditto/basic-thing.html#example).

Just save that one as a text file if you need to ..","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg1NDQ5MTIzMg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1083,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg1NDYyNjcxNA==,ditto,854626714,1083,NA,bear1004,62101255,,,NA,2021-06-04T11:14:38Z,2021-06-04T11:14:38Z,"Sorry, I am not good at English.
My question is just how to save the data received as a JSON file from the ""thing"" as a text file. 

I can express the data I received from Ditto through a web app. However, I heard that there is no way to save JSON data in a text file in JavaScript. So I try to save it as a text file when I receive JSON data from ""thing"" on the ditto server. But I don't know  how place to add the code.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg1NDYyNjcxNA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1083,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2NjAyMzU5Mg==,ditto,866023592,1083,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-06-22T14:16:58Z,2021-06-22T14:16:58Z,Closing as this is a basic JavaScript related question and nothing specific to the Ditto project.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2NjAyMzU5Mg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1086,https://api.github.com/repos/eclipse-ditto/ditto/issues/1086,ditto,918371393,1086,Allow enchrichment of only the metadata for affected values / paths of an event,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,OPEN,2021-06-11T07:54:23Z,2022-09-23T06:24:31Z,"Currently when requesting `_metadata` for e.g. thing modifications with the enrichment feature (`?extraFields=_metadata`) the whole metadata of a thing is returned, although the messages path and values only comprise a sub-set of the thing.

It should be possible to only request metadata for the effected features and properties.

I suppose it would be reasonable to send as little metadata as possible keeping requests and streams small by default. It then should be possible to request an arbitrary amount of metadata. At least it should be possible to request all metadata, or for a whole thing which will make a good start for this.

Maybe always attaching metadata is desired, that's up for debate I'd say. If not always attaching this we have to think about how to configure this in a request. Wildcard support for the enrichment feature (#710) certainly plays a role here too, since the enrichment wild-cards could also be used for metadata, although I admit I don't yet see how I could define elegantly to only provide metadata for the fields being part of this modification.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1086/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1087,https://api.github.com/repos/eclipse-ditto/ditto/issues/1087,ditto,919169251,1087,Things-Search Case Sensitivity Option,dtmb91,41926010,Michael Brown,,CLOSED,2021-06-11T20:10:16Z,2023-02-14T18:50:09Z,"Currently, in the Ditto API for Things-Search there is no option for case sensitivity.

It is explicitly mentioned here:
""The search is case sensitive. In case you don't know how exactly the spelling of value of the namespace, name, attribute, feature etc. is, use the like notation instead of eq for filtering.""
https://www.eclipse.org/ditto/http-api-doc.html#/Things-Search/get_search_things

My proposal is that the ""like"" filter accepts a third parameter dictating if case will be ignored or not.

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1087/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1087,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2MDUxMjkwMA==,ditto,860512900,1087,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-06-14T08:49:35Z,2021-06-14T08:49:35Z,"Hi @dtmb91 
That's a good idea supporting case insensitive searches.
I suggest using a new ""function"" name for that, e.g. `likeIgnoringCase(<key>,""valUE*"")`

A PullRequest for that would be very welcome, as we currently don't have a priority on adding that.
Please let us know if you need guidance where to make additions to the code for supporting that.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2MDUxMjkwMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1087,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2MDc4MDAxNg==,ditto,860780016,1087,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-06-14T15:31:39Z,2021-06-14T15:31:39Z,"Here some hints regarding how to implement:
* https://github.com/eclipse/ditto/blob/master/rql/query/src/main/java/org/eclipse/ditto/rql/query/criteria/LikePredicateImpl.java is the implementation of `like` - I would copy from that
* look at where the constructor of `LikePredicateImpl` is used - that is `CriteriaFactoryImpl` in the `CriteriaFactory.like(Object)` implementation
   * add another interface method to `CriteriaFactory` for the new like with case insensitivity
* look at where `CriteriaFactory.like(Object)` is used, that is in `ParameterPredicateVisitor`
   * add something new to ParameterPredicateVisitor similar to the existing one for ""like"":
   ```java
   SINGLE_COMPARISON_NODE_MAPPING.put(SingleComparisonNode.Type.LIKE, CriteriaFactory::like);
   ```
* look where `SingleComparisonNode.Type.LIKE` enum value is used
   * that is the Scala based `RqlPredicateParser.like`: https://github.com/eclipse/ditto/blob/master/rql/parser/src/main/scala/org/eclipse/ditto/rql/parser/internal/RqlPredicateParser.scala#L105
   * add something new for that as well
   * as well as for its usage, etc.
* enhance `PredicateVisitor` and its implementations with the added ""like ignoring case sensitivty"": https://github.com/eclipse/ditto/blob/master/rql/query/src/main/java/org/eclipse/ditto/rql/query/criteria/visitors/PredicateVisitor.java
   * e.g. `CreateBsonPredicateVisitor` will map that to the MongoDB query which is finally done to search into the DB: https://github.com/eclipse/ditto/blob/master/thingsearch/service/src/main/java/org/eclipse/ditto/thingsearch/service/persistence/read/criteria/visitors/CreateBsonPredicateVisitor.java#L94
   ```java
   return fieldName -> Filters.regex(fieldName, valueWithoutLeadingOrTrailingWildcard, """");
   ```
   * MongoDB's used `Filters.regex` should have an option to search case insensitive

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2MDc4MDAxNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1087,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ScW3N,ditto,1383165389,1087,NA,Abhijeetmishr,43075376,Abhijeet Mishra,abhijeetmishra498@gmail.com,NA,2023-01-15T14:29:26Z,2023-01-15T14:29:26Z,@thjaeckle can I pick up this if this is not assigned to anyone esle ?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ScW3N/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1087,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ScaFG,ditto,1383178566,1087,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-01-15T15:20:29Z,2023-01-15T15:20:29Z,"@Abhijeetmishr sure, please go ahead.
Noone is working on this as far as I know.
The old hints regarding implementation should still be valid. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ScaFG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1087,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Scdzr,ditto,1383193835,1087,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-01-15T16:31:05Z,2023-01-15T16:31:05Z,"Another interpretation of RQL can be found here:
https://connect.cloudblue.com/community/developers/api/rql/

The original RQL spec document did not include ""like"", so Ditto added it.
Same as the linked resource.
They use `ilike` for case insensitive search.
Which is also common for SQL.
So I would suggest to introduce ""ilike"". ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Scdzr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1087,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Ss7TC,ditto,1387508930,1087,NA,Abhijeetmishr,43075376,Abhijeet Mishra,abhijeetmishra498@gmail.com,NA,2023-01-18T18:18:04Z,2023-01-18T18:18:04Z,@thjaeckle please assign this to me I will try to do it as earliest as possible.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Ss7TC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1087,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Ss-Qd,ditto,1387521053,1087,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-01-18T18:25:47Z,2023-01-18T18:25:47Z,"> @thjaeckle please assign this to me I will try to do it as earliest as possible.

Done ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Ss-Qd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1087,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Taz_R,ditto,1399537617,1087,NA,Abhijeetmishr,43075376,Abhijeet Mishra,abhijeetmishra498@gmail.com,NA,2023-01-22T16:34:21Z,2023-01-22T16:34:21Z,"@thjaeckle 
My approach:-
1. Create a method in interface **CriteriaFactory** with name **ilike**.
2. implement ilike method in CriteriaFactoryImpl.
3. add ilike functionality similar to like in all the places.
4. create helper function similar to **LikeHelper** and change this line ->

> ` String escapedString = Pattern.compile(Pattern.quote(valueString), Pattern.CASE_INSENSITIVE).toString();`
will this work ?

Regards,
Abhijeet","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Taz_R/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1087,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85TbEd5,ditto,1399605113,1087,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-01-22T20:55:27Z,2023-01-22T20:55:27Z,"@Abhijeetmishr my comment should still be valid:
https://github.com/eclipse-ditto/ditto/issues/1087#issuecomment-860780016

What you proposed is probably a part of the solution, but applying it to the MongoDB query was missing from your suggestion.

Adjusting the in Scala written RQL parser is also something to do. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85TbEd5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1087,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Txblr,ditto,1405466987,1087,NA,Abhijeetmishr,43075376,Abhijeet Mishra,abhijeetmishra498@gmail.com,NA,2023-01-26T19:02:42Z,2023-01-26T19:02:42Z,"Hey @thjaeckle I have created one PR please review it [ #1570](https://github.com/eclipse-ditto/ditto/pull/1570).
And I wanted to understand whole project structure and high level flow.

Regards,
Abhijeet","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Txblr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1088,https://api.github.com/repos/eclipse-ditto/ditto/issues/1088,ditto,920366114,1088,Connection gets stuck and stops sending messages,ffendt,2587759,Florian Fendt,,CLOSED,2021-06-14T12:32:37Z,2021-06-15T09:33:58Z,"I observed a bug, that when a `BaseClientActor` throws an exception during creation (which akka turns into a `ActorInitializationException`), the connection won't be able to send/receive messages (even for client count > 1), nor will it recover.

The reason for this behavior can be found in the supervision strategies of the used `ClusterRouterPool` (which starts the `BaseClientActor`s) and `ConnectionPersistenceActor` (which starts the pool).

The default strategy of the pool is, to escalate failures to the parent.
The default strategy of the `ConnectionPersistenceActor` is, to stop children which fail with a `ActorInitializationException`. As a result, the pool actor will be stopped, still used by the connection and never restored until the connection is either modified or restarted.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1088/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1090,https://api.github.com/repos/eclipse-ditto/ditto/issues/1090,ditto,923418382,1090,Issue with downloading ditto,HappyArthur29,86036482,,,CLOSED,2021-06-17T04:30:37Z,2021-06-25T06:50:41Z,"I have downloaded all the prerequisite files needed and I got this message when I build it. Please advice, and pardon my little to none knowledge of this. I have downloaded Maven 3.8.1, JDK 11.0.11 and dockerhub



C:\Users\USER>mvn clean install
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  0.096 s
[INFO] Finished at: 2021-06-17T12:20:48+08:00
[INFO] ------------------------------------------------------------------------
[ERROR] The goal you specified requires a project to execute but there is no POM in this directory (C:\Users\USER). Please verify you invoked Maven from the correct directory. -> [Help 1]
[ERROR]
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR]
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MissingProjectException","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1090/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1090,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2MjkxODM0Mw==,ditto,862918343,1090,NA,stmaute,17831060,Stefan Maute,,NA,2021-06-17T04:40:24Z,2021-06-17T04:40:24Z,"Hi @HappyArthur29 ,

it seems you are invoking the mvn command in the wrong directory 

> C:\Users\USER>mvn clean install

After cloning the ditto repo with git you need to switch into the ditto directory and then run `mvn clean install`

Hope this helps you building ditto. 
Otherwise you can use the already existing Docker images from [Docker Hub](https://hub.docker.com/search?q=eclipse%2Fditto&type=image)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2MjkxODM0Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1090,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2MjkyNTE5OA==,ditto,862925198,1090,NA,stmaute,17831060,Stefan Maute,,NA,2021-06-17T04:59:20Z,2021-06-17T04:59:20Z,"You need to do the following steps in a terminal to build ditto on your local machine:

`git clone https://github.com/eclipse/ditto.git`
`cd ditto`
`mvn clean install`","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2MjkyNTE5OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1090,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2Mjk4NDU0Ng==,ditto,862984546,1090,NA,HappyArthur29,86036482,,,NA,2021-06-17T07:01:28Z,2021-06-17T07:01:28Z,"Thank you I got it to download but another issue. I researched it it seems there is some settings I have to change?

[INFO] Eclipse Ditto :: Internal :: Utils :: Health ....... SUCCESS [  5.801 s]
[INFO] Eclipse Ditto :: Internal :: Utils :: Tracing ...... SUCCESS [  2.968 s]
[INFO] Eclipse Ditto :: Internal :: Utils :: Cluster ...... SUCCESS [ 10.589 s]
[INFO] Eclipse Ditto :: Internal :: Utils :: Test ......... SUCCESS [  0.681 s]
[INFO] Eclipse Ditto :: Internal :: Utils :: Persistence .. FAILURE [ 20.197 s]
[INFO] Eclipse Ditto :: Base :: Service ................... SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Distributed Data SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Pub-Sub ...... SKIPPED
[INFO] Eclipse Ditto :: Things :: API ..................... SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Aggregator ... SKIPPED
[INFO] Eclipse Ditto :: Policies :: API ................... SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Cache Loaders  SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Conditional Headers SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: JWT .......... SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Namespaces ... SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Protocol ..... SKIPPED
[INFO] Eclipse Ditto :: RQL ............................... SKIPPED
[INFO] Eclipse Ditto :: RQL :: Model ...................... SKIPPED
[INFO] Eclipse Ditto :: RQL :: parser ..................... SKIPPED
[INFO] Eclipse Ditto :: RQL :: Query ...................... SKIPPED
[INFO] Eclipse Ditto :: Thing Search :: API ............... SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Search ....... SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Persistent Actors SKIPPED
[INFO] Eclipse Ditto :: Policies :: Service ............... SKIPPED
[INFO] Eclipse Ditto :: Things :: Service ................. SKIPPED
[INFO] Eclipse Ditto :: Connectivity :: API ............... SKIPPED
[INFO] Eclipse Ditto :: Concierge ......................... SKIPPED
[INFO] Eclipse Ditto :: Concierge :: API .................. SKIPPED
[INFO] Eclipse Ditto :: Concierge :: Service .............. SKIPPED
[INFO] Eclipse Ditto :: Connectivity :: Service ........... SKIPPED
[INFO] Eclipse Ditto :: JWT ............................... SKIPPED
[INFO] Eclipse Ditto :: JWT :: Model ...................... SKIPPED
[INFO] Eclipse Ditto :: Gateway ........................... SKIPPED
[INFO] Eclipse Ditto :: Gateway :: Service ................ SKIPPED
[INFO] Eclipse Ditto :: Thing Search :: Service ........... SKIPPED
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  04:17 min
[INFO] Finished at: 2021-06-17T14:26:14+08:00
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-failsafe-plugin:3.0.0-M4:verify (verify) on project ditto-internal-utils-persistence: There are test failures.
[ERROR]
[ERROR] Please refer to D:\ditto-master\ditto-master\internal\utils\persistence\target\failsafe-reports for the individual test results.
[ERROR] Please refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.
[ERROR] -> [Help 1]
[ERROR]","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2Mjk4NDU0Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1090,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2Mjk5NTQ5Mw==,ditto,862995493,1090,NA,stmaute,17831060,Stefan Maute,,NA,2021-06-17T07:18:39Z,2021-06-17T07:18:39Z,"Do you really need to build ditto on your own? Or would it be sufficient to used the existing Ditto Docker images from [Docker Hub](https://hub.docker.com/search?q=eclipse%2Fditto&type=image) 
If you only want to try out Ditto you can use on of the deployment [here](https://github.com/eclipse/ditto/tree/master/deployment)

In your last build there was a test failure. You can try to re-run the mvn command.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2Mjk5NTQ5Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1090,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2MzAxMjU3Mw==,ditto,863012573,1090,NA,HappyArthur29,86036482,,,NA,2021-06-17T07:47:18Z,2021-06-17T07:47:18Z,If it is easier ill do it.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2MzAxMjU3Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1090,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2MzAxNzk4Mw==,ditto,863017983,1090,NA,stmaute,17831060,Stefan Maute,,NA,2021-06-17T07:55:24Z,2021-06-17T07:55:24Z,"The easiest way is to use the docker-compose file to start Ditto. See [here](https://github.com/eclipse/ditto/blob/master/deployment/docker/README.md)
You only need docker and docker-compse installed on your machine.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2MzAxNzk4Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1090,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2MzAxOTQ4NQ==,ditto,863019485,1090,NA,HappyArthur29,86036482,,,NA,2021-06-17T07:57:46Z,2021-06-17T07:57:46Z,"AIGHT
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2MzAxOTQ4NQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1090,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2MzExOTUyNg==,ditto,863119526,1090,NA,HappyArthur29,86036482,,,NA,2021-06-17T10:20:27Z,2021-06-17T10:20:27Z,"I think it's okay I need to build a ditto myself, cause i'll be using it for another example of ditto. I keep getting this error. I'll try it figure it out thanks for your help man sorry to trouble you


[INFO] Eclipse Ditto :: Internal :: Utils :: Persistence .. FAILURE [ 20.197 s]","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2MzExOTUyNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1090,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2MzE4MTQxMA==,ditto,863181410,1090,NA,stmaute,17831060,Stefan Maute,,NA,2021-06-17T12:04:18Z,2021-06-17T12:04:18Z,Can you provide a bit more logs from the build?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2MzE4MTQxMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1090,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2MzE4NjE1MQ==,ditto,863186151,1090,NA,HappyArthur29,86036482,,,NA,2021-06-17T12:11:30Z,2021-06-17T12:11:30Z,"sure here, thank you for the help mate

[INFO] Results:
[INFO]
[ERROR] Errors:
[ERROR]   IndexInitializerIT » ExceptionInInitializer
[ERROR]   MongoReadJournalIT » NoClassDefFound Could not initialize class org.eclipse.di...
[ERROR]   MongoTimestampPersistenceIT » NoClassDefFound Could not initialize class org.e...
[INFO]
[ERROR] Tests run: 3, Failures: 0, Errors: 3, Skipped: 0
[INFO]
[INFO]
[INFO] --- maven-failsafe-plugin:3.0.0-M4:verify (verify) @ ditto-internal-utils-persistence ---
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary for Eclipse Ditto 0-SNAPSHOT:
[INFO]
[INFO] Eclipse Ditto ...................................... SUCCESS [  5.999 s]
[INFO] Eclipse Ditto :: Legal ............................. SUCCESS [  0.903 s]
[INFO] Eclipse Ditto :: BOM ............................... SUCCESS [  0.251 s]
[INFO] Eclipse Ditto :: Documentation ..................... SUCCESS [  0.503 s]
[INFO] Eclipse Ditto :: Utils ............................. SUCCESS [  0.380 s]
[INFO] Eclipse Ditto :: Utils :: JSR-305 Extensions ....... SUCCESS [  1.861 s]
[INFO] Eclipse Ditto :: JSON .............................. SUCCESS [ 12.510 s]
[INFO] Eclipse Ditto :: JSON CBOR ......................... SUCCESS [  4.558 s]
[INFO] Eclipse Ditto :: Base .............................. SUCCESS [  0.211 s]
[INFO] Eclipse Ditto :: Base :: Model ..................... SUCCESS [ 15.102 s]
[INFO] Eclipse Ditto :: Policies .......................... SUCCESS [  0.221 s]
[INFO] Eclipse Ditto :: Policies :: Model ................. SUCCESS [ 13.246 s]
[INFO] Eclipse Ditto :: Things ............................ SUCCESS [  0.180 s]
[INFO] Eclipse Ditto :: Things :: Model ................... SUCCESS [ 11.200 s]
[INFO] Eclipse Ditto :: Thing Search ...................... SUCCESS [  0.205 s]
[INFO] Eclipse Ditto :: Thing Search :: Model ............. SUCCESS [  7.092 s]
[INFO] Eclipse Ditto :: Connectivity ...................... SUCCESS [  0.230 s]
[INFO] Eclipse Ditto :: Connectivity :: Model ............. SUCCESS [ 13.699 s]
[INFO] Eclipse Ditto :: Messages .......................... SUCCESS [  0.200 s]
[INFO] Eclipse Ditto :: Messages :: Model ................. SUCCESS [  6.627 s]
[INFO] Eclipse Ditto :: Protocol .......................... SUCCESS [ 14.267 s]
[INFO] Eclipse Ditto :: Base :: API ....................... SUCCESS [  6.124 s]
[INFO] Eclipse Ditto :: Internal .......................... SUCCESS [  0.170 s]
[INFO] Eclipse Ditto :: Internal :: Utils ................. SUCCESS [  0.181 s]
[INFO] Eclipse Ditto :: Internal :: Utils :: Config ....... SUCCESS [  5.983 s]
[INFO] Eclipse Ditto :: Internal :: Utils :: Metrics ...... SUCCESS [  8.461 s]
[INFO] Eclipse Ditto :: Internal :: Models ................ SUCCESS [  0.220 s]
[INFO] Eclipse Ditto :: Internal :: Models :: Streaming ... SUCCESS [  4.902 s]
[INFO] Eclipse Ditto :: Internal :: Utils :: Akka ......... SUCCESS [ 34.037 s]
[INFO] Eclipse Ditto :: Internal :: Models :: ACKs ........ SUCCESS [  9.168 s]
[INFO] Eclipse Ditto :: Internal :: Utils :: Cache ........ SUCCESS [  6.497 s]
[INFO] Eclipse Ditto :: Internal :: Models :: Signal Enrichment SUCCESS [ 23.687 s]
[INFO] Eclipse Ditto :: Internal :: Models :: Placeholders  SUCCESS [  5.205 s]
[INFO] Eclipse Ditto :: Internal :: Utils :: Health ....... SUCCESS [  6.342 s]
[INFO] Eclipse Ditto :: Internal :: Utils :: Tracing ...... SUCCESS [  3.062 s]
[INFO] Eclipse Ditto :: Internal :: Utils :: Cluster ...... SUCCESS [ 11.146 s]
[INFO] Eclipse Ditto :: Internal :: Utils :: Test ......... SUCCESS [  0.760 s]
[INFO] Eclipse Ditto :: Internal :: Utils :: Persistence .. FAILURE [ 20.339 s]
[INFO] Eclipse Ditto :: Base :: Service ................... SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Distributed Data SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Pub-Sub ...... SKIPPED
[INFO] Eclipse Ditto :: Things :: API ..................... SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Aggregator ... SKIPPED
[INFO] Eclipse Ditto :: Policies :: API ................... SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Cache Loaders  SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Conditional Headers SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: JWT .......... SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Namespaces ... SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Protocol ..... SKIPPED
[INFO] Eclipse Ditto :: RQL ............................... SKIPPED
[INFO] Eclipse Ditto :: RQL :: Model ...................... SKIPPED
[INFO] Eclipse Ditto :: RQL :: parser ..................... SKIPPED
[INFO] Eclipse Ditto :: RQL :: Query ...................... SKIPPED
[INFO] Eclipse Ditto :: Thing Search :: API ............... SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Search ....... SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Persistent Actors SKIPPED
[INFO] Eclipse Ditto :: Policies :: Service ............... SKIPPED
[INFO] Eclipse Ditto :: Things :: Service ................. SKIPPED
[INFO] Eclipse Ditto :: Connectivity :: API ............... SKIPPED
[INFO] Eclipse Ditto :: Concierge ......................... SKIPPED
[INFO] Eclipse Ditto :: Concierge :: API .................. SKIPPED
[INFO] Eclipse Ditto :: Concierge :: Service .............. SKIPPED
[INFO] Eclipse Ditto :: Connectivity :: Service ........... SKIPPED
[INFO] Eclipse Ditto :: JWT ............................... SKIPPED
[INFO] Eclipse Ditto :: JWT :: Model ...................... SKIPPED
[INFO] Eclipse Ditto :: Gateway ........................... SKIPPED
[INFO] Eclipse Ditto :: Gateway :: Service ................ SKIPPED
[INFO] Eclipse Ditto :: Thing Search :: Service ........... SKIPPED
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  04:18 min
[INFO] Finished at: 2021-06-17T20:10:40+08:00
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-failsafe-plugin:3.0.0-M4:verify (verify) on project ditto-internal-utils-persistence: There are test failures.
[ERROR]
[ERROR] Please refer to D:\ditto-master\ditto-master\internal\utils\persistence\target\failsafe-reports for the individual test results.
[ERROR] Please refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.
[ERROR] -> [Help 1]
[ERROR]
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR]
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
[ERROR]
[ERROR] After correcting the problems, you can resume the build with the command
[ERROR]   mvn <args> -rf :ditto-internal-utils-persistence
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2MzE4NjE1MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1090,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2MzIxNzQxNg==,ditto,863217416,1090,NA,stmaute,17831060,Stefan Maute,,NA,2021-06-17T12:59:11Z,2021-06-17T12:59:11Z,"It seems the **NoClassDefFound** causes the build to fail.
But it is hard to tell what the problem is without seeing the whole log.
Can you provide the full log after [ERROR] IndexInitializerIT » ExceptionInInitializer?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2MzIxNzQxNg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1090,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2MzMwNDAzMw==,ditto,863304033,1090,NA,HappyArthur29,86036482,,,NA,2021-06-17T14:47:17Z,2021-06-17T14:47:17Z,"Running org.eclipse.ditto.internal.utils.persistence.mongo.indices.IndexInitializerIT
20:10:34,628 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Found resource [logback-test.xml] at [file:/D:/ditto-master/ditto-master/internal/utils/persistence/target/test-classes/logback-test.xml]
20:10:34,749 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - debug attribute not set
20:10:34,749 |-INFO in ch.qos.logback.core.joran.action.StatusListenerAction - Added status listener of type [ch.qos.logback.core.status.OnConsoleStatusListener]
20:10:34,759 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
20:10:34,769 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [STDOUT]
20:10:34,789 |-INFO in ch.qos.logback.core.joran.action.NestedComplexPropertyIA - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property
20:10:34,839 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
20:10:34,839 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [STDERR]
20:10:34,849 |-INFO in ch.qos.logback.core.joran.action.NestedComplexPropertyIA - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property
20:10:34,849 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.eclipse.ditto] to INFO
20:10:34,849 |-INFO in ch.qos.logback.classic.joran.action.RootLoggerAction - Setting level of ROOT logger to WARN
20:10:34,849 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[ROOT]
20:10:34,859 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDERR] to Logger[ROOT]
20:10:34,859 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - End of configuration.
20:10:34,859 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@6540cf1d - Registering current configuration as safe fallback point
2021-06-17 20:10:34,869 INFO  [] o.e.d.i.u.t.m.MongoContainerFactory  - Connecting to docker daemon on <tcp://localhost:2375>.
2021-06-17 20:10:35,563 INFO  [] o.e.d.i.u.t.m.MongoContainerFactory  - Checking if Mongo image <mongo:4.2> needs to be pulled.
[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 5.398 s <<< FAILURE! - in org.eclipse.ditto.internal.utils.persistence.mongo.indices.IndexInitializerIT
[ERROR] org.eclipse.ditto.internal.utils.persistence.mongo.indices.IndexInitializerIT  Time elapsed: 5.388 s  <<< ERROR!
java.lang.ExceptionInInitializerError
Caused by: java.lang.RuntimeException: com.github.dockerjava.zerodep.shaded.org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:2375 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
Caused by: com.github.dockerjava.zerodep.shaded.org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:2375 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2MzMwNDAzMw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1090,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2Mzc4ODQzMw==,ditto,863788433,1090,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-06-18T06:21:17Z,2021-06-18T06:21:17Z,"@HappyArthur29 seems like you don't have Docker installed, or have you?
You will need Docker as well to start Ditto - as [documented](https://www.eclipse.org/ditto/installation-running.html).

I am still wondering why you would like to build Ditto yourself - if you have not done any code adjustments, that's a waste of time.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2Mzc4ODQzMw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1090,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2Mzc5MDcyMQ==,ditto,863790721,1090,NA,HappyArthur29,86036482,,,NA,2021-06-18T06:26:25Z,2021-06-18T06:26:25Z,"I do have Docker installed. I installed docker engine. Im doing all this because I am a student doing internship, my supervisor just gave  me this piece of work (https://github.com/eclipse/ditto-examples/tree/master/mqtt-bidirectional) and I need to understand and demonstrate it for him. 

Edited: And I do know that this task is kinda out of my league to complete as a student
            Im sorry to trouble you man ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2Mzc5MDcyMQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1090,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2MzgzMjI1Mw==,ditto,863832253,1090,NA,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,NA,2021-06-18T07:44:13Z,2021-06-18T07:44:13Z,"Hi @HappyArthur29 ,

from the error you posted, I assume you're using Windows as OS.
The error you see is from some test code within ditto. A mongo DB should be started automatically for some integration testing against a real database.

For this test the OS will be detected and depending on the used OS the code tries to interact with the docker daemon.
On Windows we expect the daemon to be available on localhost:2375.
So now there are two options which could cause your problem:

1. You use WSL2 to build ditto. AFAIK there are issues with WSL2 and this OS detection we implemented. We didn't fix this, yet.
2. You didn't enable your docker daemon to expose itself on port 2375. This is a setting of docker. Just open the docker settings using the docker tray icon and check if you enabled this.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2MzgzMjI1Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1090,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2Mzg4NDUwMg==,ditto,863884502,1090,NA,HappyArthur29,86036482,,,NA,2021-06-18T09:06:23Z,2021-06-18T09:06:23Z,"> Hi @HappyArthur29 ,
> 
> from the error you posted, I assume you're using Windows as OS.
> The error you see is from some test code within ditto. A mongo DB should be started automatically for some integration testing against a real database.
> 
> For this test the OS will be detected and depending on the used OS the code tries to interact with the docker daemon.
> On Windows we expect the daemon to be available on localhost:2375.
> So now there are two options which could cause your problem:
> 
> 1. You use WSL2 to build ditto. AFAIK there are issues with WSL2 and this OS detection we implemented. We didn't fix this, yet.
> 2. You didn't enable your docker daemon to expose itself on port 2375. This is a setting of docker. Just open the docker settings using the docker tray icon and check if you enabled this.


Okay thank you I will try it out","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2Mzg4NDUwMg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1090,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2ODE2MjAxMw==,ditto,868162013,1090,NA,HappyArthur29,86036482,,,NA,2021-06-25T02:50:14Z,2021-06-25T02:50:14Z,"> Hi @HappyArthur29 ,
> 
> from the error you posted, I assume you're using Windows as OS.
> The error you see is from some test code within ditto. A mongo DB should be started automatically for some integration testing against a real database.
> 
> For this test the OS will be detected and depending on the used OS the code tries to interact with the docker daemon.
> On Windows we expect the daemon to be available on localhost:2375.
> So now there are two options which could cause your problem:
> 
> 1. You use WSL2 to build ditto. AFAIK there are issues with WSL2 and this OS detection we implemented. We didn't fix this, yet.
> 2. You didn't enable your docker daemon to expose itself on port 2375. This is a setting of docker. Just open the docker settings using the docker tray icon and check if you enabled this.

Damn it actually got me through the error I was stuck on. Thank you!!! but now another issue came up.

[ERROR] Failures:
[ERROR]   ConnectionLoggerRegistryTest.aggregatesLogsRespectsMaximumLogSizeLimit:251
Expecting:
  [ImmutableLogEntry [correlationId=9c8627fa-7f2d-48db-91a8-ca18abd81a90, timestamp=2021-06-25T02:28:47.998372300Z, logCategory=connection, logType=other, logLevel=success, message=Processed message., address=null, thingId=null],
    ImmutableLogEntry [correlationId=53438087-32fd-4c41-bbe9-a5161230f74a, timestamp=2021-06-25T02:28:48.006677400Z, logCategory=connection, logType=other, logLevel=failure, message=Failure while processing message : not specified, address=null, thingId=null],
    ImmutableLogEntry [correlationId=0529ee14-c0ba-4964-bd7b-95dce534ca47, timestamp=2021-06-25T02:28:48.008013500Z, logCategory=connection, logType=other, logLevel=failure, message=Failure while processing message : not specified, address=null, thingId=null],
    ImmutableLogEntry [correlationId=87b82a99-ea26-41ea-babb-a314b603c0cd, timestamp=2021-06-25T02:28:48.010944100Z, logCategory=connection, logType=other, logLevel=failure, message=Failure while processing message : not specified, address=null, thingId=null]]
to not contain sequence:
  [ImmutableLogEntry [correlationId=9c8627fa-7f2d-48db-91a8-ca18abd81a90, timestamp=2021-06-25T02:28:47.998372300Z, logCategory=connection, logType=other, logLevel=success, message=Processed message., address=null, thingId=null]]
but was found at index 0

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2ODE2MjAxMw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1090,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2ODE3MDAyMw==,ditto,868170023,1090,NA,HappyArthur29,86036482,,,NA,2021-06-25T03:10:24Z,2021-06-25T03:10:24Z,"![ditto2](https://user-images.githubusercontent.com/86036482/123363839-edbf7600-d5a5-11eb-87dc-bb877e2c9257.PNG)
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2ODE3MDAyMw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1090,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2ODE5NDQ5Ng==,ditto,868194496,1090,NA,stmaute,17831060,Stefan Maute,,NA,2021-06-25T04:27:01Z,2021-06-25T04:27:01Z,@HappyArthur29 Is this test constantly failing? Did you try to build it another time?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2ODE5NDQ5Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1090,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2ODE5NTY4NA==,ditto,868195684,1090,NA,HappyArthur29,86036482,,,NA,2021-06-25T04:30:47Z,2021-06-25T04:30:47Z,"> @HappyArthur29 Is this test constantly failing? Did you try to build it another time?

Yeah it is, I tried out the advice that @Yannic92  told me I turned on dockerhub’s port setting and it worked. I tried it and it still failed. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2ODE5NTY4NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1090,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2ODIwNjk0Nw==,ditto,868206947,1090,NA,stmaute,17831060,Stefan Maute,,NA,2021-06-25T05:06:18Z,2021-06-25T05:06:18Z,I wanted to know if the ConnectionLoggerRegistryTest is constantly failing or some other random tests are constantly failing?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2ODIwNjk0Nw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1090,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2ODI0MTgwNA==,ditto,868241804,1090,NA,HappyArthur29,86036482,,,NA,2021-06-25T06:04:33Z,2021-06-25T06:04:33Z,"> I wanted to know if the ConnectionLoggerRegistryTest is constantly failing or some other random tests are constantly failing?

it is constantly failing, tried 2 times failed two time","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2ODI0MTgwNA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1090,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2ODI2NTkyMA==,ditto,868265920,1090,NA,stmaute,17831060,Stefan Maute,,NA,2021-06-25T06:46:44Z,2021-06-25T06:46:44Z,Then it seems to be a problem with your machine. We neither have problems with this test on your Build environment nor on our local dev machines. ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2ODI2NTkyMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1090,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2ODI2NzY4NA==,ditto,868267684,1090,NA,HappyArthur29,86036482,,,NA,2021-06-25T06:50:28Z,2021-06-25T06:50:28Z,I see alright thanks a lot will look into it,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2ODI2NzY4NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1092,https://api.github.com/repos/eclipse-ditto/ditto/issues/1092,ditto,924629893,1092,Question about the expected behavior of using custom auth-subjects,raujonas,25148277,Jonas Rau,,CLOSED,2021-06-18T07:34:15Z,2021-06-23T06:06:15Z,"Hey there! I've read about the new functionality to create custom auth-subjects (https://www.eclipse.org/ditto/installation-operating.html#openid-connect). I have a question about the expected behavior of this functionality, because my tests do not match my expectations.

What I'm trying to achieve is the usage of groups from keycloak (instead of the sub claim, so that multiple users can easily have access to a thing) which are part of my jwt, for example:
```
 ""groups"": [
    ""b2386a6c-fe10-44d5-82bf-d25e3e4e97b4"",
    ""91e6a873-d9fe-4eef-928f-b7906db06ec9"",
    ""cb87a63f-1238-44eb-96cd-3634b1d2df9c"",
    ""7a580140-f39e-42db-a62c-936e83b55ce5""
  ],
```
I'm also aware of the discussion in #512, that is why I expected that the created policy should have a separate subject for each of the four groups above. However the created policy looks like this (there's only my first group included):
```
{
    ""policyId"": ""myfleet2:60cc403580f0c753aea7110f:Z00SC0000HQ000030"",
    ""entries"": {
        ""DEFAULT"": {
            ""subjects"": {
                ""keycloak:b2386a6c-fe10-44d5-82bf-d25e3e4e97b4"": {
                    ""type"": ""generated""
                }
            },
            ""resources"": {
                ""thing:/"": {
                    ""grant"": [
                        ""READ"",
                        ""WRITE""
                    ],
                    ""revoke"": []
                },
                ""policy:/"": {
                    ""grant"": [
                        ""READ"",
                        ""WRITE""
                    ],
                    ""revoke"": []
                },
                ""message:/"": {
                    ""grant"": [
                        ""READ"",
                        ""WRITE""
                    ],
                    ""revoke"": []
                }
            }
        }
    }
}
```

I'm starting ditto with the following java parameters:
```
-Dditto.gateway.authentication.oauth.protocol=http 
-Dditto.gateway.authentication.oauth.openid-connect-issuers.keycloak.issuer=keycloak.localhost:8090/auth/realms/custom-realm 
-Dditto.gateway.authentication.oauth.openid-connect-issuers.keycloak.auth-subjects.0='{{ jwt:groups }}'
```

The question now is, is it possible to have a subject created for each of the groups which are part of the jwt or is this the intended behavior and just a misunderstanding on my side? Or is it just a configuration mistake on my side? In my case the number of groups could be dynamic.

Thank you very much for your help again! :blush: 

Edit: I'm on version 2.0.1","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1092/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1092,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2NDEzOTczOQ==,ditto,864139739,1092,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-06-18T16:05:50Z,2021-06-18T16:05:50Z,"Hi @raujonas
The default implicit policy Ditto creates (eg when creating a thing) will always only include the very first subject, even if the authorization context contained more than one subject. 
That way the first could eg be the user ID, additional ones could be groups. By default we always want to grant as few access as possible. 

You can however create the policy by yourself and use any amount of roles you want in there. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2NDEzOTczOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1092,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2NjU1MzIxNA==,ditto,866553214,1092,NA,raujonas,25148277,Jonas Rau,,NA,2021-06-23T06:01:50Z,2021-06-23T06:01:50Z,"Hi @thjaeckle. Thank you very much for the explanation, that was a misunderstanding on my side then! I'm using the following configuration now and it works perfectly with manually updating the policies!
```
-Dditto.gateway.authentication.oauth.openid-connect-issuers.keycloak.auth-subjects.0='{{ jwt:sub }}' 
-Dditto.gateway.authentication.oauth.openid-connect-issuers.keycloak.auth-subjects.1='{{ jwt:groups }}'
```

This is even better than what I had in mind because now the thing can still be created by a user and I can tell who created it in the future, but also give only read access to some groups with a separate policy entry. Great.

Thanks again! :blush:","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2NjU1MzIxNA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1092,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2NjU1NTMxMA==,ditto,866555310,1092,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-06-23T06:06:14Z,2021-06-23T06:06:14Z,"@raujonas Glad this works for you, thank you for the update 👍 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg2NjU1NTMxMA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1093,https://api.github.com/repos/eclipse-ditto/ditto/issues/1093,ditto,924636397,1093,Introduce EntityIdException,jufickel-b,17162397,Juergen Fickel,,CLOSED,2021-06-18T07:43:33Z,2021-09-07T07:42:00Z,"~~Right now, when calling `EntityId.of` an exception might be thrown.~~
This was expected but is not true (hence a bug).
In fact an `InvocationTargetException` is thrown which leads to `FallbackEntityId` as the method's return value.

This exception is documented nowhere and thus most likely not caught until recognised in unit tests, or worse, at runtime.
The rationale for not documenting the exception is the fact that it unknown to `EntityId`.
For example it might be a `ThingIdInvalidException` or a `PolicyIdInvalidException`.
To fix this it makes sense to introduce an `EntityIdInvalidException` which lies next to `EntityId` and thus is known and can be documented.
Furthermore all possible `*IdInvalidException`s should derive from `EntityIdInvalidException`.
This makes error handling for invalid entity IDs a lot easier.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1093/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1105,https://api.github.com/repos/eclipse-ditto/ditto/issues/1105,ditto,933581741,1105,Maven build error with mockito,jack04060201,17104362,,,CLOSED,2021-06-30T11:10:54Z,2021-09-14T08:42:55Z,"Hello! 
I'm trying to use maven to build Ditto. ""sudo mvn clean install""
But always get error n stop at policies.service
I have been search error but not get some useful info.
Anyone can resolve it?
Thanks

### Device:
Ubuntu 18.04 on VMware workstation
maven 3.6.0
docker-compose 1.17.1
docker 1.5-1
jdk 1.11

This is part of log:
```
[INFO] Running org.eclipse.ditto.policies.service.persistence.actors.strategies.commands.SubjectExpiryAdjustmentTest
[ERROR] Tests run: 8, Failures: 6, Errors: 0, Skipped: 0, Time elapsed: 0.071 s <<< FAILURE! - in org.eclipse.ditto.policies.service.persistence.actors.strategies.commands.SubjectExpiryAdjustmentTest
[ERROR] org.eclipse.ditto.policies.service.persistence.actors.strategies.commands.SubjectExpiryAdjustmentTest.roundingUpToFifteenMinutes  Time elapsed: 0.023 s  <<< FAILURE!
org.mockito.exceptions.verification.WantedButNotInvoked: 

Wanted but not invoked:
dummy.onMutation(
    <any>,
    <Capturing argument>,
    ModifySubjectResponse [dittoHeaders=ImmutableDittoHeaders [{etag=""hash:2a09937d"", response-required=false}], responseType=policies.responses:modifySubject, httpStatus=HttpStatus [code=201, category=SUCCESS], policyId=com.example:testPolicy, label=custom, subjectCreated=ImmutableSubject [subjectId=integration:this-is-me, subjectType=mySubjectType, subjectExpiry=2021-06-30T04:15:00Z, subjectAnnouncement=null], subjectId=integration:this-is-me],
    <any boolean>,
    false
);
-> at org.eclipse.ditto.policies.service.persistence.actors.strategies.commands.AbstractPolicyCommandStrategyTest.assertModificationResult(AbstractPolicyCommandStrategyTest.java:158)

However, there was exactly 1 interaction with this mock:
dummy.onError(
    org.eclipse.ditto.policies.model.SubjectExpiryInvalidException [message='Subject expiry timestamp '2021-06-30T04:15:00Z' is not valid.', errorCode=policies:subjectexpiry.invalid, httpStatus=HttpStatus [code=400, category=CLIENT_ERROR], description='It must not be in the past, please adjust to a timestamp in the future.', href=null, dittoHeaders=ImmutableDittoHeaders [{}]],
    ModifySubject [type=policies.commands:modifySubject, dittoHeaders=ImmutableDittoHeaders [{}], policyId=com.example:testPolicy, label=custom, subject=ImmutableSubject [subjectId=integration:this-is-me, subjectType=mySubjectType, subjectExpiry=2021-06-30T04:07:03Z, subjectAnnouncement=null]]
);
-> at org.eclipse.ditto.internal.utils.persistentactors.results.ErrorResult.accept(ErrorResult.java:44)


	at org.eclipse.ditto.policies.service.persistence.actors.strategies.commands.SubjectExpiryAdjustmentTest.doTestSubjectExpiryAdjustment(SubjectExpiryAdjustmentTest.java:181)
	at org.eclipse.ditto.policies.service.persistence.actors.strategies.commands.SubjectExpiryAdjustmentTest.roundingUpToFifteenMinutes(SubjectExpiryAdjustmentTest.java:101)

[ERROR] org.eclipse.ditto.policies.service.persistence.actors.strategies.commands.SubjectExpiryAdjustmentTest.roundingUpToOneHour  Time elapsed: 0.006 s  <<< FAILURE!
org.mockito.exceptions.verification.WantedButNotInvoked: 

Wanted but not invoked:
dummy.onMutation(
    <any>,
    <Capturing argument>,
    ModifySubjectResponse [dittoHeaders=ImmutableDittoHeaders [{etag=""hash:2a0ada71"", response-required=false}], responseType=policies.responses:modifySubject, httpStatus=HttpStatus [code=201, category=SUCCESS], policyId=com.example:testPolicy, label=custom, subjectCreated=ImmutableSubject [subjectId=integration:this-is-me, subjectType=mySubjectType, subjectExpiry=2021-06-30T05:00:00Z, subjectAnnouncement=null], subjectId=integration:this-is-me],
    <any boolean>,
    false
);
-> at org.eclipse.ditto.policies.service.persistence.actors.strategies.commands.AbstractPolicyCommandStrategyTest.assertModificationResult(AbstractPolicyCommandStrategyTest.java:158)

However, there was exactly 1 interaction with this mock:
dummy.onError(
    org.eclipse.ditto.policies.model.SubjectExpiryInvalidException [message='Subject expiry timestamp '2021-06-30T05:00:00Z' is not valid.', errorCode=policies:subjectexpiry.invalid, httpStatus=HttpStatus [code=400, category=CLIENT_ERROR], description='It must not be in the past, please adjust to a timestamp in the future.', href=null, dittoHeaders=ImmutableDittoHeaders [{}]],
    ModifySubject [type=policies.commands:modifySubject, dittoHeaders=ImmutableDittoHeaders [{}], policyId=com.example:testPolicy, label=custom, subject=ImmutableSubject [subjectId=integration:this-is-me, subjectType=mySubjectType, subjectExpiry=2021-06-30T04:55:36.090714Z, subjectAnnouncement=null]]
);
-> at org.eclipse.ditto.internal.utils.persistentactors.results.ErrorResult.accept(ErrorResult.java:44)


	at org.eclipse.ditto.policies.service.persistence.actors.strategies.commands.SubjectExpiryAdjustmentTest.doTestSubjectExpiryAdjustment(SubjectExpiryAdjustmentTest.java:181)
	at org.eclipse.ditto.policies.service.persistence.actors.strategies.commands.SubjectExpiryAdjustmentTest.roundingUpToOneHour(SubjectExpiryAdjustmentTest.java:116)

[ERROR] org.eclipse.ditto.policies.service.persistence.actors.strategies.commands.SubjectExpiryAdjustmentTest.roundingUpToTenSeconds  Time elapsed: 0.007 s  <<< FAILURE!
org.mockito.exceptions.verification.WantedButNotInvoked: 

Wanted but not invoked:
dummy.onMutation(
    <any>,
    <Capturing argument>,
    ModifySubjectResponse [dittoHeaders=ImmutableDittoHeaders [{etag=""hash:2a095f6b"", response-required=false}], responseType=policies.responses:modifySubject, httpStatus=HttpStatus [code=201, category=SUCCESS], policyId=com.example:testPolicy, label=custom, subjectCreated=ImmutableSubject [subjectId=integration:this-is-me, subjectType=mySubjectType, subjectExpiry=2021-06-30T04:07:50Z, subjectAnnouncement=null], subjectId=integration:this-is-me],
    <any boolean>,
    false
);
-> at org.eclipse.ditto.policies.service.persistence.actors.strategies.commands.AbstractPolicyCommandStrategyTest.assertModificationResult(AbstractPolicyCommandStrategyTest.java:158)

However, there was exactly 1 interaction with this mock:
dummy.onError(
    org.eclipse.ditto.policies.model.SubjectExpiryInvalidException [message='Subject expiry timestamp '2021-06-30T04:07:50Z' is not valid.', errorCode=policies:subjectexpiry.invalid, httpStatus=HttpStatus [code=400, category=CLIENT_ERROR], description='It must not be in the past, please adjust to a timestamp in the future.', href=null, dittoHeaders=ImmutableDittoHeaders [{}]],
    ModifySubject [type=policies.commands:modifySubject, dittoHeaders=ImmutableDittoHeaders [{}], policyId=com.example:testPolicy, label=custom, subject=ImmutableSubject [subjectId=integration:this-is-me, subjectType=mySubjectType, subjectExpiry=2021-06-30T04:07:44Z, subjectAnnouncement=null]]
);
-> at org.eclipse.ditto.internal.utils.persistentactors.results.ErrorResult.accept(ErrorResult.java:44)


	at org.eclipse.ditto.policies.service.persistence.actors.strategies.commands.SubjectExpiryAdjustmentTest.doTestSubjectExpiryAdjustment(SubjectExpiryAdjustmentTest.java:181)
	at org.eclipse.ditto.policies.service.persistence.actors.strategies.commands.SubjectExpiryAdjustmentTest.roundingUpToTenSeconds(SubjectExpiryAdjustmentTest.java:70)

[ERROR] org.eclipse.ditto.policies.service.persistence.actors.strategies.commands.SubjectExpiryAdjustmentTest.roundingUpToOneMinute  Time elapsed: 0.007 s  <<< FAILURE!
org.mockito.exceptions.verification.WantedButNotInvoked: 

Wanted but not invoked:
dummy.onMutation(
    <any>,
    <Capturing argument>,
    ModifySubjectResponse [dittoHeaders=ImmutableDittoHeaders [{etag=""hash:2a0abd61"", response-required=false}], responseType=policies.responses:modifySubject, httpStatus=HttpStatus [code=201, category=SUCCESS], policyId=com.example:testPolicy, label=custom, subjectCreated=ImmutableSubject [subjectId=integration:this-is-me, subjectType=mySubjectType, subjectExpiry=2021-06-30T04:56:00Z, subjectAnnouncement=null], subjectId=integration:this-is-me],
    <any boolean>,
    false
);
-> at org.eclipse.ditto.policies.service.persistence.actors.strategies.commands.AbstractPolicyCommandStrategyTest.assertModificationResult(AbstractPolicyCommandStrategyTest.java:158)

However, there was exactly 1 interaction with this mock:
dummy.onError(
    org.eclipse.ditto.policies.model.SubjectExpiryInvalidException [message='Subject expiry timestamp '2021-06-30T04:56:00Z' is not valid.', errorCode=policies:subjectexpiry.invalid, httpStatus=HttpStatus [code=400, category=CLIENT_ERROR], description='It must not be in the past, please adjust to a timestamp in the future.', href=null, dittoHeaders=ImmutableDittoHeaders [{}]],
    ModifySubject [type=policies.commands:modifySubject, dittoHeaders=ImmutableDittoHeaders [{}], policyId=com.example:testPolicy, label=custom, subject=ImmutableSubject [subjectId=integration:this-is-me, subjectType=mySubjectType, subjectExpiry=2021-06-30T04:55:36.118780Z, subjectAnnouncement=null]]
);
-> at org.eclipse.ditto.internal.utils.persistentactors.results.ErrorResult.accept(ErrorResult.java:44)


	at org.eclipse.ditto.policies.service.persistence.actors.strategies.commands.SubjectExpiryAdjustmentTest.doTestSubjectExpiryAdjustment(SubjectExpiryAdjustmentTest.java:181)
	at org.eclipse.ditto.policies.service.persistence.actors.strategies.commands.SubjectExpiryAdjustmentTest.roundingUpToOneMinute(SubjectExpiryAdjustmentTest.java:85)

[ERROR] org.eclipse.ditto.policies.service.persistence.actors.strategies.commands.SubjectExpiryAdjustmentTest.roundingUpToOneSecond  Time elapsed: 0.006 s  <<< FAILURE!
org.mockito.exceptions.verification.WantedButNotInvoked: 

Wanted but not invoked:
dummy.onMutation(
    <any>,
    <Capturing argument>,
    ModifySubjectResponse [dittoHeaders=ImmutableDittoHeaders [{etag=""hash:2a0ac087"", response-required=false}], responseType=policies.responses:modifySubject, httpStatus=HttpStatus [code=201, category=SUCCESS], policyId=com.example:testPolicy, label=custom, subjectCreated=ImmutableSubject [subjectId=integration:this-is-me, subjectType=mySubjectType, subjectExpiry=2021-06-30T04:56:26Z, subjectAnnouncement=null], subjectId=integration:this-is-me],
    <any boolean>,
    false
);
-> at org.eclipse.ditto.policies.service.persistence.actors.strategies.commands.AbstractPolicyCommandStrategyTest.assertModificationResult(AbstractPolicyCommandStrategyTest.java:158)

However, there was exactly 1 interaction with this mock:
dummy.onError(
    org.eclipse.ditto.policies.model.SubjectExpiryInvalidException [message='Subject expiry timestamp '2021-06-30T04:56:26Z' is not valid.', errorCode=policies:subjectexpiry.invalid, httpStatus=HttpStatus [code=400, category=CLIENT_ERROR], description='It must not be in the past, please adjust to a timestamp in the future.', href=null, dittoHeaders=ImmutableDittoHeaders [{}]],
    ModifySubject [type=policies.commands:modifySubject, dittoHeaders=ImmutableDittoHeaders [{}], policyId=com.example:testPolicy, label=custom, subject=ImmutableSubject [subjectId=integration:this-is-me, subjectType=mySubjectType, subjectExpiry=2021-06-30T04:56:25.124401Z, subjectAnnouncement=null]]
);
-> at org.eclipse.ditto.internal.utils.persistentactors.results.ErrorResult.accept(ErrorResult.java:44)


	at org.eclipse.ditto.policies.service.persistence.actors.strategies.commands.SubjectExpiryAdjustmentTest.doTestSubjectExpiryAdjustment(SubjectExpiryAdjustmentTest.java:181)
	at org.eclipse.ditto.policies.service.persistence.actors.strategies.commands.SubjectExpiryAdjustmentTest.roundingUpToOneSecond(SubjectExpiryAdjustmentTest.java:54)

[ERROR] org.eclipse.ditto.policies.service.persistence.actors.strategies.commands.SubjectExpiryAdjustmentTest.doesNotRoundUpMatchingGranularity  Time elapsed: 0.006 s  <<< FAILURE!
org.mockito.exceptions.verification.WantedButNotInvoked: 

Wanted but not invoked:
dummy.onMutation(
    <any>,
    <Capturing argument>,
    ModifySubjectResponse [dittoHeaders=ImmutableDittoHeaders [{etag=""hash:2a08d695"", response-required=false}], responseType=policies.responses:modifySubject, httpStatus=HttpStatus [code=201, category=SUCCESS], policyId=com.example:testPolicy, label=custom, subjectCreated=ImmutableSubject [subjectId=integration:this-is-me, subjectType=mySubjectType, subjectExpiry=2021-06-30T03:49:00Z, subjectAnnouncement=null], subjectId=integration:this-is-me],
    <any boolean>,
    false
);
-> at org.eclipse.ditto.policies.service.persistence.actors.strategies.commands.AbstractPolicyCommandStrategyTest.assertModificationResult(AbstractPolicyCommandStrategyTest.java:158)

However, there was exactly 1 interaction with this mock:
dummy.onError(
    org.eclipse.ditto.policies.model.SubjectExpiryInvalidException [message='Subject expiry timestamp '2021-06-30T03:49:00Z' is not valid.', errorCode=policies:subjectexpiry.invalid, httpStatus=HttpStatus [code=400, category=CLIENT_ERROR], description='It must not be in the past, please adjust to a timestamp in the future.', href=null, dittoHeaders=ImmutableDittoHeaders [{}]],
    ModifySubject [type=policies.commands:modifySubject, dittoHeaders=ImmutableDittoHeaders [{}], policyId=com.example:testPolicy, label=custom, subject=ImmutableSubject [subjectId=integration:this-is-me, subjectType=mySubjectType, subjectExpiry=2021-06-30T03:49:00Z, subjectAnnouncement=null]]
);
-> at org.eclipse.ditto.internal.utils.persistentactors.results.ErrorResult.accept(ErrorResult.java:44)


	at org.eclipse.ditto.policies.service.persistence.actors.strategies.commands.SubjectExpiryAdjustmentTest.doTestSubjectExpiryAdjustment(SubjectExpiryAdjustmentTest.java:181)
	at org.eclipse.ditto.policies.service.persistence.actors.strategies.commands.SubjectExpiryAdjustmentTest.doesNotRoundUpMatchingGranularity(SubjectExpiryAdjustmentTest.java:155)
```

This is full log by tee
[buildinglog.txt](https://github.com/eclipse/ditto/files/6740366/buildinglog.txt)
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1105/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1105,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg3MTUwNjE3Mw==,ditto,871506173,1105,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-06-30T15:32:02Z,2021-06-30T15:32:02Z,"@jack04060201 which Java JDK are you using? There are sometimes differences when it comes to Mockito mocking in the behavior of JDKs.

When you don't need to run the tests when building Ditto, you can simply skip them:
```
mvn clean install -DskipTests
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg3MTUwNjE3Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1105,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg3MTc0NTEwOQ==,ditto,871745109,1105,NA,jack04060201,17104362,,,NA,2021-06-30T21:39:14Z,2021-06-30T21:39:14Z,"> @jack04060201 which Java JDK are you using? There are sometimes differences when it comes to Mockito mocking in the behavior of JDKs.
> 
> When you don't need to run the tests when building Ditto, you can simply skip them:
> ```
> mvn clean install -DskipTests
> ```

Thanks for reply,
I'm using default-jdk.
Will there be any problems if I don't test him？
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg3MTc0NTEwOQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1105,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg3MTk1NTcyOA==,ditto,871955728,1105,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-07-01T06:18:39Z,2021-07-01T06:18:39Z,"> Will there be any problems if I don't test him？

Not if you didn't modify any code. 
But if you didn't modify any code, you would not require to build Ditto at all.

The build runs stable on our Jenkins environment: https://ci.eclipse.org/ditto/job/ditto-ci/","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg3MTk1NTcyOA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1105,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg3MjA3OTAzNw==,ditto,872079037,1105,NA,jack04060201,17104362,,,NA,2021-07-01T09:20:15Z,2021-07-01T09:20:15Z,"> > Will there be any problems if I don't test him？
> 
> Not if you didn't modify any code.
> But if you didn't modify any code, you would not require to build Ditto at all.

But I haven't modify any code yet. Just open dockerd and mvn clean install.
And I want to modify it too.
> 
> The build runs stable on our Jenkins environment: https://ci.eclipse.org/ditto/job/ditto-ci/

I haven't used it before. I will try it.
Thank for reply.

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg3MjA3OTAzNw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1105,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842xfH_,ditto,918942207,1105,NA,jack04060201,17104362,,,NA,2021-09-14T08:42:54Z,2021-09-14T08:42:54Z,"Although it’s been a long time, I’ll update the solution,
The problem is at the time stamp.
`message='Subject expiry timestamp '2021-06-30T04:56:00Z' is not valid.', errorCode=policies:subjectexpiry.invalid, httpStatus=HttpStatus [code=400, category=CLIENT_ERROR], description='It must not be in the past, please adjust to a timestamp in the future.`
So it jumps into dummy.onError() instead of dummy.onMutation()
Because when you installing VMware, the default time zone is Los Angeles, not the local time zone, so you need to change the time zone of the VM to your local time zone. This problem may not occur on VirtualBox because you need to choose a timezone when installing OS.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842xfH_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1107,https://api.github.com/repos/eclipse-ditto/ditto/issues/1107,ditto,936449962,1107,Support at-least-once delivery for subject expiry announcements,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,CLOSED,2021-07-04T12:44:26Z,2021-07-22T22:08:47Z,"Add an option to ensure delivery of policy announcements.
- Add an option to request acknowledgements for subject expiry announcements
- Do not remove expired subjects until requested acknowledgements are fulfilled, up to a configured grace period","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1107/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1113,https://api.github.com/repos/eclipse-ditto/ditto/issues/1113,ditto,943364363,1113,error handling in @eclipse-ditto/ditto-javascript-client-dom,thlandgraf,45935153,Thomas Landgraf,,CLOSED,2021-07-13T13:19:16Z,2021-07-13T13:40:41Z,"Hi,

when I open a ditto-connection with a **wrong** PW:
```
this.restclient = DittoDomClient.newHttpClient()
            .withoutTls()
            .withDomain(domain)
            .withAuthProvider(DomHttpBasicAuth.newInstance(""ditto"",""wrongpw))
            .build();
```
and call the count method:
```
this.searchHandle = this.restclient.getSearchHandle();
this.searchHandle.count().then(r => {
     console.log(r);
    },e => {
      console.log(e); // this returns undefined
    })
```
... HTTP returns properly 401 - since I want to distinguish between HTTP errorcodes, I need to interpret the errorcode. But e is returned as undefined.

What do I miss?

    Thomas
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1113/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1113,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg3OTA5ODEwMg==,ditto,879098102,1113,NA,thlandgraf,45935153,Thomas Landgraf,,NA,2021-07-13T13:40:41Z,2021-07-13T13:40:41Z,Moved to https://github.com/eclipse/ditto-clients/issues/169,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg3OTA5ODEwMg==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1114,https://api.github.com/repos/eclipse-ditto/ditto/issues/1114,ditto,944791919,1114,"[things-search] ""in"" filter doesnt work on list anymore",bhat-ganesh,10886770,Ganesh Bhat,,CLOSED,2021-07-14T20:59:27Z,2022-09-07T14:39:43Z,"We have been using ""in"" filter on a list in things-serach without issue on v1.5.1

Recently we moved to v2.0.1 and this is not working anymore.

Filter we have been using is `in(features/devices/properties/ids,""b1221111ffff"")`

This is how our thing is structured
```
""features"": {
  ""devices"": {
    ""properties"": {
      ""ids"": [
        ""b1221111ffff"",
        ""b1221111fffe"",
        ""b1221111fffd""
      ]
    }
  },
  ""info"": {
    ""properties"": {
      ""name"": ""my_device_name"",
      ""description"": ""list of my devices""
    }
  }
}
```

No change is mentioned in Swagger api document.
`in({property},{value},{value},...) (i.e. contains at least one of the values listed)`

Is this a regression? or is it not supported on list anymore?

Thank you for your response.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1114/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1114,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg4MDQyNjQ1NA==,ditto,880426454,1114,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-07-15T06:14:28Z,2021-07-15T06:14:28Z,"Hi @bhat-ganesh 
Thanks for reaching out.

To be honest, searching in JSON arrays was never supported in Ditto's search - we are surprised ourselves that id apparently did work with 1.5.1.
The `in({property},{value},{value},...)` operator in the search [is documented to search in a single scalar property](https://www.eclipse.org/ditto/basic-rql.html#in) (see also the example there).

So this is neither a regression nor a intentional drop of support of that feature.
We can look into this at a later point as this has no priority for our use-cases.
If you depend on that feature I suggest to stay at Ditto 1.5.1 or to provide a PullRequest which re-enables (and documents) that feature.

Might I ask: do you use Ditto in a commercial setup? If yes, out would be great to share that your company adopts Eclipse Ditto: https://iot.eclipse.org/adopters/?#iot.ditto","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg4MDQyNjQ1NA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1114,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg4MDQ0MTA2Mw==,ditto,880441063,1114,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-07-15T06:45:51Z,2021-07-15T06:45:51Z,"We found something you could try:
The ""things-search"" service has a environment variable named `THINGS_SEARCH_UPDATER_STREAM_MAX_ARRAY_SIZE`. This is [by default set to 0](https://github.com/eclipse/ditto/blob/2.0.1/thingsearch/service/src/main/resources/things-search.conf#L109).
You can try to set the environment variable `THINGS_SEARCH_UPDATER_STREAM_MAX_ARRAY_SIZE` to e.g. `25`.

Seems that the Ditto search will index JSON arrays with at most that configured amount of entries.

Would be great if you could provide feedback whether this works.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg4MDQ0MTA2Mw==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1114,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg4MDYzMTU0Ng==,ditto,880631546,1114,NA,qthuy,13472700,QuocThanh Thuy,,NA,2021-07-15T11:51:52Z,2021-07-15T11:51:52Z,"From https://github.com/persvr/rql, seems like the correct relational operator should be ""contains"" (not supported by ditto today) vs ""in"".

- contains(<property>,<value | expression>) - Filters for objects where the specified property's value is an array and the array contains any value that equals the provided value or satisfies the provided expression.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg4MDYzMTU0Ng==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1114,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg4MDY0MTU5MQ==,ditto,880641591,1114,NA,qthuy,13472700,QuocThanh Thuy,,NA,2021-07-15T12:08:18Z,2021-07-15T12:08:18Z,"We tried ""THINGS_SEARCH_UPDATER_STREAM_MAX_ARRAY_SIZE=25"" on ""things-search"" service, but it did not help with the issue (i.e. no result returned from search API). ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg4MDY0MTU5MQ==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1114,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg4MDY0Nzg2OA==,ditto,880647868,1114,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-07-15T12:18:39Z,2021-07-15T12:18:39Z,@qthuy did you modify the thing so that an update in the search index is performed?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg4MDY0Nzg2OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1114,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg4MDY2ODk4MA==,ditto,880668980,1114,NA,qthuy,13472700,QuocThanh Thuy,,NA,2021-07-15T12:52:42Z,2021-07-15T12:52:42Z,"I did not previously. Once I modify the thing, the query is working again.

Was this value/default recently changed? Any consideration when setting this value? If the array is bigger than this value, does this means that ditto will not search the whole array?

For your other question, we do plan to submit as an adopter once we go live later this year. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg4MDY2ODk4MA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1114,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg4MDY4NDk4OA==,ditto,880684988,1114,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-07-15T13:14:46Z,2021-07-15T13:14:46Z,"> Was this value/default recently changed? Any consideration when setting this value? If the array is bigger than this value, does this means that ditto will not search the whole array?

I think there was a bug before Ditto 2.0 that the configuration hierarchy was wrong, so that the configuration from the config file (which was already `0`, disabling the indexing of arrays) was not applied correctly and the fallback from code (`25`) was used instead.
This was fixed and so the `0` was configured effectively disabling indexing arrays.

This should not be set to a very high number as this could lead to high document sizes in the search index - but you have to try out and find out which value you would need as upper array size limit.

And yes, additional array entries would not be indexed if the array size is greater than the configured limit.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/MDEyOklzc3VlQ29tbWVudDg4MDY4NDk4OA==/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1114,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C840i5c8,ditto,881563452,1114,NA,bhat-ganesh,10886770,Ganesh Bhat,,NA,2021-07-16T16:15:48Z,2021-07-16T16:15:48Z,"Thanks @thjaeckle for your quick responses and explanation. Can I leave it to you to close this issue, if you think its just matter of usage and no change is needed on your side?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C840i5c8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1114,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C840lmnt,ditto,882272749,1114,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-07-19T06:19:54Z,2021-07-19T06:19:54Z,"@bhat-ganesh we'll let this issue open - as we should:
* document that this is possible
* find out limitations (there are probably some, that's why it is disabled by default now)
* maybe think about another RQL operator for array operations which fits better (like @qthuy mentioned)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C840lmnt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1114,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85JnlQ7,ditto,1235113019,1114,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-09-02T06:21:10Z,2022-09-02T06:21:10Z,"ToDo for 3.0.0:
Document that searching in arrays is possible and with which restrictions.

With 3.0.0 it is enabled by default. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85JnlQ7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1128,https://api.github.com/repos/eclipse-ditto/ditto/issues/1128,ditto,950340774,1128,Can I call by implementing the function I want in ditto?,bear1004,62101255,,,CLOSED,2021-07-22T06:26:55Z,2021-08-04T06:14:50Z,"I want to implement a function that sends data by accessing MongoDB running with ditto through ditto. 
Can I implement this function available by calling from another things?

Tell me how I can implement it.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1128/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1128,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C840u270,ditto,884698868,1128,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-07-22T07:05:53Z,2021-07-22T07:05:53Z,"Hi @bear1004 
Sorry, I did not understand what you are trying to achieve.
Could you please try to explain in a step-by-step way?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C840u270/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1128,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C840u4wC,ditto,884706306,1128,NA,bear1004,62101255,,,NA,2021-07-22T07:21:26Z,2021-07-22T07:21:26Z,"I want to implement the following function I want in ditto.

The first function is to store data received from things in MongoDB.
I found that ditto stores data received as object as URL So this function simply reads the URL and stores it in MongoDB.

I currently have a code implementation that stores in MongoDBin python. But I would like to implement it in ditto API or founction.

The second function returns the latest data.
I want the function to behave like this:
1. Call the same in Unity. (API or other)
2. Return the latest data. (in MongoDB)

I would like to implement the following two functions in the form of functions or APIs and call them from outside code or things.

Is it possible? If possible, how can I implement it?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C840u4wC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1128,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C840vLbH,ditto,884782791,1128,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-07-22T09:41:40Z,2021-07-22T09:41:40Z,"Sorry, I still don't understand.
Maybe you can provide e.g. a sequence diagram? https://sequencediagram.org","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C840vLbH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1128,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C840vNfy,ditto,884791282,1128,NA,bear1004,62101255,,,NA,2021-07-22T09:57:30Z,2021-07-22T09:57:30Z,"In a nutshell, is it possible to implement a custom API in ditto?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C840vNfy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1128,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C840vPWr,ditto,884798891,1128,NA,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,NA,2021-07-22T10:10:05Z,2021-07-22T10:10:05Z,"To understand what you want to achieve we need to understand what components should be involved and which component uses which API.

For example
> The first function is to store data received from things in MongoDB.

What is things? Where should this function run? Within Ditto?

> found that ditto stores data received as object as URL

No. Ditto stores the twin state as JSON objects in the MongoDB.

I try to make a guess:
You want to achieve that your application calls an HTTP endpoint of ditto with some payload for a twin (thing).
This payload should be stored in Dittos Mongo DB.
Then you want to achieve that your application calls another HTTP endpoint of ditto and gets the latest state of this payload?

Is this what you want to do?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C840vPWr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1128,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C840vYft,ditto,884836333,1128,NA,bear1004,62101255,,,NA,2021-07-22T11:19:10Z,2021-07-22T11:19:10Z,"Yes!!

I am composing by referring to example ""https://github.com/eclipse/ditto-examples/tree/master/grove-ctrl"".
I am doing communication between raspberry pi and unity through ditto. Also, I want to store ditto's past data in MongoDB.

I am trying to send the data we need to ditto and read the data stored in ditto.
Is it correct to read the data sent to ditto through the HTTP call like ""/api/2/things/org.eclipse.ditto.example:raspberry"" in raspberry pi and unity?

I'm now saving ditto's past data in MongoDB with Python code via ""/api/2/things/org.eclipse.ditto.example:raspberry""  HTTP call. Is the way I'm doing it right?
Currently ditto's API doesn't have the ability to automatically save to MongoDB?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C840vYft/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1128,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C840vaz3,ditto,884845815,1128,NA,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,NA,2021-07-22T11:37:36Z,2021-07-22T11:37:36Z,"> Currently ditto's API doesn't have the ability to automatically save to MongoDB?

Dittos main point is storing twin information in a MongoDB and making it accessible via multiple different APIs.
One of these APIs could be the HTTP API.

For example you could store your data in a [twin feature](https://www.eclipse.org/ditto/basic-feature.html) by using an `HTTP PUT` to `/api/2/things/org.eclipse.ditto.example:raspberry/features/yourFeatureName` with your JSON data as payload.

Ditto will store this in a MongoDB and makes it accessible to you for example by calling the same endpoint with an `HTTP GET` afterwards.

There is no need (and we strongly advice you not to do this!) to access ditto's MongoDB manually.

If you need more information about our HTTP API feel free to check: https://www.eclipse.org/ditto/http-api-doc.html#/Features

If you want to learn about other APIs of Ditto, like Websocket or different messaging protocols like AMQP, MQTT or Kafka please check: https://www.eclipse.org/ditto/connectivity-overview.html","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C840vaz3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1128,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C840vihu,ditto,884877422,1128,NA,bear1004,62101255,,,NA,2021-07-22T12:35:42Z,2021-07-22T12:35:42Z,"Thank you!

It seems that only the latest data is currently available in ditto.
If i need past data, do i need to create a separate DB to store dittos JSON data?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C840vihu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1128,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C840v3Et,ditto,884961581,1128,NA,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,NA,2021-07-22T14:32:46Z,2021-07-22T14:32:46Z,"Yes, Ditto does only store the latest state. Historical data is out of scope for Ditto.
If you however need historical information I'd suggest to write an application that subscribes to [feature modified events](https://www.eclipse.org/ditto/protocol-specification-things-create-or-modify.html#event-5).
You could for example setup an [HTTP  forwarding](https://www.eclipse.org/ditto/connectivity-protocol-bindings-http.html) connection in Ditto which calls an HTTP endpoint of your application with the modification that happened.
That way your application can build up a historical database.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C840v3Et/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1128,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C840xOcu,ditto,885319470,1128,NA,bear1004,62101255,,,NA,2021-07-23T00:19:25Z,2021-07-23T00:19:25Z,"Yannic92 Thanks!!

My finally question is ""It possible to add another API of the function in ditto?""","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C840xOcu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1128,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C8400rmi,ditto,886225314,1128,NA,bear1004,62101255,,,NA,2021-07-25T16:22:33Z,2021-07-25T16:22:33Z,"@awslabspl 

Where do I put that code?
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C8400rmi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1128,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84006Dv,ditto,886284527,1128,NA,bear1004,62101255,,,NA,2021-07-26T00:22:49Z,2021-07-26T00:22:49Z,"@awslabspl 

sorry i don't understand...
Is that codes JavaScript or something else??
What is main class??

I am currently using ditto on docker. (https://github.com/eclipse/ditto/tree/master/deployment/docker)
What is the main class here??
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84006Dv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1128,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C8401aLM,ditto,886416076,1128,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-07-26T06:29:28Z,2021-07-26T06:29:28Z,"@awslabspl that definitely has nothing to do with the question, thanks for the confusion.

@bear1004 you can ""enhance"" Ditto's API by using ""live messages"". Please have a look at e.g. the following documentation to get an inspiration: https://www.eclipse.org/ditto/advanced-data-by-pass.html
That however is a quite advanced topic and requires first some understanding of Ditto's [live messages](https://www.eclipse.org/ditto/basic-messages.html) and how to [receive](https://www.eclipse.org/ditto/basic-messages.html#receiving-messages) them with e.g. WebSockets or connections via brokers.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C8401aLM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1128,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C8404bqk,ditto,887208612,1128,NA,bear1004,62101255,,,NA,2021-07-27T04:56:48Z,2021-07-27T04:56:48Z,"@thjaeckle 

Can you tell me where in the code in ""Ditto"" stores the latest data in MongoDB?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C8404bqk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1128,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C8404jQu,ditto,887239726,1128,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-07-27T06:12:32Z,2021-07-27T06:12:32Z,"Sure - for the persistence of ""things"" this is here: https://github.com/eclipse/ditto/blob/master/things/service/src/main/java/org/eclipse/ditto/things/service/persistence/actors/ThingPersistenceActor.java

There are some abstractions however, you won't see any direct Mongo interactions there, you'll have to figure that out by yourself.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C8404jQu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1128,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C841Bvc3,ditto,889648951,1128,NA,bear1004,62101255,,,NA,2021-07-30T05:57:45Z,2021-07-30T05:57:45Z,"@thjaeckle 

Currently, uploading ditto to Docker is like downloading a default image through an internet connection. 

https://github.com/eclipse/ditto/blob/master/deployment/docker/docker-compose.yml

I want to edit ""https://github.com/eclipse/ditto/tree/master/things"" code and upload the code to docker,

how do I do that?

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C841Bvc3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1128,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C841COgv,ditto,889776175,1128,NA,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,NA,2021-07-30T09:47:18Z,2021-07-30T09:47:18Z,"You can't upload your docker images to the ditto docker hub repo.
What you can do is building your images locally and either use them there directly or you could upload them to any docker container registry that is under your control.

[here](https://github.com/eclipse/ditto#build-and-start-ditto-locally) you can read how to build docker images on your own.
So you could make your adjustments and then build the docker images.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C841COgv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1128,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C841MLcw,ditto,892385072,1128,NA,bear1004,62101255,,,NA,2021-08-04T05:56:39Z,2021-08-04T05:56:39Z,"@thjaeckle 

I added the following code to save past data in ""https://github.com/eclipse/ditto/blob/master/things/service/src/main/java/org/eclipse/ditto/things/service/persistence/actors/strategies/events/FeaturePropertiesModifiedStrategy.java"".

MongoClient mongoClient = new MongoClient(""localhost"", 27017);

But the moment I send data to ditto, docker_things_1 stops.

I do not know reason. 
can you help..??","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C841MLcw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1128,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C841ML6Z,ditto,892386969,1128,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-08-04T06:01:21Z,2021-08-04T06:01:21Z,"@bear1004 this is wrong in so many ways that I don't even know where to start.
You can't just open a connection to mongodb there and assume to insert data. 

We already invested a lot of our time in your questions and won't invest any more.

You are on your own when you want to fork and adjust the Ditto codebase. 

Best of luck. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C841ML6Z/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1135,https://api.github.com/repos/eclipse-ditto/ditto/issues/1135,ditto,954229086,1135,Implement basic tracing support,dguggemos,15028977,Dominik Guggemos,dominik.guggemos@bosch.io,CLOSED,2021-07-27T20:10:23Z,2021-08-24T07:59:48Z,"With this issue we want to add basic tracing support besides the existing logging and metrics to further help us improve the anaylsis of errors and quickly gain insights in possible performance issues.
This involves:

* generate traces across all Ditto services (at least one trace per service)
* read/propagate trace context at the edges (gateway/connectivity)
* use [W3C trace context](https://www.w3.org/TR/trace-context/) for context propagation between services and from/to external systems
* use Kamon library to generate traces (already used in Ditto to collect metrics)
* use [OpenTelemetry](https://opentelemetry.io/) to export traces (kamon-opentelemetry)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1135/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1137,https://api.github.com/repos/eclipse-ditto/ditto/issues/1137,ditto,959045804,1137,Introduce policy decision API ,vhdirk,1424486,Dirk Van Haerenborgh,,CLOSED,2021-08-03T12:03:31Z,2024-11-06T14:51:53Z,"For our UI, we'd like an endpoint that we can call to check if we should enable/disable certain elements based on policies.
As briefly discussed on gitter with @thjaeckle, that endpoint could look something like:

`POST /api/2/policies/{policyId}/actions/checkPermissions` with a payload like
```json
{
  ""resource"": ""thing:/features/X/properties/Y"", 
  ""id"": ""org.eclipse.ditto:mythingId"",
  ""permissions"": [ ""READ"" ],
 }
```
The response could be something like

```json
[
   {
      ""permission"": ""READ"",
      ""allowed"": true/false
   }
]
```

That would require you to have the policyId at hand, potentially having to fetch the Thing prior to using this api. It does make it generic to use for any kind of resource (thing, policy, messages)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1137/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1137,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C841KBqc,ditto,891820700,1137,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-08-03T12:50:50Z,2021-08-03T12:50:50Z,"@vhdirk I don't get why you added the `""id""` of the Thing in the payload.
You already define by addressing the policy via the `""policyId""` in the HTTP path, which policy to check. And as inside of the policy there is no ""link"" to a special Thing ID, this makes no sense (the relation is the other way around, the thing points to the policy).

Basically what I think you need: 
* You have a Thing ""namespace:thing-1"" which uses policy ""namespace:policy-1""
* You check if you have `""READ""` permission on ""namespace:thing-1"" by doing `POST /api/2/policies/namespace:policy-1/actions/checkPermissions`
   * ```json
      {
        ""resource"": ""thing:/"", 
        ""permissions"": [ ""READ"" ]
       }
      ```
* Response could IMO be much simpler:
   * ```json
     true|false
     ```

By using the ""actions"", one would however require to have `EXECUTE` permission for `policy:/actions/checkPermissions` - I am not certain if that is a good idea or if that API endpoint should be callable by every authenticated user instead.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C841KBqc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1137,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C841KDDz,ditto,891826419,1137,NA,vhdirk,1424486,Dirk Van Haerenborgh,,NA,2021-08-03T12:59:58Z,2021-08-03T12:59:58Z,"I forgot to update the payload after I added the policy id as a pathparam :)
I was pondering with the idea of not requiring any id in request url, so that you did not need to first fetch the policyId from the resource itself. You could just give it a thingId, policyId or messageId and it would fetch the policyId internally.

As far as the response goes; the idea was that you could test multiple permissions independently. But there's not that many combinations to be made with permissions, so I think the simple boolean response would be fine.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C841KDDz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1137,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C841KIgt,ditto,891848749,1137,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-08-03T13:30:35Z,2021-08-03T13:30:35Z,"> I was pondering with the idea of not requiring any id in request url, so that you did not need to first fetch the policyId from the resource itself. You could just give it a thingId, policyId or messageId and it would fetch the policyId internally.

That won't work as the Ditto ""policies"" service/persistence does not track ""backward relations"" and architecturally we don't want it to.

Solution could be simple: Always make ""policyId"" and ""thingId"" the same, then you won't need to look up the ""policyId"" before checking the policy permissions.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C841KIgt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1137,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842ULup,ditto,911260585,1137,NA,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,NA,2021-09-02T06:34:15Z,2021-09-02T06:34:15Z,"Since frontends usually have to check for multiple paths at once to reduce the number of requests per page load the endpoint should accept multiple requests in one. E.g. with a payload like:

```
[
  {
    ""resource"": ""thing:/features/X/properties/Y"",
    ""permissions"": [ ""READ"" ]
  },
  {
    ""resource"": ""thing:/features/Z"",
    ""permissions"": [ ""WRITE"" ]
  }
]
```

And a result payload like:

```
[
  {
    ""resource"": ""thing:/features/X/properties/Y"",
    ""permissions"": [ ""READ"" ],
    ""match"": true
  },
  {
    ""resource"": ""thing:/features/Z"",
    ""permissions"": [ ""READ"" ],
    ""match"": false
  }
]
```

Or simplified:

```
{
  ""thing:/features/X/properties/Y"": true,
  ""thing:/features/Z"": false
}
```

Maybe it's also useful if I can call that permission check action on a thing and ditto then forwards this to the policy check action with the corresponding thingId. That way I don't have to find out the policyId of a thing first.

When retrieving a thing or feature one could also supply a path parameter to request deviating permissions so if I GET a feature and I'm interested if there are properties on that feature I can't READ or WRITE then I'd like to know that. Similar to the `extraFields` parameter. Actually maybe only if I can't write, because if I can't read then I don't get it returned anyway.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842ULup/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1137,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85sjOoh,ditto,1821174305,1137,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-11-21T15:42:52Z,2023-11-21T15:42:52Z,"Thinking about this feature request again ..
* a user might not have the permission to even READ the ""policyId"" of a thing
* but still, a UI would need to query Ditto which ""permissions"" a provided login/JWT has for a specific thing
* so, maybe (thinking out loud) this would have to be an endpoint which is neither ""thing"" nor ""policy"" related - similar to the [whoami](https://eclipse.dev/ditto/http-api-doc.html#/Policies/get_api_2_whoami) endpoint

Idea (building on input provided by @w4tsn and @vhdirk):
```
POST /api/2/checkPermissions
```
Payload:
```json
[
  {
    ""resource"": ""thing:/features/lamp/properties/on"",
    ""entityId"": ""org.eclipse.ditto:some-thing-1"",
    ""hasPermissions"": [ ""READ"" ]
  },
  {
    ""resource"": ""message:/features/lamp/inbox/toggle"",
    ""entityId"": ""org.eclipse.ditto:some-thing-1"",
    ""hasPermissions"": [ ""WRITE"" ]
  },
  {
    ""resource"": ""policy:/"",
    ""entityId"": ""org.eclipse.ditto:some-policy-1"",
    ""hasPermissions"": [ ""READ"", ""WRITE"" ]
  }
]
```
The response payload would either just be:
```json
[
  true,
  true,
  false
]
```
Or it would include the whole ""input"" (maybe optionally with a ""verbose"" flag).

And an alternative to that (as JsonArrays are often problematic to handle, using indices, etc.):
```json
{
  ""lamp_reader"": {
    ""resource"": ""thing:/features/lamp/properties/on"",
    ""entityId"": ""org.eclipse.ditto:some-thing-1"",
    ""hasPermissions"": [ ""READ"" ]
  },
  ""lamp_toggler"": {
    ""resource"": ""message:/features/lamp/inbox/toggle"",
    ""entityId"": ""org.eclipse.ditto:some-thing-1"",
    ""hasPermissions"": [ ""WRITE"" ]
  },
  ""policy_admin"": {
    ""resource"": ""policy:/"",
    ""entityId"": ""org.eclipse.ditto:some-policy-1"",
    ""hasPermissions"": [ ""READ"", ""WRITE"" ]
  }
}
```
Which could (by default) just return a response like:
```json
{
  ""lamp_reader"": true,
  ""lamp_toggler"": true,
  ""policy_admin"": false
}
```
Or it would include the whole ""input"" (maybe optionally with a ""verbose"" flag).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85sjOoh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1137,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85sjUYj,ditto,1821197859,1137,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-11-21T15:56:24Z,2023-11-21T15:56:24Z,"Ideas:
* optional ""verbose"" mode, responding with requested ""input"" on ""resources"": `POST /api/2/checkPermissions?verbose=true`
* `""entityId""` could also be provided via the HTTP path or query params .. to reduce payload for large permission check requests: `POST /api/2/checkPermissions?entityId=<entityId>`","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85sjUYj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1137,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86O3GfM,ditto,2396809164,1137,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-10-07T12:35:52Z,2024-10-07T12:35:52Z,@hu-ahmed started to work on this ..,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86O3GfM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1146,https://api.github.com/repos/eclipse-ditto/ditto/issues/1146,ditto,973612016,1146,Metadata cannot be set on sub-resources via HTTP,yufei-cai,25641316,Yufei Cai,yufei.cai@bosch.io,CLOSED,2021-08-18T12:27:55Z,2022-08-15T07:06:02Z,"When modifying e. g. a feature property via HTTP, the header ""put-metadata"" has no effect and does not modify the thing's metadata.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1146/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1149,https://api.github.com/repos/eclipse-ditto/ditto/issues/1149,ditto,975439195,1149,Any suggestion to reduce the connectivity memory usage?,aaron0609,49503795,,,CLOSED,2021-08-20T09:33:23Z,2021-09-03T11:59:41Z,"I'm now using ditto 2.0.1 which deployed in K8s, with more than 200 devices connected to ditto via hono MQTT adaptor.
Recently I found that the connectivity run out of the memory every 4-6 hours.
I allocated 1GB ram to connectivity deployment.

I would like to know which kind of operations will increase the connectivity memory usage and how can we avoid it?
(I have a script which enable & dump the connection logs every 10s, not sure if that's related to the memory consuming)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1149/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1149,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C8412zo-,ditto,903559742,1149,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-08-23T08:36:47Z,2021-08-23T08:36:47Z,"@aaron0609 you thing 1GB of ram is much?
We use 8GB for each connectivity instance and have multiple instances of the connectivity service running.

The ""connection logs"" feature is however quite memory hungry, so you might need more memory when using this.
Please however be aware that the ""connection logs"" are mainly intended for development purposes and that there are no guarantees that log-statements are 100% available and kept.

When you need a reliable logging I suggest to rely on the Ditto service logs: https://www.eclipse.org/ditto/installation-operating.html
So either grepping them from STDOUT or pushing them into a logstash/elasticsearch.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C8412zo-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1155,https://api.github.com/repos/eclipse-ditto/ditto/issues/1155,ditto,979103854,1155,How to relieve cpu usage of gateway service ? ,nisus91,13584173,,,CLOSED,2021-08-25T12:44:21Z,2021-10-04T07:07:54Z,"How to relieve cpu usage of gateway service ? 

The number of things are about 2200. And they are updated every 30seconds.
My Ditto's status is as follows.
Only the gateway service's usage exceeds 200. 
For reference, the number of CPU core is 32 and the size of RAM is 64G.

CONTAINER ID     |   NAME      |            CPU %      |         MEM USAGE / LIMIT    |  MEM %              
64b2fb938b92     |    root_nginx_1      |      8.26%          |      3.703MiB / 62.76GiB   |  0.01%   
b3486fff221b       |   root_gateway_1    |      **205.24**%    |         603.2MiB / 1GiB   |     58.91%
ed688fb24bd8     |     root_connectivity_1 |    6.75%          |      368.4MiB / 1GiB       |  35.97%
338f4e0101f3      |    root_things-search_1  |  78.18%        |       754.7MiB / 1GiB      |   73.70%
75016413785f      |    root_concierge_1     |   56.17%        |       584.8MiB / 1GiB       |  57.11%
bb5c7a5cb4be     |     root_things_1      |    88.12%         |      447.1MiB / 1GiB       |  43.66%
403156e6c836      |    root_policies_1    |     6.25%        |        403.3MiB / 1GiB       |  39.38%    
580ac4a38415      |    root_mongodb_1   |       14.34%   |            13.4GiB / 62.76GiB  |   21.35%
a8fa0bc03365      |    root_swagger-ui_1   |    0.00%     |           1.477MiB / 62.76GiB  |   0.00%       ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1155/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1155,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C841-64u,ditto,905686574,1155,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-08-25T16:25:31Z,2021-08-25T16:25:31Z,"That heavily depends on what you are doing with the gateway.
Do the devices send the updates via HTTP?
Do you use websocket or SSE connections? How many?
How do you authenticate HTTP requests? ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C841-64u/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1155,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842AN34,ditto,906026488,1155,NA,nisus91,13584173,,,NA,2021-08-26T02:27:32Z,2021-08-26T02:27:32Z,"Thanks for reply.
Yes, 
All devices are sending the updates via HTTP. 
I 'm using 3~5 web socket connections for receiving events.
Authentication for HTTP requests uses the basic auth provided by Ditto.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842AN34/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1155,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842Dz3e,ditto,906968542,1155,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-08-27T06:50:20Z,2021-08-27T06:50:20Z,"I think that this kind of CPU usage is then to expect: All incoming and outgoing traffic is done via a single gateway instance which needs to serialize and deserialize all messages at the HTTP level, at WebSocket and internal cluster communication.

What you could try is to increase the available memory to give the Java GarbageCollector more resources in order to not do too much GC.

One other point I have to mention: The HTTP endpoint of Ditto's gateway is not intended to directly connect thousands of devices but to provide APIs for web apps and mobile apps.
For connection a high amount of devices, a device connectivity layer is highly suggested, e.g. a MQTT broker or Eclipse Hono which also provides an HTTP endpoint for connecting devices.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842Dz3e/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1155,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842EFUn,ditto,907040039,1155,NA,nisus91,13584173,,,NA,2021-08-27T08:51:23Z,2021-08-27T08:51:23Z,"Thanks for your advice.
I'll try to use MQTT broker in front of Ditto.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842EFUn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1155,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842tRtw,ditto,917838704,1155,NA,nisus91,13584173,,,NA,2021-09-13T04:50:50Z,2021-09-13T04:50:50Z,"I've changed the connection method between devices and Ditto as Mr. Jaeckle recommeded.
I've used MQTT broker, mosquitto, in front of my Ditto.
And I made a ""create connection for mqtt"".
```
{
	""targetActorSelection"": ""/system/sharding/connection"",
	""headers"": {
		""aggregate"": false
	},
	""piggybackCommand"": {
		""type"": ""connectivity.commands:createConnection"",
		""connection"": {
			""id"": ""mqtt-connection-carpediem6"",
			""connectionType"": ""mqtt"",
			""connectionStatus"": ""open"",
			""failoverEnabled"": true,
			""uri"": ""tcp://xxxxxx"",
			""sources"": [{
				""addresses"": [""ditto""],
				""authorizationContext"": [""pre-authenticated:mqtt-connection""],
				""consumerCount"": 1,
				""qos"": 0,
				""filters"": []
			}],
			""mappingContext"": {
				""mappingEngine"": ""JavaScript"",
				 ...
			}
		}
	}
}
```

As a result, the CPU usage of the connectivity service increased to more than 150%.
And a few hours later, the connectivity service has been down.
The log of the connectivity service are below.

> 552877 ^[[36mconnectivity_1   |^[[0m 2021-09-13 14:18:59,106 INFO  [2b32c840-7f6b-475b-a3e1-184b09fe3cf4] o.e.d.c.a.a.ConciergeForwarderActor akka://ditto-cluster/user/connectivityRoot/conciergeForwarder - Forwarding signal with ID <car        pediem.shindo.d102.h1301:CCMce0618> and type <things.commands:modifyThing> to concierge enforcer
 552878 ^[[36mconnectivity_1   |^[[0m 2021-09-13 14:18:59,107 INFO  [2b32c840-7f6b-475b-a3e1-184b09fe3cf4] o.e.d.i.m.a.AcknowledgementAggregatorActor akka://ditto-cluster/system/sharding/connection/18/mqtt-connection-carpediem6/pa/$a/c1/        inboundDispatching/ackr4378e-2b32c840-7f6b-475b-a3e1-184b09fe3cf4 - Starting to wait for all requested acknowledgements <[twin-persisted]> for a maximum duration of <PT1M5S>.
 552879 ^[[36mconnectivity_1   |^[[0m 2021-09-13 14:18:59,107 INFO  [19bb89d6-cc88-4f88-b271-59718c6271ce] o.e.d.c.a.a.ConciergeForwarderActor akka://ditto-cluster/user/connectivityRoot/conciergeForwarder - Forwarding signal with ID <car        pediem.shindo.d102.h1301:CCMce081f> and type <things.commands:modifyThing> to concierge enforcer
 552880 ^[[36mconnectivity_1   |^[[0m 2021-09-13 14:18:59,107 INFO  [19bb89d6-cc88-4f88-b271-59718c6271ce] o.e.d.i.m.a.AcknowledgementAggregatorActor akka://ditto-cluster/system/sharding/connection/18/mqtt-connection-carpediem6/pa/$a/c1/        inboundDispatching/ackr4378f-19bb89d6-cc88-4f88-b271-59718c6271ce - Starting to wait for all requested acknowledgements <[twin-persisted]> for a maximum duration of <PT1M5S>.
 552881 ^[[36mconnectivity_1   |^[[0m 2021-09-13 14:18:59,108 INFO  [18651032-c674-43b0-9fe4-3f71643030c3] o.e.d.i.m.a.AcknowledgementAggregatorActor akka://ditto-cluster/system/sharding/connection/18/mqtt-connection-carpediem6/pa/$a/c1/        inboundDispatching/ackr43790-18651032-c674-43b0-9fe4-3f71643030c3 - Starting to wait for all requested acknowledgements <[twin-persisted]> for a maximum duration of <PT1M5S>.
 552882 ^[[36mconnectivity_1   |^[[0m 2021-09-13 14:18:59,108 INFO  [18651032-c674-43b0-9fe4-3f71643030c3] o.e.d.c.a.a.ConciergeForwarderActor akka://ditto-cluster/user/connectivityRoot/conciergeForwarder - Forwarding signal with ID <car        pediem.shindo.d102.h1301:CCMce0848> and type <things.commands:modifyThing> to concierge enforcer
 552883 ^[[36mconnectivity_1   |^[[0m 2021-09-13 14:18:59,113 INFO  [50d1c594-e256-40e2-8a2f-d6113839e690] o.e.d.c.a.a.ConciergeForwarderActor akka://ditto-cluster/user/connectivityRoot/conciergeForwarder - Forwarding signal with ID <car        pediem.shindo.d102.h1301:CCMce083d> and type <things.commands:modifyThing> to concierge enforcer
 552884 ^[[36mconnectivity_1   |^[[0m 2021-09-13 14:18:59,113 INFO  [50d1c594-e256-40e2-8a2f-d6113839e690] o.e.d.i.m.a.AcknowledgementAggregatorActor akka://ditto-cluster/system/sharding/connection/18/mqtt-connection-carpediem6/pa/$a/c1/        inboundDispatching/ackr43791-50d1c594-e256-40e2-8a2f-d6113839e690 - Starting to wait for all requested acknowledgements <[twin-persisted]> for a maximum duration of <PT1M5S>.
 552885 ^[[36mconnectivity_1   |^[[0m 2021-09-13 14:18:59,115 INFO  [3f7cec9b-199c-4350-8f20-70cb19f478d0] o.e.d.c.a.a.ConciergeForwarderActor akka://ditto-cluster/user/connectivityRoot/conciergeForwarder - Forwarding signal with ID <car        pediem.shindo.d102.h1211:SDMe8e82f> and type <things.commands:modifyThing> to concierge enforcer
 552886 ^[[36mconnectivity_1   |^[[0m 2021-09-13 14:18:59,115 INFO  [3f7cec9b-199c-4350-8f20-70cb19f478d0] o.e.d.i.m.a.AcknowledgementAggregatorActor akka://ditto-cluster/system/sharding/connection/18/mqtt-connection-carpediem6/pa/$a/c1/        inboundDispatching/ackr43792-3f7cec9b-199c-4350-8f20-70cb19f478d0 - Starting to wait for all requested acknowledgements <[twin-persisted]> for a maximum duration of <PT1M5S>.
 552887 ^[[36mconnectivity_1   |^[[0m 2021-09-13 14:18:59,129 INFO  [9233c494-7fdf-4523-b6ec-6fba0b059514] o.e.d.i.m.a.AcknowledgementAggregatorActor akka://ditto-cluster/system/sharding/connection/18/mqtt-connection-carpediem6/pa/$a/c1/        inboundDispatching/ackr43793-9233c494-7fdf-4523-b6ec-6fba0b059514 - Starting to wait for all requested acknowledgements <[twin-persisted]> for a maximum duration of <PT1M5S>.
 552888 ^[[36mconnectivity_1   |^[[0m 2021-09-13 14:18:59,129 INFO  [9233c494-7fdf-4523-b6ec-6fba0b059514] o.e.d.c.a.a.ConciergeForwarderActor akka://ditto-cluster/user/connectivityRoot/conciergeForwarder - Forwarding signal with ID <car        pediem.shindo.d102.h1301:STM148871> and type <things.commands:modifyThing> to concierge enforcer
 552889 ^[[36mconnectivity_1   |^[[0m 14:59:09,962 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - debug attribute not set
 552890 ^[[36mconnectivity_1   |^[[0m 14:59:09,963 |-INFO in ch.qos.logback.core.joran.action.StatusListenerAction - Added status listener of type [ch.qos.logback.core.status.OnConsoleStatusListener]
 552891 ^[[36mconnectivity_1   |^[[0m 14:59:09,988 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
 552892 ^[[36mconnectivity_1   |^[[0m 14:59:09,993 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [STDOUT]
 552893 ^[[36mconnectivity_1   |^[[0m 14:59:09,997 |-INFO in ch.qos.logback.core.joran.action.NestedComplexPropertyIA - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property
 552894 ^[[36mconnectivity_1   |^[[0m 14:59:10,017 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
 552895 ^[[36mconnectivity_1   |^[[0m 14:59:10,017 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [STDERR]
 552896 ^[[36mconnectivity_1   |^[[0m 14:59:10,017 |-INFO in ch.qos.logback.core.joran.action.NestedComplexPropertyIA - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property
 552897 ^[[36mconnectivity_1   |^[[0m 14:59:10,100 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.mongodb.driver] to WARN
 552898 ^[[36mconnectivity_1   |^[[0m 14:59:10,100 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [akka.management.cluster.bootstrap.contactpoint.HttpClusterBootstrapRoutes] to WARN
 552899 ^[[36mconnectivity_1   |^[[0m 14:59:10,100 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [akka.management.cluster.bootstrap.internal.BootstrapCoordinator] to WARN
 552900 ^[[36mconnectivity_1   |^[[0m 14:59:10,100 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.apache.kafka] to WARN
 552901 ^[[36mconnectivity_1   |^[[0m 14:59:10,100 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.eclipse.ditto] to INFO
 552902 ^[[36mconnectivity_1   |^[[0m 14:59:10,100 |-INFO in ch.qos.logback.classic.joran.action.RootLoggerAction - Setting level of ROOT logger to INFO

The connectivity service has been down at 2021-09-13 14:18:59.
I  restarted the service at  2021-09-13 14:59:09 (line number 552889)

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842tRtw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1155,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842tSAE,ditto,917839876,1155,NA,nisus91,13584173,,,NA,2021-09-13T04:54:33Z,2021-09-13T04:54:33Z,I wonder if there is any other way.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842tSAE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1155,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842tYfz,ditto,917866483,1155,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-09-13T06:01:32Z,2021-09-13T06:01:32Z,"@nisus91 so what would be your expectation?
100% CPU usage just means that the process uses 1 CPU Core (from which you apparently have 32).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842tYfz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1155,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842tcqR,ditto,917883537,1155,NA,nisus91,13584173,,,NA,2021-09-13T06:33:25Z,2021-09-13T06:33:25Z,"I want  the high stability of Ditto.
The CPU usage of the connectivity service increased to more than 150%.
And a few hours later, the connectivity service has been down.
High CPU usage causes the system to crash.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842tcqR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1155,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842tdpJ,ditto,917887561,1155,NA,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,NA,2021-09-13T06:41:56Z,2021-09-13T06:41:56Z,"Regarding the logs you shared I don't see any error. Where did you get them from? Directly from the container?
I would expect at least some exception in the log before the container crashes. What makes you assume that the high CPU usage is the reason?

Regarding higher load: Is there a reason why you don't want to scale connectivity to multiple instances and also increase the clientCount of your MQTT connection? This is how to scale horizontally ditto if you think this could help.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842tdpJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1155,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842tlWQ,ditto,917919120,1155,NA,nisus91,13584173,,,NA,2021-09-13T07:30:46Z,2021-09-13T07:30:46Z,"
> Regarding the logs you shared I don't see any error. Where did you get them from? Directly from the container?
> I would expect at least some exception in the log before the container crashes. What makes you assume that the high CPU usage is the reason?

I got the log file from docker container with (""docker-compose logs connectivity > log_file "").
As you said, I tried to find error message from the log file. 
But I could't find the related error message. 
However, it is clear that the connectivity service was disappeared in docker service ( I checked it with ""docker ps"").
So I started to suspect the high load was the cause of the problem.

> 
> Regarding higher load: Is there a reason why you don't want to scale connectivity to multiple instances and also increase the clientCount of your MQTT connection? This is how to scale horizontally ditto if you think this could help.

Can you tell me how to use multiple instance and increase the clientCount of the MQTT?

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842tlWQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1155,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842toLb,ditto,917930715,1155,NA,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,NA,2021-09-13T07:48:40Z,2021-09-13T07:48:40Z,"> Can you tell me how to use multiple instance and increase the clientCount of the MQTT?

Feel free to check the docker documentation about multiple replicas with docker-compose: https://docs.docker.com/compose/compose-file/compose-file-v3/

Regarding the clientCount see our documentation for the connection model: https://www.eclipse.org/ditto/basic-connections.html#connection-model

But I would suggest to dig into the reason for the actual failure. Unfortunately without having some error logs, we can't help you with this.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842toLb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1158,https://api.github.com/repos/eclipse-ditto/ditto/issues/1158,ditto,982551000,1158,Nats.io integration,mvniekerk,1570687,Michael van Niekerk,,OPEN,2021-08-30T08:50:49Z,2022-09-23T06:24:33Z,"Hello
I'm endeavoring to do www.nats.io integration this coming week.  ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1158/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1158,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842Iw3L,ditto,908266955,1158,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-08-30T11:32:28Z,2021-08-30T11:32:28Z,"Hi @mvniekerk 
Sounds interesting. Does that mean that you plan on working on a new [Ditto managed connection type](https://www.eclipse.org/ditto/basic-connections.html#connection-types)?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842Iw3L/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1158,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842IxJG,ditto,908268102,1158,NA,mvniekerk,1570687,Michael van Niekerk,,NA,2021-08-30T11:34:35Z,2021-08-30T11:34:35Z,@Thjaeckle correct,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842IxJG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1158,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C8420eh6,ditto,919726202,1158,NA,LLLLimbo,31607003,LLLLimbo,,NA,2021-09-15T06:05:05Z,2021-09-15T06:05:05Z,cool,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C8420eh6/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1167,https://api.github.com/repos/eclipse-ditto/ditto/issues/1167,ditto,989746507,1167,how to fetch partial data from external sources,dberardo,10696700,,,CLOSED,2021-09-07T08:49:00Z,2021-09-08T12:40:13Z,"Hi community,

i have came across the Ditto project and it sounds quite promising. 

Looking at the documentation i could figure out that Ditto's underlying persistency layer uses MongoDB. In our use case i have quite a lot of data coming from the field in form of ""timeseries"" data. To store this sensor data there are other database technologies that we use currently that are optimized for storage and query performance of such kind of timeseries data. 

Also, in our digital twin configuration we save some other twin-specific meta-data, such as pictures, multimedia files, compressed python pickle model files, etc. that do fit much better on a AWS S3 based object storage system than in MongoDB.

My question here is, is it possible to define some attributes (Features) of a Thing in Ditto, so that the data is actually retrieved by other sources, so that when the user queries property x of thing T, then T.x is actually starting a download stream on as ""s3://"" endpoints or even running a SQL query on another DB and collecting the results?

And more in particular: does Ditto support JDBC connectors to perform such kind of queries? This would enable Ditto to connect for example to a Presto backend and thus include support to much more data sources.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1167/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1167,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842izHo,ditto,915091944,1167,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-09-08T09:51:13Z,2021-09-08T09:51:13Z,"Hi @dberardo 
That (serving files from S3) sounds similar to what is described here: https://www.eclipse.org/ditto/advanced-data-by-pass.html
Did you have a look on that?

You can e.g. send ""live messages"" via an HTTP endpoint in Ditto `POST /api/2/things/my:thing-1/inbox/messages/my-super-query` which can be either answered by one of your services or e.g. an AWS Lambda function - resulting in a by Ditto correlated HTTP response.
For an S3 integration that would make at most sense in my opinion. 

You could also try to configure a Ditto managed [HTTP connection](https://www.eclipse.org/ditto/connectivity-protocol-bindings-http.html) which does a ""GET"" request to a S3 bucket reacting on ""live messages"". That is however quite advanced and will require a good understanding of Ditto connections.

Ditto itself does not support connecting via JDBC to other databases and retrieving some data there.
That would also be possible with an own microservice processing ""live messages"" responding e.g. with data fetched from a JDBC query.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842izHo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1167,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842i6n2,ditto,915122678,1167,NA,dberardo-com,65530457,,,NA,2021-09-08T10:38:53Z,2021-09-08T10:38:53Z,"thanks for the quick reply @thjaeckle 

i did indeed have a look at the page mentioned above yesterday night, and it does represent a workaround for REST based communication (which is OK sometimes, but we also use GraphQL in our use case, which does not accept redirects).

The workaround explained in the doc works for GET requests, but would it be possible to write/update values using the same method? Or is it possible for Ditto to forward the write request to the underlying microservice and ""wait"" for a commit/confirmation that the data has been properly edited before sending a 200/201 response to the client?

As for the S3 integration, i will have a look, especially because we prefer using MinIO as open source counterpart to S3 and thus have to see how lambdas would work there.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842i6n2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1167,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842i_43,ditto,915144247,1167,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-09-08T11:13:25Z,2021-09-08T11:13:25Z,"> i did indeed have a look at the page mentioned above yesterday night, and it does represent a workaround for REST based communication (which is OK sometimes, but we also use GraphQL in our use case, which does not accept redirects).

Well, Ditto does provide a REST API .. so you won't be able to invoke a GraphQL API on Ditto's HTTP endpoints ;)

> The workaround explained in the doc works for GET requests, but would it be possible to write/update values using the same method? Or is it possible for Ditto to forward the write request to the underlying microservice and ""wait"" for a commit/confirmation that the data has been properly edited before sending a 200/201 response to the client?

Yes, that's exactly what it can do/does. The data you transmit e.g. in the `POST` request of the message is then available for the subscriber of that message, which can be:
* a WebSocket session
* a Ditto managed connection (e.g. calling a foreign HTTP endpoint providing the data as well as ""POST"" payload - using the response and the status code of the foreign HTTP endpoint as status and payload of the Ditto HTTP request)

> As for the S3 integration, i will have a look, especially because we prefer using MinIO as open source counterpart to S3 and thus have to see how lambdas would work there.

Using Lambda is not a requitement, you can also directly access the S3 bucket via HTTP I suppose.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842i_43/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1167,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842jERS,ditto,915162194,1167,NA,dberardo-com,65530457,,,NA,2021-09-08T11:43:24Z,2021-09-08T11:43:24Z,"ok, so for the time being this issue could be closed i guess. I am currently still evaluating how Ditto could fit in our current use case and will try to make experiments for such kind of integrations later on.

I will probably post on this same issue if that is possible, as soon as i have updates. For the time being, if you can point me to any other piece of documentation / blog article, or similar, that could help me get a better understanding on how to integrate Ditto in existing Machine Learning / Big Data systems and how does it fit in a Digital Twin environment, that would be beneficial.

So far i have just had a look at the documentation and webinars online, but i could only find very specific technical details on the technology in there, not really on the way it integrates in existing architectures, or related use cases.

Vielen Dank aus Berlin","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842jERS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1170,https://api.github.com/repos/eclipse-ditto/ditto/issues/1170,ditto,992394892,1170,Provide a 'fn:replace' method,ctron,202474,Jens Reimann,ctron@dentrassi.de,CLOSED,2021-09-09T16:06:57Z,2021-09-14T11:25:38Z,"There should be an out of the box function for calling `String::replace(String,String)` using `fn:replace(""from"",""to"")`.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1170/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1170,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842pBTo,ditto,916722920,1170,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-09-10T08:19:01Z,2021-09-10T08:19:01Z,"Sounds useful, yes 👍 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842pBTo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1170,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842pC3d,ditto,916729309,1170,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-09-10T08:28:52Z,2021-09-10T08:28:52Z,"Implementation hint: get inspiration e.g. from 
* [PipelineFunctionSubstringBefore](https://github.com/eclipse/ditto/blob/master/internal/models/placeholders/src/main/java/org/eclipse/ditto/internal/models/placeholders/PipelineFunctionSubstringBefore.java)
* [PipelineFunctionSubstringBeforeTest](https://github.com/eclipse/ditto/blob/master/internal/models/placeholders/src/test/java/org/eclipse/ditto/internal/models/placeholders/PipelineFunctionSubstringBeforeTest.java)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842pC3d/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1170,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842x8BB,ditto,919060545,1170,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-09-14T11:25:33Z,2021-09-14T11:25:33Z,Closed via PR #1173 ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C842x8BB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1177,https://api.github.com/repos/eclipse-ditto/ditto/issues/1177,ditto,997175437,1177,Additionally allow to place an URL inside a Thing / Feature definition,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2021-09-15T14:48:00Z,2021-09-22T05:56:27Z,"Currently only the following format is allowed: `""<namespace>:<name>:<version>""`

Allow to use a http / https URL in addition to the existing format. 

This is a preparation for putting links to WoT ""Thing Models"" in Ditto definitions as discussed in #1163 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1177/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1177,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84215az,ditto,920098483,1177,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-09-15T14:59:35Z,2021-09-15T14:59:35Z,We should get this into Ditto 2.1.0 to have it usable in an official release (which we don't do that often) - should not be difficult.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84215az/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1186,https://api.github.com/repos/eclipse-ditto/ditto/issues/1186,ditto,1002619103,1186,Add SSE (ServerSentEvent) API for subscribing to messages,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2021-09-21T14:38:43Z,2022-03-03T13:30:05Z,"Currently, messages can be sent using Ditto's HTTP API using the HTTP resource 
```
POST /api/2/things/io.eclipseprojects.ditto:my-motion-detector-1/features/motion-detection/outbox/messages/motion-detected`
```

However, messages may only be received using:
* WebSocket channel
* a managed Connection (e.g. publishing messages via Kafka, AMQP, HTTP, MQTT, etc.)

It would be very convenient - and could also be specified in scope of a WoT (Web of Things) Thing Descriptions - to subscribe for messages via SSE.

For example, opening a SSE channel (with `Content-Type: text/event-stream`) on this HTTP resource would subscribe to all messages with subject `motion-detected` emitted via the `outbox` (sent *from* the device):
```
GET /api/2/things/io.eclipseprojects.ditto:my-motion-detector-1/features/motion-detection/outbox/messages/motion-detected`
```

Whenever a ""motion-detected"" message would be emitted, the established SSE channel would be notified receiving the message's payload.
Put in SSE's `event` field the message name, e.g. `motion-detected`.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1186/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1199,https://api.github.com/repos/eclipse-ditto/ditto/issues/1199,ditto,1011060948,1199,Basic auth in (mqtt) connection requires you to encode the username and password twice,BobClaerhout,3315222,Bob Claerhout,,CLOSED,2021-09-29T14:48:17Z,2022-09-02T06:15:26Z,"We upgraded from ditto 1.1.0 to 2.1.0 (big update I know) and somewhere in between the URI format for connections changed.
Say you're using following configuration options:
- host: my-host
- port: 8883
- username: ""username""
- password: ""my password with spaces""
Previously when you configured a URI you had to urlEncode the username and password:
username:my%20password%20with%20spaces@my-host:8883

Right now, you have to configure the URI with double urlEncoded username and password:
username:my%2520password%2520with%2520spaces@my-host:8883

thanks @thjaeckle  for you support on this!

If you know this is required, you can do this but this is not documented somewhere.
Besides the missing documentation this feels a bit weird and looks a bit ugly.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1199/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1199,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C843pqOV,ditto,933667733,1199,NA,marcluque,33261455,Marc Luqué,marc.luque@outlook.com,NA,2021-10-04T16:50:15Z,2021-10-04T16:50:15Z,"Hey there, I'd like to work on this, if I may.
Where would I look to get started with this?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C843pqOV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1199,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C843rTb_,ditto,934098687,1199,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-10-05T06:13:06Z,2021-10-05T06:13:06Z,"Hi @marcluque 
I would start looking at `org.eclipse.ditto.connectivity.service.messaging.mqtt.hivemq.AbstractHiveMqttClientFactory.configureSimpleAuth()` - that's where the password is passed into the used HiveMQ MQTT client.
Maybe HiveMQ MQTT client needs the password URL encoded when there are spaces in it.

Could however also be that the password is URL decoded before it reaches this place.

Another suspicious place is `org.eclipse.ditto.connectivity.model.ImmutableConnection$ConnectionUri.tryDecodeUriComponent(String)` where the password is URL decoded when being read from the URI string.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C843rTb_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1199,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C843rXX8,ditto,934114812,1199,NA,BobClaerhout,3315222,Bob Claerhout,,NA,2021-10-05T06:44:56Z,2021-10-05T06:44:56Z,"So I changed our business application to double url encode all usernames and password for connections. However, I noticed this is not required for http connections...
I'm going for the assumption that this is only required for mqtt connections now.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C843rXX8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1199,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85HqMLj,ditto,1202242275,1199,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-08-02T09:26:24Z,2022-08-02T09:26:24Z,"This issue should be fixed with #1407 and #1424
Can you confirm that @Yannic92 ?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85HqMLj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1199,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Jnab9,ditto,1235068669,1199,NA,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,NA,2022-09-02T05:02:12Z,2022-09-02T05:02:12Z,"Yes, passwords should now work with single encoding everywhere.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Jnab9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1201,https://api.github.com/repos/eclipse-ditto/ditto/issues/1201,ditto,1015440007,1201,oidc authentication fails with public key not found,rguikers,363714,Rob Guikers,,CLOSED,2021-10-04T17:29:01Z,2021-10-05T15:41:37Z,"Installed ditto through the Helm chart version 2.1.0
Configured the gateway with the following oauth settings
```
global:
  jwtOnly: true
gateway:
  enableDummyAuth: false
  systemProps:
    - ""-Dditto.gateway.authentication.oauth.protocol=https""
    - ""-Dditto.gateway.authentication.oauth.openid-connect-issuers.myprovider.isuer=xxxxx.eu.auth0.com/""
```

As you can see, i'm using Auth0 as identity provider. The identity provider is working good, i'm testing with Insomnia, and getting a valid accesstoken

After calling an API i get the following error back as result from the call : 
```
{
  ""status"": 401,
  ""error"": ""gateway:authentication.failed"",
  ""message"": ""The JWT could not be verified."",
  ""description"": ""Public Key of issuer <https://xxxxx.eu.auth0.com/> with key ID <8oypCSjgldqkNVjDL2xZB> not found!""
}
```

the result in the gateway log : 
```
2021-10-04 19:17:55,253 WARN  [f1f62ce2-8379-40bc-aa5e-98e5fee0db9e] o.e.d.g.s.e.d.RequestTimeoutHandlingDirective  - Encountered slow HTTP request which took over <1000> ms: <1075> ms!
2021-10-04 19:18:11,985 INFO  [674d7fd5-64d0-4081-9512-f72ebebf167a] o.e.d.g.s.s.a.j.JwtAuthenticationProvider  - Completed JWT authentication successfully.
2021-10-04 19:18:11,994 INFO  [674d7fd5-64d0-4081-9512-f72ebebf167a] o.e.d.g.s.e.r.RootRouteExceptionHandler  - <GatewayAuthenticationFailedException> occurred in gateway root route: <org.eclipse.ditto.base.model.signals.commands.exceptions.GatewayAuthenticationFailedException [message='The JWT could not be verified.', errorCode=gateway:authentication.failed, httpStatus=HttpStatus [code=401, category=CLIENT_ERROR], description='Public Key of issuer <https://xxxxx.eu.auth0.com/> with key ID <8oypCSjgldqkNVjDL2xZB> not found!', href=null, dittoHeaders=ImmutableDittoHeaders [{version=2, correlation-id=674d7fd5-64d0-4081-9512-f72ebebf167a}]]>!
2021-10-04 19:18:12,039 INFO  [674d7fd5-64d0-4081-9512-f72ebebf167a] o.e.d.g.s.e.d.RequestResultLoggingDirective  - StatusCode of request GET '/api/2/search/things' was: 401
```
Seems that the gateway is unable to download the public key from the jwks_uri (i guess). but it is there (with the key given in the gateway log).

Tried everything, including debug mode logging, but no result.
I see in the gateway config file an example with Auth0, so i guess this must be working. Any help is appreciated!
Thanks,
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1201/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1201,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C843rUVI,ditto,934102344,1201,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-10-05T06:20:14Z,2021-10-05T06:20:14Z,"Hi @rguikers 

What do the DEBUG logs say? The class [DittoPublicKeyProvider](https://github.com/eclipse/ditto/blob/master/gateway/service/src/main/java/org/eclipse/ditto/gateway/service/security/authentication/jwt/DittoPublicKeyProvider.java) logs DEBUG statements for every step when retrieving and parsing the public key, e.g. this one:
https://github.com/eclipse/ditto/blob/0d3ae1a08af2999a8844b5a85c08ade11c398607/gateway/service/src/main/java/org/eclipse/ditto/gateway/service/security/authentication/jwt/DittoPublicKeyProvider.java#L174

Seems that this indeed fails.
Do you run Ditto in containers? Are those allowed to do an HTTP call to the outside world or do you have any networking policies in place?
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C843rUVI/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1201,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C843rizH,ditto,934161607,1201,NA,rguikers,363714,Rob Guikers,,NA,2021-10-05T07:57:52Z,2021-10-05T07:57:52Z,"@thjaeckle 
The debug logs are not very extensive, hope i'm missing something important that leads to the issue.
When attaching to the container (pod) i can access the url for the auth0 tenant, fi, i can do a wget on the openid-configuration and get the complete json from inside the container.

```
2021-10-05 09:46:41,771 DEBUG [68ad84b4-18d5-4105-83dc-2a432296f3ab] o.e.d.g.s.e.d.CorrelationIdEnsuringDirective  - Created new correlation ID <68ad84b4-18d5-4105-83dc-2a432296f3ab>.
2021-10-05 09:46:41,773 DEBUG [] o.e.d.i.u.t.TraceUriGenerator  - Generated traceUri for '/api/2/search/things': 'TraceInformation{traceUri='/api/2/search/things/x', tags={ditto.request.path=/api/2/search/things/x}}'
2021-10-05 09:46:41,774 DEBUG [68ad84b4-18d5-4105-83dc-2a432296f3ab] o.e.d.g.s.e.d.RequestTimeoutHandlingDirective  - Started mutable timer <StartedKamonTimer [name=roundtrip_http, tags={ditto.request.path=/api/2/search/things/x, ditto.request.method=GET, segment=overall}, onStopHandlers=[org.eclipse.ditto.internal.utils.metrics.instruments.timer.PreparedKamonTimer$$Lambda$2721/0x00000000800eaba0@4d02f6a4], segments={}, startNanoTime=242362535063, startInstant=2021-10-05T07:46:41.898448001Z, stoppedTimer=null]>.
2021-10-05 09:46:41,775 DEBUG [] o.e.d.i.u.t.TraceUriGenerator  - Generated traceUri for '/api/2/search/things': 'TraceInformation{traceUri='/api/2/search/things/x', tags={ditto.request.path=/api/2/search/things/x}}'
2021-10-05 09:46:41,795 DEBUG [] o.e.d.g.s.s.a.j.DittoPublicKeyProvider  - Loading public key with id <8oypCSjgldqkNVjDL2xZB> from issuer <https://xxxxx.eu.auth0.com/>.
2021-10-05 09:46:41,806 DEBUG [68ad84b4-18d5-4105-83dc-2a432296f3ab] o.e.d.g.s.s.a.j.JwtAuthenticationProvider  - The JWT is invalid.
org.eclipse.ditto.base.model.signals.commands.exceptions.GatewayAuthenticationFailedException: Public Key of issuer <https://xxxxx.eu.auth0.com/> with key ID <8oypCSjgldqkWVjDL2xZB> not found!
	at org.eclipse.ditto.base.model.signals.commands.exceptions.GatewayAuthenticationFailedException$Builder.doBuild(GatewayAuthenticationFailedException.java:124)
	at org.eclipse.ditto.base.model.signals.commands.exceptions.GatewayAuthenticationFailedException$Builder.doBuild(GatewayAuthenticationFailedException.java:106)
	at org.eclipse.ditto.base.model.exceptions.DittoRuntimeExceptionBuilder.build(DittoRuntimeExceptionBuilder.java:176)
	at org.eclipse.ditto.gateway.service.security.authentication.jwt.DefaultJwtValidator.lambda$validate$1(DefaultJwtValidator.java:69)
	at org.eclipse.ditto.gateway.service.security.authentication.jwt.DefaultJwtValidator$$Lambda$3111/0x00000000702ac600.get(Unknown Source)
	at java.base/java.util.Optional.orElseGet(Optional.java:369)
	at org.eclipse.ditto.gateway.service.security.authentication.jwt.DefaultJwtValidator.lambda$validate$2(DefaultJwtValidator.java:66)
	at org.eclipse.ditto.gateway.service.security.authentication.jwt.DefaultJwtValidator$$Lambda$3109/0x0000000070179730.apply(Unknown Source)
	at java.base/java.util.concurrent.CompletableFuture.uniApplyNow(CompletableFuture.java:680)
	at java.base/java.util.concurrent.CompletableFuture.uniApplyStage(CompletableFuture.java:658)
	at java.base/java.util.concurrent.CompletableFuture.thenApply(CompletableFuture.java:2094)
	at org.eclipse.ditto.gateway.service.security.authentication.jwt.DefaultJwtValidator.validate(DefaultJwtValidator.java:64)
	at org.eclipse.ditto.gateway.service.security.authentication.jwt.JwtAuthenticationProvider.getAuthenticationResult(JwtAuthenticationProvider.java:135)
	at org.eclipse.ditto.gateway.service.security.authentication.jwt.JwtAuthenticationProvider.tryToAuthenticate(JwtAuthenticationProvider.java:125)
	at org.eclipse.ditto.gateway.service.security.authentication.TimeMeasuringAuthenticationProvider.authenticate(TimeMeasuringAuthenticationProvider.java:66)
	at org.eclipse.ditto.gateway.service.security.authentication.AuthenticationChain$AuthResultAccumulator.andThen(AuthenticationChain.java:190)
	at org.eclipse.ditto.gateway.service.security.authentication.AuthenticationChain.lambda$authenticate$0(AuthenticationChain.java:98)
	at org.eclipse.ditto.gateway.service.security.authentication.AuthenticationChain$$Lambda$3088/0x000000007c0eb1a0.apply(Unknown Source)
	at java.base/java.util.concurrent.CompletableFuture$UniCompose.tryFire(CompletableFuture.java:1072)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:478)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:866)
2021-10-05 09:46:41,809 INFO  [68ad84b4-18d5-4105-83dc-2a432296f3ab] o.e.d.g.s.s.a.j.JwtAuthenticationProvider  - Completed JWT authentication successfully.
2021-10-05 09:46:41,814 DEBUG [68ad84b4-18d5-4105-83dc-2a432296f3ab] o.e.d.g.s.s.a.AuthenticationChain  - Authentication using authentication provider <JwtAuthenticationProvider> to URI <http://dev.localtest.me/api/2/search/things> failed due to GatewayAuthenticationFailedException: The JWT could not be verified.
2021-10-05 09:46:41,819 DEBUG [] o.e.d.g.s.e.d.a.GatewayAuthenticationDirective  - Authentication for URI <http://dev.localtest.me/api/2/search/things> failed. Rethrow DittoRuntimeException.
org.eclipse.ditto.base.model.signals.commands.exceptions.GatewayAuthenticationFailedException: The JWT could not be verified.
	at org.eclipse.ditto.base.model.signals.commands.exceptions.GatewayAuthenticationFailedException$Builder.doBuild(GatewayAuthenticationFailedException.java:124)
	at org.eclipse.ditto.base.model.signals.commands.exceptions.GatewayAuthenticationFailedException$Builder.doBuild(GatewayAuthenticationFailedException.java:106)
	at org.eclipse.ditto.base.model.exceptions.DittoRuntimeExceptionBuilder.build(DittoRuntimeExceptionBuilder.java:176)
	at org.eclipse.ditto.gateway.service.security.authentication.jwt.JwtAuthenticationProvider.buildJwtUnauthorizedException(JwtAuthenticationProvider.java:161)
	at org.eclipse.ditto.gateway.service.security.authentication.jwt.JwtAuthenticationProvider.lambda$getAuthenticationResult$1(JwtAuthenticationProvider.java:141)
	at org.eclipse.ditto.gateway.service.security.authentication.jwt.JwtAuthenticationProvider$$Lambda$3112/0x000000007021d380.apply(Unknown Source)
	at java.base/java.util.concurrent.CompletableFuture.uniComposeStage(CompletableFuture.java:1106)
	at java.base/java.util.concurrent.CompletableFuture.thenCompose(CompletableFuture.java:2235)
	at org.eclipse.ditto.gateway.service.security.authentication.jwt.JwtAuthenticationProvider.getAuthenticationResult(JwtAuthenticationProvider.java:136)
	at org.eclipse.ditto.gateway.service.security.authentication.jwt.JwtAuthenticationProvider.tryToAuthenticate(JwtAuthenticationProvider.java:125)
	at org.eclipse.ditto.gateway.service.security.authentication.TimeMeasuringAuthenticationProvider.authenticate(TimeMeasuringAuthenticationProvider.java:66)
	at org.eclipse.ditto.gateway.service.security.authentication.AuthenticationChain$AuthResultAccumulator.andThen(AuthenticationChain.java:190)
	at org.eclipse.ditto.gateway.service.security.authentication.AuthenticationChain.lambda$authenticate$0(AuthenticationChain.java:98)
	at org.eclipse.ditto.gateway.service.security.authentication.AuthenticationChain$$Lambda$3088/0x000000007c0eb1a0.apply(Unknown Source)
	at java.base/java.util.concurrent.CompletableFuture$UniCompose.tryFire(CompletableFuture.java:1072)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:478)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:866)
Caused by: org.eclipse.ditto.base.model.signals.commands.exceptions.GatewayAuthenticationFailedException: Public Key of issuer <https://xxxxx.auth0.com/> with key ID <8oypCSjgldqkWVjDL2xZB> not found!
	at org.eclipse.ditto.base.model.signals.commands.exceptions.GatewayAuthenticationFailedException$Builder.doBuild(GatewayAuthenticationFailedException.java:124)
	at org.eclipse.ditto.base.model.signals.commands.exceptions.GatewayAuthenticationFailedException$Builder.doBuild(GatewayAuthenticationFailedException.java:106)
	at org.eclipse.ditto.base.model.exceptions.DittoRuntimeExceptionBuilder.build(DittoRuntimeExceptionBuilder.java:176)
	at org.eclipse.ditto.gateway.service.security.authentication.jwt.DefaultJwtValidator.lambda$validate$1(DefaultJwtValidator.java:69)
	at org.eclipse.ditto.gateway.service.security.authentication.jwt.DefaultJwtValidator$$Lambda$3111/0x00000000702ac600.get(Unknown Source)
	at java.base/java.util.Optional.orElseGet(Optional.java:369)
	at org.eclipse.ditto.gateway.service.security.authentication.jwt.DefaultJwtValidator.lambda$validate$2(DefaultJwtValidator.java:66)
	at org.eclipse.ditto.gateway.service.security.authentication.jwt.DefaultJwtValidator$$Lambda$3109/0x0000000070179730.apply(Unknown Source)
	at java.base/java.util.concurrent.CompletableFuture.uniApplyNow(CompletableFuture.java:680)
	at java.base/java.util.concurrent.CompletableFuture.uniApplyStage(CompletableFuture.java:658)
	at java.base/java.util.concurrent.CompletableFuture.thenApply(CompletableFuture.java:2094)
	at org.eclipse.ditto.gateway.service.security.authentication.jwt.DefaultJwtValidator.validate(DefaultJwtValidator.java:64)
	at org.eclipse.ditto.gateway.service.security.authentication.jwt.JwtAuthenticationProvider.getAuthenticationResult(JwtAuthenticationProvider.java:135)
	... 11 common frames omitted
2021-10-05 09:46:41,823 INFO  [68ad84b4-18d5-4105-83dc-2a432296f3ab] o.e.d.g.s.e.r.RootRouteExceptionHandler  - <GatewayAuthenticationFailedException> occurred in gateway root route: <org.eclipse.ditto.base.model.signals.commands.exceptions.GatewayAuthenticationFailedException [message='The JWT could not be verified.', errorCode=gateway:authentication.failed, httpStatus=HttpStatus [code=401, category=CLIENT_ERROR], description='Public Key of issuer <https://xxxxx.auth0.com/> with key ID <8oypCSjgldqkWVjDL2xZB> not found!', href=null, dittoHeaders=ImmutableDittoHeaders [{version=2, correlation-id=68ad84b4-18d5-4105-83dc-2a432296f3ab}]]>!
2021-10-05 09:46:41,832 INFO  [68ad84b4-18d5-4105-83dc-2a432296f3ab] o.e.d.g.s.e.d.RequestResultLoggingDirective  - StatusCode of request GET '/api/2/search/things' was: 401
2021-10-05 09:46:41,832 DEBUG [68ad84b4-18d5-4105-83dc-2a432296f3ab] o.e.d.g.s.e.d.RequestResultLoggingDirective  - Raw request URI was: Raw-Request-URI: /api/2/search/things
2021-10-05 09:46:41,833 DEBUG [68ad84b4-18d5-4105-83dc-2a432296f3ab] o.e.d.g.s.e.d.RequestTimeoutHandlingDirective  - Finished timer <StartedKamonTimer [name=roundtrip_http, tags={ditto.request.path=/api/2/search/things/x, ditto.statusCode=401, ditto.request.method=GET, segment=overall}, onStopHandlers=[org.eclipse.ditto.internal.utils.metrics.instruments.timer.PreparedKamonTimer$$Lambda$2721/0x00000000800eaba0@4d02f6a4], segments={}, startNanoTime=242362535063, startInstant=2021-10-05T07:46:41.898448001Z, stoppedTimer=StoppedKamonTimer [name=roundtrip_http, tags={ditto.request.path=/api/2/search/things/x, ditto.statusCode=401, ditto.request.method=GET, segment=overall}, startNanoTime=242362535063, endNanoTime=242421446934]]> with status <401>.

```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C843rizH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1201,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C843rtlX,ditto,934205783,1201,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-10-05T08:54:53Z,2021-10-05T08:54:53Z,"@rguikers I fear that this could be indeed a bug, as I am missing the mentioned DEBUG log-statement I mentioned above: `Loading public keys from discovery endpoint <...>`.

The most likely possibility is that the exception here is thrown and silently dropped (by the cache loader which invoked the method):
https://github.com/eclipse/ditto/blob/0d3ae1a08af2999a8844b5a85c08ade11c398607/gateway/service/src/main/java/org/eclipse/ditto/gateway/service/security/authentication/jwt/DittoPublicKeyProvider.java#L136

I think that this most likely is related to the Ditto helm chart.
Maybe some quotes are missing around the ""args"", I just rendered the k8s template and got the following output:
```
...
      containers:
        - name: ditto-gateway
          image: docker.io/eclipse/ditto-gateway:2.1.0
          imagePullPolicy: IfNotPresent
          args:
            - ""java""
            - -Dditto.gateway.authentication.oauth.protocol=https
            - -Dditto.gateway.authentication.oauth.openid-connect-issuers.myprovider.isuer=xxxxx.eu.auth0.com/
            - ""-jar""
            - ""/opt/ditto/starter.jar""
          env:
            - name: DITTO_LOGGING_FILE_APPENDER
              value: ""false""
...
```

Will have to check, but I think that the args should be in quotes.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C843rtlX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1201,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C843r06q,ditto,934235818,1201,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-10-05T09:31:19Z,2021-10-05T09:31:19Z,The quotation will be fixed by eclipse/packages#297 - however I am not 100% confident this will fix this issue.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C843r06q/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1201,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C843sGrx,ditto,934308593,1201,NA,rguikers,363714,Rob Guikers,,NA,2021-10-05T11:10:16Z,2021-10-05T11:10:16Z,"@thjaeckle , thanks for this nice find!, i will check with my system with the fix you made..","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C843sGrx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1201,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C843sIwA,ditto,934317056,1201,NA,rguikers,363714,Rob Guikers,,NA,2021-10-05T11:22:17Z,2021-10-05T11:22:17Z,"@thjaeckle 
Sorry to say that this did not fix the issue. In fact, it is possible to use it without quotes (although not as specific ), The resulting command on my side is still as it should be :
```
java -Dditto.gateway.authentication.oauth.protocol=https -Dditto.gateway.authentication.oauth.openid-connect-issuers.myprovider.isuer=xxxxx.eu.auth0.com/ -jar /opt/ditto/starter.jar
```
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C843sIwA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1201,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C843sXdI,ditto,934377288,1201,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-10-05T12:44:54Z,2021-10-05T12:44:54Z,"Then I am out of ideas solving this without debugging, sorry.
The trailing slash at the issuer URL looks a little suspicious to me, but when this also occurs in the JWT, this should work. 

Does Auth0 provide a free plan for evaluation?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C843sXdI/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1201,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C843sfmS,ditto,934410642,1201,NA,rguikers,363714,Rob Guikers,,NA,2021-10-05T13:22:52Z,2021-10-05T13:22:52Z,"Yes, there is a free plan on Auth0 (https://auth0.com/). BTW, i also tried a docker-compose setup, and this leads to the same error.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C843sfmS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1201,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C843suQA,ditto,934470656,1201,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-10-05T14:35:39Z,2021-10-05T14:35:39Z,"@rguikers 
After debugging with your parameters I could reproduce - until I noticed a typo :D
You wrote:
```
-Dditto.gateway.authentication.oauth.openid-connect-issuers.myprovider.isuer
```
Correct would be:
```
-Dditto.gateway.authentication.oauth.openid-connect-issuers.myprovider.issuer
```

Please adjust and provide feedback if that solves your problem :)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C843suQA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1201,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C843s6ua,ditto,934521754,1201,NA,rguikers,363714,Rob Guikers,,NA,2021-10-05T15:37:19Z,2021-10-05T15:37:19Z,"@thjaeckle , Oh man, this is indeed a stupid mistake. Sorry to have wasted your time on this
But to my defense, still strange that the system is still interpreting the url and the log prints the message related to the url :)

```
{
  ""status"": 401,
  ""error"": ""gateway:authentication.failed"",
  ""message"": ""The JWT could not be verified."",
  ""description"": ""Public Key of issuer <https://xxxxx.eu.auth0.com/> with key ID <8oypCSjgldqkNVjDL2xZB> not found!""
}
```

Thanks Thomas!","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C843s6ua/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1201,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C843s7rz,ditto,934525683,1201,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-10-05T15:41:37Z,2021-10-05T15:41:37Z,"the url is extracted from the token, so this is confusing indeed.
Will improve logging at this place.. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C843s7rz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1220,https://api.github.com/repos/eclipse-ditto/ditto/issues/1220,ditto,1040576526,1220,Build Fails at Utils:Akka,ZeeChono,54852475,Zichen Chang,,CLOSED,2021-10-31T20:39:45Z,2021-11-04T00:38:04Z,"Hi! By following the _Building with Apache Maven_(https://www.eclipse.org/ditto/installation-building.html). After `mvn clean install` I get the following error:

[ERROR] Failed to execute goal net.alchim31.maven:scala-maven-plugin:4.4.0:compile (default) on project ditto-internal-utils-akka: Execution default of goal net.alchim31.maven:scala-maven-plugin:4.4.0:compile failed: An API incompatibility was encountered while executing net.alchim31.maven:scala-maven-plugin:4.4.0:compile: java.lang.NoSuchMethodError: org.fusesource.jansi.AnsiConsole.wrapOutputStream(Ljava/io/OutputStream;)Ljava/io/OutputStream;

Can anyone help me?

**My java version:** 
java 11.0.12 2021-07-20 LTS
Java(TM) SE Runtime Environment 18.9 (build 11.0.12+8-LTS-237)
Java HotSpot(TM) 64-Bit Server VM 18.9 (build 11.0.12+8-LTS-237, mixed mode)

**My maven version:**
Apache Maven 3.8.2 (ea98e05a04480131370aa0c110b8c54cf726c06f)
Maven home: C:\Program Files\apache-maven-3.8.2
Java version: 11.0.12, vendor: Oracle Corporation, runtime: C:\Program Files\Java\jdk-11.0.12
Default locale: en_CA, platform encoding: Cp1252
OS name: ""windows 10"", version: ""10.0"", arch: ""amd64"", family: ""windows""
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1220/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1220,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C845D7CO,ditto,957329550,1220,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-11-02T10:54:35Z,2021-11-02T10:54:35Z,"@ZeeChono seems like an issue of the used scala-maven-plugin: https://github.com/davidB/scala-maven-plugin
Maybe in combination with a new JVM - our Jenkins uses 11.0.2 which still works.

Could you try to update the scala-maven-plugin version to the currently latest one ""4.5.4"" and see if this fixes the build problem?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C845D7CO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1220,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C845D76g,ditto,957333152,1220,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-11-02T10:59:58Z,2021-11-02T10:59:58Z,"You could also try to disable the ""incremental compile"" mode: https://davidb.github.io/scala-maven-plugin/example_incremental.html
By setting `recompileMode` to `all` ..","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C845D76g/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1220,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C845IuWY,ditto,958588312,1220,NA,ZeeChono,54852475,Zichen Chang,,NA,2021-11-03T01:31:47Z,2021-11-03T01:31:47Z,"@thjaeckle Thanks for helping me! The API incompatibility error is solved by changing the scala-maven-plugin version to ""4.5.4"". But then I got the: 
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin: 3.0.0-M4:test(default-test) on project ditto-internal-utils-akka: There are test failures.

I got the ditto build successfully using the ""-DskipTests"" flag in the end. I guess this would not affect the function of the project? I'm new to the build tools, sorry for inconvenience if I asked some dumb questions. 

Thanks agian for help! 
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C845IuWY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1220,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C845JGQy,ditto,958686258,1220,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-11-03T06:36:38Z,2021-11-03T06:36:38Z,"@ZeeChono No, that won't affect the function of the project. However building the project is not required for simply using it.
When you build it yourself, I assume you want to modify the code? In that case you should run the tests in order to be sure not to break something.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C845JGQy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1220,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C845PZCI,ditto,960336008,1220,NA,ZeeChono,54852475,Zichen Chang,,NA,2021-11-04T00:38:04Z,2021-11-04T00:38:04Z,@thjaeckle OK I see. Indeed I modified some code but now there're some test failures. I will go and check what is wrong. Thank you for help!,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C845PZCI/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1228,https://api.github.com/repos/eclipse-ditto/ditto/issues/1228,ditto,1050003916,1228,Smart channel strategy for live/twin read access,jbartelh,9347420,Joel Bartelheimer,joel.bartelheimer@bosch.io,CLOSED,2021-11-10T15:48:29Z,2021-12-22T14:25:33Z,"With #106 implemented, it's quite easy to switch between 'live' and 'twin' channel. On the other hand a simple scenario like: _use the twin state if it is quite up-to-date, otherwise use the live channel_ is currently not supported by ditto and would need extra requests when implemented externally.

Similar to the [""conditional requests""](https://www.eclipse.org/ditto/basic-conditional-requests.html) already in place, add a more advanced mechanism to support _reads_ with channel selection (twin/live) based on a condition.

Example:
```
GET /api/2/things/<thingId>/features/foo/properties/status
            &condition=eq(""attributes/type"",""foo"")
            &liveChannelCondition=or(
                  eq(_metadata/features/foo/properties/status/updateType,""livePolling""),
                  lt(_metadata/features/foo/properties/status/modified,""2021-25-06..."")),
                  gt(features/ConnectionStatus/readyUntil,""2021-25-06..."")
            )
            &timeout=20s
```

Additions/further topics:
- Ditto protocol shall be supported as well
- Fallback: use twin-state, if live-channel fails
- A new built-in [payload mapper](https://www.eclipse.org/ditto/connectivity-mapping.html), which updates the twin-state according to a live retrieve response","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1228/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1231,https://api.github.com/repos/eclipse-ditto/ditto/issues/1231,ditto,1051768621,1231,Consider allowing a dash (-) in the namespace,ctron,202474,Jens Reimann,ctron@dentrassi.de,CLOSED,2021-11-12T09:40:36Z,2021-11-18T10:43:06Z,"Currently Ditto does not allow to use a dash (`-`) as part of the namespace: https://www.eclipse.org/ditto/basic-namespaces-and-names.html

However, even in the example, DNS like names (which allows using dashes) are used:

* `org.eclipse.ditto`
* `com.google`

To my understanding, that rule came from the Java package naming, which also doesn't allow a dash, but underscores.

If that is the only reason, and there is no technical reason, I would ask to consider allowing dashes too. I don't think it violates the overall principal of IDs that Ditto follows:

> Due to the fact that those IDs often need to be set in the path of HTTP requests, we have restricted the set of allowed characters.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1231/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1231,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C8450fVj,ditto,970061155,1231,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-11-16T09:01:57Z,2021-11-16T09:01:57Z,"We support this request and want to allow also using the dash in namespaces.
This change however will require a minor release, I suggest the upcoming 2.2.0.

The change would have to be done (at least) in https://github.com/eclipse/ditto/blob/46367fa0d672e836196f23710bc59e51bb6b0bb7/base/model/src/main/java/org/eclipse/ditto/base/model/entity/id/RegexPatterns.java#L70-L75","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C8450fVj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1231,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C845-u_-,ditto,972746750,1231,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-11-18T10:43:06Z,2021-11-18T10:43:06Z,Fixed via #1234 ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C845-u_-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1245,https://api.github.com/repos/eclipse-ditto/ditto/issues/1245,ditto,1066911958,1245,Build issue,ashishagarwal7,41279892,,,CLOSED,2021-11-30T08:01:35Z,2021-12-01T07:06:25Z,"[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 20:14 min
[INFO] Finished at: 2021-11-30T07:46:25Z
[INFO] Final Memory: 197M/1448M
[INFO] ------------------------------------------------------------------------
[WARNING] The requested profile ""docker-build-image"" could not be activated because it does not exist.
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.8.1:compile (default-compile) on project ditto-base-model: Compilation failure
[ERROR] /usr/src/mymaven/base/model/src/main/java/org/eclipse/ditto/base/model/acks/AbstractCommandAckRequestSetter.java:[89,29] incompatible types: bad return type in method reference
[ERROR]     ? extends C cannot be converted to C
[ERROR] 

I am getting the following compilation error:","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1245/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1245,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C846jjKJ,ditto,982397577,1245,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-11-30T08:29:09Z,2021-11-30T08:29:09Z,Which JDK are you using?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C846jjKJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1245,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C846jvDg,ditto,982446304,1245,NA,ashishagarwal7,41279892,,,NA,2021-11-30T09:26:55Z,2021-11-30T09:26:55Z,"openjdk version ""11.0.11"" 2021-04-20","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C846jvDg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1245,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C846j5x8,ditto,982490236,1245,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-11-30T10:16:47Z,2021-11-30T10:16:47Z,"did you modify the sources?
build works for me with that version ..","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C846j5x8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1245,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C846kBp5,ditto,982522489,1245,NA,ashishagarwal7,41279892,,,NA,2021-11-30T10:56:50Z,2021-11-30T10:56:50Z,"No, I didn't modify it.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C846kBp5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1245,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C846kFGV,ditto,982536597,1245,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-11-30T11:14:22Z,2021-11-30T11:14:22Z,"When you didn't modify the sources: why would you want to build Ditto in the first place?

Apart from that - sorry, no idea why this does not build on your machine - the current master builds successfully:
* on Jenkins: https://ci.eclipse.org/ditto/job/ditto-ci/
* on GitHub Actions: https://github.com/eclipse/ditto/actions/runs/1502652420","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C846kFGV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1245,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C846kIIW,ditto,982549014,1245,NA,ashishagarwal7,41279892,,,NA,2021-11-30T11:29:59Z,2021-11-30T11:29:59Z,"
> When you didn't modify the sources: why would you want to build Ditto in the first place?

I didn't get your question?

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C846kIIW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1245,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C846lH_E,ditto,982810564,1245,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-11-30T16:37:45Z,2021-11-30T16:37:45Z,"> I didn't get your question?

Why do you need to build Ditto? You don't need to build it to use it - simply start the Docker images.
The only reason to build it is when you modified the code - which you didn't.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C846lH_E/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1245,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C846m98J,ditto,983293705,1245,NA,ashishagarwal7,41279892,,,NA,2021-12-01T05:07:13Z,2021-12-01T05:07:13Z,Thanks now it is working,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C846m98J/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1247,https://api.github.com/repos/eclipse-ditto/ditto/issues/1247,ditto,1070539276,1247,Ditto rejects kafka bootstrap host ending with dot,ctron,202474,Jens Reimann,ctron@dentrassi.de,CLOSED,2021-12-03T12:25:17Z,2021-12-22T14:05:13Z,"When configuring a Kafka source through the devops endpoint, Ditto reject a bootstrap server, which has a host name ending with a dot, as invalid.

Example: `foo.bar.baz.:9092`.

Also see: http://www.dns-sd.org/trailingdotsindomainnames.html

This feature comes in useful in a Kubernetes environment, as it specifies rather long list of search domains, which may not be necessary.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1247/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1247,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C846vTwl,ditto,985480229,1247,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2021-12-03T12:28:38Z,2021-12-03T12:28:38Z,"Probably the defined pattern does not respect that:

https://github.com/eclipse/ditto/blob/12d6c2b1cf097fee9ebbbd989f312fbfb5d6c4de/connectivity/service/src/main/java/org/eclipse/ditto/connectivity/service/messaging/kafka/KafkaBootstrapServerSpecificConfig.java#L40-L43","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C846vTwl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1263,https://api.github.com/repos/eclipse-ditto/ditto/issues/1263,ditto,1087437373,1263,Connectivity mapped messages not triggering twin event,tobias-zeptio,72976141,Tobias Månsson,,CLOSED,2021-12-23T07:04:21Z,2021-12-23T13:37:58Z,"I have setup a AMQP 1.0 connection with a source and a target. The target is configured for the topic `""_/_/things/twin/events""`.

The issue is that changes made through the AMQP source mapper are not triggering these twin event to the target, while http PUT calls are. The AMQP mapper is using the `mapToDittoProtocolMsg` to multiple `buildDittoProtocolMsg` modify commands.

Is this intended behavior? I can't find anything about it in the documentation.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1263/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1263,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C847nMeX,ditto,1000130455,1263,NA,geglock,14750235,Gerald Glocker,,NA,2021-12-23T08:29:43Z,2021-12-23T08:29:43Z,"This is the intended way to prevent ""loopbacks"". Events are published to all others but not the original sender. Thus in your setup you would need two different managed connections: one with a source and the other with a target.

This concept is at least documented here: https://www.eclipse.org/ditto/basic-signals.html#communication-pattern

I would propose to close this issue.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C847nMeX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1263,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C847n4rJ,ditto,1000311497,1263,NA,tobias-zeptio,72976141,Tobias Månsson,,NA,2021-12-23T13:37:57Z,2021-12-23T13:37:57Z,"Ah, makes sense and is pretty clever. :)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C847n4rJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1266,https://api.github.com/repos/eclipse-ditto/ditto/issues/1266,ditto,1095426220,1266,Entity id used instead of entity name in the documentation,dimitar-dimitrow,82199362,Dimitar Dimitrov,,CLOSED,2022-01-06T15:27:07Z,2022-01-21T12:25:30Z,"Topic path documentation was changed to use entity name instead of id - #819. However it is missed here - 
https://www.eclipse.org/ditto/basic-placeholders.html#scope-rql-expressions-when-filtering-for-ditto-protocol-messages (see topic:full). Also it is a bit misleading here in the provided example - https://www.eclipse.org/ditto/basic-thing.html#example (see ""thingId"": ""the.namespace:**theId**""), guess  something like **theName** will be more appropriate.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1266/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1266,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C848JyHw,ditto,1009197552,1266,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-01-10T18:16:11Z,2022-01-10T18:16:11Z,I agree 👍 ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C848JyHw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1273,https://api.github.com/repos/eclipse-ditto/ditto/issues/1273,ditto,1103379835,1273,"Target-only Kafka connection remains ""open"" even if Kafka broker is not available.",jufickel-b,17162397,Juergen Fickel,,CLOSED,2022-01-14T09:55:46Z,2022-01-21T11:24:00Z,"A Kafka connection without sources does no regular poll and thus cannot detect whether the broker is available.

This means a Kafka connection with only targets remains open even if Kafka broker is not available.
Such a connection should be marked as ""misconfigured"".
As it is not possible to detect this state pre-emptively it should be detected at least with the first sent message that times out.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1273/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1283,https://api.github.com/repos/eclipse-ditto/ditto/issues/1283,ditto,1109052920,1283,Upgrade to Java 17,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,CLOSED,2022-01-20T09:19:20Z,2022-02-16T12:27:50Z,"We should upgrade our service code to Java 17 in order to make use of new features.

Furthermore we should consider to also switch the JVM from openJ9 back to hotspot since the G1 garbage collector has improved a lot since our decission to switch to openJ9 (with Java 8).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1283/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1291,https://api.github.com/repos/eclipse-ditto/ditto/issues/1291,ditto,1112618209,1291,`time:now` is not available in header mapping,ctron,202474,Jens Reimann,ctron@dentrassi.de,CLOSED,2022-01-24T13:01:40Z,2022-01-24T13:49:31Z,"The documentation indicates that the placeholder `{{ time:now }}` is available for header mappings: https://www.eclipse.org/ditto/basic-placeholders.html#scope-connections

However, using this feature when creating and outbound connection, results in the following result:

```
[2022-01-24T12:52:09Z DEBUG drogue_cloud_ditto_registry_operator::ditto::client] Response: Object({
        ""connectivity"": Object({
            ""ditto-connectivity-57545b9f8c-2q7dd"": Object({
                ""status"": Number(
                    400,
                ),
                ""error"": String(
                    ""connectivity:connection.configuration.invalid"",
                ),
                ""message"": String(
                    ""The placeholder 'time:now' could not be resolved."",
                ),
                ""description"": String(
                    ""Some placeholders could not be resolved. Check the spelling of the placeholder and make sure all required headers are set."",
                ),
            }),
        }),
    })
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1291/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1291,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C848zTCG,ditto,1020080262,1291,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-01-24T13:06:29Z,2022-01-24T13:06:29Z,Could you please provide the full connection JSON you sent?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C848zTCG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1291,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C848zcKH,ditto,1020117639,1291,NA,ctron,202474,Jens Reimann,ctron@dentrassi.de,NA,2022-01-24T13:46:12Z,2022-01-24T13:46:12Z,"It looks like this was introduced in 2.3, and I am still on 2.2.

What might be helpful is to add a ""since"" field in the documentation for things like that.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C848zcKH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1291,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C848zc1f,ditto,1020120415,1291,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-01-24T13:49:31Z,2022-01-24T13:49:31Z,"Aah, that's what the ""version"" picker in the documentation is already for:
![image](https://user-images.githubusercontent.com/1331526/150794667-fece19ef-f620-4b83-b11b-563f7935c8f4.png)
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C848zc1f/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1302,https://api.github.com/repos/eclipse-ditto/ditto/issues/1302,ditto,1121677403,1302,"ditto-gateway reports status 503, preventing ditto-nginx to start",tobias-zeptio,72976141,Tobias Månsson,,CLOSED,2022-02-02T09:13:51Z,2025-01-31T05:46:19Z,"If the init container in ditto-nginx is removed the cluster seems to be fully functional.

All running services (concierge, connectivity, gateway, policies, things) logs their status as UP.

Ditto version 2.3.0 running in EKS, deployed using the eclipse/packages ditto helm chart.

The following log entries are repeated in ditto-gateway.

```
2022-02-02 10:10:08,122 DEBUG [a55fd6d6-8bce-4197-8d0f-d5af758f2fa4] o.e.d.g.s.e.d.CorrelationIdEnsuringDirective  - Created new correlation ID <a55fd6d6-8bce-4197-8d0f-d5af758f2fa4>.
2022-02-02 10:10:08,124 DEBUG [] o.e.d.i.u.t.TraceUriGenerator  - Generated traceUri for '/health': 'TraceInformation{traceUri='/health', tags={ditto.request.path=/health}}'
2022-02-02 10:10:08,125 DEBUG [a55fd6d6-8bce-4197-8d0f-d5af758f2fa4] o.e.d.g.s.e.d.RequestTimeoutHandlingDirective  - Started mutable timer <StartedKamonTimer [name=roundtrip_http, tags={ditto.request.path=/health, ditto.request.method=GET, ditto.channel=twin, segment=overall}, onStopHandlers=[org.eclipse.ditto.internal.utils.metrics.instruments.timer.PreparedKamonTimer$$Lambda$2604/0x00000000103ee600@de01f1c9], segments={}, startNanoTime=709913292739, startInstant=2022-02-02T09:10:08.124718747Z, stoppedTimer=null]>.
2022-02-02 10:10:08,127 DEBUG [] o.e.d.i.u.t.TraceUriGenerator  - Generated traceUri for '/health': 'TraceInformation{traceUri='/health', tags={ditto.request.path=/health}}'
2022-02-02 10:10:08,133 INFO  [a55fd6d6-8bce-4197-8d0f-d5af758f2fa4] o.e.d.g.s.e.d.RequestResultLoggingDirective  - StatusCode of request GET '/health' was: 503
2022-02-02 10:10:08,134 DEBUG [a55fd6d6-8bce-4197-8d0f-d5af758f2fa4] o.e.d.g.s.e.d.RequestResultLoggingDirective  - Raw request URI was: Raw-Request-URI: /health
2022-02-02 10:10:08,135 DEBUG [a55fd6d6-8bce-4197-8d0f-d5af758f2fa4] o.e.d.g.s.e.d.RequestTimeoutHandlingDirective  - Finished timer <StartedKamonTimer [name=roundtrip_http, tags={ditto.request.path=/health, ditto.statusCode=503, ditto.request.method=GET, ditto.channel=twin, segment=overall}, onStopHandlers=[org.eclipse.ditto.internal.utils.metrics.instruments.timer.PreparedKamonTimer$$Lambda$2604/0x00000000103ee600@de01f1c9], segments={}, startNanoTime=709913292739, startInstant=2022-02-02T09:10:08.124718747Z, stoppedTimer=StoppedKamonTimer [name=roundtrip_http, tags={ditto.request.path=/health, ditto.statusCode=503, ditto.request.method=GET, ditto.channel=twin, segment=overall}, startNanoTime=709913292739, endNanoTime=709923624160]]> with status <503>.
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1302/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1302,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C849R1Rd,ditto,1028084829,1302,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-02-02T15:54:20Z,2022-02-02T15:54:20Z,"@tobias-zeptio and what information is contained in the ""/health"" response of the gateway?
you should also be able to query ""/status/health"" on a gateway for the full Ditto cluster health details.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C849R1Rd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1302,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C849Yiy8,ditto,1029844156,1302,NA,tobias-zeptio,72976141,Tobias Månsson,,NA,2022-02-04T10:29:25Z,2022-02-04T10:29:25Z,"/health response is {""status"":""DOWN""}
/status/health response is {""status"":""UP""}","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C849Yiy8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1302,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C849Y2v-,ditto,1029925886,1302,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-02-04T12:03:06Z,2022-02-04T12:03:06Z,"The `/health` route reuses the information from `/status/health` , but by default caches it for 20 seconds (e.g. to be able to publicly expose `/health` to the world with anonymous access preventing from doing a ""costly"" health calculation in the cluster on each request.

So is the `/health` constantly reporting DOWN?
That would be strange when `/status/health` is UP.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C849Y2v-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1302,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C849Y6sr,ditto,1029942059,1302,NA,tobias-zeptio,72976141,Tobias Månsson,,NA,2022-02-04T12:26:39Z,2022-02-04T12:26:39Z,"I agree it is strange, especially since the cluster is working.

I made a call to /status/health with the below response. But why is search an expected role? It's configured with `enabled: false` in the helm values.yaml.

```
{
  ""label"": ""roles"",
  ""status"": ""DOWN"",
  ""details"": [
    {
      ""ERROR"": ""See detailed messages for: expected-roles.""
    }
  ],
  ""children"": [
    {
      ""label"": ""expected-roles"",
      ""status"": ""DOWN"",
      ""details"": [
        {
          ""ERROR"": {
            ""missing-roles"": [
              ""things-search""
            ],
            ""extra-roles"": []
          }
        }
      ]
    },
    ...
  ]
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C849Y6sr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1302,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C849Y-FN,ditto,1029955917,1302,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-02-04T12:47:39Z,2022-02-04T12:47:39Z,"That explains it.
The Helm chart does not reconfigure the ""expected"" roles in the gateway - that has to be done manually via
https://github.com/eclipse/ditto/blob/5e6b08928d4f6aa34f0cb1ac6c25c84811751a5f/gateway/service/src/main/resources/gateway.conf#L265-L277

So either by globally disabling  the ""expected roles"" check via environment `HEALTH_CHECK_ROLES_ENABLED=false` or by explicitly overwriting this default roles to check for.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C849Y-FN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1302,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C849ZAMK,ditto,1029964554,1302,NA,tobias-zeptio,72976141,Tobias Månsson,,NA,2022-02-04T12:59:40Z,2022-02-04T12:59:40Z,"Aha, so default is all services enabled?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C849ZAMK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1302,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C849ZA7t,ditto,1029967597,1302,NA,tobias-zeptio,72976141,Tobias Månsson,,NA,2022-02-04T13:03:50Z,2022-02-04T13:03:50Z,After enabling thingsSearch the status is UP,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C849ZA7t/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1302,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C849ZBBM,ditto,1029967948,1302,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-02-04T13:04:20Z,2022-02-04T13:04:20Z,"> Aha, so default is all services enabled?

Yes, this is the default","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C849ZBBM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1302,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86ciwmr,ditto,2626357675,1302,NA,Korakbhakta02,67550363,,,NA,2025-01-31T05:46:17Z,2025-01-31T05:46:17Z,"Hi @tobias-zeptio  how you got the detailed description of status/health. When I am hitting /status/health,  I am getting only 
{""status"":""UP""}","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86ciwmr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1311,https://api.github.com/repos/eclipse-ditto/ditto/issues/1311,ditto,1137125147,1311,Incorrect link to Release notes 2.3.2,desislava-marinova,32883994,Desislava Marinova,,CLOSED,2022-02-14T10:56:54Z,2022-02-14T10:58:29Z,"The Release notes link in the https://github.com/eclipse/ditto/releases/tag/2.3.2 points to Release notes 2.2.2
![image](https://user-images.githubusercontent.com/32883994/153851063-7bae60ed-5ce4-40ed-9a0a-84c94a25607e.png)

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1311/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1311,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C8497QVN,ditto,1038943565,1311,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-02-14T10:58:29Z,2022-02-14T10:58:29Z,"Thx, fixed 👍 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C8497QVN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1321,https://api.github.com/repos/eclipse-ditto/ditto/issues/1321,ditto,1147179197,1321,502 Bad Gateway,phyllisgraf,43384655,,,CLOSED,2022-02-22T17:24:31Z,2022-04-09T13:11:17Z,"Hi : ) 

I started Ditto using _docker-compose up -d_. 

Then I tried this tutorial (https://www.eclipse.org/ditto/intro-hello-world.html). However, when I try the example under ""Creating your first Thing"" I get following result:

![Screenshot 2022-02-22 at 18 17 31](https://user-images.githubusercontent.com/43384655/155184015-cd37bc58-375e-468c-9389-e1a7e292d478.png)

This is my output for _docker-compose ps_:
![Screenshot 2022-02-22 at 18 16 14](https://user-images.githubusercontent.com/43384655/155183854-e45de190-00d6-40dd-a0fc-e973909452ca.png)

I have been looking for a solution for quite some time now but can't seem to find the error. I would really appreciate it if someone could help me. (Also, I already adjusted the number of CPUs used by docker to 4.)


","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1321/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1321,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84-fmmf,ditto,1048471967,1321,NA,stmaute,17831060,Stefan Maute,,NA,2022-02-23T06:02:00Z,2022-02-23T06:02:00Z,"Hi @phyllisgraf,
 
thanks for reaching out to the Ditto team. 
Can you check the logs of the nginx container?

I assume that Ditto didn't start up correctly even if the docker containers are running. Maybe the 4 CPUs are to less and Ditto needs some more time to start.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84-fmmf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1321,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84-gRgi,ditto,1048647714,1321,NA,phyllisgraf,43384655,,,NA,2022-02-23T10:37:37Z,2022-02-23T10:37:37Z,"Hi @stmaute,

first of all, thank you for your quick response! This is what I get when I run _docker-compose logs ngnix_:

![Screenshot 2022-02-23 at 11 33 26](https://user-images.githubusercontent.com/43384655/155302469-d24dbebb-69f0-4f03-b795-5b6638ed9cea.png)

The _docker-compose ps_ output looks like this after checked the logs:
![Screenshot 2022-02-23 at 11 35 10](https://user-images.githubusercontent.com/43384655/155302757-e5139b19-9ea1-4f1c-af3f-a11ce41affb3.png)


","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84-gRgi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1321,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84-gVto,ditto,1048664936,1321,NA,stmaute,17831060,Stefan Maute,,NA,2022-02-23T11:00:08Z,2022-02-23T11:00:08Z,It seems the ditto containers weren't able to start. Can you provide the logs of docker_gateway_1 container?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84-gVto/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1321,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84-gYVP,ditto,1048675663,1321,NA,phyllisgraf,43384655,,,NA,2022-02-23T11:13:56Z,2022-02-23T11:13:56Z,"This is what I get for _docker-compose logs gateway_:
![Screenshot 2022-02-23 at 12 06 35](https://user-images.githubusercontent.com/43384655/155307605-2c72f84c-b911-457f-8f16-e61f6968794a.png)

Also, all the containers are up and running: 
![Screenshot 2022-02-23 at 12 07 18](https://user-images.githubusercontent.com/43384655/155307726-d3897af3-2fd5-42e9-9e5a-4792292bd90f.png)

The status only changes to ""Exit 255"" once I get the 502 Bad Gateway error (when I try to create a Thing) or when I run _docker-compose logs ngnix_ and it fails to connect .. 

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84-gYVP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1321,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84-gbdG,ditto,1048688454,1321,NA,stmaute,17831060,Stefan Maute,,NA,2022-02-23T11:31:01Z,2022-02-23T11:31:01Z,"The screenshot of the gateway logs shows that the container is about to start and it will take quite some time (1 - 2 minutes depending on cpu power) until all Ditto containers are running.  

If you see something like below in the gateway logs you can try to create a thing.
`gateway_1        | 2022-02-23 12:26:46,536 INFO  [] o.e.d.g.s.s.GatewayRootActor akka://ditto-cluster/user/gatewayRoot - Serving HTTP requests on port <8080> ...`","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84-gbdG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1321,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84-ghYL,ditto,1048712715,1321,NA,phyllisgraf,43384655,,,NA,2022-02-23T12:03:53Z,2022-02-23T12:03:53Z,"I started to containers again (_docker-compose up -d_). This time I ran _docker-compose logs -f_ and waited for about 5 minutes and get the following: 

![Screenshot 2022-02-23 at 13 01 15](https://user-images.githubusercontent.com/43384655/155315560-dc1b02e5-0127-4774-aeee-fd58a938acef.png)

Is there anything else I can try? ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84-ghYL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1321,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84-glrH,ditto,1048730311,1321,NA,stmaute,17831060,Stefan Maute,,NA,2022-02-23T12:25:17Z,2022-02-23T12:25:17Z,It seems there isn't enough CPU power to run Ditto. Can you try increasing cpus? ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84-glrH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1321,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85AfJ0O,ditto,1081908494,1321,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-03-29T13:59:39Z,2022-03-29T13:59:39Z,"Please let us know when the problem still persists.
Closing this question..","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85AfJ0O/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1321,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85BNUSw,ditto,1094010032,1321,NA,phyllisgraf,43384655,,,NA,2022-04-09T13:11:16Z,2022-04-09T13:11:16Z,Sorry for the late response. I was able to increase CPU power and it worked! Thank you for your quick responses :) ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85BNUSw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1332,https://api.github.com/repos/eclipse-ditto/ditto/issues/1332,ditto,1162836351,1332,Feedback on the WoT Integration guide and blog post,egekorkan,20195407,Ege Korkan,egekorkan@gmail.com,CLOSED,2022-03-08T16:03:44Z,2022-03-11T09:33:04Z,"While reading https://www.eclipse.org/ditto/basic-wot-integration.html and https://www.eclipse.org/ditto/2022-03-03-wot-integration.html I have spotted some issues which are borderline nitpicky:

Guide:
- I had seen a demo of the integration working on @thjaeckle 's laptop but without that or reading until the end of this document with the curl requests, it is not clear what the integration means. I think adding something like ""This integration allows for Ditto clients or usual WoT clients to obtain TDs for the Ditto-managed twins"" or like what is described in https://www.w3.org/WoT/developers/ ""Ditto managed digital twins can be linked to WoT Thing Models from which Ditto can create Thing Descriptions containing the API descriptions of the twins. ""
- Multiple places use thing without capital T. My suggestion would be to always capitalize it to differentiate WoT/IoT Things from colloquial use of the word thing.
- I find the point and subpoints at https://github.com/eclipse/ditto/blob/6ebbe7e2da9c7f82405ab7676c1f43358d464eba/documentation/src/main/resources/pages/ditto/basic-wot-integration.md?plain=1#L79 a bit confusing:
> if backed by a WoT Thing Model, the twin will tell you as response exactly
        what it is capable of
        which HTTP endpoints to invoke to access data / send messages

I do not understand what is meant by the response. Also, TMs do not necessarily have HTTP endpoints and this documentation even says that at https://github.com/eclipse/ditto/blob/6ebbe7e2da9c7f82405ab7676c1f43358d464eba/documentation/src/main/resources/pages/ditto/basic-wot-integration.md?plain=1#L54

- The points under `The benefits of adding such a “Thing Model” reference to digital twins managed in Ditto are:` start with a different form of a sentence, i.e. some start with a verb, some with a noun, the last two change from a singular person to a plural person (lack of `s` at the verb)

- At https://github.com/eclipse/ditto/blob/6ebbe7e2da9c7f82405ab7676c1f43358d464eba/documentation/src/main/resources/pages/ditto/basic-wot-integration.md?plain=1#L83 it would be better to always write JSON instead of Json . This happens in other places as well

- At https://github.com/eclipse/ditto/blob/6ebbe7e2da9c7f82405ab7676c1f43358d464eba/documentation/src/main/resources/pages/ditto/basic-wot-integration.md?plain=1#L87
    - perform -> performs
    - it would be nice to say that even the meeting minutes are totally public and that specifications develop over GitHub, making it open to review. I am a bit ""nitpicky"" about this since way too many standards claim that they are open but in the end, only the pdf/webpage of the standard is available for free.

- tiles -> titles at https://github.com/eclipse/ditto/blob/6ebbe7e2da9c7f82405ab7676c1f43358d464eba/documentation/src/main/resources/pages/ditto/basic-wot-integration.md?plain=1#L133

Blog Post:
- public -> publicly at https://github.com/eclipse/ditto/blob/6ebbe7e2da9c7f82405ab7676c1f43358d464eba/documentation/src/main/resources/_posts/2022-03-03-wot-integration.md?plain=1#L56","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1332/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1332,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84_TJgZ,ditto,1061984281,1332,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-03-08T16:47:48Z,2022-03-08T16:47:48Z,"Thx for the awesome feedback, @egekorkan - will incorporate it 👍 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84_TJgZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1339,https://api.github.com/repos/eclipse-ditto/ditto/issues/1339,ditto,1172131382,1339,Reduce amount of services,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,CLOSED,2022-03-17T09:28:02Z,2022-08-04T06:25:24Z,"I think it would be a good idea to eliminate the two services:
* Gateway and
* Concierge

The plan that came to my mind is to move the HTTP API and also command authorization to the respective service the command is related to. So each of the remaining services will have an HTTP API and handles the authorization inside their service instead of concierge.
Remaining services would be:
* Things
* Policies (Not sure if this really needs to be a separate service. Maybe something that should be discussed)
* Things-Search
* Connectivity

Of course this should not be reimplemented for all services but instead we could introduce a library for common HTTP / Authorization  topics and only implement the specific parts in the respective service.

Benefits:
* Reduce complexity of understanding the interaction between the services
* More self contained services. Gateway for example depends right now on Things, Policies, Things-Search and Concierge. This service is basically useless without those other services. With the new apporach. We have a completely independent policy service and a completely independent connectivity service. Only Things-Search (Things) and Things (Policies) do still have dependencies on other services.
* More stable deployments: akka http does already provide a way to finish open http requests during coordinated shutdown. Right now this is a problem because a http request crosses multiple services to be finished (e.g. gateway -> concierge -> things). So when the concierge service was restarted this caused a lot of failing requests.
* Reduced overhead because of an additional container

Downsides:
* Containers probably will be ""bigger"", meaning they will need more memory and most likely also more CPU. (I expect lesser resource consumption overall). We could also horizontally scale the remaining services in order to reduce the amout of memory per service. I think we should analyze what fits best here.

Please feel free to add arguments for or against this change. (Of course this would require a Ditto 3.0 release)

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1339/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1339,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84_0bSK,ditto,1070707850,1339,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-03-17T09:59:44Z,2022-03-17T09:59:44Z,"I think that's a great idea.
Benefit would also be that json serialization and deserialization in the cluster will be reduced a lot.
And this saves a lot of CPU.

We could also look into improving the HTTP ingress/load balancer to detect the things cluster node where eg a thing with ID x is running to directly route the Http request to the correct node.
This will again save network hops and serialization overhead.
Where the akka shards are currently located can be determined via a HTTP call to the akka management api.
That could eg be updated each minute by a custom ingress controller or load balancer. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84_0bSK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1339,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84_5qH3,ditto,1072079351,1339,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-03-18T06:48:49Z,2022-03-18T06:48:49Z,"Having slept one night over it I fear that we cannot get rid of ""gateway"" so easily.
E.g. the gateway provides routes which are not directly related to an entity:
* `/ws/2`
* `/api/2/cloudevents`

Those 2 endpoints - similar to ""connectivity"" - directly process Ditto Protocol messages for all entities (things + policies + search commands).
So at least for those, we would still require the ""gateway"".

So FMPOV we could get of ""concierge"", but would still require the edges ""gateway"" and ""connectivity"".
Direct access to things/policies with a known ID could still be optimized to directly target the services (with an additional clever ingress/loadbalancing).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84_5qH3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1339,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84_53Ab,ditto,1072132123,1339,NA,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,NA,2022-03-18T08:17:41Z,2022-03-18T08:17:41Z,"You're right. I forgot about websockets.

One solution could be to move those ""combined"" api to connectivity, so connectivity becomes the only edge service.
I'm not sure what I really do think about this, to be honest. Maybe just getting rid of concierge is also an option.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C84_53Ab/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1345,https://api.github.com/repos/eclipse-ditto/ditto/issues/1345,ditto,1180085242,1345,function expression fn:substring-after returning incorrect data,PaulWojcik-TMMC,82968099,,,CLOSED,2022-03-24T21:43:08Z,2022-03-28T05:35:36Z,"The following function fn:substring-after('node/')  applied to : ""node/1234""

returns ""ode/1234"" instead of ""1234""

Documentation states the following: 
Parses the result of the previous expression and passes along only the characters after the first occurrence of givenString.

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1345/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1345,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85AUN3G,ditto,1079041478,1345,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-03-25T13:42:40Z,2022-03-25T13:42:40Z,"Thx @PaulWojcik-TMMC 
You are right - that is a bug indeed!

The substring-after assumes that the length of the ""splitter"" is 1, so it e.g. only expects a single `':'`.
That's wrong.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85AUN3G/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1348,https://api.github.com/repos/eclipse-ditto/ditto/issues/1348,ditto,1183491464,1348,Headers default value and restrictions,antoniyatrifonova,72206068,Antonia Guzgunova,,CLOSED,2022-03-28T14:02:41Z,2022-10-28T10:40:51Z,"According the [specification](https://www.eclipse.org/ditto/protocol-specification.html#headers):
1. What is the default value for the following headers?
* `content-type`
* `correlation-id`
* `ditto-originator`
* `if-match`
* `if-none-match`
* `version`

2. Are there any restrictions for the header values? For example: It is possible to set empty string for the `correlation-id`? What is the range of the `timeout`?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1348/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1348,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85AkPmZ,ditto,1083242905,1348,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-03-30T14:54:33Z,2022-03-30T14:54:33Z,"Hi @antoniyatrifonova 

1. The mentioned headers do not have static default values which could be specified, however:
   * if `content-type` is missing from the headers, `application/json` will be assumed for commands - for messages, `application/octet-stream` will be assumed
   * `correlation-id` will be generated (in UUID format) if none was provided
   * `ditto-originator` cannot be set by a device/application at all, but will always be set by the Ditto backend with the ""authorization subject that caused an event""
   * `if-match` and `if-none-match` don't have defaults - if they are missing, no [conditional request](https://www.eclipse.org/ditto/httpapi-concepts.html#conditional-requests) will be performed
   * `version` - as Ditto only supports version 2 currently, this will be 2 if omitted - I will fix the spec which says that this may be 1 or 2
2. Yes, some headers have restrictions - you can find the used validators here (as last argument of the header enum value): https://github.com/eclipse/ditto/blob/master/base/model/src/main/java/org/eclipse/ditto/base/model/headers/DittoHeaderDefinition.java
   * e.g. `timeout` header uses the `HeaderValueValidators.getTimeoutValueValidator()` which uses `DittoDuration.parseDuration()`: https://github.com/eclipse/ditto/blob/e30d9f93e820d6dcab143727590a44bec7f4f7f9/base/model/src/main/java/org/eclipse/ditto/base/model/common/DittoDuration.java#L61-L77
      a ""range"" is however not enforced currently
   * the `correlation-id` header uses  the `HeaderValueValidators.getNonEmptyValidator()` - so no, it may not be empty
   * etc.

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85AkPmZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1348,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Aota-,ditto,1084413630,1348,NA,antoniyatrifonova,72206068,Antonia Guzgunova,,NA,2022-03-31T10:51:02Z,2022-03-31T10:51:02Z,"Hi, @thjaeckle 
It is possible to provide this information in the documentation here - [Doc](https://www.eclipse.org/ditto/protocol-specification.html#headers ) ?
Our implementation is based on this documentation.
Thank you!","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Aota-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1348,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ApgZq,ditto,1084622442,1348,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-03-31T13:55:18Z,2022-03-31T13:55:18Z,"I fear that is a bigger topic as not even all available headers are currently documented on that page.
What kind of information do you need and what do you need that information for?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ApgZq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1353,https://api.github.com/repos/eclipse-ditto/ditto/issues/1353,ditto,1189702763,1353,Bad cursor-Id when using filter with * or ? wildcard,GrischaGoebel,102803905,,,CLOSED,2022-04-01T12:07:43Z,2022-06-29T12:36:10Z,"Steps to reproduce:
I have a feature like `features/myFeature/properties/myProperty` of type string.
I then want to filter all things where `myProperty` ends with `123`.

Two requests are made: one request for the **count** and one for **things**.

**count:**
`search/things/count?filter=like(features/myFeature/properties/myProperty,""*123"")`

**things:** 
`search/things?option=size(25)&filter=like(features/myFeature/properties/myProperty,""*123"")`

**count** returns for example `45`.
**things** responds with 25 things in `items` as i expected, since the filter matches with 45 things according to **count** and i know from manual verification, that 45 is valid. Since 45 > 25 page 1 is ""full"".

So i expect to be able to fetch a second page by sending a second **things** request including the `cursor-id` from the first request:

**things-page-2:**
`search/things?option=size(25),cursor({cursor-id})&filter=like(features/myFeature/properties/myProperty,""*123"")`

The response from **things-page-2**:
{""items"":[],""nextPageOffset"":-1}

This happens for other properties and page sizes as well.

Filtering without `*` or `?` for the whole property value, sorting or getting all things works fine.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1353/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1353,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85AuM1N,ditto,1085853005,1353,NA,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,NA,2022-04-01T12:43:34Z,2022-04-01T12:43:34Z,"Hi, thank you for your report.
I however can't reproduce the issue locally. Which version of ditto are you using?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85AuM1N/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1353,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85AuNdl,ditto,1085855589,1353,NA,GrischaGoebel,102803905,,,NA,2022-04-01T12:46:12Z,2022-04-01T12:46:12Z,"Hi, i am using 2.2.0","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85AuNdl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1353,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85AumE-,ditto,1085956414,1353,NA,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,NA,2022-04-01T14:13:28Z,2022-04-01T14:13:28Z,"Hi now also tried it with a lokal ditto 2.2.0 running, but could still not reproduce the issue. For me the second (and all consecutive) pages were available.
Did you simplify the query shown in this example somehow? If so, could you verify that this issue happens for you with this simplified query, too?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85AumE-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1353,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Aum5X,ditto,1085959767,1353,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-04-01T14:16:41Z,2022-04-01T14:16:41Z,"> `search/things?option=size(25),cursor({cursor-id})&filter=like(features/myFeature/properties/myProperty,""*123"")`

You don't need to provide the ""filter"" again when using the cursor - as the filter is included in the cursor.
I am however not sure if this is just redundant and will be ignored or will cause problems.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Aum5X/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1353,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85AuwmI,ditto,1085999496,1353,NA,GrischaGoebel,102803905,,,NA,2022-04-01T14:55:30Z,2022-04-01T14:55:30Z,"I found something: It is the sorting.
When doing some sorting with `sort(+` i had to replace the `+` with `%2B` manually since the angular HttpUrlEncoder leaves me no choice other than doing some custom replacement. Escaping etc. does not work especially for `+`. 
If i do not replace it i get the following error because angular just removes it:
![image](https://user-images.githubusercontent.com/102803905/161284648-e6489f26-630f-4409-b272-f0d8805d2bfb.png)

This works fine until it comes to filtering with the `*` or `?`

What i just found out: If make an ascending sort with `-` or not using any sort at all it is working. Everything else in the request remains the same:

**No sort (works):**
`search/things?option=size(25),cursor(eJwVj...tLw)&filter=like(features/myFeature/properties/myProperty,%22*123%22)`

**Asc sort (does not work):**
`search/things?option=sort(%2Battributes/myAttribute),size(25),cursor(eJw...4mw)&filter=like(features/myFeature/properties/myProperty,%22*123%22)`

**Desc sort (works):**
`search/things?option=sort(-attributes/myAttribute),size(25),cursor(eJw...4mw)&filter=like(features/myFeature/properties/myProperty,%22*123%22)`

Actually i thought i tried it out without sorting, but no sort send the Asc sort request. So thats on me^^

[Here ](https://stackoverflow.com/questions/45428842/angular-url-plus-sign-converting-to-space)you see the Angular problem. My current workaround with the `%2B` seems to trigger some interpretation change on ditto regarding the `*` and `?`.

**Edit:**
I would like to not make some URL interception workaround to add the `+` through some hack. You guy have a query example with `%2B` instead of `+` that would work?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85AuwmI/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1353,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85AvVbm,ditto,1086150374,1353,NA,GrischaGoebel,102803905,,,NA,2022-04-01T17:11:52Z,2022-04-01T17:11:52Z,"As you suggested i also removed everything from the request, except the `cursor-id`.
At first i removed the `filter`, then the `sort` and finally the `size`. 
But unfortunately nothing changes.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85AvVbm/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1353,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85A_f8d,ditto,1090387741,1353,NA,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,NA,2022-04-06T15:13:02Z,2022-04-06T15:13:02Z,"I still was not able to reproduce this issue.

For me both. Asc and Desc sorting works.
I'm running ditto locally with kubernetes and using postman to access the HTTP API. Is this maybe a problem with angulars way of handling URLs? Maybe some escaping of the cursor?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85A_f8d/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1357,https://api.github.com/repos/eclipse-ditto/ditto/issues/1357,ditto,1193891407,1357,Was Ditto affected by Spring Boot RCE vulnerability？,tiexinyang,13174634,杨铁鑫,546676557@qq.com,CLOSED,2022-04-06T01:18:05Z,2022-04-06T05:41:27Z,"I would like to know, is Ditto also affected by the recent CVE-2022-22947?
If is, is there any plan to fix that?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1357/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1357,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85A9a4z,ditto,1089842739,1357,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-04-06T05:41:11Z,2022-04-06T05:41:11Z,"No, as you can see in Ditto's [Maven bom](https://github.com/eclipse/ditto/blob/master/bom/pom.xml) and also in Ditto's generated [compile/runtime depedencenies](https://github.com/eclipse/ditto/blob/master/legal/3rd-party-dependencies/compile.txt), Ditto does not use Spring.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85A9a4z/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1359,https://api.github.com/repos/eclipse-ditto/ditto/issues/1359,ditto,1198606513,1359,Create MQTT Connection,phyllisgraf,43384655,,,CLOSED,2022-04-09T13:35:23Z,2022-05-19T15:37:00Z,"Hi : ) 

I am following this tutorial (https://github.com/eclipse/ditto-examples/tree/master/mqtt-bidirectional) and am stuck creating the MQTT connection. Once I sent the following Piggyback Command, nothing happens: 

![Screenshot 2022-04-09 at 15 22 30](https://user-images.githubusercontent.com/43384655/162576172-448666a5-9274-49a1-a08c-f4a301acea4d.png)

Sorry if this is a stupid question but does someone know what I am doing wrong? ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1359/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1359,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85BV4s2,ditto,1096256310,1359,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-04-12T07:32:31Z,2022-04-12T07:32:31Z,"What do you mean with ""nothing happens""?

Which response do you get from Ditto?
What do you expect to happen which does not happen?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85BV4s2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1361,https://api.github.com/repos/eclipse-ditto/ditto/issues/1361,ditto,1199527705,1361,Confusing error message in case of Http requests `timeout` parameter out of range,abalarev,103407469,Andrey Balarev,andrey.balarev@bosch.io,OPEN,2022-04-11T07:42:09Z,2022-04-12T04:38:51Z,"When using http request with parameter `timeout`, currently the parameter units are seconds in range 0-60.
If a value passed is out of range (for example timeout=90), the response error message says `The timeout <90 000ms> is not inside its allowed bounds <0ms - 60 000ms>`, which is incorrect. The message should give the range and the units in seconds (instead of in milliseconds) ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1361/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1361,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85BPz8L,ditto,1094663947,1361,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-04-11T07:47:26Z,2022-04-11T07:47:26Z,"What is incorrect here?
When the unit is omitted from the `timeout` parameter, it is treated as `s` (seconds) - so `90 000ms` is the correct interpretation into `ms`.
You could also specify e.g. a `timeout=1337ms` instead.

For simplicity, the exception always uses `ms` as unit for its description text.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85BPz8L/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1361,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85BP3Bb,ditto,1094676571,1361,NA,abalarev,103407469,Andrey Balarev,andrey.balarev@bosch.io,NA,2022-04-11T08:02:20Z,2022-04-11T08:02:20Z,"Actually the values are correct, maybe it's a bit confusing to specify seconds by default and receive a response message in milliseconds instead. I didn't know `ms` could be specified explicitly. 
I could close the issue if this behaviour is the desired one.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85BP3Bb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1361,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85BP58s,ditto,1094688556,1361,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-04-11T08:14:06Z,2022-04-11T08:14:06Z,"Yes, it is not ""incorrect"" - it could be more convenient to get the unit in the exception text which was passed in.
If you want to contribute that improvement, we are open to accept a PR improving that 😃 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85BP58s/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1361,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85BP7g0,ditto,1094694964,1361,NA,abalarev,103407469,Andrey Balarev,andrey.balarev@bosch.io,NA,2022-04-11T08:20:01Z,2022-04-11T08:20:01Z,"I would like to do that as my first contribution, so I'll keep the issue open. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85BP7g0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1363,https://api.github.com/repos/eclipse-ditto/ditto/issues/1363,ditto,1201272879,1363,Process/forward messages conditionally based on twin state,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2022-04-12T07:18:57Z,2022-11-04T15:45:19Z,"Similar to the [conditional requests](https://www.eclipse.org/ditto/basic-conditional-requests.html) for CRUD of things it would be useful to apply a (RQL based) condition when processing messages in Ditto.

Example use cases:
* prevent sending duplicated alarm/alert messages from devices using a flag in the twin state:
   `POST /api/2/things/org.eclipse.ditto:my-thing-1/outbox/messages/fireAlarm?condition=ne(attributes/alarmConfirmed,true)`
   * e.g. a (mobile) app which would receive the ""fireAlarm"" for the first would set the `attributes/alarmConfirmed=true` 
   * this would prevent the mobile app to receive the fireAlarm multiple times
* only dispatch messages to a device when it is currently online:
   `POST /api/2/things/org.eclipse.ditto:my-thing-1/inbox/messages/doSomething?condition=gt(features/ConnectionStatus/properties/status/readyUntil,time:now)`","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1363/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1371,https://api.github.com/repos/eclipse-ditto/ditto/issues/1371,ditto,1210726561,1371,Support hmac on MQTT Azure IoT connections,BobClaerhout,3315222,Bob Claerhout,,OPEN,2022-04-21T08:57:22Z,2022-09-23T06:23:41Z,"Currently the connectivity service supports HMAC for Azure IoT hub connections via AMQP and HTTP. It would be nice if HMAC support is also added for Azure IoT hub MQTT connections.  
I don't really have an idea about how much work this is and where to start in ditto. Can somebody give me a rough estimate on this and some pointers on what is required to do this?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1371/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1371,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85B4J7h,ditto,1105239777,1371,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-04-21T13:52:54Z,2022-04-21T13:52:54Z,"I would check if our used MQTT client - [HiveMQ MQTT client](https://github.com/hivemq/hivemq-mqtt-client) - even supports that.
As this client strictly follows the MQTT protocols (and not interpretations of MQTT from arbitrary cloud providers), I have my doubts that this will work out of the box - but you'll have to try it for yourself.

I e.g. found this thread in the HiveMQ community about that topic: https://community.hivemq.com/t/connect-mqtt-broker-with-pre-signed-url/751","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85B4J7h/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1374,https://api.github.com/repos/eclipse-ditto/ditto/issues/1374,ditto,1215781744,1374,Implement alternative search index based on MongoDB wildcard index,dguggemos,15028977,Dominik Guggemos,dominik.guggemos@bosch.io,CLOSED,2022-04-26T11:00:09Z,2022-07-04T06:23:55Z,"The current implementation of the search index uses the [attribute pattern](https://www.mongodb.com/blog/post/building-with-patterns-the-attribute-pattern). This pattern allows to define indices on fields, for which the keys are arbitrary and not known in advance (like feature properties or attributes). However, this approach has some downsides: authorization subjects allowed to read a property or an attribute are copied multiple times and the whole thing structure is duplicated to allow sorting by arbitrary properties or attributes. As a result, the size of an index document is a multiple of the original thing structure, which leads to very slow updates and queries.

In order to improve this situation, we decided to leverage the [wildcard index](https://www.mongodb.com/docs/manual/core/index-wildcard/) feature introduced with MongoDB 4.2, which allows to build an index and query against fields, whose names are not known in advance. At the same time we reduce the duplication of authorization subjects in the search index document to further reduce its size. 

Initial benchmarks show that the overall size of the index documents can be reduced to 10% and at the same time the query and update performance is improved and more stable than with the current approach.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1374/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1387,https://api.github.com/repos/eclipse-ditto/ditto/issues/1387,ditto,1248049333,1387,Documentation of merge effect could be improved,inno-steffg,5442481,Steffen Gürtler,,CLOSED,2022-05-25T12:50:24Z,2022-09-23T06:22:32Z,"Dear Ditto Team,

All the documentation and especially the examples around the effect of a merge command miss the actual part, how the content of the  thing JSON has changed from previous state to the state after execution of the merge command. Even more so, as the merge should leave sibling properties (those not in its value section) unchanged, what makes the merge command so different from the create/update command.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1387/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1387,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85DyFsQ,ditto,1137203984,1387,NA,inno-steffg,5442481,Steffen Gürtler,,NA,2022-05-25T12:55:37Z,2022-05-25T12:55:37Z,"I stumpled across this issue, when I tried to find out, if the change event, that is triggered through the merge, will contain the original merge request, or the complete end state of the value, which was changed. With complete I refer to, that a merge will leave sibling parts of the JSON untouched. Will those parts be included in the event?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85DyFsQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1387,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ESWaX,ditto,1145661079,1387,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-06-03T07:13:08Z,2022-06-03T07:13:08Z,"@inno-steffg the [merge specification docs](https://www.eclipse.org/ditto/protocol-specification-things-merge.html) state:
> For all merge commands the value field is provided in [JSON merge patch](https://tools.ietf.org/html/rfc7396) format.

So instead of copying the documentation of the RFC 7396, we link to the RFC which describes exactly the effect of a ""merge"".

For your question about whether the change event contains only the original merge request or the complete state:
It only contains the field(s) contained in the merge and their values - if the complete state of the thing or of certain features is required when subscribing for change events, [enrichment via ""extraFields""](https://www.eclipse.org/ditto/basic-enrichment.html) can be configured when subscribing for (merge) events.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ESWaX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1389,https://api.github.com/repos/eclipse-ditto/ditto/issues/1389,ditto,1252359598,1389,"Get ""iothub-connection-device-id"" in Azure IoT Hub connection using AMQP 1.0",dimabarbul,2970647,Dmitriy Barbul,dimabarbul@gmail.com,CLOSED,2022-05-30T08:10:57Z,2022-05-31T09:19:28Z,"I try to integrate Azure IoT Hub with Ditto, in particular I want to send telemetry from IoT Hub to Ditto.

I created following AMQP 1.0 connection:
```json
{
	""connectionStatus"" : ""open"",
	""connectionType"" : ""amqp-10"",
	""failoverEnabled"" : true,
	""id"" : ""IoTHub-Ditto"",
	""mappingDefinitions"" : {
	   ""javascript"" : {
		  ""mappingEngine"" : ""JavaScript"",
		  ""options"" : {
			 ""incomingScript"" : ""function mapToDittoProtocolMsg(\n    headers,\n    textPayload,\n    bytePayload,\n    contentType\n) { \nif (headers[\""opType\""]) { return null;}\nvar path = \""/features/telemetry\"";\nvar  value = { \n      properties: { value : textPayload, contentType: contentType}\n};\nvar params = headers[\""device-id\""].split(\"":\"");\nif(params.length != 2) return null;\nvar namespace = params[0];\nvar deviceId = params[1];\n\nreturn Ditto.buildDittoProtocolMsg(\n        namespace ,\n        deviceId,\n        \""things\"",\n        \""twin\"",\n        \""commands\"",\n        \""modify\"",\n        path,\n        headers,\n        value\n    );\n}""
		  }
	   }
	},
	""sources"" : [
	   {
		  ""addresses"" : [
			 ""iothub-ehub-****/ConsumerGroups/$Default/Partitions/0"",
			 ""iothub-ehub-****/ConsumerGroups/$Default/Partitions/1""
		  ],
		  ""authorizationContext"" : [
			 ""nginx:ditto""
		  ],
		  ""enforcement"" : {
			 ""filters"" : [
				""{{ thing:id }}""
			 ],
			 ""input"" : ""{{ header:device-id }}""
		  },
		  ""payloadMapping"" : [
			 ""javascript""
		  ]
	   }
	],
	""uri"" : ""amqps://service:KEY@eventhub-compatible-namespace.servicebus.windows.net:5671""
}
```

What it does - it saves incoming message along with its content type to feature named ""telemetry"". Another connection will then pick up this event and process it (currently it forwards the telemetry to event hub).
Azure IoT Hub provides property ""iothub-connection-device-id"" which contains device ID that sent the message. This property is provided as message annotation on AMQP connection.

The problem is that I do not see message annotations in headers in payload mapping script or ""enforcement"" section. That's why ""device-id"" was introduced using Azure IoT Hub message enrichment feature with value ""$twin.tags.deviceId"". But this is a workaround and requires creating tag on each device.

So, how can I get device ID in this connection from message annotations?

_Note: forwarding telemetry using Azure IoT Hub message routing feature is not an option as there will be other devices connected to Ditto not through IoT Hub._","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1389/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1389,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85EAFqC,ditto,1140873858,1389,NA,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,NA,2022-05-30T08:41:41Z,2022-05-30T08:41:41Z,"Ditto does not support AMQP message annotations. [Only properties and application properties are extracted and put into the available headers.](https://www.eclipse.org/ditto/connectivity-protocol-bindings-amqp10.html#amqp-10-properties-and-application-properties)

If you need support for message annotations, this would be a topic for a pull request that could be discussed.

If you want to have a look first: This is the place where the headers are extracted currently: https://github.com/eclipse/ditto/blob/efb76399396576ad8e322a415102d26d5e2ed60c/connectivity/service/src/main/java/org/eclipse/ditto/connectivity/service/messaging/amqp/AmqpConsumerActor.java#L484","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85EAFqC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1389,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ED81b,ditto,1141886299,1389,NA,dimabarbul,2970647,Dmitriy Barbul,dimabarbul@gmail.com,NA,2022-05-31T09:19:28Z,2022-05-31T09:19:28Z,"Thanks for quick and full response.
As the original question has been answered I think we can close the ticket.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ED81b/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1390,https://api.github.com/repos/eclipse-ditto/ditto/issues/1390,ditto,1255364721,1390,Support AMQP Message Annotations when extracting values for Headers,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,CLOSED,2022-06-01T08:35:59Z,2022-10-06T13:40:38Z,"In https://github.com/eclipse/ditto/issues/1389 a need for the support of message annotations for AMQP 1.0 connections was revealed.

The values of these annotations should also be extracted and put to the headers of an ExternalMessage.

Starting point could be: https://github.com/eclipse/ditto/blob/efb76399396576ad8e322a415102d26d5e2ed60c/connectivity/service/src/main/java/org/eclipse/ditto/connectivity/service/messaging/amqp/AmqpConsumerActor.java#L484

This issue should keep track of this need and provide room for discussion.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1390/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1393,https://api.github.com/repos/eclipse-ditto/ditto/issues/1393,ditto,1260662835,1393,Inbound CloudEvents mapper for ditto,Pranshu-G,85025189,Pranshu Grover,,CLOSED,2022-06-04T06:29:33Z,2022-09-13T15:16:18Z,"Creating a custom mapper for ditto to map incoming CloudEvents to ditto protocol.
CloudEvents is a specification to describe event data in a common way [(see here)](https://github.com/cloudevents/spec).
The mapper will map incoming CloudEvents to ditto protocol.

To do so, we would:
1. Validate incoming payload(to check if it complies with the CloudEvents specification).
2. Specify a mapping specification using existing ditto classes.

[To read more](https://www.pranshugrover.com/posts/cloudeventsmapper/)

[To check out the proposal](https://docs.google.com/document/d/1Klmn7A_1Q_g5MExCzKZBBL1lPT4d2oiXSDl_cZvZNcU/edit?usp=sharing)
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1393/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1393,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85HO8tK,ditto,1195101002,1393,NA,Pranshu-G,85025189,Pranshu Grover,,NA,2022-07-26T07:17:50Z,2022-07-26T07:17:50Z,"Hi everyone. To make the CloudEvents mapper, I wanted to draft certain specifications for incoming External Message(as to what type of message should the mapper map to Ditto Protocol). For that I wanted to ask the Ditto community in what way would a mapping specification make sense with respect to Ditto. https://github.com/Pranshu-G/CloudEvents-Mapping-Specification/blob/main/Proposed-Specification.md this is an initial document which will be changed. Let me know your thoughts on how you would prefer it to look like. Thank you.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85HO8tK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1393,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85HPaCU,ditto,1195221140,1393,NA,ctron,202474,Jens Reimann,ctron@dentrassi.de,NA,2022-07-26T09:10:21Z,2022-07-26T09:10:21Z,"A few ideas:

* I think type should be something more like `org.eclipse.ditto.v2`
* Maybe it makes sense to use the `datacontenttype` to indicate it is something ditto specific?
* Maybe it makes sense to check for the `dataschema` to start with `ditto:`, like it is already done by the HTTP endpoint: https://www.eclipse.org/ditto/http-api-doc.html#/CloudEvents/post_cloudevents
* I know we discussed this, but I am unsure about putting the topic into the subject field (see below)

Questions

* I don't see how the headers are mapped in general (where does the ""correlation ID"" come from? where would other headers be stored?)
* How would a ""binary"" data section be handled? It might happen (and be valid) that a data section comes as binary or text and still is valid JSON. Would that be handled properly?

Depending on where the Ditto headers are stored, I think it might make sense to consider the cloud events only as a wrapper/envelope and not store any ditto information in its structures (outside of data). Meaning that the topic would not go into the subject. That might be a very simple approach to start with, and by evaluating the `type` field, it would be possible later on to introduce another format which does that differently.

Of course if would also be possible to just copy the cloud events extensions/attributes (header name minus the `ce`) into the Ditto headers section.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85HPaCU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1393,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85HPhsD,ditto,1195252483,1393,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-07-26T09:38:02Z,2022-07-26T09:38:02Z,"Hi.
I would have expected that the `datacontenttype`is the IANA registered content type for Ditto Protocol:
https://www.eclipse.org/ditto/protocol-specification.html#content-type

And that `data`would simply be a Ditto Protocol message.
I don't see benefits in defining another structure for the CloudEvent which needs another mapping back to Ditto Protocol.

Headers could of course be another thing where eg the protocol headers are copied over to the Ditto Headers as also @ctron mentioned.

So what is the idea of what the benefit is with the proposed structure instead of using Ditto Protocol? ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85HPhsD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1393,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85HQDKC,ditto,1195389570,1393,NA,ctron,202474,Jens Reimann,ctron@dentrassi.de,NA,2022-07-26T11:58:42Z,2022-07-26T11:58:42Z,"> I would have expected that the `datacontenttype`is the IANA registered content type for Ditto Protocol:
> https://www.eclipse.org/ditto/protocol-specification.html#content-type

Fancy! :grin:  … absolutely!","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85HQDKC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1393,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85HQEWn,ditto,1195394471,1393,NA,Pranshu-G,85025189,Pranshu Grover,,NA,2022-07-26T12:03:38Z,2022-07-26T12:03:38Z,"> Hi. I would have expected that the `datacontenttype`is the IANA registered content type for Ditto Protocol: https://www.eclipse.org/ditto/protocol-specification.html#content-type
> 
> And that `data`would simply be a Ditto Protocol message. I don't see benefits in defining another structure for the CloudEvent which needs another mapping back to Ditto Protocol.

That was the initial idea


> So what is the idea of what the benefit is with the proposed structure instead of using Ditto Protocol?

Well what I was trying to do was finding a way to maybe use CloudEvent specs more in tandem with the Ditto Protocol. However, it does look like it has no benefit per se so maybe putting a ditto protocol message inside ```data``` field is better

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85HQEWn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1394,https://api.github.com/repos/eclipse-ditto/ditto/issues/1394,ditto,1260665007,1394,Outbound CloudEvents Mapper,Pranshu-G,85025189,Pranshu Grover,,CLOSED,2022-06-04T06:41:43Z,2022-09-13T15:16:23Z,"Creating an Outbound mapper to go with #1393 
This mapper will take the payload out of ditto and (potentially) do the normalization process.

[For more check out the proposal](https://docs.google.com/document/d/1Klmn7A_1Q_g5MExCzKZBBL1lPT4d2oiXSDl_cZvZNcU/edit?usp=sharing)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1394/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1401,https://api.github.com/repos/eclipse-ditto/ditto/issues/1401,ditto,1288858941,1401,Error 500 on gateway. Got unknown Status.Failure when a 'Command' was expected.,neottil,84083982,Luca Neotti,NEOT.LUKA.89@GMAIL.COM,CLOSED,2022-06-29T14:57:55Z,2022-09-15T11:15:38Z,"My team have to install Ditto 2.4 on AWS EKS cluster. We have some limitation in the cluster, such as: we can't create secret, service account and role. We had made some changes on the official ditto's helm deployments (https://github.com/eclipse/packages/tree/master/charts/ditto/templates):
 - Change Secrets in ConfigMap
 - Use default service account by set Values.serviceAccount.create=false
 - Not deploy networkPolicy, pdb and podmonitor files

In this moment and with the specified changes, the pod is in running status.

By running this command into nginx pod we have succes response (200 OK) and the list of things, as correct that is it.
curl -v -u ditto:ditto http://release-name-ditto-nginx:8080/api/2/things

By running this command into nginx pod we have error
curl -v -u ditto:ditto http://release-name-ditto-nginx:8080/api/2/whoami

```
2022-06-29 16:07:41,517 ERROR [] o.e.d.g.s.e.a.HttpRequestActor akka://ditto-cluster/user/$i - Got unknown Status.Failure when a 'Command' was expected.
java.lang.ClassCastException: class akka.http.javadsl.server.directives.RouteAdapter cannot be cast to class org.eclipse.ditto.base.model.signals.commands.Command (akka.http.javadsl.server.directives.RouteAdapter and org.eclipse.ditto.base.model.signals.commands.Command are in unnamed module of loader 'app')
        at org.eclipse.ditto.gateway.service.endpoints.routes.AbstractRoute.lambda$doHandlePerRequest$162cd935$1(AbstractRoute.java:220)
        at akka.stream.javadsl.Source.$anonfun$map$1(Source.scala:1991)
        at akka.stream.impl.fusing.Map$$anon$1.onPush(Ops.scala:52)
        at akka.stream.impl.fusing.GraphInterpreter.processPush(GraphInterpreter.scala:542)
        at akka.stream.impl.fusing.GraphInterpreter.execute(GraphInterpreter.scala:423)
        at akka.stream.impl.fusing.GraphInterpreterShell.runBatch(ActorGraphInterpreter.scala:650)
        at akka.stream.impl.fusing.GraphInterpreterShell.init(ActorGraphInterpreter.scala:620)
        at akka.stream.impl.fusing.ActorGraphInterpreter.tryInit(ActorGraphInterpreter.scala:727)
        at akka.stream.impl.fusing.ActorGraphInterpreter.preStart(ActorGraphInterpreter.scala:776)
        at akka.actor.Actor.aroundPreStart(Actor.scala:548)
        at akka.actor.Actor.aroundPreStart$(Actor.scala:548)
        at akka.stream.impl.fusing.ActorGraphInterpreter.aroundPreStart(ActorGraphInterpreter.scala:716)
        at akka.actor.ActorCell.create(ActorCell.scala:644)
        at akka.actor.ActorCell.invokeAll$1(ActorCell.scala:514)
        at akka.actor.ActorCell.systemInvoke(ActorCell.scala:536)
        at akka.dispatch.Mailbox.processAllSystemMessages(Mailbox.scala:295)
        at akka.dispatch.Mailbox.run(Mailbox.scala:230)
        at akka.dispatch.Mailbox.exec(Mailbox.scala:243)
        at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
        at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
        at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
        at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
        at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
```

Api /things call it's the only one that works, other api return same error.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1401/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1401,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85GC2k4,ditto,1175152952,1401,NA,kalinkostashki,101703236,Kalin Kostashki,,NA,2022-07-05T14:50:28Z,2022-07-05T14:50:28Z,"Hi,

I tried reproducing your error on k3s locally. Only thing different is that I didn't change the secrets configmap.
Don't think that it should be an issue. Would you be able to provide a way to reproduce this(for example a values.yaml file)?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85GC2k4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1401,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85GDCdp,ditto,1175201641,1401,NA,neottil,84083982,Luca Neotti,NEOT.LUKA.89@GMAIL.COM,NA,2022-07-05T15:35:44Z,2022-07-05T15:35:44Z,"Hi,

We tried also to reproducing on local k8s (enbedded in docker for windows) without success. The EKS cluster is managed by customer, we don't have admin priveleges.
We tried to change ditto version from 2.4.0 to 2.3.2 and the product is working correctly, but we hope to use latest release!

Thanks","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85GDCdp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1401,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85GFxXu,ditto,1175918062,1401,NA,kalinkostashki,101703236,Kalin Kostashki,,NA,2022-07-06T08:09:10Z,2022-07-06T08:09:10Z,"Hi,

When this error happens is there any other information.
For example the /status/health endpoint of ditto?
Have any pods been restarting during these tries or maybe are in inconsistent states ?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85GFxXu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1401,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85GL0Wn,ditto,1177503143,1401,NA,neottil,84083982,Luca Neotti,NEOT.LUKA.89@GMAIL.COM,NA,2022-07-07T12:05:37Z,2022-07-07T12:05:37Z,"Hi,

The deployed pods are all in running status. During the remote debugging sessions, sometimes the gateway restarts, but if the remote debugger is disconnected, gateway stays up.
We tried to call /status/health on ditto nginx endpoint, and this is the response:
`{""label"":""roles"",""status"":""UP"",""children"":[{""label"":""expected-roles"",""status"":""UP"",""details"":[{""INFO"":{""missing-roles"":[],""extra-roles"":[]}}]},{""label"":""things"",""status"":""UP"",""children"":[{""label"":""100.89.11.216:2551"",""status"":""UP"",""children"":[{""label"":""persistence"",""status"":""UP""}]}]},{""label"":""connectivity"",""status"":""UP"",""children"":[{""label"":""100.89.2.196:2551"",""status"":""UP"",""children"":[{""label"":""persistence"",""status"":""UP""}]}]},{""label"":""concierge"",""status"":""UP"",""children"":[{""label"":""100.89.9.67:2551"",""status"":""UP""}]},{""label"":""things-search"",""status"":""UP"",""children"":[{""label"":""100.89.8.54:2551"",""status"":""UP"",""children"":[{""label"":""persistence"",""status"":""UP""},{""label"":""backgroundSync"",""status"":""UP"",""details"":[{""INFO"":{""enabled"":true,""events"":[],""progressPersisted"":"":_"",""progressIndexed"":"":_""}}]}]}]},{""label"":""policies"",""status"":""UP"",""children"":[{""label"":""100.89.8.160:2551"",""status"":""UP"",""children"":[{""label"":""persistence"",""status"":""UP""}]}]},{""label"":""gateway"",""status"":""UP"",""children"":[{""label"":""100.89.7.89:2551"",""status"":""UP""}]}]}`","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85GL0Wn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1401,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85GW6VM,ditto,1180411212,1401,NA,kalinkostashki,101703236,Kalin Kostashki,,NA,2022-07-11T13:28:55Z,2022-07-11T13:28:55Z,"Hi,

there was a migration from java 11 to 17 in ditto from versions 2.3 to 2.4.
Please check if you considered the migration notes:
https://www.eclipse.org/ditto/release_notes_240.html#migration-notes

Also are all pods upgraded to 2.4? You shouldn't have a mix of different pod versions.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85GW6VM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1401,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85GgxKO,ditto,1182995086,1401,NA,neottil,84083982,Luca Neotti,NEOT.LUKA.89@GMAIL.COM,NA,2022-07-13T09:34:13Z,2022-07-13T09:34:13Z,"Hi,

We did not migrate from 2.3, we use helm files from eclipse/packages repo. [https://github.com/eclipse/packages/tree/master/charts/ditto](https://github.com/eclipse/packages/tree/master/charts/ditto)
We are using chart version 2.5.2, and we does make some changes becouse we have to deploy chart in a ""limited"" customer platform.
Only for test we changed appVersion in Chart file from 2.4.0 to 2.3.2, and the product worked. This was just only a little test, as you said there are some migrations notes to respect.

Now we would like to try to deploy chart 2.5.2 with ditto 2.4 (with changes to make it compatible with our customer platform).
Attached the files we are trying to deploy , (some private information are blurred).
[helm.zip](https://github.com/eclipse/ditto/files/9100843/helm.zip)
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85GgxKO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1401,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85HFNY8,ditto,1192547900,1401,NA,neottil,84083982,Luca Neotti,NEOT.LUKA.89@GMAIL.COM,NA,2022-07-22T12:59:07Z,2022-07-22T12:59:07Z,"Hi,
are there any news?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85HFNY8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1401,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85HLGJp,ditto,1194091113,1401,NA,kalinkostashki,101703236,Kalin Kostashki,,NA,2022-07-25T14:03:21Z,2022-07-25T14:03:21Z,"Hi,

sorry for the delayed response.
After looking at the code where this is happening it seems very weird that a ClassCastException would come.
Without a reproducer it would be very hard to investigate further.
Also is this 2.4.0 image the official ditto image from docker hub or is it one built locally with the release-2.4 branch and pushed to your local registry?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85HLGJp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1401,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85HPhEv,ditto,1195249967,1401,NA,neottil,84083982,Luca Neotti,NEOT.LUKA.89@GMAIL.COM,NA,2022-07-26T09:35:38Z,2022-07-26T09:35:38Z,"Hi,

We use the official ditto image from docker hub.
We will try to reproduce error in local configuration. We need to know from the customer the configuration of the kubernetes cluster that he has made available to us. For the moment we know that it is a multicluster on AWS and that some kind cannot be used, for example secret and serviceAccount. I hope this information can give you some ideas in the meantime.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85HPhEv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1401,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85HVTon,ditto,1196767783,1401,NA,neottil,84083982,Luca Neotti,NEOT.LUKA.89@GMAIL.COM,NA,2022-07-27T13:31:39Z,2022-07-27T13:31:39Z,"Hi,

We have sent you the helm files that we have modified, with which unfortunately we were not able to reproduce the error locally (probally in the AWS EKS cluster where we have to deploy product there are some configuration that we don't know). We are wondering if any changes we have made to the helm files could be the cause of the error. By any change, do you would be able to tell us if any part that we have modified or removed could be the cause of the error?
As inidcate in first post, we cannot deploy network policies, pdb, pod monitor, serviceAccount, secrets.

My team and I are working on an ambitious project for an important multinational operating worldwide. Ditto must be the digital twin of hundreds of thousands of devices around the world. The company wants to use opensource products as much as possible, also contributing to the chosen projects. For our purpose, after doing some research, we think Ditto is the best choice. We would like to be able to adapt the product to the customer's platform and use version 2.4 or later.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85HVTon/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1401,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85HVbtV,ditto,1196800853,1401,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-07-27T14:00:10Z,2022-07-27T14:00:10Z,"> My team and I are working on an ambitious project for an important multinational operating worldwide. Ditto must be the digital twin of hundreds of thousands of devices around the world. 

Sounds good. 👍 

And how exactly do you expect us to solve your problem? We also do not have access to your customer's EKS cluster.
Do you expect to get paid for setting up Ditto and get free premium support here?

If you cannot reproduce locally, we also can't.
So I suggest that you try to reproduce on an AWS EKS by yourself, maybe also with the restrictions your customer did set up.

We did not do a ""diff"" of the Helm files you sent - please do this ""diff"" yourself and respond with the changes you made to the chart.
Maybe we can then get an idea of what the cause might be - however I somehow doubt that this problem is based in the Helm chart.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85HVbtV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1401,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85HV3Qw,ditto,1196913712,1401,NA,neottil,84083982,Luca Neotti,NEOT.LUKA.89@GMAIL.COM,NA,2022-07-27T15:30:48Z,2022-07-27T15:30:48Z,"Hi,
We are trying to reproduce the error locally or in an environment that we can provide to you. We do not seek premium support, but collaboration to understand where the problem lies.
Attached is the file that lists the changes made to the files.

[NOTES.md](https://github.com/eclipse/ditto/files/9200321/NOTES.md)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85HV3Qw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1401,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85IOG1C,ditto,1211657538,1401,NA,kalinkostashki,101703236,Kalin Kostashki,,NA,2022-08-11T07:49:31Z,2022-08-11T07:49:31Z,"Hi,

just for completeness I did take a look at your NOTES.md file, but can't find anything significant :(
Did you perhaps manage to preroduce/fix the issue?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85IOG1C/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1401,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85KYlct,ditto,1247958829,1401,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-09-15T11:15:37Z,2022-09-15T11:15:37Z,"When you are able to provide a reproducer, please open a new ticket.
Closing this one for now ..","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85KYlct/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1403,https://api.github.com/repos/eclipse-ditto/ditto/issues/1403,ditto,1289788051,1403,Allow access to metadata to be restricted via policies,jokraehe,12512262,Johannes Schneider,johannes.schneider@bosch.io,OPEN,2022-06-30T08:33:35Z,2022-12-19T11:59:07Z,"The current implementation doesn't support policy enforcement. Only the thing's policy is taken into account when metadata is retrieve via HTTP API and the field selector ""_metadata"".
https://github.com/eclipse/ditto/pull/1402 introduces extended access via (put|get|delete)-metadata which all do not respect policy access rights. Therefor any user with some access right on any part of a thing could e.g. query all metadata of the thing with the get-metadata header.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1403/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1404,https://api.github.com/repos/eclipse-ditto/ditto/issues/1404,ditto,1292091335,1404,Search does not work for _metadata,demetz,28460533,,,CLOSED,2022-07-02T16:33:59Z,2022-08-15T07:06:02Z,"For every datapoint we have in ditto, we also set an according `_metadata` to specify the pysical `unit` , for example:
```json
{
  ""features"":{
     ""HeatMeter"":{
        ""properties"":{
           ""status"":{
              ""energy"":0
          }
       }
    }
   },
  ""_metadata"":{
     ""features"":{
        ""HeatMeter"":{
             ""properties"":{
                  ""status"":{
                        ""energy"":{
                            ""unit"":""Wh""
                         }
                  }
              }
          }
      }
 }
}
```

I was now trying to search for all things where the metadata is not correctly specified:
```
    GET /api/2/search/things?filter=and(
      exists(features/HeatMeter/properties/status/energy),
      eq(_metadata/features/HeatMeter/properties/status/energy/unit,'Wh')
    )
```

I was expecting to find above thing, however no result was returned","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1404/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1404,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85F7ztS,ditto,1173306194,1404,NA,stmaute,17831060,Stefan Maute,,NA,2022-07-04T03:45:13Z,2022-07-04T03:45:13Z,"Hi @demetz, we are currently working on the metadata feature and will provide the search functionality with one of the next releases. At the moment Ditto does not support searching for metadata.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85F7ztS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1406,https://api.github.com/repos/eclipse-ditto/ditto/issues/1406,ditto,1292943872,1406,Create HTTP API for managing connections,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2022-07-04T10:11:31Z,2022-09-22T05:52:10Z,"Currently, connection management in Ditto can only be done via ""piggyback devops commands"":
* https://www.eclipse.org/ditto/installation-operating.html#managing-connections
* https://www.eclipse.org/ditto/connectivity-manage-connections.html

This is quite cumbersome as the response is ""wrapped"" into a JSON envelope and e.g. the actual ""statusCode"" is a field in that JSON payload instead of being reflected as real HTTP status code.

This issue proposes to add a new HTTP API in order to manage connections, e.g.:
```
POST      /api/2/connections
GET       /api/2/connections/<connectionId>
PUT       /api/2/connections/<connectionId>
DELETE    /api/2/connections/<connectionId>
POST      /api/2/connections/<connectionId>/command
GET       /api/2/connections/<connectionId>/status
GET       /api/2/connections/<connectionId>/metrics
GET       /api/2/connections/<connectionId>/logs
```

This should reflect all available Connection commands with a HTTP endpoint.
The authentication of this API should be done with the Ditto ""devops"" user - as connections currently do not forsee having a ""policyId"" and this would lead to much effort adding the ""policyId"" to connections.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1406/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1406,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85GKzo-,ditto,1177238078,1406,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-07-07T08:18:25Z,2022-07-07T08:18:25Z,"@thfries I know you are planning on also working on a ""connections"" functionality in the Ditto UI.
Please be aware that we aim to soon work on this issue, providing an HTTP API for the connections management instead of being forced to use ""devops commands"".","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85GKzo-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1406,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85GP0cG,ditto,1178552070,1406,NA,thfries,20593339,Thomas Fries,,NA,2022-07-08T04:58:37Z,2022-07-08T04:58:37Z,"Thanks for the heads-up, @thjaeckle. I'll try to keep this integration locally so it can easily replaced. But I would like to push the connections UI forward in parallel, because it is quite important.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85GP0cG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1419,https://api.github.com/repos/eclipse-ditto/ditto/issues/1419,ditto,1319868841,1419,Bulk updating/deleting things/features via search (RQL) filter,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2022-07-27T17:26:01Z,2024-06-11T05:55:28Z,"Let's assume you manage thousands, hundred of thousands things which shall now e.g. all get an additional attribute or e.g. set a property.
In such a case, it would be very cumbersome to
a) first find out all of the ids of the things to update
b) consume them as a stream of ids
c) for each found id, perform another API call applying the update

This would result in thousands or even hundred of thousands API interactions.
I think it would (with all of the tools Ditto has gathered) be rather easy to instead provide a bulk update API.

Example:
* a manufacturer changes its name from e.g. ""Raider"" to ""Twix""
* you want to adjust all things with a ""manufacturer"" attribute being ""Raider"" to now instead being ""Twix""

## Example HTTP API

```
PUT /api/2/bulk/things/attributes/manufacturer?filter=eq(attributes/manufacturer,'Raider')
HTTP payload: ""Twix""
```

Deleting things could work in a very similar way:
```
DELETE /api/2/bulk/things?filter=eq(attributes/manufacturer,'Raider')
```

## Example Ditto Protocol

```json
{
  ""topic"": ""_/_/things/twin/bulk/modify"",
  ""headers"": {},
  ""path"": ""/attributes/manufacturer"",
  ""value"": {
    ""bulkFilter"": ""eq(attributes/manufacturer,'Raider')""
    ""bulkValue"": ""Twix""
  }
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1419/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1419,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86AvKqZ,ditto,2159848089,1419,NA,Korakbhakta02,67550363,,,NA,2024-06-11T05:51:43Z,2024-06-11T05:51:43Z,HI @thjaeckle is the bulk updating/deleting service present currently in ditto?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86AvKqZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1419,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86AvMKT,ditto,2159854227,1419,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-06-11T05:55:27Z,2024-06-11T05:55:27Z,"No, the issue is still open. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86AvMKT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1420,https://api.github.com/repos/eclipse-ditto/ditto/issues/1420,ditto,1319880705,1420,Bulk sending messages to things/features via search (RQL) filter,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2022-07-27T17:38:15Z,2022-07-27T17:38:15Z,"Similar to #1419 it could be quite easy to formulate and perform a ""bulk"" message sending API call which:
a) selects a set of targeted things or features
b) sends the same message to all of them

Example:
* toggle all of the ""switchable"" features currently being ""on"" of things in a home (""leaving home"" use case)

## Example HTTP API

```
POST /api/2/bulk/features/inbox/messages/toggle?filter=
  and(
    eq(/attributes/homeName,'My-At-Home'),
    eq(definition,'https://eclipse.github.io/ditto-examples/wot/models/switchable-1.0.0.tm.jsonld'),
    eq(properties/on,true)
  )
```

This API would need a way to search on features and not on things.
And the filter would have to be able to address both things payload (maybe in an absolute way like `/attributes/homeName`) and relative feature payload (maybe in a relative way like `definition` or `properties/on`).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1420/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1421,https://api.github.com/repos/eclipse-ditto/ditto/issues/1421,ditto,1319894175,1421,Provide APIs to search for features,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2022-07-27T17:52:24Z,2023-01-15T14:17:45Z,"After having formulated the 2 ""bulk API"" ideas in #1419 and #1420 I think it becomes quite obvious that in order for those to work Ditto would need an additional API to ""search"" for features.

Currently Ditto can search and find things, e.g. via HTTP API:
```
GET /api/2/search/things?filter=eq(attributes/manufacturer,'Eclipse')&fields=thingId
response (list of found thingIds):
[
  {""thingId"":""org.eclipse.ditto:thing-1""},
  {""thingId"":""org.eclipse.ditto:thing-3""},
  {""thingId"":""org.eclipse.ditto:thing-3""}
]

GET /api/2/search/things?filter=eq(attributes/manufacturer,'Eclipse')
--> returns as convenience the actual payload of all found things
```

It might however be sometimes more relevant to find features instead. This could be an example HTTP API for that:
```
GET /api/2/search/features?filter=eq(properties/on,true)&fields=thingId,featureId
response (list of found thingId + featureId combinations):
[
  {""thingId"":""org.eclipse.ditto:thing-1"",""featureId"":""myFeature-0815""},
  {""thingId"":""org.eclipse.ditto:thing-3"",""featureId"":""myFeature-0815""},
  {""thingId"":""org.eclipse.ditto:thing-3"",""featureId"":""myFeature-0815""}
]
```

The response of such a search would of course have to contain:
* matched combination of thingId + featureId

As convenience the payload of the matched features could be returned, **e.g.** in such a way:
```json
[{
  ""thingId"": ""org.eclipse.ditto:thing-1"",
  ""featureId"": ""myFeature-0815"",
  ""definition"": [
  ],
  ""properties"": {
  },
  ""desiredProperties"": {
  }
}]
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1421/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1421,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85SbG8w,ditto,1382838064,1421,NA,Abhijeetmishr,43075376,Abhijeet Mishra,abhijeetmishra498@gmail.com,NA,2023-01-14T16:11:28Z,2023-01-14T16:11:28Z,@thjaeckle can I pick up this & can you guide me through it.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85SbG8w/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1421,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ScTHU,ditto,1383150036,1421,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-01-15T13:22:46Z,2023-01-15T13:22:46Z,"> @thjaeckle can I pick up this & can you guide me through it.

@Abhijeetmishr could you please explain your motivation to work on this rather complex topic?
Are you missing that particular feature from Ditto?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ScTHU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1421,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ScV3L,ditto,1383161291,1421,NA,Abhijeetmishr,43075376,Abhijeet Mishra,abhijeetmishra498@gmail.com,NA,2023-01-15T14:13:32Z,2023-01-15T14:13:32Z,@thjaeckle maybe I could have interpreted this issue wrongly I thought that we have to enhance existing API to support multiple parameter very likely I may me wrong because I am complete newbie to open source and ditto as well.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ScV3L/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1434,https://api.github.com/repos/eclipse-ditto/ditto/issues/1434,ditto,1332943799,1434,Different results in /search/things and /search/things/count requests,w4tsn,2271467,Alexander Wellbrock,a.wellbrock@mailbox.org,CLOSED,2022-08-09T09:02:19Z,2022-09-01T15:24:46Z,"Ditto Version: 2.4

I'm observing some strange behavior of the search API: doing a request with or without filters to the /count endpoint yields a different number than the result of the /search query (using the same request, only different endpoints).

**Example 1:**

I have a realm with roughly 2200 things in about 150 policies. Maybe it's related to permissions?

I see that although the count returns around 2200, the first page of the /search request with a `size(200)` option only returns 191 items. The next page then has 200 items. If I inverse the sort order to descending, the first page has 200 results.

**Example 2:**

In this example what's notable is that inversing the sort order does not change the number of results in the first page. I'm not sure yet why this is.

```
GET /search/things/count
=> 1074
GET /search/things
=> 25
GET /search/things&option=size(25)
=> 25
GET /search/things&option=size(150)
=> 145
GET /search/things&option=size(200)
=> 191
GET /search/things&option=size(200)&sort(-)
=> 191
```
**More testing:**

It seems that the /search/things endpoint gathers some things it does not return. It computes a bucket of 200 things but skips certain one of them. I'm currently investigating what those things are and which differences they have to the ones that are included in the search result.

The deprecated `limit` option behaves the same as `size,cursor`

**Reproduction:**

I was not yet able to reproduce this on the sandbox instance. So unfortunately I do not have a reproducer just yet. Any help in debugging / coming up with a repro is appreciated.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1434/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1434,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ILhWh,ditto,1210979745,1434,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-08-10T16:46:19Z,2022-08-10T16:46:19Z,"We also noticed that for Ditto 2.x versions there could be situations where inconsistencies in the search can occur.
That was due to the nature of the chosen ""attribute pattern"" (together with only partially updating the index by doing array ""splices"", etc.) we applied in the MongoDB for building the generic search index.
Among other performance issues of the ""old search"" we fixed this problem with the new ""wildcard index"" approach in #1374

So this should be fixed for Ditto 3.0.0 as well.
Backporting the fix to 2.4 is unfortunately not possible as the complete DB schema of the search changed - that's also one of the reasons for a new major version of Ditto.

If this helps, we can soon offer a 3.0.0-M1 version - the 3.0.0 release will probably done in a 1-2 months timeframe.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ILhWh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1434,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Jk_z1,ditto,1234435317,1434,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-09-01T15:24:45Z,2022-09-01T15:24:45Z,"Definitely fixed in 3.0, therefore closing the issue ..","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Jk_z1/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1441,https://api.github.com/repos/eclipse-ditto/ditto/issues/1441,ditto,1340099401,1441,"Adjust Ditto Explorer UI to use Ditto ""/connections"" HTTP endpoint for managing connections",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2022-08-16T09:54:09Z,2022-09-22T07:06:16Z,"With #1406 Ditto will add a separate HTTP endpoint for managing connections (which had to be done via DevOps / ""piggyback commands"" before).

The current Ditto Explorer UI does use the ""old piggyback approach"" - and does not work with the current ""main"" branch of Ditto (which is about the be released as Ditto 3.0) because the format of the ""piggyback commands"" is simplified with Ditto 3.0).

The UI should:
* provide an option (e.g. per environment configuration) to run in either ""Ditto 2.x mode"" or in ""Ditto 3.x mode""
* switch the ""connections"" functionality for the ""Ditto 3.x mode"" to use the connections HTTP endpoints","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1441/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1443,https://api.github.com/repos/eclipse-ditto/ditto/issues/1443,ditto,1341599300,1443,Restrict Entity-Ceation using Helm Chart,,,,,CLOSED,2022-08-17T11:10:09Z,2022-09-01T15:12:41Z,"I'm trying to use ""Restrict Entity-Creation"" like mentioned [here](https://www.eclipse.org/ditto/installation-operating.html#restricting-entity-creation)

I'm using the official [Helm Chart](https://github.com/eclipse/packages/tree/master/charts/ditto) to run ditto. 

I'm not sure how to integrate the entity-creation config. 

What I've tried so far issSetting the config via systemProps. I was not sure which service is responsible for restricting enity creation. So I added it to all services.

values.yaml
```yaml
gateway:
  systemProps:
      - ""-Dditto.entity-creation.grant.0.auth-subjects.0=admins:role/admin""
policies:
  systemProps:
      - ""-Dditto.entity-creation.grant.0.auth-subjects.0=admins:role/admin""
concierge:
  systemProps:
      - ""-Dditto.entity-creation.grant.0.auth-subjects.0=admins:role/admin""
things:
  systemProps:
      - ""-Dditto.entity-creation.grant.0.auth-subjects.0=admins:role/admin""
connectivity:
  systemProps:
      - ""-Dditto.entity-creation.grant.0.auth-subjects.0=admins:role/admin""
```

This doesn't work.

I've also tried adding `- ""-Dditto.entity-creation.revoke.0={}""` and hoped this would revoke entity creation for all users. Had no success on this. 

The helm chart does not supply any options to add configuration files to the services. So also no luck with this. 

Do you have any Tipps?


Edit:

I've modified the helm chart in order to add a `ditto-entity-creation.conf` into  the working directory (opt/ditto) of each service. 

ditto-entity-creation.conf:
```
ditto.entity-creation {
  grant = [
      {
        resource-types = [],
        namespace = []
        auth-subjects = [""admins:*""]
      }
  ]
  revoke = [
      # same as ""grant"", but rejecting requests which already passed ""grant""
  ]
}
```

Doesn't help. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1443/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1443,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85IshF-,ditto,1219629438,1443,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-08-18T15:24:05Z,2022-08-18T15:24:05Z,"Hi @emcellsoft 

Thanks for trying out Ditto.
You are right - with the linked documentation at 
https://www.eclipse.org/ditto/installation-operating.html#restricting-entity-creation
you won't be able to configure the entity-creation correctly.

That is the latest ""development"" documentation (also as stated in the upper left of the site) and we recently adjusted for the upcoming Ditto 3.0 the configuration.
For Ditto 2.4 (which you are most likely using), please find the documentation here:
https://www.eclipse.org/ditto/2.4/installation-operating.html#restricting-entity-creation

You only have to configure the system-property for the ""concierge"" service (which will be removed from Ditto 3.0 - that's why we had to adjust the configuration as well) - and you did it already correctly:
```yaml
concierge:
  systemProps:
      - ""-Dditto.concierge.enforcement.entity-creation.grant.0.auth-subjects.0=admins:role/admin""
```

That will cause that only a user which somehow received the ""auth subject"" `""admins:role/admin""` may create ""policies"" and ""things"".","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85IshF-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1443,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Iy6kt,ditto,1221306669,1443,NA,,,,,NA,2022-08-20T12:32:40Z,2022-08-20T12:32:40Z,Thank you! Will try it on monday!,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Iy6kt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1446,https://api.github.com/repos/eclipse-ditto/ditto/issues/1446,ditto,1342638503,1446,"When merging a feature, the normalized payload does not contain full feature",BobClaerhout,3315222,Bob Claerhout,,CLOSED,2022-08-18T06:52:06Z,2022-09-07T07:06:04Z,"When performing a change and the actual change is also part of what's in the extraFields, the normalized payload contains the actual change. When performing the change with a merge, it's possible that the normalized payload misses information (since you might have more data in the feature compared to what you actually update). In our case, we actually need the data which is not updated (and thus already present in the feature even before the update).
See example below:
Current object before update in ditto:
```
{
    ""thingId"": ""the.namespace:the-thing-id"",
    ""policyId"": ""the.namespace:the-policy-id"",
    ""definition"": ""digitaltwin:DigitaltwinExample:1.0.0"",
    ""attributes"": {
      ""location"": ""Kitchen""
    },
    ""features"": {
      ""transmission"": {
         ""properties"": {
           ""cur_speed"": 90,
           ""max_speed"": 100
         }
       }
    }
}
```
Update:
path: `/features/transmission`
Type: merge
content:
```
{
    ""properties"": {
        ""cur_speed"": 80,
    }
}
```
Topic on connection:
`/_/things/twin/events?extraFields=features`

Result, non-normalized. Contains all data, but not normalized:
```
{
  ""topic"": ""the.namespace/the-thing-id/things/twin/events/merged"",
  ""headers"": {
    ...
  },
  ""path"": ""/features/transmission"",
  ""value"": {
    ""definition"": [
      ""idigitaltwin:DigitaltwinExample:1.0.0""
    ],
    ""properties"": {
        ""properties"": {
            ""cur_speed"": 80,
        }
    }
  },
  ""extra"": {
    ""features"": {
        ""transmission"": {
            ""properties"": {
                ""cur_speed"": 80, <-- updated
                ""max_speed"": 100
            }
        }
    }
  }
}
```
Result, normalized. Contains updated feature but misses already existing parts of the feature
```
{
    ""thingId"": ""the.namespace:the-thing-id"",
    ""policyId"": ""the.namespace:the-policy-id"",
    ""definition"": ""digitaltwin:DigitaltwinExample:1.0.0"",
    ""attributes"": {
      ""location"": ""Kitchen""
    },
    ""features"": {
      ""transmission"": {
         ""properties"": {
           ""cur_speed"": 80
           <!-- max_speed missing -->
         }
       }
    }
}
```
I would expect max_speed to be present in the normalized object.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1446/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1446,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85IrtIC,ditto,1219416578,1446,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-08-18T12:12:22Z,2022-08-18T12:12:22Z,"Thanks @BobClaerhout for the detailed bug report and steps to reproduce.
We will look into it.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85IrtIC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1449,https://api.github.com/repos/eclipse-ditto/ditto/issues/1449,ditto,1344014509,1449,"Select Ditto Explorer UI ""environment"" via query parameter",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2022-08-19T06:42:07Z,2022-10-11T06:34:57Z,"For the Ditto Sandbox (for example) it would be really helpful if one could provide a query parameter when opening the Ditto Explorer UI specifying which ""environment"" to use.

A similar feature is possible for Swagger-UI where you can define multiple ""definitions"" (OpenAPI specs the Swagger-UI should show in its dropdown) and specify the initial one to load via a query parameter.
Swagger-UI describes its options [here](https://swagger.io/docs/open-source-tools/swagger-ui/usage/configuration/) (`urls` and `urls.primaryName` are the ones I thought about).

Maybe it's worth thinking about whether the Ditto UI ""templates"" should also be available (and referencable) as separate files on a webserver similar to Swagger-UI `urls`.

@thfries what do you think about this?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1449/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1449,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85IxUmw,ditto,1220889008,1449,NA,thfries,20593339,Thomas Fries,,NA,2022-08-19T16:53:57Z,2022-08-19T16:53:57Z,"First of all: yes, I am also annoyed to need to select the right environment all time 😉

The solution in my mind was to store the last environment of a user in the browser cache - like with all other user specific settings. The Swagger-UI solution looks powerful. So you are thinking to allow to configure all environments and the default environment from outside? Interestingly enough Swagger does not save any user or browser specific data.

I think a user should be able to change his personal settings directly in the UI. A way to share the settings of one user with others is also very useful, but I don't see spontaneously a way to combine both approaches (one idea was to store the environment configuration in a thing for each environment but that is another completely different approach).

You see, I am a bit confused now. Need to think about it and some further discussion would be helpful, too. Thanks.


","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85IxUmw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1449,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85IzpXD,ditto,1221498307,1449,NA,thfries,20593339,Thomas Fries,,NA,2022-08-21T08:30:49Z,2022-08-21T08:30:49Z,"Some more thoughts (hope I am not overcomplicating things):
* The environment templates should be moved to the templates folder (they are currently in the environments.js)
* The environment templates are loaded only the very first time on one browser instance. As soon as a user does any change on any environment (e.g. just authenticates), all environments are taken from the browser store. You will never get an update on the templates again until you clear your browser cache. That is not good. At least each of the environments should be stored independently

Next to that an environment stores different types of data:

1. environment configuration itself (url, solutionId, namespace, ditto-version, etc.): not user specific, should be shared
2. Authorization header (to switch the headers when you switch the environment): should NOT be shared.
3. Fieldlist: the field definitions should be shared with others, while the selection and order of columns is user specific
4. Filterlist: user specific but may also be shared
5. pinned things: very user specific
6. Message Templates: similar to field list, these are not user specific

So as a first solution idea:
* Separate 1 from 2 - 6
* 1 can be configured via url parameter:
  * `environmentsURL` -> link to a json with all environments. If not given, the file from templates folder will be used
  * `primaryEnvironmentName` -> as desired
  * can not be changed by the user
* 2 - 6 will still be stored per browser (referring with the environmentName)
* A user can create additional environments that are stored per browser

What is missing:
* ""my last environment"" stored in the browser cache. We could still do that and just override the primaryEnvironmentName?
* All environments are still in one json - so no way to specify `environmentURLs`
* A possibility to share 3,4 and 6 (similar like in Jira or Postman)
* 2 should be handled by the browser pw manager (Chrome is giving a warning there). Don't know the details here.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85IzpXD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1449,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85I3ESd,ditto,1222395037,1449,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-08-22T13:52:54Z,2022-08-22T13:52:54Z,"I like where your thoughts are headed to.

My thoughts regarding the shared vs. local environments:
* maybe a user ""modified"" environment can ""link to"" the URL of the environment it was created from
   * and a user modified environment could overwrite any fields/config from the shared environment
* the 2 environments (""shared"" and local from browser storage) are merged with the local one having precedence
* that way, changes to the ""shared"" environment could be applied, if not explicitly overwritten

Regarding storing the authentication information in the local storage:
I think we must rethink that ...
I did not think about this previously, but this raises some security concerns.

The local browser storage can be accessed by every other webapp running on the same domain, right?
So for the Ditto-UI deployed on ""eclipse.github.io/ditto"" this would mean that each other GitHub pages web-app can access them (similar to cookies).

It's ok when the browser wants to store the credentials - via the browser mechanism.
But the Ditto UI should not persist credentials by itself.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85I3ESd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1449,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85L8gnW,ditto,1274153430,1449,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-10-11T06:34:52Z,2022-10-11T06:34:52Z,Closed via #1501 ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85L8gnW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1458,https://api.github.com/repos/eclipse-ditto/ditto/issues/1458,ditto,1347461935,1458,Ditto doesn't reply to Kafka topic when multiple commands are sent,hfcr2017,25461777,,,CLOSED,2022-08-23T07:21:53Z,2022-09-28T08:27:06Z,"I'm currently running a test where multiple messages are sent to Ditto and I expected the responses back. It works for around 70 - 80% of messages that I sent, but some messages are just missing.

The integration is as follows:

1. I put multiple messages in a Kafka topic, namely, `main.ditto.topic`.
2. The messages are fetched by a connection that I have configured in Ditto.
3. Ditto should send the response to a different Kafka topic, namely, `response.ditto.topic`.

Here's how I have currently configured the connection:

```
{
    ""connectivity"": {
        ""ditto-connectivity"": {
            ""type"": ""connectivity.responses:retrieveConnection"",
            ""status"": 200,
            ""connection"": {
                ""id"": ""my-connector"",
                ""name"": null,
                ""connectionType"": ""kafka"",
                ""connectionStatus"": ""open"",
                ""uri"": ""my.uri"",
                ""sources"": [
                    {
                        ""addresses"": [
                            ""main.ditto.topic""
                        ],
                        ""consumerCount"": 1,
                        ""qos"": 1,
                        ""authorizationContext"": [
                            ""my:auth:context""
                        ],
                        ""headerMapping"": {
                            ""reply-to"": ""response.ditto.topic"",
                            ""response-required"": ""true"",
                            ""timeout"": ""1800s""
                        },
                        ""payloadMapping"": [
                            ""Ditto""
                        ],
                        ""replyTarget"": {
                            ""address"": ""response.ditto.topic"",
                            ""headerMapping"": {},
                            ""expectedResponseTypes"": [
                                ""response"",
                                ""error"",
                                ""nack""
                            ],
                            ""enabled"": true
                        }
                    }
                ],
                ""targets"": [],
                ""clientCount"": 1,
                ""failoverEnabled"": true,
                ""validateCertificates"": true,
                ""processorPoolSize"": 1,
                ""specificConfig"": {
                    ""saslMechanism"": ""plain"",
                    ""bootstrapServers"": ""bootstrap-server""
                },
                ""tags"": []
            }
        }
    }
}
```

I have tried other many configurations: adding `twin-persisted`, removing `reply-to`, etc. But none of them have made any difference.

The messages that I have in `main.ditto.topic` are `modify` commands, like this:

```
{
  ""path"": ""/the/path"",
  ""headers"": {
    ""correlation-id"": ""the-correlation-id""
  },
  ""topic"": ""namespace/mything/things/twin/commands/modify"",
  ""value"": [
    {
      ""my-load"": ""OK""
    }
  ]
}
```

So I expected to see some kind of response (as it happens for other things. I can see some information logged in `ditto-connectivity`, but there is nothing on the `response.ditto.topic`. Here's what I see in the logs:

```
DEBUG [c47e593d-52ce-49f9-a5ad-9ce7b51bbdbc] o.e.d.c.s.m.InboundMappingSink  - Handling ExternalMessage: UnmodifiableExternalMessage
```
and 

```
DEBUG [] o.e.d.c.s.m.InboundDispatchingSink  - OnMapped from <Actor[akka://ditto-cluster/system/sharding/connection/8/ddm-thing-fetcher/pa/$M/c1/kafkaConsumer-0-main.ditto.topic-02/$7q#2140000697]>: <InboundMappingOutcomes [outcomes=[MappedOutcome[mapperId=Ditto,mapped=MappedInboundExternalMessage [externalMessage=UnmodifiableExternalMessage
```

However, I don't see anything related to the response. It looks like Ditto didn't try to reply at all.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1458/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1458,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85JJDrK,ditto,1227111114,1458,NA,danielsularea,5775961,Daniel S.,,NA,2022-08-25T11:05:07Z,2022-08-25T11:05:07Z,+1 I am also experiencing a similar issue.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85JJDrK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1458,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85JJNp3,ditto,1227151991,1458,NA,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,NA,2022-08-25T11:47:44Z,2022-08-25T11:47:44Z,"Hi @hfcr2017 ,

Thanks for reaching out. Before starting to dig into the problem I would like to make sure I got everything right.

> It works for around 70 - 80% of messages that I sent, but some messages are just missing.

Do those 70-80% relate to your described use case? Or are there other messages included?
Im asking because of

> It looks like Ditto didn't try to reply at all.

Is this meant for a single message that did not receive a response? Or for the described use case as a whole?

Also: have you tried to [enable connection logging](https://www.eclipse.org/ditto/connectivity-manage-connections.html#enable-connection-logs) and [retrieve them](https://www.eclipse.org/ditto/connectivity-manage-connections.html#retrieve-connection-logs) after you ran your test?

The [connection metrics](https://www.eclipse.org/ditto/connectivity-manage-connections.html#retrieve-connection-logs) could also be of interest to track this issue down.

Please note that the maximum timeout for messages in ditto is 60s. So maybe reducing the timeout from 1800s to 60s could already solve the problem, but I still would expect at least an error response indicating this. Also the reply-to header should not be required, but also doesn't hurt.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85JJNp3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1458,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85JONkh,ditto,1228462369,1458,NA,hfcr2017,25461777,,,NA,2022-08-26T13:04:21Z,2022-08-26T13:04:21Z,"Hi @Yannic92 ,

Thanks for your reply. I have updated the connection to use `60s` as timeout. I also have some new findings.

Regarding

> Do those 70-80% relate to your described use case? Or are there other messages included?

I can add some more details to the type of test that I'm doing. So we send, let's say, 10000 `modify` commands to Ditto in a given point of time. Each one has its own identifier. They are read by the connector and in case that the thing doesn't exist, we expect that Ditto will send a 404 response message to `response.ditto.topic`. So in the worst case where none of the things can be found, we expect to receive 10000 responses with 404 response code. However, we receive only 70 to 80% of these messages. That's 7000 - 8000 messages. For the rest, there is no response at all in the Kafka topic.

I have enabled the connection logging but there is not much of information, as given the amount of messages, the logs retrieved are just a small amount.

Now, I have increased the amount of `ditto-connectivity` instances (to 6) and I can see a general improvement. I also increased the `clientCount` to 6 in the connection configuration. I got 100% response messages. So now my feeling is that Ditto drops some messages when it can't handle them. What do you think? How can I prove this point?

Moreover, is there any relation that you might already know between the amount of instances that I need given an amount of messages?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85JONkh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1458,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85JOiqe,ditto,1228548766,1458,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-08-26T14:18:33Z,2022-08-26T14:18:33Z,"Ah, that kind of information was missing for us :)

Yes, Ditto (must) drops messages when we can not get them quickly to Kafka, see the config:
https://github.com/eclipse/ditto/blob/fc6f942b8c0c6df1ffb903116f9dc45e9c613829/connectivity/service/src/main/resources/connectivity.conf#L545-L552

If Ditto wouldn't drop, it would at some point crash with out-of-memory errors.

However, to mitigate that, you can configure the ""consumer"" to throttle when receiving messages from Kafka (which is deactivated by default):
https://github.com/eclipse/ditto/blob/fc6f942b8c0c6df1ffb903116f9dc45e9c613829/connectivity/service/src/main/resources/connectivity.conf#L436-L462

Or you can scale out via ""clientCount"" (like you did) - or you can increase the ""producer"" queue size how much messages Ditto will queue.

I am however wondering: Is this a real scenario?
That a Kafka already has 10.000 messages persisted which Ditto should process when connecting to it?
Or do you just use that to easily simulate a load test? Because that is not a realistic scenario, or is it? Messages are processed all the time and such ""huge"" batches should not occur.
If they do, then yes .. Ditto must be probably scaled as well.

> Moreover, is there any relation that you might already know between the amount of instances that I need given an amount of messages?

That depends on so many factors (message size, involved optional payload mapping, assigned CPUs of the connectivity instances, performance of the network, scaling of other Ditto services, performance of the database, etc.).
So: ""it depends"". ;)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85JOiqe/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1458,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85JPBmz,ditto,1228675507,1458,NA,hfcr2017,25461777,,,NA,2022-08-26T16:05:15Z,2022-08-26T16:05:15Z,"Hi @thjaeckle,

Thanks a lot for the information! To answer your question 

> I am however wondering: Is this a real scenario?

Yeah, it is a possible scenario that we might face when processing updates from thousands of devices that will come in a batch.

I will try enabling the `throttling` and will come back to you as soon as possible.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85JPBmz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1458,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85KNVre,ditto,1245010654,1458,NA,hfcr2017,25461777,,,NA,2022-09-13T07:28:45Z,2022-09-13T07:28:45Z,"Hi @thjaeckle,

The `throttling` works good and it has helped us to avoid that messages get lost, however, we have struggled quite a lot with setting the correct values of KAFKA_CONSUMER_THROTTLING_LIMIT, KAFKA_PRODUCER_QUEUE_SIZE and the number of `ditto-connectivity` instances that we need to have. I understand that there is no other way to configure this parameters but with manual tuning, is that correct?

Now, we have also faced some issue where I can't find things if I use the `/search/things` API but I do find them if I use the `thing` API with the specific ID. Why is this even possible? ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85KNVre/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1458,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85KNmUj,ditto,1245078819,1458,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-09-13T08:33:31Z,2022-09-13T08:33:31Z,"> I understand that there is no other way to configure this parameters but with manual tuning, is that correct?

Yes, correct. Do you have an idea how an automatic tuning of these parameters could look like? We're always open for improvement suggestions. 

> Now, we have also faced some issue where I can't find things if I use the `/search/things` API but I do find them if I use the `thing` API with the specific ID. Why is this even possible? 

This is possible because the search needs its own database / Mongo collection to put a search index over all the things, including their permissions based on the used policies.
The search provides only eventual consistency. 

In the upcoming Ditto 3.0 this search index will massively improve in both performance and consistency.
Also fixing bugs in Ditto 2.x regarding skipped search index updates.
As this new search in Ditto 3.0 also required to change the database schema, backporting to Ditto 2.x is unfortunately not possible.

Ditto 3.x will be released this month. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85KNmUj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1458,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85LIqmn,ditto,1260562855,1458,NA,Yannic92,5593674,Yannic Bürgmann,yannic.klem@bosch.io,NA,2022-09-28T08:27:05Z,2022-09-28T08:27:05Z,"Since the original question about missing responses seems to be solved , I close this issue.
If you (@hfcr2017) or someone else is interested in a discussion about the improvement of ditto config tuning, this would be worth another issue. Feel free to raise a new issue regarding the topic.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85LIqmn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1459,https://api.github.com/repos/eclipse-ditto/ditto/issues/1459,ditto,1347550533,1459,Remove deprecated limit option from search API,stmaute,17831060,Stefan Maute,,OPEN,2022-08-23T08:29:39Z,2022-09-28T08:26:54Z,"As we already have deprecated the limit option for quite some time see [docu](https://www.eclipse.org/ditto/basic-search.html#rql-paging-deprecated), we will remove all code related to this option from the Ditto code base.

With Ditto version 4.0.0 the limit option will no longer be possible to use at the Search API.

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1459/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1463,https://api.github.com/repos/eclipse-ditto/ditto/issues/1463,ditto,1351880670,1463,Fix that adding custom Java MessageMappers to Ditto via classpath is no longer possible,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2022-08-26T07:37:41Z,2022-09-26T12:30:31Z,"Ditto's [documentation of custom Java based implementation for mappers](https://www.eclipse.org/ditto/connectivity-mapping.html#custom-java-based-implementation) states that a custom Java implementation can be added for adding a performant, Java based mapping.

That however no longer works as the MessageMappers are annotated with ClassIndex annotations which are scanned during compile-time and added to a registry of all known mappers.

This cannot be altered with classpath extension.

In order to fix that, we could use our new `DittoExtensionPoint` mechanism to support adding custom mappers via classpath.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1463/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1477,https://api.github.com/repos/eclipse-ditto/ditto/issues/1477,ditto,1364651286,1477,Migrate Ditto to use Apache Pekko instead of Akka after Akka's change to BSL license,jekkel,701091,Jörg Eichhorn,,CLOSED,2022-09-07T13:17:10Z,2023-09-18T15:49:12Z,"I just got notified about akka changing the license to ""Business Source License (BSL) v1.1"" which is probably incompatible with Eclipse Public License 2.0 in general. The BSL license ""automatically"" reverts back to Apache 2 (individually for each released work) after 3 years.

To me it seems this blocks any updates to akka dependencies for 3 years because Ditto cannot be released under EPL while linking to BSL licensed binaries.

There's a paragraph about OSS projects using Akka:

> If you are running an OSS project using Akka, please contact us at [akka-license@lightbend.com](mailto:akka-license@lightbend.com?subject=Akka License) and we will do our best to continue to support your project.

Reference: https://www.lightbend.com/blog/why-we-are-changing-the-license-for-akka
Respective change in akka repository: https://github.com/akka/akka/pull/31561","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1477/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1477,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85J4CSe,ditto,1239426206,1477,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-09-07T13:56:06Z,2022-09-07T13:56:06Z,"Hi @jekkel 

Yes, we also read the ""news"" today .. very sad to see that decision, even if I can somehow understand it.
Investing so many resources as Lightbend did over the years in Akka and (probably) getting very little ""back"" from most of the commercial users .. that's one of the fundamental things which are broken about FOSS .. :/

You are right, the Eclipse Ditto project will probably be stuck on Akka 2.6.20 for the time being. Maybe a community driven fork of Akka with Apache-2.0 license will be done, let's see.
The good news is that Akka 2.6 is very mature and stable - in the past we almost never hat the ""urge"" to update to a newer Akka version.

However - there could some day of course be a security issue which would require a patch.

Do you mean that the Eclipse Ditto project should apply for such an ""Additional Use Grant"" for being allowed to use latest Akka artifacts with BSL 1.1?
I currently can't imagine how this can work in practice, to be honest, as the new license is no OpenSource license.

Users of Ditto do not get in touch with Akka at all - and the Eclipse Ditto project ""gave back"" to the OSS community by making it available as OpenSource and not keeping it behind closed doors.
However - Ditto is not a ""hobby project"" and mainly used in commercial setups, so I wonder if commercial Ditto users could use Akka underneath ""for free"".","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85J4CSe/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1477,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85J4KB9,ditto,1239457917,1477,NA,jekkel,701091,Jörg Eichhorn,,NA,2022-09-07T14:20:54Z,2022-09-07T14:20:54Z,"> However - Ditto is not a ""hobby project"" and mainly used in commercial setups, so I wonder if commercial Ditto users could use Akka underneath ""for free"".

I agree. But the same is likely to be true for users of the Play Framework which is granted commercial use.

For the sake of completeness:
There is this other FOSS project residing under the Eclipse umbrella called [Vert.x](https://vertx.io/) which is somewhat similar to several aspects of Akka:
* reactive multi-actor model
* distributed actors with location transparency through an event bus
* mature ecosystem of libraries integrating into the framework

AFAIK [Eclipse Hono](https://www.eclipse.org/hono/) is already using it under the hood through [Quarkus](https://github.com/quarkusio).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85J4KB9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1477,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85J4OfF,ditto,1239476165,1477,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-09-07T14:35:26Z,2022-09-07T14:35:26Z,"> There is this other FOSS project residing under the Eclipse umbrella called [Vert.x](https://vertx.io/) which is somewhat similar to several aspects of Akka

I assume a rewrite would take dozens of person years of time.
And I am quite sure that not everything which Akka (e.g. in clustering/sharding/ddata/persistence/streams) offers can be replaced with just Vert.x.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85J4OfF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1477,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85J4d5n,ditto,1239539303,1477,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-09-07T15:26:18Z,2022-09-07T15:26:18Z,"I contacted the Lightbend team about the mentioned ""Additional Use Grant"".
Will keep you posted about the response.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85J4d5n/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1477,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85KyIki,ditto,1254656290,1477,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-09-22T07:50:21Z,2022-09-22T07:50:21Z,"We did not yet receive an answer from Lightbend regarding the ""Additional Use Grant"".
I however fear that even with that grant it is very difficult to include BSL licensed artifacts in an OpenSource project.

For the time being we would like to state the following:
* Eclipse Ditto will stay on Apache-2.0 licensed Akka 2.6
* for the next year Akka 2.6 will receive security and critical bugfixes, see [FAQ](https://www.lightbend.com/akka/license-faq)
   * > Will critical vulnerabilities and bugs be patched in 2.6.x?
Yes, critical security updates and critical bugs will be patched in Akka v2.6.x under the current Apache 2 license until September of 2023.
* after that, Ditto will mitigate encountered critical security bugs in Ditto's codebase, as Ditto completely ""hides"" its Akka usage (e.g. in its Client APIs)
* if a community driven fork of Akka is done, Ditto will move to using the fork","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85KyIki/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1477,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85MOIki,ditto,1278773538,1477,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-10-14T09:53:10Z,2022-10-14T09:53:10Z,"In the meantime there is a proposal for a fork of the Akka project under the Apache Foundation:
https://cwiki.apache.org/confluence/display/INCUBATOR/PekkoProposal

If this project is accepted and does its first release, I suggest to move the Ditto codebase from Akka to Pekko.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85MOIki/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1477,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85O9J9A,ditto,1324654400,1477,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-11-23T07:32:59Z,2022-11-23T07:32:59Z,Pekko codebase is incubated here: https://github.com/apache/incubator-pekko,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85O9J9A/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1477,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85SWgtn,ditto,1381632871,1477,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-01-13T10:35:45Z,2023-01-13T10:35:45Z,"One dependency remains which is not yet covered by Apache Pekko: akka-persistence-mongo
I opened an issue to ask whether migration or a fork to Pekko is planned there: https://github.com/scullxbones/akka-persistence-mongo/issues/557","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85SWgtn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1485,https://api.github.com/repos/eclipse-ditto/ditto/issues/1485,ditto,1376827738,1485,Docker compose deployment does not work,kozillios,94862678,,,CLOSED,2022-09-17T17:21:07Z,2022-09-19T20:17:26Z,"I'm deploying Ditto with docker compose and trying to create a 'thing' via java SDK - but it's fail.
Logs from SDK side:
`Thing could not be created due to: java.util.concurrent.TimeoutException: Timed out after PT1M`

Logs from Ditto Gateway microservice:
`2022-09-17 19:10:17,577 WARN  [415099e6-7728-4e43-aa39-c34058e90f86] o.e.d.g.s.e.d.HttpsEnsuringDirective  - No HTTPS is enforced!
2022-09-17 19:10:17,595 INFO  [415099e6-7728-4e43-aa39-c34058e90f86] o.e.d.g.s.s.a.p.PreAuthenticatedAuthenticationProvider  - Pre-authentication has been applied resulting in AuthorizationContext <ImmutableAuthorizationContext [type=pre-authenticated-http, authorizationSubjects=[nginx:ditto]]>.
2022-09-17 19:10:17,773 INFO  [] o.e.d.g.s.e.r.w.WebSocketRoute  - Creating WebSocket for connection authContext: <ImmutableAuthorizationContext [type=pre-authenticated-http, authorizationSubjects=[nginx:ditto]]>
2022-09-17 19:10:17,809 INFO  [415099e6-7728-4e43-aa39-c34058e90f86] o.e.d.g.s.s.a.StreamingSessionActor akka://ditto-cluster/user/gatewayRoot/streaming/0-415099e6-7728-4e43-aa39-c34058e90f86 - Declaring acknowledgement labels <[]>
2022-09-17 19:10:17,809 INFO  [415099e6-7728-4e43-aa39-c34058e90f86] o.e.d.g.s.s.a.StreamingSessionActor akka://ditto-cluster/user/gatewayRoot/streaming/0-415099e6-7728-4e43-aa39-c34058e90f86 - Acknowledgement label declaration successful for labels: <[]>
2022-09-17 19:10:17,821 INFO  [415099e6-7728-4e43-aa39-c34058e90f86] o.e.d.g.s.e.d.RequestResultLoggingDirective  - StatusCode of request GET '/ws/2' was: 101
2022-09-17 19:10:17,958 INFO  [c0109ebc-74b7-458d-bd10-768a0542895f] o.e.d.c.a.a.ConciergeForwarderActor akka://ditto-cluster/user/gatewayRoot/conciergeForwarder - Forwarding signal with ID <org.eclipse.ditto:a91ba031-13d4-47dc-b574-be4bef5601b1> and type <things.commands:createThing> to concierge enforcer
2022-09-17 19:10:17,959 INFO  [] a.r.RemoteActorRefProvider$RemoteDeadLetterActorRef akka://ditto-cluster/deadLetters - Message [org.eclipse.ditto.things.model.signals.commands.modify.CreateThing] from Actor[akka://ditto-cluster/user/gatewayRoot/streaming/0-415099e6-7728-4e43-aa39-c34058e90f86/ackr0-c0109ebc-74b7-458d-bd10-768a0542895f#-712317568] to Actor[akka://ditto-cluster/deadLetters] was not delivered. [3] dead letters encountered. If this is not an expected behavior then Actor[akka://ditto-cluster/deadLetters] may have terminated unexpectedly. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
2022-09-17 19:10:17,962 INFO  [c0109ebc-74b7-458d-bd10-768a0542895f] o.e.d.i.m.a.AcknowledgementAggregatorActor akka://ditto-cluster/user/gatewayRoot/streaming/0-415099e6-7728-4e43-aa39-c34058e90f86/ackr0-c0109ebc-74b7-458d-bd10-768a0542895f - Starting to wait for all requested acknowledgements <[twin-persisted]> for a maximum duration of <PT1M5S>.
2022-09-17 19:11:17,955 INFO  [7874f16d-69f2-44fa-9d91-898b78923c60] o.e.d.c.a.a.ConciergeForwarderActor akka://ditto-cluster/user/gatewayRoot/conciergeForwarder - Forwarding signal with ID <org.eclipse.ditto:a91ba031-13d4-47dc-b574-be4bef5601b1> and type <things.commands:modifyAttribute> to concierge enforcer
2022-09-17 19:11:17,956 INFO  [] a.r.RemoteActorRefProvider$RemoteDeadLetterActorRef akka://ditto-cluster/deadLetters - Message [org.eclipse.ditto.things.model.signals.commands.modify.ModifyAttribute] from Actor[akka://ditto-cluster/user/gatewayRoot/streaming/0-415099e6-7728-4e43-aa39-c34058e90f86/ackr1-7874f16d-69f2-44fa-9d91-898b78923c60#741303710] to Actor[akka://ditto-cluster/deadLetters] was not delivered. [4] dead letters encountered. If this is not an expected behavior then Actor[akka://ditto-cluster/deadLetters] may have terminated unexpectedly. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
2022-09-17 19:11:17,956 INFO  [7874f16d-69f2-44fa-9d91-898b78923c60] o.e.d.i.m.a.AcknowledgementAggregatorActor akka://ditto-cluster/user/gatewayRoot/streaming/0-415099e6-7728-4e43-aa39-c34058e90f86/ackr1-7874f16d-69f2-44fa-9d91-898b78923c60 - Starting to wait for all requested acknowledgements <[twin-persisted]> for a maximum duration of <PT1M5S>.
2022-09-17 19:11:17,971 INFO  [7b5c522f-83db-49fa-9035-6e68c341ba3a] o.e.d.g.s.s.a.p.PreAuthenticatedAuthenticationProvider  - Pre-authentication has been applied resulting in AuthorizationContext <ImmutableAuthorizationContext [type=pre-authenticated-http, authorizationSubjects=[nginx:ditto]]>.
2022-09-17 19:11:17,974 INFO  [] o.e.d.g.s.e.r.w.WebSocketRoute  - Creating WebSocket for connection authContext: <ImmutableAuthorizationContext [type=pre-authenticated-http, authorizationSubjects=[nginx:ditto]]>
2022-09-17 19:11:17,977 INFO  [7b5c522f-83db-49fa-9035-6e68c341ba3a] o.e.d.g.s.s.a.StreamingSessionActor akka://ditto-cluster/user/gatewayRoot/streaming/1-7b5c522f-83db-49fa-9035-6e68c341ba3a - Declaring acknowledgement labels <[]>
2022-09-17 19:11:17,978 INFO  [7b5c522f-83db-49fa-9035-6e68c341ba3a] o.e.d.g.s.s.a.StreamingSessionActor akka://ditto-cluster/user/gatewayRoot/streaming/1-7b5c522f-83db-49fa-9035-6e68c341ba3a - Acknowledgement label declaration successful for labels: <[]>
2022-09-17 19:11:17,978 INFO  [7b5c522f-83db-49fa-9035-6e68c341ba3a] o.e.d.g.s.e.d.RequestResultLoggingDirective  - StatusCode of request GET '/ws/2' was: 101
2022-09-17 19:11:17,995 INFO  [43661718-c818-48aa-9717-682e0fb0e1ab] o.e.d.c.a.a.ConciergeForwarderActor akka://ditto-cluster/user/gatewayRoot/conciergeForwarder - Forwarding signal with ID <org.eclipse.ditto:47d0c358-6afa-429b-a9fb-cd1454c26a00> and type <things.commands:createThing> to concierge enforcer
2022-09-17 19:11:17,995 INFO  [] a.r.RemoteActorRefProvider$RemoteDeadLetterActorRef akka://ditto-cluster/deadLetters - Message [org.eclipse.ditto.things.model.signals.commands.modify.CreateThing] from Actor[akka://ditto-cluster/user/gatewayRoot/streaming/1-7b5c522f-83db-49fa-9035-6e68c341ba3a/ackr0-43661718-c818-48aa-9717-682e0fb0e1ab#-1756909256] to Actor[akka://ditto-cluster/deadLetters] was not delivered. [5] dead letters encountered. If this is not an expected behavior then Actor[akka://ditto-cluster/deadLetters] may have terminated unexpectedly. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
2022-09-17 19:11:17,995 INFO  [43661718-c818-48aa-9717-682e0fb0e1ab] o.e.d.i.m.a.AcknowledgementAggregatorActor akka://ditto-cluster/user/gatewayRoot/streaming/1-7b5c522f-83db-49fa-9035-6e68c341ba3a/ackr0-43661718-c818-48aa-9717-682e0fb0e1ab - Starting to wait for all requested acknowledgements <[twin-persisted]> for a maximum duration of <PT1M5S>.
2022-09-17 19:11:22,976 INFO  [c0109ebc-74b7-458d-bd10-768a0542895f] o.e.d.i.m.a.AcknowledgementAggregatorActor akka://ditto-cluster/user/gatewayRoot/streaming/0-415099e6-7728-4e43-aa39-c34058e90f86/ackr0-c0109ebc-74b7-458d-bd10-768a0542895f - Timed out waiting for all requested acknowledgements, completing Acknowledgements with timeouts...
2022-09-17 19:12:18,005 INFO  [f59be76c-3d0d-4d3a-ab94-173d61f6cf96] o.e.d.c.a.a.ConciergeForwarderActor akka://ditto-cluster/user/gatewayRoot/conciergeForwarder - Forwarding signal with ID <org.eclipse.ditto:47d0c358-6afa-429b-a9fb-cd1454c26a00> and type <things.commands:modifyAttribute> to concierge enforcer
2022-09-17 19:12:18,006 INFO  [] a.r.RemoteActorRefProvider$RemoteDeadLetterActorRef akka://ditto-cluster/deadLetters - Message [org.eclipse.ditto.things.model.signals.commands.modify.ModifyAttribute] from Actor[akka://ditto-cluster/user/gatewayRoot/streaming/1-7b5c522f-83db-49fa-9035-6e68c341ba3a/ackr1-f59be76c-3d0d-4d3a-ab94-173d61f6cf96#-1977371872] to Actor[akka://ditto-cluster/deadLetters] was not delivered. [6] dead letters encountered. If this is not an expected behavior then Actor[akka://ditto-cluster/deadLetters] may have terminated unexpectedly. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
2022-09-17 19:12:18,006 INFO  [f59be76c-3d0d-4d3a-ab94-173d61f6cf96] o.e.d.i.m.a.AcknowledgementAggregatorActor akka://ditto-cluster/user/gatewayRoot/streaming/1-7b5c522f-83db-49fa-9035-6e68c341ba3a/ackr1-f59be76c-3d0d-4d3a-ab94-173d61f6cf96 - Starting to wait for all requested acknowledgements <[twin-persisted]> for a maximum duration of <PT1M5S>.
`

Java SDK version: **2.4.0**

Could you please take a look?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1485/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1485,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Kif5Y,ditto,1250557528,1485,NA,stmaute,17831060,Stefan Maute,,NA,2022-09-19T04:27:01Z,2022-09-19T04:27:01Z,"Thank you for reaching out. 
What Ditto version do you use? As you mentioned you use the Ditto Java Client with version 2.4.0, you should use the same version or the Ditto backend. 
Can you check if all Docker containers are up and running? As I can see from the logs there might be not all Ditto services running. 
Please also check if the MongoDB container is working.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Kif5Y/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1485,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Ki0X3,ditto,1250641399,1485,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-09-19T07:02:40Z,2022-09-19T07:02:40Z,"Did you use the `docker-compose.yml` file from the current ""master""?
This is in preparation for the upcoming Ditto 3.0 release already prepared to start without the in Ditto 2.4 required ""concierge"" service.
If that is/was the case I suggest to use the `docker-compose.yml` from the release-2.4 branch:
https://github.com/eclipse/ditto/tree/release-2.4/deployment/docker","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Ki0X3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1485,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Kjlip,ditto,1250842793,1485,NA,kozillios,94862678,,,NA,2022-09-19T10:29:38Z,2022-09-19T10:29:38Z,"Thank you for your responses!

So, I'm deploy ditto backend 2.4 and check that all services are up&running:

`➜  docker git:(master) ✗ docker ps
CONTAINER ID   IMAGE                             COMMAND                  CREATED         STATUS                   PORTS                      NAMES
71831958a1da   nginx:1.21-alpine                 ""/docker-entrypoint.…""   2 minutes ago   Up About a minute        0.0.0.0:8080->80/tcp       docker_nginx_1
d65367357d0a   eclipse/ditto-connectivity:2.4    ""/usr/bin/tini -- sh…""   2 minutes ago   Up 2 minutes (healthy)   8080/tcp                   docker_connectivity_1
e3f33e55184f   eclipse/ditto-gateway:2.4         ""/usr/bin/tini -- sh…""   2 minutes ago   Up 2 minutes (healthy)   0.0.0.0:8081->8080/tcp     docker_gateway_1
6e3e30d31979   eclipse/ditto-things-search:2.4   ""/usr/bin/tini -- sh…""   2 minutes ago   Up 2 minutes (healthy)   8080/tcp                   docker_things-search_1
f35796d179c8   eclipse/ditto-things:2.4          ""/usr/bin/tini -- sh…""   2 minutes ago   Up 2 minutes (healthy)   8080/tcp                   docker_things_1
f714cd03665b   swaggerapi/swagger-ui:v4.14.0     ""/docker-entrypoint.…""   2 minutes ago   Up 2 minutes             80/tcp, 8080/tcp           docker_swagger-ui_1
ae718e4f1b2d   eclipse/ditto-policies:2.4        ""/usr/bin/tini -- sh…""   2 minutes ago   Up 2 minutes (healthy)   8080/tcp                   docker_policies_1
c64044858cb8   mongo:4.2                         ""docker-entrypoint.s…""   2 minutes ago   Up 2 minutes             0.0.0.0:27017->27017/tcp   docker_mongodb_1
`

But issue still exists.
Probably problem with my client code:

'public class DittoApp {

    private final static String username = ""ditto"";
    private final static String password = ""ditto"";
    private final static String host = ""ws://localhost:8080"";

    public static DittoClient buildDittoClient(){
        AuthenticationProvider authenticationProvider =
                AuthenticationProviders.basic(BasicAuthenticationConfiguration.newBuilder()
                        .username(username)
                        .password(password)
                        .build());
        MessagingProvider messagingProvider = MessagingProviders.webSocket(WebSocketMessagingConfiguration.newBuilder()
                .endpoint(host)
                .jsonSchemaVersion(JsonSchemaVersion.V_2)
                .build(), authenticationProvider);
        DisconnectedDittoClient disconnectedDittoClient = DittoClients.newInstance(messagingProvider);
        DittoClient dittoClient = null;
        try {
            dittoClient = disconnectedDittoClient.connect().toCompletableFuture().get();
        } catch (InterruptedException | ExecutionException e) {
            throw new RuntimeException();
        }
        return dittoClient;
    }

    public static void main(String[] args){
        DittoClient dittoClient = buildDittoClient();
        ThingId thingId = ThingId.of(""org.eclipse.ditto:"" + UUID.randomUUID().toString());
        try {
            dittoClient.twin().create(thingId).handle((createdThing, throwable) -> {
                if (createdThing != null) {
                    System.out.println(""Created new thing: "" + createdThing);
                } else {
                    System.out.println(""Thing could not be created due to: "" + throwable.getMessage());
                }
                return dittoClient.twin().forId(thingId).putAttribute(""created"", new Date().toString());
            }).toCompletableFuture().get();
        } catch (InterruptedException e) {
            e.printStackTrace();
        } catch (ExecutionException e) {
            e.printStackTrace();
        }

    }
}'

Error:
'java.util.concurrent.TimeoutException: Timed out after PT1M'

Could you please review?
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Kjlip/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1485,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85KjxNQ,ditto,1250890576,1485,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-09-19T11:23:07Z,2022-09-19T11:23:07Z,"@pavelkazl0u as I just wrote in this comment: https://github.com/eclipse/ditto/issues/1485#issuecomment-1250641399
You do not have all services started as the ""concierge"" is missing - which is no longer required on the current ""master"" branch, but still for the Ditto 2.4.0 release.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85KjxNQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1485,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85KmHZv,ditto,1251505775,1485,NA,kozillios,94862678,,,NA,2022-09-19T20:17:23Z,2022-09-19T20:17:23Z,Thanks!,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85KmHZv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1494,https://api.github.com/repos/eclipse-ditto/ditto/issues/1494,ditto,1390361561,1494,Ditto Explorer UI: Update UI automatically on changes using Server Sent Event,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2022-09-29T07:03:26Z,2023-01-23T11:05:22Z,"The new Ditto Explorer UI does currently not provide ""push"" capabilities - e.g. when a digital twin (a.k.a. thing) is updated in the Ditto backend, it is not automatically updated in the UI if the thing is currently ""in focus"".

This can be achieved by utilising Ditto's [SSE (Server Sent Events) API](https://www.eclipse.org/ditto/httpapi-sse.html).

The first idea would be to open a SSE for a specific thing once the thing is selected in the table.
And update the ""Thing Details"" view + Attributes and Features sections in the UI on every SSE update.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1494/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1496,https://api.github.com/repos/eclipse-ditto/ditto/issues/1496,ditto,1390449922,1496,Mention Ditto Explorer UI in Ditto documentation,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2022-09-29T08:13:44Z,2022-10-20T17:08:42Z,"Provide a new page for that:
* where is the latest (development branch) UI deployed? -> https://eclipse.github.io/ditto/
* that is is available as Docker image
* Short intro on the ""Environments"" and how they are used/configured","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1496/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1496,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85MpQ7O,ditto,1285885646,1496,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-10-20T17:08:18Z,2022-10-20T17:08:18Z,Resolved via #1509,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85MpQ7O/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1497,https://api.github.com/repos/eclipse-ditto/ditto/issues/1497,ditto,1390924368,1497,Cannot send to inbox/outbox messages,vitlinda,62563336,Linda Vitali,,CLOSED,2022-09-29T13:57:26Z,2022-10-20T17:06:48Z,"Hi,
I've tried to use this [API specification](https://ditto.eclipseprojects.io/apidoc/#/Messages/post_things__thingId__features__featureId__outbox_messages__messageSubject_) with this values:

> thingId: io.eclipseprojects.ditto:floor-nf
featureId: SmokeDetection
messageSubject: smoke-detector

hitting ""execute"" it hangs for 60 seconds and returns a 408 with a timeout message.

The thing is created in the sandbox and the account is the one with name _ditto_ and password _ditto_.

I've tried also to listen to the messages with a script that uses sse but nothing is received.
However, attributes update are correctly intercepted.

What am I doing wrong?

Thanks for your help","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1497/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1497,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85LPhEq,ditto,1262358826,1497,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-09-29T14:23:01Z,2022-09-29T14:23:01Z,"What do you expect to happen?
The request is waiting for a response to that message from ""the device"" behind the twin.

When sending a message via HTTP, someone needs to receive that message and respond with a correlated message response.
This response is sent back using the ""open"" HTTP request .. 
If no response is sent during the default timeout of 60 seconds, the request will terminate with 408 (request timeout).

So you need to subscribe for messages, e.g. using WebSocket or a connection or SSE - and once receiving the message, send back a message response.
I think that however sending back a response via SSE is not possible, so I would recommend to use the WebSocket.
Or even the Ditto Java or JavaScript client.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85LPhEq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1498,https://api.github.com/repos/eclipse-ditto/ditto/issues/1498,ditto,1390990852,1498,Provide API to stream/replay persisted events from the event journal,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2022-09-29T14:38:54Z,2023-02-07T12:55:51Z,"Ditto applies the ""Event Sourcing"" paradigm for its persistence (of things, policies and connections):
* https://blog.softwaremill.com/3-reasons-to-adopt-event-sourcing-89cb855453f6
* https://eventuate.io/whyeventsourcing.html

Ditto however does not yet make much use of that persistence paradigm.
I would like to propose to provide APIs to be able to retrieve a stream of persisted events from the ""event journal"".
That can be useful e.g. in order to:
* replay events which were ""missed"" (similar to what Apache Kafka provides)
* query the changes made to a single property value of a thing
* get an ""audit log"" of changes done to a thing/policy/connection

The API would only be available in a streaming way, so for:
* SSE 
* WebSocket via DittoProtocol
* Connections via DittoProtocol

The DittoProtocol API should be very similar to the [search protocol](https://www.eclipse.org/ditto/protocol-specification-things-search.html).

As the Ditto background cleanup would delete events quite fast, we would also need a configuration of a ""event-retention duration"" - so it would be possible to configure how long to keep events and snapshots in the DB before finally deleting them via the cleanup.
Example: 7 days

An idea how the SSE API could look like:
```
/api/2/things/org.eclipse.ditto:thing-2?fromRevision=0&fields=thingId,attributes,_revision,_modified
```
The stream would automatically end when the most recent event was returned.

This API could be provided for things, policies and connections (for connections however probably only available via piggyback commands).
The idea would be to use either:
* the *_revision* number of the entity as ""from/to"" selector
* or the *_modified* timestamp of the event journal entry (which is included in the the MongoDB `_id` field)

With the timestamp, a query could look like:
An idea how the SSE API could look like (to get all changes within one hour):
```
/api/2/things/org.eclipse.ditto:thing-2?fromModified=2022-09-29T12:00:00.000Z&toModified=2022-09-29T11:00:00.000Z&fields=thingId,attributes,features,_revision,_modified
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1498/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1498,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85LPsrW,ditto,1262406358,1498,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-09-29T14:58:44Z,2022-09-29T14:58:44Z,"Input on whether that would be useful by our community would be much appreciated
@BobClaerhout @w4tsn @tobias-zeptio @thlandgraf","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85LPsrW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1498,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85M_gKu,ditto,1291715246,1498,NA,hjccjugfcc,91953397,zhenyu,,NA,2022-10-26T08:55:20Z,2022-10-26T08:55:20Z,"Hello, we find that the historical data in ditto is queried in the things-journal table of the mongodb database in docker, but we also find that these historical data will be deleted every fixed time, and only the latest updated data is retained in the database. We want to know, can this fixed time be modified ? If it can be modified, where should it be modified ?
![d87589495a9a74b6750c8c7fc49ce02](https://user-images.githubusercontent.com/91953397/197981476-e3499506-74ee-4247-93fe-9d7af473bf2f.jpg)
![3c1461ac745bf28746bddc246d29132](https://user-images.githubusercontent.com/91953397/197981505-69a59dd6-13fe-420b-8029-dc0d395ccc50.jpg)

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85M_gKu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1498,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85M_w9j,ditto,1291784035,1498,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-10-26T09:52:23Z,2022-10-26T09:52:23Z,"@hjccjugfcc part of this issue is the idea to provide an API to exactly get this information from e.g. the ""things_journal"".
And also to have a configurable ""retention time"" of how long to keep the events in the database before Ditto cleans it up in the background.

Do you have other requirements/ideas what you would expect from a ""historical API access""?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85M_w9j/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1498,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85NGL1G,ditto,1293466950,1498,NA,CabenJL,52553298,,,NA,2022-10-27T12:39:58Z,2022-10-27T12:39:58Z,"@thjaeckle My partner gave the question asked above. We will describe our idea clearly. At the present, we try to utilize Ditto as IoT digital twin of autonomous vehicles in our project. 
We can gain the state data of every vehicle in motion such as speed, steering wheel angle…… and meanwhile group all the state to JSON format as a thing and send it directly to Ditto through MQTT protocol. In the process of autonomous driving, every vehicle could be identified by one unique Thing-ID, but the state data may change continuously and new data would overwrite the old frequently. However, for autonomous driving, the historical data can not only help to monitor vehicle movement as reference, but also provide data for autonomous driving algorithm research especially about perceiving, planning and safety guaranteeing. That’s why we need historical data sincerely. 
We believe that an API to exactly get this information will be useful and hope Ditto can keep the complete historical data in the database at least one week before cleaning it up, which allows us plenty of time to export it.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85NGL1G/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1498,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85NGOrK,ditto,1293478602,1498,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-10-27T12:49:37Z,2022-10-27T12:49:37Z,"@CabenJL if you are planning to export the ""historical data"" anyhow, you could also (already now, without the history API) create a Ditto [managed connection](https://www.eclipse.org/ditto/basic-connections.html) to e.g. an ""Apache Kafka"" broker and configure it to publish all changes which are done to your things.

Whenever the state of a thing (digital twin) is then updated, this ""event"" will automatically be published to the Kafka broker from where you can build up a data lake or whatever you need to do to store the data.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85NGOrK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1499,https://api.github.com/repos/eclipse-ditto/ditto/issues/1499,ditto,1392181290,1499,BufferOverflowException with things growing over size limit,tobias-zeptio,72976141,Tobias Månsson,,CLOSED,2022-09-30T09:55:17Z,2022-11-18T14:25:27Z,"We have the size limit variable set to `LIMITS_THINGS_MAX_SIZE=100k`, but still things_snaps contain document above that limit. The connectivity service logs do have a ThingTooLargeException. We have a payload-mapper calling a merge command for each update.

One example I ran `bsonsize(db.things_snaps.findOne({ pid: ""thing:twin:4e36a386-697e-4be6-bf1c-8d1b32c837db"" }))` and got 892698.

This is a deployment running from ditto 2.4, and yesterday updated to 3.0.0.

 One theory is that multiple mapper called happen in parallel, causing the size limit to accumulate before the size has been updated to the mapper.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1499/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1499,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85LfKLe,ditto,1266459358,1499,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-10-04T06:31:25Z,2022-10-04T06:31:25Z,"@tobias-zeptio So you created a Thing with Ditto 2.4 exceeding the limit (e.g. because of the in 2.4 missing ""size enforcement"" for metadata) and this is still ""too big"" in Ditto 3.0?

Can you reproduce that (creating a ""too big thing"") with Ditto 3.0?
If not, I suggest you delete the thing from persistence and recreate it.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85LfKLe/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1499,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85LfseN,ditto,1266599821,1499,NA,tobias-zeptio,72976141,Tobias Månsson,,NA,2022-10-04T08:37:15Z,2022-10-04T08:37:15Z,"This wasn't because of _metadata, that was another issue. ;) I've already delete the things properties having this issue, since the size limit was preventing updates. So the size limit worked when the thing was large, but didn't prevent it from getting to large-

In this case is was features/properties growing. I'll try to reproduce using test data.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85LfseN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1499,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85OrpTt,ditto,1320064237,1499,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-11-18T14:25:27Z,2022-11-18T14:25:27Z,Please open a new issue if you are able to reproduce.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85OrpTt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1502,https://api.github.com/repos/eclipse-ditto/ditto/issues/1502,ditto,1399196251,1502,Gaining  the history changes of a thing,CabenJL,52553298,,,CLOSED,2022-10-06T09:24:43Z,2023-02-07T13:00:05Z,"If we modify the state of one thing, how can we get  the information of the last time? Moreover, if we modify the state frequently, how can we gain the history changes in order to  analysis these data?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1502/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1502,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Lrdmc,ditto,1269684636,1502,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-10-06T09:33:42Z,2022-10-06T09:33:42Z,"Hi @CabenJL 
Currently, you can't - currently Ditto only provides the ""most recent"" state via its API.
The history is however available in the ""event journal"" / in the database.

We created issue #1498 in order to start a discussion on whether this would be useful and would be happy to get some feedback over there.
E.g. for which use-case you require history changes of a thing and what kind of information or API you would expect.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Lrdmc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1502,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85LtMUZ,ditto,1270138137,1502,NA,CabenJL,52553298,,,NA,2022-10-06T14:18:14Z,2022-10-06T14:18:14Z,"@thjaeckle Thanks for your replay! I will make efforts to share our ideas about this issue in #1498. Besides, I have noticed that we are able to gather logs for a running Ditto installation in  description of the link https://www.eclipse.org/ditto/installation-operating.html#logging, so could we gain the history changes from the log file? Maybe this can be one way to do it?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85LtMUZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1502,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85LxCly,ditto,1271146866,1502,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-10-07T05:59:47Z,2022-10-07T05:59:47Z,"> Besides, I have noticed that we are able to gather logs for a running Ditto installation in description of the link https://www.eclipse.org/ditto/installation-operating.html#logging, so could we gain the history changes from the log file? Maybe this can be one way to do it?

Not in a reliable way, no.
If this is an option, you could of course create a [connection](https://www.eclipse.org/ditto/basic-connections.html) to push out all (change) events to the twin to another system where to process the history .. e.g. to an HTTP endpoint or via an Apache Kafka.
That would be the most reliable way to get the ""history"".","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85LxCly/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1502,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85LzAIg,ditto,1271661088,1502,NA,CabenJL,52553298,,,NA,2022-10-07T14:20:16Z,2022-10-07T14:20:16Z,"@thjaeckle Thanks! We will try to share our ideas in issue #1498 in a few days, we are expecting one specific API that can help to gain the history data.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85LzAIg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1502,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Urqhq,ditto,1420732522,1502,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-02-07T13:00:05Z,2023-02-07T13:00:05Z,History changes were up to recently out of scope in Ditto - now with issue #1498 they will be added in Ditto 3.2.0,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Urqhq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1503,https://api.github.com/repos/eclipse-ditto/ditto/issues/1503,ditto,1399462053,1503,"Cannot invoke ""String.getBytes()"" because ""payload"" is null",tobias-zeptio,72976141,Tobias Månsson,,CLOSED,2022-10-06T11:55:53Z,2022-12-16T09:12:46Z,"Reading section 3.2 in https://www.amqp.org/sites/amqp.org/files/amqp.pdf the body of an AMQP 1.0 message is defined as follows:

- The body consists of either: one or more data sections, one or more amqp-sequence sections,
or a single amqp-value section.

A valid amqp value is null, which the ditto-connectivity AmqpConsumerActor doesn't seem to handle in the `extractPayloadFromMessage` method.

I think adding a null check and returning a ExternalMessageBuilder with null values should be valid.

The use-case here is handling retrieve commands in the payload-mapper, in our case the header contains which property to read.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1503/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1503,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85LsXRb,ditto,1269920859,1503,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-10-06T12:10:36Z,2022-10-06T12:10:36Z,"Sounds valid, yes. 👍 

We would accept a PR which adds the AMQP value `null` handling in such a way.

Do you already have an idea how this is mapped to the `JmsMessage` which is processed in `extractPayloadFromMessage()`?
  Mapping AMQP concepts of the AMQP spec is sometimes a little bit strange to do with the Qpid JMS Client Ditto uses for AMQP connectivity.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85LsXRb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1503,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85LswHV,ditto,1270022613,1503,NA,tobias-zeptio,72976141,Tobias Månsson,,NA,2022-10-06T13:13:03Z,2022-10-06T13:13:03Z,"Looks like UnmodifiableExternalMessageBuilder accepts null as payload, so no change needed there.

I'm looking into how to get the body from the `JmsMessage`, but it seems to always return `null` which is strange.

```
    @Override
    public boolean isBodyAssignableTo(@SuppressWarnings(""rawtypes"") Class target) throws JMSException {
        return true;
    }

    @Override
    public final <T> T getBody(Class<T> asType) throws JMSException {
        if (isBodyAssignableTo(asType)) {
            return doGetBody(asType);
        }

        throw new MessageFormatException(""Message body cannot be read as type: "" + asType);
    }

    protected <T> T doGetBody(Class<T> asType) throws JMSException {
        return null;
    }
```

We use qpid-jms-client in another project, and there it straight up returns the body but that uses `JmsMessageFacade` instead of `JmsMessage`.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85LswHV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1503,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85LsxQY,ditto,1270027288,1503,NA,tobias-zeptio,72976141,Tobias Månsson,,NA,2022-10-06T13:15:56Z,2022-10-06T13:15:56Z,"This would be the simplest solution, but I'm worried it would always be true for `JmsMessage`.

```
if (message.getBody(String.class) == null) {
   builder.withTextAndBytes(null, null);
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85LsxQY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1503,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85MJLP5,ditto,1277473785,1503,NA,tobias-zeptio,72976141,Tobias Månsson,,NA,2022-10-13T11:39:21Z,2022-10-13T11:39:21Z,Resolved by #1505 ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85MJLP5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1506,https://api.github.com/repos/eclipse-ditto/ditto/issues/1506,ditto,1399882800,1506,Cannot add connection ,OnurErtunc,72254892,Onur Ertunç,,CLOSED,2022-10-06T15:36:40Z,2022-10-10T08:42:24Z,Adding a connection via the ditto sandbox is not working. I have tried it for several alternative protocols. ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1506/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1506,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Lucyb,ditto,1270467739,1506,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-10-06T17:50:21Z,2022-10-06T17:50:21Z,"Yes, that is on purpose. Connections are disabled in the sandbox as the sandbox only has very limited resources and letting everyone create connections would cause stability issues. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Lucyb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1507,https://api.github.com/repos/eclipse-ditto/ditto/issues/1507,ditto,1400586431,1507,Gateway authentication fails while accessing APIs,ishwar25667,16041914,,,CLOSED,2022-10-07T04:00:38Z,2022-10-14T12:33:15Z,"Hi @thjaeckle 

I have setup eclipse ditto at local using docker/docker-compose. Services seems to be up but when I try to access any API getting-

""Gateway authentication fails""

See more details-

 curl -X 'GET' \
>   'http://localhost:8080/api/2/whoami' \
>   -H 'accept: application/json' \
>   -H 'Authorization: Basic ZGl0dG86ZGl0dG8=' \
>   -H 'x-ditto-pre-authenticated: nginx:ditto'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   136  100   136    0     0    510      0 --:--:-- --:--:-- --:--:--   521{""status"":401,""error"":""gateway:authentication.failed"",""message"":""Unauthorized."",""description"":""Check if your credentials were correct.""}

I am missing something? Please help here.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1507/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1507,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85LxDtI,ditto,1271151432,1507,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-10-07T06:07:07Z,2022-10-07T06:07:07Z,"You seem to have wrong line breaks in your curl statement .. works for me doing:
```bash
curl -X 'GET' 'http://localhost:8080/api/2/whoami' -H 'accept: application/json' -H 'Authorization: Basic ZGl0dG86ZGl0dG8='
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85LxDtI/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1515,https://api.github.com/repos/eclipse-ditto/ditto/issues/1515,ditto,1415945715,1515,Apache Kafka Integration with Eclipse Ditto is not working .,rajkraleti,77378332,,,CLOSED,2022-10-20T04:59:43Z,2024-05-17T15:06:47Z,"I have created a thing in using the Hello world example given here 

https://www.eclipse.org/ditto/intro-hello-world.html

then tried to create a thing using the Apache Kafka 2.x example given , I have established connection with the Kafka installed in my local and established connection to eclipse Ditto . 

The connection was successful how ever post dropping messages in the Kafka topic - Things are not getting updated or created or modified .

there was no log / no information about what happened with the message that was dropped .

FYR : I followed the message format shown in the ditto protocol example 

![image](https://user-images.githubusercontent.com/77378332/196860108-6a3f98a9-3d69-4b58-82f8-3bccc27d27de.png)

Can we have a demonstration of Apache Kafka Source & target side integration for Eclipse Ditto or its a known issue on which team is still working ?
 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1515/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1515,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85MlrSZ,ditto,1284945049,1515,NA,DerSchwilk,41327268,David Schwilk,,NA,2022-10-20T05:18:05Z,2022-10-20T05:18:05Z,"Hey @rajkraleti,

you can have a look at the logs of the connection via https://www.eclipse.org/ditto/connectivity-manage-connections.html#retrieve-connection-logs.
Be sure to enable them prior with https://www.eclipse.org/ditto/connectivity-manage-connections.html#enable-connection-logs.

If your connection receives the Kafka messages you should see reasons for dropping/ not applying the messages in your connection logs.
Thus far we don't know of any issues with the Kafka connectivity.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85MlrSZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1515,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Mmks_,ditto,1285180223,1515,NA,rajkraleti,77378332,,,NA,2022-10-20T08:59:49Z,2022-10-20T08:59:49Z,"Hi Thank @DerSchwilk  This only shows the conenction status - which was showing only connection status - and it was succesful

Hoe ever there was no update in the thing . This looks like a bug to me.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Mmks_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1515,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85MmrRS,ditto,1285207122,1515,NA,DerSchwilk,41327268,David Schwilk,,NA,2022-10-20T09:17:35Z,2022-10-20T09:17:35Z,"@rajkraleti 
I think you're confusing the connection status endpoint (https://www.eclipse.org/ditto/connectivity-manage-connections.html#retrieve-connection-status) wit the connection log endpoint.

Via the connection log endpoint you should also be able to see the inbound messages of the connection. If that is not the case, your connection is not receiving any messages from your Kafka broker.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85MmrRS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1515,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85MnIna,ditto,1285327322,1515,NA,rajkraleti,77378332,,,NA,2022-10-20T10:54:37Z,2022-10-20T10:54:37Z,"Hi I used the URL 
connections/ad573a5c-94f4-48e3-bd8f-2ce9dbc7096e/logs  - As per the link you have supplied


and It gave some content like this 


{
    ""connectionId"": ""ad573a5c-94f4-48e3-bd8f-2ce9dbc7096e"",
    ""connectionLogs"": [
        {
            ""correlationId"": ""<not-provided>"",
            ""timestamp"": ""2022-10-20T10:40:16.571876059Z"",
            ""category"": ""connection"",
            ""type"": ""other"",
            ""level"": ""failure"",
            ""message"": ""Connection failed due to: Unexpected consumer failure. - cause <KafkaConnectionFailed>: Can't establish connection with kafkaBroker after 1 attempts. At 2022-10-20T10:40:16.567835375Z. Will reconnect after PT5S""
        },
        {
            ""correlationId"": ""<not-provided>"",
            ""timestamp"": ""2022-10-20T10:40:41.646898837Z"",
            ""category"": ""connection"",
            ""type"": ""other"",
            ""level"": ""failure"",
            ""message"": ""Connection failed due to: Unexpected consumer failure. - cause <KafkaConnectionFailed>: Can't establish connection with kafkaBroker after 1 attempts. At 2022-10-20T10:40:41.644587409Z. Will reconnect after PT5S""
        },
        {
            ""correlationId"": ""<not-provided>"",
            ""timestamp"": ""2022-10-20T10:41:06.713364817Z"",
            ""category"": ""connection"",
            ""type"": ""other"",
            ""level"": ""failure"",
            ""message"": ""Connection failed due to: Unexpected consumer failure. - cause <KafkaConnectionFailed>: Can't establish connection with kafkaBroker after 1 attempts. At 2022-10-20T10:41:06.713066544Z. Will reconnect after PT5S""
        },
        {
            ""correlationId"": ""<not-provided>"",
            ""timestamp"": ""2022-10-20T10:41:31.824751284Z"",
            ""category"": ""connection"",
            ""type"": ""other"",
            ""level"": ""failure"",
            ""message"": ""Connection failed due to: Unexpected consumer failure. - cause <KafkaConnectionFailed>: Can't establish connection with kafkaBroker after 1 attempts. At 2022-10-20T10:41:31.822858624Z. Will reconnect after PT5S""
        },
        {
            ""correlationId"": ""<not-provided>"",
            ""timestamp"": ""2022-10-20T10:41:56.895511664Z"",
            ""category"": ""connection"",
            ""type"": ""other"",
            ""level"": ""failure"",
            ""message"": ""Connection failed due to: Unexpected consumer failure. - cause <KafkaConnectionFailed>: Can't establish connection with kafkaBroker after 1 attempts. At 2022-10-20T10:41:56.894799247Z. Will reconnect after PT5S""
        },
        {
            ""correlationId"": ""<not-provided>"",
            ""timestamp"": ""2022-10-20T10:42:21.988421023Z"",
            ""category"": ""connection"",
            ""type"": ""other"",
            ""level"": ""failure"",
            ""message"": ""Connection failed due to: Unexpected consumer failure. - cause <KafkaConnectionFailed>: Can't establish connection with kafkaBroker after 1 attempts. At 2022-10-20T10:42:21.987964576Z. Will reconnect after PT5S""
        },
        {
            ""correlationId"": ""<not-provided>"",
            ""timestamp"": ""2022-10-20T10:42:27.000635988Z"",
            ""category"": ""connection"",
            ""type"": ""other"",
            ""level"": ""success"",
            ""message"": ""Trying to reconnect""
        },
        {
            ""correlationId"": ""<not-provided>"",
            ""timestamp"": ""2022-10-20T10:42:33.152119719Z"",
            ""category"": ""connection"",
            ""type"": ""other"",
            ""level"": ""success"",
            ""message"": ""Connection successful""
        },
        {
            ""correlationId"": ""<not-provided>"",
            ""timestamp"": ""2022-10-20T10:42:47.214996362Z"",
            ""category"": ""connection"",
            ""type"": ""other"",
            ""level"": ""failure"",
            ""message"": ""Connection failed due to: Unexpected consumer failure. - cause <KafkaConnectionFailed>: Can't establish connection with kafkaBroker after 1 attempts. At 2022-10-20T10:42:47.214854282Z. Will reconnect after PT5S""
        },
        {
            ""correlationId"": ""<not-provided>"",
            ""timestamp"": ""2022-10-20T10:42:52.231805429Z"",
            ""category"": ""connection"",
            ""type"": ""other"",
            ""level"": ""success"",
            ""message"": ""Trying to reconnect""
        },
        {
            ""correlationId"": ""<not-provided>"",
            ""timestamp"": ""2022-10-20T10:43:00.155319454Z"",
            ""category"": ""connection"",
            ""type"": ""other"",
            ""level"": ""success"",
            ""message"": ""Connection successful""
        },
        {
            ""correlationId"": ""<not-provided>"",
            ""timestamp"": ""2022-10-20T10:43:12.274765828Z"",
            ""category"": ""connection"",
            ""type"": ""other"",
            ""level"": ""failure"",
            ""message"": ""Connection failed due to: Unexpected consumer failure. - cause <KafkaConnectionFailed>: Can't establish connection with kafkaBroker after 1 attempts. At 2022-10-20T10:43:12.274378950Z. Will reconnect after PT5S""
        },
        {
            ""correlationId"": ""<not-provided>"",
            ""timestamp"": ""2022-10-20T10:43:17.293342073Z"",
            ""category"": ""connection"",
            ""type"": ""other"",
            ""level"": ""success"",
            ""message"": ""Trying to reconnect""
        },
        {
            ""correlationId"": ""<not-provided>"",
            ""timestamp"": ""2022-10-20T10:43:24.178775087Z"",
            ""category"": ""connection"",
            ""type"": ""other"",
            ""level"": ""success"",
            ""message"": ""Connection successful""
        },
        {
            ""correlationId"": ""<not-provided>"",
            ""timestamp"": ""2022-10-20T10:43:37.366723381Z"",
            ""category"": ""connection"",
            ""type"": ""other"",
            ""level"": ""failure"",
            ""message"": ""Connection failed due to: Unexpected consumer failure. - cause <KafkaConnectionFailed>: Can't establish connection with kafkaBroker after 1 attempts. At 2022-10-20T10:43:37.365838271Z. Will reconnect after PT5S""
        },
        {
            ""correlationId"": ""<not-provided>"",
            ""timestamp"": ""2022-10-20T10:43:42.385538166Z"",
            ""category"": ""connection"",
            ""type"": ""other"",
            ""level"": ""success"",
            ""message"": ""Trying to reconnect""
        },
        {
            ""correlationId"": ""<not-provided>"",
            ""timestamp"": ""2022-10-20T10:43:48.155042247Z"",
            ""category"": ""connection"",
            ""type"": ""other"",
            ""level"": ""success"",
            ""message"": ""Connection successful""
        },
        {
            ""correlationId"": ""<not-provided>"",
            ""timestamp"": ""2022-10-20T10:44:02.436203602Z"",
            ""category"": ""connection"",
            ""type"": ""other"",
            ""level"": ""failure"",
            ""message"": ""Connection failed due to: Unexpected consumer failure. - cause <KafkaConnectionFailed>: Can't establish connection with kafkaBroker after 1 attempts. At 2022-10-20T10:44:02.435833492Z. Will reconnect after PT5S""
        },
        {
            ""correlationId"": ""<not-provided>"",
            ""timestamp"": ""2022-10-20T10:44:07.451835944Z"",
            ""category"": ""connection"",
            ""type"": ""other"",
            ""level"": ""success"",
            ""message"": ""Trying to reconnect""
        },
        {
            ""correlationId"": ""<not-provided>"",
            ""timestamp"": ""2022-10-20T10:44:15.148345794Z"",
            ""category"": ""connection"",
            ""type"": ""other"",
            ""level"": ""success"",
            ""message"": ""Connection successful""
        }
    ],
    ""enabledSince"": ""2022-10-20T10:44:16.098855914Z"",
    ""enabledUntil"": ""2022-10-20T11:44:18.092207891Z""
}



After restarting Kafka the connection was succesful .

How ever , it does not show any reason why message of creating / modify thing is not working .

As per the above log status Kafka connection is succesful 

I have dropped below message following the Ditto Protocol Structure Defined  

{
  ""topic"": ""org.eclipse.ditto/fancy-car/things/twin/commands/modify"",
  ""headers"": {
    ""content-type"": ""application/merge-patch+json"",
    ""correlation-id"": ""090397""
  },
  ""path"": ""/"",
  ""value"": {
    ""thingId"": ""org.eclipse.ditto:fancy-car"",
    ""policyId"": ""org.eclipse.ditto:fancy-car"",
    ""definition"": ""org.eclipse.ditto:SomeModel:1.0.0"",
    ""attributes"": {
      ""manufacturer"": ""ACME"",
      ""VIN"": ""0815666337"",
      ""VIN2"": ""081567889""
    }
  },
  ""features"": {
    ""transmission"": {
      ""properties"": {
        ""automatic"": true,
        ""mode"": ""eco"",
        ""cur_speed"": 90,
        ""gear"": 5
      }
    }
  }
}

Ideally this should modify my existing thing with thingId ""org.eclipse.ditto:fancy-car"" but its not modifying . Also Iam not sure whether ditto consumed the message and failed or Ditto did not consume at all !

Am I still missing something ?

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85MnIna/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1515,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85MnV4J,ditto,1285381641,1515,NA,DerSchwilk,41327268,David Schwilk,,NA,2022-10-20T11:41:28Z,2022-10-20T11:41:28Z,"Since you can't see any messages received in your logs, you can assume that the connection doesn't receive any. This can be either a wrong configuration in the connection or something wrong when sending messages to your broker.
I would recommend analyzing in your Apache Kafka broker if the messages are published correctly to the topic you specified in your connection.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85MnV4J/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1515,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85MnZdN,ditto,1285396301,1515,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-10-20T11:54:03Z,2022-10-20T11:54:03Z,"> {
> ""correlationId"": """",
> ""timestamp"": ""2022-10-20T10:43:12.274765828Z"",
> ""category"": ""connection"",
> ""type"": ""other"",
> ""level"": ""failure"",
> ""message"": ""Connection failed due to: Unexpected consumer failure. - cause : Can't establish connection with kafkaBroker after 1 attempts. At 2022-10-20T10:43:12.274378950Z. Will reconnect after PT5S""
> },

that is from your connection logs - and looks not ""healthy""","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85MnZdN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1515,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Mnezn,ditto,1285418215,1515,NA,rajkraleti,77378332,,,NA,2022-10-20T12:06:30Z,2022-10-20T12:06:30Z,"@thjaeckle   && @DerSchwilk   
Thanks for the udpate , The older logs have some failures because I have restarted the Kafka broker as this is not working .

How ever the latest timestamp message show 
{
""correlationId"": """",
""timestamp"": ""2022-10-20T10:44:15.148345794Z"",
""category"": ""connection"",
""type"": ""other"",
""level"": ""success"",
""message"": ""Connection successful""
}
],
""enabledSince"": ""2022-10-20T10:44:16.098855914Z"",
""enabledUntil"": ""2022-10-20T11:44:18.092207891Z""
}

connection was succesful with no message post restart .

When I manually listen to Kafka - I can see multiple messages in the topic . How ever Ditto is not reading anything .
raj@raj:/usr/local/kafka$ bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic testTopic --from-beginning 
{
  ""topic"": ""org.eclipse.ditto/fancy-car/things/twin/commands/modify"",
  ""headers"": {
    ""content-type"": ""application/merge-patch+json"",
    ""correlation-id"": ""090397""
  },
  ""path"": ""/"",
  ""value"": {
    ""thingId"": ""org.eclipse.ditto:fancy-car"",
    ""policyId"": ""org.eclipse.ditto:fancy-car"",
    ""definition"": ""org.eclipse.ditto:SomeModel:1.0.0"",
    ""attributes"": {
      ""manufacturer"": ""ACME"",
      ""VIN"": ""0815666337"",
      ""VIN2"": ""081567889""
    }
  },
  ""features"": {
    ""transmission"": {
      ""properties"": {
        ""automatic"": true,
        ""mode"": ""eco"",
        ""cur_speed"": 90,
        ""gear"": 5
      }
    }
  }
}




-------------------------------------

Does it need any policy updates to work with Kafka and read the messages ? because Iam using only default policy created with the helloworld thing creation for the fancy car example .



","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Mnezn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1515,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85MnqhX,ditto,1285466199,1515,NA,DerSchwilk,41327268,David Schwilk,,NA,2022-10-20T12:32:54Z,2022-10-20T12:32:54Z,"The policy is only important when the first step (Receiving the messages in the connection) works.
In order to CRUD your things via the connection the connections authorizationContext needs permissions in the things policy. I however doubt that that is the problem here because you would see a corresponding log in your connection.

Like stated earlier your connection doesn't seem to get any inbound messages. If you validated that your Kafka Broker publishes them correctly (If I get that correct you did that by subscribing manually to the topic), the most likely place where there could be a problem is in the connection configuration. (And there likely in the Source configuration.)

Can you check again that you configured the source correctly and followed the guide: https://www.eclipse.org/ditto/connectivity-protocol-bindings-kafka2.html#source-format

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85MnqhX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1515,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85MrKcZ,ditto,1286383385,1515,NA,rajkraleti,77378332,,,NA,2022-10-21T02:40:30Z,2022-10-21T02:40:30Z,"I have created connection following the connection source configuration document for source

below is the request response for connection information - 

http://localhost:8080/api/2/connections/
----------------------------------------------------------------------------------------
[
    {
        ""id"": ""ad573a5c-94f4-48e3-bd8f-2ce9dbc7096e"",
        ""name"": ""KafkatestConnection"",
        ""connectionType"": ""kafka"",
        ""connectionStatus"": ""open"",
        ""uri"": ""tcp://10.0.2.15:9092"",
        ""sources"": [
            {
                ""addresses"": [
                    ""testTopic""
                ],
                ""consumerCount"": 1,
                ""qos"": 1,
                ""authorizationContext"": [
                    ""ditto:inbound-auth-subject""
                ],
                ""enforcement"": {
                    ""input"": ""{{ header:device_id }}"",
                    ""filters"": [
                        ""{{ entity:id }}""
                    ]
                },
                ""acknowledgementRequests"": {
                    ""includes"": []
                },
                ""headerMapping"": {},
                ""payloadMapping"": [
                    ""Ditto""
                ],
                ""replyTarget"": {
                    ""address"": ""testTopic"",
                    ""headerMapping"": {},
                    ""expectedResponseTypes"": [
                        ""response"",
                        ""error"",
                        ""nack""
                    ],
                    ""enabled"": true
                }
            }
        ],
        ""targets"": [
            {
                ""address"": ""events/twin"",
                ""topics"": [
                    ""_/_/things/twin/events""
                ],
                ""authorizationContext"": [
                    ""ditto:outbound-auth-subject""
                ],
                ""headerMapping"": {
                    ""message-id"": ""{{ header:correlation-id }}"",
                    ""content-type"": ""application/vnd.eclipse.ditto+json""
                }
            }
        ],
        ""clientCount"": 1,
        ""failoverEnabled"": true,
        ""validateCertificates"": true,
        ""processorPoolSize"": 1,
        ""specificConfig"": {
            ""saslMechanism"": ""plain"",
            ""bootstrapServers"": ""10.0.2.15:9092""
        },
        ""tags"": []
    }
]
--------------------------------------------------------------------------------------------------------------

**Connection status for that connection Id looks succesful as well .**

--------------------------------------------------------------------------------------------------------------
{
    ""type"": ""connectivity.responses:retrieveConnectionStatus"",
    ""status"": 200,
    ""connectionId"": ""ad573a5c-94f4-48e3-bd8f-2ce9dbc7096e"",
    ""connectionStatus"": ""open"",
    ""liveStatus"": ""open"",
    ""recoveryStatus"": ""succeeded"",
    ""connectedSince"": ""2022-10-20T15:04:39.211715677Z"",
    ""clientStatus"": [
        {
            ""type"": ""client"",
            ""client"": ""9bfdab8c0333"",
            ""status"": ""open"",
            ""recoveryStatus"": ""succeeded"",
            ""statusDetails"": ""CONNECTED"",
            ""inStateSince"": ""2022-10-20T15:04:39.211715677Z""
        }
    ],
    ""sourceStatus"": [
        {
            ""type"": ""source"",
            ""client"": ""9bfdab8c0333"",
            ""address"": ""testTopic"",
            ""status"": ""open"",
            ""statusDetails"": ""Consumer started."",
            ""inStateSince"": ""2022-10-20T15:04:33.995469339Z""
        }
    ],
    ""targetStatus"": [
        {
            ""type"": ""target"",
            ""client"": ""9bfdab8c0333"",
            ""address"": ""events/twin"",
            ""status"": ""open"",
            ""statusDetails"": ""Producer started."",
            ""inStateSince"": ""2022-10-20T15:04:33.993705568Z""
        }
    ]
}

--------------------------------------------------------------------------------------------------------------","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85MrKcZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1515,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85MroM1,ditto,1286505269,1515,NA,DerSchwilk,41327268,David Schwilk,,NA,2022-10-21T06:12:14Z,2022-10-21T06:12:14Z,"I tried to reproduce it to provide you some more information on what could be the issue.
For me it worked just fine and I received messages in my connection:

{
    ""connectionId"": ""a1a89b9a-d440-48d6-9d44-9070a42da7bb"",
    ""connectionLogs"": [
        {
            ""correlationId"": ""<not-provided>"",
            ""timestamp"": ""2022-10-21T05:48:19.597112Z"",
            ""category"": ""connection"",
            ""type"": ""other"",
            ""level"": ""success"",
            ""message"": ""Connection successful""
        },
        {
            ""correlationId"": ""<not-provided>"",
            ""timestamp"": ""2022-10-21T05:48:33.821454Z"",
            ""category"": ""connection"",
            ""type"": ""other"",
            ""level"": ""failure"",
            ""message"": ""Connection failed due to: Unexpected consumer failure. - cause <KafkaConnectionFailed>: Can't establish connection with kafkaBroker after 1 attempts. At 2022-10-21T05:48:33.821366Z. Will reconnect after PT5S""
        },
        {
            ""correlationId"": ""<not-provided>"",
            ""timestamp"": ""2022-10-21T05:48:38.845390Z"",
            ""category"": ""connection"",
            ""type"": ""other"",
            ""level"": ""success"",
            ""message"": ""Trying to reconnect""
        },
        {
            ""correlationId"": ""<not-provided>"",
            ""timestamp"": ""2022-10-21T05:48:46.577822Z"",
            ""category"": ""connection"",
            ""type"": ""other"",
            ""level"": ""success"",
            ""message"": ""Connection successful""
        },
        {
            ""correlationId"": ""82f77fec-562f-4d0e-8615-5b48a6fcf662"",
            ""timestamp"": ""2022-10-21T06:05:37.348240Z"",
            ""category"": ""response"",
            ""type"": ""published"",
            ""level"": ""success"",
            ""message"": ""Successfully published response. - Message headers: [content-type=application/vnd.eclipse.ditto+json, correlation-id=82f77fec-562f-4d0e-8615-5b48a6fcf662] - Message payload: {\""topic\"":\""unknown/unknown/things/twin/errors\"",\""headers\"":{\""kafka.timestamp\"":\""1666332337332\"",\""kafka.topic\"":\""testTopic\"",\""ditto-connection-id\"":\""a1a89b9a-d440-48d6-9d44-9070a42da7bb\"",\""response-required\"":false,\""content-type\"":\""application/json\"",\""correlation-id\"":\""82f77fec-562f-4d0e-8615-5b48a6fcf662\""},\""path\"":\""/\"",\""value\"":{\""status\"":400,\""error\"":\""placeholder:unresolved\"",\""message\"":\""The placeholder '{{ header:device_id }}' could not be resolved.\"",\""description\"":\""Some placeholders could not be resolved. Check the spelling of the placeholder and make sure all required headers are set.\""},\""status\"":400}"",
            ""address"": ""_responses""
        },
        {
            ""correlationId"": ""82f77fec-562f-4d0e-8615-5b48a6fcf662"",
            ""timestamp"": ""2022-10-21T06:05:37.349040Z"",
            ""category"": ""source"",
            ""type"": ""consumed"",
            ""level"": ""failure"",
            ""message"": ""Ran into a failure when parsing an input command: The placeholder '{{ header:device_id }}' could not be resolved. Some placeholders could not be resolved. Check the spelling of the placeholder and make sure all required headers are set. - Message headers: [correlation-id=82f77fec-562f-4d0e-8615-5b48a6fcf662, kafka.timestamp=1666332337338, kafka.topic=testTopic, content-type=application/vnd.eclipse.ditto+json, ditto-expected-response-types=[\""response\"",\""error\"",\""nack\""], ditto-connection-id=a1a89b9a-d440-48d6-9d44-9070a42da7bb, ditto-reply-target=0] - Message payload: null"",
            ""address"": ""testTopic""
        },
        {
            ""correlationId"": ""82f77fec-562f-4d0e-8615-5b48a6fcf662"",
            ""timestamp"": ""2022-10-21T06:05:37.349213Z"",
            ""category"": ""response"",
            ""type"": ""dispatched"",
            ""level"": ""failure"",
            ""message"": ""Response was not successful. This may be the case for when a thing could not be found or the authorization subject of the consuming source was not allowed to write a thing. - Message headers: [response-required=false, correlation-id=82f77fec-562f-4d0e-8615-5b48a6fcf662, kafka.timestamp=1666332337338, kafka.topic=testTopic, content-type=application/vnd.eclipse.ditto+json, ditto-expected-response-types=[\""response\"",\""error\"",\""nack\""], ditto-connection-id=a1a89b9a-d440-48d6-9d44-9070a42da7bb, ditto-reply-target=0] - Message payload: {\""type\"":\""things.responses:errorResponse\"",\""status\"":400,\""thingId\"":\""unknown:unknown\"",\""payload\"":{\""status\"":400,\""error\"":\""placeholder:unresolved\"",\""message\"":\""The placeholder '{{ header:device_id }}' could not be resolved.\"",\""description\"":\""Some placeholders could not be resolved. Check the spelling of the placeholder and make sure all required headers are set.\""}}"",
            ""address"": ""_responses"",
            ""entityType"": ""thing"",
            ""entityId"": ""unknown:unknown""
        },

1. Are you sure that the IP-Adress specified in your connection resolves to the correct Kafka broker? (In my case I used localhost:9092 since I run my broker in a local docker container)
2. Are you sure you created the zookeper topic correctly (Running `/opt/bitnami/kafka/bin/kafka-topics.sh --create --zookeeper SERVER-IP:2181 --replication-factor 1 --partitions 1 --topic testTopic` in the broker container does that perfectly fine for me)
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85MroM1/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1515,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85M5FHg,ditto,1290031584,1515,NA,rajkraleti,77378332,,,NA,2022-10-25T06:05:30Z,2022-10-25T06:05:30Z,"Yes the IP Address was my local IP and followed the same procedure to install & Create topics with Kafka .

I was able to consume Kafka messages from Listener written in Java from that topic but Ditto is not listening anything . 

Does it have any version related constraints to work with Kafka ? I have installed scala [kafka_2.13-3.2.3](https://downloads.apache.org/kafka/3.2.3/kafka_2.13-3.2.3.tgz)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85M5FHg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1515,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85M_u5G,ditto,1291775558,1515,NA,DerSchwilk,41327268,David Schwilk,,NA,2022-10-26T09:44:54Z,2022-10-26T09:44:54Z,"There are no incompatibilities with newer versions that I'm aware of.
I tried it with version 2.7.0, maybe you can try again with that version. If it works then, maybe there really is a problem.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85M_u5G/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1515,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85NeZc5,ditto,1299814201,1515,NA,rajkraleti,77378332,,,NA,2022-11-02T08:31:49Z,2022-11-02T08:31:49Z,"@DerSchwilk  can you please share me the connection info . 

Assuming the local Kafka installation with VM has a problem .

I have tried a managed Kafka Connecting with Eclipse Ditto this time.

Below are the steps I have replicated .

1. Created a org.eclipse.ditto:fancy-car following the example given 
_-----------------------------------------------------------------
https://www.eclipse.org/ditto/intro-hello-world.html
---------------------------------------------------------------------
2. using the policy nginx :ditto I have created a connection to managed confluent kafka (Apache 2.X) as my local Kafka is not working .
with below connection 
{
  ""id"": ""kafka123"",
  ""name"": ""Kafka Connection"",
  ""connectionType"": ""kafka"",
  ""connectionStatus"": ""open"",
  ""uri"": ""tcp://pkc-6ojv2.us-west4.gcp.confluent.cloud:9092"",
  ""sources"": [
    {
      ""addresses"": [
        ""testTopic""
      ],
      ""consumerCount"": 1,
      ""qos"": 1,
      ""authorizationContext"": [
        ""nginx:ditto""
      ],
      ""acknowledgementRequests"": {
        ""includes"": []
      },
      ""headerMapping"": {},
      ""payloadMapping"": [
        ""Ditto""
      ],
      ""replyTarget"": {
        ""enabled"": false
      }
    }
  ],
  ""targets"": [],
  ""clientCount"": 1,
  ""failoverEnabled"": true,
  ""validateCertificates"": true,
  ""processorPoolSize"": 1,
  ""specificConfig"": {
    ""saslMechanism"": ""plain"",
    ""bootstrapServers"": ""pkc-6ojv2.us-west4.gcp.confluent.cloud:9092""
  },
  ""tags"": []
}

these Kafka Topics are unsecured and accessible for next 10 days if you want to replicate .

3. then published messages in Ditto protocol as explained 

{ ""topic"": ""fancycar/2/things/twin/commands/modify"", ""headers"": { ""correlation-id"": ""112211"", ""content-type"": ""application/vnd.eclipse.ditto+json"" }, ""path"": ""/"", ""value"": { ""thingId"": ""facncycar:2"", ""policyId"": ""org.eclipse.ditto:fancy-car"", ""definition"": ""org.eclipse.ditto:SomeModel:1.0.0"", ""attributes"": { ""location"": { ""latitude"": 44.673856, ""longitude"": 8.261719 } }, ""features"": { ""accelerometer"": { ""properties"": { ""x"": 3.141, ""y"": 2.718, ""z"": 1, ""unit"": ""g"" }, ""desiredProperties"": { ""x"": 4 } } } } }

________________________________________________________________________________
https://www.eclipse.org/ditto/protocol-examples-creatething.html
_________________________________________________________________________________

How ever there was no message / update in the logs apart from below log messages

![image](https://user-images.githubusercontent.com/77378332/199438788-966903d2-200f-4c84-8d0e-7ae157ea5b87.png)


I have tried replicating similar use case with MQTT connection , HTTP Connection - I was able to manage things how ever Kafka is not working due to any reason . Please observe it.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85NeZc5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1515,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Ne9OH,ditto,1299960711,1515,NA,DerSchwilk,41327268,David Schwilk,,NA,2022-11-02T09:52:28Z,2022-11-02T09:52:28Z,"When trying to connect to your managed Kafka instance, I also get the reconnecting logs in my connection.
Observing the connectivity service logs, I can see that the connection fails with `TimeoutException: Timeout expired while fetching topic metadata Kafka`, which hints to an authentication failure. (https://stackoverflow.com/questions/54254686/timeoutexception-timeout-expired-while-fetching-topic-metadata-kafka)

I thus also created a confluent hosted Kafka instance to validate and get the same issue with an anonymus authentication. and TCP.
If I use an API key as credentials and SSL, I get it working and also receive messages in my connection.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Ne9OH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1515,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Orpe2,ditto,1320064950,1515,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-11-18T14:26:06Z,2022-11-18T14:26:06Z,"Closing due to inactivity to provided feedback, assuming the question has been resolved.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Orpe2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1515,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85PEqLw,ditto,1326621424,1515,NA,rajkraleti,77378332,,,NA,2022-11-24T15:54:47Z,2022-11-24T15:54:47Z,"It worked wih SSL - Thank you @thjaeckle , will try some more use cases and post questions . Thanks a lot for the support @DerSchwilk ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85PEqLw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1516,https://api.github.com/repos/eclipse-ditto/ditto/issues/1516,ditto,1416059274,1516,ditto command link not working,Suyasharya165,76938754,,,CLOSED,2022-10-20T06:44:18Z,2022-10-20T11:12:51Z,"Hello, I'm trying to Retrieve connection logs. so, I follow Establishing connecting to an Apache Kafka endpoint Documentation there is one link Ditto's [Connectivity service](https://github.com/eclipse/ditto/blob/master/documentation/src/main/resources/pages/ditto/architecture-services-connectivity.html)  I'm unable to open that link can you help me for that.
[
![image](https://user-images.githubusercontent.com/76938754/196875516-53b26cb5-6ae0-4cd2-94dc-5127893d8fda.png)
](url)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1516/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1516,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Mmu5m,ditto,1285221990,1516,NA,DerSchwilk,41327268,David Schwilk,,NA,2022-10-20T09:29:08Z,2022-10-20T09:29:08Z,"Hey @Suyasharya165,
where did you get that link from?
Accessing the documentation in the GH repository as markdown is possible via:
https://github.com/eclipse/ditto/blob/master/documentation/src/main/resources/pages/ditto/architecture-services-connectivity.md
as HTML via:
https://www.eclipse.org/ditto/architecture-services-connectivity.html","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Mmu5m/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1516,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85MnNKD,ditto,1285345923,1516,NA,Suyasharya165,76938754,,,NA,2022-10-20T11:12:51Z,2022-10-20T11:12:51Z,Issue resolved thank you for your time.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85MnNKD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1517,https://api.github.com/repos/eclipse-ditto/ditto/issues/1517,ditto,1418184634,1517,ditto 3.0 with docker gives gateway:command.timeout problem (v3.0 and master branch),nacidai,1357299,Naci Dai,@nacidai,CLOSED,2022-10-21T11:21:11Z,2022-10-21T11:47:53Z,"Testing ditto 3.0 locally with docker-compose. All API calls gives timeout.  A quick isnpection reveals that the service sare ""unhealthy"".  Is there a step missing from the documentation (i.e  concierge seems to referenced still)  ? 

Here are the steps to reproduce the problem (on a Mac with docker v20.10.17, compose v2.10.2):

1. git clone git@github.com:composiv/ditto.git
2. cd ditto/deployment/docker
3. git switch release-3.0
4. docker-compose up -d
5. curl -u devops --request GET localhost:8080/status/health
    Response is:
```json
{""label"":""roles"",""status"":""DOWN"",""details"":[{""ERROR"":""See detailed messages for: expected-roles.""}],""children"":[{""label"":""expected-roles"",""status"":""DOWN"",""details"":[{""ERROR"":{""missing-roles"":[""concierge""],""extra-roles"":[]}}]},{""label"":""policies"",""status"":""UP"",""children"":[{""label"":""172.24.0.2:2551"",""status"":""UP"",""children"":[{""label"":""persistence"",""status"":""UP""}]}]},{""label"":""connectivity"",""status"":""UP"",""children"":[{""label"":""172.24.0.7:2551"",""status"":""UP"",""children"":[{""label"":""persistence"",""status"":""UP""}]}]},{""label"":""things"",""status"":""UP"",""children"":[{""label"":""172.24.0.6:2551"",""status"":""UP"",""children"":[{""label"":""persistence"",""status"":""UP""}]}]},{""label"":""gateway"",""status"":""UP"",""children"":[{""label"":""172.24.0.8:2551"",""status"":""UP""}]},{""label"":""things-search"",""status"":""UP"",""children"":[{""label"":""172.24.0.5:2551"",""status"":""UP"",""children"":[{""label"":""persistence"",""status"":""UP""},{""label"":""backgroundSync"",""status"":""UP"",""details"":[{""INFO"":{""enabled"":true,""events"":[],""progressPersisted"":"":_"",""progressIndexed"":"":_""}}]}]}]}]}
```
6.  Follow steps from https://www.eclipse.org/ditto/intro-hello-world.html
```
curl -u ditto:ditto -X GET 'http://localhost:8080/api/2/things/org.eclipse.ditto:fancy-car'
```
Response:
```json
{""status"":408,""error"":""gateway:command.timeout"",""message"":""The Command reached the specified timeout of 60,000ms."",""description"":""Try increasing the command timeout.""}
```
7. docker ps  produces the following:
```sh
docker ps
CONTAINER ID   IMAGE                                COMMAND                  CREATED          STATUS                     PORTS                      NAMES
9e051df9ac56   nginx:1.21-alpine                    ""/docker-entrypoint.…""   18 minutes ago   Up 8 minutes               0.0.0.0:8080->80/tcp       docker-nginx-1
800629a3f1cd   swaggerapi/swagger-ui:v4.14.1        ""/docker-entrypoint.…""   18 minutes ago   Up 8 minutes               80/tcp, 8080/tcp           docker-swagger-ui-1
af91565c20a4   eclipse/ditto-things:latest          ""/sbin/tini -- java …""   36 minutes ago   Up 8 minutes (unhealthy)   8080/tcp                   docker-things-1
2c34a2b7ebd5   eclipse/ditto-gateway:latest         ""/sbin/tini -- java …""   36 minutes ago   Up 8 minutes (unhealthy)   0.0.0.0:8081->8080/tcp     docker-gateway-1
ac1ebff0cec0   eclipse/ditto-things-search:latest   ""/sbin/tini -- java …""   36 minutes ago   Up 8 minutes (unhealthy)   8080/tcp                   docker-things-search-1
f58389d61f6b   eclipse/ditto-connectivity:latest    ""/sbin/tini -- java …""   36 minutes ago   Up 8 minutes (unhealthy)   8080/tcp                   docker-connectivity-1
5c567db8aaac   mongo:4.4                            ""docker-entrypoint.s…""   36 minutes ago   Up 8 minutes               0.0.0.0:27017->27017/tcp   docker-mongodb-1
7bd5f7f8bf01   eclipse/ditto-policies:latest        ""/sbin/tini -- java …""   36 minutes ago   Up 8 minutes (unhealthy)   8080/tcp                   docker-policies-1
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1517/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1517,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Ms41C,ditto,1286835522,1517,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-10-21T11:32:11Z,2022-10-21T11:32:11Z,"```
""details"":[{""ERROR"":{""missing-roles"":[""concierge""]
```
that is strange .. concierge is no longer part of 3.0

Did you upgrade from a prior Ditto version?
It could be that the images are still the old ones .. I think the Docker ""latest"" is not automatically pulled unless you force to do so.

Did you down via ""docker-compose"" first before updating and did you explicitly ""pull""?
E.g. via:
```
docker-compose down
docker-compose pull
docker-compose up -d
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Ms41C/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1517,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Ms65y,ditto,1286844018,1517,NA,nacidai,1357299,Naci Dai,@nacidai,NA,2022-10-21T11:40:19Z,2022-10-21T11:40:19Z,Fantastic catch!  That was the problem. All good (It maybe worthwhile adding a section to the documentation to either use the DITTO_VERSION variable or clean the local image cache),"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Ms65y/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1521,https://api.github.com/repos/eclipse-ditto/ditto/issues/1521,ditto,1425134828,1521,Configure on a namespace basis the fields to index in the thing-search,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2022-10-27T07:01:29Z,2024-01-24T14:42:53Z,"Currently, the complete JSON of a thing (including all attributes+features) is automatically indexed in the search.
We learned from input of the community that this might not always be wished as this could lead to a lot of load on the search DB - which could e.g. be prevented if some fields are never used in the search ""fields"".","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1521/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1521,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85hIAL5,ditto,1629487865,1521,NA,an1310,727152,Erik Salter,,NA,2023-07-10T18:30:35Z,2023-07-10T18:30:35Z,This is of strategic interest to us -- when would be a good time to go over requirements/design ideas for a possible contribution?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85hIAL5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1521,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85hPZWW,ditto,1631425942,1521,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-07-11T19:53:11Z,2023-07-11T19:53:11Z,"@an1310 I will try to find out where this could be placed the best.
As far as I remember there was an extension point for just that purpose used by Bosch's commercial offering of Ditto. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85hPZWW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1521,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85h3IBM,ditto,1641840716,1521,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-07-19T10:34:14Z,2023-07-19T10:34:14Z,"@an1310 I took myself a closer look and I think I found the mentioned extension point to do index only custom fields in namespaces.

I think to remember that we explicitly added `CachingSignalEnrichmentFacade` extension point in Ditto to retrieve only selectively parts of ""things"" (based on their namespace ""search index configuration"") when processing - retrieving a ""partial thing"" in order to update the search index:
https://github.com/eclipse-ditto/ditto/blob/022dffee0c1a21cedd57b74310683db5d7ce881e/internal/models/signalenrichment/src/main/java/org/eclipse/ditto/internal/models/signalenrichment/DittoCachingSignalEnrichmentFacade.java#L113-L158

We would need a custom `JsonFieldSelector` configured per namespace name, defining which fields of a ""thing"" to retrieve (and cache) for updating the search index.
The configuration could look like:
* a list/map of namespaces
   * namespace
      * indexedFields as `JsonFieldSelector`

Example what I have in mind (to put in the `search.conf` as configuration of the mentioned extension point):
https://github.com/eclipse-ditto/ditto/blob/022dffee0c1a21cedd57b74310683db5d7ce881e/thingsearch/service/src/main/resources/search.conf#L11

```
namespaces = [
  {
    namespace-name = ""org.eclipse.ditto.foo""
    indexed-fields = [ 
      ""thingId"", 
      ""policyId"", 
      ""_revision"", 
      ""_created"", 
      ""_modified"", 
      ""attributes/indexed-one""
      ""attributes/complex-jsonobj""
    ]
  }
]
```

I hope that helps a little. Maybe a Ditto committer still at Bosch can share more details how this can be done, based on the identified extension point.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85h3IBM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1521,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85q3qYh,ditto,1792976417,1521,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-11-03T19:20:00Z,2023-11-03T19:20:00Z,@an1310 are you working on this? Any update or PR for providing early feedback? ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85q3qYh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1521,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85rSuNk,ditto,1800069988,1521,NA,an1310,727152,Erik Salter,,NA,2023-11-07T20:48:56Z,2023-11-07T20:48:56Z,Yes I am.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85rSuNk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1523,https://api.github.com/repos/eclipse-ditto/ditto/issues/1523,ditto,1426745560,1523,Kubernetes deployment descriptors were not updated to reflect Ditto 3.0 changes,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2022-10-28T06:19:02Z,2022-12-16T09:12:46Z,"Also reported via Gitter.
E.g. ""java -jar starter.jar"" is still used all over the place, e.g.:
https://github.com/eclipse-ditto/ditto/blob/229ff8c9e5ddb0b6770dc534c5e6496bff4cf5e6/deployment/kubernetes/deploymentFiles/ditto/ditto-cluster.yaml#L135","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1523/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1523,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85NKLdc,ditto,1294514012,1523,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-10-28T06:19:20Z,2022-10-28T06:19:20Z,@kalinkostashki could you have a look please?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85NKLdc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1524,https://api.github.com/repos/eclipse-ditto/ditto/issues/1524,ditto,1426883096,1524,"Provide option to skip a modification in the ""twin"" if the value ""is equal""",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2022-10-28T08:22:23Z,2023-05-26T09:32:35Z,"The default behaviour of Ditto is for each ""ModifyCommand"" to apply the modification and also the twin in the MongoDB.
This could be optimised:
* the existing behaviour should be the same (everything else would be an API break)
* there is an option (e.g. passed via header) to define ""only update this value if it is not equal to the provided one""
* using ""JSON equality"" Ditto could check for the equality of the passed value (on all levels)
* if the value is equal (according to JSON equality)
   * the new value is not applied to the twin (persistence)
   * a DittoRuntimeException with status 304 (not modified) is returned
   * no event is emitted

Header name suggestion:
* **if-equal**: **update**/skip
   * similar to specified HTTP header ""if-match"" 
   * to be read as: update resource even if new value is equal to existing value
   * current default: update

To consider:
* what about merge/PATCH requests?
   * I would assume that for each modification in the patch the equality check is applied.
   * so a patch with `if-equal: skip` would only patch provided values differing from existing ones.
   * only if no single entry was applied, a patch with that option would be responded to with 304 (not modified)
* order of json arrays
   * I would consider 2 json arrays with the same entries, but different order as different
   * as the order of a json array could also be used to declare eg a priority ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1524/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1524,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85NLNjg,ditto,1294784736,1524,NA,jufickel-b,17162397,Juergen Fickel,,NA,2022-10-28T09:49:58Z,2022-10-28T09:49:58Z,"The idea to optimise is definitely welcome. The only thing that I worry about a bit is returning a DittoRuntimeException because from a semantic point of view the modification did not fail. Technically it would be possible to simply add 304 to the HTTP status codes of a regular modification response. The response does not imply that anything was changed.

TL;DR I suggest to favour a regular modification response (with status 304) over an error response.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85NLNjg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1524,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85NLQV9,ditto,1294796157,1524,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-10-28T09:59:38Z,2022-10-28T09:59:38Z,"We already do that - do you suggest to change the existing exceptions as well?

https://github.com/eclipse-ditto/ditto/blob/229ff8c9e5ddb0b6770dc534c5e6496bff4cf5e6/things/model/src/main/java/org/eclipse/ditto/things/model/signals/commands/exceptions/ThingPreconditionNotModifiedException.java#L52-L58

https://github.com/eclipse-ditto/ditto/blob/229ff8c9e5ddb0b6770dc534c5e6496bff4cf5e6/policies/model/src/main/java/org/eclipse/ditto/policies/model/signals/commands/exceptions/PolicyPreconditionNotModifiedException.java#L52-L58","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85NLQV9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1524,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85NLRzc,ditto,1294802140,1524,NA,jufickel-b,17162397,Juergen Fickel,,NA,2022-10-28T10:04:25Z,2022-10-28T10:04:25Z,"Then, I guess, we should stick to the established approach. (Although, I would be surprised to receive an exception for an idempotent action that actually produced the effect it was supposed to produce.)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85NLRzc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1524,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85NLSi_,ditto,1294805183,1524,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-10-28T10:06:57Z,2022-10-28T10:06:57Z,"At the HTTP API, you will already get a HTTP 304 - with an ""Error payload"", but that can easily be ignored :)
At protocol level I agree, there it is semantically strange to receive an ""error"".

We can look into improving this when tackling the issue ..","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85NLSi_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1524,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85NLT5X,ditto,1294810711,1524,NA,jufickel-b,17162397,Juergen Fickel,,NA,2022-10-28T10:12:44Z,2022-10-28T10:12:44Z,"By the way, the HTTP API documentation does not state, that 304 is a possible result for modification (at least not for putting an attribute or a feature property) and thus also not the ""error payload"". So, formally, it would not be an API break if we changed it for HTTP as well, would it?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85NLT5X/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1524,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85NLUgq,ditto,1294813226,1524,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-10-28T10:15:26Z,2022-10-28T10:15:26Z,"For the HTTP API it probably would not be an API break - but for the DittoProtocol channels it would.

edit: Maybe we could add another header which would state that ""not modified"" shall not be responded as exception/error, but as ""success"". Or we could implicitly do that for the new ""equality check"" header... that would be a new API functionality and therefore not a break.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85NLUgq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1525,https://api.github.com/repos/eclipse-ditto/ditto/issues/1525,ditto,1427088400,1525,"Provide ""aggregation"" functions in Ditto search",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2022-10-28T11:01:44Z,2023-04-04T14:27:13Z,"Utilising the MongoDB search index, Ditto could support aggregation queries via its search API, e.g. in order to find out the mean temperature value of hundreds/thousands of selected things.

Our used [RQL syntax](https://github.com/persvr/rql) also provides ""aggregations"":
> aggregate(<property|function>,...) - Aggregates the array, grouping by objects that are distinct for the provided properties, and then reduces the remaining other property values using the provided functions

..
> sum(<property?>) - Finds the sum of every value in the array or if the property argument is provided, returns the sum of the value of property for every object in the array
mean(<property?>) - Finds the mean of every value in the array or if the property argument is provided, returns the mean of the value of property for every object in the array
max(<property?>) - Finds the maximum of every value in the array or if the property argument is provided, returns the maximum of the value of property for every object in the array
min(<property?>) - Finds the minimum of every value in the array or if the property argument is provided, returns the minimum of the value of property for every object in the array
recurse(<property?>) - Recursively searches, looking in children of the object as objects in arrays in the given property value

If any adopter of Ditto already had a need for such kind of aggregations, please provide feedback and your use-cases for such a feature.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1525/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1525,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ZA1Sa,ditto,1493390490,1525,NA,thfries,20593339,Thomas Fries,,NA,2023-04-02T16:56:54Z,2023-04-02T16:56:54Z,"Hi @thjaeckle,
I recently thought about this feature. We have a clear need to have aggregations of important thing states to manage a large fleet of devices. To have an overview of groups of devices we need to aggregate the connectivity or health or update state of the devices within a group efficiently. Current solution is to replicate the important states in a relational db and update the replica based on a Ditto Kafka connection. Aggregation is then done efficiently in the RDB (home turf for that). But not good to having need for two databases.

So if there is an easy way to use aggregation capabilities of the MongoDB this would be beneficial.

- aggregations should be possible based on the values of an attribute (e.g. ""groupId"")
- policies of the things should be considered for aggregation (only aggregate value that the subject is allowed to see)

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ZA1Sa/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1525,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ZA6iL,ditto,1493411979,1525,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-04-02T18:41:41Z,2023-04-02T18:41:41Z,"@thfries very interesting, thx for the input 

> aggregations should be possible based on the values of an attribute (e.g. ""groupId"")

You mean that eg the ""groupId"" would be used as ""group by"" in an aggregation?
But having another specified field? 

From your comment I assume that you would need a ""distinct count"" aggregation?
I can currently not imagine how to declare such a aggregation with the RQL syntax. 



For other queries and interpreting the sparse RQL documentation (and the lack of a specified count aggregation), I would assume that e.g. a ""count"" aggregation could look like:
```
GET /api/2/search/things?filter=aggregate(attributes/groupId,count())
```

With a response being e.g.:
```json
{
  ""items"": [
    {
      ""my-group-1"": 42
    },
    {
      ""my-group-2"": 7
    }
  ], 
... 
}
```

Another example to find out the mean temperature of a room with devices providing temperature readings:
```
GET /api/2/search/things?filter=aggregate(attributes/roomId,mean(features/temperature/properties/currentReading))
```

With a response being e.g.:
```json
{
  ""items"": [
    {
      ""kitchen"": 21.32
    },
    {
      ""living"": 22.03
    }
  ],
... 
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ZA6iL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1525,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ZCoxu,ditto,1493863534,1525,NA,thfries,20593339,Thomas Fries,,NA,2023-04-03T08:04:26Z,2023-04-03T08:04:26Z,"Thanks for your examples. Sorry for not being precise here. You're right, the use case is not only about aggregation but also about grouping. The full example in SQL would be:

> select room, connectivity, count(*)
> from thing
> group by room, connectivity


with a response being:

room | connectivity | count(*)
-- | -- | --
kitchen | online | 3
living | offline | 1
living | online | 4

So the interesting part is to get a statistic overview of your fleet.
May be using a SQL db for that purpose is a valid solution. But I know relational databases much better than RQL or MongoDB...





","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ZCoxu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1525,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ZGGtb,ditto,1494772571,1525,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-04-03T18:18:54Z,2023-04-03T18:18:54Z,"I try to find a syntax which would support your query.. 

```
GET /api/2/search/things?filter=aggregate(attributes/roomId,features/connectivity/properties/state,count())
```

With a response being e.g.:
```json
{
  ""items"": [
    {
      ""attributes/roomId"": ""kitchen"", 
      ""features/connectivity/properties/state"": ""online"", 
      ""count()"": 3
    },
    {
      ""attributes/roomId"": ""living"", 
      ""features/connectivity/properties/state"": ""offline"", 
      ""count()"": 1
    },
    {
      ""attributes/roomId"": ""living"", 
      ""features/connectivity/properties/state"": ""online"", 
      ""count()"": 4
    }
  ],
... 
}
```

Thinkable would also be sorting aggregations:

```
GET /api/2/search/things?filter=aggregate(attributes/roomId,features/connectivity/properties/state,count())&sort(-count())
```

Translated to MongoDB this query could be (I did not verify yet):
```
db.search.aggregate([
    {$group : {_id:{""attributes/roomId"":""$t.attributes.roomId"", ""features/connectivity/properties/state"":""$t.features.connectivity.properties.state""}, ""count()"":{$count:{}}}},
    {$sort : {value:-1}}
])
```

When I find the time, I will try those aggregation queries in MongoDB. 😉","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ZGGtb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1533,https://api.github.com/repos/eclipse-ditto/ditto/issues/1533,ditto,1445884873,1533,401 Unauthorized when I try to create connection on Ditto Explorer ui,Felice-Copp56,55912466,Felice Coppola,,CLOSED,2022-11-11T18:56:20Z,2022-11-23T07:10:14Z,"Hi, I have deployed Eclipse ditto on my k8s cluster with the helm chart, the ditto-nginx service gateway is up and running at localhost:8080. 
I can create policy, the thing but when I try to create connection for MQTT with js mapping in the Ditto explorer ui I got a 401 unauthorized error, I have used devops and foobar credentials.
Also, I have tried to create the connection via curl command on bash  by following this tutorial https://github.com/eclipse-ditto/ditto-examples/blob/master/mqtt-bidirectional/README.md, in this case MQTT pub and sub works on the bash but on my web browser I can't see any update of my device.
Any idea?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1533/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1533,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85OO4e9,ditto,1312524221,1533,NA,thfries,20593339,Thomas Fries,,NA,2022-11-12T16:44:11Z,2022-11-12T16:44:11Z,"Hi @Felice-Copp56,
for the UI error, please check if you provided the right user for the connections api:
<img width=""790"" alt=""image"" src=""https://user-images.githubusercontent.com/20593339/201481110-8bfebe5d-20e0-4228-b641-ffc058fe8676.png"">

There is no tutorial for setting up your case with the UI. Here are the steps I tried:

1. Create the MQTT 5 with JS Mapping connection
2. Set the connection status to ""open"" and save the connection. Be sure the live connection status turns open: 
<img width=""961"" alt=""image"" src=""https://user-images.githubusercontent.com/20593339/201482660-ca0a397b-b2c8-43c1-9306-d91f39762551.png"">

3. (optional) Enable connection logs on the connection: 
<img width=""956"" alt=""image"" src=""https://user-images.githubusercontent.com/20593339/201482714-baa37034-ae27-4630-861d-4af5e1ba2201.png"">
 
4. Create an empty thing: 
<img width=""1430"" alt=""image"" src=""https://user-images.githubusercontent.com/20593339/201482784-418a2ffe-3529-44f3-9d80-d1bee961453a.png"">

5. Adjust the policy of the thing and allow the MQTT connection to access it. Add a new entry ""MQTT"" to the policy and add the two authorization subjects of the connection to the entry: 
<img width=""1430"" alt=""image"" src=""https://user-images.githubusercontent.com/20593339/201482952-71a68dee-89f6-41ed-9972-a9fe67bc8edc.png"">

6. On your MQTT client, create a sample ditto message in a file `message.json` (adapt the ID of your thing created in step 4):

```
{
  ""topic"": ""org.eclipse.ditto/7dab7c0f-67e5-423c-a859-ed7982699788/things/twin/commands/modify"",
  ""path"": ""/attributes/serialNumber"",
  ""value"": 123456789
}
```

8. Publish that message to the MQTT broker:
`mosquitto_pub -h test.mosquitto.org -p 1883 -t eclipse-ditto-sandbox/7dab7c0f-67e5-423c-a859-ed7982699788/update -D publish content-type application/vnd.eclipse.ditto+json -f message.json`

9. Message is processed and the thing should have a new serial number attribute: 
<img width=""961"" alt=""image"" src=""https://user-images.githubusercontent.com/20593339/201483649-eed03b7c-cbf9-4d2a-8be7-6833ac0d3ef1.png"">

<img width=""1431"" alt=""image"" src=""https://user-images.githubusercontent.com/20593339/201483691-f95d3ca7-1edf-4cd8-9108-526929c3eb7c.png"">

Let me know if that works for you. Be sure to separate namespace and thingName in the message payload and topic names in the right way.
In the other example, the connection just uses the `nginx:ditto` authorization subject. So instead of changing the policy (step 5), you can also change the authorization subjects in the connection from `ditto:inbound-auth-subject` to `nginx:ditto` (same for `ditto:outbound-auth-subject`). The way described above is a bit more complicated but mimics a real scenario where you control independent access rights for the device and the application. 
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85OO4e9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1533,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85OO-Qk,ditto,1312547876,1533,NA,thfries,20593339,Thomas Fries,,NA,2022-11-12T18:41:32Z,2022-11-12T18:41:32Z,"To complete the ""bi-directional"" example: For the cloud to device communication first option is to set a **desired state of a feature**:


1. On your MQTT client, execute: `mosquitto_sub -h test.mosquitto.org -p 1883 -t eclipse-ditto-sandbox/#`

2. Create a new feature for your thing: 
<img width=""1432"" alt=""image"" src=""https://user-images.githubusercontent.com/20593339/201485274-e74a5cde-5486-489e-a63e-eec3af08eee5.png"">

3. Your MQTT client should receive a message:
```
{
  ""topic"": ""org.eclipse.ditto/7dab7c0f-67e5-423c-a859-ed7982699788/things/twin/events/created"",
  ""path"": ""/features/new-feature"",
  ""headers"": ...,
  ""value"": {}
}
```

4. Set a desired state of the new feature: 
<img width=""1429"" alt=""image"" src=""https://user-images.githubusercontent.com/20593339/201485581-30161482-c33c-42cc-acf5-db684f7ba52d.png"">

5. Message received by the MQTT client:
```
{
  ""topic"": ""org.eclipse.ditto/7dab7c0f-67e5-423c-a859-ed7982699788/things/twin/events/modified"",
  ""path"": ""/features/new-feature"",
  ""headers"": ...,
  ""value"": {
    ""desiredProperties"": {
      ""mode"": ""DEBUG""
    }
  }
}
```

Instead of using a desired state, you can also just **send a command to the device**:

1. Add another topic `_/_/things/live/messages` to the target of the connection: 
<img width=""520"" alt=""image"" src=""https://user-images.githubusercontent.com/20593339/201490341-f5bb22b9-f50c-46f2-8ed8-660eb904aa5e.png"">

 
2. On your new feature send a message with `timeout=0` (fire and forget): 
<img width=""1426"" alt=""image"" src=""https://user-images.githubusercontent.com/20593339/201489553-afdd2644-57fc-4bea-866d-dba277be71c5.png"">

3. MQTT client receives this command as a live message:
```
{
  ""topic"": ""org.eclipse.ditto/7dab7c0f-67e5-423c-a859-ed7982699788/things/live/messages/ENABLE_DEBUG_MODE"",
  ""path"": ""/features/new-feature/inbox/messages/ENABLE_DEBUG_MODE"",
  ""headers"": ...,
  ""value"": ""{}""
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85OO-Qk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1533,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Orp51,ditto,1320066677,1533,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-11-18T14:27:15Z,2022-11-18T14:27:15Z,"@Felice-Copp56 did the provided answers by @thfries solve you problem?
Then a short feedback would be the polite thing to do ..

Thanks @thfries for jumping in ..","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Orp51/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1536,https://api.github.com/repos/eclipse-ditto/ditto/issues/1536,ditto,1449707280,1536,Created by accident,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2022-11-15T12:29:43Z,2022-11-15T12:53:45Z,nevermind,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1536/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1537,https://api.github.com/repos/eclipse-ditto/ditto/issues/1537,ditto,1451544353,1537,Ditto doesn't send message to a Kafka Topic,Felice-Copp56,55912466,Felice Coppola,,CLOSED,2022-11-16T12:48:10Z,2022-11-30T13:11:52Z,"Hi, I'm trying to connect Eclipse Ditto with Apache Kafka in order to send the received messages in a Influxdb's bucket but at moment seems not work.
I have configured a MQTT connection for sending data from an arduino device to ditto and this happens without problem.
Also, I have created a Kafka 2.x connection that returns me a 200 response but the message sends via the MQTT broker doesn't compare on the topic.
This is my connection file
`curl -X POST -i -u devops:foobar  -H 'Content-Type: application/json' -d '{

   ""targetActorSelection"":""/system/sharding/connection"",

   ""headers"":{

      ""aggregate"":false

   },

   ""piggybackCommand"":{

      ""type"":""connectivity.commands:createConnection"",

      ""connection"":{

         ""id"":""kafka123"",

         ""connectionType"":""kafka"",

         ""connectionStatus"":""open"",

         ""failoverEnabled"":true,

         ""uri"":""tcp://192.168.77.74:9092"",

         ""specificConfig"":{

            ""bootstrapServers"":""192.168.77.74:9092""

         },

         ""sources"":[

            {

               ""addresses"":[""topic01""],

               ""consumerCount"":1,

               ""qos"":0,

               ""authorizationContext"":[""nginx:ditto""],

               ""enforcement"":{

                  ""input"":""{{ header:device_id }}"",

                  ""filters"":[""{{ entity:id }}""]

               },

               ""headerMapping"":{

                  ""topic01"":""{{ header:topic01 }}"",

                  ""the-key"":""{{ header:kafka.key }}""

               },

               ""payloadMapping"":[""Ditto""],

               ""replyTarget"":{

                  ""enabled"":true,

                  ""address"":""topic01"",

                  ""headerMapping"":{

                     

                  },

                  ""expectedResponseTypes"":[

                     ""response"",

                     ""error"",

                     ""nack""

                  ]

               },

               ""acknowledgementRequests"":{

                  ""includes"":[]

               },

               ""declaredAcks"":[]

            }

         ]

      }

   }

}' 'http://192.168.77.74:8080/devops/piggyback/connectivity?timeout=10'`

The policy file presents the same authorizationContext = nginx:ditto
Any idea about this problem? I think that Ditto works as a Kafka Producer and with the Kafka 2.x connection send message on the topic but nothing","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1537/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1537,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Of9xW,ditto,1317002326,1537,NA,DerSchwilk,41327268,David Schwilk,,NA,2022-11-16T13:14:13Z,2022-11-16T13:14:13Z,"Hey @Felice-Copp56,
do I get that right, that you want to publish messages/events via your connection?
You configured only a source in your Kafka connection, from which Ditto can consume messages.
In order to also publish messages you need to specify a Kafka target.

https://www.eclipse.org/ditto/connectivity-protocol-bindings-kafka2.html#target-format
https://www.eclipse.org/ditto/basic-connections.html#targets","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Of9xW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1537,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85OgCQE,ditto,1317020676,1537,NA,Felice-Copp56,55912466,Felice Coppola,,NA,2022-11-16T13:26:42Z,2022-11-16T13:26:42Z,"@DerSchwilk Yes, I want to publish message received from a MQTT broker, on a Kafka Topic, is it possible in this way?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85OgCQE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1537,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85OgDSi,ditto,1317024930,1537,NA,DerSchwilk,41327268,David Schwilk,,NA,2022-11-16T13:29:42Z,2022-11-16T13:29:42Z,"Yes, in this case you likely want to publish live-messages which you sent via your MQTT source to Ditto.
You can configure your target to do exactly that: https://www.eclipse.org/ditto/basic-connections.html#target-topics-and-filtering","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85OgDSi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1537,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85OgJXv,ditto,1317049839,1537,NA,Felice-Copp56,55912466,Felice Coppola,,NA,2022-11-16T13:46:40Z,2022-11-16T13:46:40Z,"I have tried as you said but seems not to work, can I upload my connection config file here? Maybe I type wrong target","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85OgJXv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1537,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85OgaXM,ditto,1317119436,1537,NA,Felice-Copp56,55912466,Felice Coppola,,NA,2022-11-16T14:35:14Z,2022-11-16T14:35:14Z,"@DerSchwilk  This is my MQTT 5 JS mapping connection

`{
  ""id"": ""mqtt-connection-target"",
  ""name"": null,
  ""connectionType"": ""mqtt"",
  ""connectionStatus"": ""open"",
  ""uri"": ""tcp://192.168.151.74:1883"",
  ""sources"": [],
  ""targets"": [
    {
      ""address"": ""arduino/{{ thing:id }}"",
      ""topics"": [
        ""_/_/things/twin/events"",
        ""_/_/things/live/messages""
      ],
      ""qos"": 0,
      ""authorizationContext"": [
        ""nginx:ditto""
      ],
      ""headerMapping"": {},
      ""payloadMapping"": [
        ""javascript""
      ]
    }
  ],
  ""clientCount"": 1,
  ""failoverEnabled"": true,
  ""validateCertificates"": true,
  ""processorPoolSize"": 1,
  ""mappingDefinitions"": {
    ""javascript"": {
      ""mappingEngine"": ""JavaScript"",
      ""options"": {
        ""incomingScript"": ""function mapToDittoProtocolMsg(headers, textPayload, bytePayload, contentType) {return null;}"",
        ""outgoingScript"": ""function mapFromDittoProtocolMsg(namespace, id, group, channel, criterion, action, path, dittoHeaders, value, status, extra) {let textPayload = '{\""temperature\"": ' + value.measurements.properties.temperature + ', \""humidity\"": ' + value.measurements.properties.humidity + ', \""thingId\"": \""' + namespace + ':' + id + '\""}'; let bytePayload = null; let contentType = 'text/plain; charset=UTF-8'; return  Ditto.buildExternalMsg(dittoHeaders, textPayload, bytePayload, contentType);}"",
        ""loadBytebufferJS"": ""false"",
        ""loadLongJS"": ""false""
      }
    }
  },
  ""tags"": []
}`

While this is my Kafka 2.x 
`{
  ""id"": ""0ab4b527-617f-4f4f-8bac-4ffa4b5a8471"",
  ""name"": ""Kafka 2.x"",
  ""connectionType"": ""kafka"",
  ""connectionStatus"": ""open"",
  ""uri"": ""tcp://192.168.151.74:9092"",
  ""sources"": [
    {
      ""addresses"": [
        ""arduino""
      ],
      ""consumerCount"": 1,
      ""qos"": 1,
      ""authorizationContext"": [
        ""nginx:ditto""
      ],
      ""enforcement"": {
        ""input"": ""{{ header:device_id }}"",
        ""filters"": [
          ""{{ entity:id }}""
        ]
      },
      ""acknowledgementRequests"": {
        ""includes"": []
      },
      ""headerMapping"": {},
      ""payloadMapping"": [
        ""Ditto""
      ],
      ""replyTarget"": {
        ""address"": ""arduino"",
        ""headerMapping"": {},
        ""expectedResponseTypes"": [
          ""response"",
          ""error"",
          ""nack""
        ],
        ""enabled"": true
      }
    }
  ],
  ""targets"": [
    {
      ""address"": ""arduino"",
      ""topics"": [
        ""_/_/things/twin/events"",
        ""_/_/things/live/messages""
      ],
      ""authorizationContext"": [
        ""nginx:ditto""
      ],
      ""headerMapping"": {}
    }
  ],
  ""clientCount"": 1,
  ""failoverEnabled"": true,
  ""validateCertificates"": true,
  ""processorPoolSize"": 1,
  ""specificConfig"": {
    ""saslMechanism"": ""plain"",
    ""bootstrapServers"": ""192.168.151.74:9092""
  },
  ""tags"": []
}`","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85OgaXM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1537,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Ogjj6,ditto,1317157114,1537,NA,DerSchwilk,41327268,David Schwilk,,NA,2022-11-16T14:59:31Z,2022-11-16T14:59:31Z,"Your MQTT connection has no source configured, only a target. Ditto has no way to consume messages from that connection without a source.
You should configure a source accordingly (https://www.eclipse.org/ditto/basic-connections.html#sources) and check your connection logs to whether you're really consuming the messages published by your Arduino device. (https://www.eclipse.org/ditto/connectivity-manage-connections.html#retrieve-connection-logs)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Ogjj6/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1537,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Ogkif,ditto,1317161119,1537,NA,Felice-Copp56,55912466,Felice Coppola,,NA,2022-11-16T15:02:12Z,2022-11-16T15:02:12Z,"Sorry, I upload the wrong connection, I have used this type but the same result. I need to create a source and a target MQTT connection? Or only a MQTT-source and Kafka 2.x connection as explained above?
`{
    ""targetActorSelection"": ""/system/sharding/connection"",
    ""headers"": {
    	""aggregate"": false
    },
    ""piggybackCommand"": {
        ""type"": ""connectivity.commands:createConnection"",
        ""connection"": {
            ""id"": ""mqtt-connection-source"",
            ""connectionType"": ""mqtt"",
            ""connectionStatus"": ""open"",
            ""failoverEnabled"": true,
            ""uri"": ""tcp://MY_IP:1883"",
            ""sources"": [{
                ""addresses"": [""arduino/#""],
                ""authorizationContext"": [""nginx:ditto""],
                ""qos"": 0,
                ""filters"": []
            }],
            ""mappingContext"": {
                ""mappingEngine"": ""JavaScript"",
                ""options"": {
                    ""incomingScript"": ""function mapToDittoProtocolMsg(headers, textPayload, bytePayload, contentType) {const jsonString = String.fromCharCode.apply(null, new Uint8Array(bytePayload)); const jsonData = JSON.parse(jsonString); const thingId = jsonData.thingId.split(':'); const value = {measurements: {properties: {temperature: jsonData.temperature, humidity: jsonData.humidity}}}; return Ditto.buildDittoProtocolMsg(thingId[0], thingId[1], 'things', 'twin', 'commands', 'modify', '/features', headers, value);}"",
                    ""outgoingScript"": ""function mapFromDittoProtocolMsg(namespace, id, group, channel, criterion, action, path, dittoHeaders, value, status, extra) {return null;}"",
                    ""loadBytebufferJS"": ""false"",
                    ""loadLongJS"": ""false""
                }
            }
        }
    }
}`","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Ogkif/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1537,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85OgtLw,ditto,1317196528,1537,NA,DerSchwilk,41327268,David Schwilk,,NA,2022-11-16T15:25:36Z,2022-11-16T15:25:36Z,"I would advice in the first place to assure that your connections doesn't use the legacy payload mapping schema and instead utilizes the new one:
`{
	""name"": ""exampleConnection"",
	""sources"": [{
		""addresses"": [""<source>""],
		""authorizationContext"": [""...""],
		""payloadMapping"": [""javaScript""]
	}],
	""mappingDefinitions"": {
		""javaScript"": {
			""mappingEngine"": ""JavaScript"",
			""options"": {
				""incomingScript"": ""function mapToDittoProtocolMsg(headers, textPayload, bytePayload, contentType) {const jsonString = String.fromCharCode.apply(null, new Uint8Array(bytePayload)); const jsonData = JSON.parse(jsonString); const thingId = jsonData.thingId.split(':'); const value = {measurements: {properties: {temperature: jsonData.temperature, humidity: jsonData.humidity}}}; return Ditto.buildDittoProtocolMsg(thingId[0], thingId[1], 'things', 'twin', 'commands', 'modify', '/features', headers, value);}"",
				""outgoingScript"": ""function mapFromDittoProtocolMsg(namespace, id, group, channel, criterion, action, path, dittoHeaders, value, status, extra) {return null;}"",
				""loadBytebufferJS"": ""false"",
				""loadLongJS"": ""false""
			}
		}
	}
}
`
Then I would check the connection logs and see if the modify commands are correctly applied to the Thing. This at least tells, that it is not a failure in the consumption.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85OgtLw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1537,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85OguVg,ditto,1317201248,1537,NA,Felice-Copp56,55912466,Felice Coppola,,NA,2022-11-16T15:28:36Z,2022-11-16T15:28:36Z,"So, I need to use this type of template for source connection with the new payload mapping. For the Kafka target connection I need to use a specific template or my template is correct?
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85OguVg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1537,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85OuslI,ditto,1320864072,1537,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-11-19T11:29:12Z,2022-11-19T11:29:12Z,"I would suggest you try (back in my studying time that was part and the idea of studying and self learning) it out before asking the same questions over again via 3 feedback channels.

What you want is (probably, you must know best) an Mqtt connection with a source and a Kafka connection with a target.

If you want to update the twins/things managed in Ditto via Mqtt messages, you can subscribe in the Kafka connection target to twin events and publish those to Kafka.
If you just want to convert Mqtt messages to Kafka messages there are probably easier solutions than to do that via Ditto connections. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85OuslI/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1539,https://api.github.com/repos/eclipse-ditto/ditto/issues/1539,ditto,1469352466,1539,Unable to deploy with Kubernetes Minikube,Suyasharya165,76938754,,,CLOSED,2022-11-30T09:54:19Z,2022-12-16T09:12:46Z,"
Hi Team,

As per the recommendations given in the link 
https://github.com/eclipse-ditto/ditto/blob/master/deployment/kubernetes/README.md


I have tried to install ditto using Kubernetes today , How ever I don't see all the pods are running .

adding below screenshot for your reference

![Screenshot from 2022-11-30 15-17-54](https://user-images.githubusercontent.com/76938754/204763774-e72cf075-3258-4d97-9bc9-7c83c9a886c1.png)

When I go and check the logs - I see below error 
Error: Unable to access jarfile starter.jar

Can you please help me with it.

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1539/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1539,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85PZsLg,ditto,1332134624,1539,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-11-30T13:11:18Z,2022-11-30T13:11:18Z,"This unfortunately is a known issue: #1523

Maybe I can find some time working on a fix. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85PZsLg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1539,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Pkl3Y,ditto,1334992344,1539,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-12-02T09:41:40Z,2022-12-02T09:41:40Z,"@Suyasharya165 the issue is fixed in the descriptor file on ""master"" branch","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Pkl3Y/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1542,https://api.github.com/repos/eclipse-ditto/ditto/issues/1542,ditto,1474981373,1542,HTTP 1.1 Connectivity API - Source (aka Polling),jonaswre,3731681,Jonas Wrede,jonas.wrede@beyondit.gmbh,OPEN,2022-12-04T16:44:31Z,2023-04-01T08:54:17Z,"### Discussed in https://github.com/eclipse-ditto/ditto/discussions/1541

<div type='discussions-op-text'>

<sup>Originally posted by **jonaswre** December  3, 2022</sup>
I have read the whole documentation twice. 

Maybe I've missed something obvious, but in many scenarios its necessary to poll devices/gateways/services for data. 

Is there any build in way to achieve this? 
I would prefer not have to run my own service that polls http endpoints and sends the result to a message broker.


Thanks alot. </div>","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1542/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1542,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85PsIIQ,ditto,1336967696,1542,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-12-05T08:46:27Z,2022-12-05T08:46:27Z,"I think that is a good idea to use HTTP connection ""sources"" for configuring polling of HTTP APIs.

In order to do that, a ""Consumer"" for HTTP connection has to be created and started in `HttpPushClientActor` (currently, only a `HttpPublisherActor` is started there).
How to create and start the ""Consumer"" role can be looked at from the other connection types. It e.g. involves creating a new class extending the abstract `BaseConsumerActor` class.

Regarding the scheduling you asked in #1541: you can use Akka's scheduler to schedule repeating tasks (like the polling).
The polling interval should be configurable via the connection configuration (done in class `HttpPushSpecificConfig`).

The use of Akka's scheduler could look similar to (used in an Akka actor):
```java
Object message = ....;
Cancellable cancellable = getContext().getSystem().scheduler()
   .scheduleAtFixedRate(initialDelayFromConfig, intervalFromConfig, getSelf(),
        message, context.dispatcher(), ActorRef.noSender())
```

This will send the `message` each `intervalFromConfig` to `getSelf()` (the own actor) - this message should trigger the polling of the HTTP endpoint.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85PsIIQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1542,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85VHNM8,ditto,1427952444,1542,NA,Abhijeetmishr,43075376,Abhijeet Mishra,abhijeetmishra498@gmail.com,NA,2023-02-13T13:33:59Z,2023-02-13T13:33:59Z,"@thjaeckle If I am not wrong this is related to message polling from queue service with the help of Akka Actor at periodic intervals or at certain intervals.
I have prior experience working with Akka Actor with Aws sqs in scala.
I will appreciate if there is more brief to this.
Regards","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85VHNM8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1542,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85VNE2C,ditto,1429491074,1542,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-02-14T10:28:38Z,2023-02-14T10:28:38Z,"> @thjaeckle If I am not wrong this is related to message polling from queue service with the help of Akka Actor at periodic intervals or at certain intervals.

@Abhijeetmishr not exactly .. it is about polling an HTTP endpoint at a configured location, HTTP verb and path ..
I would suggest to create a new connection type ""http-poll"" for that which only supports ""sources"" - that requires quite a bit of understanding of the Ditto connectivity service.

If you are willing to try to work on that, I can write some stuff down how/where to start .. but this is a bigger journey :)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85VNE2C/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1542,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85VNMju,ditto,1429522670,1542,NA,Abhijeetmishr,43075376,Abhijeet Mishra,abhijeetmishra498@gmail.com,NA,2023-02-14T10:54:11Z,2023-02-14T10:54:11Z,"@thjaeckle Thank you for quick response will appreciate any kind of help.
I would love to start and learn/explore on the go and I am totally available for any kind of dev related stuff either short or long term journey.
Hoping forward to learn and collaborate with community.
Regards
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85VNMju/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1542,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85VU8-5,ditto,1431556025,1542,NA,Abhijeetmishr,43075376,Abhijeet Mishra,abhijeetmishra498@gmail.com,NA,2023-02-15T15:32:48Z,2023-02-15T15:32:48Z,@thjaeckle Please provide any supporting doc so that I can start working on this asap.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85VU8-5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1542,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85VaI3F,ditto,1432915397,1542,NA,Abhijeetmishr,43075376,Abhijeet Mishra,abhijeetmishra498@gmail.com,NA,2023-02-16T11:07:34Z,2023-02-16T11:07:34Z,"@thjaeckle @jonaswre I have gone through this doc [link](https://www.abhinavpandey.dev/blog/polling) looking for more resources to understand this topic and looking forward to explore ditto connectivity service.
Pardon me if I am spamming I am just getting impatient.

Regards","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85VaI3F/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1542,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85VaZ9y,ditto,1432985458,1542,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-02-16T12:04:47Z,2023-02-16T12:04:47Z,"@Abhijeetmishr I am currently on vacation and cannot provide implementation hints.
I suggest to try out and understand the current http connection type and have a look at the httppush code:
https://github.com/eclipse-ditto/ditto/tree/master/connectivity%2Fservice%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fditto%2Fconnectivity%2Fservice%2Fmessaging%2Fhttppush

What this http push connection type is currently missing is an implementation for ""sources"".
The to be added HTTP polling would be such a connection  source. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85VaZ9y/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1542,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85V1okq,ditto,1440123178,1542,NA,Abhijeetmishr,43075376,Abhijeet Mishra,abhijeetmishra498@gmail.com,NA,2023-02-22T14:28:36Z,2023-02-22T14:28:36Z,"> @Abhijeetmishr I am currently on vacation and cannot provide implementation hints. I suggest to try out and understand the current http connection type and have a look at the httppush code: https://github.com/eclipse-ditto/ditto/tree/master/connectivity%2Fservice%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fditto%2Fconnectivity%2Fservice%2Fmessaging%2Fhttppush
> 
> What this http push connection type is currently missing is an implementation for ""sources"". The to be added HTTP polling would be such a connection source.

@thjaeckle Please let me know when you are available. So that we can start working on this asap if you have bandwidth.
Regards","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85V1okq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1542,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85V16x3,ditto,1440197751,1542,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-02-22T14:58:03Z,2023-02-22T14:58:03Z,"@Abhijeetmishr you can start at any time - like I said I suggest to first grasp and understand the existing connections, especially the HTTP connection.
Even after my vacation I won't lay out a complete plan how to implement what - if I would do that, I could also implement it by myself and be much faster.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85V16x3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1542,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85V2Let,ditto,1440266157,1542,NA,Abhijeetmishr,43075376,Abhijeet Mishra,abhijeetmishra498@gmail.com,NA,2023-02-22T15:34:11Z,2023-02-22T15:34:11Z,"> @Abhijeetmishr you can start at any time - like I said I suggest to first grasp and understand the existing connections, especially the HTTP connection. Even after my vacation I won't lay out a complete plan how to implement what - if I would do that, I could also implement it by myself and be much faster.

@thjaeckle I am also not expecting complete layout there is no learning in that I have few questions if you can answer that, It helps in starting this.

> What is the trigger point for http-push ?
> and how to understand the flow for http-push ?
> What is the use-case of http-push in our project and why we are planning to implement http-poll ?

Pardon me if I am asking anything silly. I will appreciate any reference/hint provided for above questions.
I am beginner but I am ready to learn and do this at fast pace and I am absolutely positive about it.
Regards
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85V2Let/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1542,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85V2ohc,ditto,1440385116,1542,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-02-22T16:36:47Z,2023-02-22T16:36:47Z,"> What is the trigger point for http-push ?

Please read and understand the connections documentation: https://www.eclipse.org/ditto/basic-connections.html
I cannot explain better than in the extensive documentation does. 

> and how to understand the flow for http-push ?

The same as for all connection types, however http-push currently only supports connection targets (also see documentation for difference between sources and targets). 

> What is the use-case of http-push in our project and why we are planning to implement http-poll ?

Yes, please explain what the use case in your project is and how http polling will help. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85V2ohc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1542,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Wo9PM,ditto,1453577164,1542,NA,Abhijeetmishr,43075376,Abhijeet Mishra,abhijeetmishra498@gmail.com,NA,2023-03-03T14:02:40Z,2023-03-03T14:02:40Z,"@thjaeckle I have gone through the documentation and explored about sources and target.
But looking all at once seems overwhelming what are the baby steps I can take and then consolidate all the steps later on ?
 Regards","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Wo9PM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1542,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85WqFYD,ditto,1453872643,1542,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-03-03T17:37:37Z,2023-03-03T17:37:37Z,"To be honest, this is a really challenging issue to do. 
I currently do not have the capacity to guide you through this.

If you just seek for contributing, maybe a smaller issue would be better suited.. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85WqFYD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1542,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85WqKic,ditto,1453893788,1542,NA,Abhijeetmishr,43075376,Abhijeet Mishra,abhijeetmishra498@gmail.com,NA,2023-03-03T17:57:35Z,2023-03-03T17:57:35Z,"> To be honest, this is a really challenging issue to do. I currently do not have the capacity to guide you through this.
> 
> If you just seek for contributing, maybe a smaller issue would be better suited..

okay no issue meanwhile I will keep on exploring and try connect dots.
Thank you","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85WqKic/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1542,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Wywrr,ditto,1456147179,1542,NA,Abhijeetmishr,43075376,Abhijeet Mishra,abhijeetmishra498@gmail.com,NA,2023-03-06T13:34:22Z,2023-03-06T13:34:22Z,"@thjaeckle I don't understand which issue to pick next for contribution.
Please help","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Wywrr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1542,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85W1rAl,ditto,1456910373,1542,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-03-06T20:16:59Z,2023-03-06T20:16:59Z,"@Abhijeetmishr I currently do not see comparable low hanging fruit tasks as the 'ilike' was. All others are significantly more complex.
Do you use Ditto and have suggestions what to improve? That is IMO always the best option to contribute.
Improve something which you will benefit from by yourself.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85W1rAl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1542,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85W4Ttw,ditto,1457601392,1542,NA,Abhijeetmishr,43075376,Abhijeet Mishra,abhijeetmishra498@gmail.com,NA,2023-03-07T06:10:58Z,2023-03-07T06:10:58Z,"> @Abhijeetmishr I currently do not see comparable low hanging fruit tasks as the 'ilike' was. All others are significantly more complex. Do you use Ditto and have suggestions what to improve? That is IMO always the best option to contribute. Improve something which you will benefit from by yourself.

@thjaeckle Thank you for the guidance.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85W4Ttw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1542,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Y9KS5,ditto,1492427961,1542,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-03-31T18:36:08Z,2023-03-31T18:36:08Z,"Thinking about this issue I wondered how the polling would come to its thingIds to work on.
So you would e.g. define:
* each 30 minutes, poll an HTTP endpoint via GET
   * but what if the HTTP endpoint already includes a ""device id"" or a ""thing id""? where does that come from?

For other connection sources which are always reacting on an ""outside"" message, there are several ways to get a thingId:
* as part of protocol headers
* as part of e.g. protocol topic (e.g. for MQTT, Kafka)
* as part of the received payload

When a source now is triggered by a cron-job/polling, those information sources do not exist, so where do they come from? Ideas:
* one connection per thingId to poll for
   * does not scale very well - only usable for ""small use cases""
* static configuration in the connection of a list of thing IDs
   * not very dynamic :/
* result of an internal search query, determining thingIds ... (e.g. searching for all devices of type ""gateway"" in Ditto, e.g. identified by an attribute)
   * could internally done via ""streaming"" the found thingIds in order to not need paging 
* call of another HTTP API returning the list of ids first (this could also be Ditto's own search API endpoint maybe?)
   * but what about paging? 

I think I tend into determining the list of thingIds to poll an HTTP API for via either static configuration of a list or by using an internal search.
Do you have ideas on that @jonaswre ?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Y9KS5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1542,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Y-5M9,ditto,1492882237,1542,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-04-01T08:54:17Z,2023-04-01T08:54:17Z,This issue could be superseded by #1609 ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Y-5M9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1558,https://api.github.com/repos/eclipse-ditto/ditto/issues/1558,ditto,1507737176,1558,HTTP retry mechanism,BobClaerhout,3315222,Bob Claerhout,,OPEN,2022-12-22T11:50:05Z,2023-03-06T13:36:05Z,"We have an HTTP-push connection configured to provide digital twin updates to 3rd party webservices.
This connection sometimes fails (because of network connectivity, server update on the other end, ...). It would be nice if some retry mechanism would retry the push and not fail immediately.
As discussed with @thjaeckle, it's possible to do this using acknowledgements and design a retry mechanism in the business application but in our case the business application is unaware of which connections exist. Therefor it would be nice if the pushing mechanism within ditto is a bit more robust.
The proposal is to have specificConfig entries (in this case for HTTP, but might be expanded to other protocols) configuring the retry mechanism on a single connection.
This is just the start of the discussion and the details are still to be figured out.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1558/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1558,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85RSOfT,ditto,1363732435,1558,NA,jufickel-b,17162397,Juergen Fickel,,NA,2022-12-23T08:29:26Z,2022-12-23T08:29:26Z,I think this is a valuable feature to have. One thing to think about is to ensure that (possible massive retries) do not impede the rest of Ditto. I. e. we should establish boundaries which might not be harmed by user config.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85RSOfT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1558,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85WyxS-,ditto,1456149694,1558,NA,Abhijeetmishr,43075376,Abhijeet Mishra,abhijeetmishra498@gmail.com,NA,2023-03-06T13:36:05Z,2023-03-06T13:36:05Z,@thjaeckle should I pick this up for contribution ?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85WyxS-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1559,https://api.github.com/repos/eclipse-ditto/ditto/issues/1559,ditto,1507858192,1559,Multiple Ditto Services on several K8S nodes,LiuYangMrLY,30631593,Liu Yang,,CLOSED,2022-12-22T13:09:18Z,2023-01-05T12:31:28Z,"After reading the offered documentation, I came upon a question that stumped me. If I deploy the external dependency MongoDB on several K8S nodes which can be considered as a single MongoDB, and deploy multiple Ditto on other nodes configured to use the single MongoDB, when a same request reaches different Ditto node, is the behavior (e.g., the data returned) same? If not, what is the different behavior and why?

P.S. Whether there are some solutions to deploy multiple Ditto Services on several K8S nodes?
Thank you.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1559/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1559,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85RO95h,ditto,1362878049,1559,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-12-22T14:05:24Z,2022-12-22T14:05:24Z,"What do you mean with ""deploy multiple Ditto on other nodes""?
As long as this is one Ditto cluster, you can scale out every single Ditto service (eg Ditto-things to as many instances as you require for handling your load).

Configuring several separate Ditto clusters to use the same MongoDB instance using the same collections is a really bad idea, the underlying event sourcing mechanism which Ditto makes use of will cause corrupt DB entries if eg the same Thing is updated by multiple Ditto installations.

Because of this, a blue/green update of Ditto is also not advisable. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85RO95h/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1559,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85RPESP,ditto,1362904207,1559,NA,youxiho1,32670951,,,NA,2022-12-22T14:27:57Z,2022-12-22T14:27:57Z,"> What do you mean with ""deploy multiple Ditto on other nodes""? As long as this is one Ditto cluster, you can scale out every single Ditto service (eg Ditto-things to as many instances as you require for handling your load).
> 
> Configuring several separate Ditto clusters to use the same MongoDB instance using the same collections is a really bad idea, the underlying event sourcing mechanism which Ditto makes use of will cause corrupt DB entries if eg the same Thing is updated by multiple Ditto installations.
> 
> Because of this, a blue/green update of Ditto is also not advisable.

Hi, I'm also wondering about how to deploy a ditto cluster on several servers (via kubernetes). Ditto is the core component of my system, so I'm trying to prevent SPOF(single point of failure). I think I should deploy a ditto cluster on several servers (via kubernetes)? Or any other advice on how to achieve this goal?

I've read the document files but I didn't find a tutorial about scaling out ditto service/deploying ditto on several computers (to become a whole cluster). Am I lacking something important?

Thank for your help in advance!","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85RPESP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1559,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85RPYGn,ditto,1362985383,1559,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2022-12-22T15:39:38Z,2022-12-22T15:39:38Z,"Sure, just deploy Ditto via kubernetes and adjust the scale to >1 per service/role.
There is nothing documented as this is common kubernetes basics. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85RPYGn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1561,https://api.github.com/repos/eclipse-ditto/ditto/issues/1561,ditto,1518254288,1561,Hopefully Devices and thing are many-to-many Mapping,cFl3iz,17589866,Sawyer,784838898@qq.com,CLOSED,2023-01-04T03:53:44Z,2023-01-05T12:28:58Z,"Hello, I have a question to ask: 
   Can a Hono device Map multiple ditto Thing? When hono releases telemetry data, multiple Thing Are Updated.
I've seen it【https://www.eclipse.org/ditto/2018-05-02-connecting-ditto-hono.html#steps-in-hono】
But [Incoming JavaScript Mapping]  return Ditto.buildDittoProtocolMsg() It looks like you can only update ""one thing"" ......

I was hoping you could tell me why...","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1561/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1561,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85RuLf4,ditto,1371060216,1561,NA,kalinkostashki,101703236,Kalin Kostashki,,NA,2023-01-04T15:17:50Z,2023-01-04T15:17:50Z,"Hi there,

Could you provide more context on the use case? What you mentioned above is a one-to-many mapping.

In general the model that Ditto encourages is that a Device(be it a Gateway or not) to send a message and update the corresponding digital twin. So each twin is a separate entity representing a real world **thing**.

In theory what you want is possible, but you would have to remove the **enforcement** for the specific **Source** from which you are consuming the messages > [Info on source enforcement](https://www.eclipse.org/ditto/basic-connections.html#source-enforcement)
Normally you would have to configure your [JavaScript payload mapper](https://www.eclipse.org/ditto/connectivity-mapping.html#javascript-mapper) where you have the option to return an array of DittoProtocolMessage via the [JavaScript mapping engine](https://www.eclipse.org/ditto/connectivity-mapping.html#javascript-mapping-engine).
If you have removed the **enforcement** there's nothing stopping you from sending the multiple messages that you want, but please be aware that the **authorizationContext** used for the **Source** would be evaluated against each Policy of the Things you are attempting to update.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85RuLf4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1561,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85RyW3v,ditto,1372155375,1561,NA,cFl3iz,17589866,Sawyer,784838898@qq.com,NA,2023-01-05T12:28:53Z,2023-01-05T12:28:53Z,"@kalinkostashki  
Ok I think I get it!
Thanks for your help! ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85RyW3v/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1562,https://api.github.com/repos/eclipse-ditto/ditto/issues/1562,ditto,1518525099,1562,Integrating Ditto with GraphDB,ap0-0rva,45037574,Apoorva V,,CLOSED,2023-01-04T08:16:49Z,2023-01-05T06:45:44Z,"Hello

Can we discuss the different possibilities of integrating ditto with GraphDB?
How should one proceed?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1562/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1562,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85RsiOS,ditto,1370629010,1562,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-01-04T08:46:34Z,2023-01-04T08:46:34Z,"Hi @ap0-0rva 
Please provide a little more background on your question.

E.g.:
What do you want to solve/achieve with such an integration?
What should be persisted in a Graph database?
Do you want to query the graph database via Ditto APIs?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85RsiOS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1562,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85RsqnW,ditto,1370663382,1562,NA,ap0-0rva,45037574,Apoorva V,,NA,2023-01-04T09:19:02Z,2023-01-04T09:19:02Z,"Hi- sorry about the insufficient information.

**My question aims toward these points: -**
1. Establish connectivity between Eclipse Ditto and Graph DB- modifying the Spring JPA in Ditto source code to work with Neo4J?
2. Any tight coupling existing in the spring data JPA?
3. Updates required to change the data pointers from Mongo DB to any other DB

As of now- we are using MongoDB service as backing datastore of Ditto (and also to get ditto running).
Is it possible to substitute MongoDB with a GraphDB - to store and query the data?
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85RsqnW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1562,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Rs9CM,ditto,1370738828,1562,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-01-04T10:20:37Z,2023-01-04T10:20:37Z,"I think you have a few misunderstandings.

1. Eclipse Ditto does not make use of Spring or Spring JPA - so there is nothing to modify on that level
2. Same as 1. - there is no Spring Data JPA used .. Ditto makes use of [Akka Persistence](https://doc.akka.io/docs/akka/current/persistence.html) for DB abstraction - as far as I know there is no persistence plugin for neo4j
3. 
   a.) Utilizing the ""Akka Persistence"" abstraction, switching to another DB should be possible, see the list of [supported plugins](https://doc.akka.io/docs/akka/current/persistence-plugins.html)
   b.) However the Ditto ""search"" functionality is purely based on MongoDB with no abstraction concept in place - that would require a rewrite to another DB

So substituting MongoDB with another DB could be possible for parts of Ditto (e.g. persistence of things, policies, connections) - but still with quite a few development efforts to replace the custom [MongoReadJournal](https://github.com/eclipse-ditto/ditto/blob/master/internal/utils/persistence/src/main/java/org/eclipse/ditto/internal/utils/persistence/mongo/streaming/MongoReadJournal.java) implementation provided by Ditto.
For other parts like the ""search"", replacing MongoDB would require a lot of development effort.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Rs9CM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1562,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Rwz8f,ditto,1371750175,1562,NA,ap0-0rva,45037574,Apoorva V,,NA,2023-01-05T03:45:35Z,2023-01-05T03:45:35Z,"Okay, I believe I need to study more. 
Thank you for your prompt response and the explanation @thjaeckle :) ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Rwz8f/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1563,https://api.github.com/repos/eclipse-ditto/ditto/issues/1563,ditto,1529060906,1563,outgoing mqtt connections fail to publish messages when tracing is enabled,JeffreyThijs,8981372,,,CLOSED,2023-01-11T13:38:34Z,2023-01-17T13:02:35Z,"If we enable open tracing on the ditto services, active outgoing mqtt connections (other types might have this problem as well) fail to publish their messages due to failing to transform `ExternalMessage` to `GenericMqttPublish` due to a blank `tracestate` header in the `ExternalMessage` headers.

The following error is thrown:

```
Ran into a failure when publishing signal: Failed to send message: 
Failed to transform ExternalMessage to GenericMqttPublish: The value 
must not be blank. Sending the message to an external system failed, 
please check if your connection is configured properly and the target 
system is available and consuming messages. - Message headers: 
[content-type=application/vnd.eclipse.ditto+json, tracestate=, 
context-tags=upstream.name=ditto-connectivity;, 
traceparent=00-3f0f66b556dc61e2250e5355bb33f83a-142e83f65527125d-01, 
correlation-id=782a32b1-4660-462d-8ac7-51d865bc3d0c] 
```
Is this expected behavior? If so, why is it required that the headers are blank? It is a bit silly that this requirement completely disrupts the publication of messages.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1563/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1563,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85SLoXt,ditto,1378780653,1563,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-01-11T13:49:18Z,2023-01-11T13:49:18Z,"This is surely not the expected behavior. Looks like a bug to me.

The error message seems to come from:
https://github.com/eclipse-ditto/ditto/blob/21f1b0d512857f37b8072d960dbe11de761f9887/connectivity/service/src/main/java/org/eclipse/ditto/connectivity/service/messaging/mqtt/hivemq/message/publish/UserProperty.java#L41-L45

Invoked here trying to map all external headers to MQTT5 user properties:
https://github.com/eclipse-ditto/ditto/blob/21f1b0d512857f37b8072d960dbe11de761f9887/connectivity/service/src/main/java/org/eclipse/ditto/connectivity/service/messaging/mqtt/hivemq/publishing/ExternalMessageToMqttPublishTransformer.java#L251

So this only affects MQTT5 connections.
Non-existant (`null`) values should probably just be ignored ..

@jufickel-b could you have a look?

*edit: had another look and adjusted the potential source of the error to MQTT5 user property mapping","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85SLoXt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1563,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85SQQAN,ditto,1379991565,1563,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-01-12T08:48:00Z,2023-01-12T08:48:00Z,"@JeffreyThijs if this is urgent to you, I suggest you propose a PR fixing the issue.
As tracing is currently not in use by the Bosch team, this probably won't get high priority.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85SQQAN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1563,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85SX8ji,ditto,1382009058,1563,NA,JeffreyThijs,8981372,,,NA,2023-01-13T15:20:35Z,2023-01-13T15:20:35Z,"@thjaeckle, ok thanks for the clarification. I'll try to provide a PR to fix this problem. However, we encountered this problem with mqtt3 sessions though.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85SX8ji/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1563,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Sk2al,ditto,1385391781,1563,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-01-17T13:02:35Z,2023-01-17T13:02:35Z,Fixed via #1565,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Sk2al/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1569,https://api.github.com/repos/eclipse-ditto/ditto/issues/1569,ditto,1556185314,1569,Pre authentication using OpenID Connect proxy,devinsaini,3825975,Devinder Saini,,CLOSED,2023-01-25T07:36:01Z,2023-01-27T21:03:17Z,"I'm trying to setup Ditto with Keycloak authentication in a Kubernetes environment. I see in the documentation that we can either use a pre-authentication mode or OIDC to authenticate. Is my understanding correct that we can also pre-authenticate with an OIDC provider using a proxy like oauth2-proxy?

I currently have the following setup in Rancher RKE2.

```mermaid
graph LR;
    A[Client]-->B[Nginx Ingress];
    B-->C[Ditto Gateway];
    B<-->D[oauth2-proxy];
    D-->E[Keycloak];
```

The authentication flow works fine when I substitute Ditto Gateway with a test service. It asks me for login if not authenticated already, and then returns a response from the service. However, when trying to access a Ditto endpoint, it always returns 401. In gateway logs, I see
```
No applicable authentication provider was found!
```

I have `ENABLE_PRE_AUTHENTICATION` set to true. Am I correct in assuming that I don't need to add Keycloak details in 
`-Dditto.gateway.authentication.oauth.openid-connect-issuers.myprovider.issuer` if I'm using this setup?

One thing pending is I haven't set the header `x-ditto-pre-authenticated`. I'm not sure how to create `<issuer>:<subject>` combination in Nginx Ingress annotations. I do have `x-auth-request-user` header getting forwarded from the Ingress though.
Following is the Ingress definition:
```
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/auth-response-headers: X-Auth-Request-User, X-Auth-Request-Email
    nginx.ingress.kubernetes.io/auth-signin: https://$host/oauth2/start?rd=$escaped_request_uri
    nginx.ingress.kubernetes.io/auth-url: https://$host/oauth2/auth
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  name: ditto-gateway
  namespace: edgecloud
spec:
  rules:
  - host: example.com
    http:
      paths:
      - backend:
          service:
            name: dragonfly-ditto-gateway
            port:
              number: 8080
        path: /ditto(/|$)(.*)
        pathType: Prefix
```


Another question I have is if I use pre-authentication mode, then can I still use WebSockets with Ditto Gateway.
Thirdly, will I be able to use JWT placeholders to extract scopes, provided I forward the JWT header from oauth2 proxy to nginx and then to Ditto?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1569/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1569,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85TpOhB,ditto,1403316289,1569,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-01-25T09:25:57Z,2023-01-25T09:25:57Z,"Hi @devinsaini 

> One thing pending is I haven't set the header `x-ditto-pre-authenticated`. I'm not sure how to create `<issuer>:<subject>` combination in Nginx Ingress annotations. I do have `x-auth-request-user` header getting forwarded from the Ingress though.

That exactly is the problem - Ditto will only look in the `x-ditto-pre-authenticated` header for the ""pre authenticated"" method.

> Another question I have is if I use pre-authentication mode, then can I still use WebSockets with Ditto Gateway.

Yes, that will work.

However, as you also ask:
> Thirdly, will I be able to use JWT placeholders to extract scopes, provided I forward the JWT header from oauth2 proxy to nginx and then to Ditto?

No, as only the ""subject"" would be passed via the `x-ditto-pre-authenticated` header and not the complete JWT.
If you need to configure JWT placeholders, you will have to configure the OpenID connect provider in Ditto and not use the OpenID connect proxy (which completely hides the JWT from Ditto).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85TpOhB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1569,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85TtSWR,ditto,1404380561,1569,NA,devinsaini,3825975,Devinder Saini,,NA,2023-01-26T00:05:55Z,2023-01-26T00:05:55Z,"@thjaeckle Thanks a lot for the answer.

I was able to hardcode the header and was able to see the response from the gateway. I'll find a way to set it from other headers in the ingress.
`""x-ditto-pre-authenticated"": ""keycloak:devin""`

https://example.com/ditto/api/2/whoami
```
{""defaultSubject"":""keycloak:devin"",""subjects"":[""keycloak:devin""]}
```

Great that WebSockets will work.

For using extra scopes, I think I can use Header Placeholders instead of JWT ones. I'll probably need group membership data for the subject which can be easily returned by oauth2-proxy in `X-Auth-Request-Groups` and then set by nginx ingress for the upstream.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85TtSWR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1569,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85TuGCz,ditto,1404592307,1569,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-01-26T06:01:01Z,2023-01-26T06:01:01Z,"> For using extra scopes, I think I can use Header Placeholders instead of JWT ones.

No, that won't work.
Header placeholders are not usable at this place (auth*), they are only available in the Ditto connectivity service. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85TuGCz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1569,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85TuTlt,ditto,1404647789,1569,NA,devinsaini,3825975,Devinder Saini,,NA,2023-01-26T07:39:57Z,2023-01-26T07:39:57Z,"Got you.

> No, as only the ""subject"" would be passed via the x-ditto-pre-authenticated header and not the complete JWT.
If you need to configure JWT placeholders, you will have to configure the OpenID connect provider in Ditto and not use the OpenID connect proxy (which completely hides the JWT from Ditto).

Does Ditto explicitly not look for JWT scopes if pre-authentication is enabled or is it just because the JWT token isn't available?
I'm asking because I can configure [oauth2-proxy](https://github.com/oauth2-proxy/oauth2-proxy) to pass the access token back upstream to Ditto as I've done below with the config options:
```
        - --set-xauthrequest
        - --pass-access-token
```

```
    ""x-auth-request-user"": ""devin"",
    ""x-ditto-pre-authenticated"": ""keycloak:devin"",
    ""x-auth-request-email"": ""test@gmail.com"",
    ""x-auth-request-groups"": ""/moderators,/superadmins"",
    ""x-auth-request-access-token"": ""eyJhbGciOiJSUzI1NiIsInR  ------- TRIMMED JWT TOKEN"",
    ""host"": ""example.com"",
    ""x-request-id"": ""678ad1e3addd56500df255d84cd89306"",
```

I've tested the token, it is valid and contains all the scopes. I do need to change the header name to `Authorization` and add `Bearer` prefix, but the token can be made available to Ditto Gateway. Do you think Ditto will accept it with pre-authentication enabled, to be used in placeholders?
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85TuTlt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1569,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85TuvHB,ditto,1404760513,1569,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-01-26T09:44:56Z,2023-01-26T09:44:56Z,"> Does Ditto explicitly not look for JWT scopes if pre-authentication is enabled or is it just because the JWT token isn't available?

Exactly, once `pre-authentication` is enabled and the `x-ditto-pre-authenticated` is set, the `Authorization` header will not be looked at (to e.g. extract the JWT from).
FMPOV this would not make sense, as the JWT'S signature has to be validated against the public key of the OAuth2 provider anyhow in order to be able to ""trust"" its claims.
I don't see a benefit why you would like to combine oauth2-proxy and pre-authentication with Ditto's built in OpenID connect support.

Or do you not have an OpenIdConnect supporting OAuth2 provider and still want to support it (that could be a reason)?
If that would be the case, maybe it would be possible to also support non-OpenIdConnect supporting OAuth2 providers (if the endpoints are e.g. statically configured where to get the provider's public key, etc.).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85TuvHB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1569,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Tzu43,ditto,1406070327,1569,NA,devinsaini,3825975,Devinder Saini,,NA,2023-01-27T06:18:57Z,2023-01-27T06:18:57Z,"I understand it now and got it working without pre-authentication mode too. My whole point of using oauth2-proxy was that the gateway apis can be called from browser also. From browser, its difficult to send Authorization header, but easier to send a session cookie. Oauth2-proxy and Nginx ingress allow cookie-based sessions and authentication redirection.
Also mentioned in Ditto documentation:

> The token has to be issued beforehand. The required logic is not provided by Ditto. When using the OIDC provider [keycloak](https://www.keycloak.org/), a project like [keycloak-gatekeeper](https://github.com/keycloak/keycloak-gatekeeper) may be put in front of Ditto to handle the token-logic.

I was confused, thinking that since I'm already authenticating using the proxy, I should be using pre-authentication mode.

Now, I'm using OpenID Connect configuration in Ditto (not using pre-authentication mode) and have configured the proxy to set Authorization header, which is then used by Ditto to extract the JWT data.

```mermaid
graph LR;
    A[Client]--1. cookie-->B[Nginx Ingress];
    B--4. Authorization-->C[Ditto Gateway];
    B--2. cookie-->D[oauth2-proxy];
    D--3. Authorization-->B
    D-->E[Keycloak]
    E--keys-->C;
```

This setup is working, and I can access Ditto endpoints now.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Tzu43/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1569,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Tzzqi,ditto,1406089890,1569,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-01-27T06:41:48Z,2023-01-27T06:41:48Z,"> > The token has to be issued beforehand. The required logic is not provided by Ditto. When using the OIDC provider [keycloak](https://www.keycloak.org/), a project like [keycloak-gatekeeper](https://github.com/keycloak/keycloak-gatekeeper) may be put in front of Ditto to handle the token-logic.
> 
> I was confused, thinking that since I'm already authenticating using the proxy, I should be using pre-authentication mode.

Ah, I see .. that notice in the docs is really a bit confusing.
I will adjust it.

> Now, I'm using OpenID Connect configuration in Ditto (not using pre-authentication mode) and have configured the proxy to set Authorization header, which is then used by Ditto to extract the JWT data.

Did you use nginx to do that?
That configuration might be a helpful addition to the configuration or the documentation of Ditto of how to do that with ""simple means"" as an nginx proxy.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Tzzqi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1569,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Tz4WO,ditto,1406109070,1569,NA,devinsaini,3825975,Devinder Saini,,NA,2023-01-27T07:11:29Z,2023-01-27T07:11:29Z,"oauth2-proxy needs to be configured to set the Authorization header for upstream, and we also need to configure Nginx Ingress to pass the header to upstream. I'll paste the samples from the manifests.

### Ditto Gateway Deployment
Configure OIDC provider in Ditto Gateway deployment
<pre>
        - name: JAVA_TOOL_OPTIONS
          value: -XX:ActiveProcessorCount=2 -XX:+ExitOnOutOfMemoryError -XX:+UseContainerSupport
            -XX:+UseStringDeduplication -Xss512k -XX:MaxRAMPercentage=50 -XX:+UseG1GC
            -XX:MaxGCPauseMillis=150 -Dakka.coordinated-shutdown.exit-jvm=on -Dakka.cluster.shutdown-after-unsuccessful-join-seed-nodes=60s
            -Dakka.cluster.failure-detector.threshold=15.0 -Dakka.cluster.failure-detector.expected-response-after=10s
            -Dakka.cluster.failure-detector.acceptable-heartbeat-pause=30s 
           <b> -Dditto.gateway.authentication.oauth.openid-connect-issuers.keycloak.issuer=keycloak.example.com/realms/example</b>
</pre>

### Oauth2-proxy Deployment
use `--set-authorization-header` arg to  set Authorization header from proxy to upstream
<pre>
      containers:
      - args:
        - --http-address=0.0.0.0:4180
        - --config=/bitnami/oauth2-proxy/conf/oauth2_proxy.cfg
        - --reverse-proxy=true
        - --whitelist-domain=example.com
        - --upstream=file:///dev/null
        - --email-domain=*
        - --scope=openid email
        <b>- --set-authorization-header</b>
        - --ssl-insecure-skip-verify=true
        - --ssl-upstream-insecure-skip-verify=true
        - --provider=oidc
        - --oidc-issuer-url=http://keycloak.example.com/realms/example
        - --redirect-url=https://example.com/oauth2/callback
</pre>

### Nginx Ingress
Create the Ingress object. We need to explicitly allow Authorization header to pass through to upstream Ditto Gateway.

<pre>
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    <b>nginx.ingress.kubernetes.io/auth-response-headers: Authorization</b>
    nginx.ingress.kubernetes.io/auth-signin: https://$host/oauth2/start?rd=$escaped_request_uri
    nginx.ingress.kubernetes.io/auth-url: https://$host/oauth2/auth
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  name: ditto-gateway
  namespace: edgecloud
spec:
  ingressClassName: nginx
  rules:
  - host: example.com
    http:
      paths:
      - backend:
          service:
            name: dragonfly-ditto-gateway
            port:
              number: 8080
        path: /ditto(/|$)(.*)
        pathType: Prefix

</pre>","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Tz4WO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1569,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Tz9Ta,ditto,1406129370,1569,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-01-27T07:41:18Z,2023-01-27T07:41:18Z,"@devinsaini thanks a lot for sharing your configuration, that looks great 👍 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Tz9Ta/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1572,https://api.github.com/repos/eclipse-ditto/ditto/issues/1572,ditto,1574040203,1572,Outstanding responses for consumed commands in connections should throttle the consumption of messages from the source,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2023-02-07T10:07:47Z,2023-06-13T07:44:01Z,"During a session with @alstanchev we found out that for Ditto managed **Kafka** connections (probably same for other backpressuring connections) when
* signals (e.g. ""ModifyThing"" commands) are processed
* which require a response (`responseRequired=true`- which is also the default) to be send to a configured ""replyTarget"" `address` on the same Kafka
* if those expected replies can not be delivered quickly enough
* the consumption of new messages (from the connection ""source"") will not backpressure and consume slower from Kafka, but it will drop responses with warn message `""Message is dropped as a result of backpressure strategy""`

That was some kind of unexpected for us both - the connection should be well aware that it cannot deliver responses quickly enough and should slow down consumption of messages.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1572/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1574,https://api.github.com/repos/eclipse-ditto/ditto/issues/1574,ditto,1577484817,1574,New Hono connection type configuration misses configuring the Hono tenant,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2023-02-09T08:52:07Z,2023-02-14T14:19:31Z,"The in #1548 added new connection type ""hono"" does not support configuring the Hono tenant.
Without the tenant, it is not possible to connect to the correct Kafka topics which Hono publishes to / consumes from for each tenant.

Before releasing 3.2.0, this must be able to be configured, 
My proposal is to simply use the connection's `connectionId` to use as the Hono `tenantName` - that way no additional configuration is needed.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1574/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1578,https://api.github.com/repos/eclipse-ditto/ditto/issues/1578,ditto,1583640883,1578,Allow setting ca certificate for Hono connection type from configuration file or env variable,devinsaini,3825975,Devinder Saini,,CLOSED,2023-02-14T07:25:22Z,2023-02-28T08:21:38Z,"In the new Hono connection type, Kafka connection settings are derived from static config values set from either the config file, or env variables. It will make sense to set the ca certificate from there since it is a part of hono connection configuration. In the current implementation, all Hono/Kafka settings can be set using env vars, but ca has to be specified during connection creation.

It is also a good idea to specify the ca certificate as a path on the file system. This way, we can mount the certificate as a volume and specify its path using an env variable.

Lastly, if there can be a way to sync the ca certificates of all Hono connections on let's say connectivity service restart, then it'll make certificate management much easier. In a production kubernetes setup, if a Hono/Kafka certificate is nearing expiration, the admin will simply have to update the mounted ca secret and restart the connectivity service.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1578/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1578,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85VMQ1u,ditto,1429278062,1578,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-02-14T07:50:19Z,2023-02-14T07:50:19Z,"That sounds like a good proposal.

@abalarev could you take a look and estimate how much effort that would be?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85VMQ1u/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1578,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85VO5Ep,ditto,1429967145,1578,NA,abalarev,103407469,Andrey Balarev,andrey.balarev@bosch.io,NA,2023-02-14T15:49:42Z,2023-02-14T15:49:42Z,"A new configuration property should be introduced to specify file path of the certificate - tiny effort.

Instead of adding a CA certificate to each connection (that needs one), the service could load the configured certificates in its own new trust store and combine it with the default trust store at service startup.
This could be used by connections of any type, not only 'hono'.
This seems not a complex task, though sometimes such stuff gets a bit tricky.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85VO5Ep/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1578,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85VPJnk,ditto,1430034916,1578,NA,devinsaini,3825975,Devinder Saini,,NA,2023-02-14T16:31:29Z,2023-02-14T16:31:29Z,"@abalarev You're right, this can be used by connections of any type. Specifying trust stores using a mounted volume will have significant advantages for certificate management. It will then also be possible for production setups to automatically rotate the certificates and update trust store using solutions like cert-manager and trust-manager.

Also, I don't think we need to worry about combining the new trust store with the default trust store. It's usually the responsibility of the cluster admin. For example, trust-manager already allows you to create trust stores that have built-in default CAs.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85VPJnk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1578,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85V6Jez,ditto,1441306547,1578,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-02-23T07:26:16Z,2023-02-23T07:26:16Z,"Is there something which has to be done in Ditto @devinsaini @abalarev ?
As far as I understand, the Java truststore location can be configured via environment variable and can be added as a volume/mount to the Ditto connectivity container ..","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85V6Jez/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1578,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85V9neg,ditto,1442215840,1578,NA,devinsaini,3825975,Devinder Saini,,NA,2023-02-23T18:08:51Z,2023-02-23T18:08:51Z,@thjaeckle Do you mean using `-Djavax.net.ssl.trustStore=/some/loc/on/server/mytruststore.jks` or is there a Ditto-specific truststore env variable? I will run a test using `-Djavax.net.ssl.trustStore` to see if it works.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85V9neg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1578,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85V9qMy,ditto,1442226994,1578,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-02-23T18:19:00Z,2023-02-23T18:19:00Z,"@devinsaini yes, exactly that is what I had in mind.. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85V9qMy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1578,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85V_-Dm,ditto,1442832614,1578,NA,devinsaini,3825975,Devinder Saini,,NA,2023-02-24T05:32:59Z,2023-02-24T05:32:59Z,"@thjaeckle I tried it and it worked. Thanks for pointing it out.
I'll close the ticket. Thank you.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85V_-Dm/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1578,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85WSw2U,ditto,1447759252,1578,NA,abalarev,103407469,Andrey Balarev,andrey.balarev@bosch.io,NA,2023-02-28T08:21:38Z,2023-02-28T08:21:38Z,"Thanks @thjaeckle and @devinsaini, nice news for me just coming back from vacation :)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85WSw2U/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1582,https://api.github.com/repos/eclipse-ditto/ditto/issues/1582,ditto,1596464065,1582,"Provide CoAP endpoint in Ditto's gateway, providing the Ditto HTTP API via CoAP",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2023-02-23T08:58:55Z,2023-04-20T17:20:27Z,"**Currently**, Ditto provides a very advanced (e.g. supporting partial requests/updates, ""PATCH"" updates, server sent events for notifications) HTTP API to be **consumed by either frontends, mobile applications or even backends**.

Ditto **currently does not directly provide an API for devices to interact with**. 
That was envisioned to be encapsulated via a separate ""Device Connectivity Layer"" (like an MQTT broker or an Eclipse Hono or a Apache Kafka).
That way, a managed Ditto ""connection"" would be responsible for connecting to this extra device connectivity layer and translating from/to the specific protocol (e.g. MQTT, AMQP, Kafka).

This has the **downside** that a (productive) setup with Ditto always requires an **additional broker or infrastructure for connecting devices**.  

## CoAP

CoAP, as an equivalent to HTTP for constrained devices, could be a perfect addition to Ditto in order to enable an IoT backend without the need for an additional broker.
As a CoAP API can be implemented basically the same as an HTTP API, Ditto's `gateway` service (currently responsible for providing the HTTP API, the WebSocket API and the SSE API) would be the perfect location for additionally providing CoAP endpoints.

Devices could then, using CoAP, directly interact with their ""twins"" (things), e.g. retrieving a property, updating a property, or even retrieving the ""desired"" state, etc.

## CoAP Endpoints

The most straight forward way of defining the CoAP endpoints to support is to basically support all of the existing ""/api/2/things"" HTTP endpoints also as CoAP endpoints:
* Things: https://www.eclipse.org/ditto/http-api-doc.html#/Things
* Features: https://www.eclipse.org/ditto/http-api-doc.html#/Features

## Authentication

CoAP supports different authentication mechanisms, as far as I know:
* PSK (pre shared keys) based
* Client Certificate based

I currently do not have more knowledge - I assume that Ditto could configure a Certificate Authority (CA) for e.g. authenticating client certificates. Or that PSKs could be configured as well via configuration or a file mount.

Feedback on that would be appreciated :)

## Authorization

Once a device via CoAP was authenticated (see above), a ""subjectId"" would be determined from the authenticated device, e.g.:
```
coap-psk:<the-authenticated-device-id>
```
Using this subject in a Ditto Policy, a device can get authorized to e.g. read/write its twin data or to send/receive messages.

Example policy:
```json
{
  ""policyId"": ""namespace:the-policy"",
  ""entries"": {
    ""DEVICE"": {
      ""subjects"": {
        ""coap-psk:my-device-4711"": {
          ""type"": ""CoAP PSK based authentication""
        }
      },
      ""resources"": {
        ""thing:/"": {
          ""revoke"": [],
          ""grant"": [
            ""READ"",
            ""WRITE""
          ]
        },
        ""message:/"": {
          ""revoke"": [],
          ""grant"": [
            ""READ"",
            ""WRITE""
          ]
        }
      }
    },
    ""DEFAULT"": {
      ""subjects"": {
        ""nginx:ditto"": {
          ""type"": ""Authenticated user via nginx htpasswd""
        }
      },
      ""resources"": {
        ""policy:/"": {
          ""revoke"": [],
          ""grant"": [
            ""READ"",
            ""WRITE""
          ]
        },
        ""thing:/"": {
          ""revoke"": [],
          ""grant"": [
            ""READ"",
            ""WRITE""
          ]
        },
        ""message:/"": {
          ""revoke"": [],
          ""grant"": [
            ""READ"",
            ""WRITE""
          ]
        }
      }
    }
  }
}
```

## Implementation

The implementation would rely on our sister project, [Eclipse Californium](https://github.com/eclipse-californium/californium).
I see 2 options how to do the implemtation:
* either implementing a CoAP to HTTP proxy (fully supporting all existing HTTP APIs)
   * an example can be found in Californium: https://github.com/eclipse-californium/californium/tree/main/californium-proxy2
   * downside: an additional ""hop"" (but only from ""localhost"" to ""localhost"", so should not be that bad)
   * upside: if mapped once correctly (e.g. ""PATCH"", ""GET"", ""UPDATE"", ""DELETE"" and also server sent events), all available HTTP APIs should automatically work via CoAP as well
* or re-implementing the existing HTTP endpoints via californium, all explicitly
   * downside: much effort, could divert from the HTTP API
   * upside: no additional HTTP request required
* maybe there is a third option which could have the benefits from both variants above - without the need to do another (internal) HTTP call 
   * that has to be investigated

## Testing

Is there an equivalent to e.g. `cURL` (or `httpie` / Postman / etc.) for doing CoAP requests to test during development?
For unit testing I assume that we also can use Californium as the client?

## Deployment

I also have no idea what CoAP (UDP) endpoints means to a (cloud) deployment, e.g. regarding loadbalancers.

Maybe someone has more input on that, what to consider, etc.?


# Please provide feedback / input

To anyone who is interested in this topic, directly providing CoAP endpoints in Ditto, please comment and provide feedback.

May I invite @boaks, the project lead of Eclipse Californium and **the** CoAP expert, to join the discussion? :)
Especially regarding the authentication of devices and what Ditto would have to support to configure credentials I do currently not know ..","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1582/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1582,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85V6mUg,ditto,1441424672,1582,NA,boaks,10937819,Achim Kraus,achim.kraus@cloudcoap.net,NA,2023-02-23T09:18:21Z,2023-02-23T09:18:21Z,"A lot of questions :-).

Let's start:

Authentication:

Californium itself uses ""callbacks"" to fetch the credentials. The callbacks may be used in a synchronous or asynchronous manner. Californium comes also with some demo-implementations. I don't know, how ditto keeps/manages the credentials, but maybe it's possible to implement the Californium interfaces using the current ditto credentials implementation.

**PSK**: 
similar to ""username/password"", but the password is not exchanged and must be available on both sides (server and client) in clear. 

[AdvancedPskStore](https://github.com/eclipse-californium/californium/blob/main/scandium-core/src/main/java/org/eclipse/californium/scandium/dtls/pskstore/AdvancedPskStore.java)

**certificate based**: 
Californium supports x509 and RFC7250 (Raw public key).

To authenticate Californium uses [CertificateProvider](https://github.com/eclipse-californium/californium/blob/main/scandium-core/src/main/java/org/eclipse/californium/scandium/dtls/x509/CertificateProvider.java)

To verify the authentication of the other peer [NewAdvancedCertificateVerifier](https://github.com/eclipse-californium/californium/blob/main/scandium-core/src/main/java/org/eclipse/californium/scandium/dtls/x509/NewAdvancedCertificateVerifier.java) 

(Just to mention: the curios names are the result of a development over several periods. Maybe with Californium 4.0 we polish the names. It will then be some ""typing work"", but I guess it would make it easier afterwards. For now, no schedule for 4.0 exists).

All the interfaces are in java packages and comes there with demonstration implementations. Though I consider it valuable to use Californium on its own, I added a [MultiPskFileStore](https://github.com/eclipse-californium/californium/blob/main/scandium-core/src/main/java/org/eclipse/californium/scandium/dtls/pskstore/MultiPskFileStore.java)  and I will see, what I can provide in the future. Anyway, for upstream projects it's mostly preferable to implement these interfaces using the own infrastructure.

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85V6mUg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1582,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85V6oWB,ditto,1441432961,1582,NA,boaks,10937819,Achim Kraus,achim.kraus@cloudcoap.net,NA,2023-02-23T09:24:44Z,2023-02-23T09:24:44Z,"Authorization:

Each [Message](https://github.com/eclipse-californium/californium/blob/main/californium-core/src/main/java/org/eclipse/californium/core/coap/Message.java) comes with it's [EndpointContext](https://github.com/eclipse-californium/californium/blob/main/element-connector/src/main/java/org/eclipse/californium/elements/EndpointContext.java). Depending on incoming or outgoing messages, the context is the `destination` or `source` context. For incoming request it will be the `source`context, and that keeps the `Principal`, if DTLS (or TLS) is used. If not encrypted communication is to be used, the `id/principal` must be sent e.g. as URI query parameter or part of the URI path.
 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85V6oWB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1582,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85V6pLi,ditto,1441436386,1582,NA,boaks,10937819,Achim Kraus,achim.kraus@cloudcoap.net,NA,2023-02-23T09:27:09Z,2023-02-23T09:27:09Z,"Implementation:

I guess, that's also a question, if the common functionality could be extracted in a reusable module and each connector then mainly implements it's own mapping layer. I guess, a first PoC directly using Californium will provide then the information to decide, what's the best approach.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85V6pLi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1582,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85V6qzw,ditto,1441443056,1582,NA,boaks,10937819,Achim Kraus,achim.kraus@cloudcoap.net,NA,2023-02-23T09:31:39Z,2023-02-23T09:31:39Z,"Testing:

I use several clients. The most clients are very simple and I'm used to adapted or extend them for special tests.

[UI Client](https://github.com/eclipse-californium/californium.tools/tree/main/cf-browser)

[CLI Client](https://github.com/eclipse-californium/californium.tools/tree/main/cf-client)

[JMeter Client Plugin](https://github.com/eclipse-californium/californium.tools/tree/main/cf-jmeter-plugin)

[Benchmark Client](https://github.com/eclipse-californium/californium/tree/main/demo-apps/cf-extplugtest-client)

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85V6qzw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1582,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85V6t3b,ditto,1441455579,1582,NA,boaks,10937819,Achim Kraus,achim.kraus@cloudcoap.net,NA,2023-02-23T09:41:12Z,2023-02-23T09:41:12Z,"Deployment:

At least today, many clouds provide UDP support. Also the main tools, docker and k8s comes with UDP support. 

Californium offers some help here, see
[Wiki](https://github.com/eclipse-californium/californium/wiki)

[cf-extplugtest-server](https://github.com/eclipse-californium/californium/tree/main/demo-apps/cf-extplugtest-server)

One common pitfall is the use of NATs (maybe even not intended and more unware done by some part of the infrastructure). For UDP that quite often comes with short timeouts. For ""single endpoints"", using RFC 9146 (DTLS 1.2 CID) is a great solution here. For clusters it's more complicated. I've used   

[built-in dtls cid cluster support](https://github.com/eclipse-californium/californium/tree/main/demo-apps/cf-extplugtest-server#built-in-dtls-connection-id-load-balancer-cluster)
[cf-cluster](https://github.com/eclipse-californium/californium/tree/main/cf-utils/cf-cluster)

My impression of the past years was, that it was frequently requested,  but close to no deployment reached even the limit of a single connector.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85V6t3b/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1582,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85V6u3q,ditto,1441459690,1582,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-02-23T09:44:24Z,2023-02-23T09:44:24Z,"Tanks, Achim @boaks for the many inputs 👍 
> I guess, a first PoC directly using Californium will provide then the information to decide, what's the best approach.

Yes, that would be my next step .. :)

Regarding
> I don't know, how ditto keeps/manages the credentials, but maybe it's possible to implement the Californium interfaces using the current ditto credentials implementation.

Ditto currently does not keep/manage credentials - for HTTP it relies on OpenId Connect providers to authenticate (and then ""just"" uses the JWT issued by those providers to apply authorization).
Or it relies on a reverse proxy (e.g. a ""nginx"") to manage credentials.

I would probably want to avoid adding a separate persistence for credentials and  go into the direction of providing them also as kind of a "".htpasswd"" file format (like ""nginx"" also does) which can be provided via volume mount.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85V6u3q/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1582,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85V6yA4,ditto,1441472568,1582,NA,boaks,10937819,Achim Kraus,achim.kraus@cloudcoap.net,NA,2023-02-23T09:54:32Z,2023-02-23T09:54:32Z,"> I would probably want to avoid adding a separate persistence for credentials and go into the direction of providing them also as kind of a "".htpasswd"" file format (like ""nginx"" also does) which can be provided via volume mount.

Yes. Therefore I implemented the [MultiPskFileStore](https://github.com/eclipse-californium/californium/blob/main/scandium-core/src/main/java/org/eclipse/californium/scandium/dtls/pskstore/MultiPskFileStore.java). It offers automatic reloading from files, but you may also provide a InputStream. The secrets maybe encrypted, if wanted.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85V6yA4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1582,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85WW6eT,ditto,1448847251,1582,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-02-28T20:24:43Z,2023-02-28T20:24:43Z,"I managed to add a first rough implementation in #1588 
Still a lot of TODOs open, but conceptually this works really really well .. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85WW6eT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1582,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85WY-jC,ditto,1449388226,1582,NA,boaks,10937819,Achim Kraus,achim.kraus@cloudcoap.net,NA,2023-03-01T05:50:09Z,2023-03-01T05:50:09Z,"Happy to read that.

Do you need any help for tests with coap-clients? Or you OK with it?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85WY-jC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1582,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85WZHZq,ditto,1449424490,1582,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-03-01T06:26:14Z,2023-03-01T06:26:14Z,"> Happy to read that.
> 
> Do you need any help for tests with coap-clients? Or you OK with it?

I think I will manage, thanks. 👍

Do you from the top of head know what a server has to respond when a client sends an ""observe cancel""?
The resource it asked for, or a ""valid"" response code?
Couldn't find that specified.. 😕 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85WZHZq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1582,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85WZIb-,ditto,1449428734,1582,NA,boaks,10937819,Achim Kraus,achim.kraus@cloudcoap.net,NA,2023-03-01T06:31:45Z,2023-03-01T06:31:45Z,"A cancel observe is a GET with Option OBSERVE 1.
AFAIK, that is a simple response (resource) with CONTENT (2.05) and no Option OBSERVE.

[RFC7641](https://www.rfc-editor.org/rfc/rfc7641#section-3.6)

  In this case, a client MAY explicitly deregister by issuing a GET
   request that has the Token field set to the token of the observation
   to be cancelled and includes an Observe Option with the value set to
   1 (deregister).  All other options MUST be identical to those in the
   registration request except for the set of ETag Options.  When the
   server receives such a request, it will remove any matching entry
   from the list of observers and process the GET request as usual.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85WZIb-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1582,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85WZWk6,ditto,1449486650,1582,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-03-01T07:34:25Z,2023-03-01T07:34:25Z,"> When the
server receives such a request, it will remove any matching entry
from the list of observers and process the GET request as usual.

Ah, there it is, yes .. thanks :)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85WZWk6/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1582,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85aL92_,ditto,1513086399,1582,NA,n-deliyski,58815324,Nikolay Deliyski,,NA,2023-04-18T13:01:11Z,2023-04-18T13:01:11Z,"Hi,
I came here as this issue looks like a replacement or an alternative of Hono CoAP adapter.
In general it will be convenient to have direct device endpoint without broker in Ditto.
Looking what the connectivity service gives somehow following two functionalities are missing when the gateway service is used:
- Payload mapping functionality. Constrained devices usually use binary payloads and does not have enough memory to create full plaintext Ditto JSON payload. 
- How the device will receive twin events or live messages.

The issue title is already noting that those points are out of the scope.
Anyway, have you thought about that?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85aL92_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1582,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85aN36T,ditto,1513586323,1582,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-04-18T18:00:49Z,2023-04-18T18:00:49Z,"Hi @n-deliyski
I wouldn't say that it is a replacement for Hono's CoAP adapter.
Hono is payload agnostic and does not provide entities which could be interacted with using CoAP.
Ditto however has those, and can offer direct APIs for devices supporting CoAP.

It can really be seen as an equal alternative to Ditto's Http Api, but with focus for devices instead of eg Web or Mobile Applications.

I would therefore not see that the payload mapping and other connectivity features of Ditto is required.
The devices must not even speak Ditto Protocol with the proposed CoAP APIs, but can make use of partial request and partial updates, eg. only updating a scalar property value.

Devices can also receive events and even messages, using CoAP `observe` which provides equal functionality as the SSE API of Ditto Http.

However, I am no longer working on this functionality, as my employer is not interested in CoAP. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85aN36T/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1582,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85aZszl,ditto,1516686565,1582,NA,n-deliyski,58815324,Nikolay Deliyski,,NA,2023-04-20T17:20:26Z,2023-04-20T17:20:26Z,"I see, @thjaeckle thanks for your reply.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85aZszl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1583,https://api.github.com/repos/eclipse-ditto/ditto/issues/1583,ditto,1596507402,1583,Search in history of a thing using RQL filter,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2023-02-23T09:30:32Z,2024-01-08T09:19:01Z,"With the addition of #1498 (to be released in Ditto 3.2.0), it is possible to get a stream of all modification events of a thing (up to the configured `history-retention-duration` (e.g. 30 days).

It would be quite easy to enhance this new API in order to find a ""special condition"" within the history of a thing.
Examples:
* stream all events matching a given condition (`filter` as RQL)
  * e.g. in which a specific property was modified (via the SSE API):  
    `/api/2/things/namespace:my-thing1?from-historical-revision=1&filter=exists(feature/myFeature/properties/targetProperty)`

Additional idea (optional):
* return the state of a twin when a certain condition (`filter` as RQL) matched
   * e.g. get state of complete twin when a given threshold was ""first"" reached:
     `GET /api/2/things/namespace:my-thing1?filter-first-historical-revision=gt(feature/myFeature/properties/value,42)`
   * e.g. get state of complete twin when a given threshold was ""last"" reached:
     `GET /api/2/things/namespace:my-thing1?filter-last-historical-revision=gt(feature/myFeature/properties/value,42)`
   * e.g. get timestamp when a given property was ""last"" modified:
     `GET /api/2/things/namespace:my-thing1?filter-last-historical-revision=exists(feature/myFeature/properties/value)&fields=_revision,_modified`","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1583/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1590,https://api.github.com/repos/eclipse-ditto/ditto/issues/1590,ditto,1609689466,1590,UI: Enhance Ditto-UI to configure log levels of Ditto,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2023-03-04T09:15:00Z,2023-06-21T08:20:38Z,"Ditto provides a ""devops"" API to retireve and [dynamically adjust log levels](https://www.eclipse.org/ditto/installation-operating.html#dynamically-adjust-log-levels) on the fly without restating Ditto.

This is an extremely helpful thing for admins/operators of Ditto to analyze problems in production.

I suggest to provide a new UI functionality to configure the log levels, in a new ""Admin"" menu item.
The credentials are the same as for managing connections, so authentication is already handled by the UI.

@thfries what do you think? Other ""Admin functionality"", eg bypassing policies for accessing the manged things, policies could also be added in the future. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1590/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1590,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Wueu1,ditto,1455025077,1590,NA,thfries,20593339,Thomas Fries,,NA,2023-03-05T08:32:40Z,2023-03-05T08:32:40Z,"Sure, sounds not too complicated. I'm not used to these use cases but I can try to make a proposal.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Wueu1/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1590,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85XT_ox,ditto,1464859185,1590,NA,thfries,20593339,Thomas Fries,,NA,2023-03-11T08:21:19Z,2023-03-11T08:21:19Z,I'm working on that,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85XT_ox/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1591,https://api.github.com/repos/eclipse-ditto/ditto/issues/1591,ditto,1609691460,1591,UI: Authenticate with OAuth2 client ID / secret,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2023-03-04T09:22:11Z,2024-10-04T06:15:16Z,"Currently the UI accepts a Bearer token for authenticating.
More comfortable however would be if the UI would authenticate against a configured OAuth provider endpoint, using a client ID and optional (not all OAuth flows require a secret) secret.

The Swagger UI also supports such a mode where the [OAuth provider configuration](https://swagger.io/docs/open-source-tools/swagger-ui/usage/oauth2/) is added.
As the Ditto UI saves the environments locally, the OAuth secret does not need to be persisted or configured statically which should suffice security wise. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1591/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1591,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85WufJr,ditto,1455026795,1591,NA,thfries,20593339,Thomas Fries,,NA,2023-03-05T08:41:16Z,2023-03-05T08:41:16Z,"Interesting. Agree that would be great.
I was experimenting a while ago and concluded that the OAuth flows only work with a backend. So I stopped that at that time. I need to take another look and I would need some support here.
You remember that secrets are not persisted by the UI?
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85WufJr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1591,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Wu9Yq,ditto,1455150634,1591,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-03-05T17:19:42Z,2023-03-05T17:19:42Z,"Yes, I remember.
However new OAuth2 flows like pkse do not require a secret, so for those this would be a really good fit.
For others, a backend proxy may add the secret without the need to leak it into the client. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Wu9Yq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1591,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85sWYAd,ditto,1817804829,1591,NA,thfries,20593339,Thomas Fries,,NA,2023-11-19T09:53:10Z,2023-11-19T09:53:10Z,"Hi @thjaeckle, I'm coming back to this ticket. PKCE looks very promising but it needs some infrastructure (Authorization Server and OAuth2 Proxy for ditto?) and I think it will be easier to test if this is available in the cloud. I started with Google as an authorization server and tried out the Google authentication to the sandbox HTTP API.
- My Google Oauth ClientID and Secret did not work, because I do not know the redirect URL for the ditto sandbox server. Is there a more detailed description, how this use of sandbox HTTP API with Google should work? May be a good start would be to use the same approach for the UI as for the Swagger UI. But for that I would need to being able to test it
- Do I understand right, that there is an OAuth2 proxy on the Ditto sandbox installed? If needed, can we extend that with PKCE flow? It would be nice to have Google SSO directly with the sandbox and the UI 😉. Another related question if the ditto sandbox is (could be) registered as application on Google (or github).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85sWYAd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1591,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85sk2NA,ditto,1821598528,1591,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-11-21T20:02:19Z,2023-11-21T20:02:19Z,"Hi @thfries 

So the Ditto sandbox does not yet run OAuth2 proxy, but it should probably :D 
Currently, there is only an nginx in front of Ditto which does some ""magic"" in inserting OpenId connect client secret for Google OAuth.
I however did not check that for a long time, no idea if this still works.

I will look into it once I find the time - that however could take a while :/","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85sk2NA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1592,https://api.github.com/repos/eclipse-ditto/ditto/issues/1592,ditto,1609692403,1592,UI: Provide Bearer authentication for devops user,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2023-03-04T09:25:46Z,2023-03-08T07:18:19Z,"Ditto is capable of securing the devops API with OAuth (as alternative to basic auth), which is always favorable security wise.
The Ditto UI currently only provides Bearer token based authentication for the main user.
It should be quite easy to add Bearer based also for the devops user. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1592/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1592,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Wu94H,ditto,1455152647,1592,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-03-05T17:28:58Z,2023-03-05T17:28:58Z,I can work on that.. ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Wu94H/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1593,https://api.github.com/repos/eclipse-ditto/ditto/issues/1593,ditto,1609908870,1593,Support replacing certain json objects in a merge/patch command instead of merging their fields,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2023-03-04T19:01:19Z,2023-04-10T18:09:37Z,"Currently, when updating a thing using [merge commands](https://www.eclipse.org/ditto/protocol-specification-things-merge.html), any encountered json object is merged with the fields of the provided json object.
The old values are not deleted, which often is needed and expected.

It would however be a good enhancement if there would be an option to define that for a certain json object the existing content should be completely replaced with the new object.

Example:
Given thing:
```json
{
... 
  ""features"": {
    ""Foo"": {
       ""properties"": {
          ""map"": {
            ""a"": 1,
            ""b"": 2,
            ""c"": 3
          }
       } 
    } 
  } 
} 
```

Expected thing after merge:
```json
{ 
... 
  ""features"": {
    ""Foo"": {
       ""properties"": {
          ""map"": {
            ""x"": 42,
            ""y"": false,
            ""z"": 23
          }
       } 
    } 
  } 
} 
```

Currently, this would not be possible to do with a single merge command.
E.g if the following merge command is issued:
```json
{
  ""topic"" : "".../merge"",
  ""path"": ""/features"" 
  ""value"": {
    ""Foo"": {
       ""properties"": {
          ""map"": {
            ""x"": 42,
            ""y"": false,
            ""z"": 23
          }
       } 
    } 
  } 
} 
```

The resulting new Thing after applying the merge patch would be:
 ```json
{
... 
  ""features"": {
    ""Foo"": {
       ""properties"": {
          ""map"": {
            ""a"": 1,
            ""b"": 2,
            ""c"": 3, 
            ""x"": 42,
            ""y"": false,
            ""z"": 23
          }
       } 
    } 
  } 
} 
```

I propose an enhancement to the implemented ""merge-patch"" semantics to let the sender of the command clear specific objects before applying the changes.

I would suggest to use a syntax `""{{ /.*/ }}"": null` (as `null` deletes elements in json merge patch) to declare to delete all sub elements of a json object before applying the new provided elements.

Example:
```json
{
  ""topic"" : "".../merge"",
  ""path"": ""/features"" 
  ""value"": {
    ""Foo"": {
       ""properties"": {
          ""map"": {
            ""{{ /.*/ }}"": null, 
            ""x"": 42,
            ""y"": false,
            ""z"": 23
          }
       } 
    } 
  } 
} 
```

Using a very specific, eg. with curly braces, syntax would prevent the problem that a certain reserved character cannot be used as key.

Syntax proposal:
```
""{{ /.*/ }}"": null
""{{ /2023-04-.?.?/ }}"": null
```


An example where regex use makes sense is eg to remove all fields starting with a 4 digital year, followed by a `-` and arbitrary additional characters:
```
""{{ /[0-9]{4}-.*/ }}"": null
```

Only `null` values (deleting existing keys) shall be supported to not allow totally crazy stuff to be done with that.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1593/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1599,https://api.github.com/repos/eclipse-ditto/ditto/issues/1599,ditto,1621944083,1599,Change notification filtering doesn't work for desired properties changes,kyberpunk,12064920,Vít Holásek,,CLOSED,2023-03-13T17:32:14Z,2023-03-20T15:52:46Z,"Hello. I'm trying to setup Kafka connection with target using following topic filter: `_/_/things/twin/events?extraFields=features/{{feature:id}}&filter=like(resource:path,'/features/RemoteAccessConnections*')`. It works ok for feature change events by changing whole RemoteAccessConnections feature on the thing. But no changes of desired properties are propagated to Kafka (e.g. by `PUT /api/2/things/test:device/features/RemoteAccessConnections/desiredProperties`). 

I did some debugging and came to conclusion that problem is in class [ThingEventToThingConverter](https://github.com/eclipse-ditto/ditto/blob/master/things/model/src/main/java/org/eclipse/ditto/things/model/signals/events/ThingEventToThingConverter.java#L111) because there is no mapping for FeatureDesiredPropertiesModified (an other) event defined and as a consequence signal filtering fails in this [method](https://github.com/eclipse-ditto/ditto/blob/master/connectivity/service/src/main/java/org/eclipse/ditto/connectivity/service/messaging/persistence/SignalFilter.java#L178) for such events.

Am I doing something wrong or is it intended behavior? In this [article ](https://www.eclipse.org/ditto/2020-11-11-desired-properties.html) it is explicitly said that enrichment and filtering should be supported also for desired properties so I would consider it as a bug.

If it is a bug I would be happy to help with solving the issue.

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1599/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1599,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Xa6H-,ditto,1466671614,1599,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-03-13T18:17:05Z,2023-03-13T18:17:05Z,"Hello @kyberpunk
Thank you for this excellent issue description and digging into the code.

Like you concluded correctly, this sounds also like a bug to me, as the mapping in the code you pointed out is missing.
Apparently also no unit test case covers this. :/

It would be great and much appreciated if you could provide a fix, even more awesome if a unit test could cover this.

Looking forward..","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Xa6H-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1599,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Xh2-Z,ditto,1468493721,1599,NA,kyberpunk,12064920,Vít Holásek,,NA,2023-03-14T17:06:51Z,2023-03-14T17:06:51Z,"Thanks for answer. Ok, I will try, just need to find the good place where to test it.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Xh2-Z/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1603,https://api.github.com/repos/eclipse-ditto/ditto/issues/1603,ditto,1634241570,1603,Create mechanism for custom authentication in managed HTTP connections,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2023-03-21T16:05:22Z,2023-03-21T16:05:22Z,"Some HTTP APIs might e.g. support ""Bearer"" authentication, but provide a non-OAuth or non-OpenIdConnect endpoint for obtaining JWT.
E.g. a custom ""POST /authenticate"" endpoint which delivers a JWT.

In order to make use of such authentication methods, support such custom authentication methods in a configurable way (e.g. using Ditto functions, placeholders, etc.).
Example endpoint for inspiration: https://portal.whereversim.com/api/doc/swagger.html#/Authentication/Authenticate","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1603/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1607,https://api.github.com/repos/eclipse-ditto/ditto/issues/1607,ditto,1648852786,1607,Allow connection payload mappers to look up things before mapping,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2023-03-31T07:45:32Z,2023-05-23T20:36:49Z,"Currently Ditto's [Payload Mappers](https://www.eclipse.org/ditto/connectivity-mapping.html) in managed connections are rather ""stateless"".  
They convert incoming payload to a Ditto Protocol message without the ability to look additional information up.  
One of the reasons for that is sandboxing, so that e.g. a payload mapper e.g. does not do heavy ""external lookups"".

A great addition however would be if payload mappers could look up information (Ditto internally) from the ""thing"" they want to update, e.g. retrieving the ""thing definition"" or some kind of ""type"" attribute to execute different payload mapper code for different types of things.

That would require that a Payload Mapper can retrieve a thing (or its static information like ""definition"" and ""attributes"" - we could make that configurable what should be able to be retrieved in payload mappers as ""thing context"" information) before applying the actual payload mapping.

Details:
* define somehow how to extract the `thingId` to retrieve information from (e.g. via placeholders .. e.g. from the MQTT or Kafka topic or via a header, optionally applying a function)
   * as part of the ""Connection"" mapper config
* configure in Ditto ""connectivity"" service config which fields should be able to retrieve at all (default: thingId,definition,attributes) 
* configure in the payload mapper options what to retrieve, e.g. as `fields` selector like e.g.: `fields=definition,attributes`
* inject the ""thingStaticContext"" as optional parameter to payload mappers
* also enhance the JavaScript payload mapper with that option
* think about caching - if we only retrieve static information (like ""definition"", ""attributes""), this information should not change too often
* it should also be possible to do a ""search"" via attributes, as alternative to already ""know"" the `thingId` based from headers or topic
   * first match is returned, e.g.: with fields: `thingId,definition,attributes`
* the payload mapper may only map Ditto Protocol messages with the same `thingId` as the looked up one
   * that is a security feature and shall prevent cross-thing problems","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1607/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1608,https://api.github.com/repos/eclipse-ditto/ditto/issues/1608,ditto,1649600037,1608,"Provide connectivity payload mappers option to send internal ""retrieve"" commands",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2023-03-31T15:40:02Z,2023-03-31T17:51:37Z,"E.g. for an ""outbound"" mapper it would be possible to ""enhance"" an emitted event / message with additional information gathered by the Ditto internal ""retrieve"" or ""search"" command.

Example:
* a ""Room"" thing is updated with a new desired temperature
* before emitting the notification event to e.g. a Kafka topic:
   * an ""internal search"" command is issued determining all devices in that room, e.g. with an RQL: `eq(attributes/room,""Kitchen"")`
   * and e.g. specifying `fields` as well, as we only need the `thingIds`: `fields=thingIds`
* the event will be enriched with ""extra"" data gathered by this internal ""retrieve"" or ""search"" command

Maybe we can even have a synergy with issue #1607","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1608/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1608,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Y89Eo,ditto,1492373800,1608,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-03-31T17:51:21Z,2023-03-31T17:51:21Z,"Thinking about it, that implies too many risks, security and consistency wise.
Closing ..","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Y89Eo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1609,https://api.github.com/repos/eclipse-ditto/ditto/issues/1609,ditto,1650369771,1609,"Resolve ""external values"" in Things via search and connections",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2023-04-01T08:49:08Z,2023-04-07T10:10:02Z,"The idea of this issue is to have a special kind of JSON values inside a Ditto Thing (e.g. as `attribute` or as `feature` `property`) which are not directly available in Ditto's _twin_ persistence, but which are resolved by Ditto from an ""external source"" (like another API, e.g. an HTTP endpoint, or a Kafka topic).

Such an ""external value"" would have a special json format in the Thing.

Some ideas of **what** could be ""externally resolved"":
- perform Ditto **searches**
   - e.g. for relationships: all ""Devices"" belonging to a ""Room"" (also managed in Ditto) refer to the room's `thingId` in an attribute `attributes/roomThingId` - the Room however is not directly aware of its devices (as this would be a bidirectional relationship and therefore e.g. difficult to update consistently)
      - the ""Room"" Thing could simply have an ""externally resolved"" attribute with a Ditto search query like e.g. `filter=eq(attributes/roomThingId,{{ thing:id }}),fields=thingId`
      - placeholders could be used in order to e.g. use the room's data dynamically (see above)
      - a `fields` selector could be used in order to define certain fields of the search results to resolve as the ""external value""
- perform Ditto **aggregations**, e.g. calculating the average temperature of room
   - currently, Ditto's search cannot yet perform aggregations - that's however an idea to do in #1525 
   - again, in the ""Room"" example, the room could define an ""external value"" resolving the room's current average temperature which is resolved via a search aggregation over all devices of that room reporting a temperature
- **invoke foreign APIs**, resolving external values
   - a ""Digital Twin"" is often used to also orchestrate other APIs, e.g. providing a lower level API for the device data managed by another system (like e.g. a LoRa Server or a mobile network provider)
   - to have a ""single point of truth"", data from other APIs often want to also be mirrored to the twin (and e.g. automatically updated as well)

Some ideas of **when** ""external values"" are resolved:
- **on access**: whenever an ""external value"" is retrieved via Ditto, it could first be resolved ""from externally""
   - this strategy could also define a caching strategy of how often to do the external lookup (which can potentially be costly to look up or has a big latency)
   - this would block the retrieve until the value was retrieved externally 
- **scheduled**: define eg cron syntax when an external value should be resolved

Some ideas of **what to do** with resolved ""external values"":
- the twin could be updated with the external value
   - to also be findable via Ditto search for example
   - or as part of a caching strategy
   - or to have the value available in the Thing's history API
- the resolved value could just be returned back, without persisting/caching it
   - to e.g. always externally resolve the value
   - if the result is very large, it maybe is not wanted to persist it in the twin

To get an idea how this could look like, this is a first rough idea of the format:
```json
{
  ""thingId"": ""foo:my-room-1"",
  ""policyId"": ""foo:my-room-policy-1"",
  ""attributes"": {
    ""roomDevices"": {
      ""_ditto-external-value-config"": { // TODO define a good ""reserved keyword""
        ""source"": ""connection:<the-connection-id>/<the-target-address>"",
        ""updateStrategy"": {
          ""type"": ""cron"",
          ""config"": ""<the cron config>""
        },
        ""responseStrategy"": ""updateTwin"" // ""updateTwin"" | ""dispatchOnly""
      }
      ""value"": ... // this is the Json Value where the retrieved external Json value (e.g. Json array or object or string) is stored
    } 
  }
}
```

And here an example for an internal Ditto search:
```json
{
  ""thingId"": ""foo:my-room-1"",
  ""policyId"": ""foo:my-room-policy-1"",
  ""attributes"": {
    ""roomDevices"": {
      ""_ditto-external-value-config"": { // TODO define a good ""reserved keyword""
        ""source"": ""search?filter=eq(attributes/roomThingId,{{ thing:id }}),fields=thingId"",
        ""updateStrategy"": {
          ""type"": ""onAccess"", // would update the value when e.g. `/attributes/roomDevices/value` is retrieved
          ""config"": ""always"" // also retrieve, when complete thing or all attributes are retrieved, alternative could be ""exact""
        },
        ""responseStrategy"": ""updateTwin"" // ""updateTwin"" | ""dispatchOnly""
      }
      ""value"": [
        {""thingId"": ""foo:my-device-1""},
        {""thingId"": ""foo:my-device-2""}
      ]
    } 
  }
}
```

To clarify:
* could the ""ditto-external-value-config"" also be a metadata (not even shown in the Thing JSON by default)?
   * that way, the ""end user"" of the thing would not even be aware of the ""external value"" and just use the twin's data like any other data, which would be great
   * the json structure would not have to follow a certain structure, but could be completely defined by the user
   * the stuff inside the ""ditto-external-value-config"" would not be indexed in the twin's values in search and would not be part of the full thing json 
   * downside: metadata does not yet provide concepts for access control, see #1403 
      * so every subject with write permission would be able to define/change the external value mapping
* the Ditto ""things"" service does not know of ""connectivity"" or ""search"" service .. how to solve where to address such a ""external value"" lookup message to?
   * maybe the configuration of things could define some templates (eg for search and connections) - configuring messages to send via pub/sub and the  topic to use for publishing 

The ""scheduled"" variant could also supersede issue #1542 - the existing ""HTTP-push"" connection type would be sufficient to also solve what #1542 was aiming for - the cron/schedule would be defined in the things which would want to poll data.
And great benefit would be that this then works for all connection types, not only http. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1609/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1610,https://api.github.com/repos/eclipse-ditto/ditto/issues/1610,ditto,1650934967,1610,Json placeholder based connection payload mapper,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2023-04-02T12:48:30Z,2024-04-29T06:09:21Z,"For Ditto managed connections, configuring a payload mapper is possible, either using one of the built in ones, using the Javascript mapper providing a script file or even adding one to Ditto's classpath and using that one.

However for doing a simple conversion of a Json payload with the available options is not really simple.

Ditto also introduced parsing a JWT with a new placeholder for that:
https://www.eclipse.org/ditto/basic-placeholders.html#jwt-placeholder
That placeholder is basically already a simple Json parser.

The idea of this issue now is a new payload mapper in which a Json template is configured to eg parse an external Json and convert to a Ditto Protocol json. And vice versa.

Example configuration template:
```json
{
  ""topic"": ""{{ header:thing-id | fn:replace(':','/') }}/things/twin/commands/merge"", 
  ""path"": ""/features"", 
  ""value"": {
    ""temperature"": {
      ""properties"": {
        ""value"": ""{{ json:nested/temp }}""
       } 
    } 
  } 
}
```

Using the built in placeholder functions would also be possible.
That should provide a quiet mighty and also quick payload mapper functionality. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1610/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1610,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C858F9qM,ditto,2081938060,1610,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-04-29T05:54:34Z,2024-04-29T05:54:34Z,"An alternative / extension to the suggested would be JSONata:
https://jsonata.org

Java port of the JS library: https://github.com/dashjoin/jsonata-java
* no compile time dependencies
* however, no type safety, etc. (in order to be very close to JS codebase)

Which would add much more complex transformation options to such a built-in mapper.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C858F9qM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1612,https://api.github.com/repos/eclipse-ditto/ditto/issues/1612,ditto,1660515783,1612,payload mapper failed for ditto-example/mqtt-bidirectional ,thebist1234,130354275,,,CLOSED,2023-04-10T09:34:56Z,2023-04-10T19:11:20Z,"Hi, Hope you are doing Great.
I am new with ditto and need help.
I used docker compose method to run ditto and connect it to mqtt.
I tried [this example](https://github.com/eclipse-ditto/ditto-examples/tree/master/mqtt-bidirectional) and in case of mapper I got this error while I'm receiving messages from my device in logs:
``` 
{
  ""correlationId"": ""<not-provided>"",
  ""timestamp"": ""2023-04-10T08:40:49.162739610Z"",
  ""category"": ""source"",
  ""type"": ""mapped"",
  ""level"": ""failure"",
  ""message"": ""Got exception <json.field.missing> when processing external message with mapper <default>: JSON did not include required </topic> field! - Message headers: [mqtt.qos=0, mqtt.retain=false, mqtt.topic=/test/fan01] - Message payload: {\""thingId\"": \""fan:octopus\"", \""Value\"": 0}"",
  ""address"": ""/test/#""
} 
```
How I created my thing:
```
curl -X PUT 'http://localhost:8080/api/2/things/fan:octopus' -u 'ditto:ditto' -H 'Content-Type: application/json' -d '{
    ""policyId"": ""fan:policy"",
    ""attributes"": {
        ""name"": ""octopus"",
        ""type"": ""octopus board""
    },
    ""features"": {
        ""fan"": {
            ""properties"": {
                ""value"": 0
            }
        }
    }
}'


```
How I configure connection:
```
curl -X POST 'http://localhost:8080/devops/piggyback/connectivity?' -u 'devops:foobar' -H 'Content-Type: application/json' -d '{
    ""targetActorSelection"": ""/system/sharding/connection"",
    ""headers"": {
    	""aggregate"": false
    },
    ""piggybackCommand"": {
        ""type"": ""connectivity.commands:createConnection"",
        ""connection"": {
            ""name"":""reza"",
            ""id"": ""reza"",
            ""connectionType"": ""mqtt"",
            ""connectionStatus"": ""open"",
            ""failoverEnabled"": true,
            ""uri"": ""tcp://mqtt:1883"",
            ""sources"": [{
                ""addresses"": [""/test/#""],
                ""authorizationContext"": [""nginx:ditto""],
                ""qos"": 0,
                ""filters"": []
            }],
            ""targets"": [{
                ""address"": ""/test/fan01"",
                ""topics"": [
                ""_/_/things/twin/events"",
                ""_/_/things/live/messages""
             
                ],
                ""authorizationContext"": [""nginx:ditto""],
                ""qos"": 0
            }]
        }
    }
}'

```
The function I'm using for mapping:

```
function mapToDittoProtocolMsg(headers, textPayload, bytePayload, contentType) {
    const jsonString = String.fromCharCode.apply(null, new Uint8Array(textPayload));
    const jsonData = JSON.parse(jsonString); 
    const thingId = jsonData.thingId.split(':'); 
    const value = { 
        fan: { 
            properties: { 
                value: jsonData.Value 
            } 
        }   
    };    
    return Ditto.buildDittoProtocolMsg(
        thingId[0], // your namespace 
        thingId[1], 
        'things', // we deal with a thing
        'twin', // we want to update the twin
        'commands', // create a command to update the twin
        'modify', // modify the twin
        '/features', // modify all features at once
        headers, 
        value
    );
}

```
How I send message:(using python paho mqtt )
```
publish.single( ""/test/fan01"" , json.dumps({""thingId"":""fan:octopus"",""Value"" : random.choice(fan)}), qos=2, retain=False, hostname=url,
            port=Mqtt_port, client_id=""fan01"", keepalive=60)

```
It means I'm sending this as JSON:
```
{""thingId"": ""fan:octopus"", ""Value"": 1}

```
I Received All messages and I can see them in logs but mapper does not work. also I set mapper using Ui as you can see it here:
[Image](https://ibb.co/TMCqTV7)
so what is this error for??
@thjaeckle 
can you help me?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1612/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1612,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Zgrm2,ditto,1501739446,1612,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-04-10T12:02:40Z,2023-04-10T12:02:40Z,"Hi.

You are doing a lot of things already correctly.
One missing piece is to use the configured Javascript payload mapper in the ""source"" of your connection:
Look at the schema of connections here: https://www.eclipse.org/ditto/basic-connections.html#connection-model

The ""sources"" array contains a list of `Source` in which a `payloadMapping` array is defined.
This contains names of the payload mappers defined within your connection in `mappingDefinitions` (to enable reuse).
Your mapping definitions name is `javascript` (the UI uses that as default name).

So your source is missing:
```json
... 
  ""payloadMapping"": [ ""javascript""] 
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Zgrm2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1612,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Zg8bX,ditto,1501808343,1612,NA,thebist1234,130354275,,,NA,2023-04-10T13:20:22Z,2023-04-10T13:20:22Z,"> Hi.
> 
> You are doing a lot of things already correctly. One missing piece is to use the configured Javascript payload mapper in the ""source"" of your connection: Look at the schema of connections here: https://www.eclipse.org/ditto/basic-connections.html#connection-model
> 
> The ""sources"" array contains a list of `Source` in which a `payloadMapping` array is defined. This contains names of the payload mappers defined within your connection in `mappingDefinitions` (to enable reuse). Your mapping definitions name is `javascript` (the UI uses that as default name).
> 
> So your source is missing:
> 
> ```json
> ... 
>   ""payloadMapping"": [ ""javascript""] 
> ```

Thank you for you feedback. I changed it as you can see in[ this picture ](https://ibb.co/ZB3ZzRH) but I got the same error again.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Zg8bX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1612,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ZhHG8,ditto,1501852092,1612,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-04-10T14:02:51Z,2023-04-10T14:02:51Z,"You added it to the `""replyTarget""` instead of the source.
So pull it up one json level. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ZhHG8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1612,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ZhJwz,ditto,1501862963,1612,NA,thebist1234,130354275,,,NA,2023-04-10T14:11:09Z,2023-04-10T14:11:09Z,"> You added it to the `""replyTarget""` instead of the source. So pull it up one json level.

Yeh, It's done, what if I want to add ""payloadMapping"" while I'm creating the connection or modify it. can I do that without UI?
because when I want to create a new connection using API I need to add it too.
thank you. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ZhJwz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1612,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Zh_eG,ditto,1502082950,1612,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-04-10T17:20:27Z,2023-04-10T17:20:27Z,"> what if I want to add ""payloadMapping"" while I'm creating the connection or modify it. can I do that without UI? because when I want to create a new connection using API I need to add it too. thank you.

Yes, of course - the UI just helps on the formatting (e.g. replacing linebreaks with `\n` in the inlined javascript of the connection).
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Zh_eG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1612,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Zibol,ditto,1502198309,1612,NA,thebist1234,130354275,,,NA,2023-04-10T19:11:14Z,2023-04-10T19:11:14Z,"> 

thanks for your help.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Zibol/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1614,https://api.github.com/repos/eclipse-ditto/ditto/issues/1614,ditto,1666993626,1614,"When PATCHing a Thing, it should also be possible to implicitly convert to ""Create Thing"" if thing is not yet existing",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2023-04-13T19:12:31Z,2023-05-15T14:35:27Z,"The [RFC for HTTP PATCH](https://www.rfc-editor.org/rfc/rfc5789) states that:

> If the Request-URI does not
   point to an existing resource, the server MAY create a new resource,
   depending on the patch document type (whether it can logically modify
   a null resource) and permissions, etc.

So it would also make sense to create a Thing when e.g. doing a `PATCH /api/2/things/<thingId>` when this thing is not yet existing.
Using `If-Match: *` header it still would be possible to only update already existing things.

This would of course only make sense when ""patching"" a complete thing, so on path `/`.

The already existing `ModifyToCreateThingTransformer` could be enhanced to also handle `MergeThing` commands and transform to  `CreateThing` if the thing is not yet existing.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1614/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1615,https://api.github.com/repos/eclipse-ditto/ditto/issues/1615,ditto,1667148924,1615,Creating MQTT conection and mapping data using API ,thebist1234,130354275,,,CLOSED,2023-04-13T21:22:00Z,2023-05-01T08:28:40Z,"Hi, hope you are doing great.
I create a connection using [This Example](https://github.com/eclipse-ditto/ditto-examples/tree/master/mqtt-bidirectional) and I modified it on UI to map my data and It works fine. But after that when I tried to make this process using API or piggycommand I couldn't. 
what I did exactly : 
I copied UI Template that you can see in [this image](https://ibb.co/LkZC5qk), and the I tried API and commands:
this is my fires attemp:
```
curl -X POST 'http://localhost:8080/devops/piggyback/connectivity?' -u 'devops:foobar' -H 'Content-Type: application/json' -d '{
    ""targetActorSelection"": ""/system/sharding/connection"",
    ""headers"": {
    	""aggregate"": false
    },
    ""piggybackCommand"": {
        ""type"": ""connectivity.commands:createConnection"",
        ""connection"": {
            ""id"": ""reza"",    
            ""name"": ""reza"",
            ""connectionType"": ""mqtt"",
            ""connectionStatus"": ""open"",
            ""uri"": ""tcp://mqtt:1883"",
            ""sources"": [
              {
                ""payloadMapping"": [
                  ""javascript""
                ],
                ""addresses"": [
                  ""test/#""
                ],
                ""consumerCount"": 1,
                ""qos"": 0,
                ""authorizationContext"": [
                  ""nginx:ditto""
                ],
                ""headerMapping"": {},
                ""replyTarget"": {
                  ""address"": ""{{header:reply-to}}"",
                  ""headerMapping"": {},
                  ""expectedResponseTypes"": [
                    ""response"",
                    ""error""
                  ],
                  ""enabled"": true
                }
              }
            ],
            ""targets"": [
              {
                ""address"": ""test/fan01"",
                ""topics"": [
                  ""_/_/things/twin/events"",
                  ""_/_/things/live/messages""
                ],
                ""qos"": 0,
                ""authorizationContext"": [
                  ""nginx:ditto""
                ],
                ""headerMapping"": {}
              }
            ],
            ""clientCount"": 1,
            ""failoverEnabled"": true,
            ""validateCertificates"": true,
            ""processorPoolSize"": 1,
            ""tags"": [],
            ""mappingDefinitions"": {
              ""javascript"": {
                ""mappingEngine"": ""JavaScript"",
                ""options"": {
                  ""incomingScript"": ""function mapToDittoProtocolMsg(headers, textPayload, bytePayload, contentType) {const jsonString = String.fromCharCode.apply(null, new Uint8Array(bytePayload));const jsonData = JSON.parse(jsonString); const thingId = jsonData.thingId.split(':'); const value = {  fan: {  properties: {  value: jsonData.Value } }  }; return Ditto.buildDittoProtocolMsg(thingId[0], thingId[1], 'things', 'twin', 'commands', 'modify', '/features', headers, value);}"",
                  ""outgoingScript"": """"
                }
              }
            }
          }
    }
}'

```
and I got this error:
```
{""status"":400,""error"":""connectivity:connection.configuration.invalid"",""message"":""The message mapper configuration failed due to: syntax error (incomingScript#1) - in line/column #1/242, source:\nfunction mapToDittoProtocolMsg(headers, textPayload, bytePayload, contentType) {const jsonString = String.fromCharCode.apply(null, new Uint8Array(bytePayload));const jsonData = JSON.parse(jsonString); const thingId = jsonData.thingId.split(:); const value = {  fan: {  properties: {  value: jsonData.Value } }  }; return Ditto.buildDittoProtocolMsg(thingId[0], thingId[1], things, twin, commands, modify, /features, headers, value);}"",""description"":""Check the configuration options of your mapper for errors.""}
```
If my syntax is incorrect why It's working through UI?

Second attempt I tried through API, create Connection:
```
curl -X 'POST' \
  'http://MY_IP:8080/api/2/connections?dry-run=false' \
  -H 'accept: application/json' \
  -H 'Authorization: Basic ZGV2b3BzOmZvb2Jhcg==' \
  -H 'Content-Type: application/json' \
  -d '{
    
    ""name"": ""reza"",
    ""connectionType"": ""mqtt"",
    ""connectionStatus"": ""open"",
    ""uri"": ""tcp://mqtt:1883"",
    ""sources"": [
      {
        ""payloadMapping"": [
          ""javascript""
        ],
        ""addresses"": [
          ""test/#""
        ],
        ""consumerCount"": 1,
        ""qos"": 0,
        ""authorizationContext"": [
          ""nginx:ditto""
        ],
        ""headerMapping"": {},
        ""replyTarget"": {
          ""address"": ""{{header:reply-to}}"",
          ""headerMapping"": {},
          ""expectedResponseTypes"": [
            ""response"",
            ""error""
          ],
          ""enabled"": true
        }
      }
    ],
    ""targets"": [
      {
        ""address"": ""test/fan01"",
        ""topics"": [
          ""_/_/things/twin/events"",
          ""_/_/things/live/messages""
        ],
        ""qos"": 0,
        ""authorizationContext"": [
          ""nginx:ditto""
        ],
        ""headerMapping"": {}
      }
    ],
    ""clientCount"": 1,
    ""failoverEnabled"": true,
    ""validateCertificates"": true,
    ""processorPoolSize"": 1,
    ""tags"": [],
    ""mappingDefinitions"": {
      ""javascript"": {
        ""mappingEngine"": ""JavaScript"",
        ""options"": {
          ""incomingScript"": ""function mapToDittoProtocolMsg(headers, textPayload, bytePayload, contentType) {const jsonString = String.fromCharCode.apply(null, new Uint8Array(bytePayload));const jsonData = JSON.parse(jsonString); const thingId = jsonData.thingId.split(':'); const value = {  fan: {  properties: {  value: jsonData.Value } }  }; return Ditto.buildDittoProtocolMsg(thingId[0], thingId[1], 'things', 'twin', 'commands', 'modify', '/features', headers, value);}"",
          ""outgoingScript"": """"
        }
      }
    }
  }'
``` 
and I got this : 
```
{""status"":400,""error"":""connectivity:connection.configuration.invalid"",""message"":""The message mapper configuration failed due to: syntax error (incomingScript#1) - in line/column #1/242, source:\nfunction mapToDittoProtocolMsg(headers, textPayload, bytePayload, contentType) {const jsonString = String.fromCharCode.apply(null, new Uint8Array(bytePayload));const jsonData = JSON.parse(jsonString); const thingId = jsonData.thingId.split(:); const value = {  fan: {  properties: {  value: jsonData.Value } }  }; return Ditto.buildDittoProtocolMsg(thingId[0], thingId[1], things, twin, commands, modify, /features, headers, value);}"",""description"":""Check the configuration options of your mapper for errors.""}
```
I can not Understand if there is a syntax problem why it's working fine on UI? 
@thjaeckle ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1615/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1615,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Z4Zls,ditto,1507957100,1615,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-04-14T05:51:18Z,2023-04-14T05:51:18Z,"You do not correctly escape your provided connection on the bash as `-d` argument to curl ...
You use single quotes for 
`curl ... -d '{
}'`

And you also use single quotes in your `""incomingScript""` for strings.
A simple fix for that would be to have a file with the connection config and provide the file via `curl`, e.g. as it is also done here:
https://github.com/eclipse/packages/blob/ae97ec285fb314e7f4d51ad14cfe623348d30eec/packages/cloud2edge/templates/post-install-job.yaml#L55","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Z4Zls/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1615,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Z5UNW,ditto,1508197206,1615,NA,thfries,20593339,Thomas Fries,,NA,2023-04-14T09:10:43Z,2023-04-14T09:10:43Z,"Just a hint: If it works on the UI, you could use your browsers development tools and export the API call in the right format you need. The UI only uses the public Ditto API, so everything you do in the UI can done in your application, shell, script, etc....","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85Z5UNW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1618,https://api.github.com/repos/eclipse-ditto/ditto/issues/1618,ditto,1672720347,1618,Question - Can you set the policy in JS Mapper,viscreoRyan,46111509,,,CLOSED,2023-04-18T09:34:26Z,2023-04-18T11:00:13Z,"Hopefully a quick question. I am creating a connection and using a custom JS mapper. I want to use the ""Create or modify a Thing"" command as there are a lot of devices that I want to be dynamically created if they don't exist. This seems to work fine but the PolicyID on creation is being set to the ThingID and the connection does not have permission to create new policies. In this scenario is there a way to set the Policy in the JS mapper? Apologies if this is covered in the documentation but I can't find it. 

I did try using the ImplicitThingCreation mapper as it mentioned setting policies but the headers I receive have minimal information and the ThingID is stored in the request payload which I can't figure out a way of accessing without using a JS mapper. I also tried combining a JS and ImplicitThingCreation mapper to extract the ID into the header but had no luck with this.

The Connection JSON (Note ThingMapping is set to the script below this code block): 
```json
{
    ""name"": ""Connection"",
    ""connectionType"": ""amqp-10"",
    ""connectionStatus"": ""open"",
    ""failoverEnabled"": false,
    ""uri"": ""amqps://{{userName}}:{{password}}@{{endpoint}}:5671"",
    ""mappingDefinitions"": {
        ""MappingJS"": {
            ""mappingEngine"": ""JavaScript"",
            ""options"": {
                ""incomingScript"": ""{{ThingMapping}}""
            }
        }
    },
    ""sources"": [
        {
            ""addresses"": [
                ""{{entityPath}}/ConsumerGroups/$Default/Partitions/0"",
                ""{{entityPath}}/ConsumerGroups/$Default/Partitions/1""
            ],
            ""authorizationContext"": [
                ""nginx:ditto""
            ],
            ""payloadMapping"": [
                ""MappingJS""
            ]
        }
    ]
}
```
The JS Mapping:
```javascript
function mapToDittoProtocolMsg(
    headers,
    textPayload,
    bytePayload,
    contentType
) {
    if (contentType !== 'application/json') {
        return null;
    }

    let jsonData = JSON.parse(textPayload);

    let value = {}
    // Just setting a data property to the payload for now
    value['data'] = {properties: { value: textPayload }}

    return Ditto.buildDittoProtocolMsg(
        'org.eclipse.packages.c2e',
        jsonData.deviceName,
        'things',
        'twin',
        'commands',
        'modify',
        '/',
        headers,
        value
    );
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1618/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1618,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85aLK04,ditto,1512877368,1618,NA,viscreoRyan,46111509,,,NA,2023-04-18T11:00:12Z,2023-04-18T11:00:12Z,"I figured it out, turns out I was missing ""Id"" of the end of policy... oops! For those interested this is what I used:
```javascript
function mapToDittoProtocolMsg(
    headers,
    textPayload,
    bytePayload,
    contentType
) {
    if (contentType !== 'application/json') {
        return null; 
    }
    let jsonData = JSON.parse(textPayload);
    headers.deviceName = jsonData.deviceName
    if(!'body' in jsonData){
        return null;
    }
    let body = jsonData['data']
    let value = {}
    value['exampleFeature'] = { properties: { value: 100 }};

    let command = {policyId: 'org.eclipse.mypolicy, features: value}
    return Ditto.buildDittoProtocolMsg(
        'org.eclipse.packages.c2e', 
        jsonData.deviceName,
        'things',
        'twin',
        'commands',
        'modify',
        '/',
        headers,
        command
    );
}```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85aLK04/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1619,https://api.github.com/repos/eclipse-ditto/ditto/issues/1619,ditto,1673443080,1619,"Connection metrics for ""target only"" connections can be reported+logged wrongly for message dropping",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2023-04-18T16:08:53Z,2023-04-26T06:08:54Z,"Based on the following [Stackoverflow question](https://stackoverflow.com/questions/76044974/eclipse-ditto-does-not-send-all-things-events-over-target-connection/76046710#76046710) I found out that in the `OutboundMappingProcessorActor` a wrong `monitor` is invoked for reporting failures:

https://github.com/eclipse-ditto/ditto/blob/a5862aad7decb8b9ea4187010af6a1b6d26b1430/connectivity/service/src/main/java/org/eclipse/ditto/connectivity/service/messaging/OutboundMappingProcessorActor.java#L352-L360


The `responseDispatchedMonitor` is used - however this method is also called for ""target only"" connections for outbound signals.  
Those are not a response (reported as the `""address"": ""_responses""`), but should be reported to the `getMonitorsForOutboundSignal()`:

https://github.com/eclipse-ditto/ditto/blob/a5862aad7decb8b9ea4187010af6a1b6d26b1430/connectivity/service/src/main/java/org/eclipse/ditto/connectivity/service/messaging/OutboundMappingProcessorActor.java#L679

It even seems that the metrics for e.g. the `""Message is dropped as a result of backpressure strategy!""` situation are counted and logged twice for the `dispatched` type:
* once as a `success` (with correct `target` address)
* once as a `failed` (with the wrong `""_responses""` address)

That must also be analyzed, it should per category only be counted once.

Check the provided target logs and search for the correlationId `6c73e2e6-defa-42fd-a7c4-53a3d8f6e2de` in order to reproduce:
https://pastebin.com/VSApKH0g

@desislava-marinova you were the author of this `messageDiscarded` method using always the `responseDispatchedMonitor`.
Do you still remember (already 9 months ago I fear :D) that addition?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1619/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1622,https://api.github.com/repos/eclipse-ditto/ditto/issues/1622,ditto,1676198772,1622,"Add ""mass operation"" functionality for things",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2023-04-20T07:50:55Z,2023-06-28T19:06:37Z,"In order to provide ""Mass operation"" (e.g. mass update, mass message sending) capabilities, several existing strengths of Ditto can be combined to provide a new API for such operations targeting potentially a lot of things.

E.g. think about you want to change the behavior of all devices attached to e.g. a ""room"" or located inside a specific ""building"". This link could be simply added as an attribute of the device, e.g. `""roomId""` or `""buildingId""`.  
In order to retrieve / `GET` the state of all devices of a room, an API does already exist in Ditto, the search:  
```
GET /api/2/search/things?filter=eq(attributes/roomId,""0815"")
```

This issue is about adding a new API (both on HTTP and on DittoProtocol level) in order to do something similar for also modifications (via HTTP `PUT` / `PATCH`) or sending messages (via HTTP `POST`) - while providing a `filter` (RQL condition) which things should be selected/targeted for the operation.

The first idea which comes to my head is something like:
```
PATCH /api/2/mass/things?filter=eq(attributes/roomId,""0815"")

PUT /api/2/mass/things/features/thermostat/properties/temperature?filter=eq(attributes/roomId,""0815"")

POST /api/2/mass/things/features/thermostat/inbox/messages/toggle?filter=eq(attributes/roomId,""0815"")
```

Another use case which would be solved by such a functionality:

Sometimes the ID of a `thing` might not be available when trying to modify it.
For example because the only information available is e.g. a ""serialNumber"" - but this serialNumber is not necessarily a part of the `thingId`.

When such a thing should be updated, the `thingId` would first have to be looked up in Ditto.  
The process would then look like:
* process device message containing a serialNumber `my-serial-number`
* query Ditto's search with a filter querying for that serial number, e.g. with: `GET /api/2/search/things?filter=eq(attributes/serial,""my-serial-number"")&fields=thingId`
* if there is a result
   * use the returned `thingId` to build the ""modify or merge command"" to Ditto
   * send command
* if there is no result
   * handle exception case

At the Ditto HTTP API this could e.g. look like (in order to modify attributes):
`PUT /api/2/mass/things/attributes?filter=eq(attributes/serial,""my-serial-number"")&max-targets=1`

There should be an option like `max-targets` to define a limit of how many things should match the `filter`. The request would fail if more than this `max-targets` were chosen to apply the change on.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1622/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1622,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85c5cNi,ditto,1558561634,1622,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-05-23T05:42:21Z,2023-05-23T05:42:21Z,"Thinking about this, this API should not be ""merged"" into the normal `/things` endpoint.

It could also be seen as ""mass operation API"", utilizing the search as source of thingIds to apply an operation to.
The available operations would be all available things api functionality, e.g.:
* modifying thing, feautre, attribute, etc
* merging..
* sending messages to things or features
* deleting things, features, attributes,...

The initially described use case would be possible to solve, but also so much more.
E.g think about sending a ""switch off"" message to all devices referencing the same room id. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85c5cNi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1622,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85c6Mdj,ditto,1558759267,1622,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-05-23T08:13:34Z,2023-05-23T08:13:34Z,"Another idea - which would be more ""RESTful"" - is to provide a new endpoint for such ""mass operations"":
```
POST /api/2/thingsMassOperations

payload:
{
  ""condition"": ""eq(attributes/roomId,'0815')"",
  ""operation"": {
    ""method"": ""PUT"",
    ""path"": ""/features/thermostat/properties/temperature"",
    ""value"": 22.5,
    ""headers"": {
    }
  }
}
```

The benefit of this is that a new resource could be created as a response (in the ""Location"" response header):
* used for querying about the status of the mass-operation
   * `GET /api/2/thingsMassOperations/<id>/status`
* used for querying about the responses of the mass-operation
   * `GET /api/2/thingsMassOperations/<id>/responses`
   * e.g. also supporting pagination if the results are really many","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85c6Mdj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1622,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85gFD-P,ditto,1611939727,1622,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-06-28T19:06:37Z,2023-06-28T19:06:37Z,"The main problem/challenge to solve is how to provide responses for all the performed mass operations?

I think that Ditto would need to provide another persistence for the results and provide an async way to query for the results. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85gFD-P/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1623,https://api.github.com/repos/eclipse-ditto/ditto/issues/1623,ditto,1677988216,1623,Devops API swagger,neottil,84083982,Luca Neotti,NEOT.LUKA.89@GMAIL.COM,CLOSED,2023-04-21T07:20:06Z,2023-06-16T14:16:48Z,"Create swagger file for devops API, like other API.

### Discussed in https://github.com/eclipse-ditto/ditto/discussions/1621

<div type='discussions-op-text'>

<sup>Originally posted by **neottil** April 19, 2023</sup>
In documentation there is a section that describe devops http api: https://www.eclipse.org/ditto/installation-operating.html#retrieve-all-log-levels.
Is there a swagger file for this, like other api exposed by swagger module? 
Like this: https://github.com/eclipse-ditto/ditto/blob/master/documentation/src/main/resources/openapi/ditto-api-2.yml</div>","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1623/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1624,https://api.github.com/repos/eclipse-ditto/ditto/issues/1624,ditto,1680961564,1624,[ditto-internal-utils-tracing] All bytes as zero should be considered an invalid SpanId.,jufickel-b,17162397,Juergen Fickel,,OPEN,2023-04-24T10:41:33Z,2023-04-26T08:09:29Z,"According to the [official spec](https://w3c.github.io/trace-context/#parent-id) a parent-id aka span-id where all bytes as zero (0000000000000000) is considered an invalid value.

Ditto should reflect this in the [`SpanId`](https://github.com/eclipse-ditto/ditto/blob/master/internal/utils/tracing/src/main/java/org/eclipse/ditto/internal/utils/tracing/span/SpanId.java) class. I. e. the class' static factory method `of` should throw an appropriate exception – or even better: return a [`Result`](https://github.com/eclipse-ditto/ditto/blob/master/utils/result/src/main/java/org/eclipse/ditto/utils/result/Result.java).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1624/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1624,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85al_Pe,ditto,1519907806,1624,NA,jufickel-b,17162397,Juergen Fickel,,NA,2023-04-24T10:58:38Z,2023-04-24T10:58:38Z,"There are more things that should be validated:
* the length of the span-id
* the format should comply to the [version format (partent-id).](https://w3c.github.io/trace-context/#version-format)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85al_Pe/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1624,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85anL5v,ditto,1520221807,1624,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-04-24T14:03:43Z,2023-04-24T14:03:43Z,"Maybe the issue title and description lacks some context.
It is about the built in tracing functionality in Ditto? ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85anL5v/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1625,https://api.github.com/repos/eclipse-ditto/ditto/issues/1625,ditto,1684706075,1625,Modify connection does not work with Ditto 3.2.1,mladBlum,45092755,Dominik Mlasko,,CLOSED,2023-04-26T10:03:16Z,2023-11-23T07:09:51Z,"Today we upgraded our Ditto from version 3.1.2 to version 3.2.1.
In Ditto 3.2.1 we are not able to modify a connection. 

Our Setup:
- AKS (Kubernetes Cluster)
- Ditto installed via Helm-Chart (Chart Version 3.2.2)

Steps to reproduce:

1. Create the connection
```
curl --request POST \
  --url 'https://example.com/devops/piggyback/connectivity?timeout=10' \
  --header 'authorization: Basic xxxxx' \
  --header 'content-type: application/json' \
  --data '{""targetActorSelection"": ""/system/sharding/connection"",""headers"": {""aggregate"": false},""piggybackCommand"": {""type"": ""connectivity.commands:createConnection"",""connection"": {""id"": ""mqtt-broker-airqube"",""connectionType"": ""mqtt"",""connectionStatus"": ""open"",""failoverEnabled"": true,""uri"": ""tcp://eclipse-mosquitto-internal.mosquitto:1883"",""sources"": [{""addresses"": [""device/airqube/#""],""authorizationContext"": [""mosquitto:device""],""qos"": 0,""filters"": []}],""targets"": [{""address"": ""device/{{ thing:id }-in}"",""topics"": [""_/_/things/twin/events"",""_/_/things/live/messages""],""authorizationContext"": [""nginx:ditto""],""qos"": 0}]}}}'
```
2. Add name ""mqtt helloworld"" by modifying the connection
```
  curl --request POST \
  --url 'https://example.com/devops/piggyback/connectivity?timeout=20' \
  --header 'authorization: Basic xxxxx' \
  --header 'content-type: application/json' \
  --data '{""targetActorSelection"": ""/system/sharding/connection"",""headers"": {""aggregate"": false},""piggybackCommand"": {""type"": ""connectivity.commands:modifyConnection"",""connection"": {""id"": ""mqtt-broker-airqube"",""name"": ""mqtt helloworld"",""connectionType"": ""mqtt"",""connectionStatus"": ""open"",""failoverEnabled"": true,""uri"": ""tcp://eclipse-mosquitto-internal.mosquitto:1883"",""sources"": [{""addresses"": [""device/airqube/#""],""authorizationContext"": [""mosquitto:device""],""qos"": 0,""filters"": []}],""targets"": [{""address"": ""device/{{ thing:id }-in}"",""topics"": [""_/_/things/twin/events"",""_/_/things/live/messages""],""authorizationContext"": [""nginx:ditto""],""qos"": 0}]}}}'
```

3. The endpoint answers with the following message
```
HTTP/1.1 200 OK
Date: Wed, 26 Apr 2023 10:00:13 GMT
Content-Type: application/json
Content-Length: 159
Connection: close
correlation-id: 1dff9b1d-81f2-4ce7-97b2-8f5fbee5b8d4
timeout: 20
response-required: false
Access-Control-Allow-Methods: GET, POST, PUT, PATCH, DELETE, OPTIONS
Access-Control-Allow-Credentials: true
Access-Control-Expose-Headers: *
Strict-Transport-Security: max-age=15724800; includeSubDomains

{
  ""status"": 503,
  ""error"": ""ask.error"",
  ""message"": ""There was an internal timeout."",
  ""description"": ""Please retry the performed action in order to improve resiliency.""
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1625/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1625,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ayhl7,ditto,1523194235,1625,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-04-26T10:33:24Z,2023-04-26T10:33:24Z,"The ""old API"" for accessing connection still should work.
However, just to check: did you try the newly introduced `/connections` API to modify your connection?
https://www.eclipse.org/ditto/http-api-doc.html#/Connections/put_connections__connectionId_

Credentials are the same as for the `/devops` resources..","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ayhl7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1625,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ay9o9,ditto,1523309117,1625,NA,mladBlum,45092755,Dominik Mlasko,,NA,2023-04-26T12:07:55Z,2023-04-26T12:07:55Z,"I have just done the same calls with the /connections API. This works just fine, the new endpoint does not fail. 
Thanks for the hint, for some reason we didn't noticed that there is a new endpoint.

Should we leave the issue open? After all, the piggyback API is not yet marked as obsolete in the documentation.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ay9o9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1625,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85azC9_,ditto,1523330943,1625,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-04-26T12:24:47Z,2023-04-26T12:24:47Z,You can leave it open - maybe someone will look into it..,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85azC9_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1625,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85stoOS,ditto,1823900562,1625,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-11-23T07:09:47Z,2023-11-23T07:09:47Z,"I think noone is going to look into this.
Closing as I also could not reproduce lately. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85stoOS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1626,https://api.github.com/repos/eclipse-ditto/ditto/issues/1626,ditto,1684741179,1626,Connection between Hono and Ditto - New tenant - Failed,paulocabrita-ionos,109610228,Paulo Cabrita,,CLOSED,2023-04-26T10:24:43Z,2023-04-26T16:45:53Z,"Hello everyone.

I'm following the tour: https://www.eclipse.org/packages/packages/cloud2edge/tour/ and my aim is to create a new tenant, create some devices, send data to Hono and manipulate Ditto. Everything works fine except that Ditto does not receive any data.

I also noticed that the site has instructions to create a new connection between Hono and Ditto using AMQP but... the example that is also deployed uses Kafka. The example uses the domain ""org.eclipse.packages.c2e"".

If I had devices to the ""org.eclipse.packages.c2e"" domain everything works fine.

My curls are the following:
- Tenant
``
curl -i -X POST http://${REGISTRY_IP}:${REGISTRY_PORT_HTTP}/v1/tenants/skynet  
``
- New device
``
curl -i -X POST http://${REGISTRY_IP}:${REGISTRY_PORT_HTTP}/v1/devices/skynet/skynet:my-device-1
``
- Device password
``
curl -i -X PUT -H ""Content-Type: application/json"" --data '[
{
  ""type"": ""hashed-password"",
  ""auth-id"": ""userRobot"",
  ""secrets"": [{
    ""pwd-plain"": ""topSecret""
  }]
}]' http://${REGISTRY_IP}:${REGISTRY_PORT_HTTP}/v1/credentials/skynet/skynet:my-device-1
``
- AMQP Connection (following the ""tour""). HONO_TENANT and DITTO_DEVOPS_PWD are correct.
``
curl -i -X POST -u devops:${DITTO_DEVOPS_PWD} -H 'Content-Type: application/json' --data '{
  ""targetActorSelection"": ""/system/sharding/connection"",
  ""headers"": {
    ""aggregate"": false
  },
  ""piggybackCommand"": {
    ""type"": ""connectivity.commands:createConnection"",
    ""connection"": {
      ""id"": ""hono-connection-for-'""${HONO_TENANT}""'"",
      ""connectionType"": ""amqp-10"",
      ""connectionStatus"": ""open"",
      ""uri"": ""amqp://consumer%40HONO:verysecret@'""${RELEASE}""'-dispatch-router-ext:15672"",
      ""failoverEnabled"": true,
      ""sources"": [
        {
          ""addresses"": [
            ""telemetry/'""${HONO_TENANT}""'"",
            ""event/'""${HONO_TENANT}""'""
          ],
          ""authorizationContext"": [
            ""pre-authenticated:hono-connection""
          ],
          ""enforcement"": {
            ""input"": ""{{ header:device_id }}"",
            ""filters"": [
              ""{{ entity:id }}""
            ]
          },
          ""headerMapping"": {
            ""hono-device-id"": ""{{ header:device_id }}"",
            ""content-type"": ""{{ header:content-type }}""
          },
          ""replyTarget"": {
            ""enabled"": true,
            ""address"": ""{{ header:reply-to }}"",
            ""headerMapping"": {
              ""to"": ""command/'""${HONO_TENANT}""'/{{ header:hono-device-id }}"",
              ""subject"": ""{{ header:subject | fn:default(topic:action-subject) | fn:default(topic:criterion) }}-response"",
              ""correlation-id"": ""{{ header:correlation-id }}"",
              ""content-type"": ""{{ header:content-type | fn:default('""'""'application/vnd.eclipse.ditto+json'""'""') }}""
            },
            ""expectedResponseTypes"": [
              ""response"",
              ""error""
            ]
          },
          ""acknowledgementRequests"": {
            ""includes"": [],
            ""filter"": ""fn:filter(header:qos,'""'""'ne'""'""','""'""'0'""'""')""
          }
        },
        {
          ""addresses"": [
            ""command_response/'""${HONO_TENANT}""'/replies""
          ],
          ""authorizationContext"": [
            ""pre-authenticated:hono-connection""
          ],
          ""headerMapping"": {
            ""content-type"": ""{{ header:content-type }}"",
            ""correlation-id"": ""{{ header:correlation-id }}"",
            ""status"": ""{{ header:status }}""
          },
          ""replyTarget"": {
            ""enabled"": false,
            ""expectedResponseTypes"": [
              ""response"",
              ""error""
            ]
          }
        }
      ],
      ""targets"": [
        {
          ""address"": ""command/'""${HONO_TENANT}""'"",
          ""authorizationContext"": [
            ""pre-authenticated:hono-connection""
          ],
          ""topics"": [
            ""_/_/things/live/commands"",
            ""_/_/things/live/messages""
          ],
          ""headerMapping"": {
            ""to"": ""command/'""${HONO_TENANT}""'/{{ thing:id }}"",
            ""subject"": ""{{ header:subject | fn:default(topic:action-subject) }}"",
            ""content-type"": ""{{ header:content-type | fn:default('""'""'application/vnd.eclipse.ditto+json'""'""') }}"",
            ""correlation-id"": ""{{ header:correlation-id }}"",
            ""reply-to"": ""{{ fn:default('""'""'command_response/'""${HONO_TENANT}""'/replies'""'""') | fn:filter(header:response-required,'""'""'ne'""'""','""'""'false'""'""') }}""
          }
        },
        {
          ""address"": ""command/'""${HONO_TENANT}""'"",
          ""authorizationContext"": [
            ""pre-authenticated:hono-connection""
          ],
          ""topics"": [
            ""_/_/things/twin/events"",
            ""_/_/things/live/events""
          ],
          ""headerMapping"": {
            ""to"": ""command/'""${HONO_TENANT}""'/{{ thing:id }}"",
            ""subject"": ""{{ header:subject | fn:default(topic:action-subject) }}"",
            ""content-type"": ""{{ header:content-type | fn:default('""'""'application/vnd.eclipse.ditto+json'""'""') }}"",
            ""correlation-id"": ""{{ header:correlation-id }}""
          }
        }
      ]
    }
  }
}' http://${DITTO_API_IP}:${DITTO_API_PORT_HTTP}/devops/piggyback/connectivity
``
- Creation of the Digital Twin. I used a json file to do it (I created before the policy)
``
curl -u ditto:ditto -X PUT -H 'Content-Type: application/json' -d @../robotArm_v1.json http://${DITTO_API_IP}:${DITTO_API_PORT_HTTP}/api/2/things/skynet:my-device-1
``
- I send data but nothing gets to the Digital Twin;
- I repeated the same process but this time I created a Kafka connection like this (I'm not sure if it's correct)
``
curl -i -X POST -u devops:${DITTO_DEVOPS_PWD} -H 'Content-Type: application/json' --data '{
  ""targetActorSelection"": ""/system/sharding/connection"",
  ""headers"": {
    ""aggregate"": false
  },
  ""piggybackCommand"": {
    ""type"": ""connectivity.commands:createConnection"",
    ""connection"": {
      ""id"": ""hono-skynet"",
	""name"": ""skynet"",
	""connectionType"": ""kafka"",
	""connectionStatus"": ""open"",
	""uri"": ""ssl://ditto-c2e:verysecret@c2e-kafka:9092"",
	""sources"": [
		{
			""addresses"": [
				""hono.telemetry.skynet""
			],
			""consumerCount"": 1,
			""qos"": 0,
			""authorizationContext"": [
				""pre-authenticated:hono-connection""
			],
			""enforcement"": {
				""input"": ""{{ header:device_id }}"",
				""filters"": [
					""{{ entity:id }}""
				]
			},
			""acknowledgementRequests"": {
				""includes"": [],
				""filter"": ""fn:delete()""
			},
			""headerMapping"": {},
			""replyTarget"": {
				""address"": ""hono.command.skynet/{{ thing:id }}"",
				""headerMapping"": {
					""device_id"": ""{{ thing:id }}"",
					""subject"": ""{{ header:subject | fn:default(topic:action-subject) | fn:default(topic:criterion) }}-response"",
					""correlation-id"": ""{{ header:correlation-id }}""
				},
				""expectedResponseTypes"": [
					""response"",
					""error""
				],
				""enabled"": true
			}
		},
		{
			""addresses"": [
				""hono.event.skynet""
			],
			""consumerCount"": 1,
			""qos"": 1,
			""authorizationContext"": [
				""pre-authenticated:hono-connection""
			],
			""enforcement"": {
				""input"": ""{{ header:device_id }}"",
				""filters"": [
					""{{ entity:id }}""
				]
			},
			""acknowledgementRequests"": {
				""includes"": []
			},
			""headerMapping"": {},
			""replyTarget"": {
				""address"": ""hono.command.skynet/{{ thing:id }}"",
				""headerMapping"": {
					""device_id"": ""{{ thing:id }}"",
					""subject"": ""{{ header:subject | fn:default(topic:action-subject) | fn:default(topic:criterion) }}-response"",
					""correlation-id"": ""{{ header:correlation-id }}""
				},
				""expectedResponseTypes"": [
					""response"",
					""error""
				],
				""enabled"": true
			}
		},
		{
			""addresses"": [
				""hono.command_response.skynet""
			],
			""consumerCount"": 1,
			""qos"": 0,
			""authorizationContext"": [
				""pre-authenticated:hono-connection""
			],
			""enforcement"": {
				""input"": ""{{ header:device_id }}"",
				""filters"": [
					""{{ entity:id }}""
				]
			},
			""acknowledgementRequests"": {
				""includes"": [],
				""filter"": ""fn:delete()""
			},
			""headerMapping"": {
				""correlation-id"": ""{{ header:correlation-id }}"",
				""status"": ""{{ header:status }}""
			},
			""replyTarget"": {
				""enabled"": false
			}
		}
	],
	""targets"": [
		{
			""address"": ""hono.command.skynet/{{ thing:id }}"",
			""topics"": [
				""_/_/things/live/commands"",
				""_/_/things/live/messages""
			],
			""authorizationContext"": [
				""pre-authenticated:hono-connection""
			],
			""headerMapping"": {
				""device_id"": ""{{ thing:id }}"",
				""subject"": ""{{ header:subject | fn:default(topic:action-subject) }}"",
				""response-required"": ""{{ header:response-required }}"",
				""correlation-id"": ""{{ header:correlation-id }}""
			}
		},
		{
			""address"": ""hono.command.skynet/{{thing:id}}"",
			""topics"": [
				""_/_/things/twin/events"",
				""_/_/things/live/events""
			],
			""authorizationContext"": [
				""pre-authenticated:hono-connection""
			],
			""headerMapping"": {
				""device_id"": ""{{ thing:id }}"",
				""subject"": ""{{ header:subject | fn:default(topic:action-subject) }}"",
				""correlation-id"": ""{{ header:correlation-id }}""
			}
		}
	],
	""clientCount"": 1,
	""failoverEnabled"": true,
	""validateCertificates"": true,
	""processorPoolSize"": 1,
	""specificConfig"": {
		""saslMechanism"": ""plain"",
		""bootstrapServers"": ""c2e-kafka:9092"",
		""groupId"": ""skynet_{{ connection:id }}""
	}
    }
  }
}' http://${DITTO_API_IP}:${DITTO_API_PORT_HTTP}/devops/piggyback/connectivity
``
- When I check the connection, it seems that everything is ok
``
curl -X POST -i -u devops:${DITTO_DEVOPS_PWD} -H 'Content-Type: application/json' -d '{
""targetActorSelection"": ""/system/sharding/connection"",
""headers"": {},
""piggybackCommand"": {
""type"": ""connectivity.commands:retrieveConnection"",
""connectionId"": ""hono-skynet""
}
}' http://${DITTO_API_IP}:${DITTO_API_PORT_HTTP}/devops/piggyback/connectivity?timeout=8s
``

Like I said, if I use the tenant from the example ""org.eclipse.packages.c2e"", it works fine but now when I create a new tenant.

I think this a related issue:
- https://github.com/eclipse-ditto/ditto/issues/1574

Also, I think it should be great to update the ""tour"" site in order to have instructions to connect Hono and Ditto using Kafka.

Does anyone have a working new kafka connection running with a new tenant?

Please advise.

Thanks
PJC","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1626/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1626,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ayi8k,ditto,1523199780,1626,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-04-26T10:37:46Z,2023-04-26T10:37:46Z,"Please move this ticket to the IoT Packages project, as this is scope of the packages project to provide this combination of Hono/Ditto: https://github.com/eclipse/packages

There is already a known issue that the ""tour"" should be updated to using Kafka, however noone contributed on that so far: https://github.com/eclipse/packages/issues/432","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ayi8k/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1626,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85a0nkr,ditto,1523743019,1626,NA,paulocabrita-ionos,109610228,Paulo Cabrita,,NA,2023-04-26T16:45:53Z,2023-04-26T16:45:53Z,"Thanks. 

I will create the new issue in the ""packages"".","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85a0nkr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1627,https://api.github.com/repos/eclipse-ditto/ditto/issues/1627,ditto,1684925143,1627,ditto not sending MQTT messages when a thing is updated,rinelb,19814284,,,CLOSED,2023-04-26T12:22:20Z,2023-04-26T13:23:19Z,"I am not receiving updates via MQTT from ditto, How do i setup the ditto connection to send MQTT messages when a thing is updated

i can send data to ditto via MQTT and the features of the thing gets updated I followed the example show on [https://github.com/eclipse-ditto/ditto-examples/blob/master/mqtt-bidirectional/README.md](https://github.com/eclipse-ditto/ditto-examples/blob/master/mqtt-bidirectional/README.md)

im running eclipse ditto on docker on windows 10
i ran docker compose from the ditto/deployment/docker folder


it create a think called ""my.test:octopus"" and send data via MQTT to update the features from the tutorial above


here is my CRUD Connection Template 

```
{
  ""id"": ""mqtt-example-connection-123"",
  ""name"": ""testing"",
  ""connectionType"": ""mqtt"",
  ""connectionStatus"": ""open"",
  ""uri"": ""tcp://test.mosquitto.org:1883"",
  ""sources"": [
    {
      ""addresses"": [
        ""ditto-tutorial/#""
      ],
      ""consumerCount"": 1,
      ""qos"": 0,
      ""authorizationContext"": [
        ""nginx:ditto""
      ],
      ""headerMapping"": {},
      ""payloadMapping"": [
        ""javascript""
      ],
      ""replyTarget"": {
        ""address"": ""{{header:reply-to}}"",
        ""headerMapping"": {},
        ""expectedResponseTypes"": [
          ""response"",
          ""error""
        ],
        ""enabled"": true
      }
    }
  ],
  ""targets"": [
    {
      ""address"": ""ditto-tutorial/{{ thing:id }}"",
      ""topics"": [
        ""_/_/things/twin/events"",
        ""_/_/things/live/messages""
      ],
      ""qos"": 0,
      ""authorizationContext"": [
        ""nginx:ditto""
      ],
      ""issuedAcknowledgementLabel"": ""{{connection:id}}:my-custom-ack"",
      ""headerMapping"": {}
    }
  ],
  ""clientCount"": 1,
  ""failoverEnabled"": true,
  ""validateCertificates"": true,
  ""processorPoolSize"": 1,
  ""specificConfig"": {
    ""lastWillTopic"": ""my/last/will/topic"",
    ""lastWillMessage"": ""my last will message"",
    ""publisherId"": ""my-awesome-mqtt-publisher-client-id"",
    ""clientId"": ""my-awesome-mqtt-client-id"",
    ""lastWillRetain"": ""false"",
    ""reconnectForRedelivery"": ""true"",
    ""reconnectForRedeliveryDelay"": ""5s"",
    ""lastWillQos"": ""1"",
    ""cleanSession"": ""false"",
    ""separatePublisherClient"": ""true""
  },
  ""mappingDefinitions"": {
    ""javascript"": {
      ""mappingEngine"": ""JavaScript"",
      ""options"": {
        ""incomingScript"": ""function mapToDittoProtocolMsg(headers, textPayload, bytePayload, contentType) {\r\n    const jsonString = String.fromCharCode.apply(null, new Uint8Array(bytePayload));\r\n    const jsonData = JSON.parse(jsonString); \r\n    const thingId = jsonData.thingId.split(':'); \r\n    const value = { \r\n        temp_sensor: { \r\n            properties: { \r\n                value: jsonData.temp \r\n            } \r\n        },\r\n        altitude: {            \r\n            properties: {                \r\n                value: jsonData.alt            \r\n            }        \r\n        }    \r\n    };    \r\n    return Ditto.buildDittoProtocolMsg(\r\n        thingId[0], // your namespace \r\n        thingId[1], \r\n        'things', // we deal with a thing\r\n        'twin', // we want to update the twin\r\n        'commands', // create a command to update the twin\r\n        'modify', // modify the twin\r\n        '/features', // modify all features at once\r\n        headers, \r\n        value\r\n    );\r\n}"",
        ""outgoingScript"": """"
      }
    }
  },
  ""tags"": []
}

```

im using python script to send data via MQTT to update the my.test:octopus device 

```
>python send_mqtt_data_test.py
ditto-tutorial/my.test:octopus b'{""temp"": ""17.77"", ""alt"": ""344.21"", ""thingId"": ""my.test:octopus""}'
recieved
ditto-tutorial/my.test:octopus b'{""temp"": ""19.73"", ""alt"": ""349.06"", ""thingId"": ""my.test:octopus""}'
recieved
ditto-tutorial/my.test:octopus b'{""temp"": ""19.0"", ""alt"": ""317.99"", ""thingId"": ""my.test:octopus""}'
```


I can see on the UI that ditto is updating the my.test:octopus when ever it recieves mqtt messages show above


i am running a seperate python script that is subscribing to the following topics

```
topic0 = ""my.test:octopus/#""
topic1 = ""ditto-tutorial/#""
topic2 = ""my/last/will/topic""
topic3 = ""_/_/things/live/messages/#""
topic4 = ""test/ditto/data""
```

it recieves topic1 only,  this is just to make sure the subscribe is working  


note for topic ""test/ditto/data"" i added 
```
 ""headerMapping"": {
        ""mqtt.topic"": ""test/ditto/data"",
        ""mqtt.qos"": 0
      }
```
to the ""replyTarget"" and ""targets"" tags and both on the templet above but that didnt work so i removed it. 

then i went back to the same templet above and caputred the logs 
below shows the logs of the ""eclipse/ditto-connectivity:lates"" 

```
>docker ps
CONTAINER ID   IMAGE                                COMMAND                  CREATED      STATUS                 PORTS                      NAMES
95a275b0097e   nginx:1.21-alpine                    ""/docker-entrypoint.…""   8 days ago   Up 5 hours             0.0.0.0:8080->80/tcp       docker-nginx-1
7c6f1be40a78   eclipse/ditto-connectivity:latest    ""/usr/bin/tini -- sh…""   8 days ago   Up 5 hours (healthy)   8080/tcp                   docker-connectivity-1
179c2b7060d1   eclipse/ditto-things:latest          ""/usr/bin/tini -- sh…""   8 days ago   Up 5 hours (healthy)   8080/tcp                   docker-things-1
04814d55b067   eclipse/ditto-things-search:latest   ""/usr/bin/tini -- sh…""   8 days ago   Up 5 hours (healthy)   8080/tcp                   docker-things-search-1
57fd3066e4af   eclipse/ditto-gateway:latest         ""/usr/bin/tini -- sh…""   8 days ago   Up 5 hours (healthy)   0.0.0.0:8081->8080/tcp     docker-gateway-1
ffec7a9f9e67   swaggerapi/swagger-ui:v4.14.3        ""/docker-entrypoint.…""   8 days ago   Up 5 hours             80/tcp, 8080/tcp           docker-swagger-ui-1
59b155e8ade8   eclipse/ditto-policies:latest        ""/usr/bin/tini -- sh…""   8 days ago   Up 5 hours (healthy)   8080/tcp                   docker-policies-1
80a1e94b5821   mongo:5.0                            ""docker-entrypoint.s…""   8 days ago   Up 5 hours             0.0.0.0:27017->27017/tcp   docker-mongodb-1

>docker container logs 7c6f1be40a78 -f -t -n 500
2023-04-26T11:38:51.510424852Z 2023-04-26 13:38:51,509 INFO  [] o.e.d.i.u.p.a.SubUpdater akka://ditto-cluster/user/live-signal-aware-sub-supervisor/subUpdater2 - DData is in sync with cluster state
2023-04-26T11:39:36.078581553Z 2023-04-26 13:39:36,077 INFO  [] o.e.d.i.u.p.a.SubUpdater akka://ditto-cluster/user/connectivity-sub-supervisor/subUpdater2 - Start to sync cluster state
2023-04-26T11:39:36.079302723Z 2023-04-26 13:39:36,078 INFO  [] o.e.d.i.u.p.a.SubUpdater akka://ditto-cluster/user/connectivity-sub-supervisor/subUpdater2 - DData is in sync with cluster state
2023-04-26T11:39:45.048817148Z 2023-04-26 13:39:45,047 INFO  [] o.e.d.i.u.p.c.PersistenceCleanupActor akka://ditto-cluster/user/connectivityRoot/persistenceCleanup - Quiet period expired, starting stream from <>
2023-04-26T11:39:45.057702501Z 2023-04-26 13:39:45,057 INFO  [] o.e.d.i.u.p.c.PersistenceCleanupActor akka://ditto-cluster/user/connectivityRoot/persistenceCleanup - Stream complete. Next stream in <PT9M45.3515625S> from start
2023-04-26T11:42:08.517459709Z 2023-04-26 13:42:08,517 INFO  [bca4d2ce-99a8-4c9c-87be-9086b5ce9b3c] o.e.d.c.s.m.p.ConnectionPersistenceActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa - Appending the following tags to event of type <connectivity.events:connectionModified> for connection with ID <mqtt-example-connection-123>: <[always-alive, priority-0]>
2023-04-26T11:42:08.520498993Z 2023-04-26 13:42:08,520 INFO  [bca4d2ce-99a8-4c9c-87be-9086b5ce9b3c] o.e.d.c.s.m.p.ConnectionPersistenceActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa - Successfully persisted Event <connectivity.events:connectionModified> w/ rev: <183>.
2023-04-26T11:42:08.725380276Z 2023-04-26 13:42:08,724 INFO  [] o.e.d.c.s.m.m.h.MqttClientActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa/$tb/c1 - Client <consumer:my-awesome-mqtt-client-id> disconnected by <USER>.
2023-04-26T11:42:08.728267055Z 2023-04-26 13:42:08,727 INFO  [] o.e.d.c.s.m.m.h.MqttClientActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa/$tb/c1 - Client <publisher:my-awesome-mqtt-publisher-client-id> disconnected by <USER>.
2023-04-26T11:42:08.729872717Z 2023-04-26 13:42:08,729 INFO  [bca4d2ce-99a8-4c9c-87be-9086b5ce9b3c] o.e.d.c.s.m.p.ConnectionPersistenceActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa - Starting ClientActor for connection <mqtt-example-connection-123> with <1> clients.
2023-04-26T11:42:08.731452896Z 2023-04-26 13:42:08,730 INFO  [] o.e.d.c.s.m.m.h.MqttClientActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa/$tb/c1 - Actor stopped, stopping clients.
2023-04-26T11:42:08.731560131Z 2023-04-26 13:42:08,730 DEBUG [] a.a.CoordinatedShutdown CoordinatedShutdown(akka://ditto-cluster) - Successfully cancelled CoordinatedShutdown task [service-unbind-akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa/$tb/c1] from phase [service-unbind].
2023-04-26T11:42:08.736021634Z 2023-04-26 13:42:08,735 INFO  [] o.e.d.c.s.m.m.h.MqttClientActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa/$Hb/c1 - Using default client ID <mqtt-example-connection-123>
2023-04-26T11:42:08.743098788Z 2023-04-26 13:42:08,742 INFO  [] o.e.d.c.s.m.m.l.ConnectionLoggerRegistry  - Invalidating loggers for connection <mqtt-example-connection-123>.
2023-04-26T11:42:08.743355394Z 2023-04-26 13:42:08,743 INFO  [] o.e.d.c.s.m.m.l.ConnectionLoggerRegistry  - Initializing loggers for connection <mqtt-example-connection-123>.
2023-04-26T11:42:08.749055616Z 2023-04-26 13:42:08,748 INFO  [] o.e.d.c.s.m.m.h.MqttClientActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa/$Hb/c1 - Configured for processing messages with the following MessageMapperRegistry: <DefaultMessageMapperRegistry [defaultMapper=WrappingMessageMapper [delegate=DittoMessageMapper [id=default, incomingConditions={}, outgoingConditions={}, contentTypeBlocklist=[application/vnd.eclipse-hono-empty-notification, application/vnd.eclipse-hono-device-provisioning-notification, application/vnd.eclipse-hono-dc-notification+json, application/vnd.eclipse-hono-delivery-failure-notification+json]]], customMappers={javascript=WrappingMessageMapper [delegate=JavaScriptMessageMapperRhino [id=javascript, incomingConditions={}, outgoingConditions={}, contentTypeBlocklist=[], configuration=ImmutableJavaScriptMessageMapperConfiguration [properties=MergedJsonObjectMap[jsonObject={""incomingScript"":""function mapToDittoProtocolMsg(headers, textPayload, bytePayload, contentType) {\r\n    const jsonString = String.fromCharCode.apply(null, new Uint8Array(bytePayload));\r\n    const jsonData = JSON.parse(jsonString); \r\n    const thingId = jsonData.thingId.split(':'); \r\n    const value = { \r\n        temp_sensor: { \r\n            properties: { \r\n                value: jsonData.temp \r\n            } \r\n        },\r\n        altitude: {            \r\n            properties: {                \r\n                value: jsonData.alt            \r\n            }        \r\n        }    \r\n    };    \r\n    return Ditto.buildDittoProtocolMsg(\r\n        thingId[0], // your namespace \r\n        thingId[1], \r\n        'things', // we deal with a thing\r\n        'twin', // we want to update the twin\r\n        'commands', // create a command to update the twin\r\n        'modify', // modify the twin\r\n        '/features', // modify all features at once\r\n        headers, \r\n        value\r\n    );\r\n}"",""outgoingScript"":""""},fallbackObject={}], incomingConditions={}, outgoingConditions={}], incomingMapping=org.eclipse.ditto.connectivity.service.mapping.javascript.ScriptedIncomingMapping@19db9cb0, outgoingMapping=org.eclipse.ditto.connectivity.service.mapping.javascript.DefaultOutgoingMapping@40fb3f02]]}, fallbackMappers={UpdateTwinWithLiveResponse=WrappingMessageMapper [delegate=UpdateTwinWithLiveResponseMessageMapper [id=UpdateTwinWithLiveResponse, incomingConditions={}, outgoingConditions={}, contentTypeBlocklist=[application/vnd.eclipse-hono-empty-notification, application/vnd.eclipse-hono-device-provisioning-notification, application/vnd.eclipse-hono-dc-notification+json, application/vnd.eclipse-hono-delivery-failure-notification+json], dittoHeadersForMerge=ImmutableDittoHeaders [{response-required=false, if-match=*}]]], Normalized=WrappingMessageMapper [delegate=NormalizedMessageMapper [id=Normalized, incomingConditions={}, outgoingConditions={}, contentTypeBlocklist=[], jsonFieldSelector=null]], Ditto=WrappingMessageMapper [delegate=DittoMessageMapper [id=Ditto, incomingConditions={}, outgoingConditions={}, contentTypeBlocklist=[application/vnd.eclipse-hono-empty-notification, application/vnd.eclipse-hono-device-provisioning-notification, application/vnd.eclipse-hono-dc-notification+json, application/vnd.eclipse-hono-delivery-failure-notification+json]]], CloudEvents=WrappingMessageMapper [delegate=id=CloudEvents, incomingConditions={}, outgoingConditions={}, contentTypeBlocklist=[]], RawMessage=WrappingMessageMapper [delegate=RawMessageMapper [id=RawMessage, incomingConditions={}, outgoingConditions={}, contentTypeBlocklist=[application/vnd.eclipse-hono-empty-notification, application/vnd.eclipse-hono-device-provisioning-notification, application/vnd.eclipse-hono-dc-notification+json, application/vnd.eclipse-hono-delivery-failure-notification+json], dittoMessageMapper=DittoMessageMapper [id=null, incomingConditions=null, outgoingConditions=null, contentTypeBlocklist=null], fallbackOutgoingContentType=ContentType [value=text/plain; charset=utf-8, parsingStrategy=TEXT], incomingMessageHeaders={ditto-message-direction={{header:ditto-message-direction|fn:default('TO')}}, ditto-message-subject={{header:ditto-message-subject}}, ditto-message-feature-id={{header:ditto-message-feature-id}}, content-type={{header:content-type|fn:default('application/octet-stream')}}, ditto-message-thing-id={{header:ditto-message-thing-id}}, status={{header:status}}}]]}]>
2023-04-26T11:42:08.752509902Z 2023-04-26 13:42:08,752 INFO  [] o.e.d.c.s.m.m.h.MqttClientActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa/$Hb/c1 - Configured for processing messages with the following MessageMapperRegistry: <DefaultMessageMapperRegistry [defaultMapper=WrappingMessageMapper [delegate=DittoMessageMapper [id=default, incomingConditions={}, outgoingConditions={}, contentTypeBlocklist=[application/vnd.eclipse-hono-empty-notification, application/vnd.eclipse-hono-device-provisioning-notification, application/vnd.eclipse-hono-dc-notification+json, application/vnd.eclipse-hono-delivery-failure-notification+json]]], customMappers={javascript=WrappingMessageMapper [delegate=JavaScriptMessageMapperRhino [id=javascript, incomingConditions={}, outgoingConditions={}, contentTypeBlocklist=[], configuration=ImmutableJavaScriptMessageMapperConfiguration [properties=MergedJsonObjectMap[jsonObject={""incomingScript"":""function mapToDittoProtocolMsg(headers, textPayload, bytePayload, contentType) {\r\n    const jsonString = String.fromCharCode.apply(null, new Uint8Array(bytePayload));\r\n    const jsonData = JSON.parse(jsonString); \r\n    const thingId = jsonData.thingId.split(':'); \r\n    const value = { \r\n        temp_sensor: { \r\n            properties: { \r\n                value: jsonData.temp \r\n            } \r\n        },\r\n        altitude: {            \r\n            properties: {                \r\n                value: jsonData.alt            \r\n            }        \r\n        }    \r\n    };    \r\n    return Ditto.buildDittoProtocolMsg(\r\n        thingId[0], // your namespace \r\n        thingId[1], \r\n        'things', // we deal with a thing\r\n        'twin', // we want to update the twin\r\n        'commands', // create a command to update the twin\r\n        'modify', // modify the twin\r\n        '/features', // modify all features at once\r\n        headers, \r\n        value\r\n    );\r\n}"",""outgoingScript"":""""},fallbackObject={}], incomingConditions={}, outgoingConditions={}], incomingMapping=org.eclipse.ditto.connectivity.service.mapping.javascript.ScriptedIncomingMapping@e409f44, outgoingMapping=org.eclipse.ditto.connectivity.service.mapping.javascript.DefaultOutgoingMapping@40fb3f02]]}, fallbackMappers={UpdateTwinWithLiveResponse=WrappingMessageMapper [delegate=UpdateTwinWithLiveResponseMessageMapper [id=UpdateTwinWithLiveResponse, incomingConditions={}, outgoingConditions={}, contentTypeBlocklist=[application/vnd.eclipse-hono-empty-notification, application/vnd.eclipse-hono-device-provisioning-notification, application/vnd.eclipse-hono-dc-notification+json, application/vnd.eclipse-hono-delivery-failure-notification+json], dittoHeadersForMerge=ImmutableDittoHeaders [{response-required=false, if-match=*}]]], Normalized=WrappingMessageMapper [delegate=NormalizedMessageMapper [id=Normalized, incomingConditions={}, outgoingConditions={}, contentTypeBlocklist=[], jsonFieldSelector=null]], Ditto=WrappingMessageMapper [delegate=DittoMessageMapper [id=Ditto, incomingConditions={}, outgoingConditions={}, contentTypeBlocklist=[application/vnd.eclipse-hono-empty-notification, application/vnd.eclipse-hono-device-provisioning-notification, application/vnd.eclipse-hono-dc-notification+json, application/vnd.eclipse-hono-delivery-failure-notification+json]]], CloudEvents=WrappingMessageMapper [delegate=id=CloudEvents, incomingConditions={}, outgoingConditions={}, contentTypeBlocklist=[]], RawMessage=WrappingMessageMapper [delegate=RawMessageMapper [id=RawMessage, incomingConditions={}, outgoingConditions={}, contentTypeBlocklist=[application/vnd.eclipse-hono-empty-notification, application/vnd.eclipse-hono-device-provisioning-notification, application/vnd.eclipse-hono-dc-notification+json, application/vnd.eclipse-hono-delivery-failure-notification+json], dittoMessageMapper=DittoMessageMapper [id=null, incomingConditions=null, outgoingConditions=null, contentTypeBlocklist=null], fallbackOutgoingContentType=ContentType [value=text/plain; charset=utf-8, parsingStrategy=TEXT], incomingMessageHeaders={ditto-message-direction={{header:ditto-message-direction|fn:default('TO')}}, ditto-message-subject={{header:ditto-message-subject}}, ditto-message-feature-id={{header:ditto-message-feature-id}}, content-type={{header:content-type|fn:default('application/octet-stream')}}, ditto-message-thing-id={{header:ditto-message-thing-id}}, status={{header:status}}}]]}]>
2023-04-26T11:42:11.576415015Z 2023-04-26 13:42:11,575 INFO  [] o.e.d.c.s.m.m.h.MqttClientActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa/$Hb/c1 - Connected client <consumer:my-awesome-mqtt-client-id>.
2023-04-26T11:42:11.576679244Z 2023-04-26 13:42:11,576 WARN  [] o.e.d.c.s.m.m.h.MqttClientActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa/$Hb/c1 - received unknown/unsupported message ReportConnectionStatusSuccess[] in state CONNECTING - status: unknown: initialized - sender: Actor[akka://ditto-cluster/deadLetters]
2023-04-26T11:42:11.988722076Z 2023-04-26 13:42:11,988 INFO  [] o.e.d.c.s.m.m.h.MqttClientActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa/$Hb/c1 - Connected client <publisher:my-awesome-mqtt-publisher-client-id>.
2023-04-26T11:42:11.989105646Z 2023-04-26 13:42:11,988 WARN  [] o.e.d.c.s.m.m.h.MqttClientActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa/$Hb/c1 - received unknown/unsupported message ReportConnectionStatusSuccess[] in state CONNECTING - status: unknown: initialized - sender: Actor[akka://ditto-cluster/deadLetters]
2023-04-26T11:42:11.989193882Z 2023-04-26 13:42:11,988 INFO  [] o.e.d.c.s.m.m.h.MqttClientActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa/$Hb/c1 - Starting publisher and consumers.
2023-04-26T11:42:13.579425788Z 2023-04-26 13:42:13,579 INFO  [] o.e.d.c.s.m.m.h.MqttClientActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa/$Hb/c1 - Client actor registered: <mqtt-example-connection-123>
2023-04-26T11:42:17.005536859Z 2023-04-26 13:42:17,004 INFO  [] o.e.d.c.s.m.m.h.MqttClientActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa/$Hb/c1 - Initialization of consumers, publisher and subscriptions successful, going to CONNECTED.
2023-04-26T11:42:17.030616472Z 2023-04-26 13:42:17,030 INFO  [01a7852d-5d65-4b0b-805e-0fa3fbb73dfc] o.e.d.c.s.m.ConnectionIdsRetrievalActor akka://ditto-cluster/user/connectivityRoot/connectionIdsRetrieval - Retrieving all connection IDs ...
2023-04-26T11:42:26.783279360Z 2023-04-26 13:42:26,782 INFO  [0732e096-db37-4182-91a1-f84ec3019c9f] o.e.d.c.s.m.InboundDispatchingSink  - onMapped mappedHeaders ImmutableDittoHeaders [{ditto-reply-target=0, ditto-expected-response-types=[""response"",""error""], ditto-origin=mqtt-example-connection-123, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""nginx:ditto""]}, correlation-id=0732e096-db37-4182-91a1-f84ec3019c9f, mqtt.retain=false, mqtt.topic=ditto-tutorial/my.test:octopus, mqtt.qos=0, ditto-entity-id=thing:my.test:octopus, ditto-inbound-payload-mapper=javascript}]
2023-04-26T11:42:26.784468715Z 2023-04-26 13:42:26,784 INFO  [0732e096-db37-4182-91a1-f84ec3019c9f] o.e.d.e.s.d.EdgeCommandForwarderActor akka://ditto-cluster/user/connectivityRoot/edgeCommandForwarder - Forwarding thing signal with ID <my.test:octopus> and type <things.commands:modifyFeatures> to 'things' shard region
2023-04-26T11:42:26.784560623Z 2023-04-26 13:42:26,784 INFO  [0732e096-db37-4182-91a1-f84ec3019c9f] o.e.d.e.s.a.AcknowledgementAggregatorActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa/$Hb/c1/ackr0-0732e096-db37-4182-91a1-f84ec3019c9f - Starting to wait for all requested acknowledgements <[twin-persisted]> for a maximum duration of <PT1M5S>.
2023-04-26T11:42:29.804689163Z 2023-04-26 13:42:29,803 INFO  [137fe478-789a-4d30-a61d-79a8c746ca55] o.e.d.c.s.m.InboundDispatchingSink  - onMapped mappedHeaders ImmutableDittoHeaders [{ditto-reply-target=0, ditto-expected-response-types=[""response"",""error""], ditto-origin=mqtt-example-connection-123, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""nginx:ditto""]}, correlation-id=137fe478-789a-4d30-a61d-79a8c746ca55, mqtt.retain=false, mqtt.topic=ditto-tutorial/my.test:octopus, mqtt.qos=0, ditto-entity-id=thing:my.test:octopus, ditto-inbound-payload-mapper=javascript}]
2023-04-26T11:42:29.806825936Z 2023-04-26 13:42:29,806 INFO  [137fe478-789a-4d30-a61d-79a8c746ca55] o.e.d.e.s.d.EdgeCommandForwarderActor akka://ditto-cluster/user/connectivityRoot/edgeCommandForwarder - Forwarding thing signal with ID <my.test:octopus> and type <things.commands:modifyFeatures> to 'things' shard region
2023-04-26T11:42:29.806929090Z 2023-04-26 13:42:29,806 INFO  [137fe478-789a-4d30-a61d-79a8c746ca55] o.e.d.e.s.a.AcknowledgementAggregatorActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa/$Hb/c1/ackr1-137fe478-789a-4d30-a61d-79a8c746ca55 - Starting to wait for all requested acknowledgements <[twin-persisted]> for a maximum duration of <PT1M5S>.
2023-04-26T11:42:32.870336088Z 2023-04-26 13:42:32,869 INFO  [89a18a23-512c-4b28-8f99-7ff0b862b9a0] o.e.d.c.s.m.InboundDispatchingSink  - onMapped mappedHeaders ImmutableDittoHeaders [{ditto-reply-target=0, ditto-expected-response-types=[""response"",""error""], ditto-origin=mqtt-example-connection-123, ditto-auth-context={""type"":""pre-authenticated-connection"",""subjects"":[""nginx:ditto""]}, correlation-id=89a18a23-512c-4b28-8f99-7ff0b862b9a0, mqtt.retain=false, mqtt.topic=ditto-tutorial/my.test:octopus, mqtt.qos=0, ditto-entity-id=thing:my.test:octopus, ditto-inbound-payload-mapper=javascript}]
2023-04-26T11:42:32.872209118Z 2023-04-26 13:42:32,871 INFO  [89a18a23-512c-4b28-8f99-7ff0b862b9a0] o.e.d.e.s.d.EdgeCommandForwarderActor akka://ditto-cluster/user/connectivityRoot/edgeCommandForwarder - Forwarding thing signal with ID <my.test:octopus> and type <things.commands:modifyFeatures> to 'things' shard region
2023-04-26T11:42:32.872318681Z 2023-04-26 13:42:32,871 INFO  [89a18a23-512c-4b28-8f99-7ff0b862b9a0] o.e.d.e.s.a.AcknowledgementAggregatorActor akka://ditto-cluster/system/sharding/connection/1/mqtt-example-connection-123/pa/$Hb/c1/ackr2-89a18a23-512c-4b28-8f99-7ff0b862b9a0 - Starting to wait for all requested acknowledgements <[twin-persisted]> for a maximum duration of <PT1M5S>.
2023-04-26T11:42:43.677512942Z 2023-04-26 13:42:43,677 INFO  [] o.e.d.i.u.p.a.SubUpdater akka://ditto-cluster/user/thing-event-aware-sub-supervisor/subUpdater2 - Start to sync cluster state
2023-04-26T11:42:43.677945048Z 2023-04-26 13:42:43,677 INFO  [] o.e.d.i.u.p.a.SubUpdater akka://ditto-cluster/user/thing-event-aware-sub-supervisor/subUpdater2 - DData is in sync with cluster state
```


![dittoScreenShot](https://user-images.githubusercontent.com/19814284/234572405-51527f30-7dea-4f5b-80fe-01d43dbe5ad7.png)
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1627/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1627,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85azGYD,ditto,1523344899,1627,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-04-26T12:35:05Z,2023-04-26T12:35:05Z,"When you use a single connection for `source` and `target`, updates to twins which were caused by the `source` of the connection will not be published to the `target` - as Ditto makes the assumption that the source already knows of the change of device state.
If you need to be informed, you would need to create a second MQTT connection with the target - and the first one would only contain the connection `source`.

*Edit*: However, be very careful if you use the same addresses you already have in your config - as your source consumes from MQTT address `""ditto-tutorial/#""` and you publish to `""address"": ""ditto-tutorial/{{ thing:id }}""`, the source will consume MQTT messages from your target which could cause a loop.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85azGYD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1627,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85azX82,ditto,1523416886,1627,NA,rinelb,19814284,,,NA,2023-04-26T13:23:19Z,2023-04-26T13:23:19Z,"Hi @thjaeckle  thanks for quick reply and explanation, much appreciated
opening  a second connection as a target worked for me 

the scenario we need is,  devices are sending data to ditto via MQTT with topic ""ditto-tutorial/{{ thing:id }}"" using ""mqtt Broker1"". When ditto recieves  data from the device, it send out the data to a seperate MQTT broker ""MQTT Broker2"" with a topic for example ""ditto/data/live/{{ thing:id }}"" and there is a master device that subscribes from MQTT Broker2 with topic ""ditto/data/+""

For now we just want to get it working on one broker.

if anyone interested this is the second connection templet that worked for me
```
{
  ""id"": ""mqtt-example-connection-321"",
  ""name"": null,
  ""connectionType"": ""mqtt"",
  ""connectionStatus"": ""open"",
  ""uri"": ""tcp://test.mosquitto.org:1883"",
  ""sources"": [],
  ""targets"": [
    {
      ""address"": ""ditto/data/{{ thing:id }}"",
      ""topics"": [
        ""_/_/things/twin/events"",
        ""_/_/things/live/messages""
      ],
      ""qos"": 0,
      ""authorizationContext"": [
        ""nginx:ditto""
      ],
      ""headerMapping"": {}
    }
  ],
  ""clientCount"": 1,
  ""failoverEnabled"": true,
  ""validateCertificates"": true,
  ""processorPoolSize"": 1,
  ""tags"": []
}
```



","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85azX82/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1631,https://api.github.com/repos/eclipse-ditto/ditto/issues/1631,ditto,1692211777,1631,put-metadata does not work as expected since 3.x,demetz,28460533,,,CLOSED,2023-05-02T11:00:19Z,2023-10-17T07:43:40Z,"We recently upgraded from 2.x to the latest version. 

I am no longer able to set metadata for a single property:

```
url = 'https://xxx/api/2/things/[thingid]/features/myfeature/properties/myproperty/temperature'

metadata = [
    {
        ""key"":""/unit"",
        ""value"": ""°C""
    }
]

r = requests.put(url, headers={""Content-Type"":""application/json"", ""put-metadata"":json.dumps(metadata)}, auth=(ditto_user, ditto_pass),json=64.5)
```

Expected behavior: value is written and metadata is available `/features/myfeature/properties/myproperty/temperature/unit`

Actual behavior: only value is written","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1631/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1631,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85bT3jb,ditto,1531934939,1631,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-05-02T18:15:59Z,2023-05-02T18:15:59Z,"Hi @demetz
Thanks for reporting this issue.

There were some enhancements to metadata in Ditto 3.0, I assume some behavior may have changed.

Could you please try using no trailing slash in the ""key"", so:
```
{
        ""key"":""unit"",
        ""value"": ""°C""
    }
```

I could imagine that this somehow changed if  Iook at the docs. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85bT3jb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1631,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85bUwnC,ditto,1532168642,1631,NA,demetz,28460533,,,NA,2023-05-02T21:21:19Z,2023-05-02T21:21:19Z,"unfortunately, same result: ditto returns a `204` and the actual value is written, however no metadata is created.

specifying a nested key (e.g. `/test/unit`) for _metadata works as expected.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85bUwnC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1631,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85bWC3Z,ditto,1532505561,1631,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-05-03T06:29:11Z,2023-05-03T06:29:11Z,"Could reproduce via sandbox:
```shell
curl --location --request PUT 'https://ditto.eclipseprojects.io/api/2/things/org.eclipse.ditto:lamp01/features/LampFeature/properties/powerConsumption' \
--header 'Authorization: Basic ZGl0dG86ZGl0dG8=' \
--header 'put-metadata: [{""key"":""unit"",""value"": ""Watts""}]' \
--header 'Content-Type: application/json' \
--data '23.23'
```

Retrieving the metadata:
```shell
curl --location --request GET 'https://ditto.eclipseprojects.io/api/2/things/org.eclipse.ditto:lamp01?fields=thingId%2Cfeatures%2C_metadata' \
--header 'Authorization: Basic ZGl0dG86ZGl0dG8='
```

Did not apply the metadata as expected (`""powerConsumption""` is an empty object instead of having the `""unit""` key):
```json
{
    ""thingId"": ""org.eclipse.ditto:lamp01"",
    ""features"": {
        ""LampFeature"": {
            ""properties"": {
                ""powerConsumption"": 23.23
            }
        }
    },
    ""_metadata"": {
        ""features"": {
            ""LampFeature"": {
                ""properties"": {
                    ""powerConsumption"": {}
                }
            }
        }
    }
}
```

As @demetz mentioned, using a nested key works:
```shell
curl --location --request PUT 'https://ditto.eclipseprojects.io/api/2/things/org.eclipse.ditto:lamp01/features/LampFeature/properties/powerConsumption' \
--header 'Authorization: Basic ZGl0dG86ZGl0dG8=' \
--header 'put-metadata: [{""key"":""test/unit"",""value"": ""Watts""}]' \
--header 'Content-Type: application/json' \
--data '23.23'
```

Result:
```json
{
    ""thingId"": ""org.eclipse.ditto:lamp01"",
    ""features"": {
        ""LampFeature"": {
            ""properties"": {
                ""powerConsumption"": 23.23
            }
        }
    },
    ""_metadata"": {
        ""features"": {
            ""LampFeature"": {
                ""properties"": {
                    ""powerConsumption"": {
                        ""test"": {
                            ""unit"": ""Watts""
                        }
                    }
                }
            }
        }
    }
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85bWC3Z/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1631,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85bXXHw,ditto,1532850672,1631,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-05-03T11:14:05Z,2023-05-03T11:14:05Z,"Any help on fixing this bug would be appreciated, I currently don't have the resources to work on a fix. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85bXXHw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1631,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85pHKyC,ditto,1763486850,1631,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-10-15T19:46:05Z,2023-10-15T19:46:05Z,@demetz will be fixed in upcoming 3.4.0 release,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85pHKyC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1634,https://api.github.com/repos/eclipse-ditto/ditto/issues/1634,ditto,1706122524,1634,Connect ditto with hono,pavithvishnu,36157391,pavith vishnu,,CLOSED,2023-05-11T16:03:04Z,2023-06-08T20:42:31Z,"I have deployed hono is AKS, and ditto is deployed as a docker container in vm. I need to create a connection between my hono and ditto.
Can anyone provide me the detailed steps which need to be followed?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1634/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1634,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85cC8QR,ditto,1544274961,1634,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-05-11T16:08:22Z,2023-05-11T16:08:22Z,"The Eclipse IoT Packages project provides a connection template showing a possible connection configuration to connect to Hono via Kafka:
https://github.com/eclipse/packages/blob/master/packages/cloud2edge/post-install/hono-kafka-connection.json

This should be a good starting point.
Apart from that there is plenty of documentation to explore. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85cC8QR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1634,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85cL3zV,ditto,1546616021,1634,NA,pavithvishnu,36157391,pavith vishnu,,NA,2023-05-13T10:23:45Z,2023-05-13T10:23:45Z,"hi @thjaeckle,
thanks for pointing me to the document, i have followed the document and deployed the c2e package on the AKS, and try out the examples mentioned in that, but i was unable to create a new connection between hono and ditto, i have try both amqp and kafka based connection setting, none of them works.
problem:
1) AMQP as mentioned in doc (dispatch-router container is not created i have follow the this link to install c2e  [https://www.eclipse.org/packages/packages/cloud2edge/installation/](url))
curl -i -X POST -u devops:${DITTO_DEVOPS_PWD} -H 'Content-Type: application/json' --data '{
  ""targetActorSelection"": ""/system/sharding/connection"",
  ""headers"": {
    ""aggregate"": false
  },
  ""piggybackCommand"": {
    ""type"": ""connectivity.commands:createConnection"",
    ""connection"": {
      ""id"": ""hono-connection-for-'""${HONO_TENANT}""'"",
      ""connectionType"": ""amqp-10"",
      ""connectionStatus"": ""open"",
      ""uri"": ""amqp://consumer%40HONO:verysecret@'""${RELEASE}""'-dispatch-router-ext:15672"",
      ""failoverEnabled"": true,
      ""sources"": [
        {
          ""addresses"": [
            ""telemetry/'""${HONO_TENANT}""'"",
            ""event/'""${HONO_TENANT}""'""
          ],
          ""authorizationContext"": [
            ""pre-authenticated:hono-connection""
          ],
          ""enforcement"": {
            ""input"": ""{{ header:device_id }}"",
            ""filters"": [
              ""{{ entity:id }}""
            ]
          },
          ""headerMapping"": {
            ""hono-device-id"": ""{{ header:device_id }}"",
            ""content-type"": ""{{ header:content-type }}""
          },
          ""replyTarget"": {
            ""enabled"": true,
            ""address"": ""{{ header:reply-to }}"",
            ""headerMapping"": {
              ""to"": ""command/'""${HONO_TENANT}""'/{{ header:hono-device-id }}"",
              ""subject"": ""{{ header:subject | fn:default(topic:action-subject) | fn:default(topic:criterion) }}-response"",
              ""correlation-id"": ""{{ header:correlation-id }}"",
              ""content-type"": ""{{ header:content-type | fn:default('""'""'application/vnd.eclipse.ditto+json'""'""') }}""
            },
            ""expectedResponseTypes"": [
              ""response"",
              ""error""
            ]
          },
          ""acknowledgementRequests"": {
            ""includes"": [],
            ""filter"": ""fn:filter(header:qos,'""'""'ne'""'""','""'""'0'""'""')""
          }
        },
        {
          ""addresses"": [
            ""command_response/'""${HONO_TENANT}""'/replies""
          ],
          ""authorizationContext"": [
            ""pre-authenticated:hono-connection""
          ],
          ""headerMapping"": {
            ""content-type"": ""{{ header:content-type }}"",
            ""correlation-id"": ""{{ header:correlation-id }}"",
            ""status"": ""{{ header:status }}""
          },
          ""replyTarget"": {
            ""enabled"": false,
            ""expectedResponseTypes"": [
              ""response"",
              ""error""
            ]
          }
        }
      ],
      ""targets"": [
        {
          ""address"": ""command/'""${HONO_TENANT}""'"",
          ""authorizationContext"": [
            ""pre-authenticated:hono-connection""
          ],
          ""topics"": [
            ""_/_/things/live/commands"",
            ""_/_/things/live/messages""
          ],
          ""headerMapping"": {
            ""to"": ""command/'""${HONO_TENANT}""'/{{ thing:id }}"",
            ""subject"": ""{{ header:subject | fn:default(topic:action-subject) }}"",
            ""content-type"": ""{{ header:content-type | fn:default('""'""'application/vnd.eclipse.ditto+json'""'""') }}"",
            ""correlation-id"": ""{{ header:correlation-id }}"",
            ""reply-to"": ""{{ fn:default('""'""'command_response/'""${HONO_TENANT}""'/replies'""'""') | fn:filter(header:response-required,'""'""'ne'""'""','""'""'false'""'""') }}""
          }
        },
        {
          ""address"": ""command/'""${HONO_TENANT}""'"",
          ""authorizationContext"": [
            ""pre-authenticated:hono-connection""
          ],
          ""topics"": [
            ""_/_/things/twin/events"",
            ""_/_/things/live/events""
          ],
          ""headerMapping"": {
            ""to"": ""command/'""${HONO_TENANT}""'/{{ thing:id }}"",
            ""subject"": ""{{ header:subject | fn:default(topic:action-subject) }}"",
            ""content-type"": ""{{ header:content-type | fn:default('""'""'application/vnd.eclipse.ditto+json'""'""') }}"",
            ""correlation-id"": ""{{ header:correlation-id }}""
          }
        }
      ]
    }
  }
}' http://${DITTO_API_IP}:${DITTO_API_PORT_HTTP}/devops/piggyback/connectivity

2) Kafka based connection:
i have trying deploying the ditto as docker container, also as helm package, also with c2e package. in all the cases, whenever i try to create a kafka connection using connectivity api and piggyback command. connectivity containers starts to crashs in loop.  there is no recovery for it.

can you please help me out with it.?
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85cL3zV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1634,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85cMA_V,ditto,1546653653,1634,NA,pavithvishnu,36157391,pavith vishnu,,NA,2023-05-13T13:31:10Z,2023-05-13T13:31:10Z,"There is an update, I have modified the yaml file. Now I have able to create a connection between hono and ditto using amqp. 
but if I send the data from the device to hono it is not reflecting in ditto.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85cMA_V/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1634,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85cORJk,ditto,1547244132,1634,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-05-15T06:08:57Z,2023-05-15T06:08:57Z,Please provide the logs of Ditto's `connectivity` container. This should give an insight in the potential configuration errors. ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85cORJk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1636,https://api.github.com/repos/eclipse-ditto/ditto/issues/1636,ditto,1711381674,1636,Geospatial Search support,rpahli,14889169,Rico Pahlisch,,CLOSED,2023-05-16T07:06:01Z,2023-05-22T19:34:12Z,"I know the there is no real semantic for the data stored in ditto. My question is, is it possible to seach for geo locations or for things within a range or is there a plan to support it?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1636/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1636,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85cWWI4,ditto,1549361720,1636,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-05-16T09:58:39Z,2023-05-16T09:58:39Z,"No, that is neither currently supported nor planned to support.

It could maybe be added to Ditto, using MongoDB's [Geospatial Queries](https://www.mongodb.com/docs/manual/geospatial-queries/) - but this needs concept and development of that feature.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85cWWI4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1637,https://api.github.com/repos/eclipse-ditto/ditto/issues/1637,ditto,1712480983,1637,Let Policies declare to be applicable only for certain namespaces,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2023-05-16T17:58:20Z,2023-05-16T17:58:37Z,"Define that a policy entry is only applicable for entities within a certain or several certain namespaces. 

This feature is especially useful when used in combination with policy imports and eg defining in a ""root policy"" that the policy shall only be applied for a certain namespace. 

This should also be applicable to the search index.

Example use case:
- assume a root policy is defined which shall be imported by all other policies definining an entry which shall be implicitly applied
- however, the entry should only be applied for special groups of things, e.g. for the group of all devices, but not the group of all rooms or buildings (also modeled as things)
- in such a case, defining special namespaces for the different groups would make sense and with the added feature in the policy it could be enforced

When using the namespace as kind of tenant name for a multi tenant system, such a `namespaces` scoping would even improve tenant isolation. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1637/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1638,https://api.github.com/repos/eclipse-ditto/ditto/issues/1638,ditto,1712488991,1638,Configure certain policies to be always imported by all policies of a namespace,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2023-05-16T18:02:56Z,2023-05-16T18:02:56Z,"Ditto shall support configuring that per namespace a declared set of policy IDs are always imported, acting as kind of ""namespace/tenant root policy"".

It is sufficient to configure that statically, requiring a Ditto service restart for changes to be applied.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1638/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1639,https://api.github.com/repos/eclipse-ditto/ditto/issues/1639,ditto,1713199599,1639,Apply dynamic conditions on thing state when enforcing policies,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2023-05-17T06:16:27Z,2023-12-17T17:25:22Z,"There are use cases where it would be useful to apply a policy based on the current state of a thing.

An example:  
Only grant certain permissions based on whether a thing is currently ""claimed"" by a user. Or only after the device was manufactured but has not yet been connected for the first time. 

Or think about use cases where devices are only rented. A condition shall enable the one who manages the rental devices to have special permissions when the device is currently not rented by a user. 
That could be reflected with an attribute in thing level, used in a dynamic policy condition. 

These kind of dynamic conditions can be defined with RQL and are evaluated when accessing eg the thing. 
The search Index is not affected by dynamic policies. 

Example syntax of a policy entry:
```json
{
  ""subjects"" :..., 
  ""resources"": {
    ""thing:/"" : {
      ""grant"": [""READ""], 
      ""revoke"": [], 
      ""condition"": ""and(eq(attributes/vacant,true),eq(attributes/buildingId,'foo'))"" 
    } 
  } 
} 
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1639/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1640,https://api.github.com/repos/eclipse-ditto/ditto/issues/1640,ditto,1713302561,1640,{{ source:address }} connection placeholder missing in kafka connection,neottil,84083982,Luca Neotti,NEOT.LUKA.89@GMAIL.COM,OPEN,2023-05-17T07:31:06Z,2023-05-17T07:54:15Z,"### Discussed in https://github.com/eclipse-ditto/ditto/discussions/1633

<div type='discussions-op-text'>

<sup>Originally posted by **neottil** May 10, 2023</sup>
For the documentation is possible to configure enforcement input using placeholder {{ source:address }}. https://www.eclipse.org/ditto/3.2/basic-connections.html#source-enforcement

I try to configure Kafka connection like this:
{
    ""id"": ""glin_dl00001_prod-kafka-connection"",
    ""name"": null,
    ""connectionType"": ""kafka"",
    ""connectionStatus"": ""open"",
    ""uri"": ""tcp://kafka-service:9092"",
    ""sources"": [
        {
            ""enforcement"": {
                ""input"": ""{{ source:address }}"",
                ""filters"": ""{{ thing:namespace }}.kafakinbound""
            },
            ""addresses"": [
                ""glin_dl00001_dev.kafkainbound"",
                ""glin_dl00001_prod.kafkainbound""
            ],
            ""consumerCount"": 1,
            ""qos"": 0,
            ""authorizationContext"": [
                ""device:glin_dl00001_prod""
            ],
            ""headerMapping"": {
                ""content-type"": ""{{header:content-type}}"",
                ""correlation-id"": ""{{header:correlation-id}}""
            },
            ""replyTarget"": {
                ""address"": ""{{thing:namespace}}.command.inbound/{{thing:namespace}}/{{thing:name}}"",
                ""headerMapping"": {
                    ""content-type"": ""{{header:content-type}}"",
                    ""correlation-id"": ""{{header:correlation-id}}""
                },
                ""expectedResponseTypes"": [
                    ""response"",
                    ""error""
                ],
                ""enabled"": true
            }
        }
    ],
    ""targets"": [
        {
            ""address"": ""{{thing:namespace}}.command.inbound/{{thing:namespace}}/{{thing:name}}"",
            ""topics"": [
                ""_/_/things/twin/events"",
                ""_/_/things/live/messages""
            ],
            ""qos"": 0,
            ""authorizationContext"": [
                ""nginx:user-pipeline""
            ],
            ""headerMapping"": {}
        }
    ],
    ""clientCount"": 1,
    ""failoverEnabled"": true,
    ""validateCertificates"": true,
    ""processorPoolSize"": 1,
    ""specificConfig"": {
        ""bootstrapServers"": ""kafka-service:9092""
    },
    ""tags"": []
}

The response of connection API is:
{
    ""status"": 400,
    ""error"": ""connectivity:connection.configuration.invalid"",
    ""message"": ""The placeholder 'source:address' could not be resolved."",
    ""description"": ""Some placeholders could not be resolved. Check the spelling of the placeholder and make sure all required headers are set.""
}

This is not supported for Kafka connections?</div>","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1640/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1640,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ccUQl,ditto,1550926885,1640,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-05-17T07:54:10Z,2023-05-17T07:54:10Z,"As discussed in #1633 : 
Currently this is only available for MQTT connections - but it does make sense to also provide it for other connection types - and it even is documented in that way.  
So I would agree declaring it as a ""bug"".

Contributions fixing this bug are welcome.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ccUQl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1642,https://api.github.com/repos/eclipse-ditto/ditto/issues/1642,ditto,1726324677,1642,Allow multiple values for a single HTTP query parameter to be passed as several `key=valX` params,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2023-05-25T18:50:13Z,2023-05-29T19:05:43Z,"Ditto currently supports e.g. providing several `fields` to select when doing a HTTP `GET` by defining the several fields as comma separated list:
`GET /thing/my:thing-123?fields=thingId,policyId,attributes`

An alternative to this syntax is the following one:
`GET /thing/my:thing-123?fields=thingId&fields=policyId&fields=attributes`

Some frameworks / HTTP clients even use this second syntax as the default of how to send query parameters.

So Ditto should be tolerant and also support this alternative syntax at its HTTP API for query params.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1642/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1642,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85dbSuA,ditto,1567435648,1642,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-05-29T19:05:43Z,2023-05-29T19:05:43Z,Duplicate of #1644,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85dbSuA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1643,https://api.github.com/repos/eclipse-ditto/ditto/issues/1643,ditto,1727717115,1643,"High CPU load for ""things"" cluster leader role",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2023-05-26T14:14:19Z,2023-06-20T18:48:24Z,"During a loadtest where we created and deleted and re-created things with the same `thingId` over and over again we noticed that the Ditto `""things""` service somehow stop processing commands correctly.
It seems that maybe the ""policy enforcement"" for those things gets stuck.

I do not yet have a reproducer - just wanted to create the bug-ticket so that we can investigate and do not forget.

It seems related with a very high number of tasks (> 70k) done with the ""akka.actor.default-dispatcher"" for things instances. This number at a certain point for a single instance does not go down and probably not any other work on the ""default-dispatcher"" can be done as a result.
Which will de-facto cause the service to be ""dead in the water"".

It also seems like the affected node is the ""role cluster leader"" - got this message after deleting a ""dead in the water"" pod:
```
Singleton terminated, hand-over done [akka://ditto-cluster@10.20.67.2:2551 -> Some(akka://ditto-cluster@10.20.76.58:2551)]
```

Seems to be confirmed after the next leader also gets the same problems:
```
Cluster Node [akka://ditto-cluster@10.20.67.244:2551] - is the new leader among reachable nodes (more leaders may exist)
```

Somehow the cluster leader seems to require a lot of CPU resources, negatively impacting roundtrip times and causing other timeouts to ""fail"".  
The question if this can have to do with deleting and re-creating the same things is not yet answered - it was just an assumption.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1643/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1643,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85fU-1e,ditto,1599335774,1643,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-06-20T18:48:24Z,2023-06-20T18:48:24Z,Cannot reproduce,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85fU-1e/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1644,https://api.github.com/repos/eclipse-ditto/ditto/issues/1644,ditto,1730456573,1644,Thing API does not support alternative way of specifying list query parameters,enenuki,752310,Nenad Ukic,nenad.ukic@gmail.com,CLOSED,2023-05-29T09:56:24Z,2023-06-22T12:48:31Z,"Ditto thing API supports querying for certain parts of thing, by specifying URL like:
`<BASE_URL>/api/2/things/<thingid>?fields=attributes/manufacturer,attributes/type,attributes/productkey`
 
but if we want to use alternative format:
`<BASE_URL>/api/2/things/<thingid>?fields=attributes/manufacturer&fields=attributes/type&fields=attributes/productkey`


it only returns first attribute (in this case attributes/manufacturer).

While this may seem like minor issue, some libraries (jawax.ws.rs.QueryParam in JAX-RS API) use only the alternative format to serialize their requests, which makes it a bit harder to bypass.

![Screenshot from 2023-05-24 16-45-05](https://github.com/eclipse-ditto/ditto/assets/752310/aeff0e6e-a370-41c0-a111-84ce0fabae30)
![Screenshot from 2023-05-24 16-45-18](https://github.com/eclipse-ditto/ditto/assets/752310/9d3e4ad5-97fb-44a7-81c5-22f90842f5dd)

Ditto version: 3.2.0","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1644/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1644,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85dhMZo,ditto,1568982632,1644,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-05-30T19:39:07Z,2023-05-30T19:39:07Z,"Thanks for reporting, @enenuki
That definitely would be a good and simple enhancement for Ditto.
Will work on that.. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85dhMZo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1645,https://api.github.com/repos/eclipse-ditto/ditto/issues/1645,ditto,1730911679,1645,Tracing misbehaviour when service under load,vvasilevbosch,112558685,Vasil Vasilev,,CLOSED,2023-05-29T15:01:31Z,2023-06-05T10:19:52Z,"Incomplete tracing is observed, while load testing the service with modify thing commands, via kafka connection. What can be seen on the trace, is that there are spans with invalid parent span IDs and also a lot of missing spans that should be there. I attach json export of two traces(complete and incomplete) as well as screenshot from jaeger ui.
![jaeger-invalid-parent-span-ids](https://github.com/eclipse-ditto/ditto/assets/112558685/5b247c75-efbc-4463-96c5-360e33d410c7)
[traces.zip](https://github.com/eclipse-ditto/ditto/files/11592669/traces.zip)
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1645/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1645,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85dhL9B,ditto,1568980801,1645,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-05-30T19:38:07Z,2023-05-30T19:38:07Z,"@vvasilevbosch are you sampling 100% of all requests?
And how much load are we talking about?

Because I would assume that some dropping of traced requests is done before the tracing would slow down the functionality of the service or would overwhelm the OTEL endpoint.
The used logback logstash appender also does that. Under heavy load, not all log statements might be available.

Maybe this is even configurable in Kamon, the library Ditto uses for tracing.
Did you check? ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85dhL9B/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1645,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85djXOH,ditto,1569551239,1645,NA,vvasilevbosch,112558685,Vasil Vasilev,,NA,2023-05-31T06:06:36Z,2023-05-31T06:06:36Z,"@thjaeckle I have the following setup: 1_000_000 things, 8 connectivity,policies,things, 1 things-search and 1 gateway, 1 kafka connection with 8 clients, to which I send 5000 modifyThing messages per second. I will further check the Kamon configuration. Thanks!","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85djXOH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1645,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85djeS8,ditto,1569580220,1645,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-05-31T06:38:35Z,2023-05-31T06:38:35Z,"Ok, with this load I would expect that you would have to scale your Jaeger backend.
Every command will cause at least 5 spans of a trace, reported via at least 3 services in Ditto.

More realistic IMO would be to configure that only eg 1% of the requests are sampled.. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85djeS8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1645,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85d9985,ditto,1576525625,1645,NA,vvasilevbosch,112558685,Vasil Vasilev,,NA,2023-06-05T10:19:51Z,2023-06-05T10:19:51Z,"I tried increasing the buffer size of the tracing reporter, but it seems there is a bug in the Kamon library, I have raised an issue in their repo: https://github.com/kamon-io/Kamon/issues/1281

Closing this issue","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85d9985/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1646,https://api.github.com/repos/eclipse-ditto/ditto/issues/1646,ditto,1734587042,1646,ditto with raspberry grove-ctrl - webapp setup info needed,mdgramma,13016224,,,CLOSED,2023-05-31T16:26:55Z,2023-06-20T18:47:56Z,"Dear Thomas,

We are trying to experiment by developing a simple performance-related digital twin for a biosensor using eclipse ditto and ditto-examples/grove-ctl. 

Therefore, we started by setting up a platform with a PC running Linux and connect this to a Raspberry equipped with grove light sensor (via GrovePi shield), following the steps in: https://github.com/eclipse-ditto/ditto-examples/tree/master/grove-ctrl

Everything goes well with adding the raspberry sensor ""thing"" to ditto on the PC.
Also, we can also perform PUT/GET (http) operations on the thing:
a) curl -u ditto:ditto -X PUT   -H 'Content-Type: application/json' -d '99'
'http://192.168.0.101:8080/api/2/things/org.eclipse.ditto.example:pi/features/IlluminanceSensor_0/properties/sensorValue'
to directly change property sensor values, and
b) curl -u ditto:ditto -X GET 'http://192.168.0.101:8080/api/2/things/org.eclipse.ditto.example:pi/features/IlluminanceSensor_0/properties/sensorValue' to view the new data.

However, we fail to connect from Raspberry to the thing via the websocket interface (by running: python 3 ditto_grove_demo.py, which uses ws/1 interface), with the following error recorded from ditto:
Error 403 -- ... the requester had insufficient permissions to modify it (WRITE is required)

Perhaps, we don't quite understand how to set up the WebUI connected to Ditto. Although, we compiled the webapp fine (using npm install, updating the http download sites),when we open webapp/index.html from ditto-master/deployment/docker directory, there are no updates at all (automatically or manually). 

Unfortunately, the instructions are missing in https://github.com/eclipse-ditto/ditto-examples/tree/master/grove-ctrl
This url states (few lines above the Section ""Setting up the Raspberry Pi""): 
""After creating our Thing, we can commence by opening the WebUI for the first time. @Todo: Philipp"" (maybe this refers to Philipp Michalski)

Can you please help? 

Thank you in advance.

Miltos","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1646/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1646,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85dniqt,ditto,1570646701,1646,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-05-31T17:40:16Z,2023-05-31T17:40:16Z,"Sorry, this 6 year old example (as all other examples as well) is not actively maintained.
Updates to either the documentation or the example are highly welcome, but there are no capacities to give support on it. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85dniqt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1646,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85dnqwT,ditto,1570679827,1646,NA,mdgramma,13016224,,,NA,2023-05-31T18:04:09Z,2023-05-31T18:04:09Z,"
Dear Thomas,

Thank you for the quick response.

I understand the situtation

Since http interface works fine, we plan to develop over it and skip 
websockets for the time being.

Perhaps, once done, we can help update this part, which may be 
interesting for those working on edge computing or below.

By the way, do you think that ditto is able to operate in an industrial 
environment with lots of sensors?
Do you know of any study related to it?

We appreciate your help.

Best regards,

Miltos

On 2023-05-31 20:40, Thomas Jaeckle wrote:
> Sorry, this 6 year old example (as all other examples as well) is not
> actively maintained.
> Updates to either the documentation or the example are highly welcome,
> but there are no capacities to give support on it.
> 
> --
> Reply to this email directly, view it on GitHub [1], or unsubscribe
> [2].
> You are receiving this because you authored the thread.Message ID:
> ***@***.***> [ {
> ***@***.***"": ""http://schema.org"", ***@***.***"": ""EmailMessage"",
> ""potentialAction"": { ***@***.***"": ""ViewAction"", ""target"":
> ""https://github.com/eclipse-ditto/ditto/issues/1646#issuecomment-1570646701"",
> ""url"":
> ""https://github.com/eclipse-ditto/ditto/issues/1646#issuecomment-1570646701"",
> ""name"": ""View Issue"" }, ""description"": ""View this Issue on GitHub"",
> ""publisher"": { ***@***.***"": ""Organization"", ""name"": ""GitHub"", ""url"":
> ""https://github.com"" } } ]
> 
> Links:
> ------
> [1] 
> https://github.com/eclipse-ditto/ditto/issues/1646#issuecomment-1570646701
> [2] 
> https://github.com/notifications/unsubscribe-auth/ADDJZIBCWVHDU76OC7UYSWTXI57AVANCNFSM6AAAAAAYVW257I
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85dnqwT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1646,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85dnvbj,ditto,1570698979,1646,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-05-31T18:17:19Z,2023-05-31T18:17:19Z,"There currently is a load test in preparation with the following figures: https://github.com/eclipse-ditto/ditto/issues/1645#issuecomment-1569551239

Maybe this will give you a better feeling for a potential use of Ditto for many sensors.

I also know of Aloxy and @BobClaerhout using Ditto for an industrial use case, but I don't know how many sensors are connected. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85dnvbj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1646,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85dqwPT,ditto,1571488723,1646,NA,BobClaerhout,3315222,Bob Claerhout,,NA,2023-06-01T07:14:53Z,2023-06-01T07:14:53Z,"We are indeed using it in an industrial context. However, we are not anywhere near reaching 5000 modifyThing msg/s at the moment. We are currently looking into how we can improve this but this doesn't have our primary focus since we are currently managing the operational required load. This is WIP and we need to improve over time.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85dqwPT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1646,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85d4zA1,ditto,1575170101,1646,NA,elewah,4564330,elewah,abdelrahman.elewah@gmail.com,NA,2023-06-03T20:09:10Z,2023-06-03T20:09:10Z,"@mdgramma 
in ditto_grove_demo.py at start_websocket() function
change the API version as the current version is 2. I able to connect 
`ws_address = ""ws://"" + DITTO_IP + "":"" + DITTO_PORT + ""/ws/2""`
another thing is to change the user and password to be ditto
I tried personally to add another user, as mentioned in the documentation that changed, but I couldn't
`# User and password needed for providing new sensor values.`
`THING_USER = ""ditto"" `
`THING_PASSWORD = ""ditto""` 

Are you able to add the Raspberry user?

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85d4zA1/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1647,https://api.github.com/repos/eclipse-ditto/ditto/issues/1647,ditto,1741199870,1647,"Resolve `""$ref""` references within WoT TMs in order to reuse defined `""definitions""` in same TM",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2023-06-05T07:59:31Z,2023-07-20T16:46:34Z,"Currently, the Ditto [WoT (Web of Things)](https://www.eclipse.org/ditto/basic-wot-integration.html) integration does not support resolving a referenced type from the `""definitions""` of the same TM using:
```json
{
  ""$ref"": ""#/definitions/<some-definition>""
}
```

Example:
```json
{
  ""@context"": [
    ""https://www.w3.org/2022/wot/td/v1.1""
  ],
  ""@type"": ""tm:ThingModel"",
  ""title"": ""Schedule"",
  ""version"": {
    ""model"": ""0.0.1""
  },
  ""links"": [
  ],
  ""tm:optional"": [],
  ""properties"": {
    ""days"": {
      ""title"": ""Days"",
      ""description"": ""The schedule configuration for days of the week being the JSON key"",
      ""type"": ""object"",
      ""properties"": {
        ""MONDAY"": {
          ""title"": ""Heating Schedule for Mondays"",
          ""$ref"": ""#/definitions/transitions""
        },
        ""TUESDAY"": {
          ""title"": ""Schedule for Tuesdays"",
          ""$ref"": ""#/definitions/transitions""
        },
        ""WEDNESDAY"": {
          ""title"": ""Schedule for Wednesdays"",
          ""$ref"": ""#/definitions/transitions""
        },
        ""THURSDAY"": {
          ""title"": ""Schedule for Thursdays"",
          ""$ref"": ""#/definitions/transitions""
        },
        ""FRIDAY"": {
          ""title"": ""Schedule for Fridays"",
          ""$ref"": ""#/definitions/transitions""
        },
        ""SATURDAY"": {
          ""title"": ""Schedule for Saturdays"",
          ""$ref"": ""#/definitions/transitions""
        },
        ""SUNDAY"": {
          ""title"": ""Schedule for Sundays"",
          ""$ref"": ""#/definitions/transitions""
        }
      },
      ""required"": [
        ""MONDAY"",
        ""TUESDAY"",
        ""WEDNESDAY"",
        ""THURSDAY"",
        ""FRIDAY"",
        ""SATURDAY"",
        ""SUNDAY""
      ]
    }
  },
  ""definitions"": {
    ""transitions"": {
      ""type"": ""array"",
      ""items"": {
        ""type"": ""object"",
        ""properties"": {
          ""time"": {
            ""type"": ""string""
          },
          ""value"": {
            ""type"": ""number""
          }
        }
      }
    }
  }
}
```

It would be great if it would support this, as this is good practice for structuring JsonSchemas.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1647/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1647,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85gE_VR,ditto,1611920721,1647,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-06-28T18:55:56Z,2023-06-28T18:55:56Z,"Note: the WoT standard does currently **not** support this.
Unsure if we should then.. Probably not. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85gE_VR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1648,https://api.github.com/repos/eclipse-ditto/ditto/issues/1648,ditto,1741220133,1648,Support local/relative `tm:ref` references in WoT TM support,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2023-06-05T08:08:59Z,2024-01-30T09:43:00Z,"The [WoT specification](https://www.w3.org/TR/wot-thing-description11/#thing-model-extension-import) defines that when using `""tm:ref""`, it is also possible to reference local properties/actions/events, e.g.:

From the [WoT spec example](https://www.w3.org/TR/wot-thing-description11/#td-model-example-relative-tmRef):
```json
{
    ""@context"": ""https://www.w3.org/2022/wot/td/v1.1"", 
    ""@type"": ""tm:ThingModel"",
    ""title"": ""Multi Sensor"",
    ""properties"": {
        ""genericTemperature"": {
            ""type"": ""number"",
            ""unit"": ""C""
        },
        ""innerTemperature"": {
            ""tm:ref"": ""#/properties/genericTemperature"",
            ""title"": ""The inner temperature"",
            ""minimum"": 10
        },
        ""outerTemperature"": {
            ""tm:ref"": ""#/properties/genericTemperature"",
            ""title"": ""The outer temperature"",
            ""description"": ""The outer temperature is measured in Kelvin"",
            ""unit"": ""K""
        }
    },
    ""tm:optional"": [
        ""/properties/genericTemperature""
    ]
}
```

Ditto currently only supports referencing external references, expecting that `""tm:ref""` always starts with an URI.

Add support for this to be more standard compliant.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1648/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1649,https://api.github.com/repos/eclipse-ditto/ditto/issues/1649,ditto,1747743565,1649,"[Kubernetes,Gateway]: AskTimeoutException: Ask timed out on [Actor[...]] after [25000 ms]. Message of type [akka.cluster.ddata.Replicator$Update]",Altair-Bueno,67512202,Altair Bueno,,CLOSED,2023-06-08T11:56:57Z,2023-06-21T09:42:12Z,"### Description

Due to a node crash on my Kubernetes cluster, some pods from Ditto were restarted. These included the NGINX proxy, Ditto Gateway and Ditto Policies. However, NGINX refused to start (init state).

Gateway shows multiple entries with the following contents:

```text
2023-06-08 11:39:08,649 ERROR [] o.e.d.i.u.p.a.SubUpdater akka://ditto-cluster/user/policy-announcement-aware-sub-supervisor/subUpdater2 - Failure updating Ditto pub/sub subscription - trying again next clock tick
java.util.concurrent.CompletionException: akka.pattern.AskTimeoutException: Ask timed out on [Actor[akka://ditto-cluster/user/policy-announcement-aware-replicator#1986903194]] after [25000 ms]. Message of type [akka.cluster.ddata.Replicator$Update]. A typical reason for `AskTimeoutException` is that the recipient actor didn't send a reply.
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:636)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.concurrent.java8.FuturesConvertersImpl$CF.apply(FutureConvertersImpl.scala:29)
	at scala.concurrent.java8.FuturesConvertersImpl$CF.apply(FutureConvertersImpl.scala:26)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at scala.concurrent.ExecutionContext$parasitic$.execute(ExecutionContext.scala:222)
	at scala.concurrent.impl.Promise$Transformation.submitWithValue(Promise.scala:429)
	at scala.concurrent.impl.Promise$DefaultPromise.submitWithValue(Promise.scala:335)
	at scala.concurrent.impl.Promise$DefaultPromise.tryComplete0(Promise.scala:285)
	at scala.concurrent.impl.Promise$DefaultPromise.tryComplete(Promise.scala:278)
	at akka.pattern.PromiseActorRef$.$anonfun$apply$1(AskSupport.scala:730)
	at akka.actor.Scheduler$$anon$7.run(Scheduler.scala:479)
	at scala.concurrent.ExecutionContext$parasitic$.execute(ExecutionContext.scala:222)
	at akka.actor.LightArrayRevolverScheduler$TaskHolder.executeTask(LightArrayRevolverScheduler.scala:365)
	at akka.actor.LightArrayRevolverScheduler$$anon$3.executeBucket$1(LightArrayRevolverScheduler.scala:314)
	at akka.actor.LightArrayRevolverScheduler$$anon$3.nextTick(LightArrayRevolverScheduler.scala:318)
	at akka.actor.LightArrayRevolverScheduler$$anon$3.run(LightArrayRevolverScheduler.scala:270)
	at java.base/java.lang.Thread.run(Thread.java:833)
```

From my basic understanding on how Akka works, I would say something is wrong on Ditto Policies. Logs from Ditto policies show the following warning messages:

```text
WARN  [] a.r.a.Association Association(akka://ditto-cluster) - Outbound message stream to [akka://ditto-cluster@10.10.34.68:2551] failed. Restarting it. akka.remote.artery.OutboundHandshake$HandshakeTimeoutException: Handshake with [akka://ditto-cluster@10.10.34.68:2551] did not complete within 20000 ms
```

I looked up the `10.10.34.68` IPv4 address using the following command. No pods/services were found within my cluster:

```text
{ kubectl get pods -A -oyaml && kubectl get services -A -oyaml } | grep 10.10.34.68
```


### Hypothesis

1. Akka cluster operated as expected before node failure
2. After node failure K8s re-scheduled pods as stated by their ReplicaSet
3. Akka did not pick up with K8s and used an old cluster IP address

Because that IP address is no longer in use, components were unable to communicate

### Current solution

Restart Ditto

```sh
kubectl rollout restart deployment ditto-gateway ditto-connectivity ditto-policies ditto-things ditto-thingssearch
```

### Expected solution

Ditto should be resilient to these kind of failures. Akka cluster should keep up with Kubernetes scheduling

### Additional information

- Kubernetes: Server Version: version.Info{Major:""1"", Minor:""21"", GitVersion:""v1.21.6"", GitCommit:""d921bc6d1810da51177fbd0ed61dc811c5228097"", GitTreeState:""clean"", BuildDate:""2021-10-27T17:44:26Z"", GoVersion:""go1.16.9"", Compiler:""gc"", Platform:""linux/amd64""}
- Helm chart version: 3.1.4

### Probably related

- [Cluster bootstrap based on kubernetes-api discovery does not work](https://github.com/akka/akka-management/issues/236)
- [Cluster bootstrap with DNS does not work when akka management host is a host rather than IP](https://github.com/akka/akka-management/issues/187)
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1649/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1649,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85epGmF,ditto,1587833221,1649,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-06-12T18:11:23Z,2023-06-12T18:11:23Z,"Seems like something network related in the k8s cluster.
That's difficult to diagnose now from the ""outside"" ..

Did you find something out yourself by now?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85epGmF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1649,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85etidX,ditto,1588995927,1649,NA,Altair-Bueno,67512202,Altair Bueno,,NA,2023-06-13T10:16:29Z,2023-06-13T10:16:29Z,"Hello Thomas. We spent some time debugging our K8s networks. We also deployed Ditto on our K3s test cluster. It is a single node with a much newer Kubernetes version.

```
Server Version: version.Info{Major:""1"", Minor:""25"", GitVersion:""v1.25.7+k3s1"", GitCommit:""f7c20e237d0ad0eae83c1ce60d490da70dbddc0e"", GitTreeState:""clean"", BuildDate:""2023-03-10T22:16:07Z"", GoVersion:""go1.19.6"", Compiler:""gc"", Platform:""linux/amd64""}
```

## Our findings

### Prometheus metrics

We checked the Prometheus metrics to find out what was happening. We made sure the `global.prometheus.enabled` key was set to `true` on the Helm chart. My Prometheus tried to scrape metrics, but was unable to do so. All ditto pods responded with the same error messages:

```
Get ""http://<addr>/"": context deadline exceeded
``` 

Our K3s cluster was having similar issues, but the error message was `connection refused` instead.

### Network troubleshooting

We launched a [dnsutils pod](https://kubernetes.io/docs/tasks/administer-cluster/dns-debugging-resolution/) for troubleshooting and explored the network with the usual tools:

#### Scraping Prometheus metrics myself using cURL

```sh
# Obtaining the IP address
kubectl get <pod> -oyaml
curl http://<ip>:9095/ -v
```

- dnsutil on K8s: TCP handshake never succeeds. Timeout
- dnsutil on K3s: Connection refused
- Within same the container (loopback address): Works as expected. Metrics are returned

#### Ping

All packages sent from dnsutils were lost both on K3s and K8s.

#### Traceroute

- dnsutil on K8s: Address is unreachable. It just keeps sending packages that get lost

```sh
traceroute to 10.10.34.163 (10.10.34.163), 30 hops max, 60 byte packets
 1  192.168.43.233 (192.168.43.233)  0.069 ms  0.024 ms  0.020 ms
 2  * * *
 3  * * *
 4  * * *
 5  * * *
 6  * * *
...
```

- dnsutil on K3s: Only one jump. The `10.42.0.1` address is neither a service nor a pod of the cluster. Probably a virtual gateway or kube-proxy.

```sh
# traceroute 10.42.0.140
traceroute to 10.42.0.140 (10.42.0.140), 30 hops max, 60 byte packets
 1  10.42.0.1 (10.42.0.1)  0.246 ms  0.013 ms  0.012 ms
```


## Discussion

I've noticed that Ditto pods are the only ones to deploy `networkpolicies.networking.k8s.io` objects on my cluster. They are also the only ones with this kind of networking issues. Could those objects misconfigured? I've never seen this objects before, and frankly I have no idea on how they work. 

We also deployed Ditto with Docker compose, and it appears to be working as expected (fingers crossed). However, we would like to use Ditto within K8s. Could the Helm chart be faulty?

From my understanding, the Docker compose version uses a shared DNS name for discovery while the Kubernetes version is using Networking policies with the Akka cluster adapter. Could it be possible to leverage CoreDNS instead inside Kubernetes?


## Additional information

<details>

<summary>
kubectl get networkpolicies.networking.k8s.io -oyaml
</summary>


```yaml
apiVersion: v1
items:
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    annotations:
      meta.helm.sh/release-name: prueba-ditto
      meta.helm.sh/release-namespace: pruebasot
    creationTimestamp: ""2023-06-09T10:51:40Z""
    generation: 1
    labels:
      app.kubernetes.io/instance: prueba-ditto
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ditto-connectivity
      app.kubernetes.io/version: 3.1.2
      helm.sh/chart: ditto-3.1.4
    name: prueba-ditto-connectivity
    namespace: pruebasot
    resourceVersion: ""208865624""
    uid: 76b4d154-8db3-42a1-a602-99bdabd2a5a7
  spec:
    egress:
    - {}
    ingress:
    - from:
      - podSelector:
          matchLabels:
            actorSystemName: ditto-cluster
      ports:
      - port: 2551
        protocol: TCP
      - port: 8558
        protocol: TCP
    podSelector:
      matchLabels:
        app.kubernetes.io/instance: prueba-ditto
        app.kubernetes.io/name: ditto-connectivity
    policyTypes:
    - Ingress
    - Egress
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    annotations:
      meta.helm.sh/release-name: prueba-ditto
      meta.helm.sh/release-namespace: pruebasot
    creationTimestamp: ""2023-06-09T10:51:40Z""
    generation: 1
    labels:
      app.kubernetes.io/instance: prueba-ditto
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ditto-gateway
      app.kubernetes.io/version: 3.1.2
      helm.sh/chart: ditto-3.1.4
    name: prueba-ditto-gateway
    namespace: pruebasot
    resourceVersion: ""208865627""
    uid: 03c6f5a0-c271-4595-8991-fa63a55935b7
  spec:
    egress:
    - {}
    ingress:
    - from:
      - podSelector:
          matchLabels:
            app.kubernetes.io/instance: prueba-ditto
            app.kubernetes.io/name: ditto-nginx
      ports:
      - port: http
        protocol: TCP
    - from:
      - podSelector:
          matchLabels:
            actorSystemName: ditto-cluster
      ports:
      - port: 2551
        protocol: TCP
      - port: 8558
        protocol: TCP
    podSelector:
      matchLabels:
        app.kubernetes.io/instance: prueba-ditto
        app.kubernetes.io/name: ditto-gateway
    policyTypes:
    - Ingress
    - Egress
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    annotations:
      meta.helm.sh/release-name: prueba-ditto
      meta.helm.sh/release-namespace: pruebasot
    creationTimestamp: ""2023-06-09T10:51:40Z""
    generation: 1
    labels:
      app.kubernetes.io/instance: prueba-ditto
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ditto-nginx
      app.kubernetes.io/version: 3.1.2
      helm.sh/chart: ditto-3.1.4
    name: prueba-ditto-nginx
    namespace: pruebasot
    resourceVersion: ""208865625""
    uid: 90d5948a-bcc6-4282-bf5a-bdbf42fcc042
  spec:
    ingress:
    - ports:
      - port: 8080
        protocol: TCP
    podSelector:
      matchLabels:
        app.kubernetes.io/instance: prueba-ditto
        app.kubernetes.io/name: ditto-nginx
    policyTypes:
    - Ingress
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    annotations:
      meta.helm.sh/release-name: prueba-ditto
      meta.helm.sh/release-namespace: pruebasot
    creationTimestamp: ""2023-06-09T10:51:40Z""
    generation: 1
    labels:
      app.kubernetes.io/instance: prueba-ditto
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ditto-policies
      app.kubernetes.io/version: 3.1.2
      helm.sh/chart: ditto-3.1.4
    name: prueba-ditto-policies
    namespace: pruebasot
    resourceVersion: ""208865626""
    uid: ece338b5-2542-4c91-9d61-56d2cb380c0b
  spec:
    egress:
    - {}
    ingress:
    - from:
      - podSelector:
          matchLabels:
            actorSystemName: ditto-cluster
      ports:
      - port: 2551
        protocol: TCP
      - port: 8558
        protocol: TCP
    podSelector:
      matchLabels:
        app.kubernetes.io/instance: prueba-ditto
        app.kubernetes.io/name: ditto-policies
    policyTypes:
    - Ingress
    - Egress
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    annotations:
      meta.helm.sh/release-name: prueba-ditto
      meta.helm.sh/release-namespace: pruebasot
    creationTimestamp: ""2023-06-09T10:51:40Z""
    generation: 1
    labels:
      app.kubernetes.io/instance: prueba-ditto
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ditto-swaggerui
      app.kubernetes.io/version: 3.1.2
      helm.sh/chart: ditto-3.1.4
    name: prueba-ditto-swaggerui
    namespace: pruebasot
    resourceVersion: ""208865629""
    uid: 7543a7f6-17e2-4799-a514-efea998440fd
  spec:
    ingress:
    - from:
      - podSelector:
          matchLabels:
            app.kubernetes.io/instance: prueba-ditto
            app.kubernetes.io/name: ditto-nginx
      ports:
      - port: 8080
        protocol: TCP
    podSelector:
      matchLabels:
        app.kubernetes.io/instance: prueba-ditto
        app.kubernetes.io/name: ditto-swaggerui
    policyTypes:
    - Ingress
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    annotations:
      meta.helm.sh/release-name: prueba-ditto
      meta.helm.sh/release-namespace: pruebasot
    creationTimestamp: ""2023-06-09T10:51:40Z""
    generation: 1
    labels:
      app.kubernetes.io/instance: prueba-ditto
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ditto-things
      app.kubernetes.io/version: 3.1.2
      helm.sh/chart: ditto-3.1.4
    name: prueba-ditto-things
    namespace: pruebasot
    resourceVersion: ""208865628""
    uid: 09c3a802-027e-404f-bb08-55970e937afd
  spec:
    egress:
    - {}
    ingress:
    - from:
      - podSelector:
          matchLabels:
            actorSystemName: ditto-cluster
      ports:
      - port: 2551
        protocol: TCP
      - port: 8558
        protocol: TCP
    podSelector:
      matchLabels:
        app.kubernetes.io/instance: prueba-ditto
        app.kubernetes.io/name: ditto-things
    policyTypes:
    - Ingress
    - Egress
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    annotations:
      meta.helm.sh/release-name: prueba-ditto
      meta.helm.sh/release-namespace: pruebasot
    creationTimestamp: ""2023-06-09T10:51:40Z""
    generation: 1
    labels:
      app.kubernetes.io/instance: prueba-ditto
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ditto-thingssearch
      app.kubernetes.io/version: 3.1.2
      helm.sh/chart: ditto-3.1.4
    name: prueba-ditto-thingssearch
    namespace: pruebasot
    resourceVersion: ""208865630""
    uid: 4d682783-d764-4421-8136-c51045b9fa9c
  spec:
    egress:
    - {}
    ingress:
    - from:
      - podSelector:
          matchLabels:
            actorSystemName: ditto-cluster
      ports:
      - port: 2551
        protocol: TCP
      - port: 8558
        protocol: TCP
    podSelector:
      matchLabels:
        app.kubernetes.io/instance: prueba-ditto
        app.kubernetes.io/name: ditto-thingssearch
    policyTypes:
    - Ingress
    - Egress
kind: List
metadata:
  resourceVersion: """"

```


</details> 


Update: [Akka has this Kubernetes example for clustering](https://github.com/akka/akka-sample-cluster-kubernetes-scala/), and they [are not using networking policies](https://github.com/akka/akka-sample-cluster-kubernetes-scala/blob/04c113ce36b9d02a078c47b43800f8d94ad4c4cb/kubernetes/akka-cluster.yml). What's the use for Networking policies in Ditto?





","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85etidX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1649,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85fQ-k8,ditto,1598286140,1649,NA,Altair-Bueno,67512202,Altair Bueno,,NA,2023-06-20T07:48:12Z,2023-06-20T07:48:12Z,"After my last comment, we have disabled Ditto's network policies. This can be archived with the following values on the helm chart:

```yml
connectivity:
  networkPolicy:
    enabled: false
gateway:
  networkPolicy:
    enabled: false
policies:
  networkPolicy:
    enabled: false
things:
  networkPolicy:
    enabled: false
thingsSearch:
  networkPolicy:
    enabled: false
```

This solves the AskTimeoutExceptions we were experiencing[^1], as well as allowing our Prometheus to scrape metrics. We didn't experience any issues related to networking, even with pod failure.

I also took some time to learn the basics of `networkpolicies.networking.k8s.io` objects. Those objects generated by the helm chart look fine to me, except they do not allow for either ingress or egress from the Kubernetes control panel. From my understanding, Akka listens for events from the control panel and heals the cluster based on what pods are currently available. Could that be the reason why Akka didn't re-stablish connection successfully, and instead used an old ip address? 


[^1]: We obviously still have AskTimeoutExceptions after a pod failure, but Akka is able to heal itself successfully after a couple of retries.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85fQ-k8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1649,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85fRNPv,ditto,1598346223,1649,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-06-20T08:30:34Z,2023-06-20T08:30:34Z,"> I also took some time to learn the basics of networkpolicies.networking.k8s.io objects. Those objects generated by the helm chart look fine to me, except they do not allow for either ingress or egress from the Kubernetes control panel. From my understanding, Akka listens for events from the control panel and heals the cluster based on what pods are currently available. Could that be the reason why Akka didn't re-stablish connection successfully, and instead used an old ip address?

Hm, very good finding.
To be honest, I never looked deeply into the network policies, the original helm chart was contributed to Ditto by someone with probably no Akka knowledge.

I see it as optional, however with your finding it is even dangerous to use.

Will also have a closer look into it and probably remove it from the chart. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85fRNPv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1650,https://api.github.com/repos/eclipse-ditto/ditto/issues/1650,ditto,1750864441,1650,Add option to enforce validation based on referenced WoT model,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2023-06-10T08:10:38Z,2024-08-26T11:08:26Z,"Currently, Ditto's WoT Integration does not ensure/enforce the referenced model.

As the reference implementation, Eclipse Thingweb did also not do that we thought that would be a common practice to move validation to eg producers of messages.

In practice I now see that an enforcement of the model by Ditto would have great benefits and is the best place to add validation. 
This would eg ensure that different API consumers always modify a thing only in the intended and modeled way.

That would be especially important if the Ditto managed twin is used in an Event driven system, where changes of the twin state is reacted to by eg issuing a command downlink to an actual device (using ""desired properties"" approach).

This issue should track:
- new config option to enable wot validation
- implementation and making configurable all of the below:
   - validation of attributes on thing level
   - validation of properties of features
   - validation of desired properties of features (ignoring ""required"" constraints) 
   - validation of thing messages
   - validation of feature messages
   - whether to allow modifying non modeled attributes/properties or to reject them
   - whether to allow sending of non modeled messages (wot actions/events) or to reject them

I expect this to be quite difficult to do, as we have to extract the JsonSchema parts from WoT TM models and apply them. 
Both when eg a complete thing is modified and also partially, when eg only a single feature or even property or even part of a property is modified.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1650/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1650,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85egksc,ditto,1585597212,1650,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-06-10T10:16:53Z,2023-06-10T10:16:53Z,"I think that we need to validate always what the target state of the complete thing (or feature if only a feature was modifier) would be against the model.

So after enforcement (different permissions should not yield different validation results), but before applying a modify command to the persistence.

We should also monitor how much time validation takes, by adding metrics (spans) to the existing signal processing trace.

It would ne nice to have the validation as separate Java Module so that it could also be used as a library. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85egksc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1650,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85gE--Z,ditto,1611919257,1650,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-06-28T18:54:41Z,2023-06-28T18:54:41Z,"Another idea on the enforcement:
Configure a list of auth subjects (also supporting wildcards) for which validation is not done.

I am thinking especially about eg connections where we don't necessarily rely on a user input to validate.
Whereas for api users, eg authenticated via JWT and the http api, it would be important to validate all provided data.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85gE--Z/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1654,https://api.github.com/repos/eclipse-ditto/ditto/issues/1654,ditto,1756191054,1654,Enhance Ditto UI search slot with selection of namespaces to search in,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2023-06-14T06:56:28Z,2023-10-02T06:41:33Z,"The current ""search slot"" when browsing for all things in the Ditto Explorer UI does not provide the option to define the namespace(s) to search in.
The API provides this as a separate query parameter `namespaces` (comma separated list of namespaces to search in):
https://www.eclipse.org/ditto/http-api-doc.html#/Things-Search/get_api_2_search_things

It would be great to make the namespaces to search in selectable.
The ""environment"" already supports to configure `searchNamespaces` - maybe just list all of those in a kind of ""multi select"" component to quickly add/remove namespaces to search in.

@thfries what do you think about this? Does it make sense?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1654/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1654,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85e4Z1s,ditto,1591844204,1654,NA,thfries,20593339,Thomas Fries,,NA,2023-06-14T19:16:13Z,2023-06-14T19:16:13Z,"Hi @thjaeckle,
yes, if you have multiple namespaces configured on an environment that makes sense to select here.
But I thought a namespace is rather for separating bigger scopes (like a tenant) and not for very fine grained separation where you switch frequently back and forth. So my assumption was, that you configure one or two namespaces per environment and use rather different environments for different namespaces.
So if you say you have the need to frequently switch between namespaces, this could be easily done.
The only concern that might get more complex over time: we may need to extend the saved favorite filters (that should include the namespace, too. In future, separate columns and sorting per saved filter might make sense too :-) )","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85e4Z1s/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1654,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85e4jwY,ditto,1591884824,1654,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-06-14T19:53:18Z,2023-06-14T19:53:18Z,"We are using namespace for eg categorizing different types of entities, eg ""devices"", ""rooms"", ""buildings"" being part of the namespace. 

A tenant can also be part of the very same namespace. 

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85e4jwY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1655,https://api.github.com/repos/eclipse-ditto/ditto/issues/1655,ditto,1756197328,1655,Enhance Ditto UI search table by custom sorting based on configured columns,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2023-06-14T07:00:45Z,2023-11-26T11:01:40Z,"The Ditto Explorer UI currently always sorts based on the thingId (hardcoded in the UI).

It would be very beneficial to be able to sort based on the displayed columns of the table (which can be customized).  
That way it would e.g. be possible to sort for the most recently ""modified"" things (using `_modified` as descending sort field).

Toggling between ascending/descending would be also required.

A bonus would be to add more than one sort field (the API supports that) - but that is probably hard to implement.

@thfries what do you think about this?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1655/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1655,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85e4fTj,ditto,1591866595,1655,NA,thfries,20593339,Thomas Fries,,NA,2023-06-14T19:36:20Z,2023-06-14T19:36:20Z,"oh yes. I also thought about this multiple times 😉but I never tried that. I think to supply the ditto API is very easy, because that was very easy for the other parts, too. I fear the UI part to make the table headers and control buttons work. I always need a lot of research on how this is supported by bootstrap or if other extensions are needed.

Besides that, should be doable and also very valuable!

(btw nice example! I use the modified_1d or modified_1h often for the same reason...)




","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85e4fTj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1655,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85s4b2f,ditto,1826733471,1655,NA,thfries,20593339,Thomas Fries,,NA,2023-11-26T09:27:13Z,2023-11-26T09:27:13Z,"Hi @thjaeckle, pls assign this issue to me. Thanks","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85s4b2f/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1656,https://api.github.com/repos/eclipse-ditto/ditto/issues/1656,ditto,1758281442,1656,"Provide ""debug"" option when creating a Thing with a referenced WoT TM, providing error feedback",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2023-06-15T08:09:35Z,2024-01-04T14:43:01Z,"When developing new WoT TMs and testing if the JSON skeleton created by Ditto is as expected it would be very helpful to get meaningful error messages, e.g. when:
* the model or some references submodels / referenced models cannot be retrieved
* when the TM is in invalid format / cannot be parsed
* etc.

Currently, Ditto ""fails silently"" and just does not create the JSON skeleton (which is also a good approach to be fault tolerant).

However, for this specific case it would make sense to configure a ""strict WoT mode"", e.g. via query-parameter or header field.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1656/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1663,https://api.github.com/repos/eclipse-ditto/ditto/issues/1663,ditto,1771219761,1663,"[Helm,Nginx,dittoui]: OOMKilled on Ditto 3.3.0",Altair-Bueno,67512202,Altair Bueno,,CLOSED,2023-06-23T10:30:47Z,2023-06-28T15:11:23Z,"```yml
# values.yml
global:
  prometheus:
    enabled: true

gateway:
  devopsPassword: foobar

mongodb:
  persistence:
    enabled: false
``` 

```sh
helm install --create-namespace dt-ditto oci://registry-1.docker.io/eclipse/ditto -f values.yml --version=3.3.0
```

```text
dt-ditto-connectivity-56f78b486d-8r692   1/1     Running            0          2m10s
dt-ditto-dittoui-9f875458c-fkcq7         0/1     CrashLoopBackOff   4          2m10s
dt-ditto-gateway-565d4f4f6c-4z7tp        1/1     Running            0          2m10s
dt-ditto-mongodb-df4ffd99d-mps8x         1/1     Running            0          2m10s
dt-ditto-nginx-566ff8d696-c75dg          0/1     CrashLoopBackOff   3          2m10s
dt-ditto-policies-657c989997-p88v2       1/1     Running            0          2m10s
dt-ditto-swaggerui-77f4864955-2vfwm      1/1     Running            0          2m10s
dt-ditto-things-5886d99c7b-tgjn8         1/1     Running            0          2m10s
dt-ditto-thingssearch-654556bb8b-ml9hn   1/1     Running            0          2m10s
```

Changing the `nginx.resources.memoryMi` to 500 stops the pod from crashing. However, as an user of the Helm chart I would expect a sensible default ([currently is set to only 64 megabytes!!](https://github.com/eclipse-ditto/ditto/blob/2157ca59ea70caabf80140133cb8f367f968ae37/deployment/helm/ditto/values.yaml#L1399))


<details><summary>Logs nginx</summary>
<p>

```text
Defaulted container ""ditto-nginx"" out of: ditto-nginx, wait-for-gateway (init)
/docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
/docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
/docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
/docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
/docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
/docker-entrypoint.sh: Configuration complete; ready for start up
```


</p>
</details> 


<details><summary>Logs dittoui</summary>
<p>

```text
/docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
/docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
/docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
10-listen-on-ipv6-by-default.sh: info: /etc/nginx/conf.d/default.conf differs from the packaged version
/docker-entrypoint.sh: Ignoring /docker-entrypoint.d/15-local-resolvers.envsh, not executable
/docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
/docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
/docker-entrypoint.sh: Configuration complete; ready for start up
2023/06/23 10:18:04 [notice] 1#1: using the ""epoll"" event method
2023/06/23 10:18:04 [notice] 1#1: nginx/1.25.1
2023/06/23 10:18:04 [notice] 1#1: built by gcc 12.2.1 20220924 (Alpine 12.2.1_git20220924-r4) 
2023/06/23 10:18:04 [notice] 1#1: OS: Linux 5.4.0-113-generic
2023/06/23 10:18:04 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576
2023/06/23 10:18:04 [notice] 1#1: start worker processes
2023/06/23 10:18:04 [notice] 1#1: start worker process 29
2023/06/23 10:18:04 [notice] 1#1: start worker process 30
2023/06/23 10:18:04 [notice] 1#1: start worker process 31
2023/06/23 10:18:04 [notice] 1#1: start worker process 32
2023/06/23 10:18:04 [notice] 1#1: start worker process 33
2023/06/23 10:18:04 [notice] 1#1: start worker process 34
2023/06/23 10:18:04 [notice] 1#1: start worker process 35
2023/06/23 10:18:04 [notice] 1#1: start worker process 36
2023/06/23 10:18:04 [notice] 1#1: start worker process 37
2023/06/23 10:18:04 [notice] 1#1: start worker process 38
2023/06/23 10:18:04 [notice] 1#1: start worker process 39
2023/06/23 10:18:04 [notice] 1#1: start worker process 40
2023/06/23 10:18:04 [notice] 1#1: start worker process 41
2023/06/23 10:18:04 [notice] 1#1: start worker process 42
2023/06/23 10:18:04 [notice] 1#1: start worker process 43
2023/06/23 10:18:04 [notice] 1#1: start worker process 44
2023/06/23 10:18:04 [notice] 1#1: start worker process 45
2023/06/23 10:18:04 [notice] 1#1: start worker process 46
2023/06/23 10:18:04 [notice] 1#1: start worker process 47
2023/06/23 10:18:04 [notice] 1#1: start worker process 48
2023/06/23 10:18:04 [notice] 1#1: start worker process 49
2023/06/23 10:18:04 [notice] 1#1: start worker process 50
2023/06/23 10:18:04 [notice] 1#1: start worker process 51
2023/06/23 10:18:04 [notice] 1#1: start worker process 52
2023/06/23 10:18:04 [notice] 1#1: start worker process 53
2023/06/23 10:18:04 [notice] 1#1: start worker process 54
2023/06/23 10:18:04 [notice] 1#1: start worker process 55
2023/06/23 10:18:04 [notice] 1#1: start worker process 56
2023/06/23 10:18:04 [notice] 1#1: start worker process 57
2023/06/23 10:18:04 [notice] 1#1: start worker process 58
2023/06/23 10:18:04 [notice] 1#1: start worker process 59
2023/06/23 10:18:04 [notice] 1#1: start worker process 60
2023/06/23 10:18:04 [notice] 1#1: start worker process 61
2023/06/23 10:18:04 [notice] 1#1: start worker process 62
2023/06/23 10:18:04 [notice] 1#1: start worker process 63
2023/06/23 10:18:04 [notice] 1#1: start worker process 64
2023/06/23 10:18:04 [notice] 1#1: start worker process 65
2023/06/23 10:18:04 [notice] 1#1: start worker process 66
2023/06/23 10:18:04 [notice] 1#1: start worker process 67
2023/06/23 10:18:04 [notice] 1#1: start worker process 68
2023/06/23 10:18:04 [notice] 1#1: start worker process 69
2023/06/23 10:18:04 [notice] 1#1: start worker process 70
2023/06/23 10:18:04 [notice] 1#1: start worker process 71
2023/06/23 10:18:04 [notice] 1#1: start worker process 72
2023/06/23 10:18:04 [notice] 1#1: start worker process 73
2023/06/23 10:18:04 [notice] 1#1: start worker process 74
2023/06/23 10:18:04 [notice] 1#1: start worker process 75
2023/06/23 10:18:04 [notice] 1#1: start worker process 76
2023/06/23 10:18:04 [notice] 1#1: start worker process 77
2023/06/23 10:18:04 [notice] 1#1: start worker process 78
2023/06/23 10:18:04 [notice] 1#1: start worker process 79
2023/06/23 10:18:04 [notice] 1#1: start worker process 80
2023/06/23 10:18:04 [notice] 1#1: start worker process 81
2023/06/23 10:18:04 [notice] 1#1: start worker process 82
2023/06/23 10:18:04 [notice] 1#1: start worker process 83
2023/06/23 10:18:04 [notice] 1#1: start worker process 84
2023/06/23 10:18:04 [notice] 1#1: start worker process 85
2023/06/23 10:18:04 [notice] 1#1: start worker process 86
2023/06/23 10:18:04 [notice] 1#1: start worker process 87
2023/06/23 10:18:04 [notice] 1#1: start worker process 88
2023/06/23 10:18:04 [notice] 1#1: start worker process 89
2023/06/23 10:18:04 [notice] 1#1: start worker process 90
2023/06/23 10:18:04 [notice] 1#1: start worker process 91
2023/06/23 10:18:04 [notice] 1#1: start worker process 92
2023/06/23 10:18:04 [notice] 1#1: start worker process 93
2023/06/23 10:18:04 [notice] 1#1: start worker process 94
2023/06/23 10:18:04 [notice] 1#1: start worker process 95
2023/06/23 10:18:04 [notice] 1#1: start worker process 96
2023/06/23 10:18:04 [notice] 1#1: start worker process 97
```

</p>
</details> 




","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1663/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1663,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85fnX2q,ditto,1604156842,1663,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-06-23T11:35:58Z,2023-06-23T11:35:58Z,"> Changing the `nginx.resources.memoryMi` to 500 stops the pod from crashing. However, as an user of the Helm chart I would expect a sensible default ([currently is set to only 64 megabytes!!](https://github.com/eclipse-ditto/ditto/blob/2157ca59ea70caabf80140133cb8f367f968ae37/deployment/helm/ditto/values.yaml#L1399))

I think what probably causes this is that the `worker_processes` are configured (by default) to `auto` in nginx - and that takes the amount of available CPUs into consideration.  
As I did always run Ditto on quite small worker-nodes (with max. 4 or 8 CPUs), for that 64mB of memory is sufficient.

For the `dittoui` we did not adjust the `worker_processes`, for the other `nginx` we did however configure them to be `1`.

Also found this explanation here: https://github.com/kubernetes/ingress-nginx/issues/8166#issuecomment-1448272934

You probably have a lot more CPUs available (also according to the `dittoui` logs.  
So you would need to adjust the values to your needs, if you need to configure the used `worker_processes`, please provide a PR and we will surely add it to the official chart.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85fnX2q/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1663,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85fnamY,ditto,1604168088,1663,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-06-23T11:47:02Z,2023-06-23T11:47:02Z,"What also could be an issue (to be fixed in Ditto's chart) is that the dittoui and the nginx did not configure `cpu` `limits`, but only `requests`.
That probably is used for calculating the `worker_processes` of nginx.

Will look into that ..","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85fnamY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1663,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85fx5Pr,ditto,1606915051,1663,NA,Altair-Bueno,67512202,Altair Bueno,,NA,2023-06-26T07:58:44Z,2023-06-26T07:58:44Z,"> You probably have a lot more CPUs available (also according to the dittoui logs.

Indeed. Each node has more than 100 cores

> That probably is used for calculating the worker_processes of nginx.

I think so. Version 3.2.0 worked fine for me on the same cluster, and it used the max requests setting. [I also found this](https://home.robusta.dev/blog/stop-using-cpu-limits)

For now I think bumping the memory is the easiest way to patch.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85fx5Pr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1663,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85fyfrY,ditto,1607072472,1663,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-06-26T09:28:05Z,2023-06-26T09:28:05Z,"> For now I think bumping the memory is the easiest way to patch.

Yes, however that will not be done as default value in the Ditto chart.
As when eg running on a 4 core node, 64 MB is totally sufficient.

Another option would be to limit the amount of workers by default in the chart, maybe even make them configurable. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85fyfrY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1669,https://api.github.com/repos/eclipse-ditto/ditto/issues/1669,ditto,1776670145,1669,"[Helm]: 500 Internal Server Error. 'node needs to be a replica set member to use read concern' on server dt-ditto-mongodb:27017""",Altair-Bueno,67512202,Altair Bueno,,CLOSED,2023-06-27T11:07:39Z,2023-06-29T17:46:35Z,"### cURL Request 
```sh
# ditto:ditto
DITTO_AUTH=ZGl0dG86ZGl0dG8=
DITTO_ADDR=TBD
curl --location ""$DITTO_ADDR/api/2/things"" \
--header ""Authorization: Basic $DITTO_AUTH"" -v
```

### Expected response

Empty array. No things currently deployed on Ditto

### Actual response
```text
*   Trying 192.168.43.7:30531...
* Connected to node1.ertis.internal (192.168.43.7) port 30531 (#0)
> GET /api/2/things HTTP/1.1
> Host: node1.ertis.internal:30531
> User-Agent: curl/7.88.1
> Accept: */*
> Authorization: Basic ZGl0dG86ZGl0dG8=
> 
< HTTP/1.1 500 Internal Server Error
< Server: nginx/1.23.4
< Date: Tue, 27 Jun 2023 10:47:44 GMT
< Content-Type: application/json
< Content-Length: 304
< Connection: keep-alive
< version: 2
< correlation-id: 1d40a1c4-7b6e-4b7e-9b32-59e65ed97d07
< accept: */*
< Access-Control-Allow-Methods: GET, POST, PUT, PATCH, DELETE, OPTIONS
< Access-Control-Allow-Credentials: true
< Access-Control-Expose-Headers: *
< 
* Connection #0 to host node1.ertis.internal left intact
{""status"":500,""error"":""internalerror"",""message"":""class com.mongodb.MongoQueryException: Query failed with error code 123 and error message 'node needs to be a replica set member to use read concern' on server dt-ditto-mongodb:27017"",""description"":""Please contact the service team or your administrator.""}
```

### Helm Values

```yml
# helm upgrade --install --create-namespace --dependency-update dt-ditto oci://registry-1.docker.io/eclipse/ditto -f values.yml --version=3.3.0 --wait --debug

global:
  jwtOnly: false
  hashedBasicAuthUsers: false
  basicAuthUsers:
    ditto:
      user: ditto
      password: ditto
  prometheus:
    enabled: true
    port: 9095

swaggerui:
  enabled: false

dittoui:
  enabled: false

gateway:
  config:
    authentication:
      enablePreAuthentication: true
  devopsPassword: foobar
  statusPassword: foobar

nginx:
  service:
    type: NodePort
    nodePort: 30531
  resources:
    memoryMi: 250

mongodb:
  persistence:
    enabled: false

```

---

This worked fine on previous versions of Ditto, notably 3.1.4 and 3.2.0. Looks like there is a mismatch between the Helm chart configuration and the actual requirements of Ditto, or just a small bug.

Other endpoints appear to work fine. I've tried to retrieve a policy and connections. Creating a Thing also works.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1669/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1669,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85f7JWx,ditto,1609340337,1669,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-06-27T11:48:35Z,2023-06-27T11:48:35Z,"Did you upgrade from the old (now deprecated) Helm chart from iot-packages to the new one?
If yes: We did not ensure that this is a migration path as the old chart was more for ""demo"" purpose than being useful as productive chart..

Did you try to setup a new installation with the new chart?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85f7JWx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1669,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85f7Mof,ditto,1609353759,1669,NA,Altair-Bueno,67512202,Altair Bueno,,NA,2023-06-27T11:57:29Z,2023-06-27T11:57:29Z,"> Did you upgrade from the old (now deprecated) Helm chart from iot-packages to the new one?

We are using the new chart located at `oci://registry-1.docker.io/eclipse/ditto`. The whole command used for deployment was pasted with the values as a YAML comment.

> Did you try to setup a new installation with the new chart?

It's a whole different namespace, without database persistence. We are working on figuring how the new version works before doing the actual migration. Fresh start, except the cluster of course.

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85f7Mof/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1669,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85f7Tvr,ditto,1609382891,1669,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-06-27T12:16:24Z,2023-06-27T12:16:24Z,"Ok, thanks for clarifying, the `helm upgrade` confused me ..

@Altair-Bueno could you please provide the logs of `ditto-thingsearch`? 
The `GET /api/2/things` does basically a search - and that's probably where the Mongo exception arises from..","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85f7Tvr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1669,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85f7ktr,ditto,1609452395,1669,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-06-27T12:58:22Z,2023-06-27T12:58:22Z,"I think I know what the issue could be ..
The new helm chart defines ""reasonable"" MongoDB readConcerns / writeConcerns / readPreferences, etc.

In order for Ditto's search to be guaranteed consistent when working with ""search-persisted"" requested ACK, the `queryReadConcern` needs to be `""linearizable""` when used in a MongoDB replica set (which should for productive use cases used).

However, for starting the included referenced ""MongoDB"" dependency with a single node (and no replica set), using the `""linearizable""` `queryReadConcern` is just wrong and the Mongo driver throws the mentioned exception.

Fix:
Change the `queryReadConcern` to `""local""`:
https://github.com/eclipse-ditto/ditto/blob/2157ca59ea70caabf80140133cb8f367f968ae37/deployment/helm/ditto/values.yaml#L865

For a fix in the chart I think it would make sense to check when `mongodb.enabled = true` (and maybe as well when no replica set was configured via the mongo chart settings) to change the `queryReadConcern` to `""local""`.

Will work on that.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85f7ktr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1669,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85gBnOW,ditto,1611035542,1669,NA,Altair-Bueno,67512202,Altair Bueno,,NA,2023-06-28T09:02:08Z,2023-06-28T09:02:08Z,"> could you please provide the logs of ditto-thingsearch?
The GET /api/2/things does basically a search - and that's probably where the Mongo exception arises from..

Lots of lines with the following content

```json
{""@timestamp"":""2023-06-28T05:00:06.332+02:00"",""@version"":""1"",""message"":""[resume-source-errors-flow] Element: FailureWithLookBehind[error=com.mongodb.MongoQueryException: Query failed with error code 123 and error message 'node needs to be a replica set member to use read concern' on server dt-ditto-mongodb:27017, finalElements=[]]"",""logger_name"":""akka.stream.Materializer"",""thread_name"":""ditto-cluster-akka.actor.default-dispatcher-12"",""level"":""INFO"",""level_value"":20000,""akkaAddress"":""akka://ditto-cluster@10.10.34.78:2551"",""sourceThread"":""ditto-cluster-akka.actor.default-dispatcher-7"",""akkaSource"":""akka.stream.Log(akka://ditto-cluster/user/thingsWildcardSearchRoot/searchUpdaterRoot/backgroundSync/singleton/supervised-child/StreamSupervisor-5)""}
```

> Change the queryReadConcern to ""local"":

Thanks! 

> For a fix in the chart I think it would make sense to check when mongodb.enabled = true (and maybe as well when no replica set was configured via the mongo chart settings) to change the queryReadConcern to ""local"".

I don't think thats the right approach. It will probably backfire on someone else using the chart. From my perspective, the default should be local, the same way the default installation of Mongo is a single instance. If someone tries to use their own local mongo, chances are it's a single instance.



","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85gBnOW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1670,https://api.github.com/repos/eclipse-ditto/ditto/issues/1670,ditto,1777309697,1670,"[Helm,Gateway] devopsPassword and statusPassword wrong values.yaml path",mladBlum,45092755,Dominik Mlasko,,CLOSED,2023-06-27T16:07:49Z,2023-06-28T12:29:25Z,"In templates/gateway-secret.yaml the devopsPassword and statusPassword are read from `.Values.gateway.devopsPassword` and `.Values.gateway.statusPassword`.

In the deployment/helm/ditto/values.yaml these two values are located at `gateway.config.devops.devopsPassword` and `gateway.config.devops.statusPassword`

As a result, the two passwords are always regenerated and the passed passwords are not used.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1670/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1670,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85f-HHF,ditto,1610117573,1670,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-06-27T19:46:23Z,2023-06-27T19:46:23Z,"Thanks for the hint, will fix in #1671","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85f-HHF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1683,https://api.github.com/repos/eclipse-ditto/ditto/issues/1683,ditto,1796195011,1683,[API]: Endpoint for retrieving all policies,Altair-Bueno,67512202,Altair Bueno,,OPEN,2023-07-10T07:51:33Z,2023-07-12T17:09:10Z,"Provide an endpoint to retrieve all policies. (Get policies)

### Desired API

```http
GET /api/2/policies

[
  {
    ""policyId"": ""string"",
    // ...
  },
  // ...
]
```

### Current workaround

Query MongoDB directly and retrieve all policies
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1683/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1683,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85hKv2x,ditto,1630207409,1683,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-07-11T06:16:53Z,2023-07-11T06:16:53Z,"Some more input on this:
This is definitely a major task to do, for several reasons:
* authorization must be ensured when retrieving policies
   * i.e. only the policies where the currently authenticated ""subject"" has `READ` permissions in must be returned
   * all other policies must be ""hidden"" from retrieving all policies
* pagination must be implemented
   * when a single user is able to ""see"" > 200 policies (max page size also for things)
   * in the same manner as for ""things"", otherwise this would lead to an inconsistent API
   * so ""cursor"" based pagination it is
* filtering and sorting could be optional IMO
   * sorting by creation/modification date however could be very useful
   * queries like: ""find me all policies in which user <xyz> is contained"" would also be useful

As the read journal would be very slow for doing a ""retrieve all"" search and afterwards applying the authorization in memory, this task also requires:
* a new persistence (search index) for policies
   * only with the relevant fields:
      * policyId
      * auth subjects who can READ the policy
      * creation date
      * modification date
* keeping the search index eventually consistent with the read journal of policies","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85hKv2x/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1683,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85hTGYs,ditto,1632396844,1683,NA,Altair-Bueno,67512202,Altair Bueno,,NA,2023-07-12T11:57:41Z,2023-07-12T11:57:41Z,"Seems reasonable to me. Our use case would be to generate a dropdown menu with all policies for ease of use on our UI, so filtering and sorting isn't really necessary (yet?). 

I can give it a try. I have little experience with Akka but I'm familiar with MongoDB. Do you have any suggestions on how to tackle this issue? My first option is to take a look at the things endpoint and base the implementation on it.



","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85hTGYs/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1683,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85hVCxm,ditto,1632906342,1683,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-07-12T17:09:10Z,2023-07-12T17:09:10Z,"> Seems reasonable to me. Our use case would be to generate a dropdown menu with all policies for ease of use on our UI, so filtering and sorting isn't really necessary (yet?). 

Ok, sorting by policyId by default is sufficient for the start. 
Pagination (default page size 25, max 200, same as for things) however would be required also in a first version. 

> I can give it a try. I have little experience with Akka but I'm familiar with MongoDB. Do you have any suggestions on how to tackle this issue? My first option is to take a look at the things endpoint and base the implementation on it.

Yes, good idea.
That endpoint however just uses the search, which then builds his own search index for things in MongoDB.
For the policies search (which should also be implemented in the ""things-search"" service.. I know, bad naming, but it makes sense to also do it there instead of creating a new service) an own search index with some policy related fields should be added.

As policies have a more restrictive format than things I think we do not need a wildcard index (as we have for things).
But we still need to add the subjects allowed to READ something in the policy to the new policy search index.
In oder to be able to quickly filter all visible policies for a user. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85hVCxm/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1690,https://api.github.com/repos/eclipse-ditto/ditto/issues/1690,ditto,1802811130,1690,Modification with new `if-equal: skip` header returns wrong HTTP status code,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2023-07-13T11:24:55Z,2023-07-21T06:03:30Z,"I just noticed that when:
* modifying a thing and setting the (in Ditto 3.3.0 added) header `if-equal: skip` 
* the HTTP status code if the outcome would be equal to the provided value
   * is: 304 (Not Modified)
   * this status code is however is only allowed to be returned for ""safe"" methods like `GET` and `HEAD`
   * instead we must return (same as for the `If-Match` headers) a 412 (Precondition failed)

This is a bug and should be fixed as part of Ditto 3.3","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1690/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1691,https://api.github.com/repos/eclipse-ditto/ditto/issues/1691,ditto,1803004422,1691,"The `""_policy""` is persisted as part of ""MergeThing"" event when initial inline policy was provisioned",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2023-07-13T13:14:31Z,2023-07-21T06:03:45Z,"Since 3.3.0 it is possible to create a thing with a `MergeThing` (PATCH Thing) command - and it also is possible to provide an inline policy to be created for the ""create thing"" case.

This `""_policy""` field however seems to be persisted in the Things event journal - which is definitely not wanted.
Also causes not much of damage, only causes more MongoDB storage.

Should be fixed anyways ..","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1691/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1692,https://api.github.com/repos/eclipse-ditto/ditto/issues/1692,ditto,1804750323,1692,"When filtering for `messages` in a Connection + enriching with non-existing `extraFields`, the filtering fails",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2023-07-14T11:53:57Z,2023-07-18T17:31:21Z,"**When** a connection subscribes for a `target` consuming messages via the `topics`, like:
```
 _/_/things/live/messages
    ?namespaces=org.eclipse.ditto
    &extraFields=attributes
    &filter=eq(resource:path,'/features/my-feature/inbox/messages/run')
```

**And**
* if the `extraFields` are not existing (e.g. the `attributes` in this case)

**Then** the filter on the `resource:path` will not work in that case.
When removing the ""extraFields"" from the `topic`, then it works.

I think Ditto should be more tolerant and - if the `extraFields` don't exist - anyhow send out the message.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1692/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1699,https://api.github.com/repos/eclipse-ditto/ditto/issues/1699,ditto,1813674531,1699,"[development,docs]: `build_images.sh` fails if ditto-ui wasn't build before",Altair-Bueno,67512202,Altair Bueno,,CLOSED,2023-07-20T10:35:54Z,2023-12-08T19:46:21Z,"The steps described on the readme for building ditto for development are out of date. <https://github.com/eclipse-ditto/ditto/blob/022dffee0c1a21cedd57b74310683db5d7ce881e/README.md?plain=1#L80>. 

Possible solutions: 

1. Provide an option on `build_images.sh` to disable building certain components (e.g. ditto-ui)
2. Use a multi-stage docker build <https://docs.docker.com/build/building/multi-stage/>
3. Ask the the developer to build the ui before running `build_images.sh`. `npm i -C ui && npm run build -C ui`

Personally I would prefer options 1 or 2, less burden for new contributors. But the one liner should be fine too if the developer has a compatible node & npm version already installed.


","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1699/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1700,https://api.github.com/repos/eclipse-ditto/ditto/issues/1700,ditto,1814416411,1700,Show policy imports in Ditto explorer UI,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2023-07-20T16:45:27Z,2024-01-25T14:09:07Z,"The Ditto explorer UI does not yet show policy imports for Policies.
It would be good to show them and to be able to navigate to an imported policy by clicking on it. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1700/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1700,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ixwLp,ditto,1657209577,1700,NA,thfries,20593339,Thomas Fries,,NA,2023-07-30T16:06:47Z,2023-07-30T16:06:47Z,"Hi @thjaeckle,

I started to work on that. The UI to maintain policy imports is getting crazy.

One question: Is there a good reason for the UI to edit individual parts of a policy with narrowed REST calls (like putting a single subject of a policy entry)? Otherwise it would be much easier just to offer an ace editor for the full policy json.

Thanks for your opinion.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ixwLp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1700,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ix0dg,ditto,1657227104,1700,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-07-30T17:35:19Z,2023-07-30T17:35:19Z,"@thfries awesome, great to hear that.
For the explorer UI it should be sufficient to always read and update the complete policy.
Partial changes are nice to have, but not really required.

It would be kind of mandatory to have if you eg only have permissions to WRITE a specific part of a policy like a single entry or only subjects of an entry.
But I would see the UI as Admin UI where you probably most of the times work with unrestroctef permissions. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ix0dg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1700,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85jW4g4,ditto,1666943032,1700,NA,thfries,20593339,Thomas Fries,,NA,2023-08-06T18:48:40Z,2023-08-06T18:48:40Z,"Here are my thoughts on the layout:
<img width=""1437"" alt=""image"" src=""https://github.com/eclipse-ditto/ditto/assets/20593339/193b5aef-edfc-4eec-9a6b-9a9ead593f48"">

* I kept the editors for the partial update of a policy so that you can select the imported policyIds and navigate (may be double click to navigate, single click to select/deselect for editing)
* Added a second tab for the full json edit (like for things and environments). This also would allow to create a new policy
* Policy entry allows to edit the `importable`. (drop down with `implicit`, `explicit`, `never` and `null`)
* ""Recent Policy"" might be helpful to navigate in back and forth between policies. Clipboard copy would allow to create a new import","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85jW4g4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1700,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85je5Ep,ditto,1669042473,1700,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-08-08T07:18:02Z,2023-08-08T07:18:02Z,"Hi @thfries
Your proposal on the layout looks very good and makes sense from my point of view.

The idea about the recent policies is also good.
The community is currently working on a policy search in PR #1698, maybe this can, in the future, be also used for browsing policies with a search slot.
But for now (and the policy search is a rather big topic which will probably take longer), your approach is the best we can do.

Regarding double click vs single click : I don't like that too much, as this is not really intuitively usable.
Maybe we could just add a button to navigate to the imported policy, next to the ""copy to clipboard"" icon?
And single click action would select for editing. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85je5Ep/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1703,https://api.github.com/repos/eclipse-ditto/ditto/issues/1703,ditto,1815943942,1703,"Failed retrieval of a policy (e.g. after policy change) leads to search index being ""emptied out""",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2023-07-21T14:50:49Z,2023-10-06T16:42:52Z,"We encountered in the following case:
* a policy is used by lots of things
* a change it made to that policy
* as a result a lot of search index updates are triggered for all things which used that policy

If now some search ""ThingUpdaters"" may not be able to retrieve the policy
* then following WARNings can be seen:
```
Got AskTimeout during ask for message <SudoRetrievePolicy> and entityId <org.eclipse.ditto:shared-policy / policy> - retrying.. : <Recipient [Actor[akka://ditto-cluster/system/sharding/policyProxy#-1059358312]] had already been terminated. Message of type [org.eclipse.ditto.policies.api.commands.sudo.SudoRetrievePolicy].>
```
* followed by INFO logs:
```
Computed - due to missing enforcer - 'emptied out' ThingWriteModel for metadata <Metadata [thingId=org.eclipse.ditto:my-thing, thingRevision=491, thingPolicy=PolicyTag [id=org.eclipse.ditto:shared-policy, revision=4], allReferencedPolicies=[PolicyTag [id=org.eclipse.ditto:shared-policy, revision=4]], modified=null, events=[], timers=[0 timers], ackRecipients=[], invalidateThing=false, invalidatePolicy=true, updateReasons=[UNKNOWN, POLICY_UPDATE]]> and thing <...
```
* and then the thing in the search index basically is ""emptied"" - it can no longer be found
* this situation does also not ""heal itself"" - so the eventual consistency is broken here

This is obviously a bug.
How to fix it however I do not yet know..","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1703/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1704,https://api.github.com/repos/eclipse-ditto/ditto/issues/1704,ditto,1818410772,1704,ImplicitThingCreation incorrect response when the thing already exists,desislava-marinova,32883994,Desislava Marinova,,OPEN,2023-07-24T13:17:21Z,2023-10-31T05:54:17Z,"ImplicitThingCreation mapper is configured as follows:
```
""implicitEdgeThingCreation"": {
      ""mappingEngine"": ""ImplicitThingCreation"",
      ""options"": {
        ""thing"": {
          ""thingId"": ""{{ header:device_id }}"",
          ""_copyPolicyFrom"": ""{{ header:gateway_id }}"",
          ""attributes"": {
            ""Info"": {
              ""gatewayId"": ""{{ header:gateway_id }}""
            }
          }
        }
      },
      ""incomingConditions"": {
        ""behindGateway"": ""fn:filter(header:gateway_id, 'exists')""
      }
    }
```
According to the [ImplicitThingCreation mapper configuration](https://eclipse.dev/ditto/connectivity-mapping.html#configuration-options-4)
> commandHeaders (optional, default: {""If-None-Match"": ""*""}): The Ditto headers to use for constructing the “create thing” command for creating the twin and to use for creating errors.

The expectation is that the mapper should not fail with error creating policy but should result in 
```
{
    ""status"": 412,
    ""error"": ""things:precondition.failed"",
    ....
}
```
Currently, the mapper fails with an error with status 400
```
{
  ""correlationId"": ""ebdd03fd-dc20-487c-af42-91ac5628624a"",
  ""timestamp"": ""2023-07-27T11:37:46.994466Z"",
  ""category"": ""response"",
  ""type"": ""dispatched"",
  ""level"": ""failure"",
  ""message"": ""Response was not successful. This may be the case for when a thing could not be found or the authorization subject of the consuming source was not allowed to write a thing. - Message headers: [ditto-origin=e850970b-cac5-436a-bbe8-729684ce89e4, if-none-match=*, ditto-inbound-payload-mapper=implicitEdgeThingCreation, ditto-originator=ditto:ditto, response-required=false, correlation-id=ebdd03fd-dc20-487c-af42-91ac5628624a, ditto-auth-context={\""type\"":\""pre-authenticated-connection\"",\""subjects\"":[\""ditto:ditto\""]}, ditto-entity-id=thing:namespace:my-thing, allow-policy-lockout=true, requested-acks=[]] - Message payload: {\""type\"":\""things.responses:errorResponse\"",\""status\"":400,\""thingId\"":\""namespace:my-thing\"",\""payload\"":{\""status\"":400,\""error\"":\""things:thing.notcreatable\"",\""message\"":\""The Thing with ID 'namespace:my-thing' could not be created because creation of its implicit Policy ID 'namespace:my-thing' failed.\"",\""description\"":\""If you want to use an existing Policy, specify it as 'policyId' in the Thing JSON you create.\""}}"",
  ""address"": ""_responses"",
  ""entityType"": ""thing"",
  ""entityId"": ""namespace:my-thing""
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1704/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1704,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85iQAiz,ditto,1648363699,1704,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-07-24T18:02:59Z,2023-07-24T18:02:59Z,"Hi @desislava-marinova
I would have expected that using the header `If-None-Match: *` should have worked.

So I would see that as bug, if it is tried to create the inline or copied policy and therefore fails completely. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85iQAiz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1704,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85icODD,ditto,1651564739,1704,NA,desislava-marinova,32883994,Desislava Marinova,,NA,2023-07-26T11:05:59Z,2023-07-26T11:05:59Z,"According to the [ImplicitThingCreation mapper configuration](https://eclipse.dev/ditto/connectivity-mapping.html#configuration-options-4)
> commandHeaders (optional, default: {""If-None-Match"": ""*""}): The Ditto headers to use for constructing the “create thing” command for creating the twin and to use for creating errors.

@thjaeckle, does it mean that without adding explicitly commandHeaders in the mapper configuration, the mapper should not fail with error creating policy but should result in 
```
{
    ""status"": 412,
    ""error"": ""things:precondition.failed"",
    ....
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85icODD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1704,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85iczaX,ditto,1651717783,1704,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-07-26T12:33:46Z,2023-07-26T12:33:46Z,"Yes, I would also think/assume so ..","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85iczaX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1704,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ic5_Q,ditto,1651744720,1704,NA,desislava-marinova,32883994,Desislava Marinova,,NA,2023-07-26T12:51:09Z,2023-07-26T12:51:09Z,"Thanks @thjaeckle 
Should I create a new bug ticket for that misbehavior, or could this be reused?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ic5_Q/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1704,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ic6eR,ditto,1651746705,1704,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-07-26T12:52:24Z,2023-07-26T12:52:24Z,I would reuse this one and rephrase accordingly :) ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ic6eR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1704,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ijZHt,ditto,1653445101,1704,NA,desislava-marinova,32883994,Desislava Marinova,,NA,2023-07-27T11:40:23Z,2023-07-27T11:40:23Z,The description and title were updated.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ijZHt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1705,https://api.github.com/repos/eclipse-ditto/ditto/issues/1705,ditto,1819818161,1705,"Http push AWS SNS integration invalid signature on ""=""  char in external message header values",alstanchev,50709547,Aleksandar Stanchev,,CLOSED,2023-07-25T08:31:36Z,2023-08-25T17:56:25Z,"In case of using the Javascript payload mapping normally following the example of [AWS SNS integration](https://eclipse.dev/ditto/connectivity-hmac-signing.html#aws-sns) works as expected. But in the rare case of trying to forward data that contains the equals sign in a value can lead to problems. For example if a Feature is modified trough the http api and a header is sent like for example (accept-language:en, en-GB;q=0.9, bg;q=0.8, en-US;q=0.7) this will lead to an external message in the http.query header will contain = signs equally encoded just once like the once that are query sub delimiters.  

This then leads to the following error from AWS SNS because there is no way to distinguish which ""="" is a query delimiter and which one is part of a value.

Error response:
`Ran into a failure when publishing signal: Got non success status code: <403> and body: <\""<ErrorResponse xmlns=\\\""http://sns.amazonaws.com/doc/2010-03-31/\\\"">\\n  <Error>\\n    <Type>Sender</Type>\\n    <Code>SignatureDoesNotMatch</Code>\\n    <Message>The request signature we calculated does not match the signature you provided. Check your AWS Secret Access Key and signing method. Consult the service documentation for details.</Message>\\n  </Error>\\n</ErrorResponse>\\n\"">`

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1705/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1705,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85iVSBF,ditto,1649745989,1705,NA,alstanchev,50709547,Aleksandar Stanchev,,NA,2023-07-25T12:29:37Z,2023-07-25T12:29:37Z,"One approach could be to encode ""="" char in header values before it is sent to the payload mappers [here](https://github.com/eclipse-ditto/ditto/blob/58ce86b14aef9c43af2d153d0e4d5fa134065911/connectivity/service/src/main/java/org/eclipse/ditto/connectivity/service/messaging/OutboundMappingProcessor.java#L166)

or another fix could be to update the example of the script in  [AWS SNS integration](https://eclipse.dev/ditto/connectivity-hmac-signing.html#aws-sns) to encode the dittoHeaders like:

`let textPayload = JSON.stringify(Ditto.buildDittoProtocolMsg(namespace, name,
      group, channel, criterion, action, path, encodeURIComponent(dittoHeaders), value, status, extra));`
  
which in my opinion doesn't look very good and is not very explanatory and is even a bit hacky.
@thjaeckle what do you think?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85iVSBF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1705,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85iW16t,ditto,1650155181,1705,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-07-25T16:24:12Z,2023-07-25T16:24:12Z,"> One approach could be to encode ""="" char in header values before it is sent to the payload mappers [here](https://github.com/eclipse-ditto/ditto/blob/58ce86b14aef9c43af2d153d0e4d5fa134065911/connectivity/service/src/main/java/org/eclipse/ditto/connectivity/service/messaging/OutboundMappingProcessor.java#L166)

That seems like the wrong place IMO. 
Just because we have for AWS SNS special escaping requirements we should not adjust basically all payload mappers.  
Because reversing the escaping would have to be done by everyone receiving events by Ditto. 
This would even be a breaking change for connections and protocols where this is not an issue and `=` is already used in headers. 

> or another fix could be to update the example of the script in  [AWS SNS integration](https://eclipse.dev/ditto/connectivity-hmac-signing.html#aws-sns) to encode the dittoHeaders like:

Sure, that would be the easiest solution. 
But still decoding would be required on the other side of SNS. 

Or even not to map all incoming headers as Ditto headers to send to SNS, only selected ones.  
Thinking about that, this is rather dumb to just send all headers without sanatizing them. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85iW16t/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1705,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85iXU_k,ditto,1650282468,1705,NA,alstanchev,50709547,Aleksandar Stanchev,,NA,2023-07-25T17:49:50Z,2023-07-25T17:49:50Z,"Makes sense, by sanitising do you mean in the payload mapper or something else?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85iXU_k/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1705,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85iXf2C,ditto,1650326914,1705,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-07-25T18:24:19Z,2023-07-25T18:24:19Z,"Yes, in the payload mapper, only selectively add headers.

So instead of:
```javascript
JSON.stringify(
  Ditto.buildDittoProtocolMsg(
    namespace, 
    name, 
    group, 
    channel, 
    criterion, 
    action, 
    path, 
    dittoHeaders, 
    value, 
    status, 
    extra
  )
);
```

```javascript
let headers = {
  ""correlation-id"" = dittoHeaders[""correlation-id""],
  foo = dittoHeaders.foo,
  ...
};
JSON.stringify(
  Ditto.buildDittoProtocolMsg(
    namespace, 
    name, 
    group, 
    channel, 
    criterion, 
    action, 
    path, 
    headers, 
    value, 
    status, 
    extra
  )
);
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85iXf2C/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1707,https://api.github.com/repos/eclipse-ditto/ditto/issues/1707,ditto,1828029875,1707,404 on UI js and css assets when launched with docker compose,samrose,115821,,,CLOSED,2023-07-30T18:37:23Z,2023-08-04T05:32:21Z,"Using the latest release of ditto

ui loads with these errors on Ubuntu 22.04.2 LTS in all browsers on the same machine (chrome, firefox, etc)

![image](https://github.com/eclipse-ditto/ditto/assets/115821/0231a538-cce6-4a73-8110-94cb00c21a4b)
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1707/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1707,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85i9_sE,ditto,1660418820,1707,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-08-01T14:13:56Z,2023-08-01T14:13:56Z,"You probably need to build it - when running the `docker-compose.yml`, the UI is served from the local file path.

See here for the building instructions: https://github.com/eclipse-ditto/ditto/tree/master/ui#getting-started","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85i9_sE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1707,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85jF1-2,ditto,1662476214,1707,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-08-02T15:54:58Z,2023-08-02T15:54:58Z,"@thfries it would probably make more sense in using the latest Ui release in the Docker compose file.
Can you work without the UI being served from the local file system by default? ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85jF1-2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1707,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85jI8Oz,ditto,1663288243,1707,NA,thfries,20593339,Thomas Fries,,NA,2023-08-03T04:54:23Z,2023-08-03T04:54:23Z,"Yes, no problem at all. I'm using esbuild serve and not the local filesystem. I was thinking in a similar direction -> UI should be built by default and included.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85jI8Oz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1707,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85jL9XZ,ditto,1664079321,1707,NA,samrose,115821,,,NA,2023-08-03T14:21:56Z,2023-08-03T14:21:56Z,"I'd be interested in contributing toward this if that can work? Do we just need to run npm run build in the Dockerfile? esbuild or bun actually are better/faster alternatives any objection to those?
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85jL9XZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1707,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85jMF33,ditto,1664114167,1707,NA,samrose,115821,,,NA,2023-08-03T14:38:29Z,2023-08-03T14:38:29Z,...I see now this project already uses esbuild,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85jMF33/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1707,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85jMMRd,ditto,1664140381,1707,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-08-03T14:53:51Z,2023-08-03T14:53:51Z,"@samrose we would just have to adjust the Docker compose file to use the Ditto UI Image from docker hub:
https://registry.hub.docker.com/r/eclipse/ditto-ui

Same to the other services. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85jMMRd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1707,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85jMMzS,ditto,1664142546,1707,NA,samrose,115821,,,NA,2023-08-03T14:55:13Z,2023-08-03T14:55:13Z,"> @samrose we would just have to adjust the Docker compose file to use the Ditto UI Image from docker hub: https://registry.hub.docker.com/r/eclipse/ditto-ui
> 
> Same to the other services.

Now that you mention it, I think I actually did this on my own around 6 months ago in my copy. Thanks for respond to this issue. I did get it all running locally. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85jMMzS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1707,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85jM8i-,ditto,1664338110,1707,NA,thfries,20593339,Thomas Fries,,NA,2023-08-03T17:07:28Z,2023-08-03T17:07:28Z,Sounds good. Would you mind to provide a small PR for that?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85jM8i-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1707,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85jM964,ditto,1664343736,1707,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-08-03T17:12:00Z,2023-08-03T17:12:00Z,I already took the liberty of doing so .. #1711,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85jM964/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1708,https://api.github.com/repos/eclipse-ditto/ditto/issues/1708,ditto,1830843621,1708,MQTT5 - reply-to and response-required,lmussier,11352254,M. Ludo,,CLOSED,2023-08-01T09:28:04Z,2023-11-23T07:08:32Z,"Hi,

I'm exploring the messaging functionality using this page https://eclipse.dev/ditto/protocol-specification-things-messages.html#responding-to-a-message. It seems quite straightforward, but I'm wondering if it's possible to avoid using this part:

`var outboxPath = originalMessage.path.replace(""inbox"", ""outbox"");`

Based on the examples, it appears that the way a thing responds to a message is always the same and could be added to the MQTT5 binding directly. Did I miss something in the documentation? Is it not possible?

I've looked into header mapping, but since we need to replace something in the path, it doesn't seem to fit. Perhaps it's possible with a mapping context, but I couldn't find any sample code for mapping from Ditto to the target.

Thank you.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1708/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1708,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85i-ALj,ditto,1660420835,1708,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-08-01T14:15:03Z,2023-08-01T14:15:03Z,"The line

```javascript
var outboxPath = originalMessage.path.replace(""inbox"", ""outbox"");
```

should not be required. Important is only that the correlation-id is preserved in the response.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85i-ALj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1708,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85jCmlY,ditto,1661626712,1708,NA,lmussier,11352254,M. Ludo,,NA,2023-08-02T07:07:53Z,2023-08-02T07:07:53Z,"@thjaeckle my tests are not agree with you :), i might have lessed up the configuration...
My answering code is this one.

```
    def handle_live_message(self, message):

        json_payload = json.loads(message.payload.decode('utf8'))

        logger.info(f""Do we have to answer back? {json_payload['headers']['response-required']}"")

        # from https://eclipse.dev/ditto/protocol-specification-things-messages.html
        # Which is not quite https://eclipse.dev/ditto/1.5/protocol-specification.html#dittoProtocolResponse
        # SDK sample is here https://github.com/eclipse-ditto/ditto-clients-python/blob/master/examples/message_request_response_handling.py   
        # Derogation to sample      
        if json_payload['headers']['response-required']:
            logger.info(f""Answering back: こんにちは, I don't know I am only a coffee machine"")

            ditto_msg = {
                        ""topic"": f""{json_payload['topic']}"",
                        ""path"": f""{json_payload['path'].replace('inbox','outbox')}"",
                        ""status"": 200,
                        ""value"": ""こんにちは, I don't know I am only a coffee machine""
            }

            publish_properties = Properties(PacketTypes.PUBLISH)
            publish_properties.CorrelationData = message.properties.CorrelationData
            publish_properties.ContentType = ""text/plain; charset=utf-8""
            
            self.client.publish(json_payload['topic'], payload=json.dumps(ditto_msg),  properties=publish_properties)
        else:
            logger.info(f""Answering is not required"")
```

If I remove the inbox/outbox swap, ditto keeps sending the message, my guess is that it does not see ant reply coming.
The source configuration is the following:

```
            ""sources"": [
                {
                  ""addresses"": [
                    ""my.sensors/+/things/+/#""
                  ],
                  ""consumerCount"": 1,
                  ""qos"": 2,
                  ""authorizationContext"": [
                    ""nginx:ditto""
                  ],
                  ""headerMapping"": {
                    ""content-type"": ""{{header:content-type}}"",
                    ""reply-to"": ""{{header:reply-to}}"",
                    ""correlation-id"": ""{{header:correlation-id}}""
                  },
                  ""replyTarget"": {
                    ""address"": ""{{header:reply-to}}"",
                    ""headerMapping"": {
                      ""content-type"": ""{{header:content-type}}"",
                      ""correlation-id"": ""{{header:correlation-id}}""
                    },
                    ""expectedResponseTypes"": [
                      ""response"",
                      ""error""
                    ],
                    ""enabled"": true
                  }
                }
            ],
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85jCmlY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1708,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85jCni7,ditto,1661630651,1708,NA,lmussier,11352254,M. Ludo,,NA,2023-08-02T07:10:57Z,2023-08-02T07:10:57Z,"Note I have also an issue with unicode encoding. Sending back ""こんにちは, I don't know I am only a coffee machine"" is encoding correclty. But the other way around is meesedup, こんにちは is coded as ""\u3053\u3093\u306b\u3061\u306f""

I'll open another issue for this topic","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85jCni7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1709,https://api.github.com/repos/eclipse-ditto/ditto/issues/1709,ditto,1832699435,1709,input UTF-8 values are transformed to unicode code point,lmussier,11352254,M. Ludo,,OPEN,2023-08-02T08:31:09Z,2023-12-15T17:42:42Z,"Hi,

We have encountered a strange behavior when using messages for things. When sending a message through either the sandbox or the HTTP API, any UTF-8 character in the message is being transformed into what appears to be its Unicode code point.

How to reproduce?

Send a message to a thing/feature with ""こんにちは"" as the payload, with the content type set to application/json or text/plain.
Nothe this also true for keys in a json object.

```
props: [ContentType : application/vnd.eclipse.ditto+json, CorrelationData : b'89dde36c-a5cc-4b44-996a-df36604cfc39', UserProperty : [('subject', 'hello'), ('response-required', 'true')]]
payload: 
 {
  ""topic"": ""my.sensors/sensor01/things/live/messages/hello"",
  ""headers"": {
    ""version"": 2,
    ""sec-fetch-mode"": ""cors"",
    ""referer"": ""http://localhost:8080/apidoc/?url=/apidoc/openapi/ditto-api-2.yml"",
    ""x-ditto-pre-authenticated"": ""nginx:ditto"",
    ""sec-fetch-site"": ""same-origin"",
    ""accept-language"": ""en-US, en;q=0.5"",
    ""origin"": ""http://localhost:8080"",
    ""x-forwarded-for"": ""172.22.0.1"",
    ""accept"": ""*/*"",
    ""authorization"": ""Basic ZGl0dG86ZGl0dG8="",
    ""x-real-ip"": ""172.22.0.1"",
    ""x-forwarded-user"": ""ditto"",
    ""host"": ""localhost:8080"",
    ""sec-fetch-dest"": ""empty"",
    ""user-agent"": ""Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/115.0"",
    ""channel"": ""live"",
    ""timeout"": ""10"",
    ""response-required"": true,
    ""ditto-originator"": ""nginx:ditto"",
    ""requested-acks"": [],
    ""ditto-message-direction"": ""TO"",
    ""ditto-message-subject"": ""hello"",
    ""ditto-message-thing-id"": ""my.sensors:sensor01"",
    ""content-type"": ""text/plain"",
    ""timestamp"": ""2023-08-02T10:24:30.467036546+02:00"",
    ""correlation-id"": ""89dde36c-a5cc-4b44-996a-df36604cfc39""
  },
  ""path"": ""/inbox/messages/hello"",
  ""value"": ""\u3053\u3093\u306b\u3061\u306f""
}
```


","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1709/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1709,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85jFItg,ditto,1662290784,1709,NA,lmussier,11352254,M. Ludo,,NA,2023-08-02T14:13:58Z,2023-08-02T14:13:58Z,"Some additionnal tests. I got it working like like intended from a thing to ditto (exactly from a websocket listener).
The key was to set content type inside the enveloppe and not as the MQTT content type.

```
        if json_payload['headers']['response-required']:
            logger.info(f""Answering back: こんにちは, I don't know I am only a coffee machine"")

            ditto_msg = {
                ""headers"": {
                    ""content-type"": ""application/json""
                },
                ""topic"": f""{json_payload['topic']}"",
                ""path"": f""{json_payload['path'].replace('inbox','outbox')}"",
                ""status"": 418,
                ""value"": ""こんにちは, I don't know I am only a coffee machine""
            }

            publish_properties = Properties(PacketTypes.PUBLISH)
            publish_properties.CorrelationData = message.properties.CorrelationData
            publish_properties.ContentType = ""application/vnd.eclipse.ditto+json""
            
            self.client.publish(json_payload['topic'], payload=json.dumps(ditto_msg),  properties=publish_properties)
```

Doing the same thing on websocket side leads to a different behaviour , we still have the unicode point in the value.

```
import WebSocket from 'ws';

// connect to the WebSocket
const ws = new WebSocket('ws://ditto:ditto@localhost:8080/ws/2');

const ditto_msg = {
    ""topic"": ""se.etp.efr.sensors/sensor01/things/live/messages/hello"",
    ""headers"": {
        ""correlation-id"": ""my correlation id"",
        ""content-type"": ""application/json"",
    },
    ""path"": ""/inbox/messages/hello"",
    ""value"": ""こんにちは""
};

ws.on('open', function open() {
    ws.send('START-SEND-MESSAGES');
});

ws.on('message', function message(data) {
  if ( data == ""START-SEND-MESSAGES:ACK"") {
    console.log(' < received:\n %s', data);
    console.log(' > Sending :\n %s', JSON.stringify(ditto_msg, null, 2));
    ws.send(JSON.stringify(ditto_msg))
  } else {
    console.log(' < received:\n %s', JSON.stringify(JSON.parse(data), null, 2));
  }
});

ws.on('error', console.error);
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85jFItg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1710,https://api.github.com/repos/eclipse-ditto/ditto/issues/1710,ditto,1833363781,1710,Feature messages are not sent to the IoT device,dstryzhov,13381694,Den Stryzhov,den.stryzhov@gmail.com,CLOSED,2023-08-02T15:02:07Z,2023-08-09T10:02:42Z,"In our production server, we have two IoT devices with same firmware version (therefore same Ditto connectivity code).

However, when trying to send a feature message, one of them does not receive anything.

Looking at the logs for the whole Ditto cluster, there is an obvious difference - looks like in case of failing device there is no `HiveMqtt3PublisherActor` log statement forwarding the event to MQTT.

Successful feature message flow:
```
Aug 2, 2023 @ 17:10:18.612"",""2023-08-02 16:10:18,612 INFO  [9fb1b00b-e0f6-4d7e-8407-d33f701db4f9] o.e.d.c.s.m.m.h.HiveMqtt3PublisherActor akka://ditto-cluster/system/sharding/connection/17/mqtt-connection/pa/$a/c1/HiveMqtt3PublisherActor1 - Publishing mapped message of type <messages.commands:featureMessage> to PublishTarget <MqttPublishTarget [topic=devices/com.companyname/firstThingId, qos=0]>
Aug 2, 2023 @ 17:10:18.596"",""2023-08-02 16:10:18,596 INFO  [9fb1b00b-e0f6-4d7e-8407-d33f701db4f9] o.e.d.c.a.a.ConciergeForwarderActor akka://ditto-cluster/user/gatewayRoot/conciergeForwarder - Forwarding signal with ID <com.companyname:firstThingId> and type <messages.commands:featureMessage> to concierge enforcer
Aug 2, 2023 @ 17:10:18.581"",""2023-08-02 16:10:18,581 DEBUG [] a.a.ActorSystemImpl akka.actor.ActorSystemImpl(ditto-cluster) - http-request: HttpRequest(HttpMethod(POST),http://ingress.companyname.com:8080/api/2/things/com.companyname:firstThingId/features/featureName/inbox/messages/initiateFeatureFlow?timeout=20,List(Timeout-Access: <function1>, Raw-Request-URI: /api/2/things/com.companyname:firstThingId/features/featureName/inbox/messages/initiateFeatureFlow?timeout=20, X-Forwared-User: ditto, x-ditto-pre-authenticated: xxx, Host, X-Real-Ip, X-Forwarded-For, Authorization, User-Agent: PostmanRuntime/7.32.3, Accept: */*, Accept-Encoding: gzip, deflate, br),HttpEntity.Strict(application/json,25 bytes total),HttpProtocol(HTTP/1.1))
Aug 2, 2023 @ 17:10:18.578"",""2023-08-02 16:10:18,577 DEBUG [] a.a.ActorSystemImpl akka.actor.ActorSystemImpl(ditto-cluster) - http: HttpRequest(HttpMethod(POST),http://ingress.companyname.com:8080/api/2/things/com.companyname:firstThingId/features/featureName/inbox/messages/initiateFeatureFlow?timeout=20,List(Timeout-Access: <function1>, Raw-Request-URI: /api/2/things/com.companyname:firstThingId/features/featureName/inbox/messages/initiateFeatureFlow?timeout=20, X-Forwared-User: ditto, x-ditto-pre-authenticated: xxx, Host, X-Real-Ip, X-Forwarded-For, Authorization, User-Agent: PostmanRuntime/7.32.3, Accept: */*, Accept-Encoding: gzip, deflate, br),HttpEntity.Strict(application/json,25 bytes total),HttpProtocol(HTTP/1.1))

```


Failed (undelivered) feature message:

```
Aug 2, 2023 @ 17:07:47.179"",""2023-08-02 16:07:47,179 INFO  [cd82c168-914a-4c0d-bf91-4918ae599e10] o.e.d.g.s.e.d.RequestResultLoggingDirective  - StatusCode of request POST '/api/2/things/com.companyname:secondThingId/features/featureName/inbox/messages/initiateFeatureFlow?timeout=20' was: 408
Aug 2, 2023 @ 17:07:27.162"",""2023-08-02 16:07:27,160 INFO  [cd82c168-914a-4c0d-bf91-4918ae599e10] o.e.d.c.a.a.ConciergeForwarderActor akka://ditto-cluster/user/gatewayRoot/conciergeForwarder - Forwarding signal with ID <com.companyname:secondThingId> and type <messages.commands:featureMessage> to concierge enforcer
Aug 2, 2023 @ 17:07:27.144"",""2023-08-02 16:07:27,142 DEBUG [] a.a.ActorSystemImpl akka.actor.ActorSystemImpl(ditto-cluster) - http-request: HttpRequest(HttpMethod(POST),http://ingress.companyname.com:8080/api/2/things/com.companyname:secondThingId/features/featureName/inbox/messages/initiateFeatureFlow?timeout=20,List(Timeout-Access: <function1>, Raw-Request-URI: /api/2/things/com.companyname:secondThingId/features/featureName/inbox/messages/initiateFeatureFlow?timeout=20, X-Forwared-User: ditto, x-ditto-pre-authenticated: xxx, Host, X-Real-Ip, X-Forwarded-For, Authorization, User-Agent: PostmanRuntime/7.32.3, Accept: */*, Accept-Encoding: gzip, deflate, br),HttpEntity.Strict(application/json,25 bytes total),HttpProtocol(HTTP/1.1))
Aug 2, 2023 @ 17:07:27.138"",""2023-08-02 16:07:27,137 DEBUG [] a.a.ActorSystemImpl akka.actor.ActorSystemImpl(ditto-cluster) - http: HttpRequest(HttpMethod(POST),http://ingress.companyname.com:8080/api/2/things/com.companyname:secondThingId/features/featureName/inbox/messages/initiateFeatureFlow?timeout=20,List(Timeout-Access: <function1>, Raw-Request-URI: /api/2/things/com.companyname:secondThingId/features/featureName/inbox/messages/initiateFeatureFlow?timeout=20, X-Forwared-User: ditto, x-ditto-pre-authenticated: xxx, Host, X-Real-Ip, X-Forwarded-For, Authorization, User-Agent: PostmanRuntime/7.32.3, Accept: */*, Accept-Encoding: gzip, deflate, br),HttpEntity.Strict(application/json,25 bytes total),HttpProtocol(HTTP/1.1))

```


There are no visible WARN/ERROR logs in Ditto related to a specific thing ID, as well as there doesn't seem to be any indication of dropped messages by an mqtt-connection (because the failed case never reaches it as observed in connection logs).

Restart of both devices doesn't change anything.
However, there is one extra log statement found related to the failing device:

```
Aug 2, 2023 @ 17:06:51.921"",""2023-08-02 16:06:51,916 DEBUG [] a.c.sharding.Shard akka://ditto-cluster@10.250.202.15:2551/system/sharding/search-updater/15 - search-updater: Started entity [Actor[akka://ditto-cluster/system/sharding/search-updater/15/com.companyname%3AsecondThingId#-1090516814]] with entity id [com.companyname:secondThingId] in shard [15]
```

This seem to state something about shard 15, however all previous and next thingMerged messages (which work fine afaik) are using shard 17. Don't know if that's of any use.

Ditto Version Used: 2.1.2
We do not use Hono, instead relying on self-hosted VerneMQ instance to manage connectivity.

Please assist with troubleshooting this issue.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1710/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1710,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85jFml6,ditto,1662413178,1710,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-08-02T15:24:14Z,2023-08-02T15:24:14Z,"This is a really ancient Ditto version.
A lot has happened since 2.1 and trying to find the issue in that outdated Version will benefit noone. 

I would suggest to update Ditto to 3.3. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85jFml6/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1710,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85jmfIc,ditto,1671033372,1710,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-08-09T10:02:41Z,2023-08-09T10:02:41Z,Closing as outdated issue for a 2 year old Ditto version.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85jmfIc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1712,https://api.github.com/repos/eclipse-ditto/ditto/issues/1712,ditto,1843090903,1712,Patching a thing with a null value in JSON body is not reflected in the UI in real time,kosta777,23487899,Kosta Stojiljkovic,,CLOSED,2023-08-09T12:01:26Z,2023-11-03T19:18:04Z,"When sending a patch request to Ditto in a JSON merge patch format and using a null specifier to request a deletion of a JSON key from the thing, if said thing was already selected in the UI console, it does **not** get updated right away to reflect this removal. In order to see whether the removal happened, one needs to either refresh the page, or deselect and select the thing in question again.

Considering that adding or modifying things via patch requests results in the selected thing in the UI being updated right away, I suspect this could be a bug.

For example, a patch request with the following body would result in the updated ""brewingTemp"" being visible right away in the UI for the selected thing, but ""brewed-coffees"" would also be visible until a page is refreshed, or the thing was deselected and selected again.

```
{
    ""features"" : {
        ""coffee-brewer"":{
           ""properties"":{
               ""brewed-coffees"": null, //remove key
               ""brewingTemp"":87 //update value
           }
        }
    }
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1712/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1712,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85jzAp0,ditto,1674316404,1712,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-08-11T07:24:46Z,2023-08-11T07:24:46Z,"Thanks for reporting, @kosta777 

I think that is due to the nature of Ditto's [Server Sent Event](https://eclipse.dev/ditto/httpapi-sse.html#sse-api-things) API which the Ditto UI makes use of.  
When something is deleted, the SSE will only get a notification like:
```json
{}
```

What could help is to provide some kind of optional ""context"" (e.g. with the original Ditto Protocol information) when subscribing to the SSE.
I will look into this ..","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85jzAp0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1715,https://api.github.com/repos/eclipse-ditto/ditto/issues/1715,ditto,1845189163,1715,Static resources of ingress-root can't be accessed when ingress is enabled,kalinkostashki,101703236,Kalin Kostashki,,OPEN,2023-08-10T13:25:37Z,2023-08-10T13:25:37Z,"The index.html referenced and normally hosted by the nginx pod cannot be accessed when ingress is enabled and nginx disabled.

The way I see it there are a couple of ways this can be handled.

1. Remove the defaultBackend resource and try to let ingress-controller handle this
2. Create a separate nginx pod deployment for the ingress enabled case which would handle only the index.html welcome page for ditto
3. Edit the config of the existing nginx deployment in such a way that nginx is deployed but only one **location /** is present in the nginx-configmap.yaml","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1715/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1717,https://api.github.com/repos/eclipse-ditto/ditto/issues/1717,ditto,1858046377,1717,"[docs] RawMessage payload mapper expects header ""ditto-message-subject"" not ""subject"" ",dimabarbul,2970647,Dmitriy Barbul,dimabarbul@gmail.com,CLOSED,2023-08-20T08:52:13Z,2023-08-23T08:58:01Z,"[Documentation](https://eclipse.dev/ditto/connectivity-mapping.html#rawmessage-mapper) of RawMessage payload mapper refers to header ""subject"" whereas correct header name is ""ditto-message-subject"".","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1717/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1720,https://api.github.com/repos/eclipse-ditto/ditto/issues/1720,ditto,1859573706,1720,Hono connection for ditto,BHUVANESHWARI967,76557472,bhuv,,CLOSED,2023-08-21T15:03:50Z,2023-08-22T07:05:19Z,"### Discussed in https://github.com/eclipse-ditto/ditto/discussions/1719

<div type='discussions-op-text'>

<sup>Originally posted by **BHUVANESHWARI967** August 21, 2023</sup>
Hi all,

Is it possible to create a Hono connection for local ditto through kafka (without using c2e package). If there is a way can you provide me with an sample example  and steps to do so and what are the installation required apart from ditto.  </div>","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1720/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1720,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85klmsi,ditto,1687579426,1720,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-08-22T06:53:02Z,2023-08-22T06:53:02Z,"Discussion in #1719
No need for additional issue, therefore closing.. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85klmsi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1720,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85klqk7,ditto,1687595323,1720,NA,BHUVANESHWARI967,76557472,bhuv,,NA,2023-08-22T07:05:19Z,2023-08-22T07:05:19Z,"@thjaeckle Can you please take your time to answer that question, it would be helpful.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85klqk7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1721,https://api.github.com/repos/eclipse-ditto/ditto/issues/1721,ditto,1860557790,1721,"[docs] ""Default header values"" section is duplicated",dimabarbul,2970647,Dmitriy Barbul,dimabarbul@gmail.com,CLOSED,2023-08-22T05:02:28Z,2023-08-23T08:48:12Z,"On page [Acknowledgements / Quality of Service](https://eclipse.dev/ditto/basic-acknowledgements.html) there are 2 ""Default header values"" subsections under [Interaction between headers](https://eclipse.dev/ditto/basic-acknowledgements.html#interaction-between-headers).

According to git history, it looks like the correct placement for it is at the beginning of the section.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1721/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1726,https://api.github.com/repos/eclipse-ditto/ditto/issues/1726,ditto,1864534630,1726,Mongodb pod crashing for ditto version 3.3.6,BHUVANESHWARI967,76557472,bhuv,,CLOSED,2023-08-24T07:00:39Z,2023-08-25T15:00:04Z,"I'm trying to install ditto latest version using helm chart in minikube cluster, I have pulled the chart locally using,
`helm pull oci://registry-1.docker.io/eclipse/ditto`

Then tried,

```
$ helm install -n ditto my-ditto ./ditto-3.3.6.tgz --wait
Error: INSTALLATION FAILED: client rate limiter Wait returned an error: rate: Wait(n=1) would exceed context deadline
```

The mongodb pod has failed to restart continuously,
```
$ kubectl get pods -n ditto
NAME                                     READY   STATUS             RESTARTS   AGE
my-ditto-connectivity-546cb595cf-qvt2n   1/1     Running            0          12m
my-ditto-dittoui-5bf645c55f-cfjxs        1/1     Running            0          12m
my-ditto-gateway-68fb7fd975-hx726        1/1     Running            0          12m
my-ditto-mongodb-7458f7c79f-q48p8        0/1     CrashLoopBackOff   7          12m
my-ditto-nginx-9846686f5-sdhg7           1/1     Running            0          12m
my-ditto-policies-6844dc8dcc-dh9cc       1/1     Running            0          12m
my-ditto-swaggerui-549bc65fb5-5clgx      1/1     Running            0          12m
my-ditto-things-7d68fc5b94-jhcdr         1/1     Running            0          12m
my-ditto-thingssearch-55dcfdcd8d-dfg5s   1/1     Running            0          12m
```

The pod desc,

```
$ kubectl describe pod my-ditto-mongodb-7458f7c79f-q48p8 -n ditto
Name:             my-ditto-mongodb-7458f7c79f-q48p8
Namespace:        ditto
Priority:         0
Service Account:  my-ditto-mongodb
Node:             minikube/192.168.49.2
Start Time:       Thu, 24 Aug 2023 12:11:25 +0530
Labels:           app.kubernetes.io/component=mongodb
                  app.kubernetes.io/instance=my-ditto
                  app.kubernetes.io/managed-by=Helm
                  app.kubernetes.io/name=mongodb
                  helm.sh/chart=mongodb-12.1.31
                  pod-template-hash=7458f7c79f
Annotations:      <none>
Status:           Running
IP:               172.17.0.5
IPs:
  IP:           172.17.0.5
Controlled By:  ReplicaSet/my-ditto-mongodb-7458f7c79f
Containers:
  mongodb:
    Container ID:   docker://932877cda6eed39ab2dcc535a502f6e7607a7409ee2d4ace2f68381b0df05c00
    Image:          docker.io/bitnami/mongodb:5.0.10-debian-11-r3
    Image ID:       docker-pullable://bitnami/mongodb@sha256:563e1572db6c23a7bc5d8970d4cf06de1f1a80bd41c4b5e273a92bfa9f26d0f1
    Port:           27017/TCP
    Host Port:      0/TCP
    State:          Waiting
      Reason:       CrashLoopBackOff
    Last State:     Terminated
      Reason:       Error
      Exit Code:    132
      Started:      Thu, 24 Aug 2023 12:15:24 +0530
      Finished:     Thu, 24 Aug 2023 12:15:25 +0530
    Ready:          False
    Restart Count:  5
    Liveness:       exec [/bitnami/scripts/ping-mongodb.sh] delay=30s timeout=10s period=20s #success=1 #failure=6
    Readiness:      exec [/bitnami/scripts/readiness-probe.sh] delay=5s timeout=5s period=10s #success=1 #failure=6
    Environment:
      BITNAMI_DEBUG:                    false
      ALLOW_EMPTY_PASSWORD:             yes
      MONGODB_SYSTEM_LOG_VERBOSITY:     0
      MONGODB_DISABLE_SYSTEM_LOG:       no
      MONGODB_DISABLE_JAVASCRIPT:       no
      MONGODB_ENABLE_JOURNAL:           yes
      MONGODB_PORT_NUMBER:              27017
      MONGODB_ENABLE_IPV6:              no
      MONGODB_ENABLE_DIRECTORY_PER_DB:  no
    Mounts:
      /bitnami/mongodb from datadir (rw)
      /bitnami/scripts from common-scripts (rw)
      /var/run/secrets/kubernetes.io/serviceaccount from my-ditto-mongodb-token-f4zzs (ro)
Conditions:
  Type              Status
  Initialized       True 
  Ready             False 
  ContainersReady   False 
  PodScheduled      True 
Volumes:
  common-scripts:
    Type:      ConfigMap (a volume populated by a ConfigMap)
    Name:      my-ditto-mongodb-common-scripts
    Optional:  false
  datadir:
    Type:       EmptyDir (a temporary directory that shares a pod's lifetime)
    Medium:     
    SizeLimit:  <unset>
  my-ditto-mongodb-token-f4zzs:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  my-ditto-mongodb-token-f4zzs
    Optional:    false
QoS Class:       BestEffort
Node-Selectors:  <none>
Tolerations:     node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                 node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type     Reason     Age                    From               Message
  ----     ------     ----                   ----               -------
  Normal   Scheduled  5m4s                   default-scheduler  Successfully assigned ditto/my-ditto-mongodb-7458f7c79f-q48p8 to minikube
  Warning  Unhealthy  4m34s (x2 over 4m43s)  kubelet            Readiness probe failed:
  Warning  Unhealthy  4m15s                  kubelet            Readiness probe failed: /opt/bitnami/scripts/libversion.sh: line 20: 1: version is required
/opt/bitnami/scripts/libversion.sh: line 20: 1: version is required
/opt/bitnami/scripts/libversion.sh: line 20: 1: version is required
  Normal   Created  3m16s (x4 over 4m59s)  kubelet  Created container mongodb
  Normal   Started  3m12s (x4 over 4m56s)  kubelet  Started container mongodb
  Warning  BackOff  2m41s (x9 over 4m12s)  kubelet  Back-off restarting failed container
  Normal   Pulled   2m29s (x5 over 5m)     kubelet  Container image ""docker.io/bitnami/mongodb:5.0.10-debian-11-r3"" already present on machine
```

The logs are,
```
$ kubectl logs -n ditto my-ditto-mongodb-7458f7c79f-q48p8 -c mongodb
mongodb 06:53:24.20 
mongodb 06:53:24.21 Welcome to the Bitnami mongodb container
mongodb 06:53:24.22 Subscribe to project updates by watching https://github.com/bitnami/containers
mongodb 06:53:24.22 Submit issues and feature requests at https://github.com/bitnami/containers/issues
mongodb 06:53:24.23 
mongodb 06:53:24.23 INFO  ==> ** Starting MongoDB setup **
mongodb 06:53:24.24 INFO  ==> Validating settings in MONGODB_* env vars...
mongodb 06:53:24.43 WARN  ==> You set the environment variable ALLOW_EMPTY_PASSWORD=yes. For safety reasons, do not use this flag in a production environment.
mongodb 06:53:24.46 INFO  ==> Initializing MongoDB...
mongodb 06:53:24.51 INFO  ==> Deploying MongoDB from scratch...
/opt/bitnami/scripts/libos.sh: line 336:    47 Illegal instruction     (core dumped) ""$@"" > /dev/null 2>&1
```

Could anyone please help me with this?
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1726/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1726,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85kzwoP,ditto,1691290127,1726,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-08-24T08:59:37Z,2023-08-24T08:59:37Z,"Seems like a bitnami mongodb issue .. maybe this one?
https://github.com/bitnami/charts/issues/12834","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85kzwoP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1726,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85kz8bW,ditto,1691338454,1726,NA,BHUVANESHWARI967,76557472,bhuv,,NA,2023-08-24T09:29:29Z,2023-08-24T09:29:29Z,"Thank you for sharing. Yes, I think it's related to that. I'm encountering this same problem while installing cloud2edge package too.

[https://github.com/bitnami/charts/issues/12834](url)
This suggests downgrading the mongodb version, may I know which version is compatible with ditto and where should the changes be done?

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85kz8bW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1726,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85kz9Cy,ditto,1691340978,1726,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-08-24T09:31:06Z,2023-08-24T09:31:06Z,Supported MongoDB versions are [documented here](https://eclipse.dev/ditto/installation-running.html#start-ditto),"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85kz9Cy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1726,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85k0Fqc,ditto,1691376284,1726,NA,BHUVANESHWARI967,76557472,bhuv,,NA,2023-08-24T09:55:23Z,2023-08-24T09:55:23Z,"Tried making the change of version in mongodb chart, but getting the same error. Additionally added the bitnami repo and executed minikube tunnel. Is there any other file I need to make changes?

Can you please tell me what am I doing wrong? ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85k0Fqc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1726,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85k0XHI,ditto,1691447752,1726,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-08-24T10:47:36Z,2023-08-24T10:47:36Z,"> Can you please tell me what am I doing wrong?

No, you should ask MongoDB or Bitnami for MongoDB related issues","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85k0XHI/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1727,https://api.github.com/repos/eclipse-ditto/ditto/issues/1727,ditto,1864544972,1727,Add placeholder for accessing thing values in connections,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2023-08-24T07:08:12Z,2023-10-10T07:42:20Z,"Currently, connections can make use of various placeholders to e.g. construct the ""address"" (e.g. a URL) to invoke.

Example of a ""http-push"" connection target:
```json
{
  ...
  ""targets"": [{
    ""address"": ""POST:/my-endpoint/{{thing:name}}/foo/{{header:bar}}"",
    ""topics"": [""_/_/things/live/messages""],
    ""authorizationContext"": [""integration:ditto""],
    ""issuedAcknowledgementLabel"": ""live-response"",
    ""headerMapping"": {}
  }],
  ...
}
```

What however is not yet possible (without specifying a custom `JavaScript` payload mapper), is to access e.g. metadata of the thing to construct the endpoint.  

For example, if the current weather for a ""thing"" shall be retrievable by sending a message to the digital twin, it would be very convenient to just be able to configure:
```json
{
  ...
  ""targets"": [{
    ""address"": ""GET:/weather?longitude={{thing-json:attributes/location/lon}}&latitude={{thing-json:attributes/location/lat}}"",
    ""topics"": [""_/_/things/live/messages?filter=eq(topic:subject,'retrieve-weather')&extraFields=attributes/location""],
    ""authorizationContext"": [""integration:ditto""],
    ""issuedAcknowledgementLabel"": ""live-response"",
    ""headerMapping"": {}
  }],
  ...
}
```

Assuming the thing contains the longitude and latitude in its attributes like:
```json
{
  ""thingId"": ""bum:lux"",
  ""attributes"": {
    ""location"": {
      ""lon"": -77.0364,
      ""lat"": 38.8951
    }
  }
}
```

One could simply retrieve the weather of the twin by invoking:
```
POST /api/2/things/bum:lux/inbox/messages/retrieve-weather
```

In order to achieve that, we ""simply"" need a new Placeholder resolver, being able to access the thing's payload (also via `extraFields`).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1727/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1729,https://api.github.com/repos/eclipse-ditto/ditto/issues/1729,ditto,1868451066,1729,Add support for MQTT 5 message expiry interval property,dimabarbul,2970647,Dmitriy Barbul,dimabarbul@gmail.com,CLOSED,2023-08-27T10:55:40Z,2023-10-02T09:47:19Z,"[Message expiry interval](https://www.hivemq.com/blog/mqtt5-essentials-part4-session-and-message-expiry/#mqtt-5s-message-expiry-interval) property in MQTT 5 allows specifying that a message is valid for limited period of time. This allows a message broker to discard messages when the interval is up, and clients will not receive (and process) messages that are expired.

An example of such message can be live message to device that requires response. Processing such message after the timeout is unnecessary (and sometimes not desirable).

It would be nice to have special `mqtt.message-expiry-interval` (or, probably, something shorter) header that contains/sets message expiry interval property (for source and target mappings).
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1729/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1729,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85lCQJ6,ditto,1695089274,1729,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-08-28T06:23:01Z,2023-08-28T06:23:01Z,"Sounds good, but only makes sense when producing messages, so for targets.

Or can it be of use when read out from a consumed message? ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85lCQJ6/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1729,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85lDTq3,ditto,1695365815,1729,NA,dimabarbul,2970647,Dmitriy Barbul,dimabarbul@gmail.com,NA,2023-08-28T09:35:08Z,2023-08-28T09:35:08Z,"Good question. I don't have good answer though :-(

I noticed that, for example, mosquitto provides expiry interval in consumed messages properties. So I suppose that it might make sense for some scenarios.

I can't imagine such scenario, tbh, but I don't have a reason to say that it should not be available for sources.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85lDTq3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1731,https://api.github.com/repos/eclipse-ditto/ditto/issues/1731,ditto,1881232037,1731,[Helm chart] Allow otelExporterOtlpEndpoint value to contain Release/Values references,calohmn,891931,Carsten Lohmann,,CLOSED,2023-09-05T05:43:34Z,2023-09-14T15:17:48Z,"When deploying the ditto Helm chart as part of the IoT Packages cloud2edge chart, it would be useful to provide combined tracing support for Ditto and Hono. The straightforward thing to do for this, would be enabling tracing support in the Hono chart, and referencing the corresponding OTLP endpoint in the Ditto tracing configuration.
This would mean setting `ditto.global.tracing.otelExporterOtlpEndpoint` to `http://c2e-jaeger-collector:4317` for example. But this only works if the used release name when deploying the cloud2edge chart is indeed `c2e`.

To support arbitrary release names, `http://{{ .Release.Name }}-jaeger-collector:4317` would have to be used as `otelExporterOtlpEndpoint` value. 

In order for this to work, the ditto Helm chart would just need to use the `tpl` function in the place where `otelExporterOtlpEndpoint` gets used. This is a feature request for doing so.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1731/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1732,https://api.github.com/repos/eclipse-ditto/ditto/issues/1732,ditto,1883150790,1732,Twin events are not sent on same connection,dimabarbul,2970647,Dmitriy Barbul,dimabarbul@gmail.com,CLOSED,2023-09-06T04:03:51Z,2023-09-06T14:11:56Z,"I didn't find this documented, so considering it as a bug.

Twin events are not sent to the connection that triggered them. This means:
- for connections
when there is one connection that has source to update device twin and target to send twin events, twin events are not sent; if twin was updated using another connection or HTTP API, or WebSocket API, the events is sent
- for WebSocket API
commands that update device twin do not trigger sending twin events to the same connection, but trigger sending to other WebSockets and connections

For example, I have following AMQP 0.9.1 connection defined:

```json
{
  ""id"": ""amqp-twins"",
  ""connectionType"": ""amqp-091"",
  ""connectionStatus"": ""open"",
  ""uri"": ""amqp://guest:guest@rabbitmq:5672/%2F"",
  ""sources"": [
    {
      ""addresses"": [
        ""commands""
      ],
      ""qos"": 2,
      ""authorizationContext"": [
        ""nginx:ditto""
      ]
    }
  ],
  ""targets"": [
    {
      ""address"": ""/twin-events"",
      ""topics"": [
        ""_/_/things/twin/events""
      ],
      ""qos"": 2,
      ""authorizationContext"": [
        ""nginx:ditto""
      ]
    }
  ]
}
```

It reads command in Ditto protocol format from `commands` queue and sends twin events to default exchange with `twin-events` routing key (which effectively delivers them to `twin-events` queue). When I merge thing using HTTP API, I see the event sent, but not when I use `commands` queue.

I was able to replicate this behavior using MQTT 5 connection as well.

My expectation is that events should be sent always regardless of which connection or API triggered them. Or maybe this behavior is expected and is worth noting in documentation.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1732/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1732,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85lykWG,ditto,1707754886,1732,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-09-06T06:36:37Z,2023-09-06T06:36:37Z,"Hi @dimabarbul
Indeed this is intentionally done this way.
Events are not delivered to the source which caused them, as this source also gets a response confirming the command was applied.

It is easier to just create a second connection for receiving events than to filter out events which were caused ""by the source itself"" on source/client side. That was the motivation behind this. 

If it is not documented, then it should be, I agree.

Alternatively, it could be made configurable on connection and websocket level. With the default being the current behavior. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85lykWG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1732,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85l1Oyx,ditto,1708453041,1732,NA,dimabarbul,2970647,Dmitriy Barbul,dimabarbul@gmail.com,NA,2023-09-06T14:11:55Z,2023-09-06T14:11:55Z,"My bad, it's documented in basic sections: https://eclipse.dev/ditto/3.3/basic-signals.html#communication-pattern

I agree that it's clearer approach to have separate connection for events.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85l1Oyx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1733,https://api.github.com/repos/eclipse-ditto/ditto/issues/1733,ditto,1883155072,1733,JS outgoing payload mapper doesn't know if payload is base64-encoded,dimabarbul,2970647,Dmitriy Barbul,dimabarbul@gmail.com,OPEN,2023-09-06T04:07:08Z,2023-10-02T06:39:13Z,"## Summary

Live message value in JS (argument `value` in `mapFromDittoProtocolMsg` function) outgoing payload mapper is sometimes base64-encoded, sometimes not. It seems to be dependent on content-type: if payload is TEXT or JSON, then payload is left intact, otherwise it's base64-encoded. There is no way for JS mapper to know it other than check content-type.

## Details

My use case is following: I want to allow sending any headers in the message, for example, all headers starting with ""x-"" (e.g., ""x-my-header"") should be forwarded as message headers (MQTT 5 in my setup) without ""x-"" prefix (e.g., ""my-header""). The payload should not be changed. Messages might be sent with any content-type. AFAIK, the easiest way to do this is by using JS payload mapper.

I noticed that depending on content-type, that the message is sent with, its payload might be base64-encoded. Looks like, the logic for this is:

```java
    // messages/model/src/main/java/org/eclipse/ditto/messages/model/signals/commands/MessagePayloadSerializer.java
    static <T> void serialize(final Message<T> message, final JsonObjectBuilder messageBuilder,
            final Predicate<JsonField> predicate) {

        final Optional<ByteBuffer> rawPayloadOptional = message.getRawPayload();
        final Optional<T> payloadOptional = message.getPayload();
        final ContentType contentType = message.getContentType().map(ContentType::of).orElse(ContentType.of(""""));
        final JsonValue payloadValue;
        if (rawPayloadOptional.isPresent() && !payloadOptional.filter(JsonValue.class::isInstance).isPresent()) {
            final ByteBuffer rawPayload = rawPayloadOptional.get();
            if (MessageDeserializer.shouldBeInterpretedAsTextOrJson(contentType)) {
                payloadValue =
                        interpretAsJsonValue(new String(rawPayload.array(), StandardCharsets.UTF_8), contentType);
            } else {
                final ByteBuffer base64Encoded = BASE64_ENCODER.encode(rawPayload);
                payloadValue = JsonFactory.newValue(new String(base64Encoded.array(), StandardCharsets.UTF_8));
            }
        } else if (payloadOptional.isPresent()) {
            final T payload = payloadOptional.get();
            payloadValue = payload instanceof JsonValue
                    ? (JsonValue) payload
                    : interpretAsJsonValue(payload.toString(), contentType);
        } else {
            payloadValue = null;
        }
        injectMessagePayload(messageBuilder, predicate, payloadValue, message.getHeaders());
    }


    // messages/model/src/main/java/org/eclipse/ditto/messages/model/signals/commands/MessageDeserializer.java
    public static boolean shouldBeInterpretedAsTextOrJson(final ContentType contentTypeHeader) {
        return contentTypeHeader.isText() || contentTypeHeader.isJson();
    }
```

But in payload mapper there is simply no way to find out if the payload was encoded. No way other than checking content-type by itself. What I did to work this around is:

- created my own JS function (inside payload mapper code) that determines if content-type is text or json according to logic in java class ContentType
- used it to return either `textPayload` from `value` as is, or `bytePayload` as `dcodeIO.ByteBuffer.fromBase64(value).toArrayBuffer()`

## Expected Result

1. I'd like this behavior to be documented, for example under [Mapping outgoing messages](https://eclipse.dev/ditto/connectivity-mapping.html#mapping-outgoing-messages) section on Payload Mapping page.
2. It would be great to have function, e.g., Ditto.isTextContentType/Ditto.isJsonContentType, or Ditto.isPayloadBase64Encoded, that will reflect code from java class ContentType that decides parsing strategy based on content-type.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1733/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1733,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85lymRE,ditto,1707762756,1733,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-09-06T06:43:59Z,2023-09-06T06:43:59Z,"Sounds good 👍

Remark:
Your use case screams for the ""raw"" payload mapper.
Together with a header mapping configured in the target of the connection.
However, this logic ""use any header starting with x- and cut that off"" is unfortunately not doable generically in header mapping.
Only if you would already know all existing headers upfront and configure them explicity.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85lymRE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1739,https://api.github.com/repos/eclipse-ditto/ditto/issues/1739,ditto,1887929517,1739,Improve logging by adding the W3C `traceparent` header as MDC field to logs,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2023-09-08T15:48:10Z,2023-09-19T15:05:48Z,"Currently, only the ""correlation-id"" is logged to the MDC for each log-statement in Ditto.

When having [tracing](https://eclipse.dev/ditto/installation-operating.html#tracing) activated, it would be very useful to also provide the [traceparent](https://github.com/w3c/trace-context/blob/main/spec/20-http_request_header_format.md#traceparent-header), as defined by the [W3C TraceContext](https://www.w3.org/TR/trace-context/), as an MDC field.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1739/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1744,https://api.github.com/repos/eclipse-ditto/ditto/issues/1744,ditto,1889024030,1744,Optimize docker images,dimabarbul,2970647,Dmitriy Barbul,dimabarbul@gmail.com,CLOSED,2023-09-10T07:18:10Z,2023-09-14T15:16:31Z,"Following are suggestions regarding dockerfiles used to build Ditto images.

# Suggestions

## Use JRE instead of JDK

I'm not Java developer, so might miss something basic here, but isn't JRE enough to run Ditto? I tried building images locally using `eclipse-temurin:17-jre` and everything worked fine. I was able even to attach via debugger (by adding some Java parameters, of course), so it should be good for developer version (file dockerfile-snapshot) as well.

JRE image is somewhat less than JDK, so it should save some traffic and space for everyone.

## Use curl instead of wget

In dockerfile-release wget is installed and used. curl is built-in and provides needed functionality.

## Clean up after `apt-get update`

`apt-get update` downloads some information and, if not removed, it's included into final image. According to the internet, adding `rm -rf /var/lib/apt/lists/*` would be enough.

## Reuse build cache

### Split steps into reusable parts

RUN steps produce new layers. If command text matches cached layer (and if they both base on the same layer), the layer will be reused, which saves time for building and (I guess) traffic when downloading images that use the same layer.

Splitting RUN steps into static and dynamic parts will produce more layers, but layers from static commands will be resused.

### Move ARG and ENV right before where they are used

ARG and ENV implicitly invalidate cache when they change, even when they are not used. For example, running following command will build an image:

```sh
docker build - --build-arg VERSION=1 <<DF
FROM docker.io/eclipse-temurin:17-jre
ARG VERSION
RUN apt-get update
DF
```

Running the same command with same VERSION once again will reuse build cache. But if you change VERSION value, the cached layer will not be reused despite VERSION argument has not been used in the command.

# Results

`nightly` tag is the Ditto nightly image, 0-SNAPSHOT is the image I've built locally with updated dockerfile-release:

```sh
DOCKERFILE=dockerfile-release SERVICE_VERSION=0-RELEASE ./build-images.sh
```

| REPOSITORY                  | TAG        | SIZE   |
|-----------------------------|------------|--------|
| eclipse/ditto-connectivity  | 0-SNAPSHOT | 369MB  |
| eclipse/ditto-connectivity  | nightly    | 550MB  |
| eclipse/ditto-gateway       | 0-SNAPSHOT | 341MB  |
| eclipse/ditto-gateway       | nightly    | 522MB  |
| eclipse/ditto-policies      | 0-SNAPSHOT | 338MB  |
| eclipse/ditto-policies      | nightly    | 519MB  |
| eclipse/ditto-things        | 0-SNAPSHOT | 340MB  |
| eclipse/ditto-things        | nightly    | 521MB  |
| eclipse/ditto-things-search | 0-SNAPSHOT | 340MB  |
| eclipse/ditto-things-search | nightly    | 521MB  |
| eclipse/ditto-ui            | 0-SNAPSHOT | 43.6MB |
| eclipse/ditto-ui            | nightly    | 43.6MB |

# Drawbacks

## Cache

Sometimes it makes sense to build images without cache - to get fresh version of `tini`, for instance.

If you want clean build, i.e., without using cached layers, you have several options:
- add `--no-cache` option to `docker build`
- clean cached layers using `docker builder prune -f`  
warning: the command does not remove layers for existing images, so you'll need to remove all images that use the layer and then run the command

It might be good to introduce something like NO_DOCKER_CACHE variable for build-images.sh script that will pass ""--no-cache"" option if set.

In pipeline script it looks like buildx is installed right before building images, so cache should not be an issue here. Moreover, the build will build static RUN steps (like, `apt-get update && apt-get install tini`) once and then reuse them for next images which, to me, seems better then building without cache entirely and run all static RUN steps for each image.

# Links

[Best practices for writing Dockerfiles](https://docs.docker.com/develop/develop-images/dockerfile_best-practices)
[Optimizing builds with cache management](https://docs.docker.com/build/cache/)
[Layers](https://docs.docker.com/build/guide/layers/)
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1744/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1744,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85mGOO8,ditto,1712907196,1744,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-09-10T18:35:05Z,2023-09-10T18:35:05Z,"Hi @dimabarbul
I don't really agree to swap JDK out for JRE is a good idea. 

Yes, Ditto will also run with a JRE.
However, a JRE does not come with many helpful tools for eg creating heapdumps or inspecting the JVM parameters during runtime by executing into the container and eg invoking `jcmd`.

See also https://www.baeldung.com/running-jvm-diagnose

I would not want to limit these possibilities to just save some MB when pulling the first of the 6 Ditto images.

The other changes you suggest sound good :+1:","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85mGOO8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1746,https://api.github.com/repos/eclipse-ditto/ditto/issues/1746,ditto,1889053021,1746,Can't create Hono connection via Connections HTTP API POST,calohmn,891931,Carsten Lohmann,,OPEN,2023-09-10T08:42:50Z,2023-12-15T17:41:55Z,"A Hono connection requires the connection ID to be set to the ID of the Hono tenant that this connection is to be used for.

But, when trying to create a Hono connection via the Connections HTTP API, along with specifying the connection ID in the request JSON, there is an error response:
```
{
  ""status"": 400,
  ""error"": ""connectivity:id.notsettable"",
  ""message"": ""It is not allowed to provide an explicit ID for a connection."",
  ""description"": ""Remove the ID from the connection as it will be generated.""
}
```
Therefore it seems a Hono connection can't be created in the recommended way using the HTTP API. Instead, the piggyback commands API needs to be used.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1746/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1746,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85mFtPY,ditto,1712772056,1746,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-09-10T10:04:57Z,2023-09-10T10:04:57Z,"This should be possible using the PUT method and specifying the ID in the path.

But yes, same should also be possible using POST and id in payload.
That validation is outdated. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85mFtPY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1746,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85mH2qb,ditto,1713334939,1746,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-09-11T07:38:45Z,2023-09-11T07:38:45Z,"Update on this after looking into it: At least this is consistent for also creating things via `POST` and policies via `POST`.

So the current behaviour for all `POST` methods is:
* an ID is automatically created by Ditto
* if an ID is provided in the payload, a ""Bad Request"" is returned with the hint that setting the id for a newly created entity is not supported 
   * the exception texts for creating policies and things are better as they mention the HTTP verb `POST` or e.g. mention: `To provide your own Thing ID use a PUT request instead`

One could now argue that we want to allow setting the entityId in the payload of the body - which would be ok for me. But I also don't have a strong need for that.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85mH2qb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1746,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85mMfs5,ditto,1714551609,1746,NA,calohmn,891931,Carsten Lohmann,,NA,2023-09-11T20:44:02Z,2023-09-11T20:44:02Z,"Ok. Then I think it would be good to add a note in the [manage connections](https://eclipse.dev/ditto/connectivity-manage-connections.html) documentation about the possibility to use `PUT /api/2/connections/my_id` to create a connection (also adding the hint that the `If-None-Match: *` header can be used to ensure no update is done).
In the Hono-connection documentation page, this could be described as _the_ way to create the connection.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85mMfs5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1748,https://api.github.com/repos/eclipse-ditto/ditto/issues/1748,ditto,1891260851,1748,Hono connection can't be created for Hono tenant with '.' in name,calohmn,891931,Carsten Lohmann,,CLOSED,2023-09-11T21:02:10Z,2023-11-06T18:38:47Z,"When trying to create a Hono connection for a Hono tenant that contains a dot in the name (e.g. `org.eclipse.packages.c2e` as used in the IoT packages cloud2edge chart), there is an error.
```
PUT /api/2/connections/org.eclipse.packages.c2e
{""status"":400,
""error"":""connectivity:connection.id.invalid"",
""message"":""The Connection ID 'org.eclipse.packages.c2e' is not valid."",
""description"":""It must be conform to the regular expression: <[a-zA-Z0-9-_:]{1,100}>.""}
```

This limitation is currently not documented.

I wonder whether there could be an alternative way to pass on the Hono tenant ID  in the connection data.
The current way of using the connection ID also doesn't look very intuitive to me.
Wouldn't it be possible to use a connection configuration containing something like
```
""specificConfig"": {
  ""honoTenant"": ""org.eclipse.packages.c2e""
} 
```
here?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1748/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1748,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85mOETi,ditto,1714963682,1748,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-09-12T04:54:55Z,2023-09-12T04:54:55Z,"Yes, the alternative way would work well 👍 
It could fall back to the connectionId, of this is not present - in a similar way the MQTT ""clientId"" is configured.

AFAIK you are the first user of this ""hono"" connection type, @calohmn - so thanks for being the early adopter ;)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85mOETi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1752,https://api.github.com/repos/eclipse-ditto/ditto/issues/1752,ditto,1899841077,1752,provide 3D connected visualizations,j209,18129232,,,CLOSED,2023-09-17T16:34:17Z,2023-10-02T06:38:04Z,How we can integrate ditto and a 3d visualization framework?.Is it possible using ditto as backend of a 3d intractive digital twin app that uses three.js as the frontend?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1752/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1752,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85mq7Wy,ditto,1722529202,1752,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-09-17T17:48:43Z,2023-09-17T17:48:43Z,"How? Maybe someone from the community knows, but I don't.

Is it possible? Of course, anything is possible.
Looking forward on what you come up with.. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85mq7Wy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1758,https://api.github.com/repos/eclipse-ditto/ditto/issues/1758,ditto,1912620593,1758,Correct handling of special MQTT headers in MQTT 5,dimabarbul,2970647,Dmitriy Barbul,dimabarbul@gmail.com,CLOSED,2023-09-26T03:41:11Z,2023-10-05T15:44:17Z,"MQTT 5 has some special headers: mqtt.topic, mqtt.qos, mqtt.retain.

1. When I send message and set, for example, mqtt.retain header (using headerMapping or payload mapper), it will be applied (i.e., the message will be retained) **and added to MQTT user properties**. These special headers should not be added to user properties.
2. When I receive message using MQTT 5, the headers are set accordingly to message features, for example, mqtt.topic will contain topic name that the message was received on. But if the message has user property mqtt.topic, it will override special meaning of the header and contain whatever user property contains. User properties which named exactly as special MQTT headers should be ignored.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1758/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1758,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85nZ9Kv,ditto,1734857391,1758,NA,dimabarbul,2970647,Dmitriy Barbul,dimabarbul@gmail.com,NA,2023-09-26T05:32:44Z,2023-09-26T05:32:44Z,"I believe, the same should apply to correlation-id, content-type and reply-to headers in consumed messages.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85nZ9Kv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1758,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ngwTg,ditto,1736639712,1758,NA,dimabarbul,2970647,Dmitriy Barbul,dimabarbul@gmail.com,NA,2023-09-27T04:07:38Z,2023-09-27T04:07:38Z,"I've found [comment](https://github.com/eclipse-ditto/ditto/blob/b80497dfc6cc87839d19143f0b9ddc995edfea4f/connectivity/service/src/main/java/org/eclipse/ditto/connectivity/service/messaging/mqtt/hivemq/publishing/ExternalMessageToMqttPublishTransformer.java#L50) about known MQTT headers in outgoing message stating that they weren't removed because it would break functionality for users who already depend on it:

```java
    /*
     * Actually it would be correct to also include MqttHeader.MQTT_TOPIC,
     * MqttHeader.MQTT_QOS and MqttHeader.MQTT_RETAIN in the set of the known
     * MQTT header names because they are already dedicated properties in the
     * MQTT Publish.
     * However, as the named headers were included in user properties
     * up to the present, there might be users who rely on their presence.
     * Excluding the headers from user properties would then break
     * functionality.
     */
```

@thjaeckle, should feature toggle be introduced, e.g., ditto.connectivity.feature.mqtt-known-headers-in-user-properties-enabled?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ngwTg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1758,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85n39yI,ditto,1742724232,1758,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-10-02T09:54:34Z,2023-10-02T09:54:34Z,"> @thjaeckle, should feature toggle be introduced, e.g., ditto.connectivity.feature.mqtt-known-headers-in-user-properties-enabled?

Oh, yes .. indeed - I vaguely remember discussing that some time ago.
Controlling it with a feature toggle would make sense, yes.

We have already some feature toggles defined here - so I would prefer to add the feature toggle in the same way.
https://github.com/eclipse-ditto/ditto/blob/2c94cc284c8d7250af9596e4d4a4c51748799dd7/internal/utils/config/src/main/resources/ditto-devops.conf#L10-L23

Here is how feature toggles are evaluated currently:
https://github.com/eclipse-ditto/ditto/blob/master/base/model/src/main/java/org/eclipse/ditto/base/model/signals/FeatureToggle.java","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85n39yI/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1758,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85n3-Cr,ditto,1742725291,1758,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-10-02T09:55:23Z,2023-10-02T09:55:23Z,@dimabarbul would you like to provide this for Ditto 3.4.0 (which we want to release in the next 1-2 weeks)?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85n3-Cr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1758,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85n9Q8t,ditto,1744113453,1758,NA,dimabarbul,2970647,Dmitriy Barbul,dimabarbul@gmail.com,NA,2023-10-03T03:38:45Z,2023-10-03T03:38:45Z,"Yes, I would love to.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85n9Q8t/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1761,https://api.github.com/repos/eclipse-ditto/ditto/issues/1761,ditto,1921342243,1761,Apply custom JS payload mapper for responses of Http endpoints in http-push connections,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2023-10-02T06:48:32Z,2023-10-02T06:48:32Z,"Currently, the HTTP response of a managed http connection can be used as response to a message forwarded by Ditto to that foreign endpoint.

Payload mapping can even be used to alter the request payload.
The response payload, however, can not be altered currently.

In oder to be able to do that, the `target` of a Http push connection would have to define a response payload mapper.
In case of JS mapper, we need a new function, mapping from externalMessage to externalMessage. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1761/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1762,https://api.github.com/repos/eclipse-ditto/ditto/issues/1762,ditto,1924468026,1762,Update to Kamon 2.6.4,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2023-10-03T16:06:40Z,2023-10-04T08:59:37Z,"Which adds support for Pekko:
https://github.com/kamon-io/Kamon/releases/tag/v2.6.4

I think we don't use automatic akka/pekko and -http instrumentation yet. 

But it would be good to have latest&greatest and the option to add instrumentation. 
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1762/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1767,https://api.github.com/repos/eclipse-ditto/ditto/issues/1767,ditto,1931265190,1767,MQTT 5 messages sent when Ditto was not connected are not processed,dimabarbul,2970647,Dmitriy Barbul,dimabarbul@gmail.com,CLOSED,2023-10-07T08:55:45Z,2023-11-29T20:40:27Z,"Messages that are sent to MQTT 5 broker (I used mosquitto) are delivered to Ditto, but are not processed.

Setup:
- running Ditto
- running MQTT 5 broker, e.g. mosquitto
- MQTT 5 connection that, for example, updates device twin, with following config:
    - static specificConfig.clientId
    - specificConfig.cleanSession = false
    - qos 1 or 2 in source

Steps:
- close connection, for example, using HTTP API  
    ```shell
    curl -u devops:foobar http://localhost:8080/api/2/connections/<CONN_ID>/command -d connectivity.commands:closeConnection -H 'content-type: text/plain'
    ```
- send MQTT 5 message that should lead to device twin updated, with QoS 1 or 2
- open connection, for example, using HTTP API  
    ```shell
    curl -u devops:foobar http://localhost:8080/api/2/connections/<CONN_ID>/command -d connectivity.commands:openConnection -H 'content-type: text/plain'
    ```

Connection I used to test:

```json
{
    ""connectionType"": ""mqtt-5"",
    ""connectionStatus"": ""open"",
    ""uri"": ""tcp://mosquitto:1883"",
    ""specificConfig"": {
        ""clientId"": ""ditto"",
        ""cleanSession"": false
    },
    ""sources"": [
        {
            ""addresses"": [ ""data"" ],
            ""qos"": 2,
            ""authorizationContext"": [""nginx:ditto""],
            ""payloadMapping"": [""js-data""]
        },
        {
            ""addresses"": [ ""ditto"" ],
            ""qos"": 2,
            ""authorizationContext"": [""nginx:ditto""]
        }
    ],
    ""targets"": [],
    ""mappingDefinitions"": {
        ""js-data"": {
            ""mappingEngine"": ""JavaScript"",
            ""options"": {
                ""incomingScript"": "" function mapToDittoProtocolMsg( headers, textPayload, bytePayload, contentType) { return Ditto.buildDittoProtocolMsg( 'test', 'thing-01', 'things', 'twin', 'commands', 'merge', '/features/mqtt/properties/data', { 'content-type': 'application/merge-patch+json' }, { headers, contentType, textPayload, }); }"",
                ""outgoingScript"": """"
            }
        }
    }
}
```

Messages I sent:

```shell
# update device twin using JS payload mapper
mosquitto_pub -V mqttv5 -t data -m $RANDOM -q 2
# update device twin using Ditto payload mapper
mosquitto_pub -V mqttv5 -t ditto -m '{ ""topic"": ""test/thing-01/things/twin/commands/merge"", ""headers"": {""Content-Type"": ""application/merge-patch+js
on""}, ""path"": ""/features/mqtt/properties/ditto"", ""value"": { ""random"": '$RANDOM' } }' -D publish content-type 'application/merge-patch+json' -q 2
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1767/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1767,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85obBqH,ditto,1751915143,1767,NA,dimabarbul,2970647,Dmitriy Barbul,dimabarbul@gmail.com,NA,2023-10-08T04:16:09Z,2023-10-08T04:16:09Z,"I've sent 1 message while connection was closed. Here are logs from mosquitto when I send command openConnection:

```text
1696738117: New connection from 172.18.0.8:58714 on port 1883.
1696738118: Client <unknown> closed its connection.
1696738118: New connection from 172.18.0.8:58728 on port 1883.
1696738118: New client connected from 172.18.0.8:58728 as ditto (p5, c0, k60).
1696738118: No will message specified.
1696738118: Sending CONNACK to ditto (1, 0)
1696738118: Sending PUBLISH to ditto (d0, q2, r0, m7, 'data', ... (4 bytes))
1696738118: Received PUBREC from ditto (Mid: 7)
1696738118: Sending PUBREL to ditto (m7)
1696738118: Received PUBCOMP from ditto (Mid: 7, RC:0)
1696738118: Received SUBSCRIBE from ditto
1696738118: 	data (QoS 2)
1696738118: ditto 2 data
1696738118: Sending SUBACK to ditto
1696738118: Received SUBSCRIBE from ditto
1696738118: 	data (QoS 2)
1696738118: ditto 2 data
1696738118: Sending SUBACK to ditto
1696738118: Received SUBSCRIBE from ditto
1696738118: 	ditto (QoS 2)
1696738118: ditto 2 ditto
1696738118: Sending SUBACK to ditto
1696738118: Received SUBSCRIBE from ditto
1696738118: 	ditto (QoS 2)
1696738118: ditto 2 ditto
1696738118: Sending SUBACK to ditto
```

According to the logs, messages are delivered and acknowledged before Ditto subscribes to topics. My guess is that it is how MQTT 5 protocol works - when you connect to existing session, you get messages, that are awaiting for you, right after the connection is established.

Another strange thing is the first 2 lines - some connection is opened and closed before connection with client ID ditto is established.

The last one strange thing is that Ditto subscribes twice for each topic.

Those strange things are definitely out of scope of this ticket, but they might provide some clue.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85obBqH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1767,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85obVxx,ditto,1751997553,1767,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-10-08T10:57:38Z,2023-10-08T10:57:38Z,"Hi @dimabarbul .
I just saw the 2 issues you created.
Does this one here also happen when there is only 1 source in the connection?

Maybe both issues share the problem with more than 1 source? ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85obVxx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1767,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85obf0W,ditto,1752038678,1767,NA,dimabarbul,2970647,Dmitriy Barbul,dimabarbul@gmail.com,NA,2023-10-08T14:13:58Z,2023-10-08T14:13:58Z,"Unfortunately, this happens when there is only one source as well.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85obf0W/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1767,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ofCGt,ditto,1752965549,1767,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-10-09T12:58:22Z,2023-10-09T12:58:22Z,"Both issues are likely bugs in Ditto's MQTT implementation.
This was rewritten to use the [reactive API of the HiveMQ MQTT Client](https://github.com/hivemq/hivemq-mqtt-client#reactive-api) in Ditto 3.0.0.

We also faced some problems with the HiveMQ MQTT client, e.g.: https://github.com/hivemq/hivemq-mqtt-client/issues/544
So I would also not rule out a client problem. 

Unfortunately, the Ditto committer who is most experienced on the MQTT implementation is no longer contributing actively to Ditto and I currently don't find time to deep dive into it as well.

So I will mark the issues as ""help wanted"" and hope for contributions.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ofCGt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1767,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85pIHuR,ditto,1763736465,1767,NA,dimabarbul,2970647,Dmitriy Barbul,dimabarbul@gmail.com,NA,2023-10-16T05:10:49Z,2023-10-16T05:10:49Z,"As the changes are quite risky, it would be great to cover existing and new functionality with tests that ensures correct work with real mqtt broker (I can't think of a way to test this using unit tests), so I'd like to have an integration or system test:
- integration test: we run mqtt broker, e.g., mosquitto, and test some actor/actors with real mqtt connection
- system test: we spin up whole ditto installation, mqtt broker etc. and test the scenarios we need.

I'd like the first approach, because integration test would be faster and we'd be able to cover more scenarios. I see that there is test code that launches mongo DB, so it looks okay to have such kind of tests. Also having tests in this repo will confirm that the functionality works as expected when doing later changes by running PR checks, without need to remember to run system tests manually.
Having system test is also okay, as to me, especially if such base setup already exists (I guess, repo [ditto-testing](https://github.com/eclipse-ditto/ditto-testing) is exactly for this).

@thjaeckle , what do you think will be better approach?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85pIHuR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1767,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85pIbsa,ditto,1763818266,1767,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-10-16T06:34:51Z,2023-10-16T06:34:51Z,"@dimabarbul I would normally use the `ditto-testing` repo which you pointed out.  
The only problem with that is, that we do not have a runner capable of running those tests - the infrastructure by the Eclipse Foundation is too limited to run the system-tests.  

The colleagues from Bosch still have an internal CI where they can run the tests.

Locally, you should be able to run the tests as well - however the system-tests for the ""connectivity"" part of Ditto are quite complex (with a lot of inheritance), so it is also not quite easy ..

Therefore an integration test, spinning up an MQTT broker, would likely be the easier approach.  
And you're right, we already have tests spinning up MongoDB as well.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85pIbsa/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1768,https://api.github.com/repos/eclipse-ditto/ditto/issues/1768,ditto,1931673160,1768,Ditto does not acknowledge QoS 1 or 2 messages for MQTT 5 when there are several sources,dimabarbul,2970647,Dmitriy Barbul,dimabarbul@gmail.com,CLOSED,2023-10-08T06:47:22Z,2023-12-02T08:54:46Z,"Ditto does not acknowledge QoS 1 or 2 messages for MQTT 5 when there are several sources.

Setup:

- running Ditto
- running MQTT 5 broker, e.g. mosquitto
- MQTT 5 connection that, for example, updates device twin, with following config:
    - static specificConfig.clientId
    - qos 2 in source

Steps:
- send MQTT 5 message that should lead to device twin updated, with QoS 1 or 2

    ```shell
    # data topic
    mosquitto_pub --id CLI -V mqttv5 -t data -m $RANDOM -q 1
    # ditto topic
    mosquitto_pub --id CLI -V mqttv5 -t ditto -m '{""topic"":""test/thing-01/things/twin/commands/merge"", ""headers"": {""content-type"":""application/merge-patch+json""}, ""path"":""/features/ditto/properties/value"", ""value"":'$RANDOM'}' -q 2
    ```

Relevant logs from mosquitto:

```text
1696746966: New connection from 127.0.0.1:36164 on port 1883.
1696746966: New client connected from 127.0.0.1:36164 as CLI (p5, c1, k60).
1696746966: No will message specified.
1696746966: Sending CONNACK to CLI (0, 0)
1696746966: Received PUBLISH from CLI (d0, q2, r0, m1, 'data', ... (5 bytes))
1696746966: Sending PUBREC to CLI (m1, rc0)
1696746966: Received PUBREL from CLI (Mid: 1)
1696746966: Sending PUBLISH to ditto (d0, q2, r0, m27, 'data', ... (5 bytes))
1696746966: Sending PUBCOMP to CLI (m1)
1696746966: Received DISCONNECT from CLI
1696746966: Client CLI disconnected.
...
1696747363: New connection from 127.0.0.1:44862 on port 1883.
1696747363: New client connected from 127.0.0.1:44862 as CLI (p5, c1, k60).
1696747363: No will message specified.
1696747363: Sending CONNACK to CLI (0, 0)
1696747363: Received PUBLISH from CLI (d0, q2, r0, m1, 'ditto', ... (170 bytes))
1696747363: Sending PUBREC to CLI (m1, rc0)
1696747363: Received PUBREL from CLI (Mid: 1)
1696747363: Sending PUBLISH to ditto (d0, q2, r0, m36, 'ditto', ... (170 bytes))
1696747363: Sending PUBCOMP to CLI (m1)
1696747363: Received DISCONNECT from CLI
1696747363: Client CLI disconnected.
```

Note that there is no acknowledgement from client ""ditto"".

Connection I used to test:

```json
{
    ""connectionType"": ""mqtt-5"",
    ""connectionStatus"": ""open"",
    ""uri"": ""tcp://mosquitto:1883"",
    ""specificConfig"": {
        ""clientId"": ""ditto""
    },
    ""sources"": [
        {
            ""addresses"": [ ""data"" ],
            ""qos"": 2,
            ""authorizationContext"": [""nginx:ditto""],
            ""payloadMapping"": [""js-data""]
        },
        {
            ""addresses"": [ ""ditto"" ],
            ""qos"": 2,
            ""authorizationContext"": [""nginx:ditto""]
        }
    ],
    ""targets"": [],
    ""mappingDefinitions"": {
        ""js-data"": {
            ""mappingEngine"": ""JavaScript"",
            ""options"": {
                ""incomingScript"": "" function mapToDittoProtocolMsg( headers, textPayload, bytePayload, contentType) { return Ditto.buildDittoProtocolMsg( 'test', 'thing-01', 'things', 'twin', 'commands', 'merge', '/features/mqtt/properties/data', { 'content-type': 'application/merge-patch+json' }, { headers, contentType, textPayload, }); }"",
                ""outgoingScript"": """"
            }
        }
    }
}
```

If I leave only one source, everything works fine:

```text
1696747104: New connection from 127.0.0.1:40848 on port 1883.
1696747104: New client connected from 127.0.0.1:40848 as CLI (p5, c1, k60).
1696747104: No will message specified.
1696747104: Sending CONNACK to CLI (0, 0)
1696747104: Received PUBLISH from CLI (d0, q2, r0, m1, 'data', ... (4 bytes))
1696747104: Sending PUBREC to CLI (m1, rc0)
1696747104: Received PUBREL from CLI (Mid: 1)
1696747104: Sending PUBLISH to ditto (d0, q2, r0, m28, 'data', ... (4 bytes))
1696747104: Sending PUBCOMP to CLI (m1)
1696747104: Received DISCONNECT from CLI
1696747104: Client CLI disconnected.
1696747104: Received PUBREC from ditto (Mid: 28)
1696747104: Sending PUBREL to ditto (m28)
1696747104: Received PUBCOMP from ditto (Mid: 28, RC:0)
```
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1768/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1768,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85tKexT,ditto,1831464019,1768,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-11-29T08:49:09Z,2023-11-29T08:49:09Z,"@dimabarbul could you verify if this bug is now also resolved with #1794 being merged?
The latest `nightly` tag on Docker Hub should contain the fix.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85tKexT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1768,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85tf0LX,ditto,1837056727,1768,NA,dimabarbul,2970647,Dmitriy Barbul,dimabarbul@gmail.com,NA,2023-12-02T06:14:27Z,2023-12-02T06:14:27Z,"The bug is fixed in nightly and 3.4.2 images, but not in 3.4.1, which I guess is expected.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85tf0LX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1768,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85tf85b,ditto,1837092443,1768,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-12-02T08:54:46Z,2023-12-02T08:54:46Z,Great to hear. Thank you again for the fix :+1: ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85tf85b/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1770,https://api.github.com/repos/eclipse-ditto/ditto/issues/1770,ditto,1933599800,1770,Create compound wildcard index when running with MongoDB >= 7.0,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2023-10-09T18:36:35Z,2025-01-27T18:45:03Z,"MongDB 7.0 adds support for [compound wildcard indexes](https://www.mongodb.com/docs/v7.0/core/indexes/index-types/index-wildcard/index-wildcard-compound/#search-using-the-attribute-pattern).
This can be utilized for the Ditto search index in the way that e.g. the namespace (being part of the top level search index) may be used in combination with the wildcard index.

Or even the global reads..

That should be a great option to optimize query performance when specifying a namespace, doing search queries. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1770/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1770,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86ahV-M,ditto,2592432012,1770,NA,alstanchev,50709547,Aleksandar Stanchev,,NA,2025-01-15T11:20:39Z,2025-01-15T11:20:39Z,"Hi, @thjaeckle i am looking in to that issue and wanted to know your opinion if only the namespace should be included in a new index (which will be quite easy) or maybe there will be some benefit in an optional static configuration in which we can define specific fields to be added to a compound wildcard index?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86ahV-M/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1770,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86aiYFr,ditto,2592702827,1770,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2025-01-15T12:34:02Z,2025-01-15T12:34:02Z,"I am not quite sure myself ..
It would be of course more flexible to have it configurable and only as default have `_namespace` + wildcard on everything.  
That way someone could e.g. also only index `_namespace` + all thing attributes only.

I also don't have experience on how this would influence query performance - maybe it would be good to test manually defining such a compound index to a big dataset and check if query performance is really improved when querying with a namespace.  
So before implementing adding the index in Ditto test the index manually. :)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86aiYFr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1770,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86b6gc9,ditto,2615805757,1770,NA,alstanchev,50709547,Aleksandar Stanchev,,NA,2025-01-27T13:45:54Z,2025-01-27T13:45:54Z,"I have tried to evaluate possible benefits of that feature but with no success.
First evaluated compound wildcard index:

> '_namespace'
> '$**',
> wildcardProjection:
> {       
>    _id: 0,       gr: 0,       _revision: 0,       policyId: 0,       __policyRev: 0,       p: 0,       'f.p': 0     }
> }

It was performing much worse than the current clean $**.
Also since the occasional slow queries are involving lots of verifications on authorization subjects of fields.
mostly the fields involved are: 

> gr: 1
> p.features.featureId.·g: 1
> p.features.featureId.properties.propValue.·r: 1
> p.features.featureId.properties.·r: 1
> p.features.featureId.·r: 1
> t.features.featureId.properties.propValue: 1

so to cover them an index that covers:
""gr"" and with a wildcard for the (`""p.features.featureId.$*"", ""f.features.$*""`) or (`""p.features.featureId.$*"", ""f.features.featureId.$*""`)  would be nice but gr is an array and arrays can't be used with compound wildcard indexes.

For now i will not look in to it more.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86b6gc9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1770,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86b9m1I,ditto,2616618312,1770,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2025-01-27T18:44:55Z,2025-01-27T18:44:55Z,"Thanks for checking this @alstanchev
I would say then we close this issue for now.. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86b9m1I/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1775,https://api.github.com/repos/eclipse-ditto/ditto/issues/1775,ditto,1944874481,1775,Link to documentation broken on ditto webpage,bs-jokri,13886571,Johannes Kristan,,CLOSED,2023-10-16T10:20:36Z,2023-10-18T13:18:44Z,"The link to the documentation in the upper menu 
<img width=""156"" alt=""image"" src=""https://github.com/eclipse-ditto/ditto/assets/13886571/cade1c88-d12c-427e-aacd-31e4c3f8feca"">
https://eclipse.dev/ditto/intro-overview.html

is routing to a non-existing page
<img width=""566"" alt=""image"" src=""https://github.com/eclipse-ditto/ditto/assets/13886571/52445b0b-9a44-4588-9bcb-de6f7d2d2296"">


The link needs to be fixed to route to the documentation page
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1775/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1775,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85pJ62R,ditto,1764208017,1775,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-10-16T10:48:27Z,2023-10-16T10:48:27Z,"Known issue for all Eclipse project websites .. the Eclipse Foundation should be aware of it and fix it:
https://gitlab.eclipse.org/eclipsefdn/helpdesk/-/issues/3832

The letsencrypt certificate had a ""until"" date dated yesterday.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85pJ62R/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1775,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85paFFS,ditto,1768444242,1775,NA,bs-jokri,13886571,Johannes Kristan,,NA,2023-10-18T13:18:44Z,2023-10-18T13:18:44Z,"Ah gtk. Thanks for responding anyway! And it works again, btw.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85paFFS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1778,https://api.github.com/repos/eclipse-ditto/ditto/issues/1778,ditto,1949687742,1778,[Helm] Put x-ditto-pre-authenticated and X-Forwarded-User to ingress.api.annotations,mladBlum,45092755,Dominik Mlasko,,CLOSED,2023-10-18T12:55:33Z,2023-11-03T19:22:42Z,"I would suggest to add 
```
proxy_set_header X-Forwarded-User $remote_user;
proxy_set_header x-ditto-pre-authenticated ""nginx:$remote_user"";
```
directly in the default values.yaml at ingress.api.annotations.

Currently they are configured within the ingress.controller. I think the majority of the Kubernetes clusters out there have already set up a working nginx ingress controller for multiple different applications. If an additional application will be installed its normally a straight forward process of editing the values.yaml and make some minor configurations at the ingress section.
But with ditto it is currently not as straight forward as it could be because you have to figure out that these two headers have to be added.

I am not a full-time Kubernetes admin and it is possible that I make incorrect assumptions, please correct me if that is the case.

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1778/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1778,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85pcXan,ditto,1769043623,1778,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-10-18T17:47:27Z,2023-10-18T17:47:27Z,"Sure, we can do that.

The nginx based authentication is simple and easy and was originally intended for local development and demo setups, I honestly did never see it being used in real productive scenarios.
But maybe I have higher security requirements than others.

Remember: the ""s"" in ""IoT"" stands for security 😉

So please provide a PR if that helps you using the Helm chart. 👍","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85pcXan/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1780,https://api.github.com/repos/eclipse-ditto/ditto/issues/1780,ditto,1960663709,1780,Retrieving closed connections by tag fails,alstanchev,50709547,Aleksandar Stanchev,,CLOSED,2023-10-25T06:45:53Z,2023-10-25T13:17:32Z,"Trying to retrieve a closed connection by tag with SudoRetrieveConnectionIdsByTag fails because the ""connectionClosed"" event persisted in the ""connection_journal"" does not contain tags and leads to skipping them.
 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1780/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1789,https://api.github.com/repos/eclipse-ditto/ditto/issues/1789,ditto,1969820825,1789,Mqtt5 reply-to header lost,alstanchev,50709547,Aleksandar Stanchev,,CLOSED,2023-10-31T07:31:48Z,2023-10-31T11:54:20Z,"In MQTT5 headers are lost from the userProperties which leads to missing replies.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1789/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1789,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85qhIdR,ditto,1787070289,1789,NA,alstanchev,50709547,Aleksandar Stanchev,,NA,2023-10-31T11:54:14Z,2023-10-31T11:54:14Z,Invalid,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85qhIdR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1790,https://api.github.com/repos/eclipse-ditto/ditto/issues/1790,ditto,1970286353,1790,"Using wildcard in ""put-metadata"" header for PATCH / MergeThing command adds the metadata also for non-affected fields",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2023-10-31T11:48:36Z,2024-09-26T13:11:08Z,"When e.g. using the following `put-metadata` header:
```json
[{""key"":""*/createdAt"",""value"": ""now!""}]
```

On a HTTP request:
```
PATCH /api/2/things/my:thing-1
```

E.g. sending the payload:
```json
{
  ""attributes"": {
    ""only-one"": 2
  }
}
```

Will also lead to all existing fields in the Thing getting the metadata, e.g. as in:
```json
{
  ""_metadata"": {
    ""thingId"": {
        ""createdAt"": ""now!""
    },
    ""policyId"": {
        ""createdAt"": ""now!""
    },
    ""attributes"": {
        ""only-one"": {
            ""createdAt"": ""now!""
        }
    }
  }
}
```

That is unexpected and should instead only modify the metadata of the provided fields to ""PATCH"".","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1790/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1790,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85sr6rV,ditto,1823451861,1790,NA,sejal-bansal,13705025,Sejal Bansal,sejalbansal5@gmail.com,NA,2023-11-22T20:15:36Z,2023-11-22T20:15:36Z,@thjaeckle I would like to work on this issue. Could you please assign it to me?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85sr6rV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1790,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85sr8C8,ditto,1823457468,1790,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-11-22T20:20:46Z,2023-11-22T20:20:46Z,"@sejal-bansal cool, thanks
This however is probably not trivial to fix, I would assume. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85sr8C8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1790,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85uwpvV,ditto,1858247637,1790,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-12-15T17:41:19Z,2023-12-15T17:41:19Z,@sejal-bansal any update here? Do you work on this or shall I unassign the issue again? ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85uwpvV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1790,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C859MBBD,ditto,2100301891,1790,NA,kulta4,148374362,,,NA,2024-05-08T10:50:39Z,2024-05-08T10:50:39Z,"Hi @thjaeckle, @sejal-bansal!
         I tried UpdateTwinWithLiveResponse mapper, [{""key"":""*/updated-via"",""value"":""device-live-response""}] in put-metadata. I am facing error ""message"": ""The wildcard expression '/*/updated-via' in header 'put-metadata' is not valid."",
how to fix this and I want to get the detailed implementation to achieve this in doc i have seen {
  ""dittoHeadersForMerge"": {
    ""if-match"": ""*"",
    ""response-required"": false,
    ""put-metadata"": [
      {""key"":""*/updated-by"",""value"":""{{ request:subjectId }}""},
      {""key"":""*/updated-via"",""value"":""device-live-response""},
      {""key"":""*/update-hint"",""value"":""{{ header:some-custom-hint }}""},
      {""key"":""*/updated-at"",""value"":""{{ time:now }}""}
    ]
  }
} this much config example was there. can anyone help to do this properly","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C859MBBD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1795,https://api.github.com/repos/eclipse-ditto/ditto/issues/1795,ditto,1978791669,1795,Issue in Jenkins_multibranch_pipeline.,Korakbhakta02,67550363,,,CLOSED,2023-11-06T10:25:18Z,2023-11-06T13:50:36Z,"[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  16:22 min (Wall Clock)
[INFO] Finished at: 2023-11-06T06:06:36Z
[INFO] ------------------------------------------------------------------------
[WARNING] The requested profile ""ditto"" could not be activated because it does not exist.
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-deploy-plugin:3.1.1:deploy (default-deploy) on project ditto: Failed to deploy artifacts: Could not transfer artifact org.eclipse.ditto:ditto:pom:0-main-20231106.055013-1 from/to repo.eclipse.org (https://repo.eclipse.org/content/repositories/ditto-snapshots/): authentication failed for https://repo.eclipse.org/content/repositories/ditto-snapshots/org/eclipse/ditto/ditto/0-main-SNAPSHOT/ditto-0-main-20231106.055013-1.pom, status: 401 Unauthorized -> [Help 1]

This issue is being faced when I am trying to build the pipeline. It is during the ""build"" stage:

 stage('Build') {
            agent {
                docker {
                    args ""--privileged -u root""
                    image ""maven:3.8.4-openjdk-17""
                    reuseNode true
                }
            }
            steps {
                configFileProvider([configFile(fileId: 'mvn-bdc-settings', variable: 'MVN_SETTINGS')]){
                    sh ""mvn -s $MVN_SETTINGS  clean deploy javadoc:jar source:jar "" +
                               ""-T1C --batch-mode --errors "" +
                               ""-Pditto "" +
                               ""-Drevision=${theVersion} "" +
                               ""${params.EXTRA_MAVEN_ARGS ?: ''}""
               } 
            }
            post {
                always {
                    junit allowEmptyResults: true, testResults: ""**/test-reports/*.xml,**/**/target/surefire-reports/*.xml,**/**/**/target/surefire-reports/*.xml,**/**/**/target/failsafe-reports/*.xml,**/**/target/failsafe-reports/*.xml""
                }
            }
        }

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1795/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1795,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85q-BHr,ditto,1794642411,1795,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-11-06T11:45:21Z,2023-11-06T11:45:21Z,"Hi @Korakbhakta02
This pipeline is not intended for building Ditto, but for building feature branches.

In order to build Ditto, please refer to the [README.md](https://github.com/eclipse-ditto/ditto/blob/master/README.md). Section ""Development Guide"". ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85q-BHr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1795,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85q-pSi,ditto,1794806946,1795,NA,Korakbhakta02,67550363,,,NA,2023-11-06T13:17:05Z,2023-11-06T13:17:05Z,"Does the feature branches means things,thing search,etc? And also when I build the jenkins_multibranch_pipeline script, it gives authentication error for repo.eclipse.org?what are the credentials to be set in the config file for the authentication?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85q-pSi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1795,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85q-4iJ,ditto,1794869385,1795,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-11-06T13:50:23Z,2023-11-06T13:50:23Z,"As I said:
> This pipeline is not intended for building Ditto, but for building feature branches.

Please don't use this `jenkins_multibranch_pipeline` file as Jenkins pipeline. It is for (Bosch) internal use only.
No, feature branches do not mean things,thing search, etc.

As I said:
> In order to build Ditto, please refer to the [README.md](https://github.com/eclipse-ditto/ditto/blob/master/README.md). Section ""Development Guide"".","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85q-4iJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1797,https://api.github.com/repos/eclipse-ditto/ditto/issues/1797,ditto,1984074489,1797,Multiple sort options in combinations with cursor fails. Invalid handling of comma.,alstanchev,50709547,Aleksandar Stanchev,,CLOSED,2023-11-08T17:22:39Z,2023-11-09T07:17:41Z,"A search query that uses nore than one sort property is not handled properly **_sort(-attributes/type,+features/some),size(200),cursor(...)_**.

In the case where there is no cursor there is no error. But in case a cursor is included the problem manifests.

In [ThingSearchRoute](https://github.com/eclipse-ditto/ditto/blob/d008959c019a966af0c1b152c12f953002669c58/gateway/service/src/main/java/org/eclipse/ditto/gateway/service/endpoints/routes/thingsearch/ThingSearchRoute.java#L122C59-L122C59) in the [calculateOptions](https://github.com/eclipse-ditto/ditto/blob/d008959c019a966af0c1b152c12f953002669c58/gateway/service/src/main/java/org/eclipse/ditto/gateway/service/endpoints/routes/thingsearch/ThingSearchRoute.java#L203) method options are parsed by comma which leads to incorectly dividing the **sort** part and leading to 
`{
    ""status"": 400,
    ""error"": ""thing-search:search.option.invalid"",
    ""message"": ""Invalid input '+', expected Sort, Limit, Cursor or Size (line 1, column 35):\nsort(-/attributes/type,+/thingId),+thingId),size(2),cursor(....)\n,
    ""description"": ""At least one provided option is invalid.""
}`","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1797/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1797,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85rb8IU,ditto,1802486292,1797,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-11-08T19:05:49Z,2023-11-08T19:05:49Z,"@alstanchev do you expect to provide a fix soon? #1798 is really a blocker for us, so I would want to quickly build a 3.4.1 bugfix release.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85rb8IU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1797,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85rcf8t,ditto,1802633005,1797,NA,alstanchev,50709547,Aleksandar Stanchev,,NA,2023-11-08T20:32:39Z,2023-11-08T20:32:39Z,"Yes, it is ready. Just want to wait for the system tests to be sure. Will push it tomorrow.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85rcf8t/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1801,https://api.github.com/repos/eclipse-ditto/ditto/issues/1801,ditto,1986353427,1801,HonoConnection config missing trusted certificates configuration,calohmn,891931,Carsten Lohmann,,CLOSED,2023-11-09T20:28:25Z,2023-11-30T10:23:45Z,"When configuring a Kafka connection, the `ca` property can be used to set the trusted certificates for server certificate validation.

For a Hono Connection, where the Kafka-server related configuration is done as part of the connectivity service configuration, a `ca` property currently can't be set.

To let the Hono Connection be used as an alternative to a Kafka connection for connecting to Hono, such a property configuration option should be added.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1801/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1803,https://api.github.com/repos/eclipse-ditto/ditto/issues/1803,ditto,1988782253,1803,Docker container log file fills up disk,marioverhaeg,46836831,,,CLOSED,2023-11-11T06:34:58Z,2023-12-15T12:54:28Z,"Hi,
I'm running Ditto based on the docker compose script. After a while my disk is running out of disk space. This seems to be related to the size of the log file. This is growing without limits in all containers.

-rw-r----- 1 root root 11750122173 Nov 11 07:28 0d86f44b961c545a6b4eb00e1ef627dfecc5d33af025748b5e33a3f6abdb6c87-json.log
drwx------ 2 root root        4096 Oct 27 10:09 checkpoints
-rw------- 1 root root        7319 Nov 11 07:28 config.v2.json
-rw-r--r-- 1 root root        1552 Nov 11 07:28 hostconfig.json
-rw-r--r-- 1 root root          13 Oct 27 10:09 hostname
-rw-r--r-- 1 root root         174 Oct 27 10:09 hosts
drwx--x--- 3 root root        4096 Oct 27 10:09 mounts
-rw-r--r-- 1 root root          38 Oct 27 10:09 resolv.conf
-rw-r--r-- 1 root root          71 Oct 27 10:09 resolv.conf.hash

In this container it has grown over 11GB.

Docker compose has ways to limit log file consumption. Would it be possible to embed this?
https://stackoverflow.com/questions/31829587/docker-container-logs-taking-all-my-disk-space

Mario","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1803/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1803,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85rsYCM,ditto,1806794892,1803,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-11-11T11:47:37Z,2023-11-11T11:47:37Z,"Hi.
If course, if this helps you, a Pull Request is welcome.
I do not really expect docker compose to be used for productive scenarios, but we will accept contributions improving on that. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85rsYCM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1803,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85rtPby,ditto,1807021810,1803,NA,marioverhaeg,46836831,,,NA,2023-11-12T06:46:52Z,2023-11-12T06:46:52Z,"Hi Thomas,
That will be my first PR ever, but I'll take your suggestion as a small challenge :-) . I'll do some testing first and will come back to this.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85rtPby/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1803,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85tQ8Z8,ditto,1833158268,1803,NA,marioverhaeg,46836831,,,NA,2023-11-30T06:02:20Z,2023-11-30T06:02:20Z,"Hi Thomas,
I followed the contribution guide and created PR: #1831 . Please let me know if this is the right way to contribute. Thanks!","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85tQ8Z8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1803,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85uvGIR,ditto,1857839633,1803,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-12-15T12:54:12Z,2023-12-15T12:54:12Z,Closed via #1831,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85uvGIR/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1804,https://api.github.com/repos/eclipse-ditto/ditto/issues/1804,ditto,1988942944,1804,Enhance Ditto search to be able to query for equality of JsonObjects + JsonArrays,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2023-11-11T13:12:17Z,2024-06-26T15:10:04Z,"Currently, it is only possible to query e.g. for `eq` using scalar Json values, like Json String, Number, Boolean.

It would also be very useful to e.g. query for equality of full Json Objects, e.g. like:
```
eq(attributes/location,{""longitude"":23.12313,""latitude"":52.23123})
```

Also helpful would e.g. be the search for empty JsonObjects or JsonArrays, e.g.:
```
eq(attributes/errors,[])

ne(attributes/location,{})
```

Predicates which could support this:
* `eq`
* `ne`
* `in` ?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1804/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1804,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85yEBH5,ditto,1913655801,1804,NA,Abhijeetmishr,43075376,Abhijeet Mishra,abhijeetmishra498@gmail.com,NA,2024-01-28T16:42:12Z,2024-01-28T16:42:12Z,Hi @thjaeckle can I work on this ?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85yEBH5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1804,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85yFuxT,ditto,1914104915,1804,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-01-29T07:24:57Z,2024-01-29T07:24:57Z,"@Abhijeetmishr sure, that would be great. You already collected some experience enhancing the RQL with `ilike`, right?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85yFuxT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1804,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85yGqUI,ditto,1914348808,1804,NA,Abhijeetmishr,43075376,Abhijeet Mishra,abhijeetmishra498@gmail.com,NA,2024-01-29T10:00:34Z,2024-01-29T10:00:34Z,"> @Abhijeetmishr sure, that would be great. You already collected some experience enhancing the RQL with `ilike`, right?

@thjaeckle Yes Thomas you are right.
I will be sharing my approach soon with you. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85yGqUI/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1804,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85yQhBn,ditto,1916932199,1804,NA,Abhijeetmishr,43075376,Abhijeet Mishra,abhijeetmishra498@gmail.com,NA,2024-01-30T14:04:13Z,2024-01-30T14:04:13Z,"Hi @thjaeckle Thomas, 
Basically we wanted all the predicates to accept JsonObject and Arrays inplace of JsonValue.
![image](https://github.com/eclipse-ditto/ditto/assets/43075376/146a1f0b-b632-4761-9fb2-167e63ec648f)

But I wanted to understand the whole code flow before jumping to the implementation part how can I test it ?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85yQhBn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1804,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85yRj8_,ditto,1917206335,1804,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-01-30T15:27:17Z,2024-01-30T15:27:17Z,"@Abhijeetmishr no, not all predicates .. as mentioned in the description this only makes sense for:
> Predicates which could support this:
> * `eq`
> * `ne`
> * `in` ?

You cannot compare if a JsonObject is ""greater than"" another JsonObject in a meaningful way.

How to test?
E.g. via `ThingPredicatePredicateVisitorTest` for the Java based predicate evaluation.
For the Mongo BSON based ones, the `SearchActorIT` is probably the unit test of choice to e.g. enhance then..","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85yRj8_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1806,https://api.github.com/repos/eclipse-ditto/ditto/issues/1806,ditto,1990765463,1806,"Provide configurable Prometheus metrics exporters, counting defined search queries",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2023-11-13T14:23:53Z,2023-11-30T11:32:03Z,"Idea:
It is often useful to provide certain statistics about the amount of ""Things"" managed within Ditto, for example:
* displaying the total amount of currently Things being in a ""ERROR"" state
* displaying the total amount of provisioned Things
* displaying the total of Things which were not yet ""connected""
* ...

In order to provide this kind of information e.g. to display on a Grafana dashboard, an idea would be to provide those as `DittoMetrics`.
This would provide metrics complementing Ditto's [exported metrics for operating Ditto](https://eclipse.dev/ditto/installation-operating.html#gathered-metrics) - on the same Prometheus endpoint to be scraped by Prometheus - directly from the ""things-search"" service in Ditto.

The idea is that a Ditto operator/admin can then configure ""searches"" in e.g. the search configuration `search.conf`, e.g. providing a label.
Rough idea:
```hocon
operator-metrics {

  scrape-interval = 15m

  produced_cars = {
    namespaces = [
      ""io.acme.corp.cars""
    ]
    rql = ""exists(attributes/manufactured)""
  }
  errors_in_lamps = {
    scrape-interval = 1m
    namespaces = [
      ""io.acme.corp.bulbs"",
      ""io.acme.corp.leds""
    ]
    rql = ""and(eq(attributes/type,'LIGHT_BULB'),in(features/health/properties/state,'CRITICAL','ERROR'))""
  }
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1806/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1809,https://api.github.com/repos/eclipse-ditto/ditto/issues/1809,ditto,2001375742,1809,Enhancement Proposal: Addressing Operations Tab UI Issue with Logger Creation and Level Buttons,aitiqad,82869880,Sohel Kabir Rana,,CLOSED,2023-11-20T05:06:19Z,2023-11-27T19:43:00Z,"There is an issue with the Operations tab UI. I am uncertain whether you have intentionally retained this feature. In the text field for adding a new logger, I suggest disabling the level buttons. I observed that, even when the text box is empty, it is possible to send a PUT request using the buttons, thereby creating an empty logger with associated levels.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1809/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1809,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85sYSau,ditto,1818306222,1809,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-11-20T06:32:43Z,2023-11-20T06:32:43Z,"That seems not to be wanted, indeed.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85sYSau/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1809,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85sgJN7,ditto,1820365691,1809,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-11-21T07:22:29Z,2023-11-21T07:22:29Z,"@aitiqad why did you close the issue? 
I agree that this can be improved by not allowing to click the ""level"" buttons when no text is in the box yet.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85sgJN7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1809,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85sgKNI,ditto,1820369736,1809,NA,aitiqad,82869880,Sohel Kabir Rana,,NA,2023-11-21T07:26:17Z,2023-11-21T07:26:17Z,"I thought, since you have taken this issue into account, I would go ahead and close it.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85sgKNI/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1809,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85sgT8q,ditto,1820409642,1809,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-11-21T07:59:42Z,2023-11-21T07:59:42Z,"Since it is not fixed and I also do not plan on working on a fix, we will keep this issue open.

Also a good issue to fix for a small contribution.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85sgT8q/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1809,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85sr56S,ditto,1823448722,1809,NA,sejal-bansal,13705025,Sejal Bansal,sejalbansal5@gmail.com,NA,2023-11-22T20:12:44Z,2023-11-22T20:12:44Z,@aitiqad @thjaeckle I would like to work on this issue. Could you please assign it to me?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85sr56S/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1809,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85s4ZRZ,ditto,1826722905,1809,NA,thfries,20593339,Thomas Fries,,NA,2023-11-26T08:34:34Z,2023-11-26T08:34:34Z,"Hello @sejal-bansal,
sorry I was not aware that this issue is assigned. It was not my intention to surge ahead. Apologize. I was focusing on that one because it is rated as bug.
@thjaeckle, I'd better in future ask for assignment before working on tickets.

once again, sorry","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85s4ZRZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1809,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85s47fe,ditto,1826863070,1809,NA,sejal-bansal,13705025,Sejal Bansal,sejalbansal5@gmail.com,NA,2023-11-26T18:30:57Z,2023-11-26T18:30:57Z,@thfries Thanks for the update. ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85s47fe/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1809,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85s7l_T,ditto,1827561427,1809,NA,aitiqad,82869880,Sohel Kabir Rana,,NA,2023-11-27T10:29:22Z,2023-11-27T10:29:22Z,@thjaeckle I also would like clarification on the basic use of the Operations tab. Could you provide me with some information or documentation on it?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85s7l_T/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1809,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85s7reO,ditto,1827583886,1809,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-11-27T10:44:04Z,2023-11-27T10:44:04Z,"@aitiqad the UI is a ""helper"" to send [DevOps commands](https://eclipse.dev/ditto/installation-operating.html#devops-commands), also sometimes referred to as [piggyback commands](https://eclipse.dev/ditto/installation-operating.html#piggyback-commands).

The Operations tab also allows easily adjusting the [log levels dynamically](https://eclipse.dev/ditto/installation-operating.html#dynamically-adjust-log-levels).

I am afraid there is no documentation on the UI itself.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85s7reO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1809,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85s7v0I,ditto,1827601672,1809,NA,aitiqad,82869880,Sohel Kabir Rana,,NA,2023-11-27T10:55:02Z,2023-11-27T10:55:02Z,"> @aitiqad the UI is a ""helper"" to send [DevOps commands](https://eclipse.dev/ditto/installation-operating.html#devops-commands), also sometimes referred to as [piggyback commands](https://eclipse.dev/ditto/installation-operating.html#piggyback-commands).
> 
> The Operations tab also allows easily adjusting the [log levels dynamically](https://eclipse.dev/ditto/installation-operating.html#dynamically-adjust-log-levels).
> 
> I am afraid there is no documentation on the UI itself.

Thank you for the Info @thjaeckle ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85s7v0I/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1811,https://api.github.com/repos/eclipse-ditto/ditto/issues/1811,ditto,2005049829,1811,"UI: Provide message templates based on WoT model ""actions""",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2023-11-21T20:10:18Z,2024-01-30T09:43:01Z,"When fully embracing using WoT ThingModels to define the capabilities of things, it would be really powerful if the Ditto UI would not only show the ""WoT TD"" in a tab, but also use the TD to present the user the available ""actions"" to invoke on a thing and on a feature level.

The WoT TD ""action"" should define all we need:
* action name is the ""message subject""
* from the ""title"" and ""description"" the Ditto UI could show a small ""help"" about the action
* ""input"" is the request payload and includes a JsonSchema which the Ditto UI could 
   * provide a ""JSON skeleton"" for with default values to quickly see what fields are there and which data type they have
   * validate input based on the schema 

This would be an example ""action"" containing ""title"", ""description"" and ""input"" with a very simple payload (an ""integer""):
https://github.com/eclipse-ditto/ditto-examples/blob/82451ac0b510e34bb5409cdf9128e7d315965931/wot/models/switchable-1.0.0.tm.jsonld#L30-L38","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1811/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1818,https://api.github.com/repos/eclipse-ditto/ditto/issues/1818,ditto,2010955486,1818,UI: Add search filter option to incoming messages and connection logs,thfries,20593339,Thomas Fries,,CLOSED,2023-11-26T08:45:26Z,2024-01-25T16:57:01Z,"In order to analyze and navigate in long lists of incoming message table and also in connection logs, it would be good to have a search filter in top of the table

example filters for connection logs:
- `direction:inbound type:consumed level:success`
- `timestamp<1.1.2900`
- `correlationId:4711`
- `thingId:234235`

example filters for incoming messages:
- feature path that was updated if you want to watch a specific feature
- ?

The filter should be easily filled by e.g clicking on the connection metrics or somehow on the correlationId/thingId of one log entry.
In case of incoming messages the filter should be set somehow by selecting a feature.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1818/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1818,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85s4b4q,ditto,1826733610,1818,NA,thfries,20593339,Thomas Fries,,NA,2023-11-26T09:27:59Z,2023-11-26T09:27:59Z,"@thjaeckle, pls assign this issue to me. Thanks","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85s4b4q/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1818,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85s4gol,ditto,1826753061,1818,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-11-26T11:04:17Z,2023-11-26T11:04:17Z,"@thfries good idea, I also was thinking about that.
For the incoming messages, you could even provide an RQL expression and do server side filtering (when opening the SSE / EventSource).

Eg in order to receive all updates to a certain feature only:
```
exists(feature/important)
```
Problematic is that you will miss updates to all other features and cannot simply change the filter to show eg already received updates of other features. 

Benefit is that this is super efficient and also makes use of the same RQL as for the search. 

I assume you want to do client side filtering?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85s4gol/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1818,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85s4mqU,ditto,1826777748,1818,NA,thfries,20593339,Thomas Fries,,NA,2023-11-26T12:57:27Z,2023-11-26T12:57:27Z,"Yes, I just thought about client side filtering - for the same reason as you mentioned. I see the purpose more like a log for debugging. So you don't know before what you are searching for. I thought already that it is a drawback that you need to select the thing before that you want to ""watch"".

Since the fix for #1712, the SSE has become verbose. I remember now that before we merged the ""delta"" into the known state of the thing on the client-side.

Can you nowadays still see what part of the Thing was modified? We have a lot of different components on the edge that in parallel update different features of a thing, so it was nice to see the deltas only. So you can better debug what the edge components are doing (if they update full features or modify only the relevant part of a feature.

So I would argue that also for that reason it would make sense to reduce the SSE events as much as possible to the modification that happened to the Thing. Don't know if #1712 can still be fixed with that condition.

Btw. I am evaluating different options for the filtering. Next to plain javascript, Lodash would provide some support (which is no longer used) and also JSONata looks interesting. Currently I tend to plain javascript. Any recommendation or opinion from your side?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85s4mqU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1818,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85s4q17,ditto,1826794875,1818,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-11-26T14:10:26Z,2023-11-26T14:10:26Z,"> Can you nowadays still see what part of the Thing was modified? We have a lot of different components on the edge that in parallel update different features of a thing, so it was nice to see the deltas only. So you can better debug what the edge components are doing (if they update full features or modify only the relevant part of a feature.

> So I would argue that also for that reason it would make sense to reduce the SSE events as much as possible to the modification that happened to the Thing. Don't know if #1712 can still be fixed with that condition.

We would still be able to do that by not selecting all fields of the thing as ""extraFields"". The benefits of selecting all the fields is that Ditto can correctly merge in the backend. Which is just not possible in the frontend one, because of deletions via PATCH, which don't show up in the delta.
So #1712 can't be fixed if reverting to the old behavior. 

We could either make the behavior configurable (per environment for example or directly on the things page) or we could even subscribe for 2 event streams, one with complete thing for the json and features views and editors. And one for the incoming messages at the bottom. 

By the way: with Ditto 3.4, selecting the new ""Context only"" option at the incoming messages select will show only the delta, available in ""_context/value"". 
That's why I added the select in the first place, because I could also no longer quickly see the delta. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85s4q17/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1818,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85tevV_,ditto,1836774783,1818,NA,thfries,20593339,Thomas Fries,,NA,2023-12-01T21:04:34Z,2023-12-01T21:04:34Z,"Hi @thjaeckle,
understood the _context now. Works good. Let s keep it as is for now.
Did you notice that the feature list is changing the order in case of incoming SSE? May be we should sort the feature list by name to avoid this?

Btw. JSONPath seems to do the job 😀
<img width=""471"" alt=""image"" src=""https://github.com/eclipse-ditto/ditto/assets/20593339/6b7d91b8-a7d6-4220-a07d-afefd46e53b5"">
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85tevV_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1818,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85tfBZQ,ditto,1836848720,1818,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-12-01T22:12:05Z,2023-12-01T22:12:05Z,"
> Did you notice that the feature list is changing the order in case of incoming SSE? May be we should sort the feature list by name to avoid this?

Yes, I did notice and I am still wondering if this is useful or annoying 🤔
You will get the most recently updated feature sorted at the top of the list, which is sometimes really useful 😉","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85tfBZQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1818,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85vTJIy,ditto,1867289138,1818,NA,thfries,20593339,Thomas Fries,,NA,2023-12-22T06:20:19Z,2023-12-22T06:20:19Z,"Hi @thjaeckle,

after observing it for a while: It is definitely annoying imho. 😀
If you like that info for ""latest updated"", we may add a new marker next to the feature name. We could even count the number of updates per feature with a badge and highlight the latest one in a different color.

wdyt?
 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85vTJIy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1818,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85vTM5n,ditto,1867304551,1818,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-12-22T06:44:54Z,2023-12-22T06:44:54Z,"@thfries good morning :)
Yes, I have to agree - it is annoying and confusing to always search an expected feature at a different place.

Maybe highlighting with a color could work well, yes ..
E.g. for the table cell background do a background color with opacity depending on the most recent updated - e.g. color the 5 most recently updated features - the most recent one having the strongest opacity and the least recently updated of the 5 having the weakest opacity.

On the other hand, a badge might probably be less ""intrusive"".","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85vTM5n/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1819,https://api.github.com/repos/eclipse-ditto/ditto/issues/1819,ditto,2010958401,1819,UI: improve keyboard navigation,thfries,20593339,Thomas Fries,,OPEN,2023-11-26T08:56:14Z,2023-11-26T11:05:34Z,"Keyboard navigation can be improved in the UI.

Observed issues:
- tables should support `up` and `down` keys to navigate in things, features and most of all: messages and log entries
- tab navigation in the input areas is not working
    - order of input fields in the different CRUD editors is not considered
    - `esc` key should work to cancel a CRUD editor
    - `enter` key should work to trigger create or update in a CRUD editor 
    - same for the send message UIs: navigate with `tab` in the different input fields and `enter` key to trigger send
- introduce hotkeys to switch tabs, e.g. to switch details and manage and message

Implementation note for the table keys: Optionally a refactoring would make sense for all the tables: create a web component for the tables and move all table related functions from `Utils` to this new component. Solve the key navigation in this new component. May be that is worth a separate ticket. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1819/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1820,https://api.github.com/repos/eclipse-ditto/ditto/issues/1820,ditto,2010966359,1820,UI: (for discussion) Add a map view,thfries,20593339,Thomas Fries,,OPEN,2023-11-26T09:23:58Z,2024-01-12T08:59:29Z,"One nice feature to visualize some of the concepts:

Add a new tab on the right of the Things table. Display a map on this tab
On the map, show markers for things in the things search if they have a ""known"" position feature. This could be...
- A geojson. May be a feature with a definition that refers to the geojson RFC
- A known WoT model for geolocation?
You could do a search for things that have this feature.
Update the markers on SSE updates (moving / rotating things)

Allow to select a thing by clicking on the marker.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1820/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1820,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85s4nKq,ditto,1826779818,1820,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-11-26T13:05:51Z,2023-11-26T13:05:51Z,"For location aware things and use cases this is surely a great addition.

Some thoughts:
- it would have to be configurable via environment if this map widget shall be shown or not
   - to not clutter the UI for use cases which are not aware of thing locations
- the expected location format could be configurable also via the environment
   - eg by defining either which ""feature name"" or ""definition"" shall be used to extract the geo coordinates
   - and by configuring (eg with json pointer) which json fields to extract latitude and longitude from
   - those location information could also even be a part of the thing attributes. Often location of devices does not change once installed, so I would put it into attributes (static metadata) 

Ditto currently lacks however any ""Geo"" features, like eg searching for things within a given radius of a geolocation.
Which could be expected when showing a map 😉🤔","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85s4nKq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1820,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85s4oRb,ditto,1826784347,1820,NA,thfries,20593339,Thomas Fries,,NA,2023-11-26T13:25:42Z,2023-11-26T13:25:42Z,"Fully agree.
It does raise further expectations. So it does not really fit / it should not be there.
Spontaneous thought: Do not include it into the Ditto UI but provide some plug-in / extension point. Then create it even in a separate project like ""examples"" or ""showcases"".

That could also make sense for other customized UIs for features: If a feature knows its definition, there could be also a customized editor for that feature (which has to be somewhere else). This sounds like a micro-frontend approach.

may be better convert this issue to a discussion 😉","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85s4oRb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1820,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85tPBSH,ditto,1832653959,1820,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-11-29T20:29:18Z,2023-11-29T20:29:18Z,"@thfries yes, such an micro-frontend or component approach would be really great to have to be able to fully customize the UI.
I however fear that this might be ""out of scope"" for a Developer and Admin UI - and more targets other usergroups.

Maybe this can still be combined in the Explorer UI, but this surely needs the ability for much customization.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85tPBSH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1820,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85wCoLX,ditto,1879737047,1820,NA,thfries,20593339,Thomas Fries,,NA,2024-01-06T15:56:29Z,2024-01-06T15:56:29Z,"Hi @thjaeckle, 

you are right, the target user group need to be considered.
Initially I thought about a separate dedicated example ui project.
But on the other hand, there are currently already two different user groups addressed. I personally never use the operations tab, so this addresses a ""ditto operator"" rather than a ""ditto admin"".
A environment has already some support for this, by hiding tabs that are not needed.

So a valid option would be to increase the ability to customize in the existing UI. As discussed, domain specific and ditto independent code must be kept separately.

All together, rather long term ideas...
Better start to leverage WoT based general supporting features like proposed in #1811 
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85wCoLX/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1820,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85wkyQl,ditto,1888691237,1820,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-01-12T08:59:28Z,2024-01-12T08:59:28Z,"Yes, customising the existing UI (maybe even with the help of WoT models for ""providing"" separate ""widgets"" based on certain models or even semantic types/units) would be really a long term goal :) ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85wkyQl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1821,https://api.github.com/repos/eclipse-ditto/ditto/issues/1821,ditto,2011036889,1821,UI - Bug: Piggyback commands cause 401 error when you start the UI,thfries,20593339,Thomas Fries,,CLOSED,2023-11-26T13:12:24Z,2023-11-29T20:39:46Z,"The piggyback commands try to load the services on startup of the UI. As piggyback requires devops user and devops is not used at startup, this always fails with one 401 error.

`await loadServicesAndInstances();` should not be called in `ready` directly. Instead it should be wrapped in a `TabHandler`. This makes sure that it will be called when you activate the tab and also makes sure that devops user is set.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1821/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1825,https://api.github.com/repos/eclipse-ditto/ditto/issues/1825,ditto,2013899189,1825,Background Sync not syncing entities,alstanchev,50709547,Aleksandar Stanchev,,CLOSED,2023-11-28T08:23:11Z,2023-11-28T08:25:25Z,"The issue arises when there are many (in the case where the bug was hit from 7k entities 6k were marked as DELETED) snapshot 
with DELETED __lifecycle. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1825/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1825,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85tCT2d,ditto,1829322141,1825,NA,alstanchev,50709547,Aleksandar Stanchev,,NA,2023-11-28T08:25:00Z,2023-11-28T08:25:00Z,fixed in: PR #1824 ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85tCT2d/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1826,https://api.github.com/repos/eclipse-ditto/ditto/issues/1826,ditto,2014417002,1826,"When enriching signals (e.g. events/messages) with `extraFields`, duplicate paths lead to not all fields to be enriched",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2023-11-28T13:16:44Z,2023-11-30T10:18:39Z,"When using [signal enrichment](https://eclipse.dev/ditto/basic-enrichment.html), e.g. in connections or websockets to receive additional fields to the actually changes ones, it leads to unexpected problems when e.g. selecting the following  `extraFields`:
```
features/operationalMode/properties/configuration/mode
features/{{feature:id}}/properties/configuration
```
In this example, `{{feature:id}}` would also resolve to `operationalMode`.

We encountered that in such a case, only the first field will be enriched, the `features/{{feature:id}}/properties/configuration` will be ignored. Changing the order does not make a difference.

The cause is not yet really clear to me - maybe because of the `{{feature:id}}` placeholder or maybe because `configuration/mode` is a part of `configuration`.

Has to be investigated in order to fix.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1826/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1827,https://api.github.com/repos/eclipse-ditto/ditto/issues/1827,ditto,2016441538,1827,internal server error when fetching ditto connections via the api,JeffreyThijs,8981372,,,OPEN,2023-11-29T12:05:45Z,2024-01-29T08:10:17Z,"We upgraded recently from ditto 3.3.7 to 3.4.1 and we encounter the following exception when fetching all full connections via the connection api:

```
curl http://ditto-nginx:8080/api/2/connections --user ""devops:mypassword"" -s | jq
{
  ""status"": 500,
  ""error"": ""connectivity:internalerror"",
  ""message"": ""There was a rare case of an unexpected internal error."",
  ""description"": ""Please contact the service team.""
}
```

When i add the `ids-only` or `fields=id` query parameter it correctly returns a list of the ditto connections (with only the id of course), but any additional or other fields yield the same error message. In the logs of both ditto-gateway and ditto-connectivity is see nothing that indicates that something is going wrong. Maybe https://github.com/eclipse-ditto/ditto/commit/bedaaee80d093b1b577a84bce4511ce9bb096a17 introduced this problem?

If you need more info, please let me know.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1827/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1827,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85tOyo2,ditto,1832593974,1827,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-11-29T19:43:39Z,2023-11-29T19:43:39Z,"Hi @JeffreyThijs 

Some logs would be nice, e.g. of `gateway` and `connectivity` service.
Maybe there event is a stacktrace?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85tOyo2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1827,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85tRWH8,ditto,1833263612,1827,NA,JeffreyThijs,8981372,,,NA,2023-11-30T07:50:57Z,2023-11-30T07:50:57Z,"Found following stacktrace in the gateway:

```
kb logs -l ""app.kubernetes.io/name=ditto-gateway"" -f | grep -i 'ConnectionNotAccessibleException' | jq                                                                                                                                       (dev/aloxy)
{
  ""@timestamp"": ""2023-11-30T08:49:19.926+01:00"",
  ""@version"": ""1"",
  ""message"": ""Received response <{}> from connectivity.service."",
  ""logger_name"": ""org.eclipse.ditto.gateway.service.endpoints.actors.DittoConnectionsRetrievalActor"",
  ""thread_name"": ""Thread-52011"",
  ""level"": ""DEBUG"",
  ""level_value"": 10000,
  ""stack_trace"": ""org.eclipse.ditto.connectivity.model.signals.commands.exceptions.ConnectionNotAccessibleException: The Connection with ID '327bfa0b-1984-4c50-8700-9adb1579e6e1' could not be found or requester had insufficient permissions to access it.\n\tat org.eclipse.ditto.connectivity.model.signals.commands.exceptions.ConnectionNotAccessibleException$Builder.doBuild(ConnectionNotAccessibleException.java:119)\n\tat org.eclipse.ditto.connectivity.model.signals.commands.exceptions.ConnectionNotAccessibleException$Builder.doBuild(ConnectionNotAccessibleException.java:101)\n\tat org.eclipse.ditto.base.model.exceptions.DittoRuntimeExceptionBuilder.build(DittoRuntimeExceptionBuilder.java:176)\n\tat org.eclipse.ditto.base.model.exceptions.DittoRuntimeException.fromJson(DittoRuntimeException.java:245)\n\tat org.eclipse.ditto.connectivity.model.signals.commands.exceptions.ConnectionNotAccessibleException.fromJson(ConnectionNotAccessibleException.java:84)\n\tat jdk.internal.reflect.GeneratedMethodAccessor14.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.eclipse.ditto.base.model.signals.AnnotationBasedJsonParsable.parse(AnnotationBasedJsonParsable.java:94)\n\tat org.eclipse.ditto.base.model.signals.AbstractJsonParsableRegistry.fromJson(AbstractJsonParsableRegistry.java:97)\n\tat org.eclipse.ditto.base.model.signals.AbstractJsonParsableRegistry.lambda$parse$0(AbstractJsonParsableRegistry.java:79)\n\tat org.eclipse.ditto.base.model.exceptions.DittoJsonException.wrapJsonRuntimeException(DittoJsonException.java:161)\n\tat org.eclipse.ditto.base.model.signals.AbstractJsonParsableRegistry.parse(AbstractJsonParsableRegistry.java:78)\n\tat org.eclipse.ditto.base.model.signals.GlobalErrorRegistry.parse(GlobalErrorRegistry.java:91)\n\tat org.eclipse.ditto.base.model.signals.GlobalErrorRegistry.parse(GlobalErrorRegistry.java:36)\n\tat org.eclipse.ditto.internal.utils.cluster.AbstractJsonifiableWithDittoHeadersSerializer.deserializeJson(AbstractJsonifiableWithDittoHeadersSerializer.java:423)\n\tat org.eclipse.ditto.internal.utils.cluster.AbstractJsonifiableWithDittoHeadersSerializer.createJsonifiableFrom(AbstractJsonifiableWithDittoHeadersSerializer.java:325)\n\tat org.eclipse.ditto.internal.utils.cluster.AbstractJsonifiableWithDittoHeadersSerializer.tryToCreateKnownJsonifiableFrom(AbstractJsonifiableWithDittoHeadersSerializer.java:296)\n\tat org.eclipse.ditto.internal.utils.cluster.AbstractJsonifiableWithDittoHeadersSerializer.fromBinary(AbstractJsonifiableWithDittoHeadersSerializer.java:273)\n\tat org.apache.pekko.serialization.Serialization.deserializeByteBuffer(Serialization.scala:279)\n\tat org.apache.pekko.remote.MessageSerializer$.deserializeForArtery(MessageSerializer.scala:111)\n\tat org.apache.pekko.remote.artery.Deserializer$$anon$3.onPush(Codecs.scala:683)\n\tat org.apache.pekko.stream.impl.fusing.GraphInterpreter.processPush(GraphInterpreter.scala:555)\n\tat org.apache.pekko.stream.impl.fusing.GraphInterpreter.processEvent(GraphInterpreter.scala:506)\n\tat org.apache.pekko.stream.impl.fusing.GraphInterpreter.execute(GraphInterpreter.scala:400)\n\tat org.apache.pekko.stream.impl.fusing.GraphInterpreterShell.runBatch(ActorGraphInterpreter.scala:662)\n\tat org.apache.pekko.stream.impl.fusing.GraphInterpreterShell$AsyncInput.execute(ActorGraphInterpreter.scala:532)\n\tat org.apache.pekko.stream.impl.fusing.GraphInterpreterShell.processEvent(ActorGraphInterpreter.scala:637)\n\tat org.apache.pekko.stream.impl.fusing.ActorGraphInterpreter.org$apache$pekko$stream$impl$fusing$ActorGraphInterpreter$$processEvent(ActorGraphInterpreter.scala:813)\n\tat org.apache.pekko.stream.impl.fusing.ActorGraphInterpreter$$anonfun$receive$1.applyOrElse(ActorGraphInterpreter.scala:831)\n\tat org.apache.pekko.actor.Actor.aroundReceive(Actor.scala:547)\n\tat org.apache.pekko.actor.Actor.aroundReceive$(Actor.scala:545)\n\tat org.apache.pekko.stream.impl.fusing.ActorGraphInterpreter.aroundReceive(ActorGraphInterpreter.scala:729)\n\tat org.apache.pekko.actor.ActorCell.receiveMessage(ActorCell.scala:590)\n\tat org.apache.pekko.actor.ActorCell.invoke(ActorCell.scala:557)\n\tat org.apache.pekko.dispatch.Mailbox.processMailbox(Mailbox.scala:280)\n\tat org.apache.pekko.dispatch.Mailbox.run(Mailbox.scala:241)\n\tat org.apache.pekko.dispatch.Mailbox.exec(Mailbox.scala:253)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n"",
  ""correlation-id"": ""d24b587e-8ec1-4581-8d17-38298b1def20""
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85tRWH8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1827,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85tSzvO,ditto,1833647054,1827,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-11-30T12:10:06Z,2023-11-30T12:10:06Z,I fear with that little information I cannot be of any help.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85tSzvO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1827,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85t_N60,ditto,1845288628,1827,NA,BobClaerhout,3315222,Bob Claerhout,,NA,2023-12-07T12:51:17Z,2023-12-07T12:51:17Z,"So today I was trying to figure out what's going on here since not being able to fetch the existing connections is quite blocking to us.
As @JeffreyThijs  stated, we were able to fetch the ids only. When I did that, I got back a list of approx. 20 connections being active in ditto. I manually tried fetching them because I wanted to check the contents of the connection. I stumbled upon one with id `327bfa0b-1984-4c50-8700-9adb1579e6e1` (the ID doesn't mind but if you look closely, it's the one that is mentioned in the log line Jeffrey posted before.
I went looking for it in mongoDB and saw 46 records in the `connection_journal` table with pid `connection:327bfa0b-1984-4c50-8700-9adb1579e6e1`. it showed following records:
```
  {
    _id: ObjectId(""646f79710d77134491007ae2""),
    pid: 'connection:327bfa0b-1984-4c50-8700-9adb1579e6e1',
    from: Long(""60""),
    to: Long(""60""),
    events: [
      {
        v: 1,
        pid: 'connection:327bfa0b-1984-4c50-8700-9adb1579e6e1',
        sn: Long(""60""),
        _t: 'bson',
        p: {
          type: 'persistence-actor-internal:empty-event',
          effect: 'alwaysAlive',
          __hh: {}
        },
        _tg: [ 'always-alive', 'priority-0' ],
        manifest: 'persistence-actor-internal:empty-event',
        _w: '9393e517-419d-4ade-9338-500780c519eb'
      }
    ],
    v: 1,
    _tg: [ 'always-alive', 'priority-0' ]
  }
```
Since I don't know what this is for, I manually removed all of these records out of the collection and restarted the ditto-connectivity pods. After that, we were able to fetch the ditto connections again using the HTTP GET endpoint.
Something to note: the connection count in ditto dropped from 20 to 7.
Any idea what might be going on? We experienced this in our development environment now and would like to avoid this in our production environment. It's worthy to mention that we recently upgraded ditto from 3.3.7 to 3.4.3","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85t_N60/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1827,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85uANE9,ditto,1845547325,1827,NA,alstanchev,50709547,Aleksandar Stanchev,,NA,2023-12-07T15:25:01Z,2023-12-07T15:25:01Z,"This record looks very strange, like it was exported with mongoExport end then restored in the database which would cause the numeric values too look like the  ""from:, to:, sn:"". If this is what you did you should use mongoDump as it uses binary and preservs types not like mongoExport that works with json. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85uANE9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1827,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85uPZCY,ditto,1849528472,1827,NA,BobClaerhout,3315222,Bob Claerhout,,NA,2023-12-11T08:17:00Z,2023-12-11T08:17:00Z,"I agree it looks strange. I double checked with my colleagues and we did not do any manual actions on the database. The origin of these are therefor unknown.
On the other hand: it's not good this makes the ""list connections"" call fail, is it? Wouldn't it be better to just return the connections it is able to load and skip the ones which fail instead of failing the call?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85uPZCY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1827,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85uYBQg,ditto,1851790368,1827,NA,alstanchev,50709547,Aleksandar Stanchev,,NA,2023-12-12T10:46:38Z,2023-12-12T10:46:38Z,"I would prefer to make the error more vissible with a more descriptive message (something like ""Corrupted record or unable to deserialize"") instead of returning what is possible only.
Otherwise such corruptions will remain hidden.
But still i doubt this was persisted by the service. Is it possible that by mistake maybe while examining the db with Mongo Compass or the atlass UI an unoticed edit was done?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85uYBQg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1827,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85yF97J,ditto,1914166985,1827,NA,BobClaerhout,3315222,Bob Claerhout,,NA,2024-01-29T08:10:08Z,2024-01-29T08:10:08Z,"I doubt the edit. It's not that easy to change documents in the atlass UI, let alone multiple accidental edits.
Providing a more descriptive error is also fine!","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85yF97J/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1833,https://api.github.com/repos/eclipse-ditto/ditto/issues/1833,ditto,2021134582,1833,Regression: When using BASIC auth the pre-authenticated header is not forwarded to gateway pod,RockyMM,1906065,Rade Martinović,,CLOSED,2023-12-01T15:48:17Z,2023-12-08T19:44:35Z,"The changes introduced in #1787 are seemingly incompatible with the built-in ingress controller, which is the [Ingress-Nginx Controller](https://kubernetes.github.io/ingress-nginx/) maintained by Kubernetes community. While somewhat compatible with the ""official"" [NGINX Ingress Controller](https://docs.nginx.com/nginx-ingress-controller/) maintained by the NGINX the company, there are some incompatibilities. The change from #1787 is one of them. Juding by the https://github.com/kubernetes/ingress-nginx repo, the `proxy-set-header` is always part of the location and is not used anywhere else, therefore it seems that it must be part of the `location-snippet`.

The clean way to configure `proxy-set-headers` in the *Ingress-Nginx Controller* is to create a [ConfigMap](https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#proxy-set-headers) with the headers and to reference them in the central `nginx-configuration` ConfigMap.

I decided actually to simply return the strings where they were, but also to keep them in the location where #1787 introduce them, in order to keep Ditto working with the Ingress controller that @mladBlum is using.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1833/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1836,https://api.github.com/repos/eclipse-ditto/ditto/issues/1836,ditto,2030180782,1836,Cannot build ditto with maven,liuyinling,9428816,,liuyinling11@163.com,CLOSED,2023-12-07T08:38:30Z,2023-12-08T14:42:21Z,"Hello, I am using maven to build ditto. The terminal shows the errors in the following. It tells the error relating to JSON. I would like to know how to fix it.

I am using Macbook M1 Pro with Sonoma 14.1.2. The JDK version is 18. The maven version 3.9.6.

If you need more information, just let me know. Thanks a lot!

```
[INFO] 
[ERROR] Tests run: 931, Failures: 0, Errors: 10, Skipped: 0
[INFO] 
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary for Eclipse Ditto 0-SNAPSHOT:
[INFO] 
[INFO] Eclipse Ditto ...................................... SUCCESS [  1.177 s]
[INFO] Eclipse Ditto :: Legal ............................. SUCCESS [  0.192 s]
[INFO] Eclipse Ditto :: BOM ............................... SUCCESS [  0.036 s]
[INFO] Eclipse Ditto :: Utils ............................. SUCCESS [  0.067 s]
[INFO] Eclipse Ditto :: Utils :: JSR-305 Extensions ....... SUCCESS [  0.628 s]
[INFO] Eclipse Ditto :: JSON .............................. FAILURE [  3.290 s]
[INFO] Eclipse Ditto :: Base .............................. SKIPPED
[INFO] Eclipse Ditto :: Base :: Model ..................... SKIPPED
[INFO] Eclipse Ditto :: Base :: API ....................... SKIPPED
[INFO] Eclipse Ditto :: Internal .......................... SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils ................. SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Config ....... SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Metrics ...... SKIPPED
[INFO] Eclipse Ditto :: Utils :: Result ................... SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Tracing ...... SKIPPED
[INFO] Eclipse Ditto :: Internal :: Models ................ SKIPPED
[INFO] Eclipse Ditto :: Internal :: Models :: Streaming ... SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Pekko ........ SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Health ....... SKIPPED
[INFO] Eclipse Ditto :: JSON CBOR ......................... SKIPPED
[INFO] Eclipse Ditto :: Policies .......................... SKIPPED
[INFO] Eclipse Ditto :: Policies :: Model ................. SKIPPED
[INFO] Eclipse Ditto :: Things ............................ SKIPPED
[INFO] Eclipse Ditto :: Things :: Model ................... SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Cluster ...... SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Extension .... SKIPPED
[INFO] Eclipse Ditto :: Placeholders ...................... SKIPPED
[INFO] Eclipse Ditto :: Base :: Service ................... SKIPPED
[INFO] Eclipse Ditto :: Connectivity ...................... SKIPPED
[INFO] Eclipse Ditto :: Connectivity :: Model ............. SKIPPED
[INFO] Eclipse Ditto :: Thing Search ...................... SKIPPED
[INFO] Eclipse Ditto :: Thing Search :: Model ............. SKIPPED
[INFO] Eclipse Ditto :: Messages .......................... SKIPPED
[INFO] Eclipse Ditto :: Messages :: Model ................. SKIPPED
[INFO] Eclipse Ditto :: Protocol .......................... SKIPPED
[INFO] Eclipse Ditto :: Internal :: Models :: Signal ...... SKIPPED
[INFO] Eclipse Ditto :: Policies :: API ................... SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Distributed Data SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Pub-Sub ...... SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Cache ........ SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Test ......... SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Persistence .. SKIPPED
[INFO] Eclipse Ditto :: Things :: API ..................... SKIPPED
[INFO] Eclipse Ditto :: Connectivity :: API ............... SKIPPED
[INFO] Eclipse Ditto :: JWT ............................... SKIPPED
[INFO] Eclipse Ditto :: JWT :: Model ...................... SKIPPED
[INFO] Eclipse Ditto :: WoT ............................... SKIPPED
[INFO] Eclipse Ditto :: WoT :: Model ...................... SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Cache Loaders  SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Namespaces ... SKIPPED
[INFO] Eclipse Ditto :: Policies :: Enforcement ........... SKIPPED
[INFO] Eclipse Ditto :: RQL ............................... SKIPPED
[INFO] Eclipse Ditto :: RQL :: Model ...................... SKIPPED
[INFO] Eclipse Ditto :: RQL :: parser ..................... SKIPPED
[INFO] Eclipse Ditto :: RQL :: Query ...................... SKIPPED
[INFO] Eclipse Ditto :: Thing Search :: API ............... SKIPPED
[INFO] Eclipse Ditto :: Edge .............................. SKIPPED
[INFO] Eclipse Ditto :: Edge :: Service ................... SKIPPED
[INFO] Eclipse Ditto :: Internal :: Models :: Signal Enrichment SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Conditional Headers SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Persistent Actors SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Protocol ..... SKIPPED
[INFO] Eclipse Ditto :: RQL :: search option parser ....... SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Search ....... SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Pub-Sub Policies SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: Pub-Sub Things SKIPPED
[INFO] Eclipse Ditto :: Connectivity :: Service ........... SKIPPED
[INFO] Eclipse Ditto :: Documentation ..................... SKIPPED
[INFO] Eclipse Ditto :: Gateway ........................... SKIPPED
[INFO] Eclipse Ditto :: Gateway :: API .................... SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: HTTP ......... SKIPPED
[INFO] Eclipse Ditto :: Internal :: Utils :: JWT .......... SKIPPED
[INFO] Eclipse Ditto :: Gateway :: Service ................ SKIPPED
[INFO] Eclipse Ditto :: Policies :: Service ............... SKIPPED
[INFO] Eclipse Ditto :: WoT :: Integration ................ SKIPPED
[INFO] Eclipse Ditto :: Things :: Service ................. SKIPPED
[INFO] Eclipse Ditto :: Thing Search :: Service ........... SKIPPED
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  5.942 s
[INFO] Finished at: 2023-12-07T09:14:31+01:00
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:3.1.2:test (default-test) on project ditto-json: 
[ERROR] 
[ERROR] Please refer to /Users/yinlingliu/Git/ditto/json/target/surefire-reports for the individual test results.
[ERROR] Please refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
[ERROR] 
[ERROR] After correcting the problems, you can resume the build with the command
[ERROR]   mvn <args> -rf :ditto-json
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1836/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1836,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85t-kn8,ditto,1845119484,1836,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-12-07T10:50:56Z,2023-12-07T10:50:56Z,What are the 10 test errors mentioned in the log? ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85t-kn8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1836,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85t-tp9,ditto,1845156477,1836,NA,liuyinling,9428816,,liuyinling11@163.com,NA,2023-12-07T11:15:34Z,2023-12-07T11:15:34Z,"Here are all the errors in the terminal.

```
[INFO] Results:
[INFO] 
[ERROR] Errors: 
[ERROR]   ImmutableJsonArrayTest.assertImmutability:56 » MutabilityAnalysis 
An unhandled error occurred. Please read message at end of this output.

Class being analysed: org.eclipse.ditto.json.ImmutableJsonArray
Checker that failed: MutableTypeToFieldChecker
Classes analysed so far:
    org.eclipse.ditto.json.ImmutableJsonBoolean
    org.eclipse.ditto.json.ImmutableJsonParseOptions
    org.eclipse.ditto.json.JsonCharEscaper
    org.eclipse.ditto.json.JsonValue
    org.eclipse.ditto.json.ImmutableJsonObjectNull
    org.eclipse.ditto.json.ImmutableJsonArrayNull
    org.eclipse.ditto.json.JsonValueFieldDefinition
    org.eclipse.ditto.json.JsonMergePatch
    org.eclipse.ditto.json.JsonKey
    org.eclipse.ditto.json.ImmutableJsonNull
    org.eclipse.ditto.json.ImmutableJsonDouble
    org.eclipse.ditto.json.JsonValueParser
    org.eclipse.ditto.json.JsonCollectors
    org.eclipse.ditto.json.ImmutableJsonLong
    org.eclipse.ditto.json.ImmutableJsonInt
    org.eclipse.ditto.json.JsonFieldDefinition
    org.eclipse.ditto.json.JsonFactory
    org.eclipse.ditto.json.JavaValueFieldDefinition
    org.eclipse.ditto.json.JsonParseException
    org.eclipse.ditto.json.JsonObjectMerger

An unhandled error occurred while analysing the class 'org.eclipse.ditto.json.ImmutableJsonArray'.

This is probably my fault, not yours, and I am sorry.
I'd love to get an opportunity to fix this, please report as an issue at:
 https://github.com/MutabilityDetector/MutabilityDetector/issues/ 
Pasting in this error message and stack trace, and if possible, 
information about the code causing the error. 
For example, one of: 
    .class files (preferably with source);
    compilable .java files; 
    a jar (again preferably with source);
    or, if your project is open source, information on where I can get the code from
        (I'm happy to checkout and build your project in order to investigate the error).

Apologies, and thank you for using Mutability Detector.


[ERROR]   ImmutableJsonFieldSelectorFactoryTest.assertImmutability:41 » MutabilityAnalysis 
An unhandled error occurred. Please read message at end of this output.

Class being analysed: org.eclipse.ditto.json.ImmutableJsonFieldSelectorFactory
Checker that failed: MutableTypeToFieldChecker
Classes analysed so far:

An unhandled error occurred while analysing the class 'org.eclipse.ditto.json.ImmutableJsonFieldSelectorFactory'.


[ERROR]   ImmutableJsonFieldSelectorTest.assertImmutability:40 » MutabilityAnalysis 
An unhandled error occurred. Please read message at end of this output.

Class being analysed: org.eclipse.ditto.json.ImmutableJsonFieldSelector
Checker that failed: MutableTypeToFieldChecker
Classes analysed so far:
    org.eclipse.ditto.json.ImmutableJsonBoolean
    org.eclipse.ditto.json.JsonValue
    org.eclipse.ditto.json.ImmutableJsonObjectNull
    org.eclipse.ditto.json.JsonKey
    org.eclipse.ditto.json.ImmutableJsonInt
    org.eclipse.ditto.json.JsonFieldDefinition
    org.eclipse.ditto.json.ImmutableJsonNull
    org.eclipse.ditto.json.ImmutableJsonDouble
    org.eclipse.ditto.json.JsonCollectors
    org.eclipse.ditto.json.JsonFactory
    org.eclipse.ditto.json.JsonObjectMerger

An unhandled error occurred while analysing the class 'org.eclipse.ditto.json.ImmutableJsonFieldSelector'.


[ERROR]   ImmutableJsonFieldTest.assertImmutability:55 » MutabilityAnalysis 
An unhandled error occurred. Please read message at end of this output.

Class being analysed: org.eclipse.ditto.json.ImmutableJsonField
Checker that failed: MutableTypeToFieldChecker
Classes analysed so far:
    org.eclipse.ditto.json.ImmutableJsonBoolean
    org.eclipse.ditto.json.ImmutableJsonInt
    org.eclipse.ditto.json.ImmutableJsonDouble
    org.eclipse.ditto.json.JsonFactory

An unhandled error occurred while analysing the class 'org.eclipse.ditto.json.ImmutableJsonField'.


[ERROR]   ImmutableJsonKeyTest.assertImmutability:31 » MutabilityAnalysis 
An unhandled error occurred. Please read message at end of this output.

Class being analysed: org.eclipse.ditto.json.ImmutableJsonKey
Checker that failed: MutableTypeToFieldChecker
Classes analysed so far:

An unhandled error occurred while analysing the class 'org.eclipse.ditto.json.ImmutableJsonKey'.


[ERROR]   ImmutableJsonObjectTest.assertImmutability:75 » MutabilityAnalysis 
An unhandled error occurred. Please read message at end of this output.

Class being analysed: org.eclipse.ditto.json.ImmutableJsonObject
Checker that failed: MutableTypeToFieldChecker
Classes analysed so far:
    org.eclipse.ditto.json.ImmutableJsonInt
    org.eclipse.ditto.json.JsonFactory

An unhandled error occurred while analysing the class 'org.eclipse.ditto.json.ImmutableJsonObject'.

[ERROR]   ImmutableJsonPatchTest.assertImmutability:37 » MutabilityAnalysis 
An unhandled error occurred. Please read message at end of this output.

Class being analysed: org.eclipse.ditto.json.ImmutableJsonPatch
Checker that failed: MutableTypeToFieldChecker
Classes analysed so far:

An unhandled error occurred while analysing the class 'org.eclipse.ditto.json.ImmutableJsonPatch'.

[ERROR]   ImmutableJsonPointerTest.assertImmutability:42 » MutabilityAnalysis 
An unhandled error occurred. Please read message at end of this output.

Class being analysed: org.eclipse.ditto.json.ImmutableJsonPointer
Checker that failed: MutableTypeToFieldChecker
Classes analysed so far:
    org.eclipse.ditto.json.ImmutableJsonBoolean
    org.eclipse.ditto.json.ImmutableJsonParseOptions
    org.eclipse.ditto.json.JsonCharEscaper
    org.eclipse.ditto.json.JsonValue
    org.eclipse.ditto.json.ImmutableJsonObjectNull
    org.eclipse.ditto.json.ImmutableJsonArrayNull
    org.eclipse.ditto.json.JsonValueFieldDefinition
    org.eclipse.ditto.json.JsonMergePatch
    org.eclipse.ditto.json.JsonKey
    org.eclipse.ditto.json.ImmutableJsonNull
    org.eclipse.ditto.json.ImmutableJsonDouble
    org.eclipse.ditto.json.JsonValueParser
    org.eclipse.ditto.json.JsonCollectors
    org.eclipse.ditto.json.ImmutableJsonLong
    org.eclipse.ditto.json.ImmutableJsonInt
    org.eclipse.ditto.json.JsonFieldDefinition
    org.eclipse.ditto.json.JsonFactory
    org.eclipse.ditto.json.JavaValueFieldDefinition
    org.eclipse.ditto.json.JsonParseException
    org.eclipse.ditto.json.JsonObjectMerger

An unhandled error occurred while analysing the class 'org.eclipse.ditto.json.ImmutableJsonPointer'.

[ERROR]   ImmutableJsonStringTest.assertImmutability:36 » MutabilityAnalysis 
An unhandled error occurred. Please read message at end of this output.

Class being analysed: org.eclipse.ditto.json.ImmutableJsonString
Checker that failed: MutableTypeToFieldChecker
Classes analysed so far:
    org.eclipse.ditto.json.ImmutableJsonBoolean
    org.eclipse.ditto.json.ImmutableJsonParseOptions
    org.eclipse.ditto.json.JsonCharEscaper
    org.eclipse.ditto.json.JsonValue
    org.eclipse.ditto.json.ImmutableJsonObjectNull
    org.eclipse.ditto.json.ImmutableJsonArrayNull
    org.eclipse.ditto.json.JsonValueFieldDefinition
    org.eclipse.ditto.json.JsonMergePatch
    org.eclipse.ditto.json.JsonKey
    org.eclipse.ditto.json.ImmutableJsonNull
    org.eclipse.ditto.json.ImmutableJsonDouble
    org.eclipse.ditto.json.JsonValueParser
    org.eclipse.ditto.json.JsonCollectors
    org.eclipse.ditto.json.ImmutableJsonLong
    org.eclipse.ditto.json.ImmutableJsonInt
    org.eclipse.ditto.json.JsonFieldDefinition
    org.eclipse.ditto.json.JsonFactory
    org.eclipse.ditto.json.JavaValueFieldDefinition
    org.eclipse.ditto.json.JsonParseException
    org.eclipse.ditto.json.JsonObjectMerger

An unhandled error occurred while analysing the class 'org.eclipse.ditto.json.ImmutableJsonString'.


[ERROR]   JavaStringToEscapedJsonStringTest.assertImmutability:34 » MutabilityAnalysis 
An unhandled error occurred. Please read message at end of this output.

Class being analysed: org.eclipse.ditto.json.JavaStringToEscapedJsonString
Checker that failed: MutableTypeToFieldChecker
Classes analysed so far:
    org.eclipse.ditto.json.ImmutableJsonBoolean
    org.eclipse.ditto.json.JsonValue
    org.eclipse.ditto.json.ImmutableJsonObjectNull
    org.eclipse.ditto.json.JsonKey
    org.eclipse.ditto.json.ImmutableJsonInt
    org.eclipse.ditto.json.JsonFieldDefinition
    org.eclipse.ditto.json.ImmutableJsonNull
    org.eclipse.ditto.json.ImmutableJsonDouble
    org.eclipse.ditto.json.JsonCollectors
    org.eclipse.ditto.json.JsonFactory
    org.eclipse.ditto.json.JsonObjectMerger

An unhandled error occurred while analysing the class 'org.eclipse.ditto.json.JavaStringToEscapedJsonString'.
```

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85t-tp9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1836,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85t-2Iu,ditto,1845191214,1836,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-12-07T11:39:45Z,2023-12-07T11:39:45Z,"Then I assume that could have to do with JDK 18.
Eclipse Ditto is currently compiled with JDK 17 - we did not yet test it with greater versions.

So either skip the unit tests by building `-DskipTests` or please build Ditto with JDK 17 (as you might also run into other issues).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85t-2Iu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1836,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85t_cJq,ditto,1845346922,1836,NA,liuyinling,9428816,,liuyinling11@163.com,NA,2023-12-07T13:29:53Z,2023-12-07T13:29:53Z,"I tried with JDK 17. I got these three errors.

```
[INFO] Results:
[INFO] 
[ERROR] Errors: 
[ERROR]   IndexInitializerIT.<clinit>:53 » ExceptionInInitializer
[ERROR]   MongoReadJournalIT.<clinit>:73 » NoClassDefFound Could not initialize class org.eclipse.ditto.internal.utils.test.docker.mongo.MongoContainerFactory
[ERROR]   MongoTimestampPersistenceIT.<clinit>:53 » NoClassDefFound Could not initialize class org.eclipse.ditto.internal.utils.test.docker.mongo.MongoContainerFactory
[INFO] 
[ERROR] Tests run: 3, Failures: 0, Errors: 3, Skipped: 0
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85t_cJq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1836,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85t_cjE,ditto,1845348548,1836,NA,alstanchev,50709547,Aleksandar Stanchev,,NA,2023-12-07T13:31:02Z,2023-12-07T13:31:02Z,This one looks like you don't have docker running.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85t_cjE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1836,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85uCI6-,ditto,1846054590,1836,NA,liuyinling,9428816,,liuyinling11@163.com,NA,2023-12-07T20:23:00Z,2023-12-07T20:23:00Z," The engine of docker was running.

@thjaeckle this command `mvn clean install -DskipTests` works well.

However, when I build local Ditto Docker snapshot images by using `./build-images.sh`, I got the following error

 ```
=> ERROR [4/4] COPY ./dist                 ./dist                         0.0s
------
 > [4/4] COPY ./dist                 ./dist:
------
Dockerfile:17
--------------------
  15 |     
  16 |     COPY ./index.html           .
  17 | >>> COPY ./dist                 ./dist
  18 |     
--------------------
ERROR: failed to solve: failed to compute cache key: failed to calculate checksum of ref 6026d1d0-f35c-4c48-a6cf-68de82b927d4::w6b571i2pc20htqz30pguehem: ""/dist"": not found

View build details: docker-desktop://dashboard/build/desktop-linux/desktop-linux/t089mgvqx8dahctc03owkfur4

```

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85uCI6-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1836,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85uEhFL,ditto,1846677835,1836,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-12-08T07:25:29Z,2023-12-08T07:25:29Z,"Please have a look here: #1699
We did not yet manage to address this - e.g. perform step 3. from the linked issue.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85uEhFL/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1836,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85uFcSi,ditto,1846920354,1836,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-12-08T10:23:22Z,2023-12-08T10:23:22Z,I updated to `./build-images.sh` script and by default excluded the UI build - so this should work now for you.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85uFcSi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1836,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85uG47x,ditto,1847299825,1836,NA,liuyinling,9428816,,liuyinling11@163.com,NA,2023-12-08T14:42:20Z,2023-12-08T14:42:20Z,"Yes, indeed, `./build-images.sh` script works well. 

However, when I executed `docker-compose up -d` command, I got the following error `parsing /Users/yinlingliu/Git/ditto/deployment/docker/docker-compose.yml: yaml: line 13: did not find expected key`","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85uG47x/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1838,https://api.github.com/repos/eclipse-ditto/ditto/issues/1838,ditto,2032351276,1838, Issue with k6 Test Execution and Missing k6-test-secret,itsUtkarsh2306,153275029,,,CLOSED,2023-12-08T10:00:02Z,2024-01-03T13:34:31Z,"Hello,

I'm currently setting up a benchmarking environment for Ditto with the following components:

1. Ditto running on Kubernetes.
2. Kafka, mmock, and k6-operator also running on Kubernetes.
3. All the tests have been uploaded as per the documentation.
During the execution of the tests using the command k create -f k6-ditto-benchmark-test.yaml, I encountered an error indicating that the k6-test-secret was not found. This secret is not present in the directory, nor is it mentioned in any of the provided YAML files.

Could you please provide guidance on what should be included in the k6-test-secret and how we can configure it correctly?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1838/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1838,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85uId6q,ditto,1847713450,1838,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-12-08T19:34:59Z,2023-12-08T19:34:59Z,@vvasilevbosch could you please have a look?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85uId6q/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1838,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85uWv2j,ditto,1851456931,1838,NA,vvasilevbosch,112558685,Vasil Vasilev,,NA,2023-12-12T07:44:12Z,2023-12-12T07:44:12Z,I will check this,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85uWv2j/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1838,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85uf190,ditto,1853841268,1838,NA,vvasilevbosch,112558685,Vasil Vasilev,,NA,2023-12-13T12:37:01Z,2023-12-13T12:37:01Z,"The benchmark test does not use any secrets. I ran ran the benchmark locally and noticed I have left a env var that is unused, and perhaps causing the issue - 'AUTHORIZATION_HEADER_VALUE'. I will open a PR soon, but I hit some other issues with xk6-kafka as well, they seem to have changed the type of a property, that is used and the benchmark is not working with xk6-kafka >= 20.0.0.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85uf190/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1838,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85vr2NO,ditto,1873765198,1838,NA,vvasilevbosch,112558685,Vasil Vasilev,,NA,2024-01-02T09:09:35Z,2024-01-02T09:09:35Z,"Follow this PR, after it's merged, it should all be working #1849 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85vr2NO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1838,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85vsPmz,ditto,1873869235,1838,NA,itsUtkarsh2306,153275029,,,NA,2024-01-02T10:48:02Z,2024-01-02T10:48:02Z,"I tried running the latest benchmark.I followed every steps and I was able to see the kafka connection made and the connetion status is Open and succeeded, But then I am getting a error which says in the logs of k6-ditto-benchmark-test-1
time=""2024-01-02T10:45:59Z"" level=error msg=""ReferenceError: connectionStatusError is not defined\n\tat setup (file:///test/k6-test.js:143:60(114))\n"" hint=""script exception""","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85vsPmz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1838,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85vsx5C,ditto,1874009666,1838,NA,vvasilevbosch,112558685,Vasil Vasilev,,NA,2024-01-02T13:12:04Z,2024-01-02T13:12:04Z,I clearly missed declaring this variable and didn't test out the creation of things after my refactor. I opened PR #1855 ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85vsx5C/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1838,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85vyAmy,ditto,1875380658,1838,NA,vvasilevbosch,112558685,Vasil Vasilev,,NA,2024-01-03T13:34:30Z,2024-01-03T13:34:30Z,"#1855  is closed now, it should be all fine","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85vyAmy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1839,https://api.github.com/repos/eclipse-ditto/ditto/issues/1839,ditto,2033823318,1839,Stabilize Ditto on k8s pod rescheduling and rolling updates,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2023-12-09T12:05:20Z,2024-01-26T08:33:53Z,"We got feedback via our Gitter chat room that after pod rescheduling, Ditto cluster messaging sometimes gets broken:
https://matrix.to/#/!NgApgwRGamBVNEqzNU:gitter.im/$u8zsUQZHfuBIrIp-LdnIta8TajCGMoNVrEXSqxFdw14?via=gitter.im&via=matrix.org&via=othermo.ems.host

Ditto clusting uses Apache Pekko, formerly Akka.
I found this blogpost from the Lightbend team that since k8s 1.22 the default behavior to downscale pods changed:
https://www.lightbend.com/blog/faster-and-smoother-rolling-updates-for-akka-clusters-in-kubernetes

This is the related Akka Management  issue: https://github.com/akka/akka-management/issues/1130

Akka management fixed this issue in 1.3, which we however cannot use because of its license.

So there are a few options IMO to stablisize this in Ditto:
* disable on k8s cluster level the `LogarithmicScaleDown` flag
* change pod deletion cost to have the most cost for the cluster role leader for each Ditto service role
   * either as part of Ditto codebase (however Ditto is not aware of k8s)
   * or as contribution to Pekko management
   * or maybe as sidecar container / script?
   * or as custom k8s operator for Ditto

Just to provide some ideas..

A custom operator might also for other reasons be useful, eg in order to rolling update Ditto service by service instead of all at services at once.

@kalinkostashki maybe you also have an idea? ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1839/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1839,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85uhN3C,ditto,1854201282,1839,NA,kalinkostashki,101703236,Kalin Kostashki,,NA,2023-12-13T15:59:22Z,2023-12-13T15:59:22Z,"Hey @thjaeckle,

From what I looked a bit there are several approaches:

1. Create a per service Helm charts and one wrapper chart like it was in eclipse packages:
    Benefits:

    -  you enable per service upgrades via hooks post-install, pre-upgrade, etc.
    -  this should fundamentally solve the issue you are talking about

    Negatives:

    - you create a more complex chart structure which is harder to maintain and will include code duplications I assume
    - Helm hooks and the way they behave may be a problem from the reading that I've done so it would be bad to avoid them -> for example what happens if a post install step fails for some reason...

2. Create per service Helm charts only
    Benefits:

    -  you enable per service upgrades via manually calling helm upgrade of a service
    -  this should fundamentally solve the issue you are talking about 

     Negatives:

    - you create a more complex chart structure which is harder to maintain and will **for sure** cause code duplications I assume

3. Custom operator that registers CRDs for each service(the thing you proposed):
    Benefits:

    -  no code duplications like previous approaches
    -  you enable per service upgrades via manually calling helm upgrade of a service
    -  this should fundamentally solve the issue you are talking about 
    -  due to not knowing the exactly when or how Pekko project will address this we will get some autonomy and flexibility
    -  it is shiny and cool ;)

    Negatives:

    - creation of yet another API that has to be supported -> this is kind of innevatible I feel but has to be considered

I personally think contribution to Pekko would harder(at least for my limited experience).
The other approaches that you mention like side-cars are also fine, but are just a patch.
The disabling of a kubernetes feature like **LogarithmicScaleDown** I'm not sure is even possible with cloud providers.

Given all that I think the operator is the way to Go(pun intended :)).
This will make Ditto more flexible and enable the way for other features like autoscaling based on specific metrics, etc -> sure you can think of more cool stuff :)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85uhN3C/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1839,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85uoZIi,ditto,1856082466,1839,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-12-14T15:41:56Z,2023-12-14T15:41:56Z,"@kalinkostashki I fully agree. Kubernetes operator is the way to go.
Let's put it on the good resolutions list for 2024. 😁

With that we should be able to query the management Api of Pekko in order to find out the cluster role leader and then down this last during a rolling update.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85uoZIi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1839,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85upXhK,ditto,1856337994,1839,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-12-14T18:02:54Z,2023-12-14T18:02:54Z,"We could fork https://github.com/lightbend/akka-cluster-operator
To eg a new Ditto Github repo.

And adjust to Pekko.. Should not be too hard I hope. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85upXhK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1839,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85vx8lA,ditto,1875364160,1839,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-01-03T13:21:01Z,2024-01-03T13:21:01Z,"In the meantime, I think we could solve this via a Helm ""pre-upgrade"" Hook.
Asked this stackoverflow question which provides a good ""basis"": https://stackoverflow.com/questions/77704278/can-a-helm-pre-upgrade-hook-modify-the-pod-deletion-cost-prior-to-doing-a-rollin/77724976#77724976

Idea is to register a ""pre-upgrade"" Hook to:
* Configure RBAC to be allowed to exec into pods + perform `kubectl annotate`
* Retrieve the cluster membership information by doing `kubectl exec $pod -- curl http://localhost:7626/cluster/members/`
* Parsing the cluster membership for the ""leader"" and the ""oldest"" for each role
* Calculate higher pod deletion cost for those ""leader"" and ""oldest""
* Add `controller.kubernetes.io/pod-deletion-cost` annotation via `kubectl annotate --overwrite pods $pod controller.kubernetes.io/pod-deletion-cost=600` for all ""old"" nodes

This will not yet fix/resolve that we want to update one Ditto service after another instead of all at once.  
But maybe this can also be solved with another pre-upgrade hook .. maybe using a [lease](https://kubernetes.io/docs/concepts/architecture/leases/) to store the currently updated service before proceeding to the next?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85vx8lA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1840,https://api.github.com/repos/eclipse-ditto/ditto/issues/1840,ditto,2037765941,1840,Facing issue with probe while installing ditto through kubernetes,Korakbhakta02,67550363,,,CLOSED,2023-12-12T13:33:31Z,2024-01-16T09:12:02Z,"While running ditto through kubernetes , the gateway pod is not getting ready as it is giving readiness and liveness probe error:
**Readiness probe failed: Get ""http://{clusterIP}/ready"": dial tcp clusterIP:8558: connect: connection refused**
**Liveness probe failed: Get ""http://{clusterIP}/alive"": dial tcp clusterIP:8558: connect: connection refused**
It will be helpful if any solution can be given to this.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1840/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1840,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ueER2,ditto,1853375606,1840,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-12-13T07:08:37Z,2023-12-13T07:08:37Z,Please provide logs of the affected services. ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ueER2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1841,https://api.github.com/repos/eclipse-ditto/ditto/issues/1841,ditto,2039805685,1841,Facing Authorization issue to up the Eclipse Ditto using Helm,kalyanibharadwaj,153743912,KBG,,CLOSED,2023-12-13T14:15:19Z,2023-12-22T16:12:46Z,"I'm encountering an authorization issue after deploying Eclipse Ditto using the Helm Chart with default values with docker desktop. The deployment process completed without any errors, and I followed the instructions to port forward and obtained the passwords for the ""devops"" and ""status"" accounts. 
However, upon attempting to access ""http://devops:${DEVOPS_PWD}@localhost:8080/devops,"" I receive the message, **""The requested resource could not be found.""** 

Additionally, I am unable to log in at ""localhost:8080/ui"" using the ""devops"" or ""status"" passwords.

 I would greatly appreciate any assistance in resolving this issue and would welcome any insights on where the problem may lie.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1841/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1841,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ukWnO,ditto,1855023566,1841,NA,kalyanibharadwaj,153743912,KBG,,NA,2023-12-14T02:45:27Z,2023-12-14T02:45:27Z,"adding additional information:
Helm Chart Version: 3.4.2

curl -i -X GET ""http://devops:${DEVOPS_PWD}@localhost:8080/devops""
HTTP/1.1 404 Not Found
Server: nginx/1.25.3
Date: Thu, 14 Dec 2023 02:23:21 GMT
Content-Type: text/plain; charset=UTF-8
Content-Length: 42
Connection: keep-alive
Access-Control-Allow-Methods: GET, POST, PUT, PATCH, DELETE, OPTIONS
Access-Control-Allow-Credentials: true
Access-Control-Expose-Headers: *
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ukWnO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1841,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85uwo2h,ditto,1858244001,1841,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-12-15T17:38:01Z,2023-12-15T17:38:01Z,"3.4.2 had an issue with authentication, see https://github.com/eclipse-ditto/ditto/issues/1833

Did you try 3.4.3?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85uwo2h/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1841,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85vUpKp,ditto,1867682473,1841,NA,kalyanibharadwaj,153743912,KBG,,NA,2023-12-22T13:21:12Z,2023-12-22T13:21:12Z,"observed same issue even with 3.4.3, i spend some time to debug and understand.
once i added the user under hashedBasicAuthUsers: its started working ...","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85vUpKp/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1842,https://api.github.com/repos/eclipse-ditto/ditto/issues/1842,ditto,2045305647,1842,Define time order for retrieving stream of persisted historical events for things,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2023-12-17T17:38:11Z,2024-01-16T16:23:06Z,"Currently, Ditto's historical API, supporting to provide a stream of persisted events for a thing, always provides the stream starting from a specified revision or time, returning the events in time ascending from old to new.

It would be helpful to provide an option to provide a time descending from new to old stream and also be able to start with the most recent event as a start.

Query param could be called `order` or `historical-time-order` or `historical-sort-direction` (values being `asc` or `desc`).

Also, something like a `historical-max-results` would be useful as there is no natural bound (the newest event) when fetching such a stream.
That way, pagination could be done. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1842/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1842,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85w5Vwh,ditto,1894079521,1842,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-01-16T16:23:05Z,2024-01-16T16:23:05Z,Getting the stream in reverse order seems not to be possible - closing the issue ..,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85w5Vwh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1843,https://api.github.com/repos/eclipse-ditto/ditto/issues/1843,ditto,2046120417,1843,Support updating referenced WoT ThingModel minor version for Ditto Things,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2023-12-18T09:12:44Z,2025-01-27T15:42:06Z,"Currently, the WoT ThingModel is only taken into account when creating new Things in Ditto. In this case, a JSON skeleton of the Thing based on the WoT TM is created.  
Over time, a WoT ThingModel might however evolve, e.g. new `properties`, new `actions` or new `submodels`, etc. are added.

Those evolvements can be categorised in:
* non-breaking evolvements (according to [Semantic Versioning](https://semver.org) changes to the **MINOR** version):
   * only additions to existing functionality without removing existing properties/actions/events
* breaking evolvements (according to [Semantic Versioning](https://semver.org) changes to the **MAJOR** version)
   * also containing breaking functionality with renaming/removing existing properties/actions/events
   * **out of scope for this issue** - as this would require e.g. also deleting stuff from things or renaming

In my experience, non-breaking evolvements can happen very regularly, as the (exposed) functionality of IoT devices evolves quickly over time.  
For such non-breaking evolvements, Ditto shall provide means to ""migrate"" existing things to a newer **MINOR** version of referenced WoT ThingModels.

Concretely, the following steps would have be done when updating the **minor** version of a WoT ThingModel in a Ditto thing's `definition`:
* `definition` of a **Thing** is modified (either via `ModifyDefinition` or via `MergeThing` for the `""definition""`)
* Ditto checks if the ""minor"" version increased - and only if it did - performs a ""migration"":
   * resolving all ""submodel"" versions of the new ""minor"" thing model
   * update all feature `definition` fields with the updated ""submodel"" models
   * potentially adding previously non-yet-existing features in the process
   * for existing features / ""submodels"" which received a **minor** update, for each pair of `<old model version>,<new model version>`:
      * generate JSON skeleton for `<old model version>`
      * generate JSON skeleton for `<new model version>`
      * calculate the ""diff"" as Json Merge Patch from new to old JSON skeleton
      * for all ""new added"" (non-optional) properties:
         * create the property with the defined `default` value
         * but only if the Thing does not yet contain a ""real"" value for the property yet (which could already be sent by the real device - we don't want to overwrite ""real"" values with default values)

The algorithm might still not be ""complete"" - but in a nutshell, we have to handle:
* updating Thing `attributes` with default values for new TM ""properties""
* updating Feature `properties`  with default values for new TM ""properties""
* updating Feature `definition`s
* updating the Thing's `definition` if all was successful
   * TODO: what to do in case of an error?
* and that - all based on a simple update request of a Thing `definition`","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1843/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1843,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Buv2I,ditto,2176515464,1843,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-06-18T16:29:41Z,2024-06-18T16:29:41Z,"Idea: Provide a ""dry run"" option to get a preview of what the ""migrated"" thing would look like.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Buv2I/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1843,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86S5OIT,ditto,2464473619,1843,NA,hu-ahmed,47451731,,,NA,2024-11-08T11:28:01Z,2024-11-08T11:28:01Z,"This proposal introduces an enhanced model migration endpoint for Eclipse Ditto, aimed at supporting large-scale updates across IoT devices with varying configurations and states. The endpoint enables model migration using a high-level Thing definition URL, combined with precise RQL-based filtering and conditional patching. This approach allows users to selectively apply updates based on specific conditions within each feature, avoiding unnecessary changes and enhancing control over the migration process.

### Key Features

- Unified Thing Definition URL:

The endpoint accepts a single Thing definition URL, simplifying the input and eliminating the need to specify each individual feature’s definition.
Ditto will automatically resolve all feature definitions and apply them as needed across targeted devices.

- RQL-Based Filtering for Device Selection:

Users can specify an RQL query in the filter parameter to select devices based on attributes, feature presence, or other conditions.
This allows for precise targeting of devices that match specific criteria, ensuring updates are only applied where needed.

- Conditional Feature Patching with RQL:

The migrationPayload supports feature-specific patchConditions using RQL expressions, enabling granular control over updates.
Conditions such as property existence, threshold comparisons, and complex logical combinations can be defined for each feature to ensure updates are only applied when specified conditions are met.
This approach allows for highly targeted updates, reducing redundant changes and optimizing the migration process.

- Flexible Control Over Feature Addition and Property Initialization:

The endpoint provides options to control whether missing features should be added (addMissingFeatures) and whether properties in newly added features should be initialized (initializeProperties).
This ensures that users can manage updates carefully, without creating unnecessary data for inactive or unconfigured devices.
### Proposed Endpoint Specification
**Endpoint:** POST /things/update-definition
Request Parameters:

- thingDefinitionUrl: The URL for the high-level Thing definition.

- filter: An RQL expression specifying the target devices for the migration.

- migrationPayload: A structured set of operations for each feature, including RQL-based patchConditions.

- addMissingFeatures (optional, boolean): Default false. Controls whether missing features should be added.

- initializeProperties (optional, boolean): Default false. Specifies if default values should be set for properties in new features.

- validationMode (optional, string): Options include warn (default) or strict, controlling the response to wot-model validation for the updates.

Example Payload
Below is an example payload for applying conditional patches based on RQL expressions:

json
```
{
  ""thingDefinitionUrl"": ""https://models.develop.beyonnex.org/smartheating/smart-radiator-thermostat-2.35.0.tm.jsonld"",
  ""filter"": ""and(eq(attributes/type,\""SMART_RADIATOR_THERMOSTAT\""),exists(features/operationalDataReport))"",
  ""migrationPayload"": {
    ""thermostat"": {
      ""configuration"": {
        ""set"": {
          ""lowBatteryBehavior"": {
            ""motorPositionPercent"": 5,
            ""thresholdVoltage"": 4.5
          }
        },
        ""patchConditions"": ""and(gt(status/motorPosition/value,0),lt(configuration/motorLimitConfiguration/limitedPathInMicroMeters,1000))""
      }
    },
    ""battery"": {
      ""status"": {
        ""voltage"": {
          ""value"": 5.9
        },
        ""patchConditions"": ""notExists(status/voltage)""
      }
    }
  },
  ""addMissingFeatures"": false,
  ""initializeProperties"": false,
  ""validationMode"": ""warn""
}
```

this granular patch-conditions will serve also the implementation of #1927 
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86S5OIT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1844,https://api.github.com/repos/eclipse-ditto/ditto/issues/1844,ditto,2047049293,1844,Fetching a thing at a non-existing historical revision (e.g. in future) results in status 503,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2023-12-18T16:43:02Z,2023-12-19T09:32:42Z,"Example request:
```
curl 'https://ditto.eclipseprojects.io/api/2/things/foo:bar?fields=thingId,_revision,attributes&at-historical-revision=785'
```
Response after 15 seconds:
```json
{""status"":503,""error"":""ask.error"",""message"":""There was an internal timeout."",""description"":""Please retry the performed action in order to improve resiliency.""}
```

And even worse than that - during the 15 seconds, all other requests to that Thing will fail, as all access is prevented as part of the `at-historical-revision` calculation.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1844/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1850,https://api.github.com/repos/eclipse-ditto/ditto/issues/1850,ditto,2056095302,1850,sending ditto alerts and events through websocket to react client.,Nitishkrpatel,100232787,,,CLOSED,2023-12-26T06:51:21Z,2023-12-27T08:09:24Z,"As per ditto documentation, WebSocket endpoint is given as  ws://dittoip:8080/ws/2. 
the alerts sent to this websocket endpoint should be accessable at react client. BUt failed to connect to ditto websocket from react client. 

here is my react code 

import React, { useEffect } from ""react"";

const WebSocketComponent = () => {
  useEffect(() => {
    // Replace ""ws://localhost:8080/ws/2"" with your actual WebSocket URL
    const websocketUrl = ""ws://192.168.31.62:8080/ws/2"";

    // Replace ""ditto"" and ""ditto"" with your actual credentials
    const username = ""ditto"";
    const password = ""ditto"";

    // Construct the Authorization header with HTTP Basic Authentication
    const credentials = `${username}:${password}`;
    const authHeader = `Basic ${btoa(credentials)}`;

    // Set up the WebSocket connection with the Authorization header
    const websocket = new WebSocket(websocketUrl, [""soap"", ""xmpp""], {
      headers: {
        Authorization: authHeader,
      },
    });

    // Event handler when the connection is opened
    websocket.onopen = () => {
      console.log(""WebSocket connection opened"");
    };

    // Event handler for incoming messages
    websocket.onmessage = (event) => {
      const message = JSON.parse(event.data);
      console.log(""Received message:"", message);
    };

    // Event handler when the connection is closed
    websocket.onclose = () => {
      console.log(""WebSocket connection closed"");
    };

    // Clean up the WebSocket connection on component unmount
    return () => {
      websocket.close();
    };
  }, []);

  return (
    <div>
      <p>WebSocket Example</p>
    </div>
  );
};

export default WebSocketComponent;","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1850/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1850,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85vb_ZB,ditto,1869608513,1850,NA,thfries,20593339,Thomas Fries,,NA,2023-12-26T15:14:08Z,2023-12-26T15:14:08Z,"Can you pls try to add some commands like
```
ws.send('START-SEND-EVENTS');
ws.send('START-SEND-MESSAGES');
ws.send('START-SEND-LIVE-EVENTS');
ws.send('START-SEND-LIVE-COMMANDS');
```
in your `onopen` function of the web socket?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85vb_ZB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1850,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85vdSuI,ditto,1869949832,1850,NA,Nitishkrpatel,100232787,,,NA,2023-12-27T05:02:01Z,2023-12-27T05:02:01Z,"here is my code 

import React, { useEffect } from ""react"";

import { w3cwebsocket as W3CWebSocket } from ""websocket"";

const WebSocketComponent = () => {
  useEffect(() => {
    // Replace with your actual WebSocket URL
    const websocketUrl = ""ws://192.168.31.62:8080/ws/2"";

    // Create a new WebSocket instance using the w3cwebsocket from the websocket library
    const username = ""ditto"";
    const password = ""ditto"";

    // Corrected the syntax for credentials and authHeader
    const credentials = `${username}:${password}`;
    const authHeader = `Basic ${btoa(credentials)}`;

    const websocket = new W3CWebSocket(websocketUrl, [""soap"", ""xmpp""], {
      headers: {
        Authorization: authHeader,
      },
    });
    // Event handler for WebSocket errors
    websocket.onerror = (event) => {
      console.error(""WebSocket Error:"", event);

      // Additional details from the Event object
      console.error(""Error Message:"", event.message);
      console.error(""Error Code:"", event.code);
      console.error(""Error Reason:"", event.reason);
    };

    // Event handler when the connection is opened
    websocket.onopen = () => {
      console.log(""WebSocket connection opened"");
      websocket.send(""START-SEND-EVENTS"");
      websocket.send(""START-SEND-MESSAGES"");
      websocket.send(""START-SEND-LIVE-EVENTS"");
      websocket.send(""START-SEND-LIVE-COMMANDS"");

      // Example: Sending a message after connection
      websocket.send(""Hello, WebSocket Server!"");
    };

    // Event handler for incoming messages
    websocket.onmessage = (message) => {
      const parsedMessage = JSON.parse(message.data);
      console.log(""Received message:"", parsedMessage);
    };

    // Event handler when the connection is closed
    websocket.onclose = () => {
      console.log(""WebSocket connection closed"");
    };

    // Clean up the WebSocket connection on component unmount
    return () => {
      websocket.close();
    };
  }, []); // Empty dependency array ensures the effect runs once on mount

  return (
    <div>
      <p>WebSocket Example</p>
    </div>
  );
};

export default WebSocketComponent;



still facing connection error, find the screenshot of the browser console FYR.
![Screenshot from 2023-12-27 10-31-23](https://github.com/eclipse-ditto/ditto/assets/100232787/a2b34c38-a2c1-4847-b581-b3309844711d)
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85vdSuI/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1850,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85vdl63,ditto,1870028471,1850,NA,thfries,20593339,Thomas Fries,,NA,2023-12-27T07:30:33Z,2023-12-27T07:30:33Z,"Sorry, I can not run your code. I just tried it out with local docker running ditto 3.4.0:
```
  let ws;
  try {
    ws = new WebSocket('ws://ditto:ditto@localhost:8080/ws/2');
    ws.onopen = () => {
      ws.onmessage = (message) => console.log(message);
      ws.onerror = (error) => console.log(error);
      ws.onclose = () => console.log('WebSocket closed');
      ws.send('START-SEND-EVENTS');
      ws.send('START-SEND-MESSAGES');
      ws.send('START-SEND-LIVE-EVENTS');
      ws.send('START-SEND-LIVE-COMMANDS');
    };
  } catch (error) {
    console.log(error);
  } 
```
It may be:
- providing username and password in the URL instead of the header
- not using W3CWebSocket

I hope this helps anyway.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85vdl63/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1850,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85vdscN,ditto,1870055181,1850,NA,Nitishkrpatel,100232787,,,NA,2023-12-27T08:09:20Z,2023-12-27T08:09:20Z,"it worked !  appreciate it, thanks a ton.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85vdscN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1851,https://api.github.com/repos/eclipse-ditto/ditto/issues/1851,ditto,2056100605,1851,Publishing device alerts and events through ditto websocket.,sushmasub10,87841656,sushma,,CLOSED,2023-12-26T06:58:35Z,2023-12-27T14:55:02Z,"As per ditto documentation, this is the websocket endpoint ""ws://localhost:8080/ws/2"" anything published through this endpoint should be received at react client. 
Using python script was able to open websocket connection and get the notifications from the devices. But same thing is not possible through react client. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1851/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1851,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ve7hy,ditto,1870379122,1851,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2023-12-27T14:55:00Z,2023-12-27T14:55:00Z,See #1850,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ve7hy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1854,https://api.github.com/repos/eclipse-ditto/ditto/issues/1854,ditto,2062147047,1854,"Provide time placeholders in RQL with ability to specify plus and minus ""duration""",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2024-01-02T09:26:18Z,2024-01-05T06:58:30Z,"Currently, there is the `time:now` placeholder which can be used in RQL queries, e.g. like this:
```
ge(features/ConnectionStatus/properties/status/readyUntil,time:now)
```

The currently implemented time placeholders are:
* `time:now`
* `time:now_epoch_millis`

It would be very useful to be able to also specify a plus and minus offset to ""now"":
* e.g. querying all of the things which were modified in the last 1 day
* e.g. counting all of the things which have a ISO8601 timestamp persisted which is more recent than 2 hours

Syntax idea:
To keep it simple, the existing placeholders could support optionally the following syntax:
```
<sign> := + | -

<unit> := ""ms"" | ""s"" | ""m"" | ""h"" | ""d""
<dittoDuration> := <integer><unit>

<offset> := <sign><dittoDuration>

time:now<offset>
time:now_epoch_millis<offset>
```
Where Ditto duration is defined by implementation class `DittoDuration`.

Examples:
* `time:now-5h` - current ISO8601 timestamp minus 5 hours
* `time:now_epoch_millis+2d` - current epoch timestamp plus 2 days
* `time:now+30s` - current ISO8601 timestamp plus 30 seconds","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1854/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1854,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85v30du,ditto,1876903790,1854,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-01-04T10:59:11Z,2024-01-04T10:59:11Z,"Additional idea: Rounding up/down to the next full `""ms"" | ""s"" | ""m"" | ""h"" | ""d""`.

Syntax could be e.g.:
```
time:now_round-d       # rounding down to today's start of the day
time:now-1d_round-d    # rounding down to yesterday's start of the day
time:now-1d_round-h    # rounding down to yesterday's start of the current hour

time:now_round+m       # rounding up the current time to the next full minute
```

Or:
```
time:now_floor_d       # rounding down to today's start of the day
time:now-1d_floor_d    # rounding down to yesterday's start of the day
time:now-1d_floor_h    # rounding down to yesterday's start of the current hour

time:now_ceil_m        # rounding up the current time to the next full minute
```

Or:
```
time:now[-d]       # rounding down to today's start of the day
time:now-1d[-d]    # rounding down to yesterday's start of the day
time:now-1d[-h]    # rounding down to yesterday's start of the current hour

time:now[+m]       # rounding up the current time to the next full minute
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85v30du/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1857,https://api.github.com/repos/eclipse-ditto/ditto/issues/1857,ditto,2067070425,1857,Sending TDengine kafka topic message to ditto.,sushmasub10,87841656,sushma,,CLOSED,2024-01-05T10:07:28Z,2024-01-16T09:11:55Z,"hello,
Using TDengine source connect im able to send data to kafka topic , how do i read message from this kafka topic on ditto.
i have done configuration like this : 

curl -i -X POST -u devops:foobar -H ""Content-Type: application/json""  -d '{
  ""connection"": {
    ""id"": ""kafka-example-connection-123"",
    ""connectionType"": ""kafka"",
    ""connectionType"": ""kafka"",
    ""connectionStatus"": ""open"",
    ""failoverEnabled"": true,
    ""uri"": ""tcp://localhost:9092"",
    ""specificConfig"": {
      ""bootstrapServers"": ""localhost:9092"",
      ""saslMechanism"": ""plain""
    },
    ""sources"": [
      {
        ""addresses"": [""tdengine-test-meters""],
        ""consumerCount"": 1,
        ""qos"": 1,
        ""authorizationContext"": [""ditto:inbound-auth-subject""],
        ""enforcement"": {
          ""input"": ""{{ header:device_id }}"",
          ""filters"": [""{{ entity:id }}""]
        },
        ""headerMapping"": {},
        ""payloadMapping"": [""json""],
        ""replyTarget"": {
          ""enabled"": true,
          ""address"": ""theReplyTopic"",
          ""headerMapping"": {},
          ""expectedResponseTypes"": [""response"", ""error"", ""nack""]
        },
        ""acknowledgementRequests"": {
          ""includes"": []
        },
        ""declaredAcks"": []
      }
    ],
    ""targets"": [
      {
        ""address"": ""topic/key"",
        ""topics"": [
          ""_/_/things/twin/events"",
          ""_/_/things/live/messages""
        ],
        ""authorizationContext"": [""ditto:outbound-auth-subject""]
      }
    ]
  }
}' http://localhost:8080/api/2/connections
HTTP/1.1 400 Bad Request
Server: nginx/1.21.6
Date: Fri, 05 Jan 2024 10:03:12 GMT
Content-Type: application/json
Content-Length: 170
Connection: keep-alive

{""status"":400,""error"":""json.field.missing"",""message"":""JSON did not include required </connectionType> field!"",""description"":""Check if all required JSON fields were set.""}


","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1857/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1857,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85v-Jny,ditto,1878563314,1857,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-01-05T12:05:18Z,2024-01-05T12:05:18Z,"This is not valid JSON:
```json
{
  ""connectionType"": ""kafka"",
  ""connectionType"": ""kafka""
}
```

That could be the issue.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85v-Jny/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1857,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85wFEhB,ditto,1880377409,1857,NA,sushmasub10,87841656,sushma,,NA,2024-01-08T04:41:25Z,2024-01-08T04:41:25Z,"Hello thanks for the response, 
i tried to fix it with singe,
 {""connectionType"":""kafka""}
it still doesn't work.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85wFEhB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1857,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85wFSqv,ditto,1880435375,1857,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-01-08T06:13:05Z,2024-01-08T06:13:05Z,"Then you send something else not conforming to what is expected.
You should check your payload. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85wFSqv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1859,https://api.github.com/repos/eclipse-ditto/ditto/issues/1859,ditto,2071576858,1859,Some questions about custom Java implementations in Connectivity service,fix-all,6060290,,,CLOSED,2024-01-09T03:49:23Z,2024-01-18T06:30:10Z,"hi，
  I am using a custom Java implementation to handle payload mapping and I extends AbstractMessageMapper.
Sometimes Thing are related to each other and I need to search for other Thing, how can I do that?
Also can I get modification notifications for other Thing?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1859/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1859,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85wNWEw,ditto,1882546480,1859,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-01-09T07:37:05Z,2024-01-09T07:37:05Z,"Hi @xinbusiqq 

> Sometimes Thing are related to each other and I need to search for other Thing, how can I do that?

Unfortunately, that is not possible. Payload mappings in Ditto are sandboxed quite strictly and there is no functionality (yet) to lookup things during a payload mapping.

> Also can I get modification notifications for other Thing?

I don't understand that question, what is the problem you are facing here?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85wNWEw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1859,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85wNkKg,ditto,1882604192,1859,NA,fix-all,6060290,,,NA,2024-01-09T08:25:46Z,2024-01-09T08:25:46Z,"
hi,
Using Java jar package is it also running in sandbox?
My application scenario is like this, the OBU device is installed on the vehicle and sends vehicle location information, I have created a new Vehicle-Thing and OBU-Thing and I need to update the vehicle location information to the Vehicle-Thing. So I need to query the related Vehicle-ThingId set on the OBU-Thing using the deviceId reported by the OBU.
Also, I want to be notified when the relation between OBU and vehicle has been changed.
I need some help with this.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85wNkKg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1859,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85wNtMt,ditto,1882641197,1859,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-01-09T08:52:09Z,2024-01-09T08:52:09Z,"> Using Java jar package is it also running in sandbox?

Ah, you're right - with a Java based payload mapper you should be able to do anything - e.g. calling the Ditto HTTP API in order to lookup another thing.
But keep in mind that payload mappings should not take long, as that would limit the throughput of message processing heavily.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85wNtMt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1865,https://api.github.com/repos/eclipse-ditto/ditto/issues/1865,ditto,2085457107,1865,/alive and /ready health checks do not consider subsystem health,dimabarbul,2970647,Dmitriy Barbul,dimabarbul@gmail.com,CLOSED,2024-01-17T06:06:34Z,2024-01-23T09:15:05Z,"### Discussed in https://github.com/eclipse-ditto/ditto/discussions/1861

<details>
<summary>Discussion details</summary>

<div type='discussions-op-text'>

<sup>Originally posted by **dimabarbul** January 12, 2024</sup>
We deploy Ditto (tried 3.4.0 and 3.4.4) using helm chart.  Sometimes, for example, during cluster upgrade, we face following issue.

Things service loses connection to mongo (this is expected as during cluster upgrade mongo might be temporarily unavailable). But later when mongo is back online things service does not reconnect. In logs we can see errors `com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting for a server that matches ReadPreferenceServerSelector{readPreference=primary}. Client view of cluster state is {type=REPLICA_SET, srvResolutionException=com.mongodb.MongoConfigurationException: Failed looking up SRV record for '_mongodb._tcp.default-psmdb-db-rs0.databases.svc.cluster.local'.` But /alive and /ready health check endpoints return OK. Request to http://ditto-gateway:8080/health returns 503 as expected. We waited for more than an hour and the issue did not go away.

The only way that we found where we can see this error (apart from logs) is request to http://ditto-things:8080/status/health. The problem with this approach is that port 8080 is not declared in helm chart and thus is not accessible for k8s health probes.

Restarting the pod fixes the issue, but the problem is that this restart has to be manual as k8s does not see any issues.

<details>
<summary>Logs from things service that might be related</summary>
{""@timestamp"":""2024-01-11T12:52:00.028+01:00"",""@version"":""1"",""message"":""Stream failed"",""logger_name"":""org.eclipse.ditto.internal.utils.persistentactors.cleanup.PersistenceCleanupActor"",""thread_name"":""ditto-cluster-pekko.actor.default-dispatcher-14"",""level"":""ERROR"",""level_value"":40000,""stack_trace"":""java.util.concurrent.CompletionException: com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting for a server that matches ReadPreferenceServerSelector{readPreference=primary}. Client view of cluster state is {type=REPLICA_SET, srvResolutionException=com.mongodb.MongoConfigurationException: Failed looking up SRV record for '_mongodb._tcp.default-psmdb-db-rs0.databases.svc.cluster.local'., servers=[]\n\tat java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)\n\tat java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)\n\tat java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:636)\n\tat java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)\n\tat java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)\n\tat scala.concurrent.impl.FutureConvertersImpl$CF.apply(FutureConvertersImpl.scala:26)\n\tat scala.concurrent.impl.FutureConvertersImpl$CF.apply(FutureConvertersImpl.scala:23)\n\tat scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)\n\tat scala.concurrent.ExecutionContext$parasitic$.execute(ExecutionContext.scala:222)\n\tat scala.concurrent.impl.Promise$Transformation.submitWithValue(Promise.scala:429)\n\tat scala.concurrent.impl.Promise$DefaultPromise.submitWithValue(Promise.scala:338)\n\tat scala.concurrent.impl.Promise$DefaultPromise.tryComplete0(Promise.scala:285)\n\tat scala.concurrent.impl.Promise$Transformation.run(Promise.scala:504)\n\tat scala.concurrent.ExecutionContext$parasitic$.execute(ExecutionContext.scala:222)\n\tat scala.concurrent.impl.Promise$Transformation.submitWithValue(Promise.scala:429)\n\tat scala.concurrent.impl.Promise$DefaultPromise.submitWithValue(Promise.scala:338)\n\tat scala.concurrent.impl.Promise$DefaultPromise.tryComplete0(Promise.scala:285)\n\tat scala.concurrent.impl.Promise$DefaultPromise.tryComplete(Promise.scala:278)\n\tat scala.concurrent.Promise.tryFailure(Promise.scala:117)\n\tat scala.concurrent.Promise.tryFailure$(Promise.scala:117)\n\tat scala.concurrent.impl.Promise$DefaultPromise.tryFailure(Promise.scala:104)\n\tat org.apache.pekko.stream.impl.SeqStage$$anon$3.onUpstreamFailure(Sinks.scala:274)\n\tat org.apache.pekko.stream.impl.fusing.GraphInterpreter.processEvent(GraphInterpreter.scala:537)\n\tat org.apache.pekko.stream.impl.fusing.GraphInterpreter.execute(GraphInterpreter.scala:400)\n\tat org.apache.pekko.stream.impl.fusing.GraphInterpreterShell.runBatch(ActorGraphInterpreter.scala:662)\n\tat org.apache.pekko.stream.impl.fusing.ActorGraphInterpreter$SimpleBoundaryEvent.execute(ActorGraphInterpreter.scala:71)\n\tat org.apache.pekko.stream.impl.fusing.ActorGraphInterpreter$SimpleBoundaryEvent.execute$(ActorGraphInterpreter.scala:67)\n\tat org.apache.pekko.stream.impl.fusing.ActorGraphInterpreter$BatchingActorInputBoundary$OnError.execute(ActorGraphInterpreter.scala:92)\n\tat org.apache.pekko.stream.impl.fusing.GraphInterpreterShell.processEvent(ActorGraphInterpreter.scala:637)\n\tat org.apache.pekko.stream.impl.fusing.ActorGraphInterpreter.org$apache$pekko$stream$impl$fusing$ActorGraphInterpreter$$processEvent(ActorGraphInterpreter.scala:813)\n\tat org.apache.pekko.stream.impl.fusing.ActorGraphInterpreter$$anonfun$receive$1.applyOrElse(ActorGraphInterpreter.scala:831)\n\tat org.apache.pekko.actor.Actor.aroundReceive(Actor.scala:547)\n\tat org.apache.pekko.actor.Actor.aroundReceive$(Actor.scala:545)\n\tat org.apache.pekko.stream.impl.fusing.ActorGraphInterpreter.aroundReceive(ActorGraphInterpreter.scala:729)\n\tat org.apache.pekko.actor.ActorCell.receiveMessage(ActorCell.scala:590)\n\tat org.apache.pekko.actor.ActorCell.invoke(ActorCell.scala:557)\n\tat org.apache.pekko.dispatch.Mailbox.processMailbox(Mailbox.scala:280)\n\tat org.apache.pekko.dispatch.Mailbox.run(Mailbox.scala:241)\n\tat kamon.instrumentation.executor.ExecutorInstrumentation$InstrumentedForkJoinPool$TimingRunnable.run(ExecutorInstrumentation.scala:698)\n\tat org.apache.pekko.dispatch.ForkJoinExecutorConfigurator$PekkoForkJoinTask.exec(ForkJoinExecutorConfigurator.scala:57)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\nCaused by: com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting for a server that matches ReadPreferenceServerSelector{readPreference=primary}. Client view of cluster state is {type=REPLICA_SET, srvResolutionException=com.mongodb.MongoConfigurationException: Failed looking up SRV record for '_mongodb._tcp.default-psmdb-db-rs0.databases.svc.cluster.local'., servers=[]\n\tat com.mongodb.internal.connection.BaseCluster.createTimeoutException(BaseCluster.java:430)\n\tat com.mongodb.internal.connection.BaseCluster.handleServerSelectionRequest(BaseCluster.java:325)\n\tat com.mongodb.internal.connection.BaseCluster.access$700(BaseCluster.java:69)\n\tat com.mongodb.internal.connection.BaseCluster$WaitQueueHandler.run(BaseCluster.java:505)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n"",""sourceThread"":""Thread-37"",""pekkoAddress"":""pekko://ditto-cluster@192.168.40.197:2551"",""pekkoSource"":""pekko://ditto-cluster/user/thingsRoot/persistenceCleanup""}
{""@timestamp"":""2024-01-11T12:52:00.029+01:00"",""@version"":""1"",""message"":""Stream failed or shutdown. Next stream in <PT6M26.71875S> starting from <>"",""logger_name"":""org.eclipse.ditto.internal.utils.persistentactors.cleanup.PersistenceCleanupActor"",""thread_name"":""ditto-cluster-pekko.actor.default-dispatcher-14"",""level"":""INFO"",""level_value"":20000,""sourceThread"":""ditto-cluster-pekko.actor.default-dispatcher-11"",""pekkoAddress"":""pekko://ditto-cluster@192.168.40.197:2551"",""pekkoSource"":""pekko://ditto-cluster/user/thingsRoot/persistenceCleanup""}
{""@timestamp"":""2024-01-11T12:52:07.879+01:00"",""@version"":""1"",""message"":""Sending the health of this system as requested: StatusInfo [status=DOWN, details=[StatusDetailMessage [level=ERROR, message=\""See detailed messages for: persistence.\""]], children=[StatusInfo [status=DOWN, details=[StatusDetailMessage [level=ERROR, message=\""com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting for a server that matches WritableServerSelector. Client view of cluster state is {type=REPLICA_SET, srvResolutionException=com.mongodb.MongoConfigurationException: Failed looking up SRV record for '_mongodb._tcp.default-psmdb-db-rs0.databases.svc.cluster.local'., servers=[]\""]], children=[], label=persistence]], label=null]"",""logger_name"":""org.eclipse.ditto.internal.utils.health.status.StatusSupplierActor"",""thread_name"":""ditto-cluster-pekko.actor.default-dispatcher-6"",""level"":""INFO"",""level_value"":20000,""sourceThread"":""Thread-38"",""pekkoAddress"":""pekko://ditto-cluster@192.168.40.197:2551"",""pekkoSource"":""pekko://ditto-cluster/user/statusSupplier""}
{""@timestamp"":""2024-01-11T12:52:12.009+01:00"",""@version"":""1"",""message"":""Timed out after 30000 ms while waiting for a server that matches WritableServerSelector. Client view of cluster state is {type=REPLICA_SET, srvResolutionException=com.mongodb.MongoConfigurationException: Failed looking up SRV record for '_mongodb._tcp.default-psmdb-db-rs0.databases.svc.cluster.local'., servers=[]"",""logger_name"":""org.eclipse.ditto.internal.utils.persistence.mongo.MongoHealthChecker"",""thread_name"":""ditto-cluster-pekko.actor.default-dispatcher-11"",""level"":""ERROR"",""level_value"":40000,""stack_trace"":""com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting for a server that matches WritableServerSelector. Client view of cluster state is {type=REPLICA_SET, srvResolutionException=com.mongodb.MongoConfigurationException: Failed looking up SRV record for '_mongodb._tcp.default-psmdb-db-rs0.databases.svc.cluster.local'., servers=[]\n\tat com.mongodb.internal.connection.BaseCluster.createTimeoutException(BaseCluster.java:430)\n\tat com.mongodb.internal.connection.BaseCluster.handleServerSelectionRequest(BaseCluster.java:325)\n\tat com.mongodb.internal.connection.BaseCluster.access$700(BaseCluster.java:69)\n\tat com.mongodb.internal.connection.BaseCluster$WaitQueueHandler.run(BaseCluster.java:505)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n"",""sourceThread"":""Thread-39"",""pekkoAddress"":""pekko://ditto-cluster@192.168.40.197:2551"",""pekkoSource"":""pekko://ditto-cluster/user/thingsRoot/healthCheckingActor/persistence""}
</details></div>

</details>

As discussed, it would be good to create class that would check subsystem health and could be used as Pekko management health check.

@thjaeckle I'm not sure about if the class should be included by default to liveness (or readiness) checks or this possibility should be just documented. Could you, please, advise?
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1865/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1865,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85w82bx,ditto,1894999793,1865,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-01-17T06:09:05Z,2024-01-17T06:09:05Z,"@dimabarbul yes, I would by default include the subsystem health checks.
If they are not wanted, the configuration can be overwritten to exclude them.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85w82bx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1868,https://api.github.com/repos/eclipse-ditto/ditto/issues/1868,ditto,2089787812,1868,MQTT messages sent when connectivity service was stopped are not processed,dimabarbul,2970647,Dmitriy Barbul,dimabarbul@gmail.com,OPEN,2024-01-19T07:08:08Z,2024-01-28T10:42:55Z,"Recently we had similar issue #1767 and it was fixed. This issue has different cause.

When connectivity service is being stopped, it stops all connections **and unsubscribes** ([link to code](https://github.com/eclipse-ditto/ditto/blob/f2904efcb447fc0734cd7ed2ff6ec4967e10fb79/connectivity/service/src/main/java/org/eclipse/ditto/connectivity/service/messaging/mqtt/hivemq/MqttClientActor.java#L226)) from all MQTT topics. In MQTT if client unsubscribes from topic, then new messages for this topic will not be kept by broker in the client session and will not be delivered on next client connect. This means that even if connection has ""cleanSession"" set to false and ""qos"" 1 or 2, the messages will not be delivered when connectivity service will start again.

Following are my thoughts on that.
My initial idea was to not do unsubscribing for MQTT at all. For cases if we do not need session (for example, we set ditto.connectivity.connection.mqtt.session-expiry-interval to 0s) this will have no impact as broker will discard session upon client disconnect.
But this approach will not work for edge case when we change list of topic we want to subscribe to. Apart from session, broker  remembers client subscriptions in session: if client subscribed to topic ""topic1"", then disconnected and connected back, it will be subscribed to ""topic1"" and will receive all new messages for this topic. So if we change list of topics for connection and do not change client ID, the client will receive messages from all previous and newly subscribed topics.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1868/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1868,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85xQYqD,ditto,1900120707,1868,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-01-19T10:12:28Z,2024-01-19T10:12:28Z,"Good catch, thanks for finding and bringing it up 👍 

My thoughts:
* Yes, I also think, we should not `unsubscribe` from the MqttClient in `stopConsuming()`
* But we should `unsubscribe` in other cases (as you mentioned regarding e.g. the topic change):
   * when a connection is actively `closed`
   * when a connection is edited
      * even more sophisticated would be of course to only `unsubscribe` when ""relevant"" parts were edited, e.g. the topics to consume from changed","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85xQYqD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1868,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85yDdHm,ditto,1913508326,1868,NA,dimabarbul,2970647,Dmitriy Barbul,dimabarbul@gmail.com,NA,2024-01-28T08:06:13Z,2024-01-28T08:06:13Z,"I'm fairly new to Akka/Pekko, so I might get it wrong. But from what I read I don't see possibility (for now) to distinguish between closing connection and modifying connection.
I checked [CloseConnectionStrategy.java](https://github.com/eclipse-ditto/ditto/blob/3f6be0f5c0d7884055c6635157426916ef3f2125/connectivity/service/src/main/java/org/eclipse/ditto/connectivity/service/messaging/persistence/strategies/commands/CloseConnectionStrategy.java#L56) and [ModifyConnectionStrategy.java](https://github.com/eclipse-ditto/ditto/blob/3f6be0f5c0d7884055c6635157426916ef3f2125/connectivity/service/src/main/java/org/eclipse/ditto/connectivity/service/messaging/persistence/strategies/commands/ModifyConnectionStrategy.java#L97) and they do the same things when connection is open, but now should be closed: close connection, stop actor:

```java
    actions = Arrays.asList(ConnectionAction.PERSIST_AND_APPLY_EVENT, ConnectionAction.UPDATE_SUBSCRIPTIONS, ConnectionAction.CLOSE_CONNECTION,
            ConnectionAction.STOP_CLIENT_ACTORS, ConnectionAction.SEND_RESPONSE);
```

Moreover, modifying of open connection closes it first, then stops actors and then opens it again. This makes MQTT actor unaware if we want to create brand new connection or update existing one. So it needs to be taken to upper level - ConnectionPersistenceActor, I guess.

Modifying of closed connection does not do any unsubscribe, apparently. So if we modify closed connection to closed one, we'll need to do unsubscribe on opening the connection.

Having that said, understanding if the MQTT client should unsubscribe (from some or all topics) or not does not seem a straightforward thing.

To be honest, I don't imagine how it would be intuitive to understand if we want just to close connection or close and discard saved session. Maybe we could introduce some header, e.g., ditto-mqtt-clear-session and process it when connection is being closed (for example, when processing CloseConnection or ModifyConnection commands), and not do unsubscribe anywhere else? I'm not fan of magic headers, but guessing if user wants to clear session seem to be complicated and prone to mistakes. Introducing new commands only for MQTT (like, CloseConnectionAndClear) does not seem reasonable to me.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85yDdHm/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1869,https://api.github.com/repos/eclipse-ditto/ditto/issues/1869,ditto,2093518877,1869,"Resolving imported policies in Ditto's ""things-search"" does not use a cache to load same policy",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2024-01-22T09:52:12Z,2024-01-25T17:03:56Z,"During updating a single policy which is imported in ~5.000 other Policies, I noticed many ""ask timeout exceptions"" being thrown in Ditto's ""things-search"" service.

It is intended that - when a imported policy is changed - all things using policies importing from that single policy are updated in the search index (to reflect the changed permissions).

It is however quite unexpected that e.g. the same policy `org.eclipse.ditto:my-root-policy` is loaded for all policies which use that exact same policy. But this seems to be the case:
https://github.com/eclipse-ditto/ditto/blob/aba53adf779a5dd6cad8c8548457097f7905969d/thingsearch/service/src/main/java/org/eclipse/ditto/thingsearch/service/persistence/write/streaming/ResolvedPolicyCacheLoader.java#L49-L50

This will of course cause a huge amount of  `SudoRetrievePolicy` commands issued at the exact same time against the `policies` shard region, leading to many timeouts.
This place should make use of the Policy cache, so that for each cluster instance of ""things-search"" a heavily ""imported"" policy is only loaded once.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1869/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1869,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85x4dPn,ditto,1910625255,1869,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-01-25T17:03:56Z,2024-01-25T17:03:56Z,Resolved by: #1872,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85x4dPn/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1873,https://api.github.com/repos/eclipse-ditto/ditto/issues/1873,ditto,2100076569,1873,Steps for increasing the maximum size for paging,Korakbhakta02,67550363,,,CLOSED,2024-01-25T10:35:36Z,2024-02-05T14:59:09Z,"Present maximum size for paging is 200 for things. But the items created are more than 200 and in future, more things will be created. All these things are to be presented. so, what are the steps to remove the maximum limit?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1873/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1873,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85x4b3C,ditto,1910619586,1873,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-01-25T17:00:54Z,2024-01-25T17:00:54Z,"That's what you would use [pagination](https://dev.to/pragativerma18/unlocking-the-power-of-api-pagination-best-practices-and-strategies-4b49) for.
Ditto documentation see: https://eclipse.dev/ditto/basic-search.html#sorting-and-paging-options
HTTP API docs see: https://eclipse.dev/ditto/http-api-doc.html#/Things-Search/get_api_2_search_things","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85x4b3C/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1873,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85yE6M-,ditto,1913889598,1873,NA,Korakbhakta02,67550363,,,NA,2024-01-29T03:14:23Z,2024-01-29T03:14:23Z,"But that pagination limit is also 200. If I want to get the list of items which is more than 200, how to get? And also, if created more than 1000 items, ditto api break sometimes.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85yE6M-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1873,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85yFSyy,ditto,1913990322,1873,NA,alstanchev,50709547,Aleksandar Stanchev,,NA,2024-01-29T05:30:14Z,2024-01-29T05:30:14Z,"As pointed in the documentation provided by @thjaeckle, you would receive a cursor in the response if the result is more than the page size. It should be include it in the second request so that you would receive the second page and so on.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85yFSyy/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1878,https://api.github.com/repos/eclipse-ditto/ditto/issues/1878,ditto,2103473584,1878,Update Ditto to run with Java 21 runtime,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2024-01-27T09:33:37Z,2024-09-02T11:59:47Z,It is time to use latest&greatest. ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1878/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1879,https://api.github.com/repos/eclipse-ditto/ditto/issues/1879,ditto,2105029784,1879,Helm: incorrect deploy order in 3.5.0 helm chart,WatcherWhale,31286353,Mathias Maes,mathias.maes@aloxy.io,CLOSED,2024-01-29T09:24:06Z,2024-01-29T10:00:18Z,"With the new jobs introduced in the 3.5.0 helm chart, ditto cannot deploy correctly because the configmap with the bash script is missing. This probably only happens for deployments that upgrade from 3.4.x or earlier.

The pre upgrade hook stays in `ContainerCreating` state with the following events:
```
Events:
  Type     Reason       Age                    From               Message
  ----     ------       ----                   ----               -------
  Warning  FailedMount  2m10s (x3 over 6m43s)  kubelet            Unable to attach or mount volumes: unmounted volumes=[hook-scripts], unattached volumes=[], failed to process volumes=[]: timed out waiting for the condition
  Warning  FailedMount  32s (x12 over 8m46s)   kubelet            MountVolume.SetUp failed for volume ""hook-scripts"" : configmap ""ditto-ook-scripts"" not found
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1879/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1882,https://api.github.com/repos/eclipse-ditto/ditto/issues/1882,ditto,2105962586,1882,"When using Policy Imports, the Ditto search index might lose Data with Ditto 3.5.0",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2024-01-29T16:56:03Z,2024-01-30T07:53:51Z,"We just encountered, when updating to Ditto 3.5.0, that Ditto's search index might loose (""empty out"") things with such a message:
```
WARN   Computed - due to missing enforcer - 'emptied out' ThingWriteModel for metadata <Metadata [thingId=...
```
That means that the thing is not ""findable"" afterwards with any Ditto search query, but only accessible directly via HTTP `GET /api/2/things/<thingId>`.

The reason seems to be extensive use of ""Policy Imports"" (the ""Policy Label"" is getting too long > 256 chars) - because of transitive lookup of policy imports:
```
org.eclipse.ditto.policies.model.PolicyEntryInvalidException: The Policy Label imported-io.......:a91d48bc-268c-4836-9ee2-059777c6ea50-imported-io........:a91d48bc-268c-4836-9ee2-059777c6ea50-main-imported-io........-imported-io........-LABEL is invalid
	at org.eclipse.ditto.policies.model.PolicyEntryInvalidException$Builder.doBuild(PolicyEntryInvalidException.java:127)
	at org.eclipse.ditto.policies.model.PolicyEntryInvalidException$Builder.doBuild(PolicyEntryInvalidException.java:113)
	at org.eclipse.ditto.base.model.exceptions.DittoRuntimeExceptionBuilder.build(DittoRuntimeExceptionBuilder.java:176)
	at org.eclipse.ditto.policies.model.ImmutableImportedLabel.of(ImmutableImportedLabel.java:65)
	at org.eclipse.ditto.policies.model.PoliciesModelFactory.newImportedLabel(PoliciesModelFactory.java:82)
	at org.eclipse.ditto.policies.model.PolicyImporter.lambda$rewriteImportedLabels$4(PolicyImporter.java:70)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.Streams$StreamBuilderImpl.forEachRemaining(Streams.java:411)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1845)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.eclipse.ditto.policies.model.PolicyImporter.rewriteImportedLabels(PolicyImporter.java:75)
	at org.eclipse.ditto.policies.model.PolicyImporter.lambda$mergeImportedPolicyEntries$0(PolicyImporter.java:57)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.eclipse.ditto.policies.model.PolicyImporter.lambda$mergeImportedPolicyEntries$1(PolicyImporter.java:53)
	at java.base/java.util.concurrent.CompletableFuture.uniApplyNow(CompletableFuture.java:684)
	at java.base/java.util.concurrent.CompletableFuture.uniApplyStage(CompletableFuture.java:662)
	at java.base/java.util.concurrent.CompletableFuture.thenApply(CompletableFuture.java:2168)
	at java.base/java.util.concurrent.CompletableFuture.thenApply(CompletableFuture.java:144)
	at org.eclipse.ditto.policies.model.PolicyImporter.lambda$mergeImportedPolicyEntries$2(PolicyImporter.java:53)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1845)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.reduce(ReferencePipeline.java:667)
	at org.eclipse.ditto.policies.model.PolicyImporter.mergeImportedPolicyEntries(PolicyImporter.java:60)
	at org.eclipse.ditto.policies.model.Policy.withResolvedImports(Policy.java:446)
	at org.eclipse.ditto.thingsearch.service.persistence.write.streaming.ResolvedPolicyCacheLoader.lambda$asyncLoad$6(ResolvedPolicyCacheLoader.java:52)
```

The PR which introduced this was a bugfix that the search did not use a cache for looking up policy imports: #1872 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1882/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1885,https://api.github.com/repos/eclipse-ditto/ditto/issues/1885,ditto,2107004980,1885,commands to device,sushmasub10,87841656,sushma,,CLOSED,2024-01-30T05:49:17Z,2024-05-07T03:34:47Z,can you please provide an example of how to send command to device from eclipse ditto ? And what is the difference between sending message as TURNOFF and command as TURNOFF ? ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1885/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1885,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85yxzfd,ditto,1925658589,1885,NA,thfries,20593339,Thomas Fries,,NA,2024-02-04T09:34:11Z,2024-02-04T09:34:11Z,"Hello @sushmasub10,

See also [here](https://eclipse.dev/ditto/protocol-twinlive.html)

**Option 1: Use live channel: Send a message to the device (bypassing the twin) - device receives the message**

Example via HTTP API:
```
POST http://localhost:8080/api/2/things/org.eclipse.ditto:4711/features/fan/inbox/messages/TURNOFF?timeout=0
```
This will generate the following ditto message:
```
{
  ""topic"": ""org.eclipse.ditto/4711/things/live/messages/TURNOFF"",
  ""headers"": {...},
  ""path"": ""/features/fan/inbox/messages/TURNOFF""
}
```

**Option 2: Use twin channel: Send a command to modify the twin - device receives a ""modified"" event**

Example via HTTP API:
```
PUT http://localhost:8080/api/2/things/org.eclipse.ditto:4711/features/fan
```
with payload
```
{
  ""desiredProperties"": {
    ""state"": ""OFF""
  }
}
```
This will generate the following ditto message:
```
{
  ""topic"": ""org.eclipse.ditto/4711/things/twin/events/modified"",
  ""headers"": {...},
  ""path"": ""/features/fan"",
  ""value"": {
    ""desiredProperties"": {
      ""state"": ""OFF""
    }
  }
}
```

**Precondition**
Both options requires the device to subscribe to receive these messages. E.g. the device is connected to a MQTT broker and you have a ditto connection to this broker with a **target** like this:
```
{
      ""address"": ""eclipse-ditto-sandbox/command/{{ thing:id }}"",
      ""topics"": [
        ""_/_/things/twin/events"",
        ""_/_/things/live/messages""
      ],
      ""qos"": 0,
      ""authorizationContext"": [
        ""nginx:ditto""
      ],
      ""headerMapping"": {}
    }
```
And your device is subscribing like this:
```
mosquitto_sub -h test.mosquitto.org -p 1883 -t eclipse-ditto-sandbox/command/org.eclipse.ditto:4711
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85yxzfd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1885,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85y-CJN,ditto,1928864333,1885,NA,sushmasub10,87841656,sushma,,NA,2024-02-06T06:27:06Z,2024-02-06T06:27:06Z,Thank you so much. ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85y-CJN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1888,https://api.github.com/repos/eclipse-ditto/ditto/issues/1888,ditto,2114994189,1888,Retrieving JSON arrays via `fields` selector is broken in Ditto 3.5.1 ,AkshayKumarCB,104069380,,,CLOSED,2024-02-02T13:56:05Z,2024-02-04T16:38:24Z,"The GET /api/2/search/things API is currently broken on the release Ditto 3.5.1 when we attempt to fetch an array property.
A sample scenario is given below.

Sample data stored in Ditto:
```
{
  ""thingId"": ""sample.eclipse.com:test_1"",
  ""policyId"": ""sample.eclipse.com:policy-default"",
  ""attributes"": {
    ""a"": ""b""
  },
  ""features"": {
    ""values"": {
      ""properties"": {
        ""a"": [
          1,
          2,
          3
        ]
      }
    }
  }
}
```

API query to fetch only the array 'a' from the Ditto thing:
`/api/2/search/things?namespaces=sample.eclipse.com&fields=features/values/properties/a`

Response on Ditto 3.4.4: (Returns array with values for ""a"")
`{""items"":[{""features"":{""values"":{""properties"":{""a"":[1,2,3]}}}}],""nextPageOffset"":-1}`

Response on Ditto 3.5.1: (Returns an empty array for ""a"")
`{""items"":[{""features"": { ""values"": { ""properties"": { ""a"": [] }}}}],""nextPageOffset"": -1}`

However, if we were to update the fields query parameter in the request from `features/values/properties/a` to `features/values/properties`, we get the correct response - similar to what was observed in 3.4.4.

Looks like we have a bug for search/things API for arrays in 3.5.1 that needs to be fixed.

Reproducibility rate: 100% (5/5)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1888/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1888,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85yrixZ,ditto,1924017241,1888,NA,AkshayKumarCB,104069380,,,NA,2024-02-02T14:38:47Z,2024-02-02T14:38:47Z,"Looks like the same behavior is also observed for **/api/2/things** API:

Request: /api/2/things/sample.eclipse.com:test_1?fields=**features/values/properties/a**
Response: `{""features"":{""values"":{""properties"":{""a"":[]}}}}`

Request: /api/2/things/sample.eclipse.com:test_1?fields=**features/values/properties**
Respnose: `{""features"":{""values"":{""properties"":{""a"":[1,2,3]}}}}`","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85yrixZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1888,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85yrz3T,ditto,1924087251,1888,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-02-02T15:19:21Z,2024-02-02T15:19:21Z,"Thanks a lot @AkshayKumarCB for the bugreport.
I will look into it - I remember having changed something around the field selection.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85yrz3T/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1888,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ysEek,ditto,1924155300,1888,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-02-02T15:55:08Z,2024-02-02T15:55:08Z,I assume this bug was introduced in PR #1860,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85ysEek/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1892,https://api.github.com/repos/eclipse-ditto/ditto/issues/1892,ditto,2117302153,1892,Helm chart: Update MongoDB chart dependency to 13.x (MongoDB 6),calohmn,891931,Carsten Lohmann,,CLOSED,2024-02-04T21:00:41Z,2024-02-07T10:10:26Z,"In the ditto Helm chart, the mongoDB chart dependency is set to version `^12.x`, the latest version to match that being `12.1.31`.
That version uses the bitnami `common` chart version `1.16.1`.

With bitnami `common` chart version `2.9.0`, there has been an incompatible change in the `common.labels.standard` named template.
This means, that when using the ditto chart together with another bitnami chart that uses the `common` chart >= 2.9 (e.g. the newest Kafka chart), there may be an error like
```
template: cloud2edge/charts/hono/charts/kafka/templates/rbac/serviceaccount.yaml:12:14: 
executing ""cloud2edge/charts/hono/charts/kafka/templates/rbac/serviceaccount.yaml"" at <include ""common.labels.standard"" (dict ""customLabels"" .Values.commonLabels ""context"" $)>: 
error calling include: template: cloud2edge/charts/ditto/charts/mongodb/charts/common/templates/_labels.tpl:6:27: 
executing ""common.labels.standard"" at <include ""common.names.name"" .>: 
error calling include: template: cloud2edge/charts/ditto/charts/mongodb/charts/common/templates/_names.tpl:6:18: 
executing ""common.names.name"" at <.Chart.Name>: nil pointer evaluating interface {}.Name
```
(see also https://github.com/bitnami/charts/issues/19417).

The above error is from testing the Eclipse IoT Packages cloud2edge chart with the upcoming Hono Helm chart version which references Kafka chart version 26.8.4 (see https://github.com/eclipse/packages/pull/523).

The solution here would be to update the mongoDB chart dependency in the ditto chart to at least `13.17.0` (or more generally `^13.x`, meaning `13.18.5`).

This would mean using a MongoDB 6 image though, the question there being whether ditto supports that version (https://eclipse.dev/ditto/installation-running.html#start-ditto only lists 5.0 as latest supported version).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1892/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1892,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85y0xpx,ditto,1926437489,1892,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-02-05T08:18:32Z,2024-02-05T08:18:32Z,"@kalinkostashki @alstanchev could you run the Ditto System-Tests against MongoDB 6.0 so that we can verify if this completely works?
I would assume so, but only update the dependency in the chart if we can verify that :)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85y0xpx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1892,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85zH2Ur,ditto,1931437355,1892,NA,alstanchev,50709547,Aleksandar Stanchev,,NA,2024-02-07T07:29:17Z,2024-02-07T07:29:17Z,@thjaeckle Tests look good running with mongo 6.0,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85zH2Ur/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1892,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85zH3qe,ditto,1931442846,1892,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-02-07T07:33:18Z,2024-02-07T07:33:18Z,"@alstanchev cool - could we then bump the mongo version used in ditto-tests permantently to MongoDB 6.0?
And we can also bump the bitnami mongoDB dependency to `^13.x`

I can provide that once I come to it ..","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85zH3qe/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1892,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85zIO5X,ditto,1931538007,1892,NA,alstanchev,50709547,Aleksandar Stanchev,,NA,2024-02-07T08:41:15Z,2024-02-07T08:41:15Z,I don't see any reason not to.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85zIO5X/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1893,https://api.github.com/repos/eclipse-ditto/ditto/issues/1893,ditto,2118356950,1893,Ensure the consistency of signal enrichment for connections,kyberpunk,12064920,Vít Holásek,,CLOSED,2024-02-05T11:55:12Z,2024-02-22T10:43:05Z,"Hello. I have a specific case where I use following connection `topic _/_/things/twin/events?extraFields=features/{{feature:id}},thingId&filter=like(resource:path,'/features/SoftwareUpdate*')` to consume change notifications by stateless service, which are enriched for other contextual data from the same feature even in case of partial feature modification. Currently it happens in case of concurrent modify commands, that `extra` field contains different values than actual changes in `value` field (see screenshot).

Since ditto supports retrieving historical revisions, the proposal is to provide deterministic and strong consistency by not looking up the current state, but the state at the revision number of the processed event. However, in some other use cases it may be more efficient to keep the caching implementation.

Thank you.

![ditto-mismatch-between-value-and-extra-status_ditto-twin-software-update-topic](https://github.com/eclipse-ditto/ditto/assets/12064920/3b511ef3-c172-4942-b55e-378fbefd26a8)

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1893/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1893,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85zxkT4,ditto,1942373624,1893,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-02-13T20:14:42Z,2024-02-13T20:14:42Z,I try to take a look soon. ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85zxkT4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1894,https://api.github.com/repos/eclipse-ditto/ditto/issues/1894,ditto,2120665015,1894,"In internal Ditto pub/sub, don't only filter for `authorizationSubject`, but also to subscribed `namespaces`",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2024-02-06T12:30:13Z,2024-02-20T14:06:16Z,"Currently, when e.g. a connection in Ditto's ""connectivity"" service subscribes for ""thing events"" (modifications) to publish to e.g. a Kafka topic, it will receive all the events which the configured `""authorizationContext""` subject is allowed to ""READ"".

So it will receive all events and then apply the optionally defined RQL `filter` statement as well as the defined `namespaces` (also as a filter criteria).
The RQL `filter` cannot be filtered on pub/sub level, however the `namespaces` could be.

In the best case, the `namespaces` (if defined) would also be used when subscribing via Ditto pub/sub to the internal topic and a connection which e.g. is only interested in events of namespace `foo` would not get notified about events in namespace `bar`, even if it would have `READ` permissions for those things.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1894/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1895,https://api.github.com/repos/eclipse-ditto/ditto/issues/1895,ditto,2122157166,1895,Question regarding scalability in Ditto,aitiqad,82869880,Sohel Kabir Rana,,CLOSED,2024-02-07T04:21:01Z,2024-02-09T10:40:15Z,"Ditto API endpoints are taking longer time than usual (max time it took was 2.53secs on POSTMAN). What I found is that when the count of things exceeds 200~300 this issue occurs, hence I think there might be a scalability issue.
Question is can we make it more scalable? If so, how?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1895/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1895,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85zHz3i,ditto,1931427298,1895,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-02-07T07:21:33Z,2024-02-07T07:21:33Z,"How do you operate Ditto?
In a kubernetes cluster? Scaled to how many replicas? How many CPU requests and memory is configured?

I know of several installations of Ditto handling > 1 million things, if scaled properly.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85zHz3i/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1895,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85zIGjT,ditto,1931503827,1895,NA,Korakbhakta02,67550363,,,NA,2024-02-07T08:19:04Z,2024-02-07T08:19:04Z,"> How do you operate Ditto? In a kubernetes cluster? Scaled to how many replicas? How many CPU requests and memory is configured?
> 
> I know of several installations of Ditto handling > 1 million things, if scaled properly.

We are from same team. It is installed as a single instance in a kubernetes cluster and scaled to 1 replica only for now. Can you please provide the procedures for making it scalable enough to handle 1million things?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85zIGjT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1895,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85zIM3o,ditto,1931529704,1895,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-02-07T08:35:48Z,2024-02-07T08:35:48Z,This [blogpost](https://eclipse.dev/ditto/2023-10-09-ditto-benchmark.html) should give you enough information to get started.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85zIM3o/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1896,https://api.github.com/repos/eclipse-ditto/ditto/issues/1896,ditto,2122264608,1896,mutiple ditto instance,sushmasub10,87841656,sushma,,CLOSED,2024-02-07T06:11:32Z,2024-02-16T14:35:27Z,"when i install eclipse ditto, it comes with default login with username and password (ditto:ditto) devops credentials(foobar for ngnix). 
How do i create multiple ditto instace for different user password and ngnix password ? kindly need your help. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1896/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1896,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85zYFMw,ditto,1935692592,1896,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-02-09T10:40:02Z,2024-02-09T10:40:02Z,"I am afraid I don't understand your question.
What are you trying to achieve and what problem do you have?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85zYFMw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1896,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85zYXIY,ditto,1935766040,1896,NA,sushmasub10,87841656,sushma,,NA,2024-02-09T11:34:19Z,2024-02-09T11:34:19Z,"Thanks for responding.
I need to create different eclipse ditto login accounts other than the default one which comes with ditto, ditto as username and password respectively. For different set of things i want to have different ditto accounts. 
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85zYXIY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1896,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85zY1iY,ditto,1935890584,1896,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-02-09T13:01:34Z,2024-02-09T13:01:34Z,"You can use 2 options to authenticate users:
* [""pre-authentication""](https://eclipse.dev/ditto/installation-operating.html#pre-authentication)
   * e.g. using nginx for authentication
   * Ditto's Helm chart already provides an option to specify usernames and password via Helm config: https://github.com/eclipse-ditto/ditto/blob/4a6011be89556ab1bae69ada72a4e86f3e198f5f/deployment/helm/ditto/values.yaml#L71-L76
* [OpenID connect](https://eclipse.dev/ditto/installation-operating.html#openid-connect)

For a productive setup, I would always recommend using an OpenID connect provider, like for example Keycloak or a SaaS service like auth0.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85zY1iY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1899,https://api.github.com/repos/eclipse-ditto/ditto/issues/1899,ditto,2126975318,1899,Behavior of search/things API when 'indexedFieldsLimiting' feature is enabled,AkshayKumarCB,104069380,,,CLOSED,2024-02-09T11:47:24Z,2024-02-16T14:35:36Z,"Hello, we have recently been evaluating Eclipse-Ditto 3.5. We have enabled the indexedFieldsLimiting feature for our solution. We can confirm that the search collection only contains the fields added to the configuration.

How is the search/things API expected to behave with the feature enabled? Without any `fields` parameter mentioned for the request for a given namespace (/api/2/search/things?namespace=x), what is the expected behavior? The current behavior I observe is that the entire Ditto thing is returned for the matching objects.

**Question**: For a search request without any fields listed, do we expect the entire Ditto thing to be returned or do we return only the indexed fields for a given matching Ditto thing?
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1899/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1899,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85zYt-u,ditto,1935859630,1899,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-02-09T12:40:04Z,2024-02-09T12:40:04Z,"Hi.

Good to hear that the feature works for you.
And yes, what you observe is exactly how Ditto behaves:
The search index only contains the fields which you are able to **search** for - Ditto will however always return the complete Thing JSON, as this is not retrieved via the search index, but via the ""things"" service.
And depending on what your user's permission is in the used policy of the thing, you will get all the persisted data your user is allowed to ""READ"".","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85zYt-u/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1905,https://api.github.com/repos/eclipse-ditto/ditto/issues/1905,ditto,2146365232,1905,Header placeholders could not be resolved in connection,neottil,84083982,Luca Neotti,NEOT.LUKA.89@GMAIL.COM,CLOSED,2024-02-21T10:18:47Z,2024-02-21T13:33:44Z,"Use case:
A service calls messages API with a correlation-id header valued. Ditto triggers an event on the device that is processed and a response is then generated through an event that is captured by the initial service. These events should all contain the same correlation-id header with the value arriving via API.

To configure this scenario, I understand, that I can configure header mappings on both surce and connection targets.
https://eclipse.dev/ditto/3.2/connectivity-header-mapping.html
https://eclipse.dev/ditto/3.2/basic-connections.html#source-header-mapping
https://eclipse.dev/ditto/3.2/basic-connections.html#target-header-mapping

The example given in the documentation reports the correlation-id header, but trying to provide the connection with this headermapping returns:
{""status"":400,""error"":""connectivity:connection.configuration.invalid"",""message"":""The placeholder 'header:correlation-id' could not be resolved."",""description"":""Some placeholders could not be resolved. Check the spelling of the placeholder and make sure all required headers are set.""}

Checking in the documentation, it appears that the header can be inserted and customized as desired.
https://eclipse.dev/ditto/3.2/basic-placeholders.html#header-placeholder

To reproduce run ditto 3.2.0 with docker. Save the file data.json with the following content (certs are self signed generated for example):
```json
{
    ""id"": ""glin-connection"",
    ""name"": null,
    ""connectionType"": ""mqtt"",
    ""connectionStatus"": ""open"",
    ""uri"": ""ssl://my.broker.local:8883"",
    ""sources"": [
        {
            ""addresses"": [
                ""glin_dev/+/ditto/#""
            ],
            ""consumerCount"": 1,
            ""qos"": 0,
            ""authorizationContext"": [
                ""nginx:ditto""
            ],
            ""headerMapping"": {
                ""correlation-id"": ""{{header:correlaion-id}}""
            },
            ""replyTarget"": {
                ""address"": ""{{header:reply-to}}"",
                ""headerMapping"": {},
                ""expectedResponseTypes"": [
                    ""response"",
                    ""error""
                ],
                ""enabled"": true
            }
        }
    ],
    ""targets"": [
        {
            ""address"": ""glin_dev/{{thing:name}}/ditto/{{thing:id}}"",
            ""topics"": [
                ""_/_/things/twin/events"",
                ""_/_/things/live/messages""
            ],
            ""qos"": 0,
            ""authorizationContext"": [
                ""nginx:ditto""
            ],
            ""headerMapping"": {}
        }
    ],
    ""clientCount"": 1,
    ""failoverEnabled"": true,
    ""validateCertificates"": true,
    ""processorPoolSize"": 1,
    ""specificConfig"": {
        ""clientId"": ""glin_dev_digital-twin""
    },
    ""credentials"": {
        ""type"": ""client-cert"",
        ""cert"": ""-----BEGIN CERTIFICATE-----\nMIIFYjCCA0qgAwIBAgIBATANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJJVDEO\nMAwGA1UECAwFSXRhbHkxDTALBgNVBAcMBHJvbWUxDjAMBgNVBAoMBW15b3JnMRYw\nFAYDVQQDDA1sb2NhbC5kaXR0by4qMB4XDTI0MDIyMTA5MjgzNloXDTI1MDIyMDA5\nMjgzNlowPDELMAkGA1UEBhMCSVQxDjAMBgNVBAgMBUl0YWx5MQ0wCwYDVQQHDARy\nb21lMQ4wDAYDVQQKDAVteW9yZzCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoC\nggIBAN9G2mrh03jasXYRpaGsUiyTSli/0xwcu4IojAbrZgFGpMwIjmEJ/Pad3jGD\n5v21ea2YmFQhfXRQlAGdZPVaetdZol3cnhXemLw6nQxu6ZNOqw0lJa/UbqJp+MfI\nnbqgXwUA7RHQ/ZuQ09dYf/XDj9qOPDq/t/fvxgD5DY/xufFdHwhk3Qz23COWaDS4\nYlM6+Rwu1ul39EKnh+dddz+WKqVbdt8/o9gkzfDU3+W/WPuAHDGgy22kNVmnQG/A\n3GSj+bea1v87n+/eCr4UNZMDDNN9zWGb1DsGZpXIduRDo3cGfh/znJrAny/4feeM\n18oQd9EU5xs7ru6KoiNxLReUqFhbUuIR6vd3/Kg0E3RnoCGxmTs2Y66PeOJ0WW/d\n22E0WdFaxb8GpdBP4Q10B1OZZCWd9w/D7G2+UjMLq4cAsUpTIw0sE81NXTZq28Le\n//UsvI7EIIxihGeE08nUHmbLvsxrsw6BsV87njsONUZ7pmTjwKoMGUiXC3snj3Xi\nfideIK+h7456DX8nydNOY/jAESaxK4gHieFByDvYbflnmZt7Qzc7fKzMdEFSOeYb\nWPO0NNHPkE++3hVFHaJEb7FUFRCQdNTR5RuoM4rDib/bzgAz+pscF2w1uEcMuAGZ\n7U5qO5hx5AmgDLLmDh239v372a95FPi+QimaJ9GJF6klRqEfAgMBAAGjVzBVMBMG\nA1UdJQQMMAoGCCsGAQUFBwMCMB0GA1UdDgQWBBSQtUZmMgIutMgTRewFECFIpUpA\n5TAfBgNVHSMEGDAWgBS9NL4lZzY74IxHO21efAfI8V70RTANBgkqhkiG9w0BAQsF\nAAOCAgEAK6AhzjCqDfoFZpxcOvfGYX2s4GhrBBs6Hl40YIVHzQehoqLoDsRW4LBw\nt1L8Rl9i4Efw87c9t2WeNOkgwH79xxax9d/UxHe2gTwW9s+uYcBlYrlXm4UJcVBG\nb1P54YbccgVwr1b3B4qikAIUK92K+KRMys1QRUrUScLf5jgcwQYtPGyCgzdLjOEd\nspITMTk6oFld5YBa7roQvk/nOD40xvDJXwvuQ9lmHYwsY0kBEwsGfDIveap23RQS\ncrTu2eogLcS2ce1eQXeUjyEQTbSlhAcey8+qVgoev6DwTiR1Ir9SFbsQS7lBQNCW\nIJG2kFShJ0QexddRrR1w4KrFod2WqOCKxeNy4W+SbMkXbj1ZhumBMjJP676HuJE7\nRJkY5DW0UBxd1ZwNauPWMKbUWVAMtXIaC/nZLwNpN6RbTdsVh2h/vszEXLye4lvC\ncI1rTIB+i+/C7wwEQkvTxwFxJti7K6uiTOLBRxljMQK11XjcN+WSXDI73oxYsWZX\n244S4O09pS6h9WU3v0PPGW1P/i7g/eTCCgJNQEGQdDSlVFPkr+h8VRn6+ob4hAn2\nABDV5HDXVuvmsmSbyJ4oB3HJXHgGytDzAreRd0rFeshNfE9fMeXEazzDm2ZT2sEt\nZf6m5dql1gfzLEyYZM26ObWy6G3Sqmd9U/vA9l1NHYSiDWtrePs=\n-----END CERTIFICATE-----"",
        ""key"": ""-----BEGIN PRIVATE KEY-----\nMIICdgIBADANBgkqhkiG9w0BAQEFAASCAmAwggJcAgEAAoGBAKNwapOQ6rQJHetP\nHRlJBIh1OsOsUBiXb3rXXE3xpWAxAha0MH+UPRblOko+5T2JqIb+xKf9Vi3oTM3t\nKvffaOPtzKXZauscjq6NGzA3LgeiMy6q19pvkUUOlGYK6+Xfl+B7Xw6+hBMkQuGE\nnUS8nkpR5mK4ne7djIyfHFfMu4ptAgMBAAECgYA+s0PPtMq1osG9oi4xoxeAGikf\nJB3eMUptP+2DYW7mRibc+ueYKhB9lhcUoKhlQUhL8bUUFVZYakP8xD21thmQqnC4\nf63asad0ycteJMLb3r+z26LHuCyOdPg1pyLk3oQ32lVQHBCYathRMcVznxOG16VK\nI8BFfstJTaJu0lK/wQJBANYFGusBiZsJQ3utrQMVPpKmloO2++4q1v6ZR4puDQHx\nTjLjAIgrkYfwTJBLBRZxec0E7TmuVQ9uJ+wMu/+7zaUCQQDDf2xMnQqYknJoKGq+\noAnyC66UqWC5xAnQS32mlnJ632JXA0pf9pb1SXAYExB1p9Dfqd3VAwQDwBsDDgP6\nHD8pAkEA0lscNQZC2TaGtKZk2hXkdcH1SKru/g3vWTkRHxfCAznJUaza1fx0wzdG\nGcES1Bdez0tbW4llI5By/skZc2eE3QJAFl6fOskBbGHde3Oce0F+wdZ6XIJhEgCP\niukIcKZoZQzoiMJUoVRrA5gqnmaYDI5uRRl/y57zt6YksR3KcLUIuQJAd242M/WF\n6YAZat3q/wEeETeQq1wrooew+8lHl05/Nt0cCpV48RGEhJ83pzBm3mnwHf8lTBJH\nx6XroMXsmbnsEw==\n-----END PRIVATE KEY-----""
    },
    ""ca"": ""-----BEGIN CERTIFICATE-----\nMIIFiTCCA3GgAwIBAgIUViafKKkJnykzJ/yuDEOUkOE/AzwwDQYJKoZIhvcNAQEL\nBQAwVDELMAkGA1UEBhMCSVQxDjAMBgNVBAgMBUl0YWx5MQ0wCwYDVQQHDARyb21l\nMQ4wDAYDVQQKDAVteW9yZzEWMBQGA1UEAwwNbG9jYWwuZGl0dG8uKjAeFw0yNDAy\nMjEwOTI2NDFaFw0zNDAyMTgwOTI2NDFaMFQxCzAJBgNVBAYTAklUMQ4wDAYDVQQI\nDAVJdGFseTENMAsGA1UEBwwEcm9tZTEOMAwGA1UECgwFbXlvcmcxFjAUBgNVBAMM\nDWxvY2FsLmRpdHRvLiowggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQC4\npFuYlqC5BAxZEpLi+PPtVBtOeHzWVIKOWYxc1w1yCYrfDpMF0DiKymM5C/8kEwUQ\n6ZQ+gqTidNllu/r9kfM+h5ltJMVTR1WtffGH7EBPf2cln0VkiMtGZ5Br+Sv2xHS7\nzHA5bDFrZwQHUvR4SlSpL+lE5zQR7y3D6995D7Q4GbZgFEOuY7PxbULG21x9gHkv\nOAKEuGlBwEp/XBZwT3SPgh8Q1bCxubIpDk+XQeWuICxaIHqcjIE0ZmE1px17gHpT\nmYc5GtTzB5PvCdsVpSm0FkN1oaXZwEXn0uK40yOKE5saB2ZcDEspXBg97j0JQg23\npT9ytPP9EggFtmb09uD/0Hv18tIzdf7ehvx0KPxYb7jZ+dVyymU0pjnskJEXxPPO\nFo2hQfC7a3yDfY0EHA1492y4ef44FESd7DoJ49ZPXexS5UglLaSGVJzB+vsyyrLm\njVPD+cWwLfnviei/XEg7LmDJb55p25h9MBtjwPVTQwXIzB61aMbqizr6NhzVq9D3\nM7VyUd4g1l12j7IwVv6yRNdAmfKiE4RdGNq2D0FDKVA78IYY6o6sDL+8toy2DliH\noBrnriAqUZVcT7QUbL9D+tK9J8LJ9ukDCrJSg+3zlG5Gnr25G93SNUDZv/fLftFI\nK7OGfskG2JOyc9n4rWYdeA17NIlW2GCDM34H/bvzUQIDAQABo1MwUTAdBgNVHQ4E\nFgQUvTS+JWc2O+CMRzttXnwHyPFe9EUwHwYDVR0jBBgwFoAUvTS+JWc2O+CMRztt\nXnwHyPFe9EUwDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAgEAIGM1\nCr15L9LgU8dlWLqPfu+mT/nMRKidZ+PBvoge9HZg5+GQJEdebU+oFc0TyQWJeGVh\nYK5JXPiXuuc9CcLIwBb7Sm+f3ra6Y1MVYtCNFjlB76RjHI/X6KXpchL62KC+bDwX\nEFANaAIEqJxerQUuulEArIPjxAZggsTx0mQh/2ed2Lb6DE78FieER+Ecj9coszdc\nRvqCUnUjks5Tjx9OpqUHpyg/HyomoJkTW0vfCo6HPMGkrJI1XEO2qkdylwfBx73w\nKP7CYIB7pZSVv+DBO1WJhvQV3DR6dP2kV9iI1HC/EUvylK5KxLA+vYRqy17KHIL8\nJ8Cv1snVybq2kuWeb+Y+ciHwArl7etHrA9XuWib0oZvCAFxxUq8t66H69ZE7H9l0\nJT1IAtWuqM7lQM6QOxY9Zt7LczadF8lUeL3nuqgCEgzCx01c6yZT1nMLv8hh2yPZ\nB5Yy9lhqZ3rzLIez6UR1QchoWEZnXD/H+EtjETU7OU8AKgoyGFxRvY+rHjcEhKYU\nWlkVFbXXTgBvFtJv0crd+Ye+yRvkN6txDZ3YS7dgU4wA1loV7/AUbbDOV6vQZ+CP\nkjockF3SgYE6Ypp/tYbqW6AdOjVjAyqYjfcq0fNHe9YMdxidx3z2GJ+puLIhNEln\nCZRDvnBRSqmhocm/MlLv5KDWSKiXqyI00AqJjfc=\n-----END CERTIFICATE-----"",
    ""tags"": []
}
```

Run the command:
```shell
curl -u devops:foobar -H ""Content-Type: application/json"" -X PUT http://localhost/api/2/connections/glin-connection -d @data.json
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1905/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1905,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C850m3H9,ditto,1956344317,1905,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-02-21T10:28:58Z,2024-02-21T10:28:58Z,"Hi @neottil 
MQTT 3.1.1 (which you use based on the connection config) does not support protocol level headers.
So what you define in the source: 
```
""headerMapping"": {
   ""correlation-id"": ""{{header:correlaion-id}}""
},
```

So this simply can not work with MQTT 3.1.1 - MQTT 5 does support ""user properties"" - and even a well defined ""Correlation Data"" which Ditto maps to the ""correlation-id"".","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C850m3H9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1905,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C850oE-U,ditto,1956663188,1905,NA,neottil,84083982,Luca Neotti,NEOT.LUKA.89@GMAIL.COM,NA,2024-02-21T13:33:43Z,2024-02-21T13:33:43Z,Thank you @thjaeckle for the quick feedback and clarification.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C850oE-U/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1909,https://api.github.com/repos/eclipse-ditto/ditto/issues/1909,ditto,2172988326,1909,EndPoint,JoyAlana,162541061,,,CLOSED,2024-03-07T05:27:31Z,2024-03-22T12:28:34Z,where to find endpoint class for renaming the endpoint?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1909/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1909,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C852LbgK,ditto,1982707722,1909,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-03-07T07:19:35Z,2024-03-07T07:19:35Z,@JoyAlana could you please be more precise what your problem is or what you want to achieve? ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C852LbgK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1909,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C852NQti,ditto,1983187810,1909,NA,JoyAlana,162541061,,,NA,2024-03-07T10:16:24Z,2024-03-07T10:16:24Z,"For example, I want to change the name of ""thingId"" to something else and also same in the endpoints ,like, instead of /things/thingId , it will be  /new-name/new-id-name.

So, can you help me with which folders shall I look into so that I can change the names and endpoints of ditto?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C852NQti/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1909,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C852Pg-r,ditto,1983778731,1909,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-03-07T15:36:46Z,2024-03-07T15:36:46Z,"The `ThingsRoute` contains all of the `/things` endpoints:
https://github.com/eclipse-ditto/ditto/blob/41d088a8f0bd027d6b7aaf2284208c18541598c9/gateway/service/src/main/java/org/eclipse/ditto/gateway/service/endpoints/routes/things/ThingsRoute.java#L135","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C852Pg-r/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1909,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C852Q0Tl,ditto,1984120037,1909,NA,JoyAlana,162541061,,,NA,2024-03-07T17:53:25Z,2024-03-07T17:53:25Z,"here if i changed the thingId into needed name will it works?
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C852Q0Tl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1909,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C852SbV9,ditto,1984542077,1909,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-03-07T21:35:15Z,2024-03-07T21:35:15Z,You'll have to find out.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C852SbV9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1909,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C852gPKT,ditto,1988162195,1909,NA,JoyAlana,162541061,,,NA,2024-03-11T10:55:26Z,2024-03-11T10:55:26Z,where can i find the main class folder of all apis?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C852gPKT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1909,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C852gURO,ditto,1988183118,1909,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-03-11T11:07:16Z,2024-03-11T11:07:16Z,"1 folder up from the link I already provided to you before, did you read that message?
https://github.com/eclipse-ditto/ditto/tree/master/gateway/service/src/main/java/org/eclipse/ditto/gateway/service/endpoints/routes","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C852gURO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1910,https://api.github.com/repos/eclipse-ditto/ditto/issues/1910,ditto,2173739825,1910,Incorrect template for sudo modifyPolicy piggybackCommand body,desislava-marinova,32883994,Desislava Marinova,,OPEN,2024-03-07T12:21:26Z,2024-03-14T07:22:25Z,"The piggyback command for modifying a policy template is not correct. The policyId must be inside the policy section
```json
{
  ""targetActorSelection"": ""/system/sharding/policy"",
  ""headers"": {
    ""aggregate"": false,
    ""is-group-topic"": false,
    ""ditto-sudo"": true
  },
  ""piggybackCommand"": {
    ""type"": ""policies.commands:modifyPolicy"",
    ""policyId"": ""{{policy.id}}"",
    ""policy"": {
      ""entries"": {}
    }
  }
}
```
must be
```json
{
  ""targetActorSelection"": ""/system/sharding/policy"",
  ""headers"": {
    ""aggregate"": false,
    ""is-group-topic"": false,
    ""ditto-sudo"": true
  },
  ""piggybackCommand"": {
    ""type"": ""policies.commands:modifyPolicy"",
    ""policy"": {
     ""policyId"": ""{{policy.id}}"",
      ""entries"": {}
    }
  }
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1910/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1910,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C853AQ7E,ditto,1996558020,1910,NA,thfries,20593339,Thomas Fries,,NA,2024-03-14T05:30:28Z,2024-03-14T05:30:28Z,"Hi @desislava-marinova, where must this be corrected? In the UI?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C853AQ7E/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1910,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C853A5_L,ditto,1996726219,1910,NA,desislava-marinova,32883994,Desislava Marinova,,NA,2024-03-14T07:22:24Z,2024-03-14T07:22:24Z,"Hi @thfries , it should be corrected in the piggyback commands template.
![policy-sudo-modify-template-reduced](https://github.com/eclipse-ditto/ditto/assets/32883994/2a734aea-b209-4788-b90f-b04677604380)
 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C853A5_L/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1911,https://api.github.com/repos/eclipse-ditto/ditto/issues/1911,ditto,2173831999,1911,What is the Incoming script for sending multiple signal from the device(via mqtt connection) to the different path in the things?,VETRIVEL001,162584329,,,CLOSED,2024-03-07T13:10:52Z,2024-03-14T14:15:25Z,"If suppose, this is my thing

{
   ""definition"": ""com.acme:coffeebrewer:0.1.0"",
   ""attributes"": {
     ""manufacturer"": ""ACME demo corp."",
     ""location"": ""Berlin, main floor"",
     ""serialno"": ""42"",
     ""model"": ""Speaking coffee machine""
   },
   ""features"": {
     ""coffee-brewer"": {
       ""definition"": [ ""com.acme:coffeebrewer:0.1.0"" ],
       ""properties"": {
         ""brewed-coffees"": 0
       }
     },
     ""water-tank"": {
       ""properties"": {
         ""configuration"": {
           ""smartMode"": true,
           ""brewingTemp"": 87,
           ""tempToHold"": 44,
           ""timeoutSeconds"": 6000
         },
         ""status"": {
           ""waterAmount"": 731,
           ""temperature"": 44
         }
       }
     }
   }
  }
  
  Now I want to change the value of these three fields 'water-tank/properties/configuration/brewingTemp', 'water-tank/properties/status/temperature' and 'water-tank/properties/status/waterAmount' through the mqtt connections. To create connection what I have to give in incoming script?
Can anyone send the incomingScripts for this case?  ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1911/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1911,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C852cXOB,ditto,1987146625,1911,NA,thfries,20593339,Thomas Fries,,NA,2024-03-10T08:45:56Z,2024-03-10T08:45:56Z,"If your device is able to send the signals in [ditto protocol](https://eclipse.dev/ditto/protocol-examples-mergefeature.html) format, you don't need an incoming script at all. You need an incoming mapping script only for specific reasons like:
- you are not able to or willing to adapt the way your device sends MQTT data (e.g. device has already a MQTT interface)
- there are limitations that do not allow to use ditto protocol (like you need narrow binary encoding of your signals)

In that case you need an incoming script to map the device data to ditto protocol messages. But that mapping depends on the input format (topics and payloads sent by the device).

Otherwise, just use a standard [MQTT connection](https://eclipse.dev/ditto/connectivity-protocol-bindings-mqtt5.html) type with a source that listens to a simple topic structure:
```
<environment>/telemetry/<deviceId>/
```
From the device publish a ditto message to that topic:
```
{
  ""topic"": ""org.eclipse.ditto/e6904e03-9919-4739-8924-6e902b6d79bf/things/twin/commands/merge"",
  ""headers"": {
    ""content-type"": ""application/merge-patch+json""
  },
  ""path"": ""/features/water-tank/properties"",
  ""value"": {
    ""configuration"": {
      ""brewingTemp"": 1234
    },
    ""status"": {
      ""temperature"": 95,
      ""waterAmount"": 3
    }
  }
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C852cXOB/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1911,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C852fXZc,ditto,1987933788,1911,NA,VETRIVEL001,162584329,,,NA,2024-03-11T09:11:18Z,2024-03-11T09:11:18Z,"will I have to give this Json while publishing message through mqtt like ""mosquitto_pub -h 'test.mosquitto.org' -m ''{
  ""topic"": ""org.eclipse.ditto/e6904e03-9919-4739-8924-6e902b6d79bf/things/twin/commands/merge"",
  ""headers"": {
    ""content-type"": ""application/merge-patch+json""
  },
  ""path"": ""/features/water-tank/properties"",
  ""value"": {
    ""configuration"": {
      ""brewingTemp"": 1234
    },
    ""status"": {
      ""temperature"": 95,
      ""waterAmount"": 3
    }
  }
}""
if it so, what should i give it in requestBody to create this mqtt connection? 
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C852fXZc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1911,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C852kJdO,ditto,1989187406,1911,NA,thfries,20593339,Thomas Fries,,NA,2024-03-11T18:41:29Z,2024-03-11T18:41:29Z,"yes,
- you need to replace the deviceId with your deviceId
- you need a `-t` parameter in the mosquitto_pub command that corresponds to the topic that is configured in the connection source: `mosquitto_pub -h test.mosquitto.org -p 1883 -t eclipse-ditto-sandbox/t/<your_deviceId> -D publish content-type application/vnd.eclipse.ditto+json <your_payload>`

Here is a working example for a connection (only source is relevant, target is needed to send commands to the device):
```
{
  ""name"": ""MQTT 3.1.1"",
  ""connectionType"": ""mqtt"",
  ""connectionStatus"": ""open"",
  ""uri"": ""tcp://test.mosquitto.org:1883"",
  ""sources"": [
    {
      ""addresses"": [
        ""eclipse-ditto-sandbox/t/#""
      ],
      ""consumerCount"": 1,
      ""qos"": 0,
      ""authorizationContext"": [
        ""nginx:ditto""
      ],
      ""headerMapping"": {},
      ""replyTarget"": {
        ""address"": ""{{header:reply-to}}"",
        ""headerMapping"": {},
        ""expectedResponseTypes"": [
          ""response"",
          ""error""
        ],
        ""enabled"": true
      }
    }
  ],
  ""targets"": [
    {
      ""address"": ""eclipse-ditto-sandbox/c/{{ thing:id }}"",
      ""topics"": [
        ""_/_/things/twin/events"",
        ""_/_/things/live/messages""
      ],
      ""qos"": 0,
      ""authorizationContext"": [
        ""nginx:ditto""
      ],
      ""headerMapping"": {}
    }
  ],
  ""clientCount"": 1,
  ""failoverEnabled"": true,
  ""validateCertificates"": true,
  ""processorPoolSize"": 1,
  ""tags"": []
}
```
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C852kJdO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1911,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85205aA,ditto,1993578112,1911,NA,VETRIVEL001,162584329,,,NA,2024-03-13T05:15:36Z,2024-03-13T05:15:36Z,"I tried it the way mentioned above that's working fine when I publish single time. whereas, when I publish the message frequently to that topic it's not reflected in ditto thing but I would able to subscribe that message in that topic. what is the cause of the issue?
 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85205aA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1911,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C8527cmf,ditto,1995295135,1911,NA,thfries,20593339,Thomas Fries,,NA,2024-03-13T18:28:19Z,2024-03-13T18:28:19Z,"Hard to tell. If you send the same values over and over again, you may just not see the difference. You need to activate connection logs on your connection and see if there is a failure. In general it may help if you use the Ditto UI to play around and see if there are incoming messages on your thing or something goes wrong on your connection logs.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C8527cmf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1911,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C8527yUz,ditto,1995384115,1911,NA,VETRIVEL001,162584329,,,NA,2024-03-13T18:54:06Z,2024-03-13T18:54:06Z,"No, I was sending different values only but it's not reflecting in ditto thing.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C8527yUz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1911,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C853AQar,ditto,1996555947,1911,NA,thfries,20593339,Thomas Fries,,NA,2024-03-14T05:28:38Z,2024-03-14T05:28:38Z,"Then you need to check the connection logs for failures and their reasons. It could be anything like json payload can not be parsed, thing can not be found, etc.. You need to analyze the logs.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C853AQar/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1911,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C853BmCg,ditto,1996906656,1911,NA,VETRIVEL001,162584329,,,NA,2024-03-14T08:56:49Z,2024-03-14T08:56:49Z,"this is my connection
{
    ""id"": ""merge"",
    ""name"": ""MQTT 3.1.1"",
    ""connectionType"": ""mqtt"",
    ""connectionStatus"": ""open"",
    ""uri"": ""tcp://test.mosquitto.org:1883"",
    ""sources"": [
        {
            ""addresses"": [
                ""mqtt-merge""
            ],
            ""consumerCount"": 1,
            ""qos"": 2,
            ""authorizationContext"": [
                ""nginx:ditto""
            ],
            ""headerMapping"": {},
            ""replyTarget"": {
                ""address"": ""{{header:reply-to}}"",
                ""headerMapping"": {},
                ""expectedResponseTypes"": [
                    ""response"",
                    ""error""
                ],
                ""enabled"": true
            }
        }
    ],
    ""targets"": [
        {
            ""address"": ""mqtt-merge-target"",
            ""topics"": [
                ""_/_/things/twin/events"",
                ""_/_/things/live/messages""
            ],
            ""qos"": 2,
            ""authorizationContext"": [
                ""nginx:ditto""
            ],
            ""headerMapping"": {}
        }
    ],
    ""clientCount"": 1,
    ""failoverEnabled"": true,
    ""validateCertificates"": true,
    ""processorPoolSize"": 1,
    ""tags"": []
}

this is how i publish message through python code:


import paho.mqtt.publish as publish
import time
import json
m='{""topic"":""mqtt-merge"",""thingId"": ""abcd:123"",""headers"": {""content-type"": ""application/merge-patch+json""}, ""path"": ""/features/water-tank/properties"",""value"": {""configuration"": {""brewingTemp"": 122222},""status"": {""temperature"": 222,""waterAmount"": 222}}}'

publish.single(""mqtt-merge"", m, hostname=""test.mosquitto.org"")  

my connection logs:

{
    ""connectionId"": ""merge"",
    ""connectionLogs"": [
        {
            ""correlationId"": ""<not-provided>"",
            ""timestamp"": ""2024-03-14T08:40:41.966819342Z"",
            ""category"": ""connection"",
            ""type"": ""other"",
            ""level"": ""success"",
            ""message"": ""Connection successful""
        },
        {
            ""correlationId"": ""<not-provided>"",
            ""timestamp"": ""2024-03-14T08:42:50.644791359Z"",
            ""category"": ""source"",
            ""type"": ""consumed"",
            ""level"": ""success"",
            ""message"": ""Received signal. - Message headers: [mqtt.qos=0, mqtt.retain=false, mqtt.topic=mqtt-merge] - Message payload: {\""thingId\"": \""abcd:123\"",\""headers\"": {\""content-type\"": \""application/merge-patch+json\""}, \""path\"": \""/features/water-tank/properties\"",\""value\"": {\""configuration\"": {\""brewingTemp\"": 122222},\""status\"": {\""temperature\"": 222,\""waterAmount\"": 222}}}"",
            ""address"": ""mqtt-merge""
        },
        {
            ""correlationId"": ""<not-provided>"",
            ""timestamp"": ""2024-03-14T08:42:50.645544766Z"",
            ""category"": ""source"",
            ""type"": ""mapped"",
            ""level"": ""failure"",
            ""message"": ""Got exception <json.field.missing> when processing external message with mapper <default>: JSON did not include required </topic> field! - Message headers: [mqtt.qos=0, mqtt.retain=false, mqtt.topic=mqtt-merge] - Message payload: {\""thingId\"": \""abcd:123\"",\""headers\"": {\""content-type\"": \""application/merge-patch+json\""}, \""path\"": \""/features/water-tank/properties\"",\""value\"": {\""configuration\"": {\""brewingTemp\"": 122222},\""status\"": {\""temperature\"": 222,\""waterAmount\"": 222}}}"",
            ""address"": ""mqtt-merge""
        },
        {
            ""correlationId"": ""57091899-661a-40b3-a5db-5fb691735c50"",
            ""timestamp"": ""2024-03-14T08:42:50.645917472Z"",
            ""category"": ""response"",
            ""type"": ""dispatched"",
            ""level"": ""failure"",
            ""message"": ""Response was not successful. This may be the case for when a thing could not be found or the authorization subject of the consuming source was not allowed to write a thing. - Message headers: [mqtt.qos=0, ditto-origin=merge, response-required=false, correlation-id=57091899-661a-40b3-a5db-5fb691735c50, ditto-auth-context={\""type\"":\""pre-authenticated-connection\"",\""subjects\"":[\""nginx:ditto\""]}, ditto-expected-response-types=[\""response\"",\""error\""], ditto-reply-target=0, mqtt.retain=false, mqtt.topic=mqtt-merge] - Message payload: {\""type\"":\""things.responses:errorResponse\"",\""status\"":400,\""thingId\"":\""unknown:unknown\"",\""payload\"":{\""status\"":400,\""error\"":\""json.field.missing\"",\""message\"":\""JSON did not include required </topic> field!\"",\""description\"":\""Check if all required JSON fields were set.\""}}"",
            ""address"": ""_responses"",
            ""entityType"": ""thing"",
            ""entityId"": ""unknown:unknown""
        },
        {
            ""correlationId"": ""<not-provided>"",
            ""timestamp"": ""2024-03-14T08:42:50.646192983Z"",
            ""category"": ""source"",
            ""type"": ""acknowledged"",
            ""level"": ""success"",
            ""message"": ""Sending success acknowledgement. - Message headers: [mqtt.qos=0, mqtt.retain=false, mqtt.topic=mqtt-merge] - Message payload: {\""thingId\"": \""abcd:123\"",\""headers\"": {\""content-type\"": \""application/merge-patch+json\""}, \""path\"": \""/features/water-tank/properties\"",\""value\"": {\""configuration\"": {\""brewingTemp\"": 122222},\""status\"": {\""temperature\"": 222,\""waterAmount\"": 222}}}"",
            ""address"": ""mqtt-merge""
        },
        {
            ""correlationId"": ""57091899-661a-40b3-a5db-5fb691735c50"",
            ""timestamp"": ""2024-03-14T08:42:50.646515278Z"",
            ""category"": ""response"",
            ""type"": ""mapped"",
            ""level"": ""success"",
            ""message"": ""Mapped outgoing signal with mapper <default>"",
            ""address"": ""_responses"",
            ""entityType"": ""thing"",
            ""entityId"": ""unknown:unknown""
        },
        {
            ""correlationId"": ""57091899-661a-40b3-a5db-5fb691735c50"",
            ""timestamp"": ""2024-03-14T08:42:50.647471783Z"",
            ""category"": ""response"",
            ""type"": ""dropped"",
            ""level"": ""success"",
            ""message"": ""Signal dropped, target address unresolved: {{header:reply-to}} - Message headers: [mqtt.qos=0, ditto-origin=merge, response-required=false, correlation-id=57091899-661a-40b3-a5db-5fb691735c50, ditto-auth-context={\""type\"":\""pre-authenticated-connection\"",\""subjects\"":[\""nginx:ditto\""]}, ditto-expected-response-types=[\""response\"",\""error\""], ditto-reply-target=0, mqtt.retain=false, mqtt.topic=mqtt-merge] - Message payload: {\""type\"":\""things.responses:errorResponse\"",\""status\"":400,\""thingId\"":\""unknown:unknown\"",\""payload\"":{\""status\"":400,\""error\"":\""json.field.missing\"",\""message\"":\""JSON did not include required </topic> field!\"",\""description\"":\""Check if all required JSON fields were set.\""}}"",
            ""address"": ""_responses"",
            ""entityType"": ""thing"",
            ""entityId"": ""unknown:unknown""
        }
    ],
    ""enabledSince"": ""2024-03-14T08:51:12.526891658Z"",
    ""enabledUntil"": ""2024-03-14T09:51:12.526960528Z""
}

i don't why this is giving me bad request eventhough mentioned topic and also thingId in mqtt(json).



","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C853BmCg/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1911,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C853C4TF,ditto,1997243589,1911,NA,thfries,20593339,Thomas Fries,,NA,2024-03-14T11:34:02Z,2024-03-14T11:34:02Z,"> JSON did not include required field!

Your json must have a [topic](https://eclipse.dev/ditto/protocol-specification-topic.html) field instead of a `thingId` field. The topic includes the thingId ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C853C4TF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1915,https://api.github.com/repos/eclipse-ditto/ditto/issues/1915,ditto,2186388668,1915,Cannot retrieve entity at revision,simleo,1183171,Simone Leo,,CLOSED,2024-03-14T13:27:59Z,2024-09-27T05:55:40Z,"Using Ditto 3.5.3, started via docker compose. I created the floor lamp Thing as explained in https://eclipse.dev/ditto/3.5/intro-hello-world.html, then I updated it twice to set two of the three spots to ""on"". Now if I try ""Streaming historical events via SSE"" it seems to work (I get a full record for revision 1, and two more records that show the changes made at revision 2 and 3), but ""Retrieve entity at specific revision"" gives an error:

```console
curl -u ditto:ditto 'http://localhost:8080/api/2/things/org.eclipse.ditto:67b0d1a5-df3a-48a4-883e-7fb7432a5390' --header 'at-historical-revision: 1' | jq
{
  ""status"": 404,
  ""error"": ""things:thing.history.notfound"",
  ""message"": ""The Thing with ID 'org.eclipse.ditto:67b0d1a5-df3a-48a4-883e-7fb7432a5390' at revision '1' could not be found or requester had insufficient permissions to access it."",
  ""description"": ""Check if the ID of your requested Thing was correct, you have sufficient permissions and ensure that the asked for revision/timestamp does not exceed the history-retention-duration or is from the future.""
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1915/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1915,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C853WlJk,ditto,2002408036,1915,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-03-17T10:59:39Z,2024-03-17T10:59:39Z,"@simleo thanks for the detailed report.
I'll try to reproduce.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C853WlJk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1915,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C853cjfi,ditto,2003974114,1915,NA,simleo,1183171,Simone Leo,,NA,2024-03-18T13:51:48Z,2024-03-18T13:51:48Z,"I tried to reproduce today and I couldn't. Must have been something temporary the other day. Sorry about that. However, I cannot make `at-historical-timestamp` work. I always get the latest version of the thing, no matter which timestamp I try to select. I get the same record even if I set a timestamp in the future or one that's before the first revision existed.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C853cjfi/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1915,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Nq5VF,ditto,2376832325,1915,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-09-26T12:35:39Z,2024-09-26T12:35:39Z,Sorry this took so long to look into - I can reproduce and will work on a fix.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Nq5VF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1918,https://api.github.com/repos/eclipse-ditto/ditto/issues/1918,ditto,2202372547,1918,Things UI in ditto,VETRIVEL001,162584329,,,CLOSED,2024-03-22T12:21:48Z,2024-04-01T15:05:42Z,"In Ditto UI, only showing limited number of things and also when I tried to hit [GET /api/2/things] its only returning things around 25.
I want to see all things which I stored. can anyone tell me where to extend this limit?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1918/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1918,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C854Gg4D,ditto,2014973443,1918,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-03-22T12:28:22Z,2024-03-22T12:28:22Z,"See [documentation about pagination](https://eclipse.dev/ditto/basic-search.html#sorting-and-paging-options), supported on the `/api/2/search/things` API.
You can get up to `200` things per page, after that use the returned `cursor` to get the next page.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C854Gg4D/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1918,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C854GtrQ,ditto,2015025872,1918,NA,VETRIVEL001,162584329,,,NA,2024-03-22T12:43:40Z,2024-03-22T12:43:40Z,"Yes, I would able to get upto 200 things. By any chance, can i get more than 200 things?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C854GtrQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1918,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C854Ik2M,ditto,2015513996,1918,NA,thfries,20593339,Thomas Fries,,NA,2024-03-22T16:57:54Z,2024-03-22T16:57:54Z,"In the UI, you can click `load more...` on the bottom of the list.
`25` per page is hard coded in the UI and not configurable. It can just be changed in the code (uncomment and replace `3` by `200`): https://github.com/eclipse-ditto/ditto/blob/f7b4b22c61f7f72b4d9cc7604ad85c923f2ee835/ui/modules/things/thingsSearch.ts#L181
As said by @thjaeckle, more than 200 require to use a `cursor`(this happens, when you use `load more...` in the UI).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C854Ik2M/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1920,https://api.github.com/repos/eclipse-ditto/ditto/issues/1920,ditto,2210856830,1920,Policy anounsments not working when connection is using namespace filtering,alstanchev,50709547,Aleksandar Stanchev,,CLOSED,2024-03-27T13:48:14Z,2024-04-01T11:05:37Z,"When a connection is subscribed to _/_/policies/announcements?namespaces=<some-namespace> the connection does not receive events with latest ditto version. If the namespace filter is removed events are received by the connection.
Strangely if the connection has two targets configured one with ns filtering and one without both publish the anouncement.
@thjaeckle i belive this is related to the latest pub-sub optimisations","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1920/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1920,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C854n_2D,ditto,2023751043,1920,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-03-27T19:05:18Z,2024-03-27T19:05:18Z,"That could be, yes .. 
But don't we have system-tests for policy announcements? Maybe not with namespaces filter?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C854n_2D/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1920,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C8549onc,ditto,2029423068,1920,NA,alstanchev,50709547,Aleksandar Stanchev,,NA,2024-04-01T08:47:20Z,2024-04-01T08:47:20Z,"HI, @thjaeckle i'd apreciate a review. The change is very small.
There is also a PR in the tests with an additional test.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C8549onc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1927,https://api.github.com/repos/eclipse-ditto/ditto/issues/1927,ditto,2252219100,1927,Enhance conditional updates for merge/PATCH to specify different conditions for parts of the patch,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2024-04-19T06:54:12Z,2024-04-25T14:45:46Z,"Currently, Ditto supports [conditional requests for modifications](https://eclipse.dev/ditto/basic-conditional-requests.html) for all ""types"" of modifications in the same way.

Types of modifications:
* modify (HTTP PUT)
* merge (HTTP PATCH)
* delete (HTTP DELETE)

There can be one `condition` be specified for those commands with the following semantic:
* if the condition (defined as Ditto [RQL](https://eclipse.dev/ditto/basic-rql.html)) evaluates to `true`, then perform the command 
   * e.g. modify the thing/attribute/feature 
   * e.g. merge (patch) the thing

For the merge however, we encountered that it often is required to define for a single merge (containing e.g. changes to patch several features of the same thing) several conditions
* in order to be able to patch some parts of the thing based on the current value of other parts of the thing

To enable that, we suggest to enhance Ditto `condition`s for merge/PATCH commands (e.g. `MergeThing`) with a special `patch-condition`.  
The header/queryParam should be another one than `condition` to be able to also combine them - and would e.g. take a ""map"" of JsonPointers and RQL expressions.  

Ditto must then evaluate for each ""JsonPointer"" of the merge/patch if the provided RQL statement evaluates to `true` - and only then ""include"" it in the merge/patch, otherwise drop it from it.

Example syntax:
```
patch-condition=
{
  ""/features/deviceStatus/properties/dimensions/internal/severity"": ""ge(features/deviceStatus/properties/dimensions/internal/severity/cardinality,20)"",
  ""/attributes/location"": ""not(exists(attributes/location)""
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1927/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1928,https://api.github.com/repos/eclipse-ditto/ditto/issues/1928,ditto,2262862643,1928,nginx timeout is not configurable in helm chart,dimabarbul,2970647,Dmitriy Barbul,dimabarbul@gmail.com,CLOSED,2024-04-25T07:16:08Z,2024-05-14T05:44:36Z,"Our use case is that we want to extend timeout for live messages to about 2 minutes. We configured all required timeouts for gateway service to be 115 seconds (slightly lower than 2 minutes due to limitation discussed at [How to increase message timeout to 5 minutes?](https://github.com/eclipse-ditto/ditto/discussions/1723)).

We install Ditto using helm chart and it looks like maximum timeout that nginx provides in hardcoded to [70 seconds](https://github.com/eclipse-ditto/ditto/blob/f6e156d869a97532f158ca60e05a6243a1bdb59e/deployment/helm/ditto/templates/nginx-configmap.yaml#L33-L45):

```text
      # timeouts are configured slightly higher than ditto-eclipse-ditto-gateway read-timeout of 60 seconds
      proxy_connect_timeout 70; # seconds, default: 60
      proxy_send_timeout 70; # seconds, default: 60
      proxy_read_timeout 70; # seconds, default: 60
      # will try another upstream if an error or timeout occurred during the connection
      # or if the upstream returns 502 response
      proxy_next_upstream error timeout http_502;
      # will retry up to 3 times to find another upstream to connect to
      proxy_next_upstream_tries 3;
      # will try for max. 20s to find another upstream to connect to
      proxy_next_upstream_timeout 20;

      send_timeout 70; # seconds, default: 60
```

It would be great if it was configurable.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1928/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1929,https://api.github.com/repos/eclipse-ditto/ditto/issues/1929,ditto,2268366863,1929,Connection extraField Enrichment.,VETRIVEL001,162584329,,,CLOSED,2024-04-29T07:55:53Z,2024-06-05T11:55:45Z,"I have given this RQL query in kafka connection topics field which is inside targets `""_/_/things/twin/events?filter=and(like(thingId,""org.eclipse.ditto:myThing*""),exists(features/lamp))&extraFields=thingId,features/water-tank/properties,attributes/location""`.
Now i need to send events on kafka only if features/ lamp was modified but when i mention &extraFields= in that query, its sending events if anything gets changed in thing.
can anyone help me out in this, when particular field was modified in thing, send events with extraField.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1929/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1929,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C858I-jE,ditto,2082728132,1929,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-04-29T13:20:27Z,2024-04-29T13:20:27Z,"@VETRIVEL001 as long as you don't specify `features` or `features/lamp` in the `extraFields`, the behavior should be as you expect it to be:
* only if the `lamp` feature was modified, an event should be published

If this is not the case, please share a reproducer, e.g. as complete connection configuration and as the change you expect to ""pass"" the filter - and one change to a Thing you expect to ""not pass"" the filter.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C858I-jE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1929,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C858YBBs,ditto,2086670444,1929,NA,VETRIVEL001,162584329,,,NA,2024-04-30T19:08:12Z,2024-04-30T19:08:12Z,"This is my thing 
{
    ""thingId"": ""org.eclipse.ditto:myThing12345"",
    ""policyId"": ""org.eclipse.ditto:myThing12345"",
    ""attributes"": {
   ""manufacturer"": ""ACME demo corp."",
    ""location"": ""Berlin, main floor"",
    ""serialno"": ""42"",
    ""model"": ""Speaking coffee machine""
    },
    ""features"": {
      ""water-tank"": {
        ""properties"": {
        },
        ""desiredProperties"": {}
      },
      ""lamp"": {    
        ""properties"": {},
        ""desiredProperties"": {}
      }
  }
and this is my connection
{
    ""id"": ""werkjhgf"",
    ""name"": ""KAFKA"",
    ""connectionType"": ""kafka"",
    ""connectionStatus"": ""open"",
    ""uri"": ""tcp://ip:9092"",
    ""sources"": [
        {
            ""addresses"": [
                ""topic-123""
            ],
            ""consumerCount"": 1,
            ""qos"": 0,
            ""authorizationContext"": [
                ""nginx:ditto""
            ],
            ""headerMapping"": {},
            ""payloadMapping"": [
                ""Ditto""
            ],
            ""replyTarget"": {
                ""address"": ""topic-Reply-123"",
                ""headerMapping"": {},
                ""expectedResponseTypes"": [
                    ""response"",
                    ""error""
                ],
                ""enabled"": true
            }
        }
    ],
    ""targets"": [
        {
            ""address"": ""eventTopic"",
            ""topics"": [
                ""_/_/things/twin/events?filter=and(like(thingId,'org.eclipse.ditto:myThing:*'),exists(features/lamp))&extraFields=thingId,features/water-tank/properties,attributes/location""
            ],
            ""qos"": 0,
            ""authorizationContext"": [
                ""nginx:ditto""
            ],
            ""headerMapping"": {}
        }
    ],
    ""clientCount"": 1,
    ""failoverEnabled"": true,
    ""validateCertificates"": false,
    ""processorPoolSize"": 1,
    ""specificConfig"": {
        ""saslMechanism"": ""plain"",
        ""bootstrapServers"": ""kafka_ip:port""
    },
    ""mappingDefinitions"": {
        ""LexiMapper"": {
            ""mappingEngine"": """",
            ""options"": {
                ""incomingScript"": """",
                ""outgoingScript"": """"
            }
        }
    },
    ""tags"": []
}
this is how I created the connection in my ditto. I am expecting it should publish the event with these extraFields ""thingId,features/water-tank/properties,attributes/location"" only if I changed anything under the lamp feature but it was publishing the event on the topic if anything gets changed in thing.
I want to publish event with extraFields only specified 'feature or field' gets changed. can anyone tell me how to do it?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C858YBBs/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1929,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C858mmRx,ditto,2090493041,1929,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-05-02T13:24:19Z,2024-05-02T13:24:19Z,"@VETRIVEL001 I cannot reproduce ..

What I did:
* Created the connection like you did with:
```json
""topics"": [
                ""_/_/things/twin/events?filter=and(like(thingId,'org.eclipse.ditto:myThing:*'),exists(features/lamp))&extraFields=thingId,features/water-tank/properties,attributes/location""
            ],
```
* then I created the Thing (notice that you require another `:` in your filter `like(thingId,'org.eclipse.ditto:myThing:*')`:
```
PUT /api/2/things/org.eclipse.ditto:myThing:123
```
with payload:
```json
{
  ""attributes"": {
    ""manufacturer"": ""ACME demo corp."",
    ""location"": ""Berlin, main floor"",
    ""serialno"": ""42"",
    ""model"": ""Speaking coffee machine""
  },
  ""features"": {
    ""water-tank"": {
      ""properties"": {},
      ""desiredProperties"": {}
    },
    ""lamp"": {
      ""properties"": {},
      ""desiredProperties"": {}
    }
  }
}
```
* That triggered the connection to publish an event (because `features/lamp`) was contained in the payload.
* Then I updated only the feature `water-tank` with:
```
PUT /api/2/things/org.eclipse.ditto:myThing:123/features/water-tank
```
Any payload:
```json
{
   ""properties"": {
      ""foo"": ""bar""
   }
}
```
* Which did - as expected - not send out an event via the connection - as the `lamp` feature was not updated.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C858mmRx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1929,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C858tuQv,ditto,2092360751,1929,NA,VETRIVEL001,162584329,,,NA,2024-05-03T06:03:24Z,2024-05-03T06:03:24Z,"I also followed the same way you did.
connection:
""topics"": [
                ""_/_/things/twin/events?filter=and(like(thingId,'org.eclipse.ditto:myThing:*'),exists(features/lamp))&extraFields=thingId,features/water-tank/properties,attributes/location""
            ],
            
PUT /api/2/things/org.eclipse.ditto:myThing:123/features/water-tank
I tried both put and patch
payload:
{
   ""properties"": {
      ""foo"": ""bar""
   }
}
but it sending out an event on kafka. still it persists the same issue.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C858tuQv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1929,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C858tyiz,ditto,2092378291,1929,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-05-03T06:22:27Z,2024-05-03T06:22:27Z,Do you maybe still have another Kafka connection in Ditto which does not have the same `filter`?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C858tyiz/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1929,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C858tzyx,ditto,2092383409,1929,NA,VETRIVEL001,162584329,,,NA,2024-05-03T06:28:01Z,2024-05-03T06:28:01Z,"No, I have only one connection.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C858tzyx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1929,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C858u9ZT,ditto,2092684883,1929,NA,dimabarbul,2970647,Dmitriy Barbul,dimabarbul@gmail.com,NA,2024-05-03T09:58:43Z,2024-05-03T09:58:43Z,"Hello @VETRIVEL001 

I tried to replicate the issue, but I wasn't able to. I use Ditto 3.5.4.

I basically did the same steps as you:

- created thing with lamp feature provided
- updated (with PUT) water-tank feature
- updated (with PUT) lamp feature

Before doing that I enabled logs for the connection and here is what I see in Ditto UI:
![2024-05-03-122852_912x454_scrot](https://github.com/eclipse-ditto/ditto/assets/2970647/633834e1-7c88-4494-b09a-0a02f5e47802)
Creating thing and updating lamp feature provided series of events with types dispatched-filtered-mapped-published while updating water-tank feature produced only event of dispatched type, which is expected behavior.

<details>
<summary>Connection logs as JSON</summary>

```json
{
  ""connectionId"": ""1929-kafka"",
  ""connectionLogs"": [
    {
      ""correlationId"": ""8dda0473-9ea8-43ff-bf28-d4a476ffae11"",
      ""timestamp"": ""2024-05-03T09:23:13.366877149Z"",
      ""category"": ""connection"",
      ""type"": ""other"",
      ""level"": ""success"",
      ""message"": ""Successfully reset the logs."",
      ""entityType"": ""connection"",
      ""entityId"": ""1929-kafka""
    },
    {
      ""correlationId"": ""24767649-4f65-4874-9f21-ad232a19361a"",
      ""timestamp"": ""2024-05-03T09:23:17.151495994Z"",
      ""category"": ""target"",
      ""type"": ""dispatched"",
      ""level"": ""success"",
      ""message"": ""Successfully dispatched signal. - Message headers: [referer=http://localhost:8080/ui/, sec-fetch-site=same-origin, correlation-id=24767649-4f65-4874-9f21-ad232a19361a, origin=http://localhost:8080, ditto-ackgregator-address=pekko://ditto-cluster@172.18.0.9:2551/user/$Yb/ackr0-24767649-4f65-4874-9f21-ad232a19361a#16254017, requested-acks=[\""twin-persisted\""], authorization=Basic ZGl0dG86ZGl0dG8=, ditto-originator=nginx:ditto, response-required=false, host=localhost:8080, ditto-read-subjects=[\""nginx:ditto\""], sec-fetch-mode=cors, if-none-match=*, x-ditto-pre-authenticated=nginx:ditto, cookie=.AspNetCore.Antiforgery.P_Dp5CLNiMg=CfDJ8EsrvQfSA0lDjqCxsYQfCHfsIwLKzeW0GSHtFQ-_km-beQOug9wZEm5ctF2ZoQNQ-FypJc2ZWPbI7HQQK_McYdFGOlry7K8LzOkGvQjSO971P9wxTb_pVvG0o0u1NR1i3ljZqJEpEA6SEpI278_Dhl0; .AspNetCore.Antiforgery.8vFUR3_kimI=CfDJ8EsrvQfSA0lDjqCxsYQfCHfO5jmjvCr-hw6-WX5H38gaDdbRs9B-QivzCQjvik0fzWhOh0PVL0SYDqrNr8wIxLJSismJPCv3iocH6K16UkDU6iGpsTHR18J8opgm3GD8-rCqZIslFupzOx1VZ0Mlxog, accept-language=en-US, en;q=0.5, dnt=1, x-forwarded-for=172.18.0.1, pragma=no-cache, accept=*/*, x-real-ip=172.18.0.1, x-forwarded-user=ditto, ditto-auth-context={\""type\"":\""pre-authenticated-http\"",\""subjects\"":[\""nginx:ditto\""]}, sec-fetch-dest=empty, user-agent=Mozilla/5.0 (X11; Linux x86_64; rv:124.0) Gecko/20100101 Firefox/124.0] - Message payload: {\""type\"":\""things.events:thingCreated\"",\""_timestamp\"":\""2024-05-03T09:23:17.128058725Z\"",\""_metadata\"":null,\""revision\"":9,\""thingId\"":\""org.eclipse.ditto:myThing:123\"",\""thing\"":{\""thingId\"":\""org.eclipse.ditto:myThing:123\"",\""policyId\"":\""org.eclipse.ditto:myThing:123\"",\""attributes\"":{\""manufacturer\"":\""ACME demo corp.\"",\""location\"":\""Berlin, main floor\"",\""serialno\"":\""42\"",\""model\"":\""Speaking coffee machine\""},\""features\"":{\""water-tank\"":{\""properties\"":{},\""desiredProperties\"":{}},\""lamp\"":{\""properties\"":{},\""desiredProperties\"":{}}}}}"",
      ""address"": ""eventTopic"",
      ""entityType"": ""thing"",
      ""entityId"": ""org.eclipse.ditto:myThing:123""
    },
    {
      ""correlationId"": ""24767649-4f65-4874-9f21-ad232a19361a"",
      ""timestamp"": ""2024-05-03T09:23:17.168057238Z"",
      ""category"": ""target"",
      ""type"": ""filtered"",
      ""level"": ""success"",
      ""message"": ""Signal successfully passed possible filters."",
      ""address"": ""eventTopic"",
      ""entityType"": ""thing"",
      ""entityId"": ""org.eclipse.ditto:myThing:123""
    },
    {
      ""correlationId"": ""24767649-4f65-4874-9f21-ad232a19361a"",
      ""timestamp"": ""2024-05-03T09:23:17.201507206Z"",
      ""category"": ""target"",
      ""type"": ""mapped"",
      ""level"": ""success"",
      ""message"": ""Mapped outgoing signal with mapper <default>"",
      ""address"": ""eventTopic"",
      ""entityType"": ""thing"",
      ""entityId"": ""org.eclipse.ditto:myThing:123""
    },
    {
      ""correlationId"": ""24767649-4f65-4874-9f21-ad232a19361a"",
      ""timestamp"": ""2024-05-03T09:23:17.254721551Z"",
      ""category"": ""target"",
      ""type"": ""published"",
      ""level"": ""success"",
      ""message"": ""Successfully published signal. - Message headers: [content-type=application/vnd.eclipse.ditto+json, correlation-id=24767649-4f65-4874-9f21-ad232a19361a] - Message payload: {\""topic\"":\""org.eclipse.ditto/myThing:123/things/twin/events/created\"",\""headers\"":{\""sec-fetch-mode\"":\""cors\"",\""referer\"":\""http://localhost:8080/ui/\"",\""x-ditto-pre-authenticated\"":\""nginx:ditto\"",\""sec-fetch-site\"":\""same-origin\"",\""cookie\"":\"".AspNetCore.Antiforgery.P_Dp5CLNiMg=CfDJ8EsrvQfSA0lDjqCxsYQfCHfsIwLKzeW0GSHtFQ-_km-beQOug9wZEm5ctF2ZoQNQ-FypJc2ZWPbI7HQQK_McYdFGOlry7K8LzOkGvQjSO971P9wxTb_pVvG0o0u1NR1i3ljZqJEpEA6SEpI278_Dhl0; .AspNetCore.Antiforgery.8vFUR3_kimI=CfDJ8EsrvQfSA0lDjqCxsYQfCHfO5jmjvCr-hw6-WX5H38gaDdbRs9B-QivzCQjvik0fzWhOh0PVL0SYDqrNr8wIxLJSismJPCv3iocH6K16UkDU6iGpsTHR18J8opgm3GD8-rCqZIslFupzOx1VZ0Mlxog\"",\""accept-language\"":\""en-US, en;q=0.5\"",\""origin\"":\""http://localhost:8080\"",\""dnt\"":\""1\"",\""x-forwarded-for\"":\""172.18.0.1\"",\""pragma\"":\""no-cache\"",\""accept\"":\""*/*\"",\""authorization\"":\""Basic ZGl0dG86ZGl0dG8=\"",\""x-real-ip\"":\""172.18.0.1\"",\""x-forwarded-user\"":\""ditto\"",\""host\"":\""localhost:8080\"",\""sec-fetch-dest\"":\""empty\"",\""user-agent\"":\""Mozilla/5.0 (X11; Linux x86_64; rv:124.0) Gecko/20100101 Firefox/124.0\"",\""ditto-originator\"":\""nginx:ditto\"",\""response-required\"":false,\""requested-acks\"":[],\""content-type\"":\""application/json\"",\""correlation-id\"":\""24767649-4f65-4874-9f21-ad232a19361a\""},\""path\"":\""/\"",\""value\"":{\""thingId\"":\""org.eclipse.ditto:myThing:123\"",\""policyId\"":\""org.eclipse.ditto:myThing:123\"",\""attributes\"":{\""manufacturer\"":\""ACME demo corp.\"",\""location\"":\""Berlin, main floor\"",\""serialno\"":\""42\"",\""model\"":\""Speaking coffee machine\""},\""features\"":{\""water-tank\"":{\""properties\"":{},\""desiredProperties\"":{}},\""lamp\"":{\""properties\"":{},\""desiredProperties\"":{}}}},\""extra\"":{\""thingId\"":\""org.eclipse.ditto:myThing:123\"",\""features\"":{\""water-tank\"":{\""properties\"":{}}},\""attributes\"":{\""location\"":\""Berlin, main floor\""}},\""revision\"":9,\""timestamp\"":\""2024-05-03T09:23:17.128058725Z\""}"",
      ""address"": ""eventTopic""
    },
    {
      ""correlationId"": ""fabbefdc-2d9a-4ffe-b772-87df269cdf90"",
      ""timestamp"": ""2024-05-03T09:24:16.594616743Z"",
      ""category"": ""target"",
      ""type"": ""dispatched"",
      ""level"": ""success"",
      ""message"": ""Successfully dispatched signal. - Message headers: [x-ditto-pre-authenticated=nginx:ditto, correlation-id=fabbefdc-2d9a-4ffe-b772-87df269cdf90, x-forwarded-for=172.18.0.1, ditto-ackgregator-address=pekko://ditto-cluster@172.18.0.9:2551/user/$3b/ackr0-fabbefdc-2d9a-4ffe-b772-87df269cdf90#-907028526, accept=*/*, requested-acks=[\""twin-persisted\""], authorization=Basic ZGl0dG86ZGl0dG8=, x-real-ip=172.18.0.1, x-forwarded-user=ditto, ditto-originator=nginx:ditto, response-required=false, ditto-auth-context={\""type\"":\""pre-authenticated-http\"",\""subjects\"":[\""nginx:ditto\""]}, host=localhost:8080, ditto-read-subjects=[\""nginx:ditto\""], user-agent=curl/8.7.1] - Message payload: {\""type\"":\""things.events:featureModified\"",\""_timestamp\"":\""2024-05-03T09:24:16.573186811Z\"",\""_metadata\"":null,\""revision\"":10,\""thingId\"":\""org.eclipse.ditto:myThing:123\"",\""featureId\"":\""water-tank\"",\""feature\"":{\""properties\"":{\""foo\"":\""bar\""}}}"",
      ""address"": ""eventTopic"",
      ""entityType"": ""thing"",
      ""entityId"": ""org.eclipse.ditto:myThing:123""
    },
    {
      ""correlationId"": ""a2306b00-9c37-4334-a285-bdd520017c7d"",
      ""timestamp"": ""2024-05-03T09:24:20.508087532Z"",
      ""category"": ""target"",
      ""type"": ""dispatched"",
      ""level"": ""success"",
      ""message"": ""Successfully dispatched signal. - Message headers: [x-ditto-pre-authenticated=nginx:ditto, correlation-id=a2306b00-9c37-4334-a285-bdd520017c7d, x-forwarded-for=172.18.0.1, ditto-ackgregator-address=pekko://ditto-cluster@172.18.0.9:2551/user/$4b/ackr0-a2306b00-9c37-4334-a285-bdd520017c7d#-1885240064, accept=*/*, requested-acks=[\""twin-persisted\""], authorization=Basic ZGl0dG86ZGl0dG8=, x-real-ip=172.18.0.1, x-forwarded-user=ditto, ditto-originator=nginx:ditto, response-required=false, ditto-auth-context={\""type\"":\""pre-authenticated-http\"",\""subjects\"":[\""nginx:ditto\""]}, host=localhost:8080, ditto-read-subjects=[\""nginx:ditto\""], user-agent=curl/8.7.1] - Message payload: {\""type\"":\""things.events:featureModified\"",\""_timestamp\"":\""2024-05-03T09:24:20.493875969Z\"",\""_metadata\"":null,\""revision\"":11,\""thingId\"":\""org.eclipse.ditto:myThing:123\"",\""featureId\"":\""lamp\"",\""feature\"":{\""properties\"":{\""foo\"":\""bar\""}}}"",
      ""address"": ""eventTopic"",
      ""entityType"": ""thing"",
      ""entityId"": ""org.eclipse.ditto:myThing:123""
    },
    {
      ""correlationId"": ""a2306b00-9c37-4334-a285-bdd520017c7d"",
      ""timestamp"": ""2024-05-03T09:24:20.516700844Z"",
      ""category"": ""target"",
      ""type"": ""filtered"",
      ""level"": ""success"",
      ""message"": ""Signal successfully passed possible filters."",
      ""address"": ""eventTopic"",
      ""entityType"": ""thing"",
      ""entityId"": ""org.eclipse.ditto:myThing:123""
    },
    {
      ""correlationId"": ""a2306b00-9c37-4334-a285-bdd520017c7d"",
      ""timestamp"": ""2024-05-03T09:24:20.586274286Z"",
      ""category"": ""target"",
      ""type"": ""mapped"",
      ""level"": ""success"",
      ""message"": ""Mapped outgoing signal with mapper <default>"",
      ""address"": ""eventTopic"",
      ""entityType"": ""thing"",
      ""entityId"": ""org.eclipse.ditto:myThing:123""
    },
    {
      ""correlationId"": ""a2306b00-9c37-4334-a285-bdd520017c7d"",
      ""timestamp"": ""2024-05-03T09:24:20.606415085Z"",
      ""category"": ""target"",
      ""type"": ""published"",
      ""level"": ""success"",
      ""message"": ""Successfully published signal. - Message headers: [content-type=application/vnd.eclipse.ditto+json, correlation-id=a2306b00-9c37-4334-a285-bdd520017c7d] - Message payload: {\""topic\"":\""org.eclipse.ditto/myThing:123/things/twin/events/modified\"",\""headers\"":{\""authorization\"":\""Basic ZGl0dG86ZGl0dG8=\"",\""x-real-ip\"":\""172.18.0.1\"",\""x-forwarded-user\"":\""ditto\"",\""x-ditto-pre-authenticated\"":\""nginx:ditto\"",\""host\"":\""localhost:8080\"",\""x-forwarded-for\"":\""172.18.0.1\"",\""accept\"":\""*/*\"",\""user-agent\"":\""curl/8.7.1\"",\""ditto-originator\"":\""nginx:ditto\"",\""response-required\"":false,\""requested-acks\"":[],\""content-type\"":\""application/json\"",\""correlation-id\"":\""a2306b00-9c37-4334-a285-bdd520017c7d\""},\""path\"":\""/features/lamp\"",\""value\"":{\""properties\"":{\""foo\"":\""bar\""}},\""extra\"":{\""thingId\"":\""org.eclipse.ditto:myThing:123\"",\""features\"":{\""water-tank\"":{\""properties\"":{\""foo\"":\""bar\""}}},\""attributes\"":{\""location\"":\""Berlin, main floor\""}},\""revision\"":11,\""timestamp\"":\""2024-05-03T09:24:20.493875969Z\""}"",
      ""address"": ""eventTopic""
    }
  ],
  ""enabledSince"": ""2024-05-03T09:33:01.831675300Z"",
  ""enabledUntil"": ""2024-05-03T10:33:01.833136688Z""
}
```

</details>

Here are the events I see in kafka (I'm using command `kafka-console-consumer --bootstrap-server localhost:9092 --from-beginning --topic eventTopic` in kafka container):

```json5
{""topic"":""org.eclipse.ditto/myThing:123/things/twin/events/created"",""headers"":{""sec-fetch-mode"":""cors"",""referer"":""http://localhost:8080/ui/"",""x-ditto-pre-authenticated"":""nginx:ditto"",""sec-fetch-site"":""same-origin"",""cookie"":"".AspNetCore.Antiforgery.P_Dp5CLNiMg=CfDJ8EsrvQfSA0lDjqCxsYQfCHfsIwLKzeW0GSHtFQ-_km-beQOug9wZEm5ctF2ZoQNQ-FypJc2ZWPbI7HQQK_McYdFGOlry7K8LzOkGvQjSO971P9wxTb_pVvG0o0u1NR1i3ljZqJEpEA6SEpI278_Dhl0; .AspNetCore.Antiforgery.8vFUR3_kimI=CfDJ8EsrvQfSA0lDjqCxsYQfCHfO5jmjvCr-hw6-WX5H38gaDdbRs9B-QivzCQjvik0fzWhOh0PVL0SYDqrNr8wIxLJSismJPCv3iocH6K16UkDU6iGpsTHR18J8opgm3GD8-rCqZIslFupzOx1VZ0Mlxog"",""accept-language"":""en-US, en;q=0.5"",""origin"":""http://localhost:8080"",""dnt"":""1"",""x-forwarded-for"":""172.18.0.1"",""pragma"":""no-cache"",""accept"":""*/*"",""authorization"":""Basic ZGl0dG86ZGl0dG8="",""x-real-ip"":""172.18.0.1"",""x-forwarded-user"":""ditto"",""host"":""localhost:8080"",""sec-fetch-dest"":""empty"",""user-agent"":""Mozilla/5.0 (X11; Linux x86_64; rv:124.0) Gecko/20100101 Firefox/124.0"",""ditto-originator"":""nginx:ditto"",""response-required"":false,""requested-acks"":[],""content-type"":""application/json"",""correlation-id"":""24767649-4f65-4874-9f21-ad232a19361a""},""path"":""/"",""value"":{""thingId"":""org.eclipse.ditto:myThing:123"",""policyId"":""org.eclipse.ditto:myThing:123"",""attributes"":{""manufacturer"":""ACME demo corp."",""location"":""Berlin, main floor"",""serialno"":""42"",""model"":""Speaking coffee machine""},""features"":{""water-tank"":{""properties"":{},""desiredProperties"":{}},""lamp"":{""properties"":{},""desiredProperties"":{}}}},""extra"":{""thingId"":""org.eclipse.ditto:myThing:123"",""features"":{""water-tank"":{""properties"":{}}},""attributes"":{""location"":""Berlin, main floor""}},""revision"":9,""timestamp"":""2024-05-03T09:23:17.128058725Z""}
{""topic"":""org.eclipse.ditto/myThing:123/things/twin/events/modified"",""headers"":{""authorization"":""Basic ZGl0dG86ZGl0dG8="",""x-real-ip"":""172.18.0.1"",""x-forwarded-user"":""ditto"",""x-ditto-pre-authenticated"":""nginx:ditto"",""host"":""localhost:8080"",""x-forwarded-for"":""172.18.0.1"",""accept"":""*/*"",""user-agent"":""curl/8.7.1"",""ditto-originator"":""nginx:ditto"",""response-required"":false,""requested-acks"":[],""content-type"":""application/json"",""correlation-id"":""a2306b00-9c37-4334-a285-bdd520017c7d""},""path"":""/features/lamp"",""value"":{""properties"":{""foo"":""bar""}},""extra"":{""thingId"":""org.eclipse.ditto:myThing:123"",""features"":{""water-tank"":{""properties"":{""foo"":""bar""}}},""attributes"":{""location"":""Berlin, main floor""}},""revision"":11,""timestamp"":""2024-05-03T09:24:20.493875969Z""}

```

Could you, please, provide following:

- Ditto version you use
- connection logs  
Please, enable connection logs, do the test and send the logs here. Logs can be enabled using [HTTP API](https://eclipse.dev/ditto/connectivity-manage-connections.html#enable-connection-logs) or Ditto UI under ""Connections"" tab at the top.  
Logs can be viewed on Ditto UI as well, or requested using [HTTP API](https://eclipse.dev/ditto/connectivity-manage-connections.html#retrieve-connection-logs). I believe, requesting them using HTTP API will be better here as UI does not show whole logs at once and JSON can be more easily checked.
- events published to Kafka","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C858u9ZT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1930,https://api.github.com/repos/eclipse-ditto/ditto/issues/1930,ditto,2268398516,1930,Connection target topics with mixed filters and enrichment may fail to publish message,alstanchev,50709547,Aleksandar Stanchev,,OPEN,2024-04-29T08:12:51Z,2024-05-07T07:02:28Z,"If a connection target is configured with multiple topics of the same type containing different filters and enrichments. In the cases the message matches the filter of the topic that has no enrichment it will be droped. 
For example:
```
""_/_/things/twin/events?filter=and(eq(resource:path,\""/\""),eq(topic:action,\""created\""))&extraFields=enriched_field"",
""_/_/things/twin/events?filter=or(not(eq(resource:path,\""/\"")),not(eq(topic:action,\""created\"")))""
```

These two filters split the types of events in to Created and Other. It is wanted only to enrich the created events and not the others.
The flow:
When a ""modify"" event is received, the targets are evaluated in the signalFilter at [OutboundDispatchingActor.java#L103](https://github.com/eclipse-ditto/ditto/blob/f2b8dc077576f40eea85e889520cd422b1e08039/connectivity/service/src/main/java/org/eclipse/ditto/connectivity/service/messaging/OutboundDispatchingActor.java#L103C9-L103C103). There the targets topics are evaluated as a whole so the modify event mathes the filter of the second topic and so the target is authorized.

Then the targets are split by having and not enrichment. So a pair is created with pair.second() only with the topic with extraFields  whitout evaluating its filter, not asuming that it will not match.  [OutboundMappingProcessorActor#splitTargetsByExtraFields#L852](https://github.com/eclipse-ditto/ditto/blob/f2b8dc077576f40eea85e889520cd422b1e08039/connectivity/service/src/main/java/org/eclipse/ditto/connectivity/service/messaging/OutboundMappingProcessorActor.java#L852C1-L852C96) 

This leads for the message being droped later at [OutboundMappingProcessorActor#applyFilter](https://github.com/eclipse-ditto/ditto/blob/f2b8dc077576f40eea85e889520cd422b1e08039/connectivity/service/src/main/java/org/eclipse/ditto/connectivity/service/messaging/OutboundMappingProcessorActor.java#L810)

Possible solutions.
 1. Evaluate again the extraFields topic filter in the filtering in [splitTargetsByExtraFields](https://github.com/eclipse-ditto/ditto/blob/f2b8dc077576f40eea85e889520cd422b1e08039/connectivity/service/src/main/java/org/eclipse/ditto/connectivity/service/messaging/OutboundMappingProcessorActor.java#L848C9-L849C9).

 2. Another would be to explicitly point out in the documentation that such mixing of same topics in a single target is not permited and even maybe extend the connection config validation before creating a connection but still i think that this is a bug.

My assumption of the functionality would be that if more than one topic with filters is configured in a connection then first in presedence would be the one with extraFields that has a matching filter (because only one call for retrieving is done and we wouldn't  want to multiply messages in one target) and then the others.

@thjaeckle i would like your input and thoughts on that. I was wondering if adding one more filter evaluation on each signal would not be the best approach but certenly is the smallest of a change in such a place.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1930/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1930,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C858IxWb,ditto,2082674075,1930,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-04-29T13:03:43Z,2024-04-29T13:03:43Z,"@alstanchev I always thought that there can e.g. only be one entry for a `_/_/things/twin/events` in the `targets` of a single connection (so ""kind of"" a Map-semantics - however only looking at this static part, without the query params).

I would however agree that this is useful to support (having the `_/_/things/twin/events` several times in the targets, but with different `filter` and `extraFields`).

However, the behavior has to then clearly be defined:
* what if several e.g. ""filters"" match?
   * only send out to the first matching ""target""?
   * send out to all matching ""targets""?
   * should this even be configurable?
* can there be optimizations for retrieving e.g. ""different"" `extraFields` for different matching targets?
   * in order to only once fetch ""combined"" extraFields, instead of potentially fetching several times

@alstanchev is this a similar direction of what you thought about?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C858IxWb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1930,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C858SjGM,ditto,2085237132,1930,NA,alstanchev,50709547,Aleksandar Stanchev,,NA,2024-04-30T12:45:41Z,2024-04-30T12:45:41Z,"@thjaeckle 
> * what if several e.g. ""filters"" match?
>   * only send out to the first matching ""target""?
>   * send out to all matching ""targets""? Yes
>   * should this even be configurable?

I was thinking of  sending to the first matching topic in a target. If more match i would consider this a configuration  mistake. 
 
>* can there be optimizations for retrieving e.g. ""different"" extraFields for different matching targets?
>   * in order to only once fetch ""combined"" extraFields, instead of potentially fetching several times

From what i saw the enrichment is done once per topic in a target so i am not sure an optimisation would be necessary here. Considering that a target sends only one event, if multiple targets with matching topics are configured then they should be indipendent of one another.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C858SjGM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1930,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C858TCgT,ditto,2085365779,1930,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-04-30T13:41:29Z,2024-04-30T13:41:29Z,"Yeah, if only the first matching topic would ""win"", this should work.
Just needs to be documented well enough then ;)

> I was wondering if adding one more filter evaluation on each signal would not be the best approach but certenly is the smallest of a change in such a place.

This should be ok, I think - should not be very ""cost intense"" ..","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C858TCgT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1930,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C859BrIW,ditto,2097590806,1930,NA,alstanchev,50709547,Aleksandar Stanchev,,NA,2024-05-07T07:02:27Z,2024-05-07T07:02:27Z,"Ok, will leave this for now as we have more urgent things for now and will fix when i have more time.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C859BrIW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1931,https://api.github.com/repos/eclipse-ditto/ditto/issues/1931,ditto,2269527818,1931,"Using some placeholders in RQL ""filters"" for connection ""targets"" is not possible",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2024-04-29T17:02:38Z,2024-05-14T05:37:07Z,"I would have expected that something like this filter for messages should work:
```
_/_/things/live/messages?filter=and(exists(feature:id),like(topic:subject,'fetch*'))
```

In words:
* Select all messages sent to a feature (containing a `feature:id` which can be resolved to a non-empty value=
* And having a subject beginning with ""fetch""

But that fails with an exception:
```json
{
  ""status"":400,
  ""error"":""rql.expression.invalid"",
  ""message"":""Unknown property name: feature:id"",
  ""description"":""Ensure that all opening parentheses have also closing ones and that the RQL expression is valid.""
}
```

I think that likely all placeholders which are placed instead of a ""property name"" might not be resolved as expected, so this would probably also fail:
```
eq(feature:id,'importantFeature')
```

Placeholders not supported here currently: 
* `feature:id`
* `thing:id`
* `entity:id`","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1931/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1935,https://api.github.com/repos/eclipse-ditto/ditto/issues/1935,ditto,2277616643,1935,SSL kafka connection configuration,BHUVANESHWARI967,76557472,bhuv,,CLOSED,2024-05-03T12:50:16Z,2024-05-13T08:48:21Z,"### Discussed in https://github.com/eclipse-ditto/ditto/discussions/1933

<div type='discussions-op-text'>

<sup>Originally posted by **BHUVANESHWARI967** May  2, 2024</sup>
Hello Everyone,

I am currently trying to integrate Kafka with Ditto and I need some assistance in setting up the connection configuration JSON.I have configured SSL to secure the connections between my clients and broker. 

Security and Authentication: SSL/TLS (configured with keystores and truststores).

 I am unsure about the fields required, especially in relation to Kafka specifics and Ditto integration.

Could anyone guide me on the correct and necessary fields for this JSON configuration when connecting Kafka with Ditto? </div>","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1935/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1935,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C858wANJ,ditto,2092958537,1935,NA,BHUVANESHWARI967,76557472,bhuv,,NA,2024-05-03T12:53:21Z,2024-05-03T12:53:21Z,"Hello @thjaeckle ,

I tried this different ways for connection Json,

1.SSL tunnel for kafka (not available for type kafka)

""validateCertificates"": true,
    ""sshTunnel"": {
        ""enabled"": true,
        ""uri"": ""ssh://32.45.632.63:30001"",
        ""credentials"": {
            ""type"": ""client-cert"",
            ""password"": ""root@1232"",
            ""publicKey"": ""-----BEGIN CERTIFICATE-----{ca-cert}-----END PRIVATE KEY-----""
        },
        ""validateHost"": true
    }


2. with cert and key in credential field: (not working)

""credentials"": {
        ""type"": ""client-cert"",
        ""cert"": ""-----BEGIN CERTIFICATE-----\{ca-cert}-----END PRIVATE KEY-----""
        ""key"": ""-----BEGIN CERTIFICATE-----\{ca-key}-----END PRIVATE KEY-----""
    }

3. with ca and validatecertificate field:

""validateCertificates"": true,
    ""ca"": ""-----BEGIN CERTIFICATE-----\{ca-cert}-----END CERTIFICATE-----""

----{
    ""status"": 504,
    ""error"": ""connectivity:connection.failed"",
    ""message"": ""The Connection with ID '1d56cf82-6e59-4e78-b7fe-05dd0a35f5f0' failed to connect."",
    ""description"": ""Cause: Unexpected handshake message: server_hello""
}
4. Tried giving the cert-signed certificate in ""ca"",

{
    ""status"": 504,
    ""error"": ""connectivity:connection.failed"",
    ""message"": ""The Connection with ID '1d56cf82-6e59-4e78-b7fe-05dd0a35f5f0' failed to connect."",
    ""description"": ""Cause: unable to find valid certification path to requested target""
}

The connectivity log is,

> Caused by: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
        at java.base/sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:439)
        at java.base/sun.security.validator.PKIXValidator.engineValidate(PKIXValidator.java:306)
        at java.base/sun.security.validator.Validator.validate(Validator.java:264)
        at java.base/sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:285)
        at java.base/sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:144)
        at java.base/sun.security.ssl.CertificateMessage$T12CertificateConsumer.checkServerCerts(CertificateMessage.java:632)
        ... 42 common frames omitted
Caused by: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
        at java.base/sun.security.provider.certpath.SunCertPathBuilder.build(SunCertPathBuilder.java:148)
        at java.base/sun.security.provider.certpath.SunCertPathBuilder.engineBuild(SunCertPathBuilder.java:129)
        at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.coordinatorUnknownAndUnreadySync(ConsumerCoordinator.java:499)
        at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.poll(ConsumerCoordinator.java:531)
        at java.base/java.security.cert.CertPathBuilder.build(CertPathBuilder.java:297)
        at java.base/sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:434)
        ... 47 common frames omitted
        at org.apache.kafka.clients.consumer.KafkaConsumer.updateAssignmentMetadataIfNeeded(KafkaConsumer.java:1288)
        at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1247)
        at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1227)
        at org.apache.pekko.kafka.internal.KafkaConsumerActor.poll(KafkaConsumerActor.scala:516)
        at org.apache.pekko.kafka.internal.KafkaConsumerActor.commitAndPoll(KafkaConsumerActor.scala:502)
        at org.apache.pekko.kafka.internal.KafkaConsumerActor.org$apache$pekko$kafka$internal$KafkaConsumerActor$$receivePoll(KafkaConsumerActor.scala:486)
        at org.apache.pekko.kafka.internal.KafkaConsumerActor$$anonfun$regularReceive$1.applyOrElse(KafkaConsumerActor.scala:264)
        at org.apache.pekko.actor.Actor.aroundReceive(Actor.scala:547)
        at org.apache.pekko.actor.Actor.aroundReceive$(Actor.scala:545)
        at org.apache.pekko.kafka.internal.KafkaConsumerActor.org$apache$pekko$actor$Timers$$super$aroundReceive(KafkaConsumerActor.scala:184)
        at org.apache.pekko.actor.Timers.aroundReceive(Timers.scala:62)
        at org.apache.pekko.actor.Timers.aroundReceive$(Timers.scala:51)
        at org.apache.pekko.kafka.internal.KafkaConsumerActor.aroundReceive(KafkaConsumerActor.scala:184)
        at org.apache.pekko.actor.ActorCell.receiveMessage(ActorCell.scala:590)
        at org.apache.pekko.actor.ActorCell.invoke(ActorCell.scala:557)
        at org.apache.pekko.dispatch.Mailbox.processMailbox(Mailbox.scala:280)
        at org.apache.pekko.dispatch.Mailbox.run(Mailbox.scala:241)
        at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
        at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
        at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
        at java.base/sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:439)
        at java.base/sun.security.validator.PKIXValidator.engineValidate(PKIXValidator.java:306)
        at java.base/sun.security.validator.Validator.validate(Validator.java:264)
        at java.base/sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:285)
        at java.base/sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:144)
        at java.base/sun.security.ssl.CertificateMessage$T12CertificateConsumer.checkServerCerts(CertificateMessage.java:632)
        ... 42 common frames omitted
Caused by: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
        at java.base/sun.security.provider.certpath.SunCertPathBuilder.build(SunCertPathBuilder.java:148)
        at java.base/sun.security.provider.certpath.SunCertPathBuilder.engineBuild(SunCertPathBuilder.java:129)
        at java.base/java.security.cert.CertPathBuilder.build(CertPathBuilder.java:297)
        at java.base/sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:434)
        ... 47 common frames omitted



Can you provide help with this?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C858wANJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1935,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C859Dfsm,ditto,2098068262,1935,NA,BHUVANESHWARI967,76557472,bhuv,,NA,2024-05-07T10:48:59Z,2024-05-07T10:48:59Z,"Hi all,

Should the kafka configuration be included in the connectivity yaml? Can you help me with this?

Thank you.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C859Dfsm/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1935,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C859lkcv,ditto,2107000623,1935,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-05-13T08:48:21Z,2024-05-13T08:48:21Z,Discussed in #1938 - please don't open up multiple discussions in different places,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C859lkcv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1938,https://api.github.com/repos/eclipse-ditto/ditto/issues/1938,ditto,2286850591,1938,ImplicitThingCreation configuration,Korakbhakta02,67550363,,,CLOSED,2024-05-09T04:07:35Z,2024-05-13T08:47:10Z,"Hi, I have doubt related to the implictThingCreationMapper. What shall be included in the payload Mapping section, because it is not taking implictThingCreation,giving error ""Make sure to only use either the specified mappingDefinitions names [] or fallback mapper names [UpdateTwinWithLiveResponse, Normalized, Ditto, CloudEvents, RawMessage]."".Please,guide me how to create this mapper.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1938/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1938,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C859SKc-,ditto,2101913406,1938,NA,Korakbhakta02,67550363,,,NA,2024-05-09T04:29:54Z,2024-05-09T04:29:54Z,"And also,after setting up the mapper according to the documentation, getting error:
""The placeholder '{\""thingId\"":\""{{ header:deviceId }}\"",\""attributes\"":{\""CreatedBy\"":\""ImplicitThingCreation\"",\""CreatedTime\"":\""{{ time:now }}\""}}' could not be resolved."",""description"":""Some placeholders could not be resolved. Check the spelling of the placeholder and make sure all required headers are set.""

This is the json:
""mappingDefinitions"": {
        ""ThingCreation"": {
            ""mappingEngine"": ""ImplicitThingCreation"",
            
            ""options"": {
                ""thing"": {
                    ""thingId"": ""{{ header:deviceId }}"",
                    ""attributes"": {
                       
                        ""CreatedBy"": ""ImplicitThingCreation"",
                        ""CreatedTime"": ""{{ time:now }}""
                    }
                },
                ""commandHeaders"": {
                    ""If-None-Match"": ""*"",
                    ""correlation-id"": ""{{ header:correlation-id }}""
                },
                ""allowPolicyLockout"": true
            }
        }
    }","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C859SKc-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1938,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C859gem8,ditto,2105665980,1938,NA,dimabarbul,2970647,Dmitriy Barbul,dimabarbul@gmail.com,NA,2024-05-11T10:22:16Z,2024-05-11T10:22:16Z,"Hello @Korakbhakta02 

Could you, please, advise which version of Ditto you use?

I was able to create AMQP 0.9.1 connection with the mapping (full JSON is below) in Ditto 3.5.4, and the connection works as expected - when I publish message with header `deviceId`, corresponding thing gets created.

Connection JSON:

```json
{
    ""connectionType"": ""amqp-091"",
    ""connectionStatus"": ""open"",
    ""uri"": ""amqp://guest:guest@rabbitmq:5672/%2F"",
    ""sources"": [
        {
            ""addresses"": [""things""],
            ""authorizationContext"": [ ""nginx:ditto"" ],
            ""payloadMapping"": [""ThingCreation""]
        }
    ],
    ""targets"": [],
    ""mappingDefinitions"": {
        ""ThingCreation"": {
            ""mappingEngine"": ""ImplicitThingCreation"",
            ""options"": {
                ""thing"": {
                    ""thingId"": ""{{ header:deviceId }}"",
                    ""attributes"": {
                        ""CreatedBy"": ""ImplicitThingCreation"",
                        ""CreatedTime"": ""{{ time:now }}""
                    }
                },
                ""commandHeaders"": {
                    ""If-None-Match"": ""*"",
                    ""correlation-id"": ""{{ header:correlation-id }}""
                },
                ""allowPolicyLockout"": true
            }
        }
    }
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C859gem8/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1938,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C859gfSo,ditto,2105668776,1938,NA,Korakbhakta02,67550363,,,NA,2024-05-11T10:31:04Z,2024-05-11T10:31:04Z,"
> Hello @Korakbhakta02
> 
> Could you, please, advise which version of Ditto you use?
> 
> I was able to create AMQP 0.9.1 connection with the mapping (full JSON is below) in Ditto 3.5.4, and the connection works as expected - when I publish message with header `deviceId`, corresponding thing gets created.
> 
> Connection JSON:
> 
> ```json
> {
>     ""connectionType"": ""amqp-091"",
>     ""connectionStatus"": ""open"",
>     ""uri"": ""amqp://guest:guest@rabbitmq:5672/%2F"",
>     ""sources"": [
>         {
>             ""addresses"": [""things""],
>             ""authorizationContext"": [ ""nginx:ditto"" ],
>             ""payloadMapping"": [""ThingCreation""]
>         }
>     ],
>     ""targets"": [],
>     ""mappingDefinitions"": {
>         ""ThingCreation"": {
>             ""mappingEngine"": ""ImplicitThingCreation"",
>             ""options"": {
>                 ""thing"": {
>                     ""thingId"": ""{{ header:deviceId }}"",
>                     ""attributes"": {
>                         ""CreatedBy"": ""ImplicitThingCreation"",
>                         ""CreatedTime"": ""{{ time:now }}""
>                     }
>                 },
>                 ""commandHeaders"": {
>                     ""If-None-Match"": ""*"",
>                     ""correlation-id"": ""{{ header:correlation-id }}""
>                 },
>                 ""allowPolicyLockout"": true
>             }
>         }
>     }
> }
> ```

I am using version 3.5.3 and connection medium is kafka, I have given same payload of connection which you have used.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C859gfSo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1938,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C859hEd2,ditto,2105821046,1938,NA,dimabarbul,2970647,Dmitriy Barbul,dimabarbul@gmail.com,NA,2024-05-11T14:08:10Z,2024-05-11T14:08:10Z,"I was able to get this error for AMQP and Kafka when header ""deviceId"" was not set on incoming message.

I sent kafka message from CLI from kafka container using following command:
`kafka-console-producer --topic things --bootstrap-server localhost:9092 --property parse.headers=true --property headers.delimiter=_ <<<'deviceId:test:1938-test-01_'`.
In this case I see created thing `test:1938-test-01` in Ditto.

But when I tried sending message without headers (`kafka-console-producer --topic things --bootstrap-server localhost:9092  <<<''`), I get the issue that you described in logs.

Could you, please, check that the message you send really contains header `deviceId`?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C859hEd2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1938,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C859hu8h,ditto,2105995041,1938,NA,Korakbhakta02,67550363,,,NA,2024-05-11T19:09:17Z,2024-05-11T19:09:17Z,"""message"": ""Got exception <placeholder:unresolved> when processing external message with mapper <ThingCreation>: The placeholder '{\""thingId\"":\""{{ header:deviceId }}\""}' could not be resolved. - Message headers: [kafka.timestamp=1715454474068, kafka.topic=things, correlation-id=24da194e-8654-4d4c-8a8c-3f70b1e38926] - Message payload: deviceId:test:1932-test-01_"",
command:
 kafka-console-producer.sh --topic things --bootstrap-server localhost:9092 --property parse.headers=true --property headers.delimiter=_ <<<'deviceId:test:1932-test-01_'



it is still giving same error
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C859hu8h/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1938,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C859iLlM,ditto,2106112332,1938,NA,dimabarbul,2970647,Dmitriy Barbul,dimabarbul@gmail.com,NA,2024-05-12T04:16:39Z,2024-05-12T04:16:39Z,"Judging from the error message, the message payload was ""deviceId:test:1932-test-01_"" and there was no ""deviceId"" header, so the reason is still the same - absence of ""deviceId"" header.

Apparently, the command worked in different way for you. Probably, we use different kafka versions, and for your installation command line arguments should be different.
For testing I run kafka in docker from image ""confluentinc/cp-kafka:7.4.4"" with zookeeper ""confluentinc/cp-zookeeper:7.4.4"". I found this setup [here](https://www.baeldung.com/ops/kafka-docker-setup).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C859iLlM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1938,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C859iYp3,ditto,2106165879,1938,NA,Korakbhakta02,67550363,,,NA,2024-05-12T08:29:15Z,2024-05-12T08:29:15Z,"Now, it is working smoothly. Thanks for your help.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C859iYp3/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1939,https://api.github.com/repos/eclipse-ditto/ditto/issues/1939,ditto,2292221977,1939,Removing fields in a merge update with a regex does not work in several cases,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2024-05-13T08:56:13Z,2024-05-13T15:48:08Z,"#1593 introduced removing several fields inside of a Thing when doing a [PATCH / merge](https://eclipse.dev/ditto/httpapi-concepts.html#removing-fields-in-a-merge-update-with-a-regex).

The implementation however seems to make some assumptions where this can be used.  
We found several places where this is not working, e.g.:

Won't work (as the ""featureId"" may not contain slashes which is validated in the `gateway`):
* could work via non-HTTP
```json
{
  ""features"": {
    ""{{ /.*/ }}"": null,
    ""two"": {
      ""properties"": {
        ""bool"": false
      }
    }
  }
}
```

Won't work (as apparently the regex is not detected when not being included in the ""deepest nested"" JsonObject):
```json
{
  ""features"": {
    ""two"": {
      ""{{ /.*/ }}"": null,
      ""properties"": {
        ""bool"": false
      }
    }
  }
}
```

Won't work (as a feature property may also not contain slashes, validated in the gateway as well):
* could work via non-HTTP
```json
{
  ""features"": {
    ""two"": {
      ""properties"": {
        ""{{ /.*/ }}"": null,
        ""bool"": false
      }
    }
  }
}
```

So the implementation of #1593 is currently unusable, we could even ""fix it"" by not requiring slashes `/<regex>/` in the approach - because that causes validation issues via HTTP ..","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1939/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1945,https://api.github.com/repos/eclipse-ditto/ditto/issues/1945,ditto,2312744178,1945,How to access Hono Services from Outside the its Hosted VM,charanhs123,51820986,Charan H S,,CLOSED,2024-05-23T12:03:31Z,2024-08-26T11:15:08Z,"Hello , 
I have Hono services running on a ubuntu which is hosted on a VM , so i want to access this services specifically MQTT adapter services from Host which is inturn Hosting the VM. I have initialised Loadbalancer and these are services are accessible as everyone know only within the VM .

So i need to access this service outside the VM from my Host to publish MQTT message for updating Telemetry data.

```
` iffroot4@iffroot:~$ kubectl get svc -n cloud2edge
NAME                                   TYPE           CLUSTER-IP       EXTERNAL-IP      PORT(S)                           AGE
c2e-ditto-dittoui                      ClusterIP      10.105.126.241   <none>           8080/TCP                          23h
c2e-ditto-gateway                      ClusterIP      10.110.26.67     <none>           8080/TCP                          23h
c2e-ditto-nginx                        LoadBalancer   10.111.28.255    10.111.28.255    8080:31625/TCP                    23h
c2e-ditto-swaggerui                    ClusterIP      10.108.227.204   <none>           8080/TCP                          23h
c2e-hono-adapter-amqp                  LoadBalancer   10.102.188.101   10.102.188.101   5671:32111/TCP                    23h
c2e-hono-adapter-http                  LoadBalancer   10.110.169.6     10.110.169.6     8443:31106/TCP                    23h
c2e-hono-adapter-mqtt                  LoadBalancer   10.96.15.191     10.96.15.191     8883:32273/TCP                    23h
c2e-hono-artemis                       ClusterIP      10.100.173.185   <none>           5671/TCP                          23h
c2e-hono-dispatch-router               ClusterIP      10.96.15.114     <none>           5673/TCP                          23h
c2e-hono-dispatch-router-ext           LoadBalancer   10.104.12.190    10.104.12.190    15671:32592/TCP,15672:31549/TCP   23h
c2e-hono-service-auth                  ClusterIP      10.110.201.82    <none>           5671/TCP,8088/TCP                 23h
c2e-hono-service-command-router        ClusterIP      10.102.119.175   <none>           5671/TCP                          23h
c2e-hono-service-device-registry       ClusterIP      10.104.36.198    <none>           5671/TCP,8080/TCP,8443/TCP        23h
c2e-hono-service-device-registry-ext   LoadBalancer   10.104.229.153   10.104.229.153   28443:32103/TCP                   23h
c2e-mongodb                            ClusterIP      10.102.95.18     <none>           27017/TCP                         23h
```
  `","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1945/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1946,https://api.github.com/repos/eclipse-ditto/ditto/issues/1946,ditto,2318629633,1946,"Configuring ""oauth2"" based authentication for ""devops"" access does not allow to use a different OpenID connect provider",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2024-05-27T08:58:46Z,2024-06-10T10:57:38Z,"When configuring to secure access to [DevOps commands](https://eclipse.dev/ditto/installation-operating.html#devops-commands) and to connections using `oauth2` via Helm: 
https://github.com/eclipse-ditto/ditto/blob/523985928dba2b0b4f63baa0b83c11293a16e1ba/deployment/helm/ditto/values.yaml#L1533-L1546

It is currently not possible to choose in the `openidConnectIssuers` a different OpenID connect provider than already defined in the ""normal"" oauth2 configuration at:
https://github.com/eclipse-ditto/ditto/blob/523985928dba2b0b4f63baa0b83c11293a16e1ba/deployment/helm/ditto/values.yaml#L1515-L1525

E.g. with a `-ops` suffix as in the comments .. Or even a completely different ""issuer"" endpoint.

The reason seems to be that this is loaded as ""Extension"" in Ditto (so basically a Singleton) and that only the first configuration is applied (which is the ""normal"" oauth2 config).  

So e.g. having admin users in a separated OpenID connect provider is not possible.

I also figured that this is currently not at all documented at [DevOps commands](https://eclipse.dev/ditto/installation-operating.html#devops-commands) - so adding some documentation about the option to use oauth for securing admin access would also be good as part of the bugfix.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1946/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1947,https://api.github.com/repos/eclipse-ditto/ditto/issues/1947,ditto,2323196535,1947,401 not authorized when using Nginx and helm deployment,raptus84,25546850,matmassa,,CLOSED,2024-05-29T12:25:56Z,2024-06-25T14:03:50Z,"Hi,

using the helm deployment on EKS I'm facing an issue: it seems I can't use the Nginx service in order to make api calls.
I'm installing Ditto with this command since I want to create a default ""ditto"" user and using the Nginx service to perform first api calls.

`helm install -n ditto my-ditto oci://registry-1.docker.io/eclipse/ditto --version 3.5.6 --set global.cluster.basicAuthUsers[0].user=ditto --set global.cluster.basicAuthUsers[0].password=ditto --set gateway.config.authentication.enablePreAuthentication=true`

After the installation, when I try to point to the Nginx and set basic authentication with ditto:ditto and perform an api call, I always get a ""401 not authenticated"" error. 
However, I can use the gateway microservice (adding the nginx:ditto user to x-ditto-pre-authenticated header) but this is not the preferred way we'd like to use. 
Can you please tell me what's wrong with this situation?  what am I missing?

Thank you for support
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1947/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1947,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Ahlsc,ditto,2156288796,1947,NA,carozo,80724668,Belén Carozo,,NA,2024-06-09T03:06:16Z,2024-06-09T03:06:16Z,"+1 same issue. I also tried adding the `hashedBasicAuthUsers` in values.yaml:
```
  hashedBasicAuthUsers:
    - ""ditto:$...""
```
but it didn't work 😕 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Ahlsc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1947,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86ApDDN,ditto,2158244045,1947,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-06-10T12:42:23Z,2024-06-10T12:42:23Z,"Hi @raptus84 

> `helm install -n ditto my-ditto oci://registry-1.docker.io/eclipse/ditto --version 3.5.6 --set global.cluster.basicAuthUsers[0].user=ditto --set global.cluster.basicAuthUsers[0].password=ditto --set gateway.config.authentication.enablePreAuthentication=true`

You seem to use the wrong config key .. `basicAuthUsers` is not nested in `cluster`, but directly exposed under `global`.
This should work:
```
helm install -n ditto my-ditto oci://registry-1.docker.io/eclipse/ditto --version 3.5.6 --set ""global.basicAuthUsers[0].user=alice"" --set ""global.basicAuthUsers[0].password=who"" --set ""gateway.config.authentication.enablePreAuthentication=true""
```
Note that I also added `""` around the array syntax - my shell otherwise tried to interpret the special characters `[]`.

```
kubectl --namespace ditto port-forward svc/my-ditto-nginx 8080:8080
curl -u alice:who -v http://localhost:8080/api/2/things
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86ApDDN/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1949,https://api.github.com/repos/eclipse-ditto/ditto/issues/1949,ditto,2329547830,1949,how to use ditto-client send message to RabbitMQ (java),peng9fei,27463339,,,CLOSED,2024-06-02T09:04:49Z,2024-07-03T13:13:59Z,"I want to create a java project,send the collected data through eclipse ditto to RabbitMQ.
I should create a connection:
```json
{
  ""connection"": {
    ""id"": ""rabbit-example-connection-123"",
    ""connectionType"": ""amqp-091"",
    ""connectionStatus"": ""open"",
    ""failoverEnabled"": true,
    ""uri"": ""amqp://guest:guest@localhost:5672"",
    ""sources"": [
      {
        ""addresses"": [
          ""queueName""
        ],
        ""authorizationContext"": [""ditto:inbound-auth-subject"", ""...""]
      }
    ],
    ""targets"": [
      {
        ""address"": ""exchangeName/routingKey"",
        ""topics"": [
          ""_/_/things/twin/events"",
          ""_/_/things/live/messages""
        ],
        ""authorizationContext"": [""ditto:outbound-auth-subject"", ""...""]
      }
    ]
  }
}
```

but i don't know how to use the connection to send message。
could give me a java example?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1949/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1949,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85_1txF,ditto,2144787525,1949,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-06-03T10:00:51Z,2024-06-03T10:00:51Z,"[Sending messages](https://eclipse.dev/ditto/basic-messages.html#apis) can e.g. be done via the HTTP API:
https://eclipse.dev/ditto/http-api-doc.html#/Messages/post_api_2_things__thingId__inbox_messages__messageSubject_

If you configured your connection for ""target"" ""topic"" `""_/_/things/live/messages""`, your AMQP `exchange/routingKey` will receive all of the messages the configured `""authorizationContext"": [""ditto:outbound-auth-subject"", ""...""]` is allowed to `READ` (based on the referenced policyId of the thing you sent the message to).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85_1txF/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1949,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85_5z_G,ditto,2145861574,1949,NA,peng9fei,27463339,,,NA,2024-06-03T18:30:17Z,2024-06-03T18:30:17Z,"Thank you very much for your reply.
now I use the Http api create a connection,when I send connectivity.commands:openConnection command :
{
    ""status"": 504,
    ""error"": ""connectivity:connection.failed"",
    ""message"": ""The Connection with ID '9e6b5f6e-6381-41f9-93a9-14fdb5b082c2' failed to connect."",
    ""description"": ""Ask timed out on [Actor[pekko://ditto-cluster/system/sharding/connection/1/9e6b5f6e-6381-41f9-93a9-14fdb5b082c2/pa/$a#433908642]] after [55000 ms]. Message of type [org.apache.pekko.routing.ConsistentHashingRouter$ConsistentHashableEnvelope]. A typical reason for `AskTimeoutException` is that the recipient actor didn't send a reply.""
}

and 
2024-06-03T17:54:07.340240979Z {""@timestamp"":""2024-06-03T19:54:07.34004984+02:00"",""@version"":""1"",""message"":""pekko://ditto-cluster/system/sharding/connection/21/bc2ff51f-e6bc-4852-9744-1b044953807d/pa/$a/c1/rmq-connection13 in Disconnected received Connect: can't connect to amqp://guest@192.168.134.130:5672/, retrying in 50 seconds"",""logger_name"":""com.github.pjfanning.pekko.rabbitmq.ConnectionActor"",""thread_name"":""ditto-cluster-pekko.actor.default-dispatcher-12"",""level"":""ERROR"",""level_value"":40000,""sourceThread"":""ditto-cluster-pekko-rabbitmq.default-connection-dispatcher-248"",""pekkoAddress"":""pekko://ditto-cluster@10.1.243.226:2551"",""pekkoSource"":""pekko://ditto-cluster@10.1.243.226:2551/system/sharding/connection/21/bc2ff51f-e6bc-4852-9744-1b044953807d/pa/$a/c1/rmq-connection13""}.

Is there a configuration error？","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85_5z_G/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1949,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86AFkqS,ditto,2148944530,1949,NA,peng9fei,27463339,,,NA,2024-06-05T06:05:15Z,2024-06-05T06:05:15Z,"Thank you&nbsp; for your reply.


Now I use microk8s deployment a cloud2edge(eclipse hono, eclipse ditto) server on ubuntu&nbsp;virtual machine。


ubuntu:
Distributor ID: Ubuntu
Description:&nbsp; &nbsp; Ubuntu 20.04.6 LTS
Release:&nbsp; &nbsp; &nbsp; &nbsp; 20.04
Codename:&nbsp; &nbsp; &nbsp; &nbsp;focal
IP:192.168.74.128


cloud2edge:
microk8s.kubectl get services -n cloud2edge
NAME&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;TYPE&nbsp; &nbsp; &nbsp; &nbsp; CLUSTER-IP&nbsp; &nbsp; &nbsp; &nbsp;EXTERNAL-IP&nbsp; &nbsp;PORT(S)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; AGE
c2e-ditto-dittoui&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ClusterIP&nbsp; &nbsp;10.152.183.19&nbsp; &nbsp; <none&gt;&nbsp; &nbsp; &nbsp; &nbsp; 8080/TCP&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;12h
c2e-ditto-gateway&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ClusterIP&nbsp; &nbsp;10.152.183.154&nbsp; &nbsp;<none&gt;&nbsp; &nbsp; &nbsp; &nbsp; 8080/TCP&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;12h
c2e-ditto-nginx&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NodePort&nbsp; &nbsp; 10.152.183.156&nbsp; &nbsp;<none&gt;&nbsp; &nbsp; &nbsp; &nbsp; 8080:30973/TCP&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;12h
c2e-ditto-swaggerui&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ClusterIP&nbsp; &nbsp;10.152.183.98&nbsp; &nbsp; <none&gt;&nbsp; &nbsp; &nbsp; &nbsp; 8080/TCP&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;12h
c2e-hono-adapter-amqp&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NodePort&nbsp; &nbsp; 10.152.183.228&nbsp; &nbsp;<none&gt;&nbsp; &nbsp; &nbsp; &nbsp; 5671:32671/TCP&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;12h
c2e-hono-adapter-http&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NodePort&nbsp; &nbsp; 10.152.183.110&nbsp; &nbsp;<none&gt;&nbsp; &nbsp; &nbsp; &nbsp; 8443:30443/TCP&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;12h
c2e-hono-adapter-mqtt&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NodePort&nbsp; &nbsp; 10.152.183.218&nbsp; &nbsp;<none&gt;&nbsp; &nbsp; &nbsp; &nbsp; 8883:30883/TCP&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;12h
c2e-hono-service-auth&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ClusterIP&nbsp; &nbsp;10.152.183.105&nbsp; &nbsp;<none&gt;&nbsp; &nbsp; &nbsp; &nbsp; 5671/TCP,8088/TCP&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 12h
c2e-hono-service-command-router&nbsp; &nbsp; &nbsp; &nbsp; ClusterIP&nbsp; &nbsp;10.152.183.53&nbsp; &nbsp; <none&gt;&nbsp; &nbsp; &nbsp; &nbsp; 5671/TCP&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;12h
c2e-hono-service-device-registry&nbsp; &nbsp; &nbsp; &nbsp;ClusterIP&nbsp; &nbsp;10.152.183.160&nbsp; &nbsp;<none&gt;&nbsp; &nbsp; &nbsp; &nbsp; 5671/TCP,8080/TCP,8443/TCP&nbsp; &nbsp;12h
c2e-hono-service-device-registry-ext&nbsp; &nbsp;NodePort&nbsp; &nbsp; 10.152.183.96&nbsp; &nbsp; <none&gt;&nbsp; &nbsp; &nbsp; &nbsp; 28443:31443/TCP&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 12h
c2e-kafka&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ClusterIP&nbsp; &nbsp;10.152.183.161&nbsp; &nbsp;<none&gt;&nbsp; &nbsp; &nbsp; &nbsp; 9092/TCP,9095/TCP&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 12h
c2e-kafka-controller-0-external&nbsp; &nbsp; &nbsp; &nbsp; NodePort&nbsp; &nbsp; 10.152.183.75&nbsp; &nbsp; <none&gt;&nbsp; &nbsp; &nbsp; &nbsp; 9094:30946/TCP&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;12h
c2e-kafka-controller-headless&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ClusterIP&nbsp; &nbsp;None&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<none&gt;&nbsp; &nbsp; &nbsp; &nbsp; 9094/TCP,9092/TCP,9093/TCP&nbsp; &nbsp;12h
c2e-mongodb&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ClusterIP&nbsp; &nbsp;10.152.183.170&nbsp; &nbsp;<none&gt;&nbsp; &nbsp; &nbsp; &nbsp; 27017/TCP&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 12h



run&nbsp;setCloud2EdgeEnv.sh and output:
export REGISTRY_IP=""192.168.74.128""
export REGISTRY_PORT_HTTPS=""31443""
export REGISTRY_BASE_URL=""https://192.168.74.128:31443""
export AMQP_ADAPTER_IP=""192.168.74.128""
export AMQP_ADAPTER_PORT_AMQPS=""32671""
export HTTP_ADAPTER_IP=""192.168.74.128""
export HTTP_ADAPTER_PORT_HTTPS=""30443""
export HTTP_ADAPTER_BASE_URL=""https://192.168.74.128:30443""
export MQTT_ADAPTER_IP=""192.168.74.128""
export MQTT_ADAPTER_PORT_MQTTS=""30883""
export DITTO_API_IP=""192.168.74.128""
export DITTO_API_PORT_HTTP=""30973""
export DITTO_API_BASE_URL=""http://192.168.74.128:30973""
export DITTO_DEVOPS_PWD=""IkbqoWQdXHam""
export DITTO_UI_ENV_JSON=""{\""api_uri\"":\""http://192.168.74.128:30973\"",\""defaultUsernamePassword\"":\""ditto:ditto\"",\""defaultDittoPreAuthenticatedUsername\"":null,\""defaultUsernamePasswordDevOps\"":\""devops:IkbqoWQdXHam\"",\""mainAuth\"":\""basic\"",\""devopsAuth\"":\""basic\""}



Use docker deployment a RabbitMQ,
Use the ip:192.168.74.128 port:5672 username:guest password:guest I can visit RabbitMQ.


But I don't know how to configure the (eclipse ditto) connection or service to connect the RabbitMQ.



lbx
***@***.***



&nbsp;




------------------&nbsp;原始邮件&nbsp;------------------
发件人:                                                                                                                        ""eclipse-ditto/ditto""                                                                                    ***@***.***&gt;;
发送时间:&nbsp;2024年6月3日(星期一) 晚上6:01
***@***.***&gt;;
***@***.******@***.***&gt;;
主题:&nbsp;Re: [eclipse-ditto/ditto] how to use ditto-client send message to RabbitMQ (java) (Issue #1949)





 
Sending messages can e.g. be done via the HTTP API:
 https://eclipse.dev/ditto/http-api-doc.html#/Messages/post_api_2_things__thingId__inbox_messages__messageSubject_
 
If you configured your connection for ""target"" ""topic"" ""_/_/things/live/messages"", your AMQP exchange/routingKey will receive all of the messages the configured ""authorizationContext"": [""ditto:outbound-auth-subject"", ""...""] is allowed to READ (based on the referenced policyId of the thing you sent the message to).
 
—
Reply to this email directly, view it on GitHub, or unsubscribe.
You are receiving this because you authored the thread.Message ID: ***@***.***&gt;","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86AFkqS/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1949,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Cekn5,ditto,2189052409,1949,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-06-25T14:04:37Z,2024-06-25T14:04:37Z,"If your problem still exists, please provide some properly formatted and formulated issue.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Cekn5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1949,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86DfQNE,ditto,2206008132,1949,NA,peng9fei,27463339,,,NA,2024-07-03T12:52:35Z,2024-07-03T12:52:35Z,"Thank you ,I have resolved the problem&nbsp; connect to RabbitMQ.
now I have another problem:I create some Things in Ditto, and a collection program send data to Ditto，to change Thing.Features .
{
&nbsp; &nbsp; &nbsp; ""thingId"": ""nms:10"",
&nbsp; &nbsp; &nbsp; ""policyId"": ""nms:resources_policy"",
&nbsp; &nbsp; &nbsp; ""attributes"": {
&nbsp; &nbsp; &nbsp; &nbsp; ""inroutegroupname"": ""group1"",
&nbsp; &nbsp; &nbsp; &nbsp; ""MeshEnabled"": 0
&nbsp; &nbsp; &nbsp; },
&nbsp; &nbsp; &nbsp; ""features"": {
&nbsp; &nbsp; &nbsp; &nbsp; ""snmpdata"": {
			""nmwarnings"": ""Failed"",
			""nmalarms"": ""no alarm""
		},
&nbsp; &nbsp; &nbsp; &nbsp; ""alarms"": {}
&nbsp; &nbsp; &nbsp; }
&nbsp; &nbsp; }
now I create a java-client to listen the features/snmpdata/nmwarnings.
when the 'nmwarnings' equals some values，will&nbsp;trigger some handler.


client.twin().startConsumption(Options.Consumption.namespaces(namespace),
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 				Options.Consumption.filter(""like(features/snmpdata/nmwarnings,'Alerm1')""))
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 		.toCompletableFuture().get(10, TimeUnit.SECONDS);



when I start the program,I got some exception:org.eclipse.ditto.base.model.exceptions.InvalidRqlExpressionException: Unknown property name: features/snmpdata/nmwarnings


lbx
***@***.***



&nbsp;




------------------&nbsp;原始邮件&nbsp;------------------
发件人:                                                                                                                        ""eclipse-ditto/ditto""                                                                                    ***@***.***&gt;;
发送时间:&nbsp;2024年6月25日(星期二) 晚上10:04
***@***.***&gt;;
***@***.******@***.***&gt;;
主题:&nbsp;Re: [eclipse-ditto/ditto] how to use ditto-client send message to RabbitMQ (java) (Issue #1949)





 
If your problem still exists, please provide some properly formatted and formulated issue.
 
—
Reply to this email directly, view it on GitHub, or unsubscribe.
You are receiving this because you authored the thread.Message ID: ***@***.***&gt;","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86DfQNE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1949,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Dfant,ditto,2206050797,1949,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-07-03T13:13:58Z,2024-07-03T13:13:58Z,Please don't answer via e-mail .. and please properly format your code - I cannot read anything.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Dfant/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1950,https://api.github.com/repos/eclipse-ditto/ditto/issues/1950,ditto,2330548026,1950,how to scale connectivity instance,Lcq2002,56182562,Changqing Li,,CLOSED,2024-06-03T08:46:30Z,2024-06-25T14:03:41Z,"I'm trying more modifies/s of connectivity . I find that I need to scale the connectivity instance, but I don't know how to scale it. Can I change the configuration in docker-compose to enable scaling or do I have to configure it in Kubernetes.
[https://eclipse.dev/ditto/2023-10-09-ditto-benchmark.html](url)
![image](https://github.com/eclipse-ditto/ditto/assets/56182562/bb026f44-67ec-41e3-83f7-1d2dac6fcaa7)
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1950/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1950,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85_1rvZ,ditto,2144779225,1950,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-06-03T09:56:51Z,2024-06-03T09:56:51Z,"@Lcq2002 if you run Ditto in Kubernetes, then scale the `ditto-connectivity` deployment via Kubernetes: https://kubernetes.io/docs/reference/kubectl/generated/kubectl_scale/

Or - if deployed with the Ditto Helm chart - configure it:
https://github.com/eclipse-ditto/ditto/blob/fe3c928e6f5c29231e06ac259c4180842a682028/deployment/helm/ditto/values.yaml#L1133-L1137

If you run Ditto via Docker-Compose (which however would be only locally on a single machine), scale it via Docker-Compose `replicas`: https://docs.docker.com/compose/compose-file/deploy/#replicas
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85_1rvZ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1950,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85_35pE,ditto,2145360452,1950,NA,Lcq2002,56182562,Changqing Li,,NA,2024-06-03T14:32:34Z,2024-06-03T14:32:34Z,"@thjaeckle Thank you very much for your reply. I have successfully expanded the number of connectivity to 5 in docker-compose and modified the clientCount to equal the number of connectivity instances, but my modifies/s of connectivity have not increased significantly, is this due to the Is this because of the docker deployment? Do I have to use Kubernetes for the expansion to work?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85_35pE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1950,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85_4b0v,ditto,2145500463,1950,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-06-03T15:23:03Z,2024-06-03T15:23:03Z,"The limiting factor could be the machine or the docker-compose configuration, which is not really suited for productive purposes.
For productive scenarios where scaling is required, I would always recommend the k8s based deployment based on the Ditto Helm chart - and to fine-tune the parameters (cpu and memory `resources` and e.g. `activeProcessorCount`,  `heapRamPercentage`) according to your use-case based on the JVM-tuning experience of a good DevOps engineer.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85_4b0v/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1950,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86BoVof,ditto,2174835231,1950,NA,Lcq2002,56182562,Changqing Li,,NA,2024-06-18T02:30:48Z,2024-06-18T02:30:48Z,@thjaeckle  Thank you for your suggestions and detailed explanation! We will consider using the k8s-based deployment. Your guidance is greatly appreciated!,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86BoVof/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1951,https://api.github.com/repos/eclipse-ditto/ditto/issues/1951,ditto,2331464850,1951,Default value for `date-time` format in referenced WoT ThingModel is generated as empty string,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2024-06-03T15:32:52Z,2024-09-27T05:55:53Z,"Currently, when Ditto generates the JSON Skeleton for a Thing when a WoT ""ThingModel"" is referenced in the `""definition""` field on creation, non-optional properties with:
```json
{
  ""type"": ""string"",
  ""format"": ""date-time""
}
```

Are generated as:
```json
""propertyName"": """"
```
-> which is the ""neutral element"" for Strings.

We should however generate the ""neutral element"" for dates, which IMO would be EPOCH:
```json
""propertyName"": ""1970-01-01T00:00:00Z""
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1951/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1952,https://api.github.com/repos/eclipse-ditto/ditto/issues/1952,ditto,2333057370,1952,Helm deployment throws 500 errors after AKS update,dhcode,1254892,Dominik Herbst,,CLOSED,2024-06-04T09:41:13Z,2024-08-26T11:15:18Z,"We are using the helm chart v3.5.4 of eclipse/ditto for our deployment on an Azure Kubernetes cluster.
Each ditto service we use (policies, things, thingsSearch, gateway) has 2 instances, and a pod disruption budget of 1, so no service is ever gone completely.

Almost every time there is an update of the AKS and the nodes get recreated one after another, ditto does not correctly answer the requests anymore and returns status 500.

In the logs we see errors like this:
```
Received DittoRuntimeException during enforcement or forwarding to target actor, telling sender: DittoInternalErrorException [message='There was a rare case of an unexpected internal error.', errorCode=internalerror, httpStatus=HttpStatus [code=500, category=SERVER_ERROR], description='Please contact the service team or your administrator.'
```

To fix it, we scale all deployments of the ditto services down and up again. Then it works again.

But I would expect that ditto heals itself when pods are removed and added.

Is there a setting to improve this behavior or do others have that issue, too?
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1952/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1952,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85_-hqt,ditto,2147097261,1952,NA,dhcode,1254892,Dominik Herbst,,NA,2024-06-04T09:46:37Z,2024-06-04T09:46:37Z,"We thought it gets better after the issue was solved: https://github.com/eclipse-ditto/ditto/issues/1839
But it still appears.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85_-hqt/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1952,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85__LrI,ditto,2147269320,1952,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-06-04T11:14:42Z,2024-06-04T11:14:42Z,"@dhcode Hi, long time not seen :)

Are you sure that the k8s pods are shutdown gracefully so that the JVM received a `SIGTERM` and can do a proper cluster shutdown?

E.g. the `things` service logs (on service update when the ""old"" version is stopped):
```
INFO Initiated coordinated shutdown; gracefully shutting down ...
...
(30-60 seconds later)
INFO Graceful shutdown completed.
```

On EKS I once had the issue that a k8s network policy was configured which immediately stopped all traffic to/from pods once they were stopped - so the leaving cluster node never got the chance to communicate to other cluster nodes that it now ""gracefully leaves"" the cluster.
That lead to similar situations which you described - and often in an inconsistent cluster state.

I have no recent experience with AKS - but on AWS EKS our Ditto updates currently run completely smooth (using the Helm chart), even with load on the cluster.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C85__LrI/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1952,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86AAmdb,ditto,2147641179,1952,NA,dhcode,1254892,Dominik Herbst,,NA,2024-06-04T14:10:55Z,2024-06-04T14:10:55Z,"Thanks for the hint. I checked the logs and I find `Initiated coordinated shutdown gracefully shutting down ...`

Sometimes it does not show the `Graceful shutdown completed.`

But the last recorded message seen about 5 seconds after the shutdown was started:
`thing: [68] of the entities in shard [0] not stopped after [5 seconds]. Maybe the handOffStopMessage [org.eclipse.ditto.internal.utils.cluster.StopShardedActor] is not handled?`

So it seems like the shutdown is not always graceful.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86AAmdb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1955,https://api.github.com/repos/eclipse-ditto/ditto/issues/1955,ditto,2340076760,1955,Api for list of policies,Korakbhakta02,67550363,,,CLOSED,2024-06-07T10:09:00Z,2024-06-11T07:24:38Z,"Hi, 
 I want to list the policies according to the user by which the policies are created. Let users be A,B and C. So, user A will get the policies made by A only,not B and C. Is there any api for this service or any method to get such list? Thanks in advance.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1955/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1955,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86AbfyJ,ditto,2154691721,1955,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-06-07T12:00:18Z,2024-06-07T12:00:18Z,"Unfortunately, this functionality does not exist yet.
Issue: #1683","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86AbfyJ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1955,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Ab-Uc,ditto,2154816796,1955,NA,Korakbhakta02,67550363,,,NA,2024-06-07T13:15:37Z,2024-06-07T13:15:37Z,Is there any chance for the availability of this service in coming future?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Ab-Uc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1955,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86AcPGM,ditto,2154885516,1955,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-06-07T13:47:53Z,2024-06-07T13:47:53Z,"It is an OpenSource project - so if anybody picks it up and provides a PR for it, sure ..

There already was an attempt by the Ditto community in PR #1698 - but that PR was in a very early stage when work on it was again stopped.

Personally, I don't have plans to work on this in the near future.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86AcPGM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1955,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86AvsI1,ditto,2159985205,1955,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-06-11T07:24:28Z,2024-06-11T07:24:28Z,Closing as duplicate of https://github.com/eclipse-ditto/ditto/issues/1683,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86AvsI1/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1959,https://api.github.com/repos/eclipse-ditto/ditto/issues/1959,ditto,2346132536,1959,Generated Thing Description base URI should contain `/` at the end,egekorkan,20195407,Ege Korkan,egekorkan@gmail.com,CLOSED,2024-06-11T11:08:07Z,2024-06-12T08:12:25Z,"When I obtain a TD from a Ditto instance or look at the test TDs at https://github.com/w3c/wot-testing/blob/main/data/input_2022/TD/Ditto/TDs/ditto_floor-lamp-1.td.jsonld , the `base` has a URI that does NOT end with a `/`. When a standard URI parser is used and the base is combined with the relative URI in the forms, the absolute URI is wrong. This causes interoperability issues with other WoT tooling, such as Eclipse Thingweb node-wot (https://github.com/eclipse-thingweb/node-wot).

The easiest way to observe this is to open the browser console and use the standard `URL()` method (see [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/API/URL/URL)). The following function calls demonstrate it:

- `console.log(new URL(""/attributes/manufacturer{?channel,timeout}"",""http://127.0.0.1/api/2/things/io.eclipseprojects.ditto:floor-lamp-0815""))` 
- Log: `http://127.0.0.1/attributes/manufacturer%7B?channel,timeout}`

If I am not wrong, the relative URLs should not start with `/` either since that will go to root of the URI.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1959/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1959,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86AyEPD,ditto,2160608195,1959,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-06-11T12:13:42Z,2024-06-11T12:13:42Z,"Hi @egekorkan 
Nice to see you here :) 

Totally makes sense what you describe - I was ""simply"" appending the `href` to `base` in the implementation - but then starting with a `/` will of course select the ""root"" of the HTTP endpoint.

I will provide a fix for that - thanks a lot for the report.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86AyEPD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1959,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86AyQF-,ditto,2160656766,1959,NA,egekorkan,20195407,Ege Korkan,egekorkan@gmail.com,NA,2024-06-11T12:37:15Z,2024-06-11T12:37:15Z,Thanks for the quick reply! We were doing some interop tests with node-wot and found out about this. Looking forward to the fix :),"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86AyQF-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1959,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86A41JQ,ditto,2162381392,1959,NA,egekorkan,20195407,Ege Korkan,egekorkan@gmail.com,NA,2024-06-12T08:11:29Z,2024-06-12T08:11:29Z,"That was fast, thank you very much!","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86A41JQ/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1959,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86A41kI,ditto,2162383112,1959,NA,egekorkan,20195407,Ege Korkan,egekorkan@gmail.com,NA,2024-06-12T08:12:24Z,2024-06-12T08:12:24Z,"Also @relu91, @danielpeintner and @jkrhb some nice interop between eclipse projects!","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86A41kI/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1960,https://api.github.com/repos/eclipse-ditto/ditto/issues/1960,ditto,2346745721,1960,Missing (D)TLS IoT oriented features in Java world ?,sbernard31,840294,Simon Bernard,code@simonbernard.eu,CLOSED,2024-06-11T15:38:59Z,2024-09-25T13:07:28Z,"I'm the main maintainer of [Leshan](https://github.com/eclipse-leshan/leshan) project : a Java LwM2M implementation hosted by Eclipse Foundation.

Until now we are using Scandium (a java DTLS 1.2 implementation hosted Eclipse foundation from Californium project) but recently I need to look at TLS 1.2 for Leshan (because we try to add coaps+tcp support) and I came to the conclusion that : 

 **There is not so good choice in Java world for DTLS and TLS for IoT**.

I ask myself if my assumption : 
 - is wrong ? and so I maybe missed something.
 - OR is right ? and so we are probably several to face this situation and maybe we can collectively try to improve it.

I created a github repository and begin to summarize some information about that : https://github.com/sbernard31/thermos

The idea would be to :

 - Make a good big picture of the situation,
 - Collect needs from IoT Java Community,
 - Report our need to existing (D)TLS implementation, (to maybe impact their TODO list)
 - Find collective solution ?

  I try to talk about that at security-dev mailing list from OpenJDK and this is not clear if they will work to improve that situation, here is a link to that discussion : https://mail.openjdk.org/pipermail/security-dev/2024-March/038906.html

  After speaking with [Frederic Desbiens](https://accounts.eclipse.org/users/fdesbiens), he advises me to contact Ditto project as it could be interested ? If you are, do not hesitate to discuss with us at https://github.com/sbernard31/thermos.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1960/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1960,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Nc-Xu,ditto,2373182958,1960,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-09-25T06:52:50Z,2024-09-25T06:52:50Z,"Thanks for reaching out @sbernard31 

Noted, but I am going to close this issue to focus our backlog on issues.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Nc-Xu/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1960,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Ndc6W,ditto,2373308054,1960,NA,sbernard31,840294,Simon Bernard,code@simonbernard.eu,NA,2024-09-25T07:43:00Z,2024-09-25T07:43:00Z,"Can I ask what are you using as library for DTLS or TLS ? 
Which version of (D)TLS are you using ?
Are there some (D)TLS feature not implemented in current implementation you use ? If yes, could you list it please ? :pray: ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Ndc6W/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1960,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Ndwgm,ditto,2373388326,1960,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-09-25T08:17:00Z,2024-09-25T08:17:00Z,"Ditto does not make use of DTLS - and for TLS, we use plain JDK APIs, as far as I can tell.
We have no additional requirements towards (D)TLS.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Ndwgm/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1960,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86NgPm4,ditto,2374039992,1960,NA,sbernard31,840294,Simon Bernard,code@simonbernard.eu,NA,2024-09-25T13:07:26Z,2024-09-25T13:07:26Z,Ok thx for taking time to answer :pray: ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86NgPm4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1966,https://api.github.com/repos/eclipse-ditto/ditto/issues/1966,ditto,2351558969,1966,Mapping outgoing messages not working,MichaelEFlip,13899517,,,CLOSED,2024-06-13T16:21:43Z,2024-06-25T14:03:06Z,"I am trying to change the content of outgoing messages and want to use outgoing message mapping.
Incoming message mapping I got to work.

I tried directly the following samples (and also tried to adapt them). But I always get the same error message:
`2024-06-13 18:15:30,544 INFO  [8589e846-e1b3-4328-963d-c42b58c66d2b][] o.e.d.c.s.m.InboundDispatchingSink  - Got exception <connectivity:message.mapping.failed> when processing external message with mapper <javascript>: <The external message with content-type '<unspecified>' could not be mapped.>`

I tried the following outgoing message mappers:
https://eclipse.dev/ditto/connectivity-mapping.html#mapping-outgoing-messages
https://docs.bosch-iot-suite.com/things/tutorials/public-cloud-integration/azure-iot-hub-http/#configure-payload-mapping","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1966/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1966,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86BJI-S,ditto,2166656914,1966,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-06-13T19:54:43Z,2024-06-13T19:54:43Z,"Hi @MichaelEFlip
Please share your outgoing mapping script so that we are able to investigate issues with it.. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86BJI-S/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1966,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86BM5G2,ditto,2167640502,1966,NA,MichaelEFlip,13899517,,,NA,2024-06-14T09:34:06Z,2024-06-14T09:34:06Z,"I think I found the reason for the problem. I am using now the following connection and mapping:

connection
```
{
  ""id"": ""553d425f-af8d-413f-bbba-e405770c426f"",
  ""name"": null,
  ""connectionType"": ""mqtt"",
  ""connectionStatus"": ""open"",
  ""uri"": ""tcp://mosquitto-second:1883"",
  ""sources"": [
    {
      ""addresses"": [
        ""test/#""
      ],
      ""consumerCount"": 1,
      ""qos"": 0,
      ""authorizationContext"": [
        ""nginx:ditto""
      ],
      ""headerMapping"": {},
      ""replyTarget"": {
        ""address"": ""{{header:reply-to}}"",
        ""headerMapping"": {},
        ""expectedResponseTypes"": [
          ""response"",
          ""error""
        ],
        ""enabled"": true
      }
    }
  ],
  ""targets"": [
    {
      ""address"": ""test/{{ thing:id }}"",
      ""topics"": [
        ""_/_/things/twin/events"",
        ""_/_/things/live/messages""
      ],
      ""qos"": 0,
      ""authorizationContext"": [
        ""nginx:ditto""
      ],
      ""headerMapping"": {},
      ""payloadMapping"": [
        ""javascript""
      ]
    }
  ],
  ""clientCount"": 1,
  ""failoverEnabled"": true,
  ""validateCertificates"": true,
  ""processorPoolSize"": 1,
  ""mappingDefinitions"": {
    ""javascript"": {
      ""mappingEngine"": ""JavaScript"",
      ""options"": {
        ""outgoingScript"": ""function mapFromDittoProtocolMsg(namespace, name, group, channel, criterion,\n                                 action, path, dittoHeaders, value, status, extra) {\n\n  let headers = dittoHeaders;\n  let payload = {\n      \""methodName\"": action,\n      \""responseTimeoutInSeconds\"": parseInt(dittoHeaders.timeout),\n      \""payload\"": value\n  };\n  let textPayload = JSON.stringify(payload);\n  let bytePayload = null;\n  let contentType = 'application/json';\n\n  return Ditto.buildExternalMsg(headers, textPayload, bytePayload, contentType);\n}""
      }
    }
  },
  ""tags"": []
}
```

outgoing mapping
```
function mapFromDittoProtocolMsg(namespace, name, group, channel, criterion,
                                 action, path, dittoHeaders, value, status, extra) {

  let headers = dittoHeaders;
  let payload = {
      ""methodName"": action,
      ""responseTimeoutInSeconds"": parseInt(dittoHeaders.timeout),
      ""payload"": value
  };
  let textPayload = JSON.stringify(payload);
  let bytePayload = null;
  let contentType = 'application/json';

  return Ditto.buildExternalMsg(headers, textPayload, bytePayload, contentType);
}
```

I narrowed it down to the following setting of the connection:
```
""payloadMapping"": [
        ""javascript""
      ]
```

Without that setting it does not seem to work, repectivly it will send outgoing messages in plain ditto payload format.

I started my tests with the following example: https://github.com/eclipse-ditto/ditto-examples/blob/master/mqtt-bidirectional/README.md#Payloadmapping

Here the ""payloadMapping"" setting does not seem to be present in the example. So I think it is not a problem of ditto, but perhaps of the documentation / example.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86BM5G2/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1966,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86CejtP,ditto,2189048655,1966,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-06-25T14:03:06Z,2024-06-25T14:03:06Z,@MichaelEFlip thanks for providing an update and solution to your question 👍 ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86CejtP/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1969,https://api.github.com/repos/eclipse-ditto/ditto/issues/1969,ditto,2360329818,1969,"Eclipse Ditto on Docker Swarm | nginx: [emerg] host not found in upstream ""gateway"" in /etc/nginx/nginx.conf:44 | [error] 33#33: *2 connect() failed (111: Connection refused) while connecting to upstream",aissam-en,121689923,Aissam EN-NAHEL,,CLOSED,2024-06-18T17:10:22Z,2024-07-08T15:43:27Z,"## Challenges Running Eclipse Ditto on Docker Swarm

I'm trying to run Eclipse Ditto on Docker Swarm, initially, I was able to successfully run Ditto using the provided [docker-compose.yml](https://github.com/eclipse-ditto/ditto/blob/master/deployment/docker/docker-compose.yml) file in Docker (not Swarm mode) without modifying the [nginx.conf](https://github.com/eclipse-ditto/ditto/blob/master/deployment/docker/nginx.conf) file.


I made some adjustments to the `docker-compose.yml` file to work in Docker Swarm :
* Commented out `restart: always`;
* Commented out `healthcheck` section; 
* Commented out `volumes` for the `swagger-ui` service, since volumes are not be suitable for Swarm, I will configure it later;
* Replaced `volumes` for the `nginx` service with `configs`, to mount nginx files;

I'm encountering an issue where the `nginx` service is not recongizing `gateway `service, here is its logs:
```
docker service logs -f my_stack_nginx
my_stack_nginx.1.64bhclqugkeq@docker-desktop    | /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
my_stack_nginx.1.64bhclqugkeq@docker-desktop    | /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
my_stack_nginx.1.64bhclqugkeq@docker-desktop    | /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
my_stack_nginx.1.64bhclqugkeq@docker-desktop    | 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
my_stack_nginx.1.64bhclqugkeq@docker-desktop    | 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
my_stack_nginx.1.64bhclqugkeq@docker-desktop    | /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
my_stack_nginx.1.64bhclqugkeq@docker-desktop    | /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
my_stack_nginx.1.64bhclqugkeq@docker-desktop    | /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
my_stack_nginx.1.64bhclqugkeq@docker-desktop    | /docker-entrypoint.sh: Configuration complete; ready for start up
my_stack_nginx.1.rtextyzpzpsl@docker-desktop    | /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
my_stack_nginx.1.rtextyzpzpsl@docker-desktop    | /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
my_stack_nginx.1.rtextyzpzpsl@docker-desktop    | /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
my_stack_nginx.1.rtextyzpzpsl@docker-desktop    | 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
my_stack_nginx.1.rtextyzpzpsl@docker-desktop    | 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
my_stack_nginx.1.rtextyzpzpsl@docker-desktop    | /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
my_stack_nginx.1.rtextyzpzpsl@docker-desktop    | /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
my_stack_nginx.1.rtextyzpzpsl@docker-desktop    | /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
my_stack_nginx.1.rtextyzpzpsl@docker-desktop    | /docker-entrypoint.sh: Configuration complete; ready for start up
my_stack_nginx.1.rtextyzpzpsl@docker-desktop    | 2024/06/18 15:44:39 [emerg] 1#1: host not found in upstream ""gateway"" in /etc/nginx/nginx.conf:44
my_stack_nginx.1.rtextyzpzpsl@docker-desktop    | nginx: [emerg] host not found in upstream ""gateway"" in /etc/nginx/nginx.conf:44
```
the **line 44** from `nginx.conf` file : 
```
39     ...
40     # connections api using devops user configured in Ditto
41    location /api/2/connections {
42      include nginx-cors.conf;
43
44      proxy_pass                    http://gateway:8080;
45      proxy_http_version            1.1;
46      proxy_set_header              Host                $http_host;
47      proxy_set_header              X-Real-IP           $remote_addr;
48      proxy_set_header              X-Forwarded-For     $proxy_add_x_forwarded_for;
49      proxy_set_header              X-Forwarded-User    $remote_user;
50
51      proxy_set_header Connection  '';
52      chunked_transfer_encoding    off;
53      proxy_buffering              off;
54      proxy_cache                  off;
55    }
56    ...
```

and when I send request from Postman, ex : GET http://localhost:8080/api/2/things/ with ditto:ditto in Authorization, I get this as output : 
```html
<html>
<head><title>502 Bad Gateway</title></head>
<body>
<center><h1>502 Bad Gateway</h1></center>
<hr><center>nginx</center>
</body>
</html>
```
The **nginx logs** : 
```
docker service logs -f my_stack_nginx
my_stack_nginx.1.64bhclqugkeq@docker-desktop    | /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
my_stack_nginx.1.64bhclqugkeq@docker-desktop    | /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
my_stack_nginx.1.64bhclqugkeq@docker-desktop    | /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
my_stack_nginx.1.64bhclqugkeq@docker-desktop    | 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
my_stack_nginx.1.64bhclqugkeq@docker-desktop    | 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
my_stack_nginx.1.64bhclqugkeq@docker-desktop    | /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
my_stack_nginx.1.64bhclqugkeq@docker-desktop    | /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
my_stack_nginx.1.64bhclqugkeq@docker-desktop    | /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
my_stack_nginx.1.64bhclqugkeq@docker-desktop    | /docker-entrypoint.sh: Configuration complete; ready for start up
my_stack_nginx.1.rtextyzpzpsl@docker-desktop    | /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
my_stack_nginx.1.rtextyzpzpsl@docker-desktop    | /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
my_stack_nginx.1.rtextyzpzpsl@docker-desktop    | /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
my_stack_nginx.1.rtextyzpzpsl@docker-desktop    | 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
my_stack_nginx.1.rtextyzpzpsl@docker-desktop    | 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
my_stack_nginx.1.rtextyzpzpsl@docker-desktop    | /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
my_stack_nginx.1.rtextyzpzpsl@docker-desktop    | /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
my_stack_nginx.1.rtextyzpzpsl@docker-desktop    | /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
my_stack_nginx.1.rtextyzpzpsl@docker-desktop    | /docker-entrypoint.sh: Configuration complete; ready for start up
my_stack_nginx.1.rtextyzpzpsl@docker-desktop    | 2024/06/18 15:44:39 [emerg] 1#1: host not found in upstream ""gateway"" in /etc/nginx/nginx.conf:44
my_stack_nginx.1.rtextyzpzpsl@docker-desktop    | nginx: [emerg] host not found in upstream ""gateway"" in /etc/nginx/nginx.conf:44
my_stack_nginx.1.64bhclqugkeq@docker-desktop    | 2024/06/18 15:47:55 [error] 33#33: *2 connect() failed (111: Connection refused) while connecting to upstream, client: 10.0.0.2, server: localhost, request: ""GET /api/2/things/ HTTP/1.1"", upstream: ""http://10.0.1.13:8080/api/2/things/"", host: ""localhost:8080""
my_stack_nginx.1.64bhclqugkeq@docker-desktop    | 10.0.0.2 - ditto [18/Jun/2024:15:47:55 +0000] ""GET /api/2/things/ HTTP/1.1"" 502 150 ""-"" ""PostmanRuntime/7.39.0""
```


## Additional Information:
* Windows 10, 8GB RAM and CPU : 
Name : Intel(R) Core(TM) i5-9400H CPU @ 2.50GHz
Number Of Cores : 4
Number Of Logical Processors : 8
* Docker : 
	**Client:**
		Version:    26.1.1
		Context:    default
		Debug Mode: false
		Plugins:
			buildx: Docker Buildx (Docker Inc.)
			Version:  v0.14.0-desktop.1
			Path:     C:\Program Files\Docker\cli-plugins\docker-buildx.exe
			compose: Docker Compose (Docker Inc.)
			Version:  v2.27.0-desktop.2
			Path:     C:\Program Files\Docker\cli-plugins\docker-compose.exe
			debug: Get a shell into any image or container (Docker Inc.)
			Version:  0.0.29
			Path:     C:\Program Files\Docker\cli-plugins\docker-debug.exe
			dev: Docker Dev Environments (Docker Inc.)
			Version:  v0.1.2
			Path:     C:\Program Files\Docker\cli-plugins\docker-dev.exe
			extension: Manages Docker extensions (Docker Inc.)
			Version:  v0.2.23
			Path:     C:\Program Files\Docker\cli-plugins\docker-extension.exe
			feedback: Provide feedback, right in your terminal! (Docker Inc.)
			Version:  v1.0.4
			Path:     C:\Program Files\Docker\cli-plugins\docker-feedback.exe
			init: Creates Docker-related starter files for your project (Docker Inc.)
			Version:  v1.1.0
			Path:     C:\Program Files\Docker\cli-plugins\docker-init.exe
			sbom: View the packaged-based Software Bill Of Materials (SBOM) for an image (Anchore Inc.)
			Version:  0.6.0
			Path:     C:\Program Files\Docker\cli-plugins\docker-sbom.exe
			scout: Docker Scout (Docker Inc.)
			Version:  v1.8.0
			Path:     C:\Program Files\Docker\cli-plugins\docker-scout.exe
	**Server:**
		Containers: 34
			Running: 9
			Paused: 0
			Stopped: 25
		Images: 53
		Server Version: 26.1.1
		Storage Driver: overlay2
			Backing Filesystem: extfs
			Supports d_type: true
			Using metacopy: false
			Native Overlay Diff: true
			userxattr: false
		Logging Driver: json-file
		Cgroup Driver: cgroupfs
		Cgroup Version: 1
		Plugins:
			Volume: local
			Network: bridge host ipvlan macvlan null overlay
			Log: awslogs fluentd gcplogs gelf journald json-file local splunk syslog
		Swarm: active
			NodeID: mahw8hl8i23zzwm7v2i78vaq7
			Is Manager: true
			ClusterID: ijzjixaizfhrhv754v8ir4fdy
			Managers: 1
			Nodes: 1
			Data Path Port: 4789
			Orchestration:
				Task History Retention Limit: 5
		Raft:
			Snapshot Interval: 10000
			Number of Old Snapshots to Retain: 0
			Heartbeat Tick: 1
			Election Tick: 10
		Dispatcher:
			Heartbeat Period: 5 seconds
		CA Configuration:
			Expiry Duration: 3 months
			Force Rotate: 0
		Autolock Managers: false
		Root Rotation In Progress: false
		Node Address: 192.168.65.3
		Manager Addresses:
			192.168.65.3:2377
		Runtimes: io.containerd.runc.v2 runc
		Default Runtime: runc
		Init Binary: docker-init
		containerd version: e377cd56a71523140ca6ae87e30244719194a521
		runc version: v1.1.12-0-g51d5e94
		init version: de40ad0
		Security Options:
			seccomp
				Profile: unconfined
		Kernel Version: 5.15.153.1-microsoft-standard-WSL2
		Operating System: Docker Desktop
		OSType: linux
		Architecture: x86_64
		CPUs: 8
		Total Memory: 3.721GiB
		Name: docker-desktop
		ID: ec241856-9f66-4d6c-908f-3ff0184e56b5
		Docker Root Dir: /var/lib/docker
		Debug Mode: false
		HTTP Proxy: http.docker.internal:3128
		HTTPS Proxy: http.docker.internal:3128
		No Proxy: hubproxy.docker.internal
		Labels:
			com.docker.desktop.address=npipe://\\.\pipe\docker_cli
		Experimental: false
		Insecure Registries:
			hubproxy.docker.internal:5555
			127.0.0.0/8
		Live Restore Enabled: false


The `docker-compose.yml` file : [https://pastebin.com/nbKcXjDc](https://pastebin.com/nbKcXjDc)


The services are runnig : 
```
the services are runnig : 
docker service ls
ID             NAME                     MODE         REPLICAS   IMAGE                                PORTS
idgug4xs4u6g   my_stack_connectivity    replicated   1/1        eclipse/ditto-connectivity:latest
16uijjs8vpeb   my_stack_ditto-ui        replicated   1/1        eclipse/ditto-ui:latest
5pd7diz1uz1i   my_stack_gateway         replicated   1/1        eclipse/ditto-gateway:latest         *:8081->8080/tcp
jkkfj363z20o   my_stack_mongodb         replicated   1/1        mongo:6.0                            *:27017->27017/tcp
mc58254lk2h2   my_stack_nginx           replicated   1/1        nginx:1.26-alpine                    *:8080->80/tcp
kn5evgmkpvdw   my_stack_policies        replicated   1/1        eclipse/ditto-policies:latest
t4agxrku1991   my_stack_swagger-ui      replicated   1/1        swaggerapi/swagger-ui:v5.9.1
v42cz47b90qu   my_stack_things          replicated   1/1        eclipse/ditto-things:latest
xyoa5siftouk   my_stack_things-search   replicated   1/1        eclipse/ditto-things-search:latest
```

Inspect `ditto-net-swarm` network : 
```
> docker network ls

NETWORK ID     NAME                               DRIVER    SCOPE
e661fefa2fba   bridge                             bridge    local
afa0a7369fed   docker_default                     bridge    local
636762e55a0e   host                               host      local
ipd43285nlar   ingress                            overlay   swarm
miy4fnbluu70   my_stack_ditto-net-swarm           overlay   swarm
4934f4344622   none                               null      local

>docker network inspect my_stack_ditto-net-swarm

[
    {
        ""Name"": ""my_stack_ditto-net-swarm"",
        ""Id"": ""miy4fnbluu70bdc30qcqpyqy9"",
        ""Created"": ""2024-06-18T16:46:24.45599018Z"",
        ""Scope"": ""swarm"",
        ""Driver"": ""overlay"",
        ""EnableIPv6"": false,
        ""IPAM"": {
            ""Driver"": ""default"",
            ""Options"": null,
            ""Config"": [
                {
                    ""Subnet"": ""10.0.1.0/24"",
                    ""Gateway"": ""10.0.1.1""
                }
            ]
        },
        ""Internal"": false,
        ""Attachable"": false,
        ""Ingress"": false,
        ""ConfigFrom"": {
            ""Network"": """"
        },
        ""ConfigOnly"": false,
        ""Containers"": {
            ""22f5721bd207a012953cf4f194abf7ce472ef6b18a6d167df73c4efae26a2ff9"": {
                ""Name"": ""my_stack_ditto-ui.1.jcnhcxrkxu9kl8v1a7dwjk4e1"",
                ""EndpointID"": ""008daec7000072bb81e7fef018f022a53a86b27a124aa32392c584b3ab479166"",
                ""MacAddress"": ""02:42:0a:00:01:06"",
                ""IPv4Address"": ""10.0.1.6/24"",
                ""IPv6Address"": """"
            },
            ""469a013c5ef0ab8c914dbd0aceeecbd522eba314a55648abd0512c0fb844e6c7"": {
                ""Name"": ""my_stack_things-search.1.x030dszx0c2kdwpptlmfsybbu"",
                ""EndpointID"": ""eb6fb56aa6d6a5b650e057473cb4576faab98aea3407c53564cae38f3de9b16d"",
                ""MacAddress"": ""02:42:0a:00:01:0c"",
                ""IPv4Address"": ""10.0.1.12/24"",
                ""IPv6Address"": """"
            },
            ""4bba3cf66c010d629b6fd3ecd7467b9f9a85442363e276d18901e6559247d029"": {
                ""Name"": ""my_stack_gateway.1.8s3y9sezounm8c0l0sfnp8fcb"",
                ""EndpointID"": ""62f02710d5f9bf5b861a86c0a348141607167125c10a977d5c1766ca807b8cc7"",
                ""MacAddress"": ""02:42:0a:00:01:03"",
                ""IPv4Address"": ""10.0.1.3/24"",
                ""IPv6Address"": """"
            },
            ""67b18c17bc245bd547a49c36119f4404d0a15e4d674b681b8bdeb6273aaae364"": {
                ""Name"": ""my_stack_policies.1.rbgb8unxtoqqg2l0rhw026ppq"",
                ""EndpointID"": ""96a54ba12d049aebbd4d65caa888676ec009a535fa5bdd713a2d9ab873c9ebd2"",
                ""MacAddress"": ""02:42:0a:00:01:0f"",
                ""IPv4Address"": ""10.0.1.15/24"",
                ""IPv6Address"": """"
            },
            ""92fe4111b89f0e5a890f877d2d69e33bd0be8ce4765a28a1b8bf7e30811d3c65"": {
                ""Name"": ""my_stack_swagger-ui.1.xbtbyt3gd63wff5hrph6naj4o"",
                ""EndpointID"": ""0265305aa5b16b532e304b8f5557e95996e983bfad04bac7e90949c3459c287b"",
                ""MacAddress"": ""02:42:0a:00:01:0a"",
                ""IPv4Address"": ""10.0.1.10/24"",
                ""IPv6Address"": """"
            },
            ""a46e189a9c4ea4be0bc3cb49213af4d608bdc08995f2f4078d3d287e35333810"": {
                ""Name"": ""my_stack_mongodb.1.fsatefqvrmwsyo8yw8tp6qgf6"",
                ""EndpointID"": ""1ca0f13f71fc59027ca925be64c3b11c9a13ce9dc1fca56c77f22ef9f1d4913c"",
                ""MacAddress"": ""02:42:0a:00:01:13"",
                ""IPv4Address"": ""10.0.1.19/24"",
                ""IPv6Address"": """"
            },
            ""abaf31aa0a26d89630dfc90c0e90fd38fb9ea3dab141855f7820e0d5ed75ad3e"": {
                ""Name"": ""my_stack_things.1.396rkdghvfvhoxaohkprmyy58"",
                ""EndpointID"": ""80c8e0ff38da65c9df9db924325743a49311d6e7211d395e0f62b38bd527b7c8"",
                ""MacAddress"": ""02:42:0a:00:01:15"",
                ""IPv4Address"": ""10.0.1.21/24"",
                ""IPv6Address"": """"
            },
            ""ed73ab9cc3e99314f1e2809fc41eda5c7f700b8f59d129a912cc05659ac73ffa"": {
                ""Name"": ""my_stack_connectivity.1.njn438mpqzyhgg16r67mrriar"",
                ""EndpointID"": ""4436d51cf549f07aaf777afa9bf8e310e593ad7cde3df9d4f0395f684a78a1f0"",
                ""MacAddress"": ""02:42:0a:00:01:11"",
                ""IPv4Address"": ""10.0.1.17/24"",
                ""IPv6Address"": """"
            },
            ""efe84e1eec4843608fb5d950a88b0e63dc81247f2420b75fd4b47293610a74b7"": {
                ""Name"": ""my_stack_nginx.1.e5c48q82xwb9z8ebapm20pri0"",
                ""EndpointID"": ""3bf4e453701f08a584d7fed4e24a6953130553cd5741ebd58dac5934d810d71a"",
                ""MacAddress"": ""02:42:0a:00:01:0d"",
                ""IPv4Address"": ""10.0.1.13/24"",
                ""IPv6Address"": """"
            },
            ""lb-my_stack_ditto-net-swarm"": {
                ""Name"": ""my_stack_ditto-net-swarm-endpoint"",
                ""EndpointID"": ""ed13713847ca2649c46e0e4ffe5736485a2d96150c9abf596779a3a053d6ccbe"",
                ""MacAddress"": ""02:42:0a:00:01:04"",
                ""IPv4Address"": ""10.0.1.4/24"",
                ""IPv6Address"": """"
            }
        },
        ""Options"": {
            ""com.docker.network.driver.overlay.vxlanid_list"": ""4097""
        },
        ""Labels"": {
            ""com.docker.stack.namespace"": ""my_stack""
        },
        ""Peers"": [
            {
                ""Name"": ""c4f6c67a05a0"",
                ""IP"": ""192.168.65.3""
            }
        ]
    }
]
```


The **logs** of `my_stack_gateway` : [https://pastebin.com/LJrQX5Hw](https://pastebin.com/LJrQX5Hw)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1969/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1969,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86B5VIo,ditto,2179289640,1969,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-06-19T18:31:44Z,2024-06-19T18:31:44Z,"Hi.
I assume that Ditto will not run on docker swarm out of the box.
I used it 7 years ago or so and back then it required a special DNS based service discovery of the Ditto cluster nodes.

Why would you use docker swarm when just locally starting it on a windows machine?
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86B5VIo/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1969,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86B6IZh,ditto,2179499617,1969,NA,aissam-en,121689923,Aissam EN-NAHEL,,NA,2024-06-19T21:52:56Z,2024-06-19T21:52:56Z,"So, there is no chance to run Ditto on docker swarm.

And regarding why I am running Ditto in Docker Swarm locally : 
I ran Ditto locally with regular Docker during development without issues. after finishing development, I tried deploying it on a production server with Docker Swarm, and I faced that issue, so, to troubleshoot it, I set Ditto up locally in docker swarm.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86B6IZh/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1969,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86B7qfV,ditto,2179901397,1969,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-06-20T06:16:08Z,2024-06-20T06:16:08Z,"> So, there is no chance to run Ditto on docker swarm.

Of course there is. I just can't provide you the exact steps how to do it.  
In a former company where I worked, we ran it in Docker swarm.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86B7qfV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1969,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86B770L,ditto,2179972363,1969,NA,kalinkostashki,101703236,Kalin Kostashki,,NA,2024-06-20T07:09:57Z,2024-06-20T07:09:57Z,"I see in your docker-compose.yml you have BIND_HOSTNAME=0.0.0.0
You can try to have the specific service name. For example:
BIND_HOSTNAME=policies

This way the pekko-dns discovery method may actually be used correctly:

https://pekko.apache.org/docs/pekko/current/discovery/index.html#discovery-method-dns","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86B770L/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1970,https://api.github.com/repos/eclipse-ditto/ditto/issues/1970,ditto,2365818610,1970,How to send specific headers when using hono-ditto kafka connector and map headers when using MQTT - adapter at device end,srinivaschannakeshava,7866498,Srinivas C,srinivaschannakeshava@gmail.com,CLOSED,2024-06-21T06:29:46Z,2024-09-27T14:24:40Z,"Trying to map device events to update connection status and receiving this error at ditto consumption -

`2024-06-21 11:52:56 2024-06-21 06:22:56,976 INFO  [][] o.e.d.c.s.m.ConnectionStatusMessageMapper  - Error occurred during mapping: <MessageMappingFailedException>: Header <ttd> is not set.`

1. Also is there a way to enable connection and disconnection events to be published on kafka from MQTT adapter in Hono?
2. If there needs to be custom headers that needs to be added on the kafka published message - how can this be enabled when using mqtt-adapter ?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1970/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1970,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Nc-yd,ditto,2373184669,1970,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-09-25T06:53:51Z,2024-09-25T06:53:51Z,"Apparently noone knew an answer. 
Did you solve this?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Nc-yd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1972,https://api.github.com/repos/eclipse-ditto/ditto/issues/1972,ditto,2369224700,1972,Extended search based operator metrics,alstanchev,50709547,Aleksandar Stanchev,,CLOSED,2024-06-24T05:11:00Z,2024-09-27T07:18:50Z,"It would be nice to be able to define search metrics based on the search API.

It should be possible to tag devices with predefined values in the config as well as with resolved such from the things themselves.
All devices that match a filter and have the same tags should be aggregated under one metric instrument.
A cleanup functionality may be needed as there might be left out instruments for things that are deleted.
The configuration would as an extension to the already existing operator-metrics functionality.

```
operator-metrics {
      enabled = true
      scrape-interval = 30m
      custom-metrics {
        ...
      }
      custom-search-metrics {
        online_status {
          enabled = true
          scrape-interval = 20m # override scrape interval, run every 20 minute
          namespaces = [
            ""org.eclipse.ditto""
          ]
          tags: {
            ""online"" = ""{{online_placeholder}}""
            ""location"" = ""{{attributes/Info/location}}""
          }
          filters = {
            online-filter = {
              filter = ""gt(features/ConnectionStatus/properties/status/readyUntil/,time:now)""
              inline-placeholder-values = {
                // inline-placeholder-values are used to define hardcoded values to be used in the tags values if the placeholders are not json paths to an actual field in the thing
                // this is used to define different tags values based on the filter that matched the thing
                ""online_placeholder"" = true
              }
              // in order to do placeholder resolving from thing fields, the fields should be defined in the fields array
              // by default only the thingId is available for placeholder resolving
              fields = [""attributes/Info/location""]
              // The metric-value is used to define the value of the metric for the thing that matched the filter.
              // It does not support placeholders and should be a numeric value
            }
            offline-filter = {
              filter = ""lt(features/ConnectionStatus/properties/status/readyUntil/,time:now)""
              inline-placeholder-values = {
                ""online_placeholder"" = false
              }
              fields = [""attributes/Info/location""]
            }
          }
        }
      }
    }
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1972/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1974,https://api.github.com/repos/eclipse-ditto/ditto/issues/1974,ditto,2374055486,1974,"Mqtt connection status is ""misconfigured""",carozo,80724668,Belén Carozo,,CLOSED,2024-06-26T02:37:15Z,2024-06-26T14:51:51Z,"Hello. First of all, thank you for the amazing work! 
I am running into an issue that I'm not quite sure how to fix. I'm trying to connect a mobile app and Eclipse Ditto using Mosquitto as a broker. 

The connection between Ditto and Mosquitto is showing the status ""misconfigured"":
![Screenshot 2024-06-25 at 23 32 31](https://github.com/eclipse-ditto/ditto/assets/80724668/7914bdb4-d32f-4152-bcfc-7e9d78e5c6e0)
and the error message is:

`Socket could not be opened for 172.17.0.2:1883 due to Connect timed out`
At first I thought that it may be that the broker is not running correctly, but the mobile app seems to be connected fine to Mosquitto.

This is the command I used to create the connection:
```
curl -X POST \
 'http://localhost:8080/devops/piggyback/connectivity?timeout=10' \
 -H 'Content-Type: application/json' \
 -u 'devops:foobar' \
 -d '{
   ""targetActorSelection"": ""/system/sharding/connection"",
   ""headers"": {
       ""aggregate"": false
   },
   ""piggybackCommand"": {
       ""type"": ""connectivity.commands:createConnection"",
       ""connection"": {
           ""id"": ""mqtt-connection-android"",
           ""connectionType"": ""mqtt"",
           ""connectionStatus"": ""open"",
           ""failoverEnabled"": true,
           ""uri"": ""tcp://ditto:ditto@'""$mosquitto_ip""':1883"",
           ""sources"": [{
               ""addresses"": [""android:mobile/things/twin/commands/modify""],
               ""authorizationContext"": [""nginx:ditto""],
               ""qos"": 0,
               ""filters"": []
           }],
           ""targets"": [{
               ""address"": ""android:mobile/things/twin/events/modified"",
               ""topics"": [
               ""_/_/things/twin/events"",
               ""_/_/things/live/messages""
               ],
               ""authorizationContext"": [""nginx:ditto""],
               ""qos"": 0
           }]
       }
   }
}'
```
I can't figure out what I'm doing wrong. Any help would be greatly appreciated. Thanks!","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1974/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1974,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Ck7M5,ditto,2190717753,1974,NA,thfries,20593339,Thomas Fries,,NA,2024-06-26T05:08:27Z,2024-06-26T05:08:27Z,"I assume you are running ditto on your local computer and Mosquitto is running on some public server? Some hints:

- Try to reach your Mosquitto from the same machine like you run ditto with e.g. `mosquito_sub` or `mosquito_pub`
- How is authentication set-up in your Mosquitto broker? Do you use the same default ditto credentials for your MQTT server? How does your Android authenticate to the broker? I don't fully understand
- You may give a try to connect to the sandbox Mosquitto hosted by Eclipse `tcp://test.mosquitto.org:1883`. There are several samples for ditto connections  around. May be that helps to explore your issue.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Ck7M5/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1974,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86CmJG_,ditto,2191036863,1974,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-06-26T07:44:28Z,2024-06-26T07:44:28Z,"> Socket could not be opened

That looks like a network issue, eg you use the external IP of the mosquito server instead of the (docker network) internal one.

Do you use docker compose?
Then you should be able to just use the service name as hostname, the Docker DNS should resolve that correctly in the Docker network. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86CmJG_/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1974,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Cpcwb,ditto,2191903771,1974,NA,carozo,80724668,Belén Carozo,,NA,2024-06-26T14:49:13Z,2024-06-26T14:49:13Z,"Thank you @thjaeckle and @thfries!
Yes, I am using docker compose, the IP of the mosquitto server was the issue. 
In case anyone else runs into this issue, I was able to connect using my host IP in the local network (""localhost"" didn't work).
Everything is working as expected now. 
Thank you for your help, keep up the good work!","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Cpcwb/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1975,https://api.github.com/repos/eclipse-ditto/ditto/issues/1975,ditto,2375879000,1975,Retrieving the state of a thing in a Javascript incoming payload mapper,pedro-nicolau-carvalho,153616516,Pedro Nicolau Carvalho,,CLOSED,2024-06-26T17:12:14Z,2024-08-26T11:17:11Z,"When working with IoT devices, sometimes we need to compute things that are not immediately available on the incoming payload. For example:

- A device connects to an MQTT broker, and publishes its sampling rate
- In subsequent messages, the device only sends a counter and a value

To calculate the timestamp of a message, we would need the registration time and the sampling rate. Is this possible using a javascript incoming payload mapper? I guess it is possible by publishing the entire state of the device to mqtt and reading it again, but this seems redundant.

Thank you.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1975/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1975,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Jrzdv,ditto,2309961583,1975,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-08-26T11:17:11Z,2024-08-26T11:17:11Z,"This is currently not possible.
This issue might go into the same direction: #1607","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Jrzdv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1976,https://api.github.com/repos/eclipse-ditto/ditto/issues/1976,ditto,2380444167,1976,The procedure to use https url of the definition for creating thing,Korakbhakta02,67550363,,,CLOSED,2024-06-28T13:30:27Z,2024-07-08T15:43:10Z,"Hi,
I have exposed a definition url through WSO2 gateway as HTTPS url. It doesnot have authentication. When I try to create a thing with this HTTPS definition link, it is giving me error: ""Please ensure that the linked ThingModel is publicly available in order to be downloaded.""

Is there any way to make ditto use the HTTPS secured definition url to create thing? ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1976/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1976,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86C-dkM,ditto,2197412108,1976,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-06-28T18:06:38Z,2024-06-28T18:06:38Z,"Hi.
I don't know what a WSO2 gateway is, but Ditto just needs to be able to download the TM referenced in a definition via this Http endpoint.
So this might even be a cluster internal endpoint, as long as Ditto is able to download via the cluster internal Http endpoint
. 
If it is a Https endpoint and has a valid, publicly trusted, certificate, Ditto will be able to download it (if no network rules prevent that Ditto calls outside URLs). 
If eg the certificate is self signed, you need to configure the certificate in the Java truststore, as you would for every JVM application.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86C-dkM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1976,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86DA2tv,ditto,2198039407,1976,NA,Korakbhakta02,67550363,,,NA,2024-06-29T08:06:10Z,2024-06-29T08:06:10Z,"@thjaeckle  is it possible to manage the truststore in backend of ditto?
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86DA2tv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1976,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86DIWXE,ditto,2200004036,1976,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-07-01T12:22:39Z,2024-07-01T12:22:39Z,"@Korakbhakta02 sure, like I mentioned above:
> If eg the certificate is self signed, you need to configure the certificate in the Java truststore, as you would for every JVM application.

So e.g. mounting a custom truststore as Docker volume and adjusting the according system property to point to that location, see e.g.:
https://medium.com/@vishwanath.leo/how-to-pass-your-custom-truststore-as-argument-to-jvm-when-running-a-jar-file-f9e05adc5094

Or you could create a custom Docker image, where you add the custom truststore to the custom Docker image (in which you reference the `ditto-things` image - which does the downloading of the WoT model).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86DIWXE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1976,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86DPNB0,ditto,2201800820,1976,NA,Korakbhakta02,67550363,,,NA,2024-07-02T03:26:05Z,2024-07-02T03:26:05Z,"Thanks, I am now able to create thing with HTTPS definition.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86DPNB0/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1977,https://api.github.com/repos/eclipse-ditto/ditto/issues/1977,ditto,2385836169,1977,Failure to connect to Kafka broker,gmocklyt,56021275,,,CLOSED,2024-07-02T10:11:11Z,2024-07-02T11:38:46Z,"Hello,

I am trying to use ditto with Kafka to communicate with devices but cannot manage to have a stable connection.
The observed behaviour is that the connection will initially success but after few seconds will report the following status then tries to reconnect in a loop.
```
{
  ""type"": ""connectivity.responses:retrieveConnectionStatus"",
  ""status"": 200,
  ""connectionId"": ""91a5ef28-1985-4104-9030-6077e10a2405"",
  ""connectionStatus"": ""open"",
  ""liveStatus"": ""misconfigured"",
  ""recoveryStatus"": ""ongoing"",
  ""clientStatus"": [
    {
      ""type"": ""client"",
      ""client"": ""2ee793a7259f"",
      ""status"": ""misconfigured"",
      ""recoveryStatus"": ""ongoing"",
      ""statusDetails"": ""Unexpected consumer failure. - cause <KafkaConnectionFailed>: Can't establish connection with kafkaBroker after 1 attempts. At 2024-07-02T10:05:15.136905305Z"",
      ""inStateSince"": ""2024-07-02T10:05:02.098167114Z""
    }
  ],
  ""sourceStatus"": [
    {
      ""type"": ""source"",
      ""client"": ""2ee793a7259f"",
      ""address"": ""connectInput"",
      ""status"": ""closed"",
      ""statusDetails"": ""Closed because of unknown/failure/misconfiguration status in client.""
    }
  ],
  ""targetStatus"": [
    {
      ""type"": ""target"",
      ""client"": ""2ee793a7259f"",
      ""address"": ""connectThings"",
      ""status"": ""closed"",
      ""statusDetails"": ""Closed because of unknown/failure/misconfiguration status in client.""
    }
  ]
}
```

Also the connectivity logs are filled with this error message:
```
2024-07-02 12:07:04 2024-07-02 12:07:04,526 WARN  [][] o.a.k.c.NetworkClient  - [Consumer clientId=91a5ef28-1985-4104-9030-6077e10a2405-consumer, groupId=91a5ef28-1985-4104-9030-6077e10a2405] Connection to node 0 (localhost/127.0.0.1:9094) could not be established. Broker may not be available.
```
This message puzzles me as it looks like the connectivity services tries to connect on localhost while the Kafka broker is on another container.

My deployment uses the docker compose configuration in `deployment/docker/docker-compose.yml` to which I added a container with the Kafka broker as such:
```
services:
  kafka:
    image: bitnami/kafka:latest
    networks:
      default:
        aliases:
          - kafka
    ports:
      - 9094:9094
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
```

My connection configuration is the following, adapted from the default Kafka template to use additional policies and provide the address of the broker container:
```
{
  ""id"": ""91a5ef28-1985-4104-9030-6077e10a2405"",
  ""name"": ""Kafka 2"",
  ""connectionType"": ""kafka"",
  ""connectionStatus"": ""open"",
  ""uri"": ""tcp://kafka:9094"",
  ""sources"": [
    {
      ""addresses"": [
        ""connectInput""
      ],
      ""consumerCount"": 1,
      ""qos"": 1,
      ""authorizationContext"": [
        ""ditto:inbound-auth-subject"",
        ""connect:TAF-context""
      ],
      ""enforcement"": {
        ""input"": ""{{ header:device_id }}"",
        ""filters"": [
          ""{{ entity:id }}""
        ]
      },
      ""acknowledgementRequests"": {
        ""includes"": []
      },
      ""headerMapping"": {},
      ""payloadMapping"": [
        ""Ditto""
      ],
      ""replyTarget"": {
        ""address"": ""theReplyTopic"",
        ""headerMapping"": {},
        ""expectedResponseTypes"": [
          ""response"",
          ""error"",
          ""nack""
        ],
        ""enabled"": true
      }
    }
  ],
  ""targets"": [
    {
      ""address"": ""connectThings"",
      ""topics"": [
        ""_/_/things/twin/events"",
        ""_/_/things/live/messages""
      ],
      ""authorizationContext"": [
        ""ditto:outbound-auth-subject"",
        ""connect:TAF-context""
      ],
      ""headerMapping"": {}
    }
  ],
  ""clientCount"": 1,
  ""failoverEnabled"": true,
  ""validateCertificates"": true,
  ""processorPoolSize"": 1,
  ""specificConfig"": {
    ""saslMechanism"": ""plain"",
    ""bootstrapServers"": ""kafka:9094""
  },
  ""tags"": []
}
```

Do you have any insight on this issue ?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1977/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1977,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86DS-Fk,ditto,2202788196,1977,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-07-02T11:11:03Z,2024-07-02T11:11:03Z,"@gmocklyt I might have an idea ..
How did you configure Kafka?
Because Ditto will contact the Kafka bootstrap server at `kafka` hostname - and the bootstrap server then responds with the actual hostnames / IPs to connect to.  
I assume that Kafka is configured to use hostname `localhost` as ""advertised listener"" - and responds with `localhost` - to which Ditto however can of course not connect.

So TL;DR: adjust the ""advertised listener"" setting in your Kafka.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86DS-Fk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1977,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86DTdKw,ditto,2202915504,1977,NA,gmocklyt,56021275,,,NA,2024-07-02T11:38:46Z,2024-07-02T11:38:46Z,"You're right, I mixed up the port intended to be exposed to my host and the one available to the docker network.

Thank you very much for taking time to answer this, I'll close the issue","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86DTdKw/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1978,https://api.github.com/repos/eclipse-ditto/ditto/issues/1978,ditto,2392958755,1978,Unable to authorize ditto installed via docker compose,dheerajsharma2399,64092618,Dheeraj Sharma,,CLOSED,2024-07-05T17:47:46Z,2024-08-26T11:17:22Z,"I have been working on a project related to digital twins, and we are trying to implement Eclipse Ditto for our use case.
We use sensor nodes with MQTT connections in the implementation stage at the edge. We are facing issues when we are deploying Eclipse ditto. We have deployed ditto on WSL working on a Windows 11 system. We are using Docker Compose with Nginx for reverse proxy and basic authentication for Eclipse Ditto.

The app deploys correctly on localhost:8080. When we try to authorise Ditto UI using a username and password, I keep encountering a 404 error despite following troubleshooting steps like verifying URLs, checking Nginx configuration, inspecting Ditto logs, and restarting services. We have also tried using the Ubuntu virtual machine, but the issue persists.

We have done the following troubleshooting steps to resolve this issue:
Checked ports on docker-compose.yaml file.
Checked nginx.conf and other configuration files.
Created nginx.htpasswd file and added a new user in format ditto:{open SSL password hash}

We keep getting the 404 error when trying to authenticate Eclipse ditto. when im trying the curl command to create a policy i get 405 error We searched everywhere for the solution, but the steps were identical to those we had performed.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1978/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1978,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86D_kOU,ditto,2214478740,1978,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-07-08T15:42:54Z,2024-07-08T15:42:54Z,"Hi @dheeru0802 

> We keep getting the 404 error when trying to authenticate Eclipse ditto. 

What response do you get with that 404?
A JSON response from Ditto? Which one if yes?
What do the log files log, e.g. of the `gateway` service?

 Please share some more details.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86D_kOU/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1980,https://api.github.com/repos/eclipse-ditto/ditto/issues/1980,ditto,2399575106,1980,error pulling image configuration: download failed after attempts=6: ,antoniojiawen,20106645,,,CLOSED,2024-07-10T02:22:14Z,2024-07-10T05:39:43Z,"when I use ""docker-compose up -d"" or ""docker pull eclipse/ditto-policies"" only project ""eclipse"", It cause
 ""error pulling image configuration: download failed after attempts=6: dialing production.cloudflare.docker.com:443 container via direct connection because static system has no HTTPS proxy: connecting to 31.13.106.4:443: dial tcp 31.13.106.4:443: connectex: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.""
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1980/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1980,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86ETH8a,ditto,2219605786,1980,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-07-10T05:39:43Z,2024-07-10T05:39:43Z,"Ditto images are not hosted on `production.cloudflare.docker.com:443` - that is probably a Docker proxy in your infrastructure.
I would suggest to check if that setup can pull from Docker hub.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86ETH8a/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1981,https://api.github.com/repos/eclipse-ditto/ditto/issues/1981,ditto,2399680024,1981,javax.annotation不 存在,antoniojiawen,20106645,,,CLOSED,2024-07-10T03:45:00Z,2024-07-10T05:38:57Z,"when i use ""mvn clean install -DskipTests"" cause

 D:\workspace\java\dittospace\ditto-master\internal\utils\pekko\src\main\java\org\eclipse\ditto\internal\utils\pekko\PingCommand.java:18:23:  错误: 程序包javax.annotation不 存在
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1981/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1981,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86ETHwk,ditto,2219605028,1981,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-07-10T05:38:52Z,2024-07-10T05:38:52Z,"That seems to be a local issue of your setup.
Builds on both Jenkins and GitHub actions pass.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86ETHwk/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1982,https://api.github.com/repos/eclipse-ditto/ditto/issues/1982,ditto,2402686801,1982,Disabling authentication for eclipse ditto,Korakbhakta02,67550363,,,CLOSED,2024-07-11T09:19:06Z,2024-08-26T11:17:32Z,"Hi ,
Is it possible to disable the authentication for ditto? I have make authentication as false and remove the auth from nginx file,but it was giving gateway error. So,is there any method by which we can disable authentication?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1982/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1982,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86FHB07,ditto,2233212219,1982,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-07-17T12:32:34Z,2024-07-17T12:32:34Z,"Disabling authentication is not possible in Ditto.

You could however enable [""pre-authentication""](https://eclipse.dev/ditto/installation-operating.html#pre-authentication) and then e.g. configure your nginx (or other reverse proxy in front of Ditto) to always set a static header, for example:
```
proxy_set_header              x-ditto-pre-authenticated ""nginx:anonymous"";
```

Then you basically use a single user which is authenticated at all HTTP requests - and which will have access to all APIs, effectively bypassing authorization.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86FHB07/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1983,https://api.github.com/repos/eclipse-ditto/ditto/issues/1983,ditto,2414073817,1983,Authorization Header used in internal service communication,pedro-nicolau-carvalho,153616516,Pedro Nicolau Carvalho,,CLOSED,2024-07-17T16:43:21Z,2024-07-18T09:53:00Z,"Hello,

I have set up JWT authentication and authorization in Ditto, but I am getting a `DittoHeadersTooLargeException` in the gateway service when passing along my JWT token. It seems that when adding the subjects to the DittoHeaders, the gateway service overflows the maximum allowed length for the headers. Is this max configurable? It does not seem to be the same as `pekko.http.server.parsing.max-header-value-length`. 

I also noticed in the logs that the JWT token is being set in Ditto headers. Is there a way to skip some headers like this? I would assume that the JWT token is not needed for internal communication between the services since the subjects are already calculated in the gateway service, am I wrong?

Thank you.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1983/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1983,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86FRZb-,ditto,2235930366,1983,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-07-18T08:28:26Z,2024-07-18T08:28:26Z,"Hi @pedro-nicolau-carvalho 

How do you deploy Ditto?
The `Authorization` header should be excluded from the ""header propagation"" in the Ditto Helm chart:
https://github.com/eclipse-ditto/ditto/blob/8f48e9622ae7fb2de77905e08cc3c88a830fef81/deployment/helm/ditto/values.yaml#L1507

So there is a way to skip a list of defined headers (by configuration) from being propagated.
I would check which ones cause a lot of payload and exclude them, if not needed, same as the Helm chart config already does:
https://github.com/eclipse-ditto/ditto/blob/8f48e9622ae7fb2de77905e08cc3c88a830fef81/deployment/helm/ditto/values.yaml#L1495-L1515

If you add a lot of subjects from the JWT as `authSubjects` to the DittoHeaders, the headers could also get too large.
There is also a configuration of a max. amount of auth subjects - if this is exceeded, the same exception is also thrown:
https://github.com/eclipse-ditto/ditto/blob/8f48e9622ae7fb2de77905e08cc3c88a830fef81/edge/service/src/main/resources/ditto-edge-service.conf#L27-L29

You can also increase the max. possible size of the headers, which is by default 5k:
https://github.com/eclipse-ditto/ditto/blob/8f48e9622ae7fb2de77905e08cc3c88a830fef81/edge/service/src/main/resources/ditto-edge-service.conf#L23-L25","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86FRZb-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1983,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86FSCan,ditto,2236098215,1983,NA,pedro-nicolau-carvalho,153616516,Pedro Nicolau Carvalho,,NA,2024-07-18T09:53:00Z,2024-07-18T09:53:00Z,"Hello @thjaeckle,

I am using https://github.com/eclipse-ditto/ditto/blob/master/deployment/docker/sandbox/docker-compose.yml as a starting point, but from the way it was setup I understand now why it was not blocking those headers (I removed the nginx and added JWT integration which caused the problem).

Thank you!","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86FSCan/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1984,https://api.github.com/repos/eclipse-ditto/ditto/issues/1984,ditto,2414139718,1984,Complex JWT placeholder subject mapping - Keycloak RPT integration,pedro-nicolau-carvalho,153616516,Pedro Nicolau Carvalho,,CLOSED,2024-07-17T17:19:17Z,2025-01-16T10:00:16Z,"Hello,

I am currently integrating Keycloak with Eclipse Ditto. Since granting user permissions is done elsewhere from ditto, my idea is to map specific resources and scopes as subjects in Ditto and use a user's RPT token as the input of this mapping. The RPT token, granted by keycloak, is a JWT token that contains some user's permissions. The structure is as follows: 

```
{
  ""authorization"": {
      ""permissions"": [
        {
          ""scopes"": [ ""device.read"" ],
          ""resource_set_id"": ""d2fe9843-6462-4bfc-baba-b5787bb6e0e7"",
          ""resource_set_name"": ""Device 1""
        },
        {
          ""scopes"": [ ""device.read"", ""device.write"" ],
          ""resource_set_id"": ""d2fe9843-6462-4bfc-baba-b5787bb6e0e7"",
          ""resource_set_name"": ""Device 12
        }
      ]
  },
  ""jti"": ""d6109a09-78fd-4998-bf89-95730dfd0892-1464906679405"",
  ""exp"": 1464906971,
  ""nbf"": 0,
  ""iat"": 1464906671,
  ""sub"": ""f1888f4d-5172-4359-be0c-af338505d86c"",
  ""typ"": ""kc_ett"",
  ""azp"": ""hello-world-authz-service""
}
```

my idea is to then, from this RPT, generate subjects:
- `d2fe9843-6462-4bfc-baba-b5787bb6e0e7#device.read`
- `d2fe9843-6462-4bfc-baba-b5787bb6e0e7#device.read`
- `d2fe9843-6462-4bfc-baba-b5787bb6e0e7#device.write`. 
With these subjects, a policy for a thing would include these subjects in the appropriate place (e.g. subject `d2fe9843-6462-4bfc-baba-b5787bb6e0e7#device.read` would be granted permission to read thing d2fe9843-6462-4bfc-baba-b5787bb6e0e7).

I have tried using jwt placeholders to convert the JWT token to the format I require, but I am not sure if it is possible. It seems that the supported json operations are very limited. For example, using the token structure above:
- JSON pointer indexing does not work (example: `authorization/permissions/0`)
- Can't do operations in nested objects. To reach something like `resource_set_id#scope`, I would have to do something like `{{ jwt:authorization/permissions | join(resource_set_id, scopes, '#') }}` (`join` function is merely ilustrative). The issue here is everything to the output of `jwt:claim` is acted on as a string and not as objects themselves.

Am I correct in assuming that the mapping I want is not currently possible using placeholders?

Thank you.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1984/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1984,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86FRuAT,ditto,2236014611,1984,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-07-18T09:10:57Z,2024-07-18T09:10:57Z,"Hi @pedro-nicolau-carvalho 

The JWT placeholder is quite mighty:
https://eclipse.dev/ditto/basic-placeholders.html#scope-openid-connect-configuration

It e.g. has a special handling for JSON arrays (and even JSON objects in arrays) - iterating over all entries and ""multiplying"" the result.

However, it seems we did not consider yet the ""array in array"" use case.
It also seems that only arrays in ""root level"" are currently supported .. I would say this is a bug, that should work also in nested structures.
I will create a ticket for that and can provide a fix.

What you however want to achieve is not yet supported, I fear .. selecting and combining fields only ""on the same level"".
But that is a very valid and useful use case. 👍 
We could track that as new issue, I am open for suggestions regarding syntax (probably a function as you suggested would be needed).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86FRuAT/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1984,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86FSGKD,ditto,2236113539,1984,NA,pedro-nicolau-carvalho,153616516,Pedro Nicolau Carvalho,,NA,2024-07-18T10:00:37Z,2024-07-18T10:00:37Z,"> It e.g. has a special handling for JSON arrays (and even JSON objects in arrays) - iterating over all entries and ""multiplying"" the result.

Is it currently possible to extract a property from a nested JSON object in an array without parsing the JSON object as a string? For example, using the structure from the RPT, is it possible to extract the `resource_set_id`as the authorization subjects? I have tried using `{{ jwt:authorization/permissions/resource_set_id }}` and `{{ jwt:authorization/permissions/0/resource_set_id }}` but without luck","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86FSGKD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1984,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86FSH3W,ditto,2236120534,1984,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-07-18T10:04:07Z,2024-07-18T10:04:07Z,"As mentioned: It should be possible .. however it currently only seems to work if the array is directly at the ""first level"" of the JSON, see created bug issue #1985 

> For example, using the structure from the RPT, is it possible to extract the resource_set_idas the authorization subjects? I have tried using `{{ jwt:authorization/permissions/resource_set_id }}` and `{{ jwt:authorization/permissions/0/resource_set_id }}` but without luck

Yes, that unfortunately is affected by the bug :/ 

`{{ jwt:authorization/permissions/resource_set_id }}` should work that way ..
Using the array-index is not supported ..","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86FSH3W/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1984,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86PcoFv,ditto,2406646127,1984,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-10-11T06:33:42Z,2024-10-11T06:33:42Z,"With the recently released Ditto 3.6.0 the Bugfix regarding JWT claim parsing in arrays of objects was resolved.

Closing this question.. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86PcoFv/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1984,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86aNC1X,ditto,2587110743,1984,NA,malavikaiplon,105629623,MALAVIKA,,NA,2025-01-13T13:30:07Z,2025-01-13T13:30:07Z,"Hello, 

Currently i am facing issue with integrating keycloak with eclipse ditto(3.6.1) installed using docker-compose file i followed the steps given official documentation like below 

1. i have added the keycloak issuer url 
![Screenshot 2025-01-13 185452](https://github.com/user-attachments/assets/f8bc4146-6ff2-4c77-bf42-31d4bab006a5)

2. After up all the services  i tried to create a ditto policy with below json with bearer token generated from the issuer of given sub
{
    ""policyId"": ""my.test:policy"",
    ""entries"": {
        ""owner"": {
            ""subjects"": {
                ""keycloak:93948f84-1427-4bd3-a4d0-93cd53a08b73"": {
                    ""type"": ""keycloak user""
                }
            },
            ""resources"": {
                ""thing:/"": {
                    ""grant"": [""READ"",""WRITE""],
                    ""revoke"": []
                },
                ""policy:/"": {
                    ""grant"": [""READ"",""WRITE""],
                    ""revoke"": []
                },
                ""message:/"": {
                    ""grant"": [""READ"",""WRITE""],
                    ""revoke"": []
                }
            }
        },

        ""observer"": {
            ""subjects"": {
                ""keycloak:93948f84-1427-4bd3-a4d0-93cd53a08b73"": {
                    ""type"": ""keycloak user""
                }
            },
            ""resources"": {
                ""thing:/"": {
                    ""grant"": [""READ""],
                    ""revoke"": []
                },
                ""policy:/"": {
                    ""grant"": [""READ""],
                    ""revoke"": []
                },
                ""message:/"": {
                    ""grant"": [""READ""],
                    ""revoke"": []
                }
            }
        }
    }
}
but i couldn't create the policy getting the below mention error {
    ""status"": 403,
    ""error"": ""policies:policy.notcreatable"",
    ""message"": ""The Policy with ID 'my.test:policy' could not be created as the requester had insufficient permissions."",
    ""description"": ""Check if you have sufficient permissions in the new policy to create.""
}

please can anyone help me in this ?? Thanks in Advance","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86aNC1X/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1984,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86aNNJY,ditto,2587152984,1984,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2025-01-13T13:48:18Z,2025-01-13T13:48:18Z,"@malavikaiplon which auth subjects does the user have with which you call the policies API?
You can check by invoking the API:
```
GET /api/2/whoami
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86aNNJY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1984,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86aNY-d,ditto,2587201437,1984,NA,malavikaiplon,105629623,MALAVIKA,,NA,2025-01-13T14:07:49Z,2025-01-13T14:07:49Z,"Hi @thjaeckle 
/api/2/whoami this giving below results {
  ""defaultSubject"": ""nginx:"",
  ""subjects"": [
    ""nginx:""
  ]
} i also have doubt like why does the gateway service log not giving any connection logs of my OIDC issuer (keycloak) after i configure it in gateway.conf , i am not sure where i am missing","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86aNY-d/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1984,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86aOsxx,ditto,2587544689,1984,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2025-01-13T16:08:51Z,2025-01-13T16:08:51Z,You seem to still have `pre-authentication` (https://eclipse.dev/ditto/installation-operating.html#pre-authentication) enabled - but your nginx does not authenticate a user.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86aOsxx/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1984,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86apN_k,ditto,2594496484,1984,NA,malavikaiplon,105629623,MALAVIKA,,NA,2025-01-16T04:43:42Z,2025-01-16T04:43:42Z,"Hi @thjaeckle ,

after i disabled the preauthentication i am getting the following error message from /api/2/whoami {
    ""status"": 401,
    ""error"": ""gateway:jwt.issuer.notsupported"",
    ""message"": ""The JWT issuer 'http://keycloak-test.test.co.in/auth/realms/master' is not supported."",
    ""description"": ""Check if your JWT is correct.""
} gateway log also showing
 2025-01-16 05:40:25,466 INFO  [][] o.e.d.g.s.s.a.j.DittoPublicKeyProvider  - The JWT issuer <http://keycloak-test.test.co.in/auth/realms/master> is not included in Ditto's gateway configuration at 'ditto.gateway.authentication.oauth.openid-connect-issuers', supported are: <JwtSubjectIssuersConfig[protocolPrefix=https://, subjectIssuerConfigMap={accounts.google.com=JwtSubjectIssuerConfig [subjectIssuer=google, issuers=[accounts.google.com], authSubjectTemplates=[{{jwt:sub}}]], https://accounts.google.com=JwtSubjectIssuerConfig [subjectIssuer=google, issuers=[accounts.google.com], authSubjectTemplates=[{{jwt:sub}}]]}]>
Here is my configuration
![image](https://github.com/user-attachments/assets/e52b91a7-8b3d-4d79-889c-5e12ac662175)

do i need to configure anything else ??","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86apN_k/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1984,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86ap9Y7,ditto,2594690619,1984,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2025-01-16T07:11:23Z,2025-01-16T07:11:23Z,"Please share how you apply your configuation.
As a mount in the container?
As environment variables?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86ap9Y7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1984,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86aqHiC,ditto,2594732162,1984,NA,malavikaiplon,105629623,MALAVIKA,,NA,2025-01-16T07:39:32Z,2025-01-16T07:39:32Z,"hi @thjaeckle ,

here is my docker-compose.yaml gateway service configuration  
gateway:
    image: docker.io/eclipse/ditto-gateway:${DITTO_VERSION:-latest}
    mem_limit: 512m
    restart: always
    networks:
      default:
        aliases:
          - ditto-cluster
    depends_on:
      - policies
    ports:
      - ""8081:8080""
    environment:
      - TZ=Europe/Berlin
      - INSTANCE_INDEX=1
      - BIND_HOSTNAME=0.0.0.0
      - ENABLE_PRE_AUTHENTICATION=false
      - ENABLE_DUMMY_AUTH=true
      - OPENJ9_JAVA_OPTIONS=-XX:+ExitOnOutOfMemoryError -Xtune:virtualized -Xss512k -XX:MaxRAMPercentage=80 -Dakka.coordinated-shutdown.exit-jvm=on -Dakka.cluster.shutdown-after-unsuccessful-join-seed-nodes=120s
    command: java -Dditto.gateway.authentication.devops.password=foobar -Dditto.gateway.authentication.oauth.protocol=http -Dditto.gateway.authentication.oauth.openid-connect-issuers.keycloak=keycloak-test.test.co.in/auth/realms/master -jar starter.jar

i followed this https://github.com/eclipse-ditto/ditto/issues/876 but i couldn't up the gateway services with this configuration. it keep restarting gateway service and getting this error from gateway log 
Error: Unable to access jarfile starter.jar
Error: Unable to access jarfile starter.jar
Error: Unable to access jarfile starter.jar","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86aqHiC/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1984,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86aqPiA,ditto,2594764928,1984,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2025-01-16T08:00:10Z,2025-01-16T08:00:10Z,"> `-Dditto.gateway.authentication.oauth.openid-connect-issuers.keycloak=keycloak-test.test.co.in/auth/realms/master`

This is wrong.
As [documented](https://eclipse.dev/ditto/installation-operating.html#openid-connect) this needs to be:
```
-Dditto.gateway.authentication.oauth.openid-connect-issuers.keycloak.issuer=keycloak-test.test.co.in/auth/realms/master
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86aqPiA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1984,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86arb6v,ditto,2595077807,1984,NA,malavikaiplon,105629623,MALAVIKA,,NA,2025-01-16T10:00:14Z,2025-01-16T10:00:14Z,"HI @thjaeckle ,

Thank you ,It's working now when i changed the configuration like this in docker-compose.yaml file gateway service environment  
environment:
      - TZ=Europe/Berlin
      - BIND_HOSTNAME=0.0.0.0
      - ENABLE_PRE_AUTHENTICATION=false
      - JAVA_TOOL_OPTIONS=-XX:ActiveProcessorCount=2 -XX:+ExitOnOutOfMemoryError -XX:+UseContainerSupport -XX:+UseStringDeduplication -Xss512k -XX:MaxRAMPercentage=50 -XX:+UseG1GC -XX:MaxGCPauseMillis=150 -Dpekko.coordinated-shutdown.exit-jvm=on -Dpekko.cluster.shutdown-after-unsuccessful-join-seed-nodes=180s -Dpekko.cluster.failure-detector.threshold=15.0 -Dpekko.cluster.failure-detector.expected-response-after=10s -Dpekko.cluster.failure-detector.acceptable-heartbeat-pause=20s -Dpekko.cluster.downing-provider-class= -Dditto.gateway.authentication.oauth.protocol=http -Dditto.gateway.authentication.oauth.openid-connect-issuers.keycloak.issuer=keycloak-test.test.co.in/auth/realms/master","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86arb6v/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1985,https://api.github.com/repos/eclipse-ditto/ditto/issues/1985,ditto,2415832335,1985,JWT placeholder resolving does not correctly expand nested arrays,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2024-07-18T09:21:42Z,2024-09-02T11:58:46Z,"Question #1984 brought up an issue with the `jwt` placeholder.

Given the following JWT:
```json
{
  ""authorization"": {
    ""permissions"": [
      {
        ""scopes"": [ ""device.read"" ],
        ""resource_set_id"": ""123456""
      },
      {
        ""scopes"": [  ""device.read"", ""device.write"" ],
        ""resource_set_id"": ""987654""
      }
    ]
  }
}
```

And given the following placeholder:
```
{{ jwt:authorization/permissions/scopes }}
```

It would be expected that this resolves to:
```
issuer:device.read
issuer:device.write
```

Due to the nature of ""flattening"" arrays.
This however does not work, it resolves to no subjects at all..

The JWT placeholder implementation currently seems to only ""flatten"" arrays at top level.

It should work ""recursively"", in arbitrary nested JsonObject / JsonArray constellations.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1985/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1988,https://api.github.com/repos/eclipse-ditto/ditto/issues/1988,ditto,2424328149,1988,Sort Operation for Things-Search API shows 400 Error,Subhaditya16,82825565,Subhaditya Bhattacharjee,,CLOSED,2024-07-23T06:02:29Z,2024-07-23T08:32:45Z,"Hi,
I am trying to make a sort operation using the Things-Search API:
so when I try to call this - **api/2/search/things?option=sort(+thingId)**

It is throwing an error: 
{
    ""status"": 400,
    ""error"": ""rql.expression.invalid"",
    ""message"": ""Invalid input ' ', expected Asc or Desc (line 1, column 6):\nsort( thingId)\n     ^"",
    ""description"": ""Ensure that all opening parentheses have also closing ones and that the RQL expression is valid.""
}

However when I replace the + with a - , it works as expected","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1988/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1988,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86FyGAf,ditto,2244501535,1988,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-07-23T07:50:05Z,2024-07-23T07:50:05Z,"Hi @Subhaditya16 

You'll have to URL encode the `+` in that case .. `+` is otherwise substituted with a space.
See also: https://stackoverflow.com/questions/5450190/how-to-encode-the-plus-symbol-in-a-url","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86FyGAf/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1988,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86FyadY,ditto,2244585304,1988,NA,Subhaditya16,82825565,Subhaditya Bhattacharjee,,NA,2024-07-23T08:31:43Z,2024-07-23T08:31:43Z,"Hi @thjaeckle 
Thanks for the response, able to get the Sort Operation working now.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86FyadY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1993,https://api.github.com/repos/eclipse-ditto/ditto/issues/1993,ditto,2455206389,1993,patch kind of update in Kafka connection(source) without removing the existing values,kulta4,148374362,,,CLOSED,2024-08-08T08:34:48Z,2024-08-26T11:12:00Z,"Hi there!
         I tried to update the twin using Kafka connection (source), to add/delete the specific values without removing the existing values. but not able to update/delete as I expected.
         this is the twin structure I tried to Update:
   {
  ""thingId"": ""the.namespace:the-thing-id"",
  ""policyId"": ""the.namespace:the-policy-id"",
  ""features"": {
    ""fruits"": [
      ""oranges"",
      ""bananas"",
      ""grapes"",
      ""strawberries""
    ]
  }
}
              I want to update the fruits value without removing the existing values as I mentioned above.
              This is the payload I used to update:
 {""topic"":""<namespace>/<thingId>/things/twin/commands/merge"",""headers"": {""content-type"": ""application/merge-patch+json""},""path"":""/features/fruits"",""value"": [""apples"",""kiwis"", ""lemons"", ""avocados""]}    --->   this will replace with the existing values , but i want to add the values. for delete also I didn't find any way to delete specific fruit name alone, not all the names. Please suggest the way to update/delete a feature if the Key-values are in array format.
 
 Thank you.
 
              ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1993/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1993,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86IXwty,ditto,2287930226,1993,NA,kulta4,148374362,,,NA,2024-08-14T06:08:52Z,2024-08-14T06:08:52Z,"Hi @thjaeckle!
            can have any update on this?
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86IXwty/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1993,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86ItZ4u,ditto,2293603886,1993,NA,pedro-nicolau-carvalho,153616516,Pedro Nicolau Carvalho,,NA,2024-08-16T14:21:55Z,2024-08-16T14:21:55Z,"Hello,

I'm not a contributor of Ditto, but the [documentation](https://eclipse.dev/ditto/2021-02-04-merge-feature.html) states that the merge functionality uses the[ JSON Merge Patch](https://datatracker.ietf.org/doc/html/rfc7396) semantics, which do not allow for updates to arrays (the value is always replaced).

>   (...)  If the patch is
   anything other than an object, the result will always be to replace
   the entire target with the entire patch.  Also, it is not possible to
   patch part of a target that is not an object, such as to replace just
   some of the values in an array.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86ItZ4u/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1993,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86I-vmY,ditto,2298149272,1993,NA,kulta4,148374362,,,NA,2024-08-20T07:22:02Z,2024-08-20T07:22:02Z,"Thank you @pedro-nicolau-carvalho 
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86I-vmY/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1995,https://api.github.com/repos/eclipse-ditto/ditto/issues/1995,ditto,2470404469,1995,MQTT Last Will Placeholders to support Eclipse Sparkplug,pedro-nicolau-carvalho,153616516,Pedro Nicolau Carvalho,,CLOSED,2024-08-16T14:37:01Z,2024-09-27T14:25:07Z,"Hello,

I'm trying to integrate Eclipse Ditto with Eclipse Sparkplug, and I've been mostly successful in all the message types and flows:
- Javascript Payload mappers to decode protobuf messages
- Combining modify and merge protocol topics for birth or data messages
- Sending DCMD/NCMD commands using eclipse messages
- Conditional updates when sequence numbers are out of order (update only if incoming seq number is bigger that what is twin persisted)
- When a host application (a sparkplug host application is equivalent to an eclipse ditto connection), is started, a message to mqtt is sent declaring it is online, and when it closes, it sends a message informing it is closing. I've used connection announcements for this purpose. The payload of this message is the following:

```
{
   ""online"": boolean
   ""timestamp: milis since epoc - this timestamp is always the timestamp of when the connection is started, so a correlation betwen online/offline states can be made
}
```

 Only one small detail is missing to support Eclipse Sparkplug in this last point. When eclipse ditto ungracefully disconnects from the MQTT broker, a last will message should be sent with the status and the timestamp. Since the last will connection configuration is static, the timestamp cannot be rightfully set.

Does it make sense for Eclipse Ditto to support placeholders in the last will message? Also, the issue still remains that the timestamp should be the same as the last connection opened announcement. Could a connection-specific placeholder exist which holds the value of when the connection opens or closes?

It seems to me at least that an integration between these two projects is fruitful since they both act under the same domain and under the Eclipse umbrella.

Thank you.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1995/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1995,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86It5RD,ditto,2293732419,1995,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-08-16T15:37:34Z,2024-08-16T15:37:34Z,"Hi.

Very interesting, would be nice to read about a finished Sparkplug integration at some point.

Hm, if I understood Mqtt last will correctly, providing a dynamic payload to it won't work.
I understood that a client defines this last will message eg after first connection. Then, when the broker detects that the client is gone, it will publish the (previously defined) last will message to subscribers.
So Ditto has no chance to provide a dynamic payload. 

I'm not an mqtt expert, but maybe the last will message could be refreshed/updated periodically, eg each minute?
This could be something Ditto could handle. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86It5RD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1995,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86It-cd,ditto,2293753629,1995,NA,pedro-nicolau-carvalho,153616516,Pedro Nicolau Carvalho,,NA,2024-08-16T15:52:10Z,2024-08-16T15:52:10Z,"Hello @thjaeckle,

Yes you're right, the will message is sent along with the connect packet, which I assume happens before the ConnectionOpennedAnnouncement eclipse ditto message. So I guess that won't work... 

I guess a really dirty workaround (😄) would be to use an http push connection that listens to closed connection announcements and updates the last will message and javascript mappers with new timestamps. Have you seen approaches like these, that use http push connections that update ditto entities? Any opinions? 

Thank you for the help!","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86It-cd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1995,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86MXtTE,ditto,2355025092,1995,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-09-17T09:28:34Z,2024-09-17T09:28:34Z,"@pedro-nicolau-carvalho sorry for the late reply

> Have you seen approaches like these, that use http push connections that update ditto entities? Any opinions?

No, I did not see approaches like there - I would also not suggest to build such a ""recursion"" (Ditto invoking Ditto :D). 
A lot things could go wrong here I assume ..","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86MXtTE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/1998,https://api.github.com/repos/eclipse-ditto/ditto/issues/1998,ditto,2475476721,1998,Create schemas ref for SearchFilterProperty and NamespaceProperty,neottil,84083982,Luca Neotti,NEOT.LUKA.89@GMAIL.COM,CLOSED,2024-08-20T12:05:36Z,2024-08-26T09:43:15Z,"In openapi project, adding POST api's /api/2/search/things/count and /api/2/search/things cause the reuse of the schemas searchFilterProperty and namespacesProperty  ([Line #122 and #124 of things-count.yml](https://github.com/eclipse-ditto/ditto/blob/3.5.10/documentation/src/main/resources/openapi/sources/paths/search/things-count.yml#L122) and [Line #169 and #171 of things.yml](https://github.com/eclipse-ditto/ditto/blob/3.5.10/documentation/src/main/resources/openapi/sources/paths/search/things.yml#L169)) but the schemas aren't prensent in schemas declaration of swagger [api-2-index.yml](https://github.com/eclipse-ditto/ditto/blob/3.5.10/documentation/src/main/resources/openapi/sources/api-2-index.yml#L324).
This cause incomprensible ref in builded swagger [like here](https://github.com/eclipse-ditto/ditto/blob/3.5.10/documentation/src/main/resources/openapi/ditto-api-2.yml#L7049) $ref: '#/paths/~1api~12~1search~1things/post/requestBody/content/application~1x-www-form-urlencoded/schema/properties/filter'.

To correct this you need to create the correct schema and refs. I will provide to create a pull request.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/1998/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/1998,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86JBAHc,ditto,2298741212,1998,NA,neottil,84083982,Luca Neotti,NEOT.LUKA.89@GMAIL.COM,NA,2024-08-20T12:29:34Z,2024-08-20T12:29:34Z,Pull request created. https://github.com/eclipse-ditto/ditto/pull/1999,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86JBAHc/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/2002,https://api.github.com/repos/eclipse-ditto/ditto/issues/2002,ditto,2477560074,2002,Not able to fetch all connections via the http connection api when there are more than 100 connections,JeffreyThijs,8981372,,,OPEN,2024-08-21T09:35:36Z,2024-09-06T12:57:26Z,"When i request all connection via the connection http api while having more than 100 connection, I receive following error message:

```json
{
    ""status"": 400,
    ""error"": ""connectivity:connections.amount.illegal"",
    ""message"": ""The amount of requested exceptions exceeds the limit of '100'."",
    ""description"": ""Please request less connection ids.""
}
```

This limit seems to be configured via:

https://github.com/eclipse-ditto/ditto/blob/master/gateway/service/src/main/resources/gateway.conf#L220

Currently, you can not configure this option via an environment variable so it would be a good idea to add this to allow a quick fix. A better solution would be add pagination to the endpoint like what is done with the search things http api. ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/2002/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/2002,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86LHe8P,ditto,2333994767,2002,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-09-06T12:57:25Z,2024-09-06T12:57:25Z,"Hi @JeffreyThijs 

Indeed, configuring it via ENV var would be a quick win for this.
In the meantime, you can configure every HOCON (the config format) setting via Java system properties.
In this case, this would be a parameter to the JVM:
```
-Dditto.gateway.command.connections-retrieve-limit=1337
```


And yes - eventually we will need pagination on this API.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86LHe8P/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/2008,https://api.github.com/repos/eclipse-ditto/ditto/issues/2008,ditto,2498777656,2008,Unstability of Ditto AFter creating large number of Things,Korakbhakta02,67550363,,,CLOSED,2024-08-31T10:27:51Z,2024-09-17T09:26:46Z,"Hi, We have eclipse ditto installed in an AWSmachine. There, we were creating small amount of things like 400 to 500 things. But, when we inserted approx 20000 things, ditto became unstable . That means it sometime gives response, after that, it gives blank response or time out error while fetching things. How can we solve that?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/2008/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/2008,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86KiAoj,ditto,2324171299,2008,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-09-02T08:47:00Z,2024-09-02T08:47:00Z,"Please share some details..

How did you setup and scale Ditto?
How many instances for the services, how much memory and CPU per instance?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86KiAoj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/2008,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86KpPP4,ditto,2326066168,2008,NA,Korakbhakta02,67550363,,,NA,2024-09-03T09:39:21Z,2024-09-03T09:39:21Z,"

> Please share some details..
> 
> How did you setup and scale Ditto? How many instances for the services, how much memory and CPU per instance?

It is installed as a single instance. memory is 512MB and CPU per instance is 1.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86KpPP4/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/2008,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86KqC6c,ditto,2326277788,2008,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-09-03T11:25:31Z,2024-09-03T11:25:31Z,"Yeah, ok .. then no wonder it crashes - please scale it appropriately both vertically and horizontally.
Here you can get an idea of what was needed in order to scale to 1.000.000 things:
https://eclipse.dev/ditto/2023-10-09-ditto-benchmark.html","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86KqC6c/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/2010,https://api.github.com/repos/eclipse-ditto/ditto/issues/2010,ditto,2506972104,2010,Modifying the MQTT topic within the Javascript mapping,michael-itq,158267618,,,CLOSED,2024-09-05T07:17:45Z,2024-09-11T13:10:07Z,"We want to achive that the MQTT messages are published on a more detailled topic path.
E.g: myPrefix/myNamespace/myThing/attributes/myOwnAttribute

In the connection settings (Path: connection/targets/address) the mqtt topic is defined.
In this setting placehoders can be used (https://eclipse.dev/ditto/2.1/basic-placeholders.html#scope-connections).
Here you can define:
""address"": ""myPrefix/myNamespace/{{ thing:id }}""

But for the part ""/attributes/myOwnAttribute"" we could not find any solution:
- Placehoder for this informtion is not available
- Adding something to the header and using {{header:<header-name>}} seems only to work for existing headers. Headers which are added during runtime seem not to be supported for the mapping/placehoders.
- In the mapping functions mapFromDittoProtocolMsg/mapFromDittoProtocolMsgWrapper we did not find any possibility to directly change the MQTT topic

Is the changing of the MQTT topic basically possible?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/2010/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/2010,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86K8Fqd,ditto,2331007645,2010,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-09-05T09:11:16Z,2024-09-05T09:11:16Z,"Hi.

For MQTT connections, you have special headers available to modify the MQTT topic of a `target`:
https://eclipse.dev/ditto/connectivity-protocol-bindings-mqtt.html#target-header-mapping
> * **mqtt.topic**: overwrites the topic configured for the target
> * **mqtt.qos**: overwrites the qos level configured for the target
> * **mqtt.retain**: controls whether the MQTT retain flag is set on the published message

This can be used in a custom provided [JavaScript payload mapper](https://eclipse.dev/ditto/connectivity-mapping.html#javascript-mapping-engine) in order to modify both MQTT topic and payload to publish on that topic.

So this is doable with custom scripting (the script is stored as part of the Ditto connection).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86K8Fqd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/2010,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86LsPq7,ditto,2343631547,2010,NA,michael-itq,158267618,,,NA,2024-09-11T13:10:07Z,2024-09-11T13:10:07Z,"The usage of the dot as separator was a bit confusing for me, as it is normally used to separate javascript properties.

It has to be used in the following way:
```
function mapFromDittoProtocolMsg(namespace, name, group, channel, criterion,
    action, path, dittoHeaders, value, status, extra) {
    
    let headers = { ""mqtt.topic"" : ""myCustomTopic"" };
    let payload = {
        ""action"": action,
        ""path"": path,
        ""payload"": value
    };
    let textPayload = JSON.stringify(payload);
    let bytePayload = null;
    let contentType = 'application/json';
    
return Ditto.buildExternalMsg(headers, textPayload, bytePayload, contentType);
}
```","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86LsPq7/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/2011,https://api.github.com/repos/eclipse-ditto/ditto/issues/2011,ditto,2512304921,2011,Performance testing ,JoyAlana,162541061,,,CLOSED,2024-09-08T10:12:33Z,2024-10-11T06:32:25Z,I have done normal performance testing using jmeter with required configuration and instancetype for get operation. Max throughput that I got is 200 for 1 million not able to increase throughput..what can I do for increase thoroughput,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/2011/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/2011,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Nc97Z,ditto,2373181145,2011,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-09-25T06:51:47Z,2024-09-25T06:51:47Z,"Did you read the blogpost about the Ditto benchmark done?
https://eclipse.dev/ditto/2023-10-09-ditto-benchmark.html","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Nc97Z/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/2016,https://api.github.com/repos/eclipse-ditto/ditto/issues/2016,ditto,2514101037,2016,Eclipse Ditto and BaSyx Integration,charanhs123,51820986,Charan H S,,CLOSED,2024-09-09T14:15:44Z,2024-10-11T06:35:15Z,"Hello,
The Blog post explaining Ditto and BaSyx integration is no longer working, Please update the post or add a new one to the blog

thank you","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/2016/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/2016,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86LXxIK,ditto,2338263562,2016,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-09-09T14:21:39Z,2024-09-09T14:21:39Z,"Works for me in a private browser window.
Are you sure?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86LXxIK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/2016,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86LX49J,ditto,2338295625,2016,NA,charanhs123,51820986,Charan H S,,NA,2024-09-09T14:34:14Z,2024-09-09T14:34:14Z,"Hello , Thanks for the quick reply
I am attaching the screen shot below of issue , the Steps you have provided doesn't actually seems to work like depicted in the blog, and the aasGui is not working like shown in the Blog example as it doesn't open up the tree view and element details

![Screenshot from 2024-09-09 16-32-41](https://github.com/user-attachments/assets/1f923f39-43fd-4bc5-9361-bad327a32812)
![Screenshot from 2024-09-09 16-32-30](https://github.com/user-attachments/assets/993adc56-e414-4d68-9dea-505906d44070)
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86LX49J/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/2016,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86LX7iO,ditto,2338306190,2016,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-09-09T14:38:35Z,2024-09-09T14:38:35Z,"Ah, I understood that the page cannot be loaded.
I do not have interest in keeping that one-time example working all the time.

Maybe you can reach out to the authors of the post @bs-jokri and @eriksven to get some help.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86LX7iO/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/2016,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86LYvEr,ditto,2338517291,2016,NA,charanhs123,51820986,Charan H S,,NA,2024-09-09T16:07:01Z,2024-09-09T16:07:01Z,hello @bs-jokri and @eriksven I hope you are interested in replying ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86LYvEr/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/2016,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Ljn85,ditto,2341371705,2016,NA,eriksven,44381577,Sven Erik Jeroschewski,svenerik.jeroschewski@bosch.com,NA,2024-09-10T16:07:04Z,2024-09-10T16:07:04Z,"Hello @charanhs123 ,
It is great that you show interest in reproducing the blog post. To be sure, are you talking about the post from: https://eclipse.dev/ditto/2024-02-27-integrating-ditto-aas-basyx.html ? 
As mentioned by @thjaeckle the nature of the blog post was to demonstrate what was possible at the time of writing. There is a chance that using a more recent version of any of the involved components might lead to breaking changes.
Which versions did you use for the involved components?

Could you please elaborate on what you did to get to the situation from the screenshots?
What do you want to achieve at the end of the day?

In your screenshot, it says that the status of the connection with the AAS registry is ""offline"". So it appears that there is either:

- a problem with the connectivity between the AAS Web UI and the AAS registry and AAS server
- a problem with the deployment of the AAS registry and AAS server

Can you make direct HTTP calls to the AAS registry or AAS server, e.g., through cURL, Swagger, etc., from the same machine from which you call the AAS WebUI?
In the blog post, there are some examples of how to interact with the AAS server and registry. Using and setting up the AAS Web-UI is more an addition to showing how the integration between Ditto and AAS worked. In case of more detailed questions about the AAS WebUI, it is better to get in contact with those developers.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Ljn85/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/2016,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Lpnc9,ditto,2342942525,2016,NA,charanhs123,51820986,Charan H S,,NA,2024-09-11T08:04:52Z,2024-09-11T08:04:52Z,"Hello @eriksven thanks for the reply
So, I wanted to present an Interface in the Master Thesis for Eclipse Ditto using BaSyx, so I worked on your examples to implement the tree view of the Thing we create in Ditto but even with the default example in the Blog Post, I was not able to reproduce like what s been shown.

I can access and change the features and other points from the terminal and able to view in JSON format when looked in the browser under 
http://192.168.10.15:8082/aasServer/shells/ and for the registry as well, but like I have shown on the screenshot its showing ""Status: Offline"" even though the registry and server are connected.

The deployment of the AAS registry and Server is proper there s no issue with that, but I cannot view the submodels and the elements on GUI.

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Lpnc9/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/2016,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86L_VCA,ditto,2348634240,2016,NA,max-grzanna,74294538,Max Grzanna,,NA,2024-09-13T10:44:17Z,2024-09-13T10:44:17Z,"Hello @charanhs123,
to better understand your problem, it would be helpful if you could list the versions of the components you are using. You seem to be using a newer version of WebUI. This can lead to conflicts and the endpoints may have changed. 
Were you able to find any anomalies in the logs of the components?
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86L_VCA/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/2016,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86L_XJd,ditto,2348642909,2016,NA,charanhs123,51820986,Charan H S,,NA,2024-09-13T10:48:56Z,2024-09-13T10:48:56Z,"hello @max-grzanna i am using v - 230703 
i am attaching my Docker-compose.yml i am using 

`
version: '3.8'

services:
  aasRegistry:
    image: eclipsebasyx/aas-registry:1.5.1
    container_name: aasRegistry
    ports:
      - ""8083:4000""
    networks:
      - basyx-network

  aasServer:
    image: eclipsebasyx/aas-server:1.5.1
    container_name: aasServer
    ports:
      - ""8082:4001""
    networks:
      - basyx-network

  aasGui:
    image: eclipsebasyx/aas-gui:v230703
    container_name: aasGui
    ports:
      - ""5000:3000""
    networks:
      - basyx-network

networks:
  basyx-network:
    driver: bridge
`","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86L_XJd/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/2016,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Pcogq,ditto,2406647850,2016,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-10-11T06:35:11Z,2024-10-11T06:35:11Z,"Closing, not Ditto related, but Basyx","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Pcogq/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/2019,https://api.github.com/repos/eclipse-ditto/ditto/issues/2019,ditto,2525264935,2019,Add option to authenticate to MongoDB on AWS via AWS IAM,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2024-09-13T16:50:29Z,2024-09-17T12:30:28Z,"The Java driver of MongoDB is able to authenticate to a MongoDB instance via [AWS IAM](https://www.mongodb.com/docs/drivers/java/sync/v4.3/fundamentals/auth/#mongodb-aws).

This has the benefit that no username/password, so no credentials have to be configured, rotated, etc.

The default way of doing this authentication however is to add the aws sdk for Java - which has a lot of transitive dependencies.
So the preferred way of doing this authentication would instead be to do a single HTTP API call to the AWS IAM API in order to assume a role.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/2019/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/2022,https://api.github.com/repos/eclipse-ditto/ditto/issues/2022,ditto,2535610868,2022,"Support logging WARNing logs when WoT model enforcement failed, but still apply change",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2024-09-19T08:10:59Z,2024-09-24T09:52:37Z,"Make it configurable whether to, for an ""invalid update"" (not confirming to the WoT model):
* fail the ""modify command"" (so the current behavior, completely rejecting the update by Ditto)
* log a WARN / ERROR (in Ditto's ""things"" service), but still apply the ""modify command""
* completely ignore validation errors / don't even validate in the first place","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/2022/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/2029,https://api.github.com/repos/eclipse-ditto/ditto/issues/2029,ditto,2544714777,2029,Configure workflow for running system tests,alstanchev,50709547,Aleksandar Stanchev,,CLOSED,2024-09-24T08:26:34Z,2024-09-27T19:27:20Z,"It is goot to run the system tests from ditto-testing repo against PRs and master branch.
Running from PRs should be manual after a review from a maintainer that running is safe.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/2029/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/2029,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86NTKdM,ditto,2370611020,2029,NA,alstanchev,50709547,Aleksandar Stanchev,,NA,2024-09-24T08:29:01Z,2024-09-24T08:29:01Z,@thjaeckle i am almost ready with that. Any input for the ways we want to be able to run the tests is welcome. Currently i am going in the direction of manual run with providing the pranch/PR as input. ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86NTKdM/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/2029,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86NT73z,ditto,2370813427,2029,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-09-24T09:53:45Z,2024-09-24T09:53:45Z,"@alstanchev awesome, that sounds great :)

> Currently i am going in the direction of manual run with providing the pranch/PR as input.

I think this is perfect as first step.

Looking much forward to this 👍 ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86NT73z/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/2030,https://api.github.com/repos/eclipse-ditto/ditto/issues/2030,ditto,2545276729,2030,digital twin tutorial,mfatihkoc,44057247,,,CLOSED,2024-09-24T12:32:56Z,2024-10-10T05:06:21Z,"there is a testbed RAN is composed of a Base Station and multiple UEs, all deployed as USRPs. the dataset is containing network performance features with benign and malicious attacks where 4G mobility pattern is included (car, padestrian). I want to use ditto as a digital twin framework but I could not start. is there any tutorial for networking aspects directed to vehicular communication?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/2030/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/2030,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Nc9jD,ditto,2373179587,2030,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-09-25T06:50:51Z,2024-09-25T06:50:51Z,"> is there any tutorial for networking aspects directed to vehicular communication?

No, there is no such thing.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86Nc9jD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/2040,https://api.github.com/repos/eclipse-ditto/ditto/issues/2040,ditto,2574965518,2040,UI - Can not create new environment,thfries,20593339,Thomas Fries,,CLOSED,2024-10-09T06:54:46Z,2024-10-09T07:59:08Z,"Hello,

since 3.6.0, you can not create a new environment on the ""Manage"" page.

![image](https://github.com/user-attachments/assets/76b8ebdf-4f9b-49a4-89bb-6f412c907f66)



Workaround: creating a new environment on the ""JSON"" page works with a valid environment JSON
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/2040/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/2053,https://api.github.com/repos/eclipse-ditto/ditto/issues/2053,ditto,2618852293,2053,"Periodically log ""slowest Ditto search queries"" in order to find slow queries",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2024-10-28T16:00:52Z,2025-01-27T15:43:09Z,"Idea:
* Find out the slowest RQL queries in order to be able to optimize use of Ditto search
* Consider both, `query` **and** `count` (count is slower than query)
* Log them with a special logger so that they can be easily found and e.g. shown on dashboards
* Enhance log (or MDC) with hints to the calling application (e.g. originator, origin, etc.)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/2053/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/2055,https://api.github.com/repos/eclipse-ditto/ditto/issues/2055,ditto,2624186039,2055,Respond with current `revision` (as header) of Ditto managed entities on each API call,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2024-10-30T13:53:13Z,2025-02-14T13:55:41Z,"Currently, the current revision is only returned when e.g. modifying a complete thing (as part of the `etag` header).

It would however be beneficial if the current revision is always returned as Ditto defined header.
* for modifying requests
* but also for retrieving requests

That way, an implementation can e.g. use the ""revision"" to do a conditional update in the next request.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/2055/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/2055,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86bM4l-,ditto,2603846014,2055,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2025-01-21T07:26:22Z,2025-01-21T07:26:22Z,"It would be also good if we could use `_revision` in a `condition` to update things .. 
That way, just by using the header and a `eq(_revision,42)` with the next update, optimistic locking can be achieved. Ditto will reject the update if another change was done in the meantime.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86bM4l-/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/2056,https://api.github.com/repos/eclipse-ditto/ditto/issues/2056,ditto,2626235531,2056,Simplify helm chart by resolving ingress controller as an external dependency,kalinkostashki,101703236,Kalin Kostashki,,OPEN,2024-10-31T08:04:54Z,2024-10-31T11:52:08Z,"Currently we have the nginx-ingress controller which does its job well, but there is some overhead introduced there.
They idea of having all its necessary resources as templates maybe wasn't optimal.

I would like to suggest that we move on to the official nginx-ingress [charts](https://github.com/kubernetes/ingress-nginx/tree/main/charts/ingress-nginx) as a dependency.
That way we could only rework the values.yaml to coform to the requirements of that helm chart and remove manual resources we are currently supporting :)
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/2056/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/2056,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86SAvOj,ditto,2449666979,2056,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-10-31T11:52:06Z,2024-10-31T11:52:06Z,Sounds good 👍 ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86SAvOj/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/2058,https://api.github.com/repos/eclipse-ditto/ditto/issues/2058,ditto,2638217960,2058,Enable Connections and Policies to be configured by ConfigMaps,mladBlum,45092755,Dominik Mlasko,,OPEN,2024-11-06T14:15:48Z,2025-01-27T15:42:52Z,"Setting up Eclipse Ditto fully automatically in a Kubernetes cluster using Helm is incredibly practical. However, to achieve a truly automated setup, there are some missing configuration options, Connections and Policies.

Currently, after successfully setting up Ditto, Connections and Policies need to be configured via API call. This requires an extra tool that monitors Ditto and executes the necessary API calls after Ditto has started. 
Enabling the configuration of Connections and Policies within ConfigMaps would significantly simplify the deployment. Ditto could automatically read these resources and configure itself accordingly upon startup. This approach aligns with Kubernetes best practices and would streamline the deployment process.

I’m not on the development team, but here are a few thoughts. To implement such a feature, Ditto could be enhanced to process configurations provided by files in a designated folder, where ConfigMaps would be mounted.
This feature is probably also a benefit for classic server installations as well, allowing server administrators to pass the entire configuration at startup.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/2058/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/2058,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86SoiSW,ditto,2460099734,2058,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-11-06T15:38:58Z,2024-11-06T15:38:58Z,"Sure, that could be an additional way of configuring policies and connections.
This however has the downside that a restart of the pod is required to react on updated configmaps / files.
Maybe a file (e.g. via inode) watch would also work to apply config changes without restart.

The benefit of the current approach is that policies/connections can be dynamically added, adjusted, etc. - without any impact to all other policies/connections.  
In my company's setup, we make use of a [terraform-provider-restapi](https://github.com/Mastercard/terraform-provider-restapi) in order to manage policies and connection. Terraform (or Terragrunt in our case) ""checks"" the resources via Ditto's HTTP API and updates them in-place (if necessary), creates or deletes them, if needed.

If you want to contribute that in a way which does not destroy the current dynamic way, we surely will accept the contribution. 
For our companies use-case I don't see much value, as we use connections and policies very dynamically - they are often changed, new ones come, old ones go, etc.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86SoiSW/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/2065,https://api.github.com/repos/eclipse-ditto/ditto/issues/2065,ditto,2678046477,2065,Migrating old version ditto's data to new version ditto,Korakbhakta02,67550363,,,CLOSED,2024-11-21T05:20:00Z,2024-11-22T10:44:41Z,"I was using ditto 3.2.1 earlier and it was storing data in a external mongodb. Now, I upgraded ditto to 3.6.2. The database I kept same. I am able to get the things. But when creating thing, I am getting error:
``
MongoCommandException: Command failed with error 85 (IndexOptionsConflict): 'Index already exists with a different name: akka_persistence_metadata_pid' on server <mongoip>:27017. The full response is {\""ok\"": 0.0, \""errmsg\"": \""Index already exists with a different name: akka_persistence_metadata_pid\"", \""code\"": 85, \""codeName\"": \""IndexOptionsConflict\""}\n\tat
``
when I checked the database, index name is 'akka_persistence_metadata_pid' and for the latest ditto, index name is things_metadata_index for which the conflict is happening. SO,I want to know if  any other such conflicts will happen or not?And how to migrate the data from old ditto to latest ditto?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/2065/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/2065,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86UnyAG,ditto,2493456390,2065,NA,alstanchev,50709547,Aleksandar Stanchev,,NA,2024-11-22T10:44:39Z,2024-11-22T10:44:39Z,"https://eclipse.dev/ditto/release_notes_340.html#swapping-the-akka-toolkit-with-its-fork-apache-pekko
https://eclipse.dev/ditto/release_notes_340.html#migration-notes","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86UnyAG/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/2066,https://api.github.com/repos/eclipse-ditto/ditto/issues/2066,ditto,2678190205,2066,validation of model of a thing through definition ,Korakbhakta02,67550363,,,CLOSED,2024-11-21T06:27:35Z,2024-12-03T02:23:37Z,"I have created  a thing with a definition by which thing model is created. The ditto version is 3.6.2. When I am doing
 modification which is against the definition model, it shall throw validation error, but it is just accepting. I have checked the helm values.yaml, there all the validation are true.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/2066/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/2066,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86UiaGl,ditto,2492047781,2066,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2024-11-21T19:07:41Z,2024-11-21T19:07:41Z,Could you please share a reproducer of the Api calls which lead to this and the used model? ,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86UiaGl/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/2067,https://api.github.com/repos/eclipse-ditto/ditto/issues/2067,ditto,2682886819,2067,Aggregation based metrics not supporting boolean values in filters,alstanchev,50709547,Aleksandar Stanchev,,CLOSED,2024-11-22T11:27:29Z,2024-11-22T21:14:44Z,,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/2067/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/2072,https://api.github.com/repos/eclipse-ditto/ditto/issues/2072,ditto,2704273442,2072,"Add option to configure pre-defined ""extraFields"" to be added to each emitted thingEvent",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2024-11-29T07:56:37Z,2025-02-03T06:46:28Z,"With the Ditto [Signal Enrichment](https://eclipse.dev/ditto/basic-enrichment.html) it is possible to dynamically configure for a single subscriber of ""Thing Events"" (whenever a Thing is modified) to get additional fields, which were not part of the change.  
For example, all `attributes` or a special `attribute` which is required for the event consumer to have a context.

This works and is great.  
However, this is also quite ""costly"" for Ditto - as the Gateway (for SSE and WebSocket) or Connectivity service of Ditto has to do another ""internal"" round-trip to fetch those `extraFields`. There are optimizations in place in order to cache them in a ""smart cache"" (which updates itself, etc.), but in the worst case, e.g. if the cache is full, this means a lot of roundtrips and networking.

There are scenarios when specific fields are always needed - that's why I suggest to configure (in the `things` service configuration) pre-defined `extraFields` which are pro-actively always sent in a DittoHeader field.  
When the Connection or WebSocket ""demands"" this extraField (and e.g. no other), it can just use it from this header without additional roundtrips.  
This should be configurable on a namespace level.

Example configuration:
```hocon
pre-defined-extra-fields = [
  {
    namespaces = [
      ""*""
    ]
    condition = ""exists(definition)"" # could be an option to also support a RQL condition here
    extra-fields = [
      ""definition""
    ]
  },
  {
    namespaces = [
      ""org.eclipse.ditto.lamps""
    ]
    extra-fields = [
      ""attributes/manufacturer"",
      ""attributes/serial""
    ]
  }
]
```

One example use case behind this:
* We want to always get the `definition` of a Thing to ""know"" its current thing model (and semantic version of it)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/2072/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/2072,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86ZIdoH,ditto,2569132551,2072,NA,alstanchev,50709547,Aleksandar Stanchev,,NA,2025-01-03T12:12:57Z,2025-01-03T12:12:57Z,"I was thinking about the possibility if the modification is coming from a ditto connection that maybe there with a header mapping we can define extra fields, This header will be checked at the place where the static config is used and extend the functionality to also work without the static config but per connection config. 
@thjaeckle  What do you think for such an extension to your aproach?","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86ZIdoH/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/2072,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86ZIffI,ditto,2569140168,2072,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2025-01-03T12:19:35Z,2025-01-03T12:19:35Z,"The ""problem"" I see with this approach is that the ""producer"" of a change to a Ditto thing can not be aware of all the consumers ..  
That's why I think configuring it at the ""source connection"" is not really feasible.

In a very closed system this might work - but then also the static configuration works well ..

The approach could be extended with that approach - the ""source"" defining some ""pre defined"" extraFields to emit (just as an additional Ditto header), I would however rather move this to another follow-up issue - as we do not have a practical need for that as part of this issue.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86ZIffI/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/2074,https://api.github.com/repos/eclipse-ditto/ditto/issues/2074,ditto,2729214682,2074,Creating a Thing with PATCH (merge patch) semantic will retain `null` values which is invalid,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2024-12-10T07:08:37Z,2025-01-02T15:56:19Z,"In Ditto it is possible to also create Things with [Merge updates](https://eclipse.dev/ditto/httpapi-concepts.html#merge-updates).  
This either updates an existing thing or creates it when it does not yet exist.

The implemented [Merge Patch RFC 7396](https://tools.ietf.org/html/rfc7396) defines that `null` values have a special meaning: they are used to delete fields from a JSON.

When Ditto however creates the Thing if it was not yet existing when doing a PATCH, this semantic is not applied which is not adhering to the RFC.  
Ditto must therefore ""delete"" also JSON fields with `null` values when creating a not-yet existing Thing on a PATCH request.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/2074/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/2077,https://api.github.com/repos/eclipse-ditto/ditto/issues/2077,ditto,2745097962,2077,Missing headers added from published messeage added by js payload mapper,alstanchev,50709547,Aleksandar Stanchev,,CLOSED,2024-12-17T14:30:50Z,2024-12-18T08:18:10Z,Headers added to an outbound message by a js mapper can be missing in the published message.,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/2077/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/2081,https://api.github.com/repos/eclipse-ditto/ditto/issues/2081,ditto,2755183948,2081,Passing application/merge-patch+json header for merge to kafka in ditto connection ,Korakbhakta02,67550363,,,CLOSED,2024-12-23T04:26:30Z,2024-12-23T05:01:55Z,"Hi, I am trying to send merge command to kafka  and passing header:
Message headers: [kafka.timestamp=1734927655619, kafka.topic=OTAtopic, content-type=application/merge-patch+json, kafka.key=1, correlation-id=c984d458-adaf-4a92-9d7c-692916e6877b]

But it is giving error:
""Got exception <mediatype.unsupported> when processing external message with mapper <Ditto>: The Content-Type header was empty or not present. Please set Content-Type header to \""application/merge-patch+json\"" for this resource - Message headers: [kafka.timestamp=1734927655619, kafka.topic=OTAtopic, content-type=application/merge-patch+json, kafka.key=1, correlation-id=c984d458-adaf-4a92-9d7c-692916e6877b]

Is any extra header or any extra step  have to be passed? 

","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/2081/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/2084,https://api.github.com/repos/eclipse-ditto/ditto/issues/2084,ditto,2767186054,2084,Update to Rhino 1.8.0 for Ditto connectivity JavaScript payload mapper,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2025-01-03T08:40:08Z,2025-01-03T08:40:08Z,See release notes: https://github.com/mozilla/rhino/releases/tag/Rhino1_8_0_Release,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/2084/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/2096,https://api.github.com/repos/eclipse-ditto/ditto/issues/2096,ditto,2792193937,2096,Websocket handler failed with Thing ID 'thing-name-with-stripped-namespace' is not valid!,alstanchev,50709547,Aleksandar Stanchev,,CLOSED,2025-01-16T09:40:55Z,2025-01-16T10:33:20Z,"after [add missing thingId to log of failed WoT validations](https://github.com/eclipse-ditto/ditto/commit/f18d585c15b00c8776e3bc2b565112f539a512a3) there is a problem at [ThingErrorResponse.java#L78](https://github.com/eclipse-ditto/ditto/blob/8be61d596dfc337993770fd2212a328f4e0fec3f/things/model/src/main/java/org/eclipse/ditto/things/model/signals/commands/ThingErrorResponse.java#L78) expecting the ENTITY_ID to contain a type prefix.

`org.eclipse.ditto.things.model.ThingIdInvalidException: Thing ID 'type-stripped-entity-id' is not valid!
	at org.eclipse.ditto.things.model.ThingIdInvalidException$Builder.doBuild(ThingIdInvalidException.java:141)
	at org.eclipse.ditto.things.model.ThingIdInvalidException$Builder.doBuild(ThingIdInvalidException.java:122)
	at org.eclipse.ditto.base.model.exceptions.DittoRuntimeExceptionBuilder.build(DittoRuntimeExceptionBuilder.java:176)
	at org.eclipse.ditto.things.model.ThingId.wrapInThingIdInvalidException(ThingId.java:129)
	at org.eclipse.ditto.things.model.ThingId.of(ThingId.java:65)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.eclipse.ditto.things.model.signals.commands.ThingErrorResponse.of(ThingErrorResponse.java:79)
	at org.eclipse.ditto.gateway.service.endpoints.routes.websocket.WebSocketRoute.buildThingErrorResponse(WebSocketRoute.java:909)
	at org.eclipse.ditto.gateway.service.endpoints.routes.websocket.WebSocketRoute.jsonifiableToAdaptable(WebSocketRoute.java:898)
	at org.eclipse.ditto.gateway.service.endpoints.routes.websocket.WebSocketRoute.lambda$postprocess$ff444281$1(WebSocketRoute.java:765)
	at org.apache.pekko.stream.javadsl.Flow.$anonfun$mapAsync$1(Flow.scala:829)
	at org.apache.pekko.stream.impl.fusing.MapAsync$$anon$30.onPush(Ops.scala:1322)
	at org.apache.pekko.stream.impl.fusing.GraphInterpreter.processPush(GraphInterpreter.scala:555)
	at org.apache.pekko.stream.impl.fusing.GraphInterpreter.execute(GraphInterpreter.scala:433)
	at org.apache.pekko.stream.impl.fusing.GraphInterpreterShell.runBatch(ActorGraphInterpreter.scala:662)
	at org.apache.pekko.stream.impl.fusing.ActorGraphInterpreter$SimpleBoundaryEvent.execute(ActorGraphInterpreter.scala:71)
	at org.apache.pekko.stream.impl.fusing.ActorGraphInterpreter$SimpleBoundaryEvent.execute$(ActorGraphInterpreter.scala:67)
	at org.apache.pekko.stream.impl.fusing.ActorGraphInterpreter$BatchingActorInputBoundary$OnNext.execute(ActorGraphInterpreter.scala:114)
	at org.apache.pekko.stream.impl.fusing.GraphInterpreterShell.processEvent(ActorGraphInterpreter.scala:637)
	at org.apache.pekko.stream.impl.fusing.ActorGraphInterpreter.org$apache$pekko$stream$impl$fusing$ActorGraphInterpreter$$processEvent(ActorGraphInterpreter.scala:813)
	at org.apache.pekko.stream.impl.fusing.ActorGraphInterpreter$$anonfun$receive$1.applyOrElse(ActorGraphInterpreter.scala:831)
	at org.apache.pekko.actor.Actor.aroundReceive(Actor.scala:547)
	at org.apache.pekko.actor.Actor.aroundReceive$(Actor.scala:545)
	at org.apache.pekko.stream.impl.fusing.ActorGraphInterpreter.aroundReceive(ActorGraphInterpreter.scala:729)
	at org.apache.pekko.actor.ActorCell.receiveMessage(ActorCell.scala:590)
	at org.apache.pekko.actor.ActorCell.invoke(ActorCell.scala:557)
	at org.apache.pekko.dispatch.Mailbox.processMailbox(Mailbox.scala:280)
	at org.apache.pekko.dispatch.Mailbox.run(Mailbox.scala:241)
	at kamon.instrumentation.executor.ExecutorInstrumentation$InstrumentedForkJoinPool$TimingRunnable.run(ExecutorInstrumentation.scala:800)
	at org.apache.pekko.dispatch.ForkJoinExecutorConfigurator$PekkoForkJoinTask.exec(ForkJoinExecutorConfigurator.scala:57)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.eclipse.ditto.base.model.entity.id.NamespacedEntityIdInvalidException: Namespaced entity ID 'gateway-7b4135e9-5e5c-4238-8668-edb600a3afe2' is not valid!
	at org.eclipse.ditto.base.model.entity.id.NamespacedEntityIdInvalidException$Builder.doBuild(NamespacedEntityIdInvalidException.java:182)
	at org.eclipse.ditto.base.model.entity.id.NamespacedEntityIdInvalidException$Builder.doBuild(NamespacedEntityIdInvalidException.java:159)
	at org.eclipse.ditto.base.model.exceptions.DittoRuntimeExceptionBuilder.build(DittoRuntimeExceptionBuilder.java:176)
	at org.eclipse.ditto.base.model.entity.id.AbstractNamespacedEntityId.<init>(AbstractNamespacedEntityId.java:63)
	at org.eclipse.ditto.things.model.ThingId.<init>(ThingId.java:39)
	at org.eclipse.ditto.things.model.ThingId.lambda$of$0(ThingId.java:65)
	at org.eclipse.ditto.things.model.ThingId.wrapInThingIdInvalidException(ThingId.java:127)
	... 31 common frames omitted`","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/2096/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/2096,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86arQWE,ditto,2595030404,2096,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2025-01-16T09:42:53Z,2025-01-16T09:42:53Z,"My bad :/

Thanks for the report, I'll provide a fix and a release, this is a nasty/blocking bug.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86arQWE/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/2098,https://api.github.com/repos/eclipse-ditto/ditto/issues/2098,ditto,2794730545,2098,Support Ditto searches comparing values of the twin data,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2025-01-17T07:01:01Z,2025-01-27T15:42:36Z,"There are scenarios where one would not like to define a concrete value to search for, e.g.:
```
lt(features/heartbeat/properties/lastReceiveTime,time:now-2h)
```

But instead compare 2 (or more) values in the twin, e.g. (in this example, relying on that `nextExpectedReceiveTime` is updated with each `lastReceiveTime` dynamically to the next expected ""heartbeat"" message from a device):
```
lt(features/heartbeat/properties/lastReceiveTime,features/heartbeat/properties/nextExpectedReceiveTime)
```

I found that the MongoDB `$expr` might be able to do such queries:
[Compare Two Fields from a Single Document](https://www.mongodb.com/docs/v7.0/reference/operator/query/expr/#compare-two-fields-from-a-single-document)

We would need to:
* make sure that `$expr` really works for such a use case
* define how the RQL queries could look like, targeting a dynamic value from the twin
* enhance Ditto's search service to be able to map to BSON
* enhance Ditto's `ThingPredicateVisitor` to also support this (e.g. in order to be used within `condition`)","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/2098/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/2099,https://api.github.com/repos/eclipse-ditto/ditto/issues/2099,ditto,2795744979,2099,"Automatically let Ditto figure out ""pre-defined"" extraFields to send along with events and messages",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2025-01-17T15:30:44Z,2025-01-27T15:42:36Z,"Following up on #2072 - where static configuration was added which ""pre-defined"" `extraFields` to proactively send with Thing ""Events"" and ""Messages"" in order to reduce roundtrips in the cluster to retrieve the `extraFields`.

It would be even better to let Ditto automatically figure out
* for which namespaces
* which ""extraFields"" are requested frequently
* and pro-actively start sending them, aiming to reduce internal fetching of `extraFields`

Ditto could e.g. track how often a `RetrieveThing` command (in scope of ""enrichment"" - which could be identifiable via an internal header) for specific fields of a namespace is done and automatically build up a cache of ""most frequently"" asked for fields.  
Then start to send them pro-actively as pre-defined extraFields (see #2072 for the fundamentals on that).

Reasoning of this is that e.g. connections have rather statically configured ""extraFields"" - and via connections Ditto most likely gets most of the ""extraFields"" enrichment requests. 
Sporadically, also WebSocket and SSE (Server Sent Event) may ask for `extraFields` - but this should not be much, so ideally such things would not be pro-actively added by the mechanism (to also not send too much stuff pro-actively).","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/2099/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/2101,https://api.github.com/repos/eclipse-ditto/ditto/issues/2101,ditto,2801270045,2101,"Add support for ""impersonating"" users in Ditto",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,OPEN,2025-01-21T09:48:45Z,2025-01-27T15:42:25Z,"In application development it is often required to e.g. inspect data or a user interface ""through the eyes"" of a certain user.  
E.g. in order for an engineer to be able to get the exact same information shown as a certain user.  
For that, it would be great if Ditto could allow certain users to ""impersonate"" certain other users.

I don't think it makes sense to add this to Ditto policies, but to statically configure this.

First ideas on how to configure and actually perform the ""impersonation"" follow in this issue.

## Configuration

This is a very delicate feature (regarding security) - when wrongly configured or applied, Ditto authorization can be bypassed.  
It is therefore important to be able to really strictly configure:
* which auth subjects (users/groups) are allowed to impersonate
* which auth subjects (users/groups) can be impersonated
* for which entities impersonation should work
   * things
   * policies (more delicate, as they control authorization)
   * connections (also delicate, as they could be used to tamper with data or publish data to the outside)
* additional rules for impersonation
   * limiting it to certain namespaces (for things + policies)
   * limiting it to certain permissions (READ / WRITE)
   * e.g. presence of other HTTP headers (to be injected e.g. via infrastructure to provide another ""factor"" - thinking of MFA)
   * integration with OTP mechanisms? 

## Do the impersonation

* this has to be possible for all Ditto HTTP / Websocket / SSE APIs
* the APIs have to be usable as they normally would
* that leads to the suggestion to impersonate using HTTP headers
   * e.g.: `impersonate-as: ""[\""some-idp:some-sub\"",\""some-idp:some-group\""]""`","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/2101/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/2101,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86bORxV,ditto,2604211285,2101,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2025-01-21T09:54:19Z,2025-01-21T09:54:19Z,"Also check existing standards on this, e.g. on OAuth:
https://curity.io/resources/learn/impersonation-flow-approaches/#protocol-standards","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86bORxV/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/2106,https://api.github.com/repos/eclipse-ditto/ditto/issues/2106,ditto,2818238521,2106,Add support for diverting twin responses to another connection,alstanchev,50709547,Aleksandar Stanchev,,OPEN,2025-01-29T13:33:16Z,2025-01-30T13:18:10Z,"Sometimes it is convenient the twin command responses to be sent to a destination, different from the source connection, where the commands orginated from.
The destination could be defined in a target of a separate (maybe dedicated) connection, in which the address and header mapping configuration of responses should be placed.

Implementation proposal:
In OutboundMappingProcessorActor of the source connection, the outbound messages (responses) could be diverted (or not, depending on the source configuration) to the target connection OutboundMappingProcessorActor by sending a pubSub message at a specialized for this purpose topic. OutboundMappingProcessorActor of the target connection should be subscribed to listen to messages on this topic and continue the flow with received messages.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/2106/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/2106,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86cR7es,ditto,2621945772,2106,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2025-01-29T15:18:26Z,2025-01-29T15:18:26Z,"Hm, I understand the feature request.  
Would you like to configure the `connectionId` then in the connection which should re-route the responses?
And as well a `target` (address?) of the connection to deliver responses to?

When implementing this, the approach must be really well thought through ..
E.g. in order to preserve and guarantee message order in case a connection is scaled > 1 ""clients"", the pub/sub would also have to apply a sharding based on e.g. `thingId` in order to always send messages responses for a thing ""A"" via the same connectivity instance.

Currently (as far as I remember) the responses are sent via Pekko to the original `sender` of a message (the original ActorRef is transported and preserved across the whole cluster).  
For another sender than the actual sender to get the response instead, one could either:
* send back to the original sender first, then publish to another connection (simple, but inefficient - needs very likely another ""hop"" in the cluster for each response to deliver to another connection)
* inject ""target connection to receive response"" as `sender` of the Pekko message ","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86cR7es/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/2106,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86cbpWD,ditto,2624492931,2106,NA,alstanchev,50709547,Aleksandar Stanchev,,NA,2025-01-30T13:17:06Z,2025-01-30T13:17:06Z,"The idea to change the sender and save a hop is really cool 👍 . We will look into if and how it could be done.

The connectionId of the rerouting connection maybe can be configured in the source connection as a header mapping. It is not clean to configure it as a some kind of special reply topic as in the inbound direction would be strange to try to access the targets to determine if a possible future response should be redirected. The Target config will be in the rerouting connection. 
One fuzzy thing is how to configure the expectedResponseTypes (error, response, nack). 
Maybe in the additional config of the replying connection. 🤔","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86cbpWD/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/2107,https://api.github.com/repos/eclipse-ditto/ditto/issues/2107,ditto,2822535934,2107,"Need Example for ""Update Twin with Live Response"" Mapper",Wovlek,186550643,,,OPEN,2025-01-31T06:13:21Z,2025-02-03T07:48:36Z,"Hi,

I’m trying to use the ""Update Twin with Live Response"" Mapper to update a thing’s features directly from live device metrics but find the documentation [here](https://eclipse.dev/ditto/connectivity-mapping.html#updatetwinwithliveresponse-mapper) limited.

Can you provide:

1. Example connection setup with this mapper (e.g., MQTT/Kafka)
2. Sample payload & mapping to update a twin from live device data (e.g., temperature, power level)?
Would appreciate a complete example. Thanks!","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/2107/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/2108,https://api.github.com/repos/eclipse-ditto/ditto/issues/2108,ditto,2822816485,2108,MQTT connection fails to reconnect in case of DDNS record IP adress change,vvasilevbosch,112558685,Vasil Vasilev,,CLOSED,2025-01-31T08:56:22Z,2025-02-03T13:30:30Z,"hivemq-mqtt-client uses java.net.InetSocketAddress for server address and caches it. Currently, ditto provides [resolved InetSocketAddress](https://github.com/eclipse-ditto/ditto/blob/9322980d2c13936831d599316ad231daca00986b/connectivity/service/src/main/java/org/eclipse/ditto/connectivity/service/messaging/mqtt/hivemq/client/HiveMqttClientFactory.java#L138), which is never re-resolved and not handled by the hivemq mqtt client. This causes mqtt connections to reconnect without success infinitely.
","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/2108/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/2111,https://api.github.com/repos/eclipse-ditto/ditto/issues/2111,ditto,2834873205,2111,not able to pull image in docker,Khublal-Kumar,132155417,,,CLOSED,2025-02-06T08:30:08Z,2025-02-06T08:59:39Z,error pulling image configuration: download failed after attempts=6: dialing docker-images-prod.6aa30f8b08e16409b46e0173d6de2f56.r2.cloudflarestorage.com:443 container via direct connection because has no HTTPS proxy: connecting to docker-images-prod.6aa30f8b08e16409b46e0173d6de2f56.r2.cloudflarestorage.com:443: dial tcp: lookup docker-images-prod.6aa30f8b08e16409b46e0173d6de2f56.r2.cloudflarestorage.com: no such host,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/2111/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
comment,https://api.github.com/repos/eclipse-ditto/ditto/issues/2111,https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86dTrVK,ditto,2639181130,2111,NA,thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,NA,2025-02-06T08:47:48Z,2025-02-06T08:47:48Z,What does that have to do with Ditto?,"{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/comments/IC_kwDOBTx7C86dTrVK/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
issue,https://api.github.com/repos/eclipse-ditto/ditto/issues/2115,https://api.github.com/repos/eclipse-ditto/ditto/issues/2115,ditto,2842026227,2115,"Ditto connections metrics are lacking type ""other"" - as connection logs report to",thjaeckle,1331526,Thomas Jaeckle,thomas.jaeckle@beyonnex.io,CLOSED,2025-02-10T10:45:45Z,2025-02-12T08:33:39Z,"Currently, whenever an Exception occurred e.g. in a Ditto connection's payload mapper, Ditto will produce a ""connection log entry"" with category `other` showing the exception/error.  
There is however no ""metric"" for category ""other"" which would count the very same error.

This is problematic as the Connection loggers are only meant to be activated temporarily when debugging or developing connections or payload mappers.  
It would be good to see on the metric level (as metrics are always gathered) if a connection contains errors/failures in the ""other"" category.","{""url"": ""https://api.github.com/repos/eclipse-ditto/ditto/issues/2115/reactions"", ""total_count"": 0, ""+1"": 0, ""-1"": 0, ""laugh"": 0, ""hooray"": 0, ""confused"": 0, ""heart"": 0, ""rocket"": 0, ""eyes"": 0}"
